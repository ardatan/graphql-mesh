extend type Handler {
  """
  Handler for Postgres database, based on `postgraphile`
  """
  postgraphile: PostGraphileHandler
}

type PostGraphileHandler @md {
  """
  A connection string to your Postgres database
  """
  connectionString: String!
  """
  An array of strings which specifies the PostgreSQL schemas that PostGraphile will use to create a GraphQL schema. The default schema is the public schema.
  """
  schemaName: [String!]
  """
  Connection Pool settings
  """
  pool: PostGraphilePool
  """
  Cache Introspection
  """
  cacheIntrospection: Boolean
  """
  Extra Postgraphile Plugins to append
  """
  appendPlugins: [String]
  """
  Postgraphile Plugins to skip (e.g. "graphile-build#NodePlugin")
  """
  skipPlugins: [String]
  """
  Extra Postgraphile options that will be added to the postgraphile constructor. It can either be an object or a string pointing to the object's path (e.g. "./my-config#options"). See the [postgraphile docs](https://www.graphile.org/postgraphile/usage-library/) for more information.
  """
  options: PostgraphileExternalOptions
}

union PostgraphileExternalOptions = JSON | String

type PostGraphilePool {
  user: String
  password: String
  database: String
  host: String
  port: Int
  connectionString: String
}
