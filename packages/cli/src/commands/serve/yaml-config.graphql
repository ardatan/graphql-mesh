type Query {
  serve: ServeConfig
}

type ServeConfig @md {
  """
  Spawn multiple server instances as node clusters (default: `1`)
  """
  fork: Fork
  """
  TCP Port to listen (default: `3000`)
  """
  port: Port
  """
  Provide an example query or queries for GraphQL Playground
  """
  exampleQuery: String
  cors: CorsConfig
  handlers: [ServeHandler]
}

union Port = Int | String

union Fork = Int | Boolean
union Port = Int | String

type CorsConfig {
  origin: [String]
  allowedHeaders: [String]
  exposedHeaders: [String]
  credentials: Boolean
  maxAge: Int
  preflightContinue: Boolean
  optionsSuccessStatus: Int
}

union ServeHandler = WebhookHandler | ExpressHandler

type ExpressHandler {
  path: String!
  handler: String!
}

type WebhookHandler {
  path: String!
  pubsubTopic: String!
  payload: String
}
