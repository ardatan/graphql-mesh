// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Composition with Auth @authenticated 1`] = `"schema@link(url:"https://specs.apollo.dev/link/v1.0")@link(url:"https://specs.apollo.dev/join/v0.3" for:EXECUTION)@link(url:"https://specs.apollo.dev/requiresScopes/v0.1" for:SECURITY)@link(url:"https://specs.apollo.dev/authenticated/v0.1" for:SECURITY)@link(url:"https://the-guild.dev/graphql/mesh/spec/v1.0" import:["@merge"]){query:Query}directive@join__enumValue(graph:join__Graph!)repeatable on ENUM_VALUE directive@join__field(graph:join__Graph requires:join__FieldSet provides:join__FieldSet type:String external:Boolean override:String usedOverridden:Boolean)repeatable on FIELD_DEFINITION|INPUT_FIELD_DEFINITION directive@join__graph(name:String!url:String!)on ENUM_VALUE directive@join__implements(graph:join__Graph!interface:String!)repeatable on OBJECT|INTERFACE directive@join__type(graph:join__Graph!key:join__FieldSet extension:Boolean!=false resolvable:Boolean!=true isInterfaceObject:Boolean!=false)repeatable on OBJECT|INTERFACE|UNION|ENUM|INPUT_OBJECT|SCALAR directive@join__unionMember(graph:join__Graph!member:String!)repeatable on UNION scalar join__FieldSet directive@link(url:String as:String for:link__Purpose import:[link__Import])repeatable on SCHEMA scalar link__Import enum link__Purpose{"""\`SECURITY\` features provide metadata necessary to securely resolve fields.""" SECURITY """\`EXECUTION\` features provide metadata necessary for operation execution.""" EXECUTION}directive@requiresScopes(scopes:[[requiresScopes__Scope!]!]!)on FIELD_DEFINITION|OBJECT|INTERFACE|SCALAR|ENUM scalar requiresScopes__Scope directive@authenticated on FIELD_DEFINITION|OBJECT|INTERFACE|SCALAR|ENUM enum join__Graph{A@join__graph(name:"A" url:"")}directive@merge(subgraph:String argsExpr:String keyArg:String keyField:String key:[String!]additionalArgs:String)repeatable on FIELD_DEFINITION type Query@join__type(graph:A){me:User@authenticated post(id:ID!):Post@merge(subgraph:"A" keyField:"id" keyArg:"id")}type User@join__type(graph:A){id:ID!username:String email:String@requiresScopes(scopes:[["read:email"]])posts:[Post!]!}type Post@join__type(graph:A key:"id"){id:ID!author:User!title:String!content:String!views:Int@authenticated}"`;

exports[`Composition with Auth @requiresScopes 1`] = `"schema@link(url:"https://specs.apollo.dev/link/v1.0")@link(url:"https://specs.apollo.dev/join/v0.3" for:EXECUTION)@link(url:"https://specs.apollo.dev/requiresScopes/v0.1" for:SECURITY)@link(url:"https://the-guild.dev/graphql/mesh/spec/v1.0" import:["@merge"]){query:Query}directive@join__enumValue(graph:join__Graph!)repeatable on ENUM_VALUE directive@join__field(graph:join__Graph requires:join__FieldSet provides:join__FieldSet type:String external:Boolean override:String usedOverridden:Boolean)repeatable on FIELD_DEFINITION|INPUT_FIELD_DEFINITION directive@join__graph(name:String!url:String!)on ENUM_VALUE directive@join__implements(graph:join__Graph!interface:String!)repeatable on OBJECT|INTERFACE directive@join__type(graph:join__Graph!key:join__FieldSet extension:Boolean!=false resolvable:Boolean!=true isInterfaceObject:Boolean!=false)repeatable on OBJECT|INTERFACE|UNION|ENUM|INPUT_OBJECT|SCALAR directive@join__unionMember(graph:join__Graph!member:String!)repeatable on UNION scalar join__FieldSet directive@link(url:String as:String for:link__Purpose import:[link__Import])repeatable on SCHEMA scalar link__Import enum link__Purpose{"""\`SECURITY\` features provide metadata necessary to securely resolve fields.""" SECURITY """\`EXECUTION\` features provide metadata necessary for operation execution.""" EXECUTION}directive@requiresScopes(scopes:[[requiresScopes__Scope!]!]!)on FIELD_DEFINITION|OBJECT|INTERFACE|SCALAR|ENUM scalar requiresScopes__Scope enum join__Graph{A@join__graph(name:"A" url:"")}directive@merge(subgraph:String argsExpr:String keyArg:String keyField:String key:[String!]additionalArgs:String)repeatable on FIELD_DEFINITION type Query@join__type(graph:A){user(id:ID!):User@merge(subgraph:"A" keyField:"id" keyArg:"id")@requiresScopes(scopes:[["read:others"]])users:[User!]!@requiresScopes(scopes:[["read:others"]])post(id:ID!):Post@merge(subgraph:"A" keyField:"id" keyArg:"id")}type User@join__type(graph:A key:"id"){id:ID!username:String email:String@requiresScopes(scopes:[["read:email"]])profileImage:String posts:[Post!]!}type Post@join__type(graph:A key:"id"){id:ID!author:User!title:String!content:String!}"`;
