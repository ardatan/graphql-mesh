// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SOAP Headers should pass headers to the executor: soap-with-headers 1`] = `
"schema @transport(kind: "soap", subgraph: "Test") {
  query: Query
  mutation: Mutation
}

directive @soap(elementName: String, bindingNamespace: String, endpoint: String, subgraph: String, headers: ObjMap, headerNamespace: String) on FIELD_DEFINITION

type Query {
  s0_SOAPDemo_SOAPDemoSoap_FindPerson(FindPerson: s0_FindPerson_Input): s0_FindPersonResponse @soap(elementName: "FindPersonResponse", bindingNamespace: "http://tempuri.org", endpoint: "https://www.crcind.com:443/csp/samples/SOAP.Demo.cls", subgraph: "Test", headerNamespace: "guild", headers: "{\\"MyHeader\\":{\\"UserName\\":\\"{env.USER_NAME}\\",\\"Password\\":\\"{env.PASSWORD}\\"}}")
  s0_SOAPDemo_SOAPDemoSoap_GetByName(GetByName: s0_GetByName_Input): s0_GetByNameResponse @soap(elementName: "GetByNameResponse", bindingNamespace: "http://tempuri.org", endpoint: "https://www.crcind.com:443/csp/samples/SOAP.Demo.cls", subgraph: "Test", headerNamespace: "guild", headers: "{\\"MyHeader\\":{\\"UserName\\":\\"{env.USER_NAME}\\",\\"Password\\":\\"{env.PASSWORD}\\"}}")
  s0_SOAPDemo_SOAPDemoSoap_GetDataSetByName(GetDataSetByName: s0_GetDataSetByName_Input): s0_GetDataSetByNameResponse @soap(elementName: "GetDataSetByNameResponse", bindingNamespace: "http://tempuri.org", endpoint: "https://www.crcind.com:443/csp/samples/SOAP.Demo.cls", subgraph: "Test", headerNamespace: "guild", headers: "{\\"MyHeader\\":{\\"UserName\\":\\"{env.USER_NAME}\\",\\"Password\\":\\"{env.PASSWORD}\\"}}")
  s0_SOAPDemo_SOAPDemoSoap_GetListByName(GetListByName: s0_GetListByName_Input): s0_GetListByNameResponse @soap(elementName: "GetListByNameResponse", bindingNamespace: "http://tempuri.org", endpoint: "https://www.crcind.com:443/csp/samples/SOAP.Demo.cls", subgraph: "Test", headerNamespace: "guild", headers: "{\\"MyHeader\\":{\\"UserName\\":\\"{env.USER_NAME}\\",\\"Password\\":\\"{env.PASSWORD}\\"}}")
  s0_SOAPDemo_SOAPDemoSoap_QueryByName(QueryByName: s0_QueryByName_Input): s0_QueryByNameResponse @soap(elementName: "QueryByNameResponse", bindingNamespace: "http://tempuri.org", endpoint: "https://www.crcind.com:443/csp/samples/SOAP.Demo.cls", subgraph: "Test", headerNamespace: "guild", headers: "{\\"MyHeader\\":{\\"UserName\\":\\"{env.USER_NAME}\\",\\"Password\\":\\"{env.PASSWORD}\\"}}")
}

type s0_FindPersonResponse {
  FindPersonResult: s0_Person
}

type s0_Person {
  Name: String
  SSN: String
  DOB: Date
  Home: s0_Address
  Office: s0_Address
  Spouse: s0_Person
  FavoriteColors: s0_ArrayOfFavoriteColorsItemString
  Age: BigInt
}

"""
A date string, such as 2007-12-03, compliant with the \`full-date\` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar Date

type s0_Address {
  Street: String
  City: String
  State: String
  Zip: String
}

type s0_ArrayOfFavoriteColorsItemString {
  FavoriteColorsItem: [String]
}

"""
The \`BigInt\` scalar type represents non-fractional signed whole numeric values.
"""
scalar BigInt

input s0_FindPerson_Input {
  id: String
}

type s0_GetByNameResponse {
  GetByNameResult: JSON
}

"""
The \`JSON\` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

input s0_GetByName_Input {
  name: String
}

type s0_GetDataSetByNameResponse {
  GetDataSetByNameResult: s0_ByNameDataSet
}

type s0_ByNameDataSet {
  ByName: [ByNameDataSet_ByName]
}

type ByNameDataSet_ByName {
  ID: BigInt
  Name: String
  DOB: Date
  SSN: String
}

input s0_GetDataSetByName_Input {
  name: String
}

type s0_GetListByNameResponse {
  GetListByNameResult: s0_ArrayOfPersonIdentificationPersonIdentification
}

type s0_ArrayOfPersonIdentificationPersonIdentification {
  PersonIdentification: [s0_PersonIdentification]
}

type s0_PersonIdentification {
  ID: String
  Name: String
  SSN: String
  DOB: Date
}

input s0_GetListByName_Input {
  name: String
}

type s0_QueryByNameResponse {
  QueryByNameResult: s0_QueryByName_DataSet
}

type s0_QueryByName_DataSet {
  QueryByName: [QueryByName_DataSet_QueryByName]
}

type QueryByName_DataSet_QueryByName {
  ID: BigInt
  Name: String
  DOB: Date
  SSN: String
}

input s0_QueryByName_Input {
  name: String
}

type Mutation {
  s0_SOAPDemo_SOAPDemoSoap_AddInteger(AddInteger: s0_AddInteger_Input): s0_AddIntegerResponse @soap(elementName: "AddIntegerResponse", bindingNamespace: "http://tempuri.org", endpoint: "https://www.crcind.com:443/csp/samples/SOAP.Demo.cls", subgraph: "Test", headerNamespace: "guild", headers: "{\\"MyHeader\\":{\\"UserName\\":\\"{env.USER_NAME}\\",\\"Password\\":\\"{env.PASSWORD}\\"}}")
  s0_SOAPDemo_SOAPDemoSoap_DivideInteger(DivideInteger: s0_DivideInteger_Input): s0_DivideIntegerResponse @soap(elementName: "DivideIntegerResponse", bindingNamespace: "http://tempuri.org", endpoint: "https://www.crcind.com:443/csp/samples/SOAP.Demo.cls", subgraph: "Test", headerNamespace: "guild", headers: "{\\"MyHeader\\":{\\"UserName\\":\\"{env.USER_NAME}\\",\\"Password\\":\\"{env.PASSWORD}\\"}}")
  s0_SOAPDemo_SOAPDemoSoap_LookupCity(LookupCity: s0_LookupCity_Input): s0_LookupCityResponse @soap(elementName: "LookupCityResponse", bindingNamespace: "http://tempuri.org", endpoint: "https://www.crcind.com:443/csp/samples/SOAP.Demo.cls", subgraph: "Test", headerNamespace: "guild", headers: "{\\"MyHeader\\":{\\"UserName\\":\\"{env.USER_NAME}\\",\\"Password\\":\\"{env.PASSWORD}\\"}}")
  s0_SOAPDemo_SOAPDemoSoap_Mission(Mission: JSON = ""): s0_MissionResponse @soap(elementName: "MissionResponse", bindingNamespace: "http://tempuri.org", endpoint: "https://www.crcind.com:443/csp/samples/SOAP.Demo.cls", subgraph: "Test", headerNamespace: "guild", headers: "{\\"MyHeader\\":{\\"UserName\\":\\"{env.USER_NAME}\\",\\"Password\\":\\"{env.PASSWORD}\\"}}")
}

type s0_AddIntegerResponse {
  AddIntegerResult: BigInt
}

input s0_AddInteger_Input {
  Arg1: BigInt
  Arg2: BigInt
}

type s0_DivideIntegerResponse {
  DivideIntegerResult: BigInt
}

input s0_DivideInteger_Input {
  Arg1: BigInt
  Arg2: BigInt
}

type s0_LookupCityResponse {
  LookupCityResult: s0_Address
}

input s0_LookupCity_Input {
  zip: String
}

type s0_MissionResponse {
  MissionResult: String
}

scalar ObjMap"
`;
