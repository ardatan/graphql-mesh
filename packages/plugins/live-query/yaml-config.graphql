extend type Plugin {
  liveQuery: LiveQueryConfig
}

type LiveQueryConfig {
  """
  Invalidate a query or queries when a specific operation is done without an error
  """
  invalidations: [LiveQueryInvalidation]
  """
  Custom strategy for building resources identifiers
  By default resource identifiers are built by concatenating the Typename with the id separated by a color (`User:1`).

  This may be useful if you are using a relay compliant schema and the Typename information is not required for building a unique topic.

  Default: "{typename}:{id}"
  """
  resourceIdentifier: String
  """
  Whether the extensions should include a list of all resource identifiers for the latest operation result.
  Any of those can be used for invalidating and re-scheduling the operation execution.

  This is mainly useful for discovering and learning what kind of topics a given query will subscribe to.
  The default value is `true` if `DEBUG` environment variable is set
  """
  includeIdentifierExtension: Boolean

  """
  Identifier unique field

  Default: "id"
  """
  idFieldName: String

  """
  Specify which fields should be indexed for specific invalidations.
  """
  indexBy: [LiveQueryIndexBy]
}

union LiveQueryInvalidation @md = LiveQueryInvalidationByMutation | LiveQueryInvalidationByPolling

type LiveQueryInvalidationByMutation @md {
  """
  Path to the operation that could effect it. In a form: Mutation.something. Note that wildcard is not supported in this field.
  """
  field: String!
  invalidate: [String!]!
}

type LiveQueryInvalidationByPolling @md {
  """
  Polling interval in milliseconds
  """
  pollingInterval: Int!
  """
  Schema coordinate of the query to be polled
  """
  invalidate: [String!]!
}

type LiveQueryIndexBy @md {
  field: String!
  args: [String]!
}
