extend type Transform {
  """
  Transformer to apply caching for your data sources
  """
  cache: [CacheTransformConfig!]
}

type CacheTransformConfig @md {
  """
  The type and field to apply cache to, you can use wild cards as well, for example: `Query.*`
  """
  field: String!
  """
  Cache key to use to store your resolvers responses.
  The default is: {typeName}-{fieldName}-{argsHash}-{fieldNamesHash}

  Available variables and how to use them:
  - {typeName} - use name of the type
  - {fieldName} - use name of the field
  - {args.argName} - use a resolver argument
  - {argsHash} - a hash based on the 'args' object
  - {fieldNamesHash} - a hash based on the field nodes. Please note:
    - fieldNodes includes the source code positions of fields in an operation
    - this means if you provide the same fields in different order the hash will be different
    - in fact any character including new line will be taken into account
    - usually this is not an issue as queries coming from a client are 'stable'
    - however when testing if the cache works properly via a playground this can lead to different cache keys being generated. Hence leading to cache misses.
  - {info} - the GraphQLResolveInfo of the resolver
  - {env} - the properties defined in in process.env

  Available interpolations:
  - {format|date} - returns the current date with a specific format
  """
  cacheKey: String
  """
  Invalidation rules
  """
  invalidate: CacheInvalidateConfig
}

type CacheInvalidateConfig {
  """
  Invalidate the cache when a specific operation is done without an error
  """
  effectingOperations: [CacheEffectingOperationConfig!]
  """
  Specified in seconds, the time-to-live (TTL) value limits the lifespan
  """
  ttl: Int
}

type CacheEffectingOperationConfig {
  """
  Path to the operation that could effect it. In a form: Mutation.something. Note that wildcard is not supported in this field.
  """
  operation: String!
  """
  Cache key to invalidate on sucessful resolver (no error), see `cacheKey` for list of available options in this field.
  """
  matchKey: String
}
