// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`additionalProperties should generate the schema correctly: schema 1`] = `
"schema @transport(subgraph: "additionalPropertiesTest", kind: "rest", location: "http://localhost:3000") {
  query: Query
}

directive @dictionary(subgraph: String) on FIELD_DEFINITION

directive @httpOperation(subgraph: String, path: String, operationSpecificHeaders: [[String]], httpMethod: HTTPMethod, isBinary: Boolean, requestBaseBody: ObjMap, queryParamArgMap: ObjMap, queryStringOptionsByParam: ObjMap, jsonApiFields: Boolean, queryStringOptions: ObjMap) on FIELD_DEFINITION

directive @transport(subgraph: String, kind: String, location: String, headers: [[String]], queryStringOptions: ObjMap, queryParams: [[String]]) repeatable on SCHEMA

type Query {
  test: test_200_response @httpOperation(subgraph: "additionalPropertiesTest", path: "/test", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET)
}

type test_200_response {
  id: String
  foo: query_test_foo
  qux: query_test_qux
}

type query_test_foo {
  bar: String
}

type query_test_qux {
  quux: String
  additionalProperties: [query_test_qux_additionalProperties_entry] @dictionary(subgraph: "additionalPropertiesTest")
}

type query_test_qux_additionalProperties_entry {
  key: ID!
  value: query_test_qux_additionalProperties
}

type query_test_qux_additionalProperties {
  corge: String
}

enum HTTPMethod {
  GET
  HEAD
  POST
  PUT
  DELETE
  CONNECT
  OPTIONS
  TRACE
  PATCH
}

scalar ObjMap"
`;
