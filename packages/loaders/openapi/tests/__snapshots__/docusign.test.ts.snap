// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Docusign should generate correct schema: docusign-schema 1`] = `
"schema {
  query: Query
  mutation: Mutation
}

type Query {
  \\"Retrieves the available REST API versions.\\\\n\\\\nDocuSign Production system: https://www.docusign.net/restapi/service_information\\\\nDocuSign Demo system: https://demo.docusign.net/restapi/service_information\\\\n\\\\nYou do not need an integrator key to view the REST API versions and resources.\\"
  ServiceInformation_GetServiceInformation: Services
  \\"Retrieves the base resources available for the DocuSign REST APIs.\\\\n\\\\nYou do not need an integrator key to view the REST API versions and resources.\\\\n\\\\nExample: https://demo.docusign.net/restapi/v2 lists all of the base resources available in version 2 of the REST API on the DocuSign Demo system.\\\\n\\\\nTo view descriptions and samples of the service operations for all versions, remove the version number and add /help to the URL.\\\\n\\\\nExample: https://demo.docusign.net/restapi/help lists the REST API operations on the DocuSign Demo system with XML and JSON request and response samples.\\"
  ServiceInformation_GetResourceInformation: Resources
  \\"Retrieves the account provisioning information for the account.\\"
  Accounts_GetProvisioning: provisioningInformation
  \\"Retrieves the account information for the specified account.\\\\n\\\\n**Response**\\\\nThe \`canUpgrade\` property contains is a Boolean that indicates whether the account can be upgraded through the API. \\"
  Accounts_GetAccount(input: Accounts_GetAccount_request_Input, accountId: String!): Accounts
  \\"Retrieves the list of recurring and usage charges for the account. This can be used to determine the charge structure and usage of charge plan items. \\\\n\\\\nPrivileges required: account administrator \\"
  BillingCharges_GetAccountBillingCharges(input: BillingCharges_GetAccountBillingCharges_request_Input, accountId: String!): billingChargeResponse
  \\"Retrieves a list of invoices for the account. If the from date or to date queries are not specified, the response returns invoices for the last 365 days.\\\\n\\\\nPrivileges required: account administrator \\"
  BillingInvoices_GetBillingInvoices(input: BillingInvoices_GetBillingInvoices_request_Input, accountId: String!): billingInvoicesResponse
  \\"Retrieves the specified invoice. \\\\n\\\\n\\\\nPrivileges required: account administrator\\\\n\\\\nThe response returns a list of charges and information about the charges. Quantities are usually shown as 'unlimited' or an integer. Amounts are shown in the currency set for the account.\\\\n\\\\n**Response**\\\\nThe following table provides a description of the different \`chargeName\` property values. The information will grow as more chargeable items are added to the system.\\\\n\\\\n| chargeName | Description |\\\\n| --- | --- |\\\\n| id_check | ID Check Charge |\\\\n| in_person_signing | In Person Signing charge |\\\\n| envelopes Included | Sent Envelopes for the account |\\\\n| age_verify | Age verification check |\\\\n| ofac | OFAC Check |\\\\n| id_confirm | ID confirmation check |\\\\n| student_authentication | STAN PIN authentication check |\\\\n| wet_sign_fax | Pages for returning signed documents by fax |\\\\n| attachment_fax | Pages for returning attachments by fax |\\\\n| phone_authentication | Phone authentication charge |\\\\n| powerforms | PowerForm envelopes sent |\\\\n| signer_payments | Payment processing charge |\\\\n| outbound_fax | Send by fax charge |\\\\n| bulk_recipient_envelopes | Bulk Recipient Envelopes sent |\\\\n| sms_authentications | SMS authentication charge |\\\\n| saml_authentications | SAML authentication charge |\\\\n| express_signer_certificate | DocuSign Express Certificate charge |\\\\n| personal_signer_certificate | Personal Signer Certificate charge |\\\\n| safe_certificate | SAFE BioPharma Signer Certificate charge |\\\\n| seats | Included active seats charge |\\\\n| open_trust_certificate | OpenTrust Signer Certificate charge | \\"
  BillingInvoices_GetBillingInvoice(accountId: String!, invoiceId: String!): Invoices
  \\"Returns a list past due invoices for the account and notes if payment can be made through the REST API. \\\\n\\\\nPrivileges Required: account administrator\\"
  BillingInvoices_GetBillingInvoicesPastDue(accountId: String!): billingInvoicesSummary
  \\"Retrieves a list containing information about one or more payments. If the from date or to date queries are not used, the response returns payment information for the last 365 days. \\\\n\\\\nPrivileges required: account administrator \\"
  BillingPayments_GetPaymentList(input: BillingPayments_GetPaymentList_request_Input, accountId: String!): billingPaymentsResponse
  \\"Retrieves the information for a specified payment. \\\\n\\\\nPrivileges required: account administrator \\"
  BillingPayments_GetPayment(accountId: String!, paymentId: String!): Payments
  \\"Retrieves the billing plan information for the specified account, including the current billing plan, successor plans, billing address, and billing credit card.\\\\n\\\\nBy default the successor plan and credit card information is included in the response. This information can be excluded from the response by adding the appropriate optional query string with the \`setting\` set to **false**. \\\\n\\\\nResponse\\\\n\\\\nThe response returns the billing plan information, including the currency code, for the plan. The \`billingPlan\` and \`succesorPlans\` property values are the same as those shown in the [ML:Get Billing Plan Details] reference. the \`billingAddress\` and \`creditCardInformation\` property values are the same as those shown in the [ML:Update Billing Plan] reference.\\"
  BillingPlan_GetBillingPlan(input: BillingPlan_GetBillingPlan_request_Input, accountId: String!): BillingPlans
  \\"Get metadata for a given credit card.\\"
  BillingPlan_GetCreditCardInfo(accountId: String!): creditCardInformation
  \\"Retrieves the list of brand profiles associated with the account and the default brand profiles. The Account Branding feature (accountSettings properties \`canSelfBrandSend\` and \`canSelfBrandSend\`)  must be set to **true** for the account to use this call.\\"
  Brands_GetBrands(input: Brands_GetBrands_request_Input, accountId: String!): AccountBrands
  \\"Get information for a specific brand.\\"
  Brand_GetBrand(input: Brand_GetBrand_request_Input, accountId: String!, brandId: String!): brand
  \\"Export a specific brand.\\"
  BrandExport_GetBrandExportFile(accountId: String!, brandId: String!): Any
  \\"Obtains the specified image for a brand.\\"
  BrandLogo_GetBrandLogo(accountId: String!, brandId: String!, logoType: String!): Any
  \\"Returns the specified account's list of branding resources (metadata).\\"
  BrandResources_GetBrandResourcesList(accountId: String!, brandId: String!): brandResourcesList
  \\"Returns the specified branding resource file.\\"
  BrandResources_GetBrandResources(input: BrandResources_GetBrandResources_request_Input, accountId: String!, brandId: String!, resourceContentType: String!): Any
  \\"Retrieves status information about all the bulk recipient batches. A bulk recipient batch is the set of envelopes sent from a single bulk recipient file. The response includes general information about each bulk recipient batch. \\\\n\\\\nThe response returns information about the envelopes sent with bulk recipient batches, including the \`batchId\` property, which can be used to retrieve a more detailed status of individual bulk recipient batches.\\"
  BulkEnvelopes_GetEnvelopesBulk(input: BulkEnvelopes_GetEnvelopesBulk_request_Input, accountId: String!): BulkEnvelopes
  \\"Retrieves the status information of a single bulk recipient batch. A bulk recipient batch is the set of envelopes sent from a single bulk recipient file. \\"
  BulkEnvelopes_GetBulkEnvelopesBatchId(input: BulkEnvelopes_GetBulkEnvelopesBatchId_request_Input, accountId: String!, batchId: String!): bulkEnvelopeStatus
  \\"Retrieves the current metadata of a ChunkedUpload.\\"
  ChunkedUploads_GetChunkedUpload(input: ChunkedUploads_GetChunkedUpload_request_Input, accountId: String!, chunkedUploadId: String!): ChunkedUploads
  \\"Retrieves all the DocuSign Custom Connect definitions for the specified account.\\"
  Connect_GetConnectConfigs(accountId: String!): connectConfigResults
  \\"Retrieves the Connect Failure Log information. It can be used to determine which envelopes failed to post, so a republish request can be created.\\"
  ConnectFailures_GetConnectLogs(input: ConnectFailures_GetConnectLogs_request_Input, accountId: String!): ConnectEvents
  \\"Retrieves a list of connect log entries for your account.\\"
  ConnectLog_GetConnectLogs(input: ConnectFailures_GetConnectLogs_request_Input, accountId: String!): ConnectEvents
  \\"Retrieves the specified Connect log entry for your account.\\"
  ConnectLog_GetConnectLog(input: ConnectLog_GetConnectLog_request_Input, accountId: String!, logId: String!): connectLog
  \\"Retrieves the information for the specified DocuSign Connect configuration.\\\\n\\"
  Connect_GetConnectConfig(accountId: String!, connectId: String!): connectConfigResults
  \\"Returns users from the configured Connect service.\\"
  Connect_GetConnectUsers(input: Connect_GetConnectUsers_request_Input, accountId: String!, connectId: String!): integratedUserInfoList
  \\"Retrieves the Electronic Record and Signature Disclosure, with HTML formatting, associated with the account. You can use an optional query string to set the language for the disclosure.\\"
  ConsumerDisclosure_GetConsumerDisclosure(input: ConsumerDisclosure_GetConsumerDisclosure_request_Input, accountId: String!): AccountConsumerDisclosures
  \\"Retrieves the Electronic Record and Signature Disclosure, with HTML formatting, for the requested envelope recipient. This might be different than the current account disclosure depending on account settings, such as branding, and when the account disclosure was last updated. An optional query string can be included to return the language for the disclosure.  \\"
  ConsumerDisclosure_GetConsumerDisclosureLangCode(accountId: String!, langCode: String!): AccountConsumerDisclosures
  \\"Gets a particular contact associated with the user's account.\\"
  Contacts_GetContactById(input: Contacts_GetContactById_request_Input, accountId: String!, contactId: String!): contactGetResponse
  \\"Retrieves a list of envelope custom fields associated with the account. You can use these fields in the envelopes for your account to record information about the envelope, help search for envelopes and track information. The envelope custom fields are shown in the Envelope Settings section when a user is creating an envelope in the DocuSign member console. The envelope custom fields are not seen by the envelope recipients.\\\\n\\\\nThere are two types of envelope custom fields, text, and list. A text custom field lets the sender enter the value for the field. The list custom field lets the sender select the value of the field from a list you provide.\\"
  AccountCustomFields_GetAccountCustomFields(accountId: String!): AccountCustomFields
  \\"Retrieves a list of envelopes that match your request. \\\\nA large set of optional filters let you filter\\\\nby date,\\\\nby envelope ID,\\\\nor by status codes.\\\\n\\\\nYour request must include one or more of the following parameters:\\\\n\\\\n* \`from_date\`\\\\n* \`envelope_ids\`\\\\n* \`transaction_ids\`\\\\n\\\\n\\\\nGetting envelope status using \`transaction_ids\` is useful\\\\nfor offline signing situations where it can be used\\\\ndetermine if an envelope was created or not. It can be used\\\\nfor the cases where a network connection was lost, before\\\\nthe envelope status could be returned.\\\\n\\\\nTo avoid unnecessary database queries, the DocuSign\\\\nsignature platform first checks requests to ensure that the\\\\nfilter set supplied does not result in a zero-size response\\\\nbefore querying the database. \\\\n\\\\nFor example, for a request with a \`from_to_status\` of\\\\n\`delivered\` and a current \`status\` of \`created,sent\`,\\\\nDocuSign will always return an empty list. \\\\nThis is because the request translates to: find the\\\\nenvelopes that were delivered between the \`from_date\` and\\\\n\`to_date\` dates that have a current status of \`created\` or\\\\n\`sent\`. Since an envelope that has been delivered can\\\\nnever have a status of \`created\` or \`sent\`, a zero-size\\\\nresponse would be generated. \\\\nIn this case, DocuSign does not query the database\\\\nand returns an empty list immediately.\\\\n\\\\n\\\\nThe following table shows the valid current envelope\\\\nstatuses (\`status\` parameter) for the different status\\\\nqualifiers (\`from_to_status\` parameter) in the request. If\\\\nthe status and status qualifiers in the API request do not\\\\ncontain any of the values shown in the Valid Current\\\\nStatuses column, then an empty list is returned.\\\\n\\\\nClient applications should check that the statuses (\`status\`\\\\nparameter) they are requesting make sense for a given\\\\n\`from_to_status\` parameter value.\\\\n\\\\n| Status Qualifier<br>(\`from_to_status\`) | Effective Status Qualifier | Valid Current Statuses                                                      |  \\\\n| :------------------------------------- | :------------------------- | :-------------------------------------------------------------------------- |  \\\\n| any (changed)                          | StatusChanged              | any, created, sent, delivered, signed, completed, declined, voided, deleted |  \\\\n| created                                | Created                    | any, created, sent, delivered, signed, completed, declined, voided, deleted |  \\\\n| sent                                   | Sent                       | any, sent, delivered, signed, completed, declined, voided, deleted          |  \\\\n| delivered                              | StatusChanged              | any, delivered, signed, completed, declined, voided, deleted                |  \\\\n| signed                                 | StatusChanged              | any, signed, completed, declined, voided, deleted                           |  \\\\n| completed                              | Completed                  | any, completed, declined, voided, deleted                                   |  \\\\n| declined                               | StatusChanged              | any, declined, voided, deleted                                              |  \\\\n| timedout<br>always return zero results | StatusChanged              | any, voided, deleted                                                        |  \\\\n| voided                                 | Voided                     | any, voided, deleted                                                        |  \\\\n| deleted                                | StatusChanged              | any, deleted                                                                |  \\\\n\\\\n\\\\nIn some cases, a request for a specific envelope status will\\\\ninclude envelopes with additional statuses. For example, in\\\\na request with a \`from_date\` of 2017-01-01, a \`to_date\` of\\\\n2017-01-07 and the status qualifier (\`from_to_status\`) set\\\\nto \`delivered\`, the response set might contain envelopes\\\\nthat were created during that time period, but not delivered\\\\nduring the time period. As a workaround, check the envelope\\\\nstatus values in the result set as needed. \\\\n\\"
  Envelopes_GetEnvelopes(input: Envelopes_GetEnvelopes_request_Input, accountId: String!): envelopesInformation
  \\"Retrieves the overall status for the specified envelope.\\"
  Envelopes_GetEnvelope(input: Envelopes_GetEnvelope_request_Input, accountId: String!, envelopeId: String!): Envelopes
  \\"Returns a list of attachments associated with the specified envelope\\"
  Attachments_GetAttachments(accountId: String!, envelopeId: String!): envelopeAttachmentsResult
  \\"Retrieves an attachment from the envelope.\\"
  Attachments_GetAttachment(accountId: String!, envelopeId: String!, attachmentId: String!): Any
  \\"Gets the envelope audit events for the specified envelope.\\"
  AuditEvents_GetAuditEvents(accountId: String!, envelopeId: String!): envelopeAuditEventResponse
  \\"Retrieves the custom field information for the specified envelope. You can use these fields in the envelopes for your account to record information about the envelope, help search for envelopes, and track information. The envelope custom fields are shown in the Envelope Settings section when a user is creating an envelope in the DocuSign member console. The envelope custom fields are not seen by the envelope recipients.\\\\n\\\\nThere are two types of envelope custom fields, text, and list. A text custom field lets the sender enter the value for the field. With a list custom field, the sender selects the value of the field from a pre-made list.\\"
  CustomFields_GetCustomFields(accountId: String!, envelopeId: String!): AccountCustomFields
  \\"Retrieves a list of documents associated with the specified envelope.\\"
  Documents_GetDocuments(input: Documents_GetDocuments_request_Input, accountId: String!, envelopeId: String!): EnvelopeDocuments
  \\"Retrieves the specified document from the envelope. If the account has the Highlight Data Changes feature enabled, there is an option to request that any changes in the envelope be highlighted.\\\\n\\\\nThe \`{documentID}\` parameter takes two special values:\\\\n\\\\n| Value      | Description |\\\\n| :---       | :--- |\\\\n| \`combined\` | Retrieve a PDF that contains the combined content of all documents and the certificate. |\\\\n| \`archive\`  | Retrieve a ZIP archive that contains all of the PDF documents, the certificate, and any .WAV files used for voice authentication. |\\\\n\\"
  Documents_GetDocument(input: Documents_GetDocument_request_Input, accountId: String!, envelopeId: String!, documentId: String!): File
  \\"Retrieves the custom document field information from an existing envelope document.\\"
  DocumentFields_GetDocumentFields(accountId: String!, envelopeId: String!, documentId: String!): EnvelopeDocumentFields
  \\"Returns document page image(s) based on input.\\"
  Pages_GetPageImages(input: Pages_GetPageImages_request_Input, accountId: String!, envelopeId: String!, documentId: String!): pageImages
  \\"Retrieves a page image for display from the specified envelope.\\"
  Pages_GetPageImage(input: Pages_GetPageImage_request_Input, accountId: String!, envelopeId: String!, documentId: String!, pageNumber: String!): File
  \\"Returns tabs on the specified page.\\"
  Tabs_GetPageTabs(accountId: String!, envelopeId: String!, documentId: String!, pageNumber: String!): EnvelopeRecipientTabs
  \\"Returns tabs on the document.\\"
  Tabs_GetDocumentTabs(input: Tabs_GetDocumentTabs_request_Input, accountId: String!, envelopeId: String!, documentId: String!): EnvelopeRecipientTabs
  \\"Retrieves the templates associated with a document in the specified envelope.\\"
  Templates_GetDocumentTemplates(input: Templates_GetDocumentTemplates_request_Input, accountId: String!, envelopeId: String!, documentId: String!): EnvelopeTemplates
  \\"Retrieves the email override settings for the specified envelope.\\"
  EmailSettings_GetEmailSettings(accountId: String!, envelopeId: String!): EnvelopeEmailSettings
  \\"Returns envelope form data for an existing envelope.\\"
  FormData_GetFormData(accountId: String!, envelopeId: String!): EnvelopeFormData
  \\"Retrieves general information about the envelope lock.\\\\n\\\\nIf the call is made by the locked by user and the request has the same integrator key as original, then the \`X-DocuSign-Edit\` header and additional lock information is included in the response. This allows users to recover a lost editing session token and the \`X-DocuSign-Edit\` header.\\"
  Lock_GetEnvelopeLock(accountId: String!, envelopeId: String!): EnvelopeLocks
  \\"Retrieves the envelope notification, reminders and expirations, information for an existing envelope.\\"
  Notification_GetEnvelopesEnvelopeIdNotification(accountId: String!, envelopeId: String!): notification
  \\"Retrieves the status of all recipients in a single envelope and identifies the current recipient in the routing list. \\\\n\\\\nThe \`currentRoutingOrder\` property of the response contains the \`routingOrder\` value of the current recipient indicating that the envelope has been sent to the recipient, but the recipient has not completed their actions.\\"
  Recipients_GetRecipients(input: Recipients_GetRecipients_request_Input, accountId: String!, envelopeId: String!): EnvelopeRecipients
  \\"Retrieves the bulk recipient file information from an envelope that has a bulk recipient.\\"
  Recipients_GetBulkRecipients(input: Recipients_GetBulkRecipients_request_Input, accountId: String!, envelopeId: String!, recipientId: String!): EnvelopeBulkRecipients
  \\"Retrieves the Electronic Record and Signature Disclosure, with html formatting, associated with the account. You can use an optional query string to set the language for the disclosure.\\"
  ConsumerDisclosure_GetConsumerDisclosureEnvelopeIdRecipientId(input: ConsumerDisclosure_GetConsumerDisclosureEnvelopeIdRecipientId_request_Input, accountId: String!, envelopeId: String!, recipientId: String!): AccountConsumerDisclosures
  \\"Reserved: Retrieves the Electronic Record and Signature Disclosure, with HTML formatting, associated with the account.\\"
  ConsumerDisclosure_GetConsumerDisclosureEnvelopeIdRecipientIdLangCode(input: ConsumerDisclosure_GetConsumerDisclosureEnvelopeIdRecipientId_request_Input, accountId: String!, envelopeId: String!, recipientId: String!, langCode: String): AccountConsumerDisclosures
  \\"Returns document visibility for the recipients\\"
  Recipients_GetRecipientDocumentVisibility(accountId: String!, envelopeId: String!, recipientId: String!): EnvelopeDocumentVisibility
  \\"Retrieves the initials image for the specified user. The image is returned in the same format as it was uploaded. In the request you can specify if the chrome (the added line and identifier around the initial image) is returned with the image.\\\\n\\\\nThe userId specified in the endpoint must match the authenticated user's user id and the user must be a member of the account.\\\\n\\\\nThe \`signatureIdOrName\` paramter accepts signature ID or signature name. DocuSign recommends you use signature ID (\`signatureId\`), since some names contain characters that do not properly URL encode. If you use the user name, it is likely that the name includes spaces and you might need to URL encode the name before using it in the endpoint. \\\\n\\\\nFor example: \\\\\\"Bob Smith\\\\\\" to \\\\\\"Bob%20Smith\\\\\\"\\\\n\\\\nOlder envelopes might only contain chromed images. If getting the non-chromed image fails, try getting the chromed image.\\"
  Recipients_GetRecipientInitialsImage(input: Recipients_GetRecipientInitialsImage_request_Input, accountId: String!, envelopeId: String!, recipientId: String!): File
  \\"Retrieves signature information for a signer or sign-in-person recipient.\\"
  Recipients_GetRecipientSignature(accountId: String!, envelopeId: String!, recipientId: String!): UserSignatures
  \\"Retrieves the specified user signature image. The image is returned in the same format as uploaded. In the request you can specify if the chrome (the added line and identifier around the initial image) is returned with the image.\\\\n\\\\nThe userId specified in the endpoint must match the authenticated user's user ID and the user must be a member of the account.\\\\n\\\\nThe \`signatureIdOrName\` parameter accepts signature ID or signature name. DocuSign recommends you use signature ID (\`signatureId\`), since some names contain characters that don't properly URL encode. If you use the user name, it is likely that the name includes spaces and you might need to URL encode the name before using it in the endpoint. \\\\n\\\\nFor example: \\\\\\"Bob Smith\\\\\\" to \\\\\\"Bob%20Smith\\\\\\"\\\\n\\\\nOlder envelopes might only have chromed images. If getting the non-chromed image fails, try getting the chromed image.\\"
  Recipients_GetRecipientSignatureImage(input: Recipients_GetRecipientSignatureImage_request_Input, accountId: String!, envelopeId: String!, recipientId: String!): File
  \\"Retrieves information about the tabs associated with a recipient in a draft envelope.\\"
  Recipients_GetRecipientTabs(input: Recipients_GetRecipientTabs_request_Input, accountId: String!, envelopeId: String!, recipientId: String!): EnvelopeRecipientTabs
  \\"This returns a list of the server-side templates, their name and ID, used in an envelope.\\\\n\\"
  Templates_GetEnvelopeTemplates(input: Templates_GetEnvelopeTemplates_request_Input, accountId: String!, envelopeId: String!): EnvelopeTemplates
  \\"Retrieves a list of the folders for the account, including the folder hierarchy. You can specify whether to return just the template folder or template folder and normal folders by setting the \`template\` query string parameter.\\"
  Folders_GetFolders(input: Folders_GetFolders_request_Input, accountId: String!): Folders
  \\"Retrieves a list of the envelopes in the specified folder. You can narrow the query by specifying search criteria in the query string parameters.\\"
  Folders_GetFolderItems(input: Folders_GetFolderItems_request_Input, accountId: String!, folderId: String!): folderItemsResponse
  \\"Retrieves information about groups associated with the account.\\"
  Groups_GetGroups(input: Groups_GetGroups_request_Input, accountId: String!): Groups
  \\"Retrieves information about the brands associated with the requested group.\\"
  Brands_GetGroupBrands(accountId: String!, groupId: String!): AccountBrands
  \\"Retrieves a list of users in a group.\\"
  Groups_GetGroupUsers(input: Groups_GetGroupUsers_request_Input, accountId: String!, groupId: String!): GroupUsers
  \\"List payment gateway account information\\"
  PaymentGatewayAccounts_GetAllPaymentGatewayAccounts(accountId: String!): paymentGatewayAccountsInfo
  \\"Retrieves a list of Permission Profiles. Permission Profiles are a standard set of user permissions that you can apply to individual users or users in a Group. This makes it easier to manage user permissions for a large number of users, without having to change permissions on a user-by-user basis.\\\\n\\\\nCurrently, Permission Profiles can only be created and modified in the DocuSign console.\\"
  PermissionProfiles_GetPermissionProfiles(input: PermissionProfiles_GetPermissionProfiles_request_Input, accountId: String!): permissionProfileInformation
  \\"Returns a permissions profile in the specified account.\\"
  PermissionProfiles_GetPermissionProfile(input: ChunkedUploads_GetChunkedUpload_request_Input, accountId: String!, permissionProfileId: String!): AccountPermissionProfiles
  \\"Returns the list of PowerForms available to the user.\\"
  PowerForms_GetPowerFormsList(input: PowerForms_GetPowerFormsList_request_Input, accountId: String!): powerFormsResponse
  \\"Returns the list of PowerForms available to the user.\\"
  PowerForms_GetPowerFormsSenders(input: PowerForms_GetPowerFormsSenders_request_Input, accountId: String!): powerFormSendersResponse
  \\"Returns a single PowerForm.\\"
  PowerForms_GetPowerForm(accountId: String!, powerFormId: String!): PowerForms
  \\"Returns the form data associated with the usage of a PowerForm.\\"
  PowerForms_GetPowerFormFormData(input: ConnectFailures_GetConnectLogs_request_Input, accountId: String!, powerFormId: String!): powerFormsFormDataResponse
  \\"Retrieves a list of recipients in the specified account that are associated with a email address supplied in the query string.\\"
  RecipientNames_GetRecipientNames(input: RecipientNames_GetRecipientNames_request_Input, accountId: String!): recipientNamesResponse
  \\"Retrieves a list of envelopes that match the criteria specified in the query.\\\\n\\\\nIf the user ID of the user making the call is the same as the user ID for any returned recipient, then the userId property is added to the returned information for those recipients.\\"
  SearchFolders_GetSearchFolderContents(input: SearchFolders_GetSearchFolderContents_request_Input, accountId: String!, searchFolderId: String!): folderItemResponse
  \\"Retrieves the account settings information for the specified account.\\"
  Settings_GetSettings(accountId: String!): accountSettingsInformation
  \\"Returns the configuration information for the eNote eOriginal integration.\\"
  ENoteConfiguration_GetENoteConfiguration(accountId: String!): ENoteConfigurations
  \\"Get the password rules\\"
  AccountPasswordRules_GetAccountPasswordRules(accountId: String!): AccountPasswordRules
  \\"Returns tab settings list for specified account\\"
  TabSettings_GetTabSettings(accountId: String!): AccountTabSettings
  \\"Reserved: Retrieves shared item status for one or more users and types of items.\\\\n\\\\nUsers with account administration privileges can retrieve shared access information for all account users. Users without account administrator privileges can only retrieve shared access information for themselves and the returned information is limited to the retrieving the status of all members of the account that are sharing their folders to the user. This is equivalent to setting the shared=shared_from.\\"
  SharedAccess_GetSharedAccess(input: SharedAccess_GetSharedAccess_request_Input, accountId: String!): accountSharedAccess
  \\"Returns Account available signature providers for specified account.\\"
  AccountSignatureProviders_GetSignatureProviders(accountId: String!): AccountSignatureProviders
  \\"Retrieves a list of all signing groups in the specified account.\\"
  SigningGroups_GetSigningGroups(input: SigningGroups_GetSigningGroups_request_Input, accountId: String!): signingGroupInformation
  \\"Retrieves information, including group member information, for the specified signing group. \\"
  SigningGroups_GetSigningGroup(accountId: String!, signingGroupId: String!): SigningGroups
  \\"Retrieves the list of members in the specified Signing Group.\\"
  SigningGroups_GetSigningGroupUsers(accountId: String!, signingGroupId: String!): SigningGroupUsers
  \\"List supported languages for the recipient language setting\\"
  SupportedLanguages_GetSupportedLanguages(accountId: String!): supportedLanguages
  \\"Retrieves a list of all tabs associated with the account.\\"
  Tabs_GetTabDefinitions(input: Tabs_GetTabDefinitions_request_Input, accountId: String!): tabMetadataList
  \\"Retrieves information about the requested custom tab on the specified account.\\"
  Tab_GetCustomTab(accountId: String!, customTabId: String!): CustomTabs
  \\"Retrieves the list of templates for the specified account. The request can be limited to a specific folder.\\"
  Templates_GetTemplates(input: Templates_GetTemplates_request_Input, accountId: String!): envelopeTemplateResults
  \\"Retrieves the definition of the specified template.\\"
  Templates_GetTemplate(input: ChunkedUploads_GetChunkedUpload_request_Input, accountId: String!, templateId: String!): Templates
  \\"Retrieves the custom document field information from an existing template.\\"
  CustomFields_GetTemplateCustomFields(accountId: String!, templateId: String!): AccountCustomFields
  \\"Retrieves a list of documents associated with the specified template.\\"
  Documents_GetTemplateDocuments(accountId: String!, templateId: String!): TemplateDocuments
  \\"Retrieves one or more PDF documents from the specified template.\\\\n\\\\nYou can specify the ID of the document to retrieve or can specify \`combined\` to retrieve all documents in the template as one pdf.\\"
  Documents_GetTemplateDocument(input: Documents_GetTemplateDocument_request_Input, accountId: String!, templateId: String!, documentId: String!): File
  \\"Retrieves the custom document fields for an existing template document.\\"
  DocumentFields_GetTemplateDocumentFields(accountId: String!, templateId: String!, documentId: String!): EnvelopeDocumentFields
  \\"Returns document page image(s) based on input.\\"
  Pages_GetTemplatePageImages(input: Pages_GetPageImages_request_Input, accountId: String!, templateId: String!, documentId: String!): pageImages
  \\"Retrieves a page image for display from the specified template.\\"
  Pages_GetTemplatePageImage(input: Pages_GetTemplatePageImage_request_Input, accountId: String!, templateId: String!, documentId: String!, pageNumber: String!): File
  \\"Returns tabs on the specified page.\\"
  Tabs_GetTemplatePageTabs(accountId: String!, templateId: String!, documentId: String!, pageNumber: String!): EnvelopeRecipientTabs
  \\"Returns tabs on the document.\\"
  Tabs_GetTemplateDocumentTabs(input: Tabs_GetDocumentTabs_request_Input, accountId: String!, templateId: String!, documentId: String!): EnvelopeRecipientTabs
  \\"Retrieves general information about the template lock.\\\\n\\\\nIf the call is made by the user who has the lock and the request has the same integrator key as original, then the \`X-DocuSign-Edit\` header  field and additional lock information is included in the response. This allows users to recover a lost editing session token and the \`X-DocuSign-Edit\` header.\\"
  Lock_GetTemplateLock(accountId: String!, templateId: String!): EnvelopeLocks
  \\"Retrieves the envelope notification, reminders and expirations, information for an existing template.\\"
  Notification_GetTemplatesTemplateIdNotification(accountId: String!, templateId: String!): notification
  \\"Retrieves the information for all recipients in the specified template.\\"
  Recipients_GetTemplateRecipients(input: Recipients_GetTemplateRecipients_request_Input, accountId: String!, templateId: String!): EnvelopeRecipients
  \\"Retrieves the bulk recipient file information from a template that has a bulk recipient.\\"
  Recipients_GetTemplateBulkRecipients(input: Recipients_GetTemplateBulkRecipients_request_Input, accountId: String!, templateId: String!, recipientId: String!): EnvelopeBulkRecipients
  \\"Returns document visibility for the recipients\\"
  Recipients_GetTemplateRecipientDocumentVisibility(accountId: String!, templateId: String!, recipientId: String!): EnvelopeDocumentVisibility
  \\"Gets the tabs information for a signer or sign-in-person recipient in a template.\\"
  Recipients_GetTemplateRecipientTabs(input: Recipients_GetRecipientTabs_request_Input, accountId: String!, templateId: String!, recipientId: String!): EnvelopeRecipientTabs
  \\"Retrieves a list of file types (mime-types and file-extensions) that are not supported for upload through the DocuSign system.\\"
  UnsupportedFileTypes_GetUnsupportedFileTypes(accountId: String!): fileTypeList
  \\"Retrieves the list of users for the specified account.\\\\n\\\\nThe response returns the list of users for the account along with the information about the result set. If the \`additional_info\` query was added to the endpoint and set to **true**, the full user information is returned for each user\\"
  Users_GetUsers(input: Users_GetUsers_request_Input, accountId: String!): userInformationList
  \\"Retrieves the user information for the specified user. \\\\n\\\\nTo return additional user information that details the last login date, login status, and the user's password expiration date, set the optional \`additional_info\` query string parameter to **true**.\\"
  User_GetUser(input: User_GetUser_request_Input, accountId: String!, userId: String!): Users
  \\"Retrieves the list of cloud storage providers enabled for the account and the configuration information for the user.\\\\n\\"
  CloudStorage_GetCloudStorageProviders(input: CloudStorage_GetCloudStorageProviders_request_Input, accountId: String!, userId: String!): CloudStorageProviders
  \\"Retrieves the list of cloud storage providers enabled for the account and the configuration information for the user.\\"
  CloudStorage_GetCloudStorage(input: CloudStorage_GetCloudStorageProviders_request_Input, accountId: String!, userId: String!, serviceId: String!): CloudStorageProviders
  \\"Retrieves a list of all the items in a specified folder from the specified cloud storage provider. \\"
  CloudStorageFolder_GetCloudStorageFolderAll(input: CloudStorageFolder_GetCloudStorageFolderAll_request_Input, accountId: String!, userId: String!, serviceId: String!): CloudStorage
  \\"Retrieves a list of all the items in all  the folders associated with the user from the specified cloud storage provider. You can limit the scope of the returned items by providing a comma separated list of folder IDs in the request.\\"
  CloudStorageFolder_GetCloudStorageFolder(input: CloudStorageFolder_GetCloudStorageFolder_request_Input, accountId: String!, userId: String!, serviceId: String!, folderId: String!): CloudStorage
  \\"Retrieves a list of custom user settings for a single user.\\\\n\\\\nCustom settings provide a flexible way to store and retrieve custom user information that can be used in your own system.\\\\n\\\\n\\\\n\\\\nIf the custom user settings you want to retrieve are grouped, you must include the following information in the header, after Content-Type, in the request:\\\\n\\\\n\`X-DocuSign-User-Settings-Key:group_name\`\\\\n\\\\nWhere the \`group_name\` is your designated name for the group of customer user settings.\\\\n\\\\nIf the extra header information is not included, only the custom user settings that were added without a group are retrieved.\\"
  UserCustomSettings_GetCustomSettings(accountId: String!, userId: String!): UserCustomSettings
  \\"Retrieves the user profile information, the privacy settings and personal information (address, phone number, etc.) for the specified user.\\\\n\\\\nThe userId parameter specified in the endpoint must match the authenticated user's user ID and the user must be a member of the specified account.\\"
  UserProfile_GetProfile(accountId: String!, userId: String!): UserProfiles
  \\"Retrieves the user profile picture for the specified user. The image is returned in the same format as uploaded.\\\\n\\\\nThe userId parameter specified in the endpoint must match the authenticated user's user ID and the user must be a member of the specified account.\\\\n\\\\nIf successful, the response returns a 200 - OK and the user profile image.\\"
  UserProfileImage_GetUserProfileImage(input: UserProfileImage_GetUserProfileImage_request_Input, accountId: String!, userId: String!): File
  \\"Retrieves a list of the account settings and email notification information for the specified user.\\\\n\\\\nThe response returns the account setting name/value information and the email notification settings for the specified user. For more information about the different user settings, see the [ML:userSettings list].\\"
  UserSettings_GetUserSettings(accountId: String!, userId: String!): userSettingsInformation
  \\"Retrieves the signature definitions for the specified user.\\\\n\\\\nThe userId parameter specified in the endpoint must match the authenticated user's user ID and the user must be a member of the account.\\\\n\\\\nThe \`signatureId\` parameter accepts a signature ID or a signature name. DocuSign recommends you use signature ID (\`signatureId\`), since some names contain characters that do not properly encode into a URL. If you use the user name, it is likely that the name includes spaces. In that case, URL encode the name before using it in the endpoint. \\\\n\\\\nFor example encode \\\\\\"Bob Smith\\\\\\" as \\\\\\"Bob%20Smith\\\\\\".\\"
  UserSignatures_GetUserSignatures(input: UserSignatures_GetUserSignatures_request_Input, accountId: String!, userId: String!): userSignaturesInformation
  \\"Retrieves the structure of a single signature with a known signature name.\\\\n\\\\nThe userId specified in the endpoint must match the authenticated user's user ID and the user must be a member of the account.\\\\n\\\\nThe \`signatureId\` parameter accepts a signature ID or a signature name. DocuSign recommends you use signature ID (\`signatureId\`), since some names contain characters that do not properly encode into a URL. If you use the user name, it is likely that the name includes spaces. In that case, URL encode the name before using it in the endpoint. \\\\n\\\\nFor example encode \\\\\\"Bob Smith\\\\\\" as \\\\\\"Bob%20Smith\\\\\\".\\"
  UserSignatures_GetUserSignature(accountId: String!, userId: String!, signatureId: String!): UserSignatures
  \\"Retrieves the specified initials image or signature image for the specified user. The image is returned in the same format as uploaded. In the request you can specify if the chrome (the added line and identifier around the initial image) is returned with the image.\\\\n\\\\nThe userId property specified in the endpoint must match the authenticated user's user ID and the user must be a member of the account.\\\\n\\\\nThe \`signatureId\` parameter accepts a signature ID or a signature name. DocuSign recommends you use signature ID (\`signatureId\`), since some names contain characters that do not properly encode into a URL. If you use the user name, it is likely that the name includes spaces. In that case, URL encode the name before using it in the endpoint. \\\\n\\\\nFor example encode \\\\\\"Bob Smith\\\\\\" as \\\\\\"Bob%20Smith\\\\\\".\\"
  UserSignatures_GetUserSignatureImage(input: UserSignatures_GetUserSignatureImage_request_Input, accountId: String!, userId: String!, signatureId: String!, imageType: String!): File
  \\"Retrieves a list of social accounts linked to a user's account.\\"
  UserSocialLogin_GetUserSocialLogin(accountId: String!, userId: String!): userSocialIdResult
  \\"Get watermark information.\\"
  Watermark_GetWatermark(accountId: String!): AccountWatermarks
  \\"Gets information about the Workspaces that have been created.\\"
  Workspace_GetWorkspaces(accountId: String!): workspaceList
  \\"Retrives properties about a workspace given a unique workspaceId. \\"
  Workspace_GetWorkspace(accountId: String!, workspaceId: String!): Workspaces
  \\"Retrieves workspace folder contents, which can include sub folders and files.\\"
  WorkspaceFolder_GetWorkspaceFolder(input: WorkspaceFolder_GetWorkspaceFolder_request_Input, accountId: String!, workspaceId: String!, folderId: String!): workspaceFolderContents
  \\"Retrieves a workspace file (the binary).\\"
  WorkspaceFile_GetWorkspaceFile(input: WorkspaceFile_GetWorkspaceFile_request_Input, accountId: String!, workspaceId: String!, folderId: String!, fileId: String!): Any
  \\"Retrieves a workspace file as rasterized pages.\\"
  WorkspaceFilePages_GetWorkspaceFilePages(input: WorkspaceFilePages_GetWorkspaceFilePages_request_Input, accountId: String!, workspaceId: String!, folderId: String!, fileId: String!): pageImages
  \\"Retrieves a list of the billing plans associated with a distributor.\\"
  BillingPlans_GetBillingPlans: billingPlansResponse
  \\"Retrieves the billing plan details for the specified billing plan ID.\\"
  BillingPlans_GetBillingPlan(billingPlanId: String!): billingPlanResponse
  \\"Get membership account password rules\\"
  PasswordRules_GetPasswordRules: userPasswordRules
  \\"Retrieves a list of log entries as a JSON or xml object or as a zip file containing the entries.\\\\n\\\\nIf the Accept header is set to application/zip, the response is a zip file containing individual text files, each representing an API request.\\\\n\\\\nIf the Accept header is set to \`application/json\` or \`application/xml\`, the response returns list of log entries in either JSON or XML. An example JSON response body is shown below. \\"
  APIRequestLog_GetRequestLogs(input: UserProfileImage_GetUserProfileImage_request_Input): apiRequestLogsResult
  \\"Retrieves information for a single log entry.\\\\n\\\\n**Request**\\\\nThe \`requestLogfId\` property can be retrieved by getting the list of log entries. The Content-Transfer-Encoding header can be set to base64 to retrieve the API request/response as base 64 string. Otherwise the bytes of the request/response are returned.\\\\n\\\\n**Response**\\\\nIf the Content-Transfer-Encoding header was set to base64, the log is returned as a base64 string.\\"
  APIRequestLog_GetRequestLog(requestLogId: String!): File
  \\"Retrieves the current API request logging setting for the user and remaining log entries.\\\\n\\\\n**Response**\\\\nThe response includes the current API request logging setting for the user, along with the maximum log entries and remaining log entries.\\"
  APIRequestLog_GetRequestLogSettings: RequestLogs
  \\"Retrieves account information for the authenticated user. Since the API is sessionless, this method does not actually log you in. \\\\nInstead, the method returns information about the account or accounts that the authenticated user has access to.\\\\n\\\\n\\\\nEach account has a \`baseUrl\` property, returned in the response.\\\\nUse this \`baseUrl\` in all future API calls as the base of the request URL.\\\\n\\\\nFor each account, the \`baseUrl\` property includes the DocuSign server, the API version, and the \`accountId\` property.\\\\n\\\\nIt is not uncommon for an authenticated user to have access to more than one account (and more than one \`baseUrl\`). Depending on your integration's use case, your integration may choose to:\\\\n\\\\n* Use the account whose \`isDefault\` field is \`true\`.\\\\n* List the available accounts and ask the user to choose one.\\\\n* Enable the system administrator to set the account that should be used by your integration.\\\\n\\\\nIf this method returns successfully, then you also know that the user has successfully authenticated with the DocuSign Signature platform.\\\\n\\\\n\\\\n[legacyheader]: ../../../../guide/authentication/legacy_auth.html\\\\n[userinfo]: ../../../../guide/authentication/userinfo.html\\\\n[authcode]: ../../../../guide/authentication/oa2_auth_code.md\\\\n[implicit]: ../../../../guide/authentication/oa2_implicit.md\\\\n\\"
  LoginInformation_GetLoginInformation(input: LoginInformation_GetLoginInformation_request_Input): Authentication
}

\\"API service information\\"
type Services {
  \\"Reserved: TBD\\"
  buildBranch: String
  \\"Reserved: TBD\\"
  buildBranchDeployedDateTime: String
  \\"Reserved: TBD\\"
  buildSHA: String
  \\"Reserved: TBD\\"
  buildVersion: String
  linkedSites: [String]
  serviceVersions: [serviceVersion]
}

type serviceVersion {
  \\"The version of the rest API.\\"
  version: String
  versionUrl: String
}

\\"API resource information\\"
type Resources {
  resources: [nameValue]
}

type nameValue {
  errorDetails: errorDetails
  \\"The name or key of a name/value pair.\\"
  name: String
  \\"The initial value of the tab when it was sent to the recipient.\\"
  originalValue: String
  \\"The value field of a name/value pair.\\"
  value: String
}

\\"This object describes errors that occur. It is only valid for responses, and ignored in requests.\\"
type errorDetails {
  \\"An error code associated with the error.\\"
  errorCode: String
  \\"A short error message.\\"
  message: String
}

type provisioningInformation {
  defaultConnectionId: String
  defaultPlanId: String
  \\"The code that identifies the billing plan groups and plans for the new account.\\"
  distributorCode: String
  \\"The password for the distributorCode.\\"
  distributorPassword: String
  passwordRuleText: String
  planPromotionText: String
  purchaseOrderOrPromAllowed: String
}

\\"Account management\\"
type Accounts {
  \\"The GUID associated with the account ID.\\"
  accountIdGuid: String
  \\"The name of the current account.\\"
  accountName: String
  \\"When set to **true**, the transaction rooms feature exposed through the Workspaces API is enabled.\\"
  allowTransactionRooms: String
  \\"Reserved: TBD\\"
  billingPeriodDaysRemaining: String
  \\"Reserved: TBD\\"
  billingPeriodEndDate: String
  \\"Reserved: TBD\\"
  billingPeriodEnvelopesAllowed: String
  \\"Reserved: TBD\\"
  billingPeriodEnvelopesSent: String
  \\"Reserved: TBD\\"
  billingPeriodStartDate: String
  \\"Reserved: TBD\\"
  billingProfile: String
  \\"Reserved: TBD\\"
  canCancelRenewal: String
  \\"When set to **true**, specifies that you can upgrade the account through the API.\\"
  canUpgrade: String
  connectPermission: String
  createdDate: String
  \\"Specifies the ISO currency code for the account.\\"
  currencyCode: String
  \\"Identifies the plan that was used create this account.\\"
  currentPlanId: String
  \\"The code that identifies the billing plan groups and plans for the new account.\\"
  distributorCode: String
  docuSignLandingUrl: String
  envelopeSendingBlocked: String
  envelopeUnitPrice: String
  \\"A complex element that contains up to four Question/Answer pairs for forgotten password information for a user.\\"
  forgottenPasswordQuestionsCount: String
  isDowngrade: String
  paymentMethod: String
  \\"Identifies the type of plan. Examples include Business, Corporate, Enterprise, Free.\\"
  planClassification: String
  \\"The date that the current plan will end.\\"
  planEndDate: String
  \\"The name of the Billing Plan.\\"
  planName: String
  \\"The date that the Account started using the current plan.\\"
  planStartDate: String
  seatsAllowed: String
  seatsInUse: String
  status21CFRPart11: String
  suspensionDate: String
  suspensionStatus: String
}

input Accounts_GetAccount_request_Input {
  \\"When set to **true**, includes the account settings for the account in the response.\\"
  include_account_settings: String
}

\\"Defines a billing charge response object.\\"
type billingChargeResponse {
  \\"Reserved: TBD\\"
  billingChargeItems: [billingCharge]
}

\\"Contains information about a billing charge.\\"
type billingCharge {
  \\"Reserved: TBD\\"
  allowedQuantity: String
  \\"Reserved: TBD\\"
  blocked: String
  \\"Provides information on what services the charge item is for.\\\\n\\\\nThe following table provides a description of the different chargeName values available at this time.\\\\n\\\\n| chargeName | Description |\\\\n| --- | --- |\\\\n| id_check | ID Check Charge |\\\\n| in_person_signing | In Person Signing charge |\\\\n| envelopes Included | Sent Envelopes for the account |\\\\n| age_verify | Age verification check |\\\\n| ofac | OFAC Check |\\\\n| id_confirm | ID confirmation check |\\\\n| student_authentication | STAN PIN authentication check |\\\\n| wet_sign_fax | Pages for returning signed documents by fax |\\\\n| attachment_fax | Pages for returning attachments by fax |\\\\n| phone_authentication | Phone authentication charge |\\\\n| powerforms | PowerForm envelopes sent |\\\\n| signer_payments | Payment processing charge |\\\\n| outbound_fax | Send by fax charge |\\\\n| bulk_recipient_envelopes | Bulk Recipient Envelopes sent |\\\\n| sms_authentications | SMS authentication charge |\\\\n| saml_authentications | SAML authentication charge |\\\\n| express_signer_certificate | DocuSign Express Certificate charge |\\\\n| personal_signer_certificate | Personal Signer Certificate charge |\\\\n| safe_certificate | SAFE BioPharma Signer Certificate charge |\\\\n| seats | Included active seats charge |\\\\n| open_trust_certificate | OpenTrust Signer Certificate charge |\\"
  chargeName: String
  \\"Reserved: TBD\\"
  chargeType: String
  \\"Reserved: TBD\\"
  chargeUnitOfMeasure: String
  discounts: [billingDiscount]
  firstEffectiveDate: String
  includedQuantity: String
  \\"Reserved: TBD\\"
  incrementalQuantity: String
  lastEffectiveDate: String
  prices: [billingPrice]
  \\"Reserved: TBD\\"
  unitPrice: String
  usedQuantity: String
}

type billingDiscount {
  \\"Reserved: TBD\\"
  beginQuantity: String
  discount: String
  endQuantity: String
}

type billingPrice {
  \\"Reserved: TBD\\"
  beginQuantity: String
  endQuantity: String
  \\"Reserved: TBD\\"
  unitPrice: String
}

input BillingCharges_GetAccountBillingCharges_request_Input {
  \\"Specifies which billing charges to return.\\\\nValid values are:\\\\n\\\\n* envelopes\\\\n* seats\\"
  include_charges: String
}

\\"Defines a billing invoice response object.\\"
type billingInvoicesResponse {
  \\"Reserved: TBD\\"
  billingInvoices: [Invoices]
  \\"The URI for the next chunk of records based on the search request. It is \`null\` if this is the last set of results for the search.\\"
  nextUri: String
  \\"The URI for the prior chunk of records based on the search request. It is \`null\` if this is the first set of results for the search.\\"
  previousUri: String
}

\\"Invoices\\"
type Invoices {
  \\"Reserved: TBD\\"
  amount: String
  \\"Reserved: TBD\\"
  balance: String
  \\"Reserved: TBD\\"
  dueDate: String
  \\"Reserved: TBD\\"
  invoiceId: String
  \\"Reserved: TBD\\"
  invoiceItems: [billingInvoiceItem]
  \\"Reserved: TBD\\"
  invoiceNumber: String
  \\"Contains a URI for an endpoint that you can use to retrieve invoice information.\\"
  invoiceUri: String
  nonTaxableAmount: String
  pdfAvailable: String
  taxableAmount: String
}

\\"Contains information about an item on a billing invoice.\\"
type billingInvoiceItem {
  \\"Reserved: TBD\\"
  chargeAmount: String
  \\"Reserved: TBD\\"
  chargeName: String
  \\"Reserved: TBD\\"
  invoiceItemId: String
  \\"The quantity of envelopes to add to the account.\\"
  quantity: String
  \\"Reserved: TBD\\"
  unitPrice: String
}

input BillingInvoices_GetBillingInvoices_request_Input {
  \\"Specifies the date/time of the earliest invoice in the account to retrieve.\\"
  from_date: String
  \\"Specifies the date/time of the latest invoice in the account to retrieve.\\"
  to_date: String
}

type billingInvoicesSummary {
  \\"Reserved: TBD\\"
  billingInvoices: [Invoices]
  pastDueBalance: String
  paymentAllowed: String
}

\\"Defines a billing payments response object.\\"
type billingPaymentsResponse {
  \\"Reserved: TBD\\"
  billingPayments: [Payments]
  \\"The URI for the next chunk of records based on the search request. It is \`null\` if this is the last set of results for the search.\\"
  nextUri: String
  \\"The URI for the prior chunk of records based on the search request. It is \`null\` if this is the first set of results for the search.\\"
  previousUri: String
}

\\"Payments\\"
type Payments {
  \\"Reserved: TBD\\"
  amount: String
  \\"A sender-defined description of the line item.\\"
  description: String
  paymentDate: String
  paymentId: String
  \\"When set to **true**, a PDF version of the invoice is available. \\\\n\\\\nTo get the PDF, make the call again and change \\\\\\"Accept:\\\\\\" in the header to \\\\\\"Accept: application/pdf\\\\\\".\\"
  paymentNumber: String
}

input BillingPayments_GetPaymentList_request_Input {
  \\"Specifies the date/time of the earliest payment in the account to retrieve.\\"
  from_date: String
  \\"Specifies the date/time of the latest payment in the account to retrieve.\\"
  to_date: String
}

\\"Billing plans\\"
type BillingPlans {
  billingAddress: accountAddress
  \\"When set to **true**, the credit card address information is the same as that returned as the billing address. If false, then the billing address is considered a billing contact address, and the credit card address can be different.\\"
  billingAddressIsCreditCardAddress: String
  billingPlan: accountBillingPlan
  creditCardInformation: creditCardInformation
  paymentProcessorInformation: paymentProcessorInformation
  referralInformation: referralInformation
  successorPlans: [billingPlan]
}

\\"Contains information about an account address.\\"
type accountAddress {
  \\"First Line of the address.\\\\nMaximum length: 100 characters.\\"
  address1: String
  \\"Second Line of the address.\\\\nMaximum length: 100 characters.\\"
  address2: String
  \\"The city value of the address.\\"
  city: String
  \\"Specifies the country associated with the address.\\"
  country: String
  email: String
  fax: String
  \\"The user's first name. \\\\nMaximum Length: 50 characters.\\"
  firstName: String
  lastName: String
  phone: String
  postalCode: String
  \\"The state or province associated with the address.\\"
  state: String
  \\"Contains an array of countries supported by the billing plan.\\"
  supportedCountries: [country]
}

type country {
  isoCode: String
  name: String
  provinceValidated: String
  provinces: [province]
}

type province {
  isoCode: String
  name: String
}

\\"Contains information about an account billing plan.\\"
type accountBillingPlan {
  \\"Reserved:\\"
  addOns: [addOn]
  \\"Reserved: TBD\\"
  canCancelRenewal: String
  \\"When set to **true**, specifies that you can upgrade the account through the API.\\"
  canUpgrade: String
  \\"Specifies the ISO currency code for the account.\\"
  currencyCode: String
  \\"When set to **true**, then customer support is provided as part of the account plan.\\"
  enableSupport: String
  \\"The number of seats (users) included.\\"
  includedSeats: String
  \\"Reserved: TBD\\"
  incrementalSeats: String
  isDowngrade: String
  \\"Any other percentage discount for the plan.\\"
  otherDiscountPercent: String
  paymentCycle: String
  \\"The payment method used with the plan. The possible values are: CreditCard, PurchaseOrder, Premium, or Freemium.\\"
  paymentMethod: String
  perSeatPrice: String
  \\"Identifies the type of plan. Examples include Business, Corporate, Enterprise, Free.\\"
  planClassification: String
  \\"A complex type that sets the feature sets for the account. It contains the following information (all string content):\\\\n\\\\n* currencyFeatureSetPrices - Contains the currencyCode and currencySymbol for the alternate currency values for envelopeFee, fixedFee, seatFee that are configured for this plan feature set.\\\\n* envelopeFee - An incremental envelope cost for plans with envelope overages (when isEnabled=true).\\\\n* featureSetId - A unique ID for the feature set.\\\\n* fixedFee - A one-time fee associated with the plan (when isEnabled=true).\\\\n* isActive - Specifies whether the feature set is actively set as part of the plan.\\\\n* isEnabled - Specifies whether the feature set is actively enabled as part of the plan.\\\\n* name - The name of the feature set.\\\\n* seatFee - An incremental seat cost for seat-based plans (when isEnabled=true).\\"
  planFeatureSets: [featureSet]
  \\"The DocuSign Plan ID for the account.\\"
  planId: String
  \\"The name of the Billing Plan.\\"
  planName: String
  \\"The renewal status for the account. The acceptable values are:\\\\n\\\\n* auto: The account automatically renews.\\\\n* queued_for_close: Account will be closed at the billingPeriodEndDate.\\\\n* queued_for_downgrade: Account will be downgraded at the billingPeriodEndDate.\\"
  renewalStatus: String
  \\"A complex type that contains any seat discount information.\\\\n\\\\nValues are: BeginSeatCount, EndSeatCount, and SeatDiscountPercent.\\"
  seatDiscounts: [seatDiscount]
  \\"The support incident fee charged for each support incident.\\"
  supportIncidentFee: String
  \\"The support plan fee charged for this plan.\\"
  supportPlanFee: String
}

\\"Contains information about add ons.\\"
type addOn {
  \\"Reserved:\\"
  active: String
  \\"Reserved:\\"
  addOnId: String
  id: String
  \\"Reserved:\\"
  name: String
}

type featureSet {
  \\"A complex type that contains alternate currency values that are configured for this plan feature set.\\"
  currencyFeatureSetPrices: [currencyFeatureSetPrice]
  envelopeFee: String
  \\"A unique ID for the feature set.\\"
  featureSetId: String
  fixedFee: String
  \\"When set to **true**, indicates that this module is enabled on the account.\\"
  is21CFRPart11: String
  isActive: String
  \\"Specifies whether the feature set is actively enabled as part of the plan.\\"
  isEnabled: String
  name: String
  \\"An incremental seat cost for seat-based plans. Only valid when isEnabled for the feature set is set to true.\\"
  seatFee: String
}

type currencyFeatureSetPrice {
  \\"Specifies the alternate ISO currency code for the account.\\"
  currencyCode: String
  \\"Specifies the alternate currency symbol for the account.\\"
  currencySymbol: String
  \\"An incremental envelope cost for plans with envelope overages (when \`isEnabled\` is set to **true**.)\\"
  envelopeFee: String
  \\"Specifies a one-time fee associated with the plan (when \`isEnabled\` is set to **true**.)\\"
  fixedFee: String
  \\"Specifies an incremental seat cost for seat-based plans (when \`isEnabled\` is set to **true**.)\\"
  seatFee: String
}

type seatDiscount {
  \\"Reserved: TBD\\"
  beginSeatCount: String
  discountPercent: String
  \\"Reserved: TBD\\"
  endSeatCount: String
}

type creditCardInformation {
  address: addressInformation
  \\"The number on the credit card.\\"
  cardNumber: String
  \\"The credit card type. Valid values are: visa, mastercard, or amex.\\"
  cardType: String
  \\"The month that the credit card expires (1-12).\\"
  expirationMonth: String
  \\"The year 4 digit year in which the credit card expires.\\"
  expirationYear: String
  \\"The exact name printed on the credit card.\\"
  nameOnCard: String
}

\\"Contains address information.\\"
type addressInformation {
  \\"The city associated with the address.\\"
  city: String
  \\"Specifies the country associated with the address.\\"
  country: String
  \\"A Fax number associated with the address if one is available.\\"
  fax: String
  \\"A phone number associated with the address.\\"
  phone: String
  \\"The state or province associated with the address.\\"
  state: String
  \\"The first line of the address.\\"
  street1: String
  \\"The second line of the address (optional).\\"
  street2: String
  \\"The zip or postal code associated with the address.\\"
  zip: String
}

type paymentProcessorInformation {
  address: addressInformation
  billingAgreementId: String
  email: String
}

\\"A complex type that contains the following information for entering referral and discount information. The following items are included in the referral information (all string content): enableSupport, includedSeats, saleDiscountPercent, saleDiscountAmount, saleDiscountFixedAmount, saleDiscountPeriods, saleDiscountSeatPriceOverride, planStartMonth, referralCode, referrerName, advertisementId, publisherId, shopperId, promoCode, groupMemberId, idType, and industry\\"
type referralInformation {
  \\"A complex type that contains the following information for entering referral and discount information. The following items are included in the referral information (all string content): enableSupport, includedSeats, saleDiscountPercent, saleDiscountAmount, saleDiscountFixedAmount, saleDiscountPeriods, saleDiscountSeatPriceOverride, planStartMonth, referralCode, referrerName, advertisementId, publisherId, shopperId, promoCode, groupMemberId, idType, and industry.\\"
  advertisementId: String
  \\"When set to **true**, then customer support is provided as part of the account plan.\\"
  enableSupport: String
  externalOrgId: String
  groupMemberId: String
  idType: String
  \\"The number of seats (users) included.\\"
  includedSeats: String
  industry: String
  planStartMonth: String
  promoCode: String
  publisherId: String
  referralCode: String
  referrerName: String
  \\"Reserved for DocuSign use only.\\"
  saleDiscountAmount: String
  \\"Reserved for DocuSign use only.\\"
  saleDiscountFixedAmount: String
  \\"Reserved for DocuSign use only.\\"
  saleDiscountPercent: String
  \\"Reserved for DocuSign use only.\\"
  saleDiscountPeriods: String
  \\"Reserved for DocuSign use only.\\"
  saleDiscountSeatPriceOverride: String
  shopperId: String
}

\\"Contains information about a billing plan.\\"
type billingPlan {
  \\"Reserved: TBD\\"
  appStoreProducts: [appStoreProduct]
  \\"Contains the currencyCode and currencySymbol for the alternate currency values for envelopeFee, fixedFee, and seatFee that are configured for this plan feature set.\\"
  currencyPlanPrices: [currencyPlanPrice]
  \\"When set to **true**, then customer support is provided as part of the account plan.\\"
  enableSupport: String
  \\"The number of seats (users) included.\\"
  includedSeats: String
  otherDiscountPercent: String
  \\"The payment cycle associated with the plan. The possible values are: Monthly or Annually.\\"
  paymentCycle: String
  paymentMethod: String
  \\"The per seat price for the plan.\\"
  perSeatPrice: String
  \\"Identifies the type of plan. Examples include Business, Corporate, Enterprise, Free.\\"
  planClassification: String
  \\"A complex type that sets the feature sets for the account.\\"
  planFeatureSets: [featureSet]
  \\"The DocuSign Plan ID for the account.\\"
  planId: String
  \\"The name of the Billing Plan.\\"
  planName: String
  seatDiscounts: [seatDiscount]
  \\"The support incident fee charged for each support incident.\\"
  supportIncidentFee: String
  \\"The support plan fee charged for this plan.\\"
  supportPlanFee: String
}

\\"Contains information about an APP store product.\\"
type appStoreProduct {
  marketPlace: String
  \\"The Product ID from the AppStore.\\"
  productId: String
}

type currencyPlanPrice {
  \\"Specifies the ISO currency code for the account.\\"
  currencyCode: String
  \\"Specifies the currency symbol for the account.\\"
  currencySymbol: String
  perSeatPrice: String
  \\"The support incident fee charged for each support incident.\\"
  supportIncidentFee: String
  \\"The support plan fee charged for this plan.\\"
  supportPlanFee: String
  supportedCardTypes: creditCardTypes
}

type creditCardTypes {
  \\"An array containing supported credit card types.\\"
  cardTypes: [String]
}

input BillingPlan_GetBillingPlan_request_Input {
  \\"When set to **true**, excludes credit card information from the response.\\"
  include_credit_card_information: String
  \\"When set to **true**, the \`canUpgrade\` and \`renewalStatus\` properities are included the response and an array of \`supportedCountries\` property is added to the \`billingAddress\` information.\\"
  include_metadata: String
  \\"When set to **true**, excludes successor information from the response.\\"
  include_successor_plans: String
}

\\"Brand management for accounts\\"
type AccountBrands {
  \\"The list of brands.\\"
  brands: [brand]
  \\"The brand seen by envelope recipients when a brand is not explicitly set.\\"
  recipientBrandIdDefault: String
  \\"The brand seen by envelope senders when a brand is not explicitly set.\\"
  senderBrandIdDefault: String
}

type brand {
  \\"The name of the company associated with this brand.\\"
  brandCompany: String
  \\"The ID used to identify a specific brand in API calls.\\"
  brandId: String
  \\"The name of the brand.\\"
  brandName: String
  colors: [nameValue]
  emailContent: [brandEmailContent]
  errorDetails: errorDetails
  isOverridingCompanyName: String
  isSendingDefault: String
  isSigningDefault: String
  landingPages: [nameValue]
  links: [brandLink]
  logos: brandLogos
  resources: brandResourceUrls
}

type brandEmailContent {
  content: String
  emailContentType: String
  emailToLink: String
  linkText: String
}

type brandLink {
  linkText: String
  linkType: String
  showLink: String
  urlOrMailTo: String
}

type brandLogos {
  email: String
  primary: String
  secondary: String
}

type brandResourceUrls {
  email: String
  sending: String
  signing: String
  signingCaptive: String
}

input Brands_GetBrands_request_Input {
  \\"When set to **true**, excludes distributor brand information from the response set.\\"
  exclude_distributor_brand: String
  \\"When set to **true**, returns the logos associated with the brand.\\"
  include_logos: String
}

input Brand_GetBrand_request_Input {
  include_external_references: String
  include_logos: String
}

scalar Any

type brandResourcesList {
  resourcesContentTypes: [brandResources]
}

type brandResources {
  createdByUserInfo: userInfo
  createdDate: String
  modifiedByUserInfo: userInfo
  modifiedDate: String
  modifiedTemplates: [String]
  resourcesContentType: String
  resourcesContentUri: String
}

type userInfo {
  activationAccessCode: String
  email: String
  errorDetails: errorDetails
  loginStatus: String
  sendActivationEmail: String
  uri: String
  \\"The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.\\"
  userId: String
  userName: String
  userStatus: String
  userType: String
}

input BrandResources_GetBrandResources_request_Input {
  langcode: String
  return_master: String
}

\\"Bulk envelopes\\"
type BulkEnvelopes {
  \\"Reserved: TBD\\"
  bulkEnvelopeStatuses: [bulkEnvelopeStatus]
  \\"The last position in the result set.\\"
  endPosition: String
  \\"The URI for the next chunk of records based on the search request. It is \`null\` if this is the last set of results for the search.\\"
  nextUri: String
  \\"The URI for the prior chunk of records based on the search request. It is \`null\` if this is the first set of results for the search.\\"
  previousUri: String
  \\"The number of results returned in this response.\\"
  resultSetSize: String
  \\"Starting position of the current result set.\\"
  startPosition: String
  \\"The total number of items in the search's result set. It will always be greater than or equal to the value of the \`resultSetSize\` field.\\"
  totalSetSize: String
}

type bulkEnvelopeStatus {
  \\"Specifies an identifier which can be used to retrieve a more detailed status of individual bulk recipient batches.\\"
  batchId: String
  \\"The number of items returned in this response.\\"
  batchSize: String
  \\"Reserved: TBD\\"
  bulkEnvelopes: [bulkEnvelope]
  \\"Reserved: TBD\\"
  bulkEnvelopesBatchUri: String
  \\"The last position in the result set.\\"
  endPosition: String
  \\"The number of entries with a status of failed.\\"
  failed: String
  \\"The URI for the next chunk of records based on the search request. It is \`null\` if this is the last set of results for the search.\\"
  nextUri: String
  \\"The URI for the prior chunk of records based on the search request. It is \`null\` if this is the first set of results for the search.\\"
  previousUri: String
  \\"The number of entries with a status of queued.\\"
  queued: String
  \\"The number of results returned in this response.\\"
  resultSetSize: String
  \\"The number of entries with a status of sent.\\"
  sent: String
  \\"Starting position of the current result set.\\"
  startPosition: String
  submittedDate: String
  \\"The total number of items in the search's result set. It will always be greater than or equal to the value of the \`resultSetSize\` field.\\"
  totalSetSize: String
}

type bulkEnvelope {
  \\"Reserved: TBD\\"
  bulkRecipientRow: String
  \\"Indicates the status of the bulk send operation. Returned values can be:\\\\n* queued\\\\n* processing\\\\n* sent\\\\n* failed\\"
  bulkStatus: String
  email: String
  \\"The envelope ID of the envelope status that failed to post.\\"
  envelopeId: String
  \\"Contains a URI for an endpoint that you can use to retrieve the envelope or envelopes.\\"
  envelopeUri: String
  errorDetails: errorDetails
  name: String
  submittedDateTime: String
  \\"Used to identify an envelope. The id is a sender-generated value and is valid in the DocuSign system for 7 days. It is recommended that a transaction ID is used for offline signing to ensure that an envelope is not sent multiple times. The \`transactionId\` property can be used determine an envelope's status (i.e. was it created or not) in cases where the internet connection was lost before the envelope status was returned.\\"
  transactionId: String
}

input BulkEnvelopes_GetEnvelopesBulk_request_Input {
  \\"The number of results to return. This can be 1 to 20.\\"
  count: String
  \\"Specifies which entries are included in the response. Multiple entries can be included by using commas in the query string (example: ?include=\\\\\\"failed,queued\\\\\\") \\\\n\\\\nValid values: \\\\n* all - Returns all entries. If present, overrides all other query settings. This is the default if no query string is provided.\\\\n* failed - Entries with a failed status.\\\\n* processing - Entries with a processing status.\\\\n* queued - Entries with a queued status.\\\\n* sent - Entries with a sent status.\\"
  include: String
  \\"The position of the bulk envelope items in the response. This is used for repeated calls, when the number of bulk envelopes returned is too large for one return. The default value is 0.\\"
  start_position: String
}

input BulkEnvelopes_GetBulkEnvelopesBatchId_request_Input {
  \\"Specifies the number of entries to return.\\"
  count: String
  \\"Specifies which entries are included in the response. Multiple entries can be included by using commas in the query string (example: ?include=\\\\\\"failed,queued\\\\\\") \\\\n\\\\nValid values: \\\\n* all - Returns all entries. If present, overrides all other query settings. This is the default if no query string is provided.\\\\n* failed - Entries with a failed status.\\\\n* processing - Entries with a processing status.\\\\n* queued - Entries with a queued status.\\\\n* sent - Entries with a sent status.\\"
  include: String
  \\"Specifies the location in the list of envelopes from which to start.\\"
  start_position: String
}

type ChunkedUploads {
  checksum: String
  chunkedUploadId: String
  chunkedUploadParts: [chunkedUploadPart]
  chunkedUploadUri: String
  committed: String
  expirationDateTime: String
  maxChunkedUploadParts: String
  maxTotalSize: String
  totalSize: String
}

type chunkedUploadPart {
  sequence: String
  \\"Reserved: TBD\\"
  size: String
}

input ChunkedUploads_GetChunkedUpload_request_Input {
  \\"A comma-separated list of additional template attributes to include in the response. Valid values are: recipients, folders, documents, custom_fields, and notifications.\\"
  include: String
}

type connectConfigResults {
  \\"Array of Connect Configurations\\"
  configurations: [ConnectConfigurations]
  \\"Record count.\\"
  totalRecords: String
}

\\"Connect configurations\\"
type ConnectConfigurations {
  \\"When set to **true**, the tracked envelope and recipient events for all users, including users that are added a later time, are sent through Connect.\\"
  allUsers: String
  \\"When set to **true**, data is sent to the urlToPublishTo web address. This option can be set to false to stop sending data while maintaining the Connect configuration information.\\"
  allowEnvelopePublish: String
  \\"If merge field's are being used, specifies the type of the merge field. The only  supported value is **salesforce**.\\"
  configurationType: String
  \\"Specifies the DocuSign generated ID for the Connect configuration.\\"
  connectId: String
  \\"This turns Connect logging on or off. When set to **true**, logging is turned on.\\"
  enableLog: String
  \\"A comma separated list of Envelope related events that are tracked through Connect. The possible event values are: Sent, Delivered, Completed, Declined, and Voided.\\"
  envelopeEvents: String
  includeCertSoapHeader: String
  \\"When set to **true**, the Connect Service includes the Certificate of Completion with completed envelopes.\\"
  includeCertificateOfCompletion: String
  \\"When set to **true**, the Document Fields associated with the envelope's documents are included in the notification messages. Document Fields are optional custom name-value pairs added to documents using the API.\\"
  includeDocumentFields: String
  \\"When set to **true**, Connect will send the PDF document along with the update XML.\\"
  includeDocuments: String
  \\"When set to **true**, Connect will include the voidedReason for voided envelopes.\\"
  includeEnvelopeVoidReason: String
  \\"When set to **true**, Connect will include the sender account as Custom Field in the data.\\"
  includeSenderAccountasCustomField: String
  \\"When set to **true**, Connect will include the envelope time zone information.\\"
  includeTimeZoneInformation: String
  \\"The name of the Connect configuration. The name helps identify the configuration in the list.\\"
  name: String
  \\"A comma separated list of *Recipient* related events that will trigger a notification to your webhook Connect listener. The possible event values are: Sent, Delivered, Completed, Declined, AuthenticationFailed, and AutoResponded.\\"
  recipientEvents: String
  \\"When set to **true**, and a publication message fails to be acknowledged, the message goes back into the queue and the system will retry delivery after a successful acknowledgement is received. If the delivery fails a second time, the message is not returned to the queue for sending until Connect receives a successful acknowledgement and it has been at least 24 hours since the previous retry. There is a maximum of ten retries Alternately, you can use Republish Connect Information to manually republish the envelope information.\\"
  requiresAcknowledgement: String
  \\"When set to **true**, Mutual TLS will be enabled for notifications. Mutual TLS must be initiated by the listener (the customer's web server) during the TLS handshake protocol.\\"
  signMessageWithX509Certificate: String
  \\"The namespace of the SOAP interface.\\\\n\\\\nThe namespace value must be set if useSoapInterface is set to true.\\"
  soapNamespace: String
  \\"This is the web address and name of your listener or Retrieving Service endpoint. You need to include HTTPS:// in the web address.\\"
  urlToPublishTo: String
  \\"When set to **true**, indicates that the \`urlToPublishTo\` property contains a SOAP endpoint.\\"
  useSoapInterface: String
  \\"A comma separated list of userIds. This sets the users associated with the tracked envelope and recipient events. When a tracked event occurs for a set user, the a notification message is sent to your Connect listener.\\"
  userIds: String
}

\\"Connect event logging\\"
type ConnectEvents {
  \\"An array of containing failure information from the Connect failure log.\\"
  failures: [connectLog]
  \\"A complex type containing Connect log information. It is divided into two sections, one for regular logs and one for Connect failures.\\"
  logs: [connectLog]
  \\"Record count.\\"
  totalRecords: String
  \\"Type of the user. Valid values: type_owner, type_participant.\\"
  type: String
}

type connectLog {
  \\"The account ID associated with the envelope.\\"
  accountId: String
  \\"The web address of the listener or Retrieving Service end point for Connect.\\"
  configUrl: String
  \\"A complex element containing information about the Connect configuration, error details, date/time, description and payload.\\\\n\\\\nThis is only included in the response if the query additional_info=true is used.\\"
  connectDebugLog: [connectDebugLog]
  \\"The identifier for the Connect configuration that failed. If an account has multiple Connect configurations, this value is used to look up the Connect configuration for the failed post.\\"
  connectId: String
  \\"The date and time the entry was created.\\"
  created: String
  \\"The email that sent the envelope.\\"
  email: String
  \\"The envelope ID of the envelope status that failed to post.\\"
  envelopeId: String
  \\"The error that caused the Connect post to fail.\\"
  error: String
  \\"The failure log ID for the failure.\\"
  failureId: String
  \\"The URI for the failure.\\"
  failureUri: String
  \\"The date and time the last attempt to post.\\"
  lastTry: String
  \\"The Connect log ID for the entry.\\"
  logId: String
  \\"The URI for the log item.\\"
  logUri: String
  \\"The number of times the Connect post has been retried.\\"
  retryCount: String
  \\"The UEI to retry to publish the Connect failure.\\"
  retryUri: String
  \\"The new envelope status for the failed Connect post. The possible values are: Any, Voided, Created, Deleted, Sent, Delivered, Signed, Completed, Declined, TimedOut, Template, or Processing.\\"
  status: String
  \\"The envelope subject.\\"
  subject: String
  \\"The name of the envelope sender.\\"
  userName: String
}

type connectDebugLog {
  connectConfig: String
  errorDetails: errorDetails
  eventDateTime: String
  eventDescription: String
  payload: String
}

input ConnectFailures_GetConnectLogs_request_Input {
  \\"Start of the search date range. Only returns templates created on or after this date/time. If no value is specified, there is no limit on the earliest date created.\\"
  from_date: String
  \\"End of the search date range. Only returns templates created up to this date/time. If no value is provided, this defaults to the current date.\\"
  to_date: String
}

input ConnectLog_GetConnectLog_request_Input {
  \\"When true, the connectDebugLog information is included in the response.\\"
  additional_info: String
}

type integratedUserInfoList {
  allUsersSelected: String
  \\"The last position in the result set.\\"
  endPosition: String
  \\"The URI for the next chunk of records based on the search request. It is \`null\` if this is the last set of results for the search.\\"
  nextUri: String
  \\"The URI for the prior chunk of records based on the search request. It is \`null\` if this is the first set of results for the search.\\"
  previousUri: String
  \\"The number of results returned in this response.\\"
  resultSetSize: String
  \\"Starting position of the current result set.\\"
  startPosition: String
  \\"The total number of items in the search's result set. It will always be greater than or equal to the value of the \`resultSetSize\` field.\\"
  totalSetSize: String
  users: [userInfo]
}

input Connect_GetConnectUsers_request_Input {
  \\"Optional. Number of items to return.\\"
  count: String
  \\"Filters the returned user records by the email address or a sub-string of email address.\\"
  email_substring: String
  list_included_users: String
  \\"The position within the total result set from which to start returning values. The value **thumbnail** may be used to return the page image.\\"
  start_position: String
  \\"Filters the results by user status.\\\\nYou can specify a comma-separated\\\\nlist of the following statuses:\\\\n\\\\n* ActivationRequired \\\\n* ActivationSent \\\\n* Active\\\\n* Closed \\\\n* Disabled\\"
  status: String
  \\"Filters the user records returned by the user name or a sub-string of user name.\\"
  user_name_substring: String
}

\\"Account consumer disclosures\\"
type AccountConsumerDisclosures {
  \\"A GUID identifying the account associated with the consumer disclosure\\"
  accountEsignId: String
  \\"Indicates whether the customer can withdraw their acceptance of the consumer disclosure.\\"
  allowCDWithdraw: String
  allowCDWithdrawMetadata: settingsMetadata
  changeEmail: String
  changeEmailOther: String
  \\"The name of the company associated with the consumer disclosure.\\"
  companyName: String
  \\"The phone number of the company associated with the consumer disclosure.\\"
  companyPhone: String
  copyCostPerPage: String
  \\"Specifies the fee collection method for cases in which the customer requires paper copies of the document.\\\\n\\\\nMaximum Length: 255 characters\\"
  copyFeeCollectionMethod: String
  copyRequestEmail: String
  custom: String
  enableEsign: String
  \\"The Electronic Record and Signature Disclosure text. The disclosure text includes the html formatting.\\"
  esignAgreement: String
  esignText: String
  languageCode: String
  mustAgreeToEsign: String
  pdfId: String
  useBrand: String
  useConsumerDisclosureWithinAccount: String
  useConsumerDisclosureWithinAccountMetadata: settingsMetadata
  \\"Contains the first address line of the postal address to which a customer can send a consent withdrawal notification.\\\\n\\\\nMaximum length: 100 characters.\\"
  withdrawAddressLine1: String
  \\"Contains the second address line of the postal address to which a customer can send a consent withdrawal notification.\\\\n\\\\nMaximum length: 100 characters.\\"
  withdrawAddressLine2: String
  \\"Indicates whether the customer can withdraw consent by email.\\"
  withdrawByEmail: String
  \\"Indicates whether the customer can withdraw consent by postal mail.\\"
  withdrawByMail: String
  \\"Indicates whether the customer can withdraw consent by phone.\\"
  withdrawByPhone: String
  \\"Contains the city of the postal address to which a customer can send a consent withdrawal notification.\\\\n\\\\nMaximum length: 50 characters.\\"
  withdrawCity: String
  \\"Indicates the consequences of withdrawing consent.\\"
  withdrawConsequences: String
  \\"Contains the email address to which a customer can send a consent withdrawal notification.\\\\n\\\\nMaximum length: 100 characters.\\"
  withdrawEmail: String
  \\"Indicates other information need to withdraw consent.\\\\n\\\\nMaximum length: 255 characters.\\"
  withdrawOther: String
  \\"Contains the phone number which a customer can call to register consent withdrawal notification.\\\\n\\\\nMaximum length: 20 characters.\\"
  withdrawPhone: String
  \\"Contains the postal code of the postal address to which a customer can send a consent withdrawal notification.\\\\n\\\\nMaximum length: 20 characters.\\"
  withdrawPostalCode: String
  \\"Contains the state of the postal address to which a customer can send a consent withdrawal notification.\\"
  withdrawState: String
}

type settingsMetadata {
  \\"When set to **true**, indicates that this module is enabled on the account.\\"
  is21CFRPart11: String
  options: [String]
  rights: String
  uiHint: String
  uiOrder: String
  uiType: String
}

input ConsumerDisclosure_GetConsumerDisclosure_request_Input {
  \\"Specifies the language used in the response. The supported languages, with the language value shown in parenthesis, are: Arabic (ar), Bulgarian (bg), Czech (cs), Chinese Simplified (zh_CN), Chinese Traditional (zh_TW), Croatian (hr), Danish (da), Dutch (nl), English US (en), English UK (en_GB), Estonian (et), Farsi (fa), Finnish (fi), French (fr), French Canada (fr_CA), German (de), Greek (el), Hebrew (he), Hindi (hi), Hungarian (hu), Bahasa Indonesia (id), Italian (it), Japanese (ja), Korean (ko), Latvian (lv), Lithuanian (lt), Bahasa Melayu (ms), Norwegian (no), Polish (pl), Portuguese (pt), Portuguese Brazil (pt_BR), Romanian (ro), Russian (ru), Serbian (sr), Slovak (sk), Slovenian (sl), Spanish (es),Spanish Latin America (es_MX), Swedish (sv), Thai (th), Turkish (tr), Ukrainian (uk), and Vietnamese (vi).\\\\n\\\\nAdditionally, the value can be set to \`browser\` to automatically detect the browser language being used by the viewer and display the disclosure in that language.\\"
  langCode: String
}

type contactGetResponse {
  contacts: [Contacts]
  \\"The last position in the result set.\\"
  endPosition: String
  \\"The URI for the next chunk of records based on the search request. It is \`null\` if this is the last set of results for the search.\\"
  nextUri: String
  \\"The URI for the prior chunk of records based on the search request. It is \`null\` if this is the first set of results for the search.\\"
  previousUri: String
  \\"The number of results returned in this response.\\"
  resultSetSize: String
  \\"Starting position of the current result set.\\"
  startPosition: String
  \\"The total number of items in the search's result set. It will always be greater than or equal to the value of the \`resultSetSize\` field.\\"
  totalSetSize: String
}

type Contacts {
  \\"The unique identifier of a person in the contacts address book.\\"
  contactId: String
  contactPhoneNumbers: [contactPhoneNumber]
  contactUri: String
  emails: [String]
  errorDetails: errorDetails
  name: String
  organization: String
  \\"When set to **true**, this custom tab is shared.\\"
  shared: String
  signingGroup: String
  \\"The display name for the signing group. \\\\n\\\\nMaximum Length: 100 characters.\\"
  signingGroupName: String
}

type contactPhoneNumber {
  phoneNumber: String
  phoneType: String
}

input Contacts_GetContactById_request_Input {
  cloud_provider: String
}

\\"Custom Fields\\"
type AccountCustomFields {
  \\"An array of list custom fields.\\"
  listCustomFields: [listCustomField]
  \\"An array of text custom fields.\\"
  textCustomFields: [textCustomField]
}

type listCustomField {
  \\"If merge field's are being used, specifies the type of the merge field. The only  supported value is **salesforce**.\\"
  configurationType: String
  errorDetails: errorDetails
  \\"An ID used to specify a custom field.\\"
  fieldId: String
  listItems: [String]
  \\"The name of the custom field.\\"
  name: String
  \\"When set to **true**, the signer is required to fill out this tab\\"
  required: String
  \\"A boolean indicating if the value should be displayed.\\"
  show: String
  \\"The value of the custom field.\\\\n\\\\nMaximum Length: 100 characters.\\"
  value: String
}

type textCustomField {
  \\"If merge field's are being used, specifies the type of the merge field. The only  supported value is **salesforce**.\\"
  configurationType: String
  errorDetails: errorDetails
  \\"An ID used to specify a custom field.\\"
  fieldId: String
  \\"The name of the custom field.\\"
  name: String
  \\"When set to **true**, the signer is required to fill out this tab\\"
  required: String
  \\"A boolean indicating if the value should be displayed.\\"
  show: String
  \\"The value of the custom field.\\"
  value: String
}

\\"Result set for the Envelopes: listStatusChanges method\\"
type envelopesInformation {
  \\"The last position in the result set.\\"
  endPosition: String
  \\"Array of envelope statuses and transaction Ids in the result set.\\"
  envelopeTransactionStatuses: [envelopeTransactionStatus]
  \\"Set of envelope information\\"
  envelopes: [Envelopes]
  \\"The URI for the next chunk of records based on the search request. It is \`null\` if this is the last set of results for the search.\\"
  nextUri: String
  \\"The URI for the prior chunk of records based on the search request. It is \`null\` if this is the first set of results for the search.\\"
  previousUri: String
  \\"The number of results returned in this response.\\"
  resultSetSize: String
  \\"Starting position of the current result set.\\"
  startPosition: String
  \\"The total number of items in the search's result set. It will always be greater than or equal to the value of the \`resultSetSize\` field.\\"
  totalSetSize: String
}

type envelopeTransactionStatus {
  \\"The envelope ID of the envelope status that failed to post.\\"
  envelopeId: String
  errorDetails: errorDetails
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"Used to identify an envelope. The id is a sender-generated value and is valid in the DocuSign system for 7 days. It is recommended that a transaction ID is used for offline signing to ensure that an envelope is not sent multiple times. The \`transactionId\` property can be used determine an envelope's status (i.e. was it created or not) in cases where the internet connection was lost before the envelope status was returned.\\"
  transactionId: String
}

\\"Envelope creation, management\\"
type Envelopes {
  \\"When set to **true**, Document Markup is enabled for envelope. Account must have Document Markup enabled to use this\\"
  allowMarkup: String
  \\"When set to **true**, the recipient can redirect an envelope to a more appropriate recipient.\\"
  allowReassign: String
  \\"When set to **true**, the envelope is queued for processing and the value of the \`status\` property is set to 'Processing'. Additionally, get status calls return 'Processing' until completed.\\"
  asynchronous: String
  attachmentsUri: String
  \\"Specifies the Authoritative copy feature. If set to true the Authoritative copy feature is enabled.\\"
  authoritativeCopy: String
  \\"Specifies whether auto navigation is set for the recipient.\\"
  autoNavigation: String
  \\"The unique identifier of a brand.\\"
  brandId: String
  brandLock: String
  \\"Retrieves a URI for an endpoint that allows you to easily retrieve certificate information.\\"
  certificateUri: String
  \\"Specifies the date and time this item was completed.\\"
  completedDateTime: String
  \\"Indicates the date and time the item was created.\\"
  createdDateTime: String
  customFields: AccountCustomFields
  \\"Contains a URI for an endpoint that you can use to retrieve the custom fields.\\"
  customFieldsUri: String
  \\"The date and time the recipient declined the document.\\"
  declinedDateTime: String
  \\"Specifies the data and time the item was deleted.\\"
  deletedDateTime: String
  \\"Reserved: For DocuSign use only.\\"
  deliveredDateTime: String
  documentsCombinedUri: String
  \\"Contains a URI for an endpoint that you can use to retrieve the documents.\\"
  documentsUri: String
  \\"This is the same as the email body. If specified it is included in email body for all envelope recipients.\\"
  emailBlurb: String
  emailSettings: EnvelopeEmailSettings
  \\"Specifies the subject of the email that is sent to all recipients.\\\\n\\\\nSee [ML:Template Email Subject Merge Fields] for information about adding merge field information to the email subject.\\"
  emailSubject: String
  \\"When set to **true**, the signer is allowed to print the document and sign it on paper.\\"
  enableWetSign: String
  \\"When set to **true**, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.\\\\n\\\\nYour account must have Document Visibility enabled to use this.\\"
  enforceSignerVisibility: String
  \\"The envelope ID of the envelope status that failed to post.\\"
  envelopeId: String
  \\"When set to **true**, Envelope ID Stamping is enabled.\\"
  envelopeIdStamping: String
  \\"Contains a URI for an endpoint that you can use to retrieve the envelope or envelopes.\\"
  envelopeUri: String
  initialSentDateTime: String
  \\"When set to **true**, indicates that this module is enabled on the account.\\"
  is21CFRPart11: String
  isSignatureProviderEnvelope: String
  \\"The date and time the item was last modified.\\"
  lastModifiedDateTime: String
  lockInformation: EnvelopeLocks
  \\"When set to **true**, prevents senders from changing the contents of \`emailBlurb\` and \`emailSubject\` properties for the envelope. \\\\n\\\\nAdditionally, this prevents users from making changes to the contents of \`emailBlurb\` and \`emailSubject\` properties when correcting envelopes. \\\\n\\\\nHowever, if the \`messageLock\` node is set to true**** and the \`emailSubject\` property is empty, senders and correctors are able to add a subject to the envelope.\\"
  messageLock: String
  notification: notification
  \\"Contains a URI for an endpoint that you can use to retrieve the notifications.\\"
  notificationUri: String
  purgeState: String
  recipients: EnvelopeRecipients
  \\"When set to **true**, prevents senders from changing, correcting, or deleting the recipient information for the envelope.\\"
  recipientsLock: String
  \\"Contains a URI for an endpoint that you can use to retrieve the recipients.\\"
  recipientsUri: String
  \\"The date and time the envelope was sent.\\"
  sentDateTime: String
  \\"Specifies the physical location where the signing takes place. It can have two enumeration values; InPerson and Online. The default value is Online.\\"
  signingLocation: String
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* created - The envelope is created as a draft. It can be modified and sent later.\\\\n* sent - The envelope is sent to the recipients.\\"
  status: String
  \\"The data and time the status changed.\\"
  statusChangedDateTime: String
  \\"Contains a URI for an endpoint which you can use to retrieve the templates.\\"
  templatesUri: String
  \\"Used to identify an envelope. The id is a sender-generated value and is valid in the DocuSign system for 7 days. It is recommended that a transaction ID is used for offline signing to ensure that an envelope is not sent multiple times. The \`transactionId\` property can be used determine an envelope's status (i.e. was it created or not) in cases where the internet connection was lost before the envelope status was returned.\\"
  transactionId: String
  \\"When set to **true**, the disclosure is shown to recipients in accordance with the account's Electronic Record and Signature Disclosure frequency setting. When set to **false**, the Electronic Record and Signature Disclosure is not shown to any envelope recipients. \\\\n\\\\nIf the \`useDisclosure\` property is not set, then the account's normal disclosure setting is used and the value of the \`useDisclosure\` property is not returned in responses when getting envelope information.\\"
  useDisclosure: String
  \\"The date and time the envelope or template was voided.\\"
  voidedDateTime: String
  \\"The reason the envelope or template was voided.\\"
  voidedReason: String
}

\\"Envelope email settings\\"
type EnvelopeEmailSettings {
  \\"A list of email addresses that receive a copy of all email communications for an envelope. You can use this for archiving purposes.\\"
  bccEmailAddresses: [bccEmailAddress]
  replyEmailAddressOverride: String
  replyEmailNameOverride: String
}

\\"Contains information about the BCC email address.\\"
type bccEmailAddress {
  \\"Only users with canManageAccount setting can use this option. An array of up to 5 email addresses the envelope is sent to as a BCC email. \\\\n \\\\nExample: If your account has BCC for Email Archive set up for the email address 'archive@mycompany.com' and you send an envelope using the BCC Email Override to send a BCC email to 'salesarchive@mycompany.com', then a copy of the envelope is only sent to the 'salesarchive@mycompany.com' email address.\\"
  bccEmailAddressId: String
  \\"Specifies the BCC email address. DocuSign verifies that the email format is correct, but does not verify that the email is active.Using this overrides the BCC for Email Archive information setting for this envelope.\\\\n\\\\nMaximum of length: 100 characters.\\"
  email: String
}

\\"Envelope locks\\"
type EnvelopeLocks {
  errorDetails: errorDetails
  \\"Sets the time, in seconds, until the lock expires when there is no activity on the envelope.\\\\n\\\\nIf no value is entered, then the default value of 300 seconds is used. The maximum value is 1,800 seconds.\\\\n\\\\nThe lock duration can be extended.\\"
  lockDurationInSeconds: String
  \\"A unique identifier provided to the owner of the envelope lock.   Used to prove ownership of the lock.\\"
  lockToken: String
  \\"The type of envelope lock.  Currently \\\\\\"edit\\\\\\" is the only supported type.\\"
  lockType: String
  \\"Specifies the friendly name of  the application that is locking the envelope.\\"
  lockedByApp: String
  lockedByUser: userInfo
  \\"The datetime until the envelope lock expires.\\"
  lockedUntilDateTime: String
  \\"Reserved for future use.\\\\n\\\\nIndicates whether a scratchpad is used for editing information.\\"
  useScratchPad: String
}

\\"A complex element that specifies the notification options for the envelope. It consists of:\\\\n\\\\n* useAccountDefaults - When set to **true**, the account default notification settings are used for the envelope. \\\\n* reminders - A complex element that specifies reminder settings for the envelope. It consists of: \\\\n\\\\n   * reminderEnabled - When set to **true**, a reminder message is sent to the recipient.\\\\n   * reminderDelay - An interger that sets the number of days after the recipient receives the envelope that reminder emails are sent to the recipient. \\\\n   * reminderFrequency - An interger that sets the interval, in days, between reminder emails. \\\\n\\\\n* expirations - A complex element that specifies the expiration settings for the envelope. It consists of:\\\\n\\\\n   * expireEnabled - When set to **true**, the envelope expires (is no longer available for signing) in the set number of days. If false, the account default setting is used. If the account does not have an expiration setting, the DocuSign default value of 120 days is used. \\\\n   * expireAfter - An integer that sets the number of days the envelope is active.\\\\n   * expireWarn - An integer that sets the number of days before envelope expiration that an expiration warning email is sent to the recipient. If set to 0 (zero), no warning email is sent.\\"
type notification {
  expirations: expirations
  reminders: reminders
  \\"When set to **true**, the account default notification settings are used for the envelope.\\"
  useAccountDefaults: String
}

\\"A complex element that specifies the expiration settings for the envelope.\\"
type expirations {
  \\"An integer that sets the number of days the envelope is active.\\"
  expireAfter: String
  \\"When set to **true**, the envelope expires (is no longer available for signing) in the set number of days. If false, the account default setting is used. If the account does not have an expiration setting, the DocuSign default value of 120 days is used.\\"
  expireEnabled: String
  \\"An integer that sets the number of days before envelope expiration that an expiration warning email is sent to the recipient. If set to 0 (zero), no warning email is sent.\\"
  expireWarn: String
}

\\"A complex element that specifies reminder settings for the envelope\\"
type reminders {
  \\"An interger that sets the number of days after the recipient receives the envelope that reminder emails are sent to the recipient.\\"
  reminderDelay: String
  \\"When set to **true**, the envelope expires (is no longer available for signing) in the set number of days. If false, the account default setting is used. If the account does not have an expiration setting, the DocuSign default value of 120 days is used.\\"
  reminderEnabled: String
  \\"An interger that sets the interval, in days, between reminder emails.\\"
  reminderFrequency: String
}

\\"Envelope recipients\\"
type EnvelopeRecipients {
  \\"A complex type defining the management and access rights of a recipient assigned assigned as an agent on the document.\\"
  agents: [agent]
  \\"A complex type containing information about recipients who should receive a copy of the envelope, but does not need to sign it.\\"
  carbonCopies: [carbonCopy]
  \\"A complex type containing information on a recipient the must receive the completed documents for the envelope to be completed, but the recipient does not need to sign, initial, date, or add information to any of the documents.\\"
  certifiedDeliveries: [certifiedDelivery]
  currentRoutingOrder: String
  \\"A complex type defining the management and access rights of a recipient assigned assigned as an editor on the document.\\"
  editors: [editor]
  errorDetails: errorDetails
  \\"Specifies a signer that is in the same physical location as a DocuSign user who will act as a Signing Host for the transaction. The recipient added is the Signing Host and new separate Signer Name field appears after Sign in person is selected.\\"
  inPersonSigners: [inPersonSigner]
  \\"Identifies a recipient that can, but is not required to, add name and email information for recipients at the same or subsequent level in the routing order (until subsequent Agents, Editors or Intermediaries recipient types are added).\\"
  intermediaries: [agent]
  \\"The list of recipient event statuses that will trigger Connect to send updates to the url. It can be a two-part list with:\\\\n\\\\n* recipientEventStatusCode - The recipient status, this can be Sent, Delivered, Completed, Declined, AuthenticationFailed, and AutoResponded.\\\\n* includeDocuments - When set to **true**, the envelope time zone information is included in the message.\\"
  recipientCount: String
  \\"A complex type containing information about the Signer recipient.\\"
  signers: [signer]
}

\\"Contains information about agent recipients.\\"
type agent {
  \\"If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \\\\n\\\\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\\\\n\\\\nIf blank, but the signer \`accessCode\` property is set in the envelope, then that value is used.\\\\n\\\\nIf blank and the signer \`accessCode\` property is not set, then the access code is not required.\\"
  accessCode: String
  \\"This Optional attribute indicates that the access code will be added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient.\\"
  addAccessCodeToEmail: String
  \\"Specifies whether the recipient is embedded or remote. \\\\n\\\\nIf the \`clientUserId\` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.\\\\n\\\\nNote: if the \`clientUserId\` property is set and either \`SignerMustHaveAccount\` or \`SignerMustLoginToSign\` property of the account settings is set to  **true**, an error is generated on sending. \\\\n\\\\nMaximum length: 100 characters.\\"
  clientUserId: String
  \\"An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.\\"
  customFields: [String]
  \\"The date and time the recipient declined the document.\\"
  declinedDateTime: String
  \\"The reason the recipient declined the document.\\"
  declinedReason: String
  \\"Reserved: For DocuSign use only.\\"
  deliveredDateTime: String
  \\"Reserved: For DocuSign use only.\\"
  deliveryMethod: String
  documentVisibility: [documentVisibility]
  \\"Email id of the recipient. Notification of the document to sign is sent to this email id. \\\\n\\\\nMaximum length: 100 characters.\\"
  email: String
  emailNotification: recipientEmailNotification
  emailRecipientPostSigningURL: String
  \\"Specifies a sender provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \\\\n\\\\nIf set to \`SIGN_AT_DOCUSIGN\`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation that is launched by any partner.\\\\n\\\\nIt is important to remember that in a typical embedded workflow the authentication of an embedded recipient is the responsibility of the sending application, DocuSign expects that senders will follow their own process for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process in initiated. However, when the sending application sets \`EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN\`, the recipient goes directly to the embedded signing or viewing process bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\\\\n\\\\nIf the \`clientUserId\` property is NOT set, and the \`embeddedRecipientStartURL\` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: envelopeId, recipientId, recipientName, recipientEmail, and customFields. The \`customFields\` property must be set fort the recipient or envelope. The merge fields are enclosed in double brackets. \\\\n\\\\n*Example*: \\\\n\\\\n\`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]\`\\"
  embeddedRecipientStartURL: String
  errorDetails: errorDetails
  \\"Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the \`enforceSignerVisibility\` property must be set to **true** for the envelope to use this.\\\\n\\\\nWhen enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.\\"
  excludedDocuments: [String]
  \\"Reserved:\\"
  faxNumber: String
  \\"Specifies authentication check by name. The names used here must be the same as the authentication type names used by the account (these name can also be found in the web console sending interface in the Identify list for a recipient,) This overrides any default authentication setting.\\\\n\\\\n*Example*: Your account has ID Check and SMS Authentication available and in the web console Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check in an envelope, the idCheckConfigurationName should be 'ID Check '. If you wanted to use SMS, it would be 'SMS Auth $' and you would need to add you would need to add phone number information to the \`smsAuthentication\` node.\\"
  idCheckConfigurationName: String
  idCheckInformationInput: idCheckInformationInput
  \\"When set to **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account.\\"
  inheritEmailNotificationConfiguration: String
  name: String
  \\"A note sent to the recipient in the signing email.\\\\nThis note is unique to this recipient.\\\\nIn the user interface,\\\\nit appears near the upper left corner\\\\nof the document\\\\non the signing screen.\\\\n\\\\nMaximum Length: 1000 characters.\\"
  note: String
  phoneAuthentication: recipientPhoneAuthentication
  \\"Reserved:\\"
  recipientAttachments: [recipientAttachment]
  recipientAuthenticationStatus: authenticationStatus
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  recipientIdGuid: String
  \\"When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity.\\"
  requireIdLookup: String
  \\"Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.\\"
  roleName: String
  \\"Specifies the routing order of the recipient in the envelope.\\"
  routingOrder: String
  samlAuthentication: recipientSAMLAuthentication
  \\"The date and time the envelope was sent.\\"
  sentDateTime: String
  \\"Reserved: For DocuSign use only.\\"
  signedDateTime: String
  \\"When set to **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab ( instead of adopting a signature/initial style or only drawing a signature/initial once).\\"
  signingGroupId: String
  \\"The display name for the signing group. \\\\n\\\\nMaximum Length: 100 characters.\\"
  signingGroupName: String
  \\"A complex type that contains information about users in the signing group.\\"
  signingGroupUsers: [userInfo]
  smsAuthentication: recipientSMSAuthentication
  \\"Lists the social ID type that can be used for recipient authentication.\\"
  socialAuthentications: [socialAuthentication]
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.\\"
  templateLocked: String
  \\"When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.\\"
  templateRequired: String
  totalTabCount: String
  \\"The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.\\"
  userId: String
}

type documentVisibility {
  \\"Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.\\"
  documentId: String
  errorDetails: errorDetails
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  rights: String
  visible: String
}

type recipientEmailNotification {
  \\"Specifies the email body of the message sent to the recipient. \\\\n\\\\nMaximum length: 10000 characters.\\"
  emailBody: String
  \\"Specifies the subject of the email that is sent to all recipients.\\\\n\\\\nSee [ML:Template Email Subject Merge Fields] for information about adding merge field information to the email subject.\\"
  emailSubject: String
  \\"The language to be used with your custom notification email. The supported languages, with the language value shown in parenthesis, are: Arabic (ar), Bahasa Indonesia (id), Bahasa Melayu (ms) Bulgarian (bg), Czech (cs), Chinese Simplified (zh_CN), Chinese Traditional (zh_TW), Croatian (hr), Danish (da), Dutch (nl), English US (en), English UK (en_GB), Estonian (et), Farsi (fa), Finnish (fi), French (fr), French Canada (fr_CA), German (de), Greek (el), Hebrew (he), Hindi (hi), Hungarian (hu), Italian (it), Japanese (ja), Korean (ko), Latvian (lv), Lithuanian (lt), Norwegian (no), Polish (pl), Portuguese (pt), Portuguese Brazil (pt_BR), Romanian (ro),Russian (ru), Serbian (sr), Slovak (sk), Slovenian (sl), Spanish (es),Spanish Latin America (es_MX), Swedish (sv), Thai (th), Turkish (tr), Ukrainian (uk), and Vietnamese (vi).\\"
  supportedLanguage: String
}

\\"A complex element that contains input information related to a recipient ID check. It can include the following information.\\\\n\\\\naddressInformationInput: Used to set recipient address information and consists of:\\\\n\\\\n* addressInformation: consists of six elements, with stree2 and zipPlus4 being optional. The elements are: street1, street2, city, state, zip, zipPlus4. The maximum length of each element is: street1/street2 = 150 characters, city = 50 characters, state = 2 characters, and zip/zipPlus4 = 20 characters.\\\\n* displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.\\\\n* receiveInResponse: A Boolean element that specifies if the information needs to be returned in the response.\\\\n\\\\ndobInformationInput: Used to set recipient date of birth information and consists of:\\\\n\\\\n* dateOfBirth: Specifies the recipient's date, month and year of birth.\\\\n* displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.\\\\n* receiveInResponse: A Boolean element that specifies if the information needs to be returned in the response.\\\\n\\\\nssn4InformationInput: Used to set the last four digits of the recipient's SSN information and consists of:\\\\n\\\\n* ssn4: Specifies the last four digits of the recipient's SSN.\\\\n* displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.\\\\n* receiveInResponse: A Boolean element that specifies if the information needs to be returned in the response.\\\\n\\\\nssn9InformationInput: Used to set the recipient's SSN information. Note that the ssn9 information can never be returned in the response. The ssn9 input consists of: \\\\n* ssn9: Specifies the recipient's SSN.\\\\n* displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.\\"
type idCheckInformationInput {
  addressInformationInput: addressInformationInput
  dobInformationInput: dobInformationInput
  ssn4InformationInput: ssn4InformationInput
  ssn9InformationInput: ssn9InformationInput
}

\\"Contains address input information.\\"
type addressInformationInput {
  addressInformation: addressInformation
  \\"Specifies the display level for the recipient. \\\\nValid values are: \\\\n\\\\n* ReadOnly\\\\n* Editable\\\\n* DoNotDisplay\\"
  displayLevelCode: String
  \\"When set to **true**, the information needs to be returned in the response.\\"
  receiveInResponse: String
}

\\"Complex type containing:\\\\n\\\\n* dateOfBirth\\\\n* displayLevelCode\\\\n* receiveInResponse\\"
type dobInformationInput {
  \\"Specifies the recipient's date, month, and year of birth.\\"
  dateOfBirth: String
  \\"Specifies the display level for the recipient. \\\\nValid values are: \\\\n\\\\n* ReadOnly\\\\n* Editable\\\\n* DoNotDisplay\\"
  displayLevelCode: String
  \\"When set to **true**, the information needs to be returned in the response.\\"
  receiveInResponse: String
}

type ssn4InformationInput {
  \\"Specifies the display level for the recipient. \\\\nValid values are: \\\\n\\\\n* ReadOnly\\\\n* Editable\\\\n* DoNotDisplay\\"
  displayLevelCode: String
  \\"When set to **true**, the information needs to be returned in the response.\\"
  receiveInResponse: String
  \\"The last four digits of the recipient's Social Security Number (SSN).\\"
  ssn4: String
}

type ssn9InformationInput {
  \\"Specifies the display level for the recipient. \\\\nValid values are: \\\\n\\\\n* ReadOnly\\\\n* Editable\\\\n* DoNotDisplay\\"
  displayLevelCode: String
  \\"The recipient's Social Security Number(SSN).\\"
  ssn9: String
}

\\"A complex type that Contains the elements:\\\\n\\\\n* recipMayProvideNumber - Boolean. When set to **true**, the recipient can use whatever phone number they choose.\\\\n* senderProvidedNumbers - ArrayOfString.  A list of phone numbers the recipient can use.\\\\n* recordVoicePrint - Reserved.\\\\n* validateRecipProvidedNumber - Reserved.\\"
type recipientPhoneAuthentication {
  \\"Boolean. When set to **true**, the recipient can supply a phone number their choice.\\"
  recipMayProvideNumber: String
  \\"Reserved.\\"
  recordVoicePrint: String
  \\"An Array containing a list of phone numbers the recipient may use for SMS text authentication.\\"
  senderProvidedNumbers: [String]
  \\"Reserved.\\"
  validateRecipProvidedNumber: String
}

type recipientAttachment {
  attachmentId: String
  attachmentType: String
  data: String
  label: String
  name: String
  remoteUrl: String
}

\\"Contains information about the authentication status.\\"
type authenticationStatus {
  accessCodeResult: eventResult
  ageVerifyResult: eventResult
  anySocialIDResult: eventResult
  facebookResult: eventResult
  googleResult: eventResult
  idLookupResult: eventResult
  idQuestionsResult: eventResult
  linkedinResult: eventResult
  liveIDResult: eventResult
  ofacResult: eventResult
  openIDResult: eventResult
  phoneAuthResult: eventResult
  sTANPinResult: eventResult
  salesforceResult: eventResult
  signatureProviderResult: eventResult
  smsAuthResult: eventResult
  twitterResult: eventResult
  yahooResult: eventResult
}

type eventResult {
  eventTimestamp: String
  failureDescription: String
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  vendorFailureStatusCode: String
}

\\"Contains the name/value pair information for the SAML assertion attributes:\\\\n\\\\n* name - The name of the SAML assertion attribute.\\\\n* value - The value associated with the named SAML assertion attribute. \\\\n\\\\nYour account must be set up to use SSO to use this.\\"
type recipientSAMLAuthentication {
  samlAssertionAttributes: [samlAssertionAttribute]
}

type samlAssertionAttribute {
  errorDetails: errorDetails
  name: String
  \\"The initial value of the tab when it was sent to the recipient.\\"
  originalValue: String
  \\"The value associated with the named SAML assertion attribute\\"
  value: String
}

\\"Contains the element senderProvidedNumbers which is an Array  of phone numbers the recipient can use for SMS text authentication.\\"
type recipientSMSAuthentication {
  \\"An Array containing a list of phone numbers the recipient may use for SMS text authentication.\\"
  senderProvidedNumbers: [String]
}

type socialAuthentication {
  \\"Reserved: TBD\\"
  authentication: String
}

type carbonCopy {
  \\"If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \\\\n\\\\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\\\\n\\\\nIf blank, but the signer \`accessCode\` property is set in the envelope, then that value is used.\\\\n\\\\nIf blank and the signer \`accessCode\` property is not set, then the access code is not required.\\"
  accessCode: String
  \\"This Optional attribute indicates that the access code will be added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient.\\"
  addAccessCodeToEmail: String
  \\"Specifies whether the recipient is embedded or remote. \\\\n\\\\nIf the \`clientUserId\` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.\\\\n\\\\nNote: if the \`clientUserId\` property is set and either \`SignerMustHaveAccount\` or \`SignerMustLoginToSign\` property of the account settings is set to  **true**, an error is generated on sending. \\\\n\\\\nMaximum length: 100 characters.\\"
  clientUserId: String
  \\"An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.\\"
  customFields: [String]
  \\"The date and time the recipient declined the document.\\"
  declinedDateTime: String
  \\"The reason the recipient declined the document.\\"
  declinedReason: String
  \\"Reserved: For DocuSign use only.\\"
  deliveredDateTime: String
  \\"Reserved: For DocuSign use only.\\"
  deliveryMethod: String
  documentVisibility: [documentVisibility]
  \\"Email id of the recipient. Notification of the document to sign is sent to this email id. \\\\n\\\\nMaximum length: 100 characters.\\"
  email: String
  emailNotification: recipientEmailNotification
  emailRecipientPostSigningURL: String
  \\"Specifies a sender provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \\\\n\\\\nIf set to \`SIGN_AT_DOCUSIGN\`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation that is launched by any partner.\\\\n\\\\nIt is important to remember that in a typical embedded workflow the authentication of an embedded recipient is the responsibility of the sending application, DocuSign expects that senders will follow their own process for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process in initiated. However, when the sending application sets \`EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN\`, the recipient goes directly to the embedded signing or viewing process bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\\\\n\\\\nIf the \`clientUserId\` property is NOT set, and the \`embeddedRecipientStartURL\` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: envelopeId, recipientId, recipientName, recipientEmail, and customFields. The \`customFields\` property must be set fort the recipient or envelope. The merge fields are enclosed in double brackets. \\\\n\\\\n*Example*: \\\\n\\\\n\`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]\`\\"
  embeddedRecipientStartURL: String
  errorDetails: errorDetails
  \\"Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the \`enforceSignerVisibility\` property must be set to **true** for the envelope to use this.\\\\n\\\\nWhen enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.\\"
  excludedDocuments: [String]
  \\"Reserved:\\"
  faxNumber: String
  \\"Specifies authentication check by name. The names used here must be the same as the authentication type names used by the account (these name can also be found in the web console sending interface in the Identify list for a recipient,) This overrides any default authentication setting.\\\\n\\\\n*Example*: Your account has ID Check and SMS Authentication available and in the web console Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check in an envelope, the idCheckConfigurationName should be 'ID Check '. If you wanted to use SMS, it would be 'SMS Auth $' and you would need to add you would need to add phone number information to the \`smsAuthentication\` node.\\"
  idCheckConfigurationName: String
  idCheckInformationInput: idCheckInformationInput
  \\"When set to **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account.\\"
  inheritEmailNotificationConfiguration: String
  \\"legal name of the recipient.\\\\n\\\\nMaximum Length: 100 characters.\\"
  name: String
  \\"A note sent to the recipient in the signing email.\\\\nThis note is unique to this recipient.\\\\nIn the user interface,\\\\nit appears near the upper left corner\\\\nof the document\\\\non the signing screen.\\\\n\\\\nMaximum Length: 1000 characters.\\"
  note: String
  phoneAuthentication: recipientPhoneAuthentication
  \\"Reserved:\\"
  recipientAttachments: [recipientAttachment]
  recipientAuthenticationStatus: authenticationStatus
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  recipientIdGuid: String
  \\"When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity.\\"
  requireIdLookup: String
  \\"Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.\\"
  roleName: String
  \\"Specifies the routing order of the recipient in the envelope.\\"
  routingOrder: String
  samlAuthentication: recipientSAMLAuthentication
  \\"The date and time the envelope was sent.\\"
  sentDateTime: String
  \\"Reserved: For DocuSign use only.\\"
  signedDateTime: String
  \\"When set to **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab ( instead of adopting a signature/initial style or only drawing a signature/initial once).\\"
  signingGroupId: String
  \\"The display name for the signing group. \\\\n\\\\nMaximum Length: 100 characters.\\"
  signingGroupName: String
  \\"A complex type that contains information about users in the signing group.\\"
  signingGroupUsers: [userInfo]
  smsAuthentication: recipientSMSAuthentication
  \\"Lists the social ID type that can be used for recipient authentication.\\"
  socialAuthentications: [socialAuthentication]
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.\\"
  templateLocked: String
  \\"When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.\\"
  templateRequired: String
  totalTabCount: String
  \\"The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.\\"
  userId: String
}

type certifiedDelivery {
  \\"If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \\\\n\\\\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\\\\n\\\\nIf blank, but the signer \`accessCode\` property is set in the envelope, then that value is used.\\\\n\\\\nIf blank and the signer \`accessCode\` property is not set, then the access code is not required.\\"
  accessCode: String
  \\"This Optional attribute indicates that the access code will be added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient.\\"
  addAccessCodeToEmail: String
  \\"Specifies whether the recipient is embedded or remote. \\\\n\\\\nIf the \`clientUserId\` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.\\\\n\\\\nNote: if the \`clientUserId\` property is set and either \`SignerMustHaveAccount\` or \`SignerMustLoginToSign\` property of the account settings is set to  **true**, an error is generated on sending. \\\\n\\\\nMaximum length: 100 characters.\\"
  clientUserId: String
  \\"An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.\\"
  customFields: [String]
  \\"The date and time the recipient declined the document.\\"
  declinedDateTime: String
  \\"The reason the recipient declined the document.\\"
  declinedReason: String
  \\"Reserved: For DocuSign use only.\\"
  deliveredDateTime: String
  \\"Reserved: For DocuSign use only.\\"
  deliveryMethod: String
  documentVisibility: [documentVisibility]
  email: String
  emailNotification: recipientEmailNotification
  emailRecipientPostSigningURL: String
  \\"Specifies a sender provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \\\\n\\\\nIf set to \`SIGN_AT_DOCUSIGN\`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation that is launched by any partner.\\\\n\\\\nIt is important to remember that in a typical embedded workflow the authentication of an embedded recipient is the responsibility of the sending application, DocuSign expects that senders will follow their own process for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process in initiated. However, when the sending application sets \`EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN\`, the recipient goes directly to the embedded signing or viewing process bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\\\\n\\\\nIf the \`clientUserId\` property is NOT set, and the \`embeddedRecipientStartURL\` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: envelopeId, recipientId, recipientName, recipientEmail, and customFields. The \`customFields\` property must be set fort the recipient or envelope. The merge fields are enclosed in double brackets. \\\\n\\\\n*Example*: \\\\n\\\\n\`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]\`\\"
  embeddedRecipientStartURL: String
  errorDetails: errorDetails
  \\"Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the \`enforceSignerVisibility\` property must be set to **true** for the envelope to use this.\\\\n\\\\nWhen enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.\\"
  excludedDocuments: [String]
  \\"Reserved:\\"
  faxNumber: String
  \\"Specifies authentication check by name. The names used here must be the same as the authentication type names used by the account (these name can also be found in the web console sending interface in the Identify list for a recipient,) This overrides any default authentication setting.\\\\n\\\\n*Example*: Your account has ID Check and SMS Authentication available and in the web console Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check in an envelope, the idCheckConfigurationName should be 'ID Check '. If you wanted to use SMS, it would be 'SMS Auth $' and you would need to add you would need to add phone number information to the \`smsAuthentication\` node.\\"
  idCheckConfigurationName: String
  idCheckInformationInput: idCheckInformationInput
  \\"When set to **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account.\\"
  inheritEmailNotificationConfiguration: String
  name: String
  \\"A note sent to the recipient in the signing email.\\\\nThis note is unique to this recipient.\\\\nIn the user interface,\\\\nit appears near the upper left corner\\\\nof the document\\\\non the signing screen.\\\\n\\\\nMaximum Length: 1000 characters.\\"
  note: String
  phoneAuthentication: recipientPhoneAuthentication
  \\"Reserved:\\"
  recipientAttachments: [recipientAttachment]
  recipientAuthenticationStatus: authenticationStatus
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  recipientIdGuid: String
  \\"When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity.\\"
  requireIdLookup: String
  \\"Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.\\"
  roleName: String
  \\"Specifies the routing order of the recipient in the envelope.\\"
  routingOrder: String
  samlAuthentication: recipientSAMLAuthentication
  \\"The date and time the envelope was sent.\\"
  sentDateTime: String
  \\"Reserved: For DocuSign use only.\\"
  signedDateTime: String
  \\"When set to **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab ( instead of adopting a signature/initial style or only drawing a signature/initial once).\\"
  signingGroupId: String
  \\"The display name for the signing group. \\\\n\\\\nMaximum Length: 100 characters.\\"
  signingGroupName: String
  \\"A complex type that contains information about users in the signing group.\\"
  signingGroupUsers: [userInfo]
  smsAuthentication: recipientSMSAuthentication
  \\"Lists the social ID type that can be used for recipient authentication.\\"
  socialAuthentications: [socialAuthentication]
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.\\"
  templateLocked: String
  \\"When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.\\"
  templateRequired: String
  totalTabCount: String
  \\"The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.\\"
  userId: String
}

type editor {
  \\"If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \\\\n\\\\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\\\\n\\\\nIf blank, but the signer \`accessCode\` property is set in the envelope, then that value is used.\\\\n\\\\nIf blank and the signer \`accessCode\` property is not set, then the access code is not required.\\"
  accessCode: String
  \\"This Optional attribute indicates that the access code will be added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient.\\"
  addAccessCodeToEmail: String
  \\"Specifies whether the recipient is embedded or remote. \\\\n\\\\nIf the \`clientUserId\` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.\\\\n\\\\nNote: if the \`clientUserId\` property is set and either \`SignerMustHaveAccount\` or \`SignerMustLoginToSign\` property of the account settings is set to  **true**, an error is generated on sending. \\\\n\\\\nMaximum length: 100 characters.\\"
  clientUserId: String
  \\"An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.\\"
  customFields: [String]
  \\"The date and time the recipient declined the document.\\"
  declinedDateTime: String
  \\"The reason the recipient declined the document.\\"
  declinedReason: String
  \\"Reserved: For DocuSign use only.\\"
  deliveredDateTime: String
  \\"Reserved: For DocuSign use only.\\"
  deliveryMethod: String
  documentVisibility: [documentVisibility]
  \\"Email id of the recipient. Notification of the document to sign is sent to this email id. \\\\n\\\\nMaximum length: 100 characters.\\"
  email: String
  emailNotification: recipientEmailNotification
  emailRecipientPostSigningURL: String
  \\"Specifies a sender provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \\\\n\\\\nIf set to \`SIGN_AT_DOCUSIGN\`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation that is launched by any partner.\\\\n\\\\nIt is important to remember that in a typical embedded workflow the authentication of an embedded recipient is the responsibility of the sending application, DocuSign expects that senders will follow their own process for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process in initiated. However, when the sending application sets \`EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN\`, the recipient goes directly to the embedded signing or viewing process bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\\\\n\\\\nIf the \`clientUserId\` property is NOT set, and the \`embeddedRecipientStartURL\` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: envelopeId, recipientId, recipientName, recipientEmail, and customFields. The \`customFields\` property must be set fort the recipient or envelope. The merge fields are enclosed in double brackets. \\\\n\\\\n*Example*: \\\\n\\\\n\`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]\`\\"
  embeddedRecipientStartURL: String
  errorDetails: errorDetails
  \\"Reserved:\\"
  faxNumber: String
  \\"Specifies authentication check by name. The names used here must be the same as the authentication type names used by the account (these name can also be found in the web console sending interface in the Identify list for a recipient,) This overrides any default authentication setting.\\\\n\\\\n*Example*: Your account has ID Check and SMS Authentication available and in the web console Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check in an envelope, the idCheckConfigurationName should be 'ID Check '. If you wanted to use SMS, it would be 'SMS Auth $' and you would need to add you would need to add phone number information to the \`smsAuthentication\` node.\\"
  idCheckConfigurationName: String
  idCheckInformationInput: idCheckInformationInput
  \\"When set to **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account.\\"
  inheritEmailNotificationConfiguration: String
  \\"legal name of the recipient.\\\\n\\\\nMaximum Length: 100 characters.\\"
  name: String
  \\"A note sent to the recipient in the signing email.\\\\nThis note is unique to this recipient.\\\\nIn the user interface,\\\\nit appears near the upper left corner\\\\nof the document\\\\non the signing screen.\\\\n\\\\nMaximum Length: 1000 characters.\\"
  note: String
  phoneAuthentication: recipientPhoneAuthentication
  \\"Reserved:\\"
  recipientAttachments: [recipientAttachment]
  recipientAuthenticationStatus: authenticationStatus
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  recipientIdGuid: String
  \\"When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity.\\"
  requireIdLookup: String
  \\"Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.\\"
  roleName: String
  \\"Specifies the routing order of the recipient in the envelope.\\"
  routingOrder: String
  samlAuthentication: recipientSAMLAuthentication
  \\"The date and time the envelope was sent.\\"
  sentDateTime: String
  \\"Reserved: For DocuSign use only.\\"
  signedDateTime: String
  \\"When set to **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab ( instead of adopting a signature/initial style or only drawing a signature/initial once).\\"
  signingGroupId: String
  \\"The display name for the signing group. \\\\n\\\\nMaximum Length: 100 characters.\\"
  signingGroupName: String
  \\"A complex type that contains information about users in the signing group.\\"
  signingGroupUsers: [userInfo]
  smsAuthentication: recipientSMSAuthentication
  \\"Lists the social ID type that can be used for recipient authentication.\\"
  socialAuthentications: [socialAuthentication]
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.\\"
  templateLocked: String
  \\"When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.\\"
  templateRequired: String
  totalTabCount: String
  \\"The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.\\"
  userId: String
}

\\"An in-person recipient is a DocuSign user,\\\\nacting as a Signing Host,\\\\nwho is in the same physical location as the signer.\\\\nTo learn about fields used\\\\nfor eNotary feature,\\\\nsee the [EnvelopeRecipients resource][enveloperecipientsInPerson].\\\\n\\\\n[enveloperecipientsInPerson]: /esign/restapi/Envelopes/EnvelopeRecipients/#in-person-signers-recipient\\"
type inPersonSigner {
  \\"If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \\\\n\\\\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\\\\n\\\\nIf blank, but the signer \`accessCode\` property is set in the envelope, then that value is used.\\\\n\\\\nIf blank and the signer \`accessCode\` property is not set, then the access code is not required.\\"
  accessCode: String
  \\"This Optional attribute indicates that the access code will be added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient.\\"
  addAccessCodeToEmail: String
  \\"Specifies whether auto navigation is set for the recipient.\\"
  autoNavigation: String
  \\"When set to **true**, specifies that the signer can perform the signing ceremony offline.\\"
  canSignOffline: String
  \\"Specifies whether the recipient is embedded or remote. \\\\n\\\\nIf the \`clientUserId\` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.\\\\n\\\\nNote: if the \`clientUserId\` property is set and either \`SignerMustHaveAccount\` or \`SignerMustLoginToSign\` property of the account settings is set to  **true**, an error is generated on sending. \\\\n\\\\nMaximum length: 100 characters.\\"
  clientUserId: String
  creationReason: String
  \\"An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.\\"
  customFields: [String]
  \\"The date and time the recipient declined the document.\\"
  declinedDateTime: String
  \\"The reason the recipient declined the document.\\"
  declinedReason: String
  \\"When set to **true**,\\\\nthis is the default recipient for the envelope.\\\\nThis option is used when creating an envelope from a template.\\"
  defaultRecipient: String
  \\"Reserved: For DocuSign use only.\\"
  deliveredDateTime: String
  \\"Reserved: For DocuSign use only.\\"
  deliveryMethod: String
  documentVisibility: [documentVisibility]
  \\"The signer's email address in an eNotary flow.\\\\n\\\\nUse only when \`inPersonSigningType\` is \`notary\`.\\\\nFor regular in-person-signer flow, use \`signerEmail\` instead.\\"
  email: String
  emailNotification: recipientEmailNotification
  \\"Specifies a sender provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \\\\n\\\\nIf set to \`SIGN_AT_DOCUSIGN\`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation that is launched by any partner.\\\\n\\\\nIt is important to remember that in a typical embedded workflow the authentication of an embedded recipient is the responsibility of the sending application, DocuSign expects that senders will follow their own process for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process in initiated. However, when the sending application sets \`EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN\`, the recipient goes directly to the embedded signing or viewing process bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\\\\n\\\\nIf the \`clientUserId\` property is NOT set, and the \`embeddedRecipientStartURL\` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: envelopeId, recipientId, recipientName, recipientEmail, and customFields. The \`customFields\` property must be set fort the recipient or envelope. The merge fields are enclosed in double brackets. \\\\n\\\\n*Example*: \\\\n\\\\n\`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]\`\\"
  embeddedRecipientStartURL: String
  errorDetails: errorDetails
  \\"Reserved:\\"
  faxNumber: String
  \\"The email address of the signing host.\\\\nThis is the DocuSign user that is hosting the in-person signing session.\\\\n\\\\nRequired when \`inPersonSigningType\` is \`inPersonSigner\`.\\\\nFor eNotary flow, use \`email\` instead.\\\\n\\\\nMaximum Length: 100 characters.\\"
  hostEmail: String
  \\"The name of the signing host.\\\\nThis is the DocuSign user that is hosting the in-person signing session.\\\\n\\\\nRequired when \`inPersonSigningType\` is \`inPersonSigner\`.\\\\nFor eNotary flow, use \`name\` instead.\\\\n\\\\nMaximum Length: 100 characters.\\"
  hostName: String
  \\"Specifies authentication check by name. The names used here must be the same as the authentication type names used by the account (these name can also be found in the web console sending interface in the Identify list for a recipient,) This overrides any default authentication setting.\\\\n\\\\n*Example*: Your account has ID Check and SMS Authentication available and in the web console Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check in an envelope, the idCheckConfigurationName should be 'ID Check '. If you wanted to use SMS, it would be 'SMS Auth $' and you would need to add you would need to add phone number information to the \`smsAuthentication\` node.\\"
  idCheckConfigurationName: String
  idCheckInformationInput: idCheckInformationInput
  \\"Specifies whether the envelope uses the eNotary feature.\\\\nValid values:\\\\n\\\\n* \`inPersonSigner\` The envelope uses the normal in-person signing flow.\\\\n* \`notary\`: The envelope uses the eNotary in-person signing flow.\\"
  inPersonSigningType: String
  \\"When set to **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account.\\"
  inheritEmailNotificationConfiguration: String
  \\"The signer's full legal name in an eNotary flow.\\\\n\\\\nRequired when \`inPersonSigningType\` is \`notary\`.\\\\nFor regular in-person-signer flow, use \`signerName\` instead.\\\\n\\\\nMaximum Length: 100 characters.\\"
  name: String
  notaryHost: notaryHost
  \\"A note sent to the in-person signer in the signing email.\\\\nThis note is visible only to this recipient.\\\\n\\\\nMaximum Length: 1000 characters.\\"
  note: String
  phoneAuthentication: recipientPhoneAuthentication
  \\"Reserved:\\"
  recipientAttachments: [recipientAttachment]
  recipientAuthenticationStatus: authenticationStatus
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  recipientIdGuid: String
  \\"The default signature provider is the DocuSign Electronic signature system. This parameter is used to specify one or more Standards Based Signature (digital signature) providers for the signer to use. [More information](../../../../guide/appendix/standards_based_signatures.html)\\"
  recipientSignatureProviders: [recipientSignatureProvider]
  recipientSuppliesTabs: String
  \\"When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity.\\"
  requireIdLookup: String
  \\"When set to **true**, the signer must print, sign, and upload or fax the signed documents to DocuSign.\\"
  requireSignOnPaper: String
  \\"By default, DocuSign signers create electronic signatures. This field can be used to require the signer to use a SAFE-BioPharma digital certificate for signing.\\\\n\\\\nThis parameter should only be used to select a SAFE-BioPharma certificate. New integrations should use the \`recipientSignatureProviders\` parameter for other types of digital certificates. \\\\n\\\\nSet this parameter to \`safe\` to use a SAFE-BioPharma certificate.\\\\n\\\\nThe signer must be enrolled in the SAFE program to sign with a SAFE certificate.\\"
  requireSignerCertificate: String
  \\"Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.\\"
  roleName: String
  \\"Specifies the routing order of the recipient in the envelope.\\"
  routingOrder: String
  samlAuthentication: recipientSAMLAuthentication
  \\"The date and time the envelope was sent.\\"
  sentDateTime: String
  \\"When set to **true**, specifies that the signer must sign in all locations.\\"
  signInEachLocation: String
  signatureInfo: recipientSignatureInformation
  \\"Reserved: For DocuSign use only.\\"
  signedDateTime: String
  \\"The in-person signer's email address.\\\\n\\\\nRequired when \`inPersonSigningType\` is \`inPersonSigner\`.\\\\nFor eNotary flow, use \`email\` instead.\\\\n\\\\nMaximum Length: 100 characters.\\"
  signerEmail: String
  \\"The in-person signer's full legal name.\\\\n\\\\nRequired when \`inPersonSigningType\` is \`inPersonSigner\`.\\\\nFor eNotary flow, use \`name\` instead.\\\\n\\\\nMaximum Length: 100 characters.\\"
  signerName: String
  \\"When set to **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab ( instead of adopting a signature/initial style or only drawing a signature/initial once).\\"
  signingGroupId: String
  \\"The display name for the signing group. \\\\n\\\\nMaximum Length: 100 characters.\\"
  signingGroupName: String
  \\"A complex type that contains information about users in the signing group.\\"
  signingGroupUsers: [userInfo]
  smsAuthentication: recipientSMSAuthentication
  \\"Lists the social ID type that can be used for recipient authentication.\\"
  socialAuthentications: [socialAuthentication]
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  tabs: EnvelopeRecipientTabs
  \\"When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.\\"
  templateLocked: String
  \\"When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.\\"
  templateRequired: String
  totalTabCount: String
  \\"The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.\\"
  userId: String
}

\\"This object is used only when \`inPersonSigningType\` in the \`inPersonSigner\` object is \`notary\`.\\\\n\\\\nIt describes information about the notary host.\\\\nThe following information is required\\\\nwhen using the eNotary in-person signing flow:\\\\n\\\\n* \`name\`: Specifies the notary's full legal name.\\\\n* \`email\`: Specifies the notary's email address.\\\\n* \`recipientId\`: A unique ID number for the notary signing host.\\"
type notaryHost {
  \\"If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \\\\n\\\\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\\\\n\\\\nIf blank, but the signer \`accessCode\` property is set in the envelope, then that value is used.\\\\n\\\\nIf blank and the signer \`accessCode\` property is not set, then the access code is not required.\\"
  accessCode: String
  \\"This Optional attribute indicates that the access code will be added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient.\\"
  addAccessCodeToEmail: String
  \\"Specifies whether the recipient is embedded or remote. \\\\n\\\\nIf the \`clientUserId\` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.\\\\n\\\\nNote: if the \`clientUserId\` property is set and either \`SignerMustHaveAccount\` or \`SignerMustLoginToSign\` property of the account settings is set to  **true**, an error is generated on sending. \\\\n\\\\nMaximum length: 100 characters.\\"
  clientUserId: String
  \\"An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.\\"
  customFields: [String]
  \\"The date and time the recipient declined the document.\\"
  declinedDateTime: String
  \\"The reason the recipient declined the document.\\"
  declinedReason: String
  \\"Reserved: For DocuSign use only.\\"
  deliveredDateTime: String
  \\"Reserved: For DocuSign use only.\\"
  deliveryMethod: String
  documentVisibility: [documentVisibility]
  \\"The notary's email address.\\\\n\\\\nMaximum Length: 100 characters.\\"
  email: String
  emailNotification: recipientEmailNotification
  \\"Specifies a sender provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \\\\n\\\\nIf set to \`SIGN_AT_DOCUSIGN\`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation that is launched by any partner.\\\\n\\\\nIt is important to remember that in a typical embedded workflow the authentication of an embedded recipient is the responsibility of the sending application, DocuSign expects that senders will follow their own process for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process in initiated. However, when the sending application sets \`EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN\`, the recipient goes directly to the embedded signing or viewing process bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\\\\n\\\\nIf the \`clientUserId\` property is NOT set, and the \`embeddedRecipientStartURL\` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: envelopeId, recipientId, recipientName, recipientEmail, and customFields. The \`customFields\` property must be set fort the recipient or envelope. The merge fields are enclosed in double brackets. \\\\n\\\\n*Example*: \\\\n\\\\n\`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]\`\\"
  embeddedRecipientStartURL: String
  errorDetails: errorDetails
  \\"Reserved:\\"
  faxNumber: String
  hostRecipientId: String
  \\"Specifies authentication check by name. The names used here must be the same as the authentication type names used by the account (these name can also be found in the web console sending interface in the Identify list for a recipient,) This overrides any default authentication setting.\\\\n\\\\n*Example*: Your account has ID Check and SMS Authentication available and in the web console Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check in an envelope, the idCheckConfigurationName should be 'ID Check '. If you wanted to use SMS, it would be 'SMS Auth $' and you would need to add you would need to add phone number information to the \`smsAuthentication\` node.\\"
  idCheckConfigurationName: String
  idCheckInformationInput: idCheckInformationInput
  \\"When set to **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account.\\"
  inheritEmailNotificationConfiguration: String
  \\"The notary's full legal name.\\\\n\\\\nMaximum Length: 100 characters.\\"
  name: String
  notaryEmailMetadata: propertyMetadata
  notaryNameMetadata: propertyMetadata
  \\"A note sent to the notary in the signing email.\\\\nThis note is visible only to this notary.\\\\n\\\\nMaximum Length: 1000 characters.\\"
  note: String
  phoneAuthentication: recipientPhoneAuthentication
  \\"Reserved:\\"
  recipientAttachments: [recipientAttachment]
  recipientAuthenticationStatus: authenticationStatus
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  recipientIdGuid: String
  \\"When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity.\\"
  requireIdLookup: String
  \\"Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.\\"
  roleName: String
  \\"Specifies the routing order of the recipient in the envelope.\\"
  routingOrder: String
  samlAuthentication: recipientSAMLAuthentication
  \\"The date and time the envelope was sent.\\"
  sentDateTime: String
  \\"Reserved: For DocuSign use only.\\"
  signedDateTime: String
  smsAuthentication: recipientSMSAuthentication
  \\"Lists the social ID type that can be used for recipient authentication.\\"
  socialAuthentications: [socialAuthentication]
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.\\"
  templateLocked: String
  \\"When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.\\"
  templateRequired: String
  totalTabCount: String
  \\"The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.\\"
  userId: String
}

type propertyMetadata {
  options: [String]
  rights: String
}

\\"An Electronic or Standards Based Signature (digital signature) provider for the signer to use. [More information.](../../../../guide/appendix/standards_based_signatures.html)\\"
type recipientSignatureProvider {
  \\"The name of an Electronic or Standards Based Signature (digital signature) provider for the signer to use. [The current provider list.](../../../../guide/appendix/standards_based_signatures.html#signature-provider-options)\\"
  signatureProviderName: String
  signatureProviderOptions: recipientSignatureProviderOptions
}

\\"Option settings for the signature provider. Different providers require or use different options. [The current provider list and the options they require.](../../../../guide/appendix/standards_based_signatures.html#signature-provider-options)\\"
type recipientSignatureProviderOptions {
  \\"Reserved for DocuSign\\"
  cpfNumber: String
  \\"A pre-shared secret that the signer must enter to complete the signing process. Eg last six digits of the signer's government ID or Social Security number. Or a newly created pre-shared secret for the transaction. Note: some signature providers may require an exact (case-sensitive) match if alphabetic characters are included in the field.\\"
  oneTimePassword: String
  \\"The role or capacity of the signing recipient. Examples: Manager, Approver, etc.\\"
  signerRole: String
  \\"The mobile phone number used to send the recipient an access code for the signing ceremony. Format: a string starting with +, then the country code followed by the full mobile phone number without any spaces or special characters. Omit leading zeroes before a city code. Examples: +14155551234, +97235551234, +33505551234.\\"
  sms: String
}

\\"Allows the sender to pre-specify the signature name, signature initials and signature font used in the signature stamp for the recipient.\\\\n\\\\nUsed only with recipient types In Person Signers and Signers.\\"
type recipientSignatureInformation {
  fontStyle: String
  signatureInitials: String
  \\"Specifies the user signature name.\\"
  signatureName: String
}

\\"Envelope tabs\\"
type EnvelopeRecipientTabs {
  \\"A tab that allows the recipient to approve documents\\\\nwithout placing a signature or initials on the\\\\ndocument. If the recipient clicks the Approve tab during the signing\\\\nprocess, the recipient is considered to have signed the document. No\\\\ninformation is shown on the document for the approval, but it is\\\\nrecorded as a signature in the envelope history.\\"
  approveTabs: [approve]
  \\"Specifies a tag on the document in a location where the recipient can select an option.\\"
  checkboxTabs: [checkbox]
  \\"Specifies a tag on the document where you want the recipient's company name to appear.\\\\n\\\\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.\\"
  companyTabs: [company]
  \\"Specifies a tab on the document where the date the document was signed will automatically appear.\\"
  dateSignedTabs: [dateSigned]
  \\"Specifies a tab on the document where you want the recipient to enter a date. Date tabs are single-line fields that allow date information to be entered in any format. The tooltip for this tab recommends entering the date as MM/DD/YYYY, but this is not enforced. The format entered by the signer is retained. \\\\n\\\\nIf you need a particular date format enforced, DocuSign recommends using a Text tab with a Validation Pattern and Validation Message to enforce the format.\\"
  dateTabs: [date]
  \\"Specifies a tag on the document where you want to give the recipient the option of declining an envelope. If the recipient clicks the Decline tag during the signing process, the envelope is voided.\\"
  declineTabs: [decline]
  \\"Specifies a location on the document where you want where you want the recipient's email, as entered in the recipient information, to display.\\"
  emailAddressTabs: [dateSigned]
  \\"Specifies a tag on the document where you want the recipient to enter an email. Email tags are single-line fields that accept any characters. The system checks that a valid email format (i.e. xxx@yyy.zzz) is entered in the tag. It uses the same parameters as a Text tab, with the validation message and pattern set for email information.\\\\n\\\\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.\\"
  emailTabs: [date]
  \\"Specifies a tag on the document where you want the envelope ID for to appear. Recipients cannot enter or change the information in this tab, it is for informational purposes only.\\"
  envelopeIdTabs: [envelopeId]
  \\"Specifies tag on a document where you want the recipient's first name to appear. This tag takes the recipient's name, as entered in the recipient information, splits it into sections based on spaces and uses the first section as the first name.\\"
  firstNameTabs: [dateSigned]
  \\"A list of formula tabs.\\\\n\\\\nThe value of a formula tab is calculated\\\\nfrom the values of other\\\\nnumber or date tabs in the document.\\\\nWhen the recipient completes the underlying fields,\\\\nthe formula tab calculates and displays the result.\\\\n\\\\nThe \`formula\` property of the tab\\\\ncontains the references\\\\nto the underlying tabs.\\\\nSee [Calculated Fields][calculatedfields]\\\\nin the DocuSign Support Center\\\\nto learn more about formulas.\\\\n\\\\nIf a formula tab contains\\\\na \`paymentDetails\` property,\\\\nthe tab is considered a payment item.\\\\nSee [Requesting Payments Along with Signatures][paymentguide]\\\\nin the DocuSign Support Center\\\\nto learn more about payments.\\\\n\\\\n[calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields\\\\n[paymentguide]:     https://support.docusign.com/en/guides/requesting-payments-along-with-signatures\\"
  formulaTabs: [formulaTab]
  \\"Specifies a tag on the document where you want the recipient's name to appear.\\"
  fullNameTabs: [dateSigned]
  \\"Specifies a tag location in the document at which a recipient will place their initials. The \`optional\` parameter specifies whether the initials are required or optional.\\"
  initialHereTabs: [initialHere]
  \\"Specifies a tag on a document where you want the recipient's last name to appear. This tag takes the recipient's name, as entered in the recipient information, splits it into sections based on spaces and uses the last section as the last name.\\"
  lastNameTabs: [dateSigned]
  \\"Specify this tag to give your recipient a list of options, presented as a drop-down list, from which they can select.\\"
  listTabs: [list]
  \\"Specifies a location on the document where you want to place additional information, in the form of a note, for a recipient.\\"
  noteTabs: [note]
  \\"Specifies a tag on the document where you want the recipient to enter a number. It uses the same parameters as a Text tab, with the validation message and pattern set for number information.\\\\n\\\\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.\\"
  numberTabs: [number]
  \\"Specifies a tag on the document in a location where the recipient can select one option from a group of options using a radio button. The radio buttons do not have to be on the same page in a document.\\"
  radioGroupTabs: [radioGroup]
  \\"A complex type the contains information about the tag that specifies where the recipient places their signature in the document. The \\\\\\"optional\\\\\\" parameter sets if the signature is required or optional.\\"
  signHereTabs: [signHere]
  \\"Specifies a tag on the document when you want the recipient to add supporting documents to an envelope.\\"
  signerAttachmentTabs: [signerAttachment]
  \\"Specifies a tag on the document where you want the recipient to enter a Social Security Number (SSN). A SSN can be typed with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for SSN information.\\\\n\\\\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.\\"
  ssnTabs: [ssn]
  \\"Specifies a that that is an adaptable field that allows the recipient to enter different text information.\\\\n\\\\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.\\"
  textTabs: [text]
  \\"Specifies a tag on the document where you want the recipient's title to appear.\\\\n\\\\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.\\"
  titleTabs: [title]
  viewTabs: [view]
  \\"Specifies a tag on the document where you want the recipient to enter a ZIP code. The ZIP code can be a five numbers or the ZIP+4 format with nine numbers. The zip code can be typed with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for ZIP code information.\\\\n\\\\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.\\"
  zipTabs: [zip]
}

\\"A tab that allows the recipient to approve documents\\\\nwithout placing a signature or initials on the\\\\ndocument.\\"
type approve {
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\\\\n-->\\"
  anchorCaseSensitive: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\\\\n-->\\"
  anchorHorizontalAlignment: String
  \\"When set to **true**, this tab is ignored if anchorString is not found in the document.\\"
  anchorIgnoreIfNotPresent: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\\\\n-->\\"
  anchorMatchWholeWord: String
  \\"Anchor text information for a radio button.\\"
  anchorString: String
  \\"Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.\\"
  anchorUnits: String
  \\"Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorXOffset: String
  \\"Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorYOffset: String
  \\"When set to **true**, the information in the tab is bold.\\"
  bold: String
  \\"Specifies the approval text displayed in the tab.\\"
  buttonText: String
  \\"For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.\\"
  conditionalParentLabel: String
  \\"For conditional fields, this is the value of the parent tab that controls the tab's visibility.\\\\n\\\\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \\\\\\"on\\\\\\" as the value to show that the parent tab is active.\\"
  conditionalParentValue: String
  \\"The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.\\"
  customTabId: String
  \\"Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.\\"
  documentId: String
  errorDetails: errorDetails
  \\"The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.\\"
  font: String
  \\"The font color used for the information in the tab.\\\\n\\\\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.\\"
  fontColor: String
  \\"The font size used for the information in the tab.\\\\n\\\\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.\\"
  fontSize: String
  \\"Height of the tab in pixels.\\"
  height: Int
  \\"When set to **true**, the information in the tab is italic.\\"
  italic: String
  mergeField: mergeField
  \\"Specifies the page number on which the tab is located.\\\\nMust be 1 for [supplemental documents][supdocs].\\\\n\\\\n[supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents\\"
  pageNumber: String
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].\\"
  tabId: String
  \\"The label string associated with the tab.\\\\nThe string may be the empty string.\\\\nIf no value is provided, the tab type is used as the value.\\\\n\\\\nMaximum of 500 characters.\\"
  tabLabel: String
  tabOrder: String
  \\"When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.\\"
  templateLocked: String
  \\"When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.\\"
  templateRequired: String
  \\"When set to **true**, the information in the tab is underlined.\\"
  underline: String
  \\"Width of the tab in pixels.\\"
  width: Int
  \\"This indicates the horizontal offset of the object on the page.\\\\nDocuSign uses 72 DPI when determining position.\\\\nRequired. May be zero.\\"
  xPosition: String
  \\"This indicates the vertical offset of the object on the page.\\\\nDocuSign uses 72 DPI when determining position.\\\\nRequired. May be zero.\\"
  yPosition: String
}

\\"Contains information for transfering values between Salesforce data fields and DocuSign Tabs.\\"
type mergeField {
  \\"When set to **true**, the sender can modify the value of the custom tab during the sending process.\\"
  allowSenderToEdit: String
  \\"If merge field's are being used, specifies the type of the merge field. The only  supported value is **salesforce**.\\"
  configurationType: String
  \\"Sets the object associated with the custom tab. Currently this is the Salesforce Object.\\"
  path: String
  \\"Specifies the row number in a Salesforce table that the merge field value corresponds to.\\"
  row: String
  \\"When wet to true, the information entered in the tab automatically updates the related Salesforce data when an envelope is completed.\\"
  writeBack: String
}

type checkbox {
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\\\\n-->\\"
  anchorCaseSensitive: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\\\\n-->\\"
  anchorHorizontalAlignment: String
  \\"When set to **true**, this tab is ignored if anchorString is not found in the document.\\"
  anchorIgnoreIfNotPresent: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\\\\n-->\\"
  anchorMatchWholeWord: String
  \\"Anchor text information for a radio button.\\"
  anchorString: String
  \\"Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.\\"
  anchorUnits: String
  \\"Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorXOffset: String
  \\"Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorYOffset: String
  \\"For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.\\"
  conditionalParentLabel: String
  \\"For conditional fields, this is the value of the parent tab that controls the tab's visibility.\\\\n\\\\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \\\\\\"on\\\\\\" as the value to show that the parent tab is active.\\"
  conditionalParentValue: String
  \\"The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.\\"
  customTabId: String
  \\"Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.\\"
  documentId: String
  errorDetails: errorDetails
  \\"When set to **true**, the signer cannot change the data of the custom tab.\\"
  locked: String
  mergeField: mergeField
  \\"Specifies the tool tip text for the tab.\\"
  name: String
  \\"Specifies the page number on which the tab is located.\\\\nMust be 1 for [supplemental documents][supdocs].\\\\n\\\\n[supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents\\"
  pageNumber: String
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  \\"Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.\\"
  requireInitialOnSharedChange: String
  \\"When set to **true**, the signer is required to fill out this tab\\"
  required: String
  \\"When set to **true**, the checkbox is selected.\\"
  selected: String
  \\"When set to **true**, this custom tab is shared.\\"
  shared: String
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].\\"
  tabId: String
  \\"The label string associated with the tab.\\\\nThe string may be the empty string.\\\\nIf no value is provided, the tab type is used as the value.\\\\n\\\\nMaximum of 500 characters.\\"
  tabLabel: String
  tabOrder: String
  \\"When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.\\"
  templateLocked: String
  \\"When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.\\"
  templateRequired: String
  \\"This indicates the horizontal offset of the object on the page.\\\\nDocuSign uses 72 DPI when determining position.\\\\nRequired. May be zero.\\"
  xPosition: String
  \\"This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.\\"
  yPosition: String
}

type company {
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\\\\n-->\\"
  anchorCaseSensitive: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\\\\n-->\\"
  anchorHorizontalAlignment: String
  \\"When set to **true**, this tab is ignored if anchorString is not found in the document.\\"
  anchorIgnoreIfNotPresent: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\\\\n-->\\"
  anchorMatchWholeWord: String
  \\"Anchor text information for a radio button.\\"
  anchorString: String
  \\"Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.\\"
  anchorUnits: String
  \\"Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorXOffset: String
  \\"Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorYOffset: String
  \\"When set to **true**, the information in the tab is bold.\\"
  bold: String
  \\"When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\\\\n\\\\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\\\\n\\\\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.\\"
  concealValueOnDocument: String
  \\"For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.\\"
  conditionalParentLabel: String
  \\"For conditional fields, this is the value of the parent tab that controls the tab's visibility.\\\\n\\\\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \\\\\\"on\\\\\\" as the value to show that the parent tab is active.\\"
  conditionalParentValue: String
  \\"The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.\\"
  customTabId: String
  \\"When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.\\"
  disableAutoSize: String
  \\"Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.\\"
  documentId: String
  errorDetails: errorDetails
  \\"The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.\\"
  font: String
  \\"The font color used for the information in the tab.\\\\n\\\\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.\\"
  fontColor: String
  \\"The font size used for the information in the tab.\\\\n\\\\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.\\"
  fontSize: String
  \\"When set to **true**, the information in the tab is italic.\\"
  italic: String
  \\"When set to **true**, the signer cannot change the data of the custom tab.\\"
  locked: String
  \\"An optional value that describes the maximum length of the property when the property is a string.\\"
  maxLength: Int
  mergeField: mergeField
  \\"Specifies the tool tip text for the tab.\\"
  name: String
  \\"The initial value of the tab when it was sent to the recipient.\\"
  originalValue: String
  \\"Specifies the page number on which the tab is located.\\\\nMust be 1 for [supplemental documents][supdocs].\\\\n\\\\n[supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents\\"
  pageNumber: String
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  \\"When set to **true**, the signer is required to fill out this tab\\"
  required: String
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].\\"
  tabId: String
  \\"The label string associated with the tab.\\\\nThe string may be the empty string.\\\\nIf no value is provided, the tab type is used as the value.\\\\n\\\\nMaximum of 500 characters.\\"
  tabLabel: String
  tabOrder: String
  \\"When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.\\"
  templateLocked: String
  \\"When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.\\"
  templateRequired: String
  \\"When set to **true**, the information in the tab is underlined.\\"
  underline: String
  \\"Specifies the value of the tab.\\"
  value: String
  \\"Width of the tab in pixels.\\"
  width: Int
  \\"This indicates the horizontal offset of the object on the page.\\\\nDocuSign uses 72 DPI when determining position.\\\\nRequired. May be zero.\\"
  xPosition: String
  \\"This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.\\"
  yPosition: String
}

type dateSigned {
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\\\\n-->\\"
  anchorCaseSensitive: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\\\\n-->\\"
  anchorHorizontalAlignment: String
  \\"When set to **true**, this tab is ignored if anchorString is not found in the document.\\"
  anchorIgnoreIfNotPresent: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\\\\n-->\\"
  anchorMatchWholeWord: String
  \\"Anchor text information for a radio button.\\"
  anchorString: String
  \\"Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.\\"
  anchorUnits: String
  \\"Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorXOffset: String
  \\"Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorYOffset: String
  \\"When set to **true**, the information in the tab is bold.\\"
  bold: String
  \\"For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.\\"
  conditionalParentLabel: String
  \\"For conditional fields, this is the value of the parent tab that controls the tab's visibility.\\\\n\\\\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \\\\\\"on\\\\\\" as the value to show that the parent tab is active.\\"
  conditionalParentValue: String
  \\"The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.\\"
  customTabId: String
  \\"Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.\\"
  documentId: String
  errorDetails: errorDetails
  \\"The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.\\"
  font: String
  \\"The font color used for the information in the tab.\\\\n\\\\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.\\"
  fontColor: String
  \\"The font size used for the information in the tab.\\\\n\\\\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.\\"
  fontSize: String
  \\"When set to **true**, the information in the tab is italic.\\"
  italic: String
  mergeField: mergeField
  name: String
  \\"Specifies the page number on which the tab is located.\\\\nMust be 1 for [supplemental documents][supdocs].\\\\n\\\\n[supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents\\"
  pageNumber: String
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].\\"
  tabId: String
  \\"The label string associated with the tab.\\\\nThe string may be the empty string.\\\\nIf no value is provided, the tab type is used as the value.\\\\n\\\\nMaximum of 500 characters.\\"
  tabLabel: String
  tabOrder: String
  \\"When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.\\"
  templateLocked: String
  \\"When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.\\"
  templateRequired: String
  \\"When set to **true**, the information in the tab is underlined.\\"
  underline: String
  \\"Specifies the value of the tab.\\"
  value: String
  \\"This indicates the horizontal offset of the object on the page.\\\\nDocuSign uses 72 DPI when determining position.\\\\nRequired. May be zero.\\"
  xPosition: String
  \\"This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.\\"
  yPosition: String
}

type date {
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\\\\n-->\\"
  anchorCaseSensitive: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\\\\n-->\\"
  anchorHorizontalAlignment: String
  \\"When set to **true**, this tab is ignored if anchorString is not found in the document.\\"
  anchorIgnoreIfNotPresent: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\\\\n-->\\"
  anchorMatchWholeWord: String
  \\"Anchor text information for a radio button.\\"
  anchorString: String
  \\"Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.\\"
  anchorUnits: String
  \\"Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorXOffset: String
  \\"Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorYOffset: String
  \\"When set to **true**, the information in the tab is bold.\\"
  bold: String
  \\"When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\\\\n\\\\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\\\\n\\\\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.\\"
  concealValueOnDocument: String
  \\"For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.\\"
  conditionalParentLabel: String
  \\"For conditional fields, this is the value of the parent tab that controls the tab's visibility.\\\\n\\\\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \\\\\\"on\\\\\\" as the value to show that the parent tab is active.\\"
  conditionalParentValue: String
  \\"The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.\\"
  customTabId: String
  \\"When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.\\"
  disableAutoSize: String
  \\"Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.\\"
  documentId: String
  errorDetails: errorDetails
  \\"The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.\\"
  font: String
  \\"The font color used for the information in the tab.\\\\n\\\\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.\\"
  fontColor: String
  \\"The font size used for the information in the tab.\\\\n\\\\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.\\"
  fontSize: String
  \\"When set to **true**, the information in the tab is italic.\\"
  italic: String
  \\"When set to **true**, the signer cannot change the data of the custom tab.\\"
  locked: String
  \\"An optional value that describes the maximum length of the property when the property is a string.\\"
  maxLength: Int
  mergeField: mergeField
  name: String
  \\"The initial value of the tab when it was sent to the recipient.\\"
  originalValue: String
  \\"Specifies the page number on which the tab is located.\\\\nMust be 1 for [supplemental documents][supdocs].\\\\n\\\\n[supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents\\"
  pageNumber: String
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  \\"When set to **true** and shared is true, information must be entered in this field to complete the envelope.\\"
  requireAll: String
  \\"Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.\\"
  requireInitialOnSharedChange: String
  \\"When set to **true**, the signer is required to fill out this tab\\"
  required: String
  \\"When set to **true**, the sender must populate the tab before an envelope can be sent using the template. \\\\n\\\\nThis value tab can only be changed by modifying (PUT) the template. \\\\n\\\\nTabs with a \`senderRequired\` value of true cannot be deleted from an envelope.\\"
  senderRequired: String
  \\"When set to **true**, this custom tab is shared.\\"
  shared: String
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].\\"
  tabId: String
  \\"The label string associated with the tab.\\\\nThe string may be the empty string.\\\\nIf no value is provided, the tab type is used as the value.\\\\n\\\\nMaximum of 500 characters.\\"
  tabLabel: String
  tabOrder: String
  \\"When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.\\"
  templateLocked: String
  \\"When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.\\"
  templateRequired: String
  \\"When set to **true**, the information in the tab is underlined.\\"
  underline: String
  \\"The message displayed if the custom tab fails input validation (either custom of embedded).\\"
  validationMessage: String
  \\"A regular expressionn used to validate input for the tab.\\"
  validationPattern: String
  \\"Specifies the value of the tab.\\"
  value: String
  \\"Width of the tab in pixels.\\"
  width: Int
  \\"This indicates the horizontal offset of the object on the page.\\\\nDocuSign uses 72 DPI when determining position.\\\\nRequired. May be zero.\\"
  xPosition: String
  \\"This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.\\"
  yPosition: String
}

type decline {
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\\\\n-->\\"
  anchorCaseSensitive: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\\\\n-->\\"
  anchorHorizontalAlignment: String
  \\"When set to **true**, this tab is ignored if anchorString is not found in the document.\\"
  anchorIgnoreIfNotPresent: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\\\\n-->\\"
  anchorMatchWholeWord: String
  \\"Anchor text information for a radio button.\\"
  anchorString: String
  \\"Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.\\"
  anchorUnits: String
  \\"Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorXOffset: String
  \\"Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorYOffset: String
  \\"When set to **true**, the information in the tab is bold.\\"
  bold: String
  \\"Specifies the decline text displayed in the tab.\\"
  buttonText: String
  \\"For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.\\"
  conditionalParentLabel: String
  \\"For conditional fields, this is the value of the parent tab that controls the tab's visibility.\\\\n\\\\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \\\\\\"on\\\\\\" as the value to show that the parent tab is active.\\"
  conditionalParentValue: String
  \\"The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.\\"
  customTabId: String
  \\"The reason the recipient declined the document.\\"
  declineReason: String
  \\"Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.\\"
  documentId: String
  errorDetails: errorDetails
  \\"The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.\\"
  font: String
  \\"The font color used for the information in the tab.\\\\n\\\\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.\\"
  fontColor: String
  \\"The font size used for the information in the tab.\\\\n\\\\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.\\"
  fontSize: String
  \\"Height of the tab in pixels.\\"
  height: Int
  \\"When set to **true**, the information in the tab is italic.\\"
  italic: String
  mergeField: mergeField
  \\"Specifies the page number on which the tab is located.\\\\nMust be 1 for [supplemental documents][supdocs].\\\\n\\\\n[supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents\\"
  pageNumber: String
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].\\"
  tabId: String
  \\"The label string associated with the tab.\\\\nThe string may be the empty string.\\\\nIf no value is provided, the tab type is used as the value.\\\\n\\\\nMaximum of 500 characters.\\"
  tabLabel: String
  tabOrder: String
  \\"When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.\\"
  templateLocked: String
  \\"When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.\\"
  templateRequired: String
  \\"When set to **true**, the information in the tab is underlined.\\"
  underline: String
  \\"Width of the tab in pixels.\\"
  width: Int
  \\"This indicates the horizontal offset of the object on the page.\\\\nDocuSign uses 72 DPI when determining position.\\\\nRequired. May be zero.\\"
  xPosition: String
  \\"This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.\\"
  yPosition: String
}

type envelopeId {
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\\\\n-->\\"
  anchorCaseSensitive: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\\\\n-->\\"
  anchorHorizontalAlignment: String
  \\"When set to **true**, this tab is ignored if anchorString is not found in the document.\\"
  anchorIgnoreIfNotPresent: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\\\\n-->\\"
  anchorMatchWholeWord: String
  \\"Anchor text information for a radio button.\\"
  anchorString: String
  \\"Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.\\"
  anchorUnits: String
  \\"Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorXOffset: String
  \\"Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorYOffset: String
  \\"When set to **true**, the information in the tab is bold.\\"
  bold: String
  \\"For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.\\"
  conditionalParentLabel: String
  \\"For conditional fields, this is the value of the parent tab that controls the tab's visibility.\\\\n\\\\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \\\\\\"on\\\\\\" as the value to show that the parent tab is active.\\"
  conditionalParentValue: String
  \\"The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.\\"
  customTabId: String
  \\"Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.\\"
  documentId: String
  errorDetails: errorDetails
  \\"The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.\\"
  font: String
  \\"The font color used for the information in the tab.\\\\n\\\\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.\\"
  fontColor: String
  \\"The font size used for the information in the tab.\\\\n\\\\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.\\"
  fontSize: String
  \\"When set to **true**, the information in the tab is italic.\\"
  italic: String
  mergeField: mergeField
  name: String
  \\"Specifies the page number on which the tab is located.\\\\nMust be 1 for [supplemental documents][supdocs].\\\\n\\\\n[supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents\\"
  pageNumber: String
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].\\"
  tabId: String
  \\"The label string associated with the tab.\\\\nThe string may be the empty string.\\\\nIf no value is provided, the tab type is used as the value.\\\\n\\\\nMaximum of 500 characters.\\"
  tabLabel: String
  tabOrder: String
  \\"When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.\\"
  templateLocked: String
  \\"When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.\\"
  templateRequired: String
  \\"When set to **true**, the information in the tab is underlined.\\"
  underline: String
  \\"This indicates the horizontal offset of the object on the page.\\\\nDocuSign uses 72 DPI when determining position.\\\\nRequired. May be zero.\\"
  xPosition: String
  \\"This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.\\"
  yPosition: String
}

\\"The value of a formula tab is calculated\\\\nfrom the values of other\\\\nnumber or date tabs in the document.\\\\nWhen the recipient completes the underlying fields,\\\\nthe formula tab calculates and displays the result.\\\\n\\\\nThe \`formula\` property of the tab\\\\ncontains the references\\\\nto the underlying tabs.\\\\nSee [Calculated Fields][calculatedfields]\\\\nin the DocuSign Support Center\\\\nto learn more about formulas.\\\\n\\\\nIf a formula tab contains\\\\na \`paymentDetails\` property,\\\\nthe tab is considered a payment item.\\\\nSee [Requesting Payments Along with Signatures][paymentguide]\\\\nin the DocuSign Support Center\\\\nto learn more about payments.\\\\n\\\\n[calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields\\\\n[paymentguide]:     https://support.docusign.com/en/guides/requesting-payments-along-with-signatures\\"
type formulaTab {
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\\\\n-->\\"
  anchorCaseSensitive: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\\\\n-->\\"
  anchorHorizontalAlignment: String
  \\"When set to **true**, this tab is ignored if anchorString is not found in the document.\\"
  anchorIgnoreIfNotPresent: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\\\\n-->\\"
  anchorMatchWholeWord: String
  \\"Anchor text information for a radio button.\\"
  anchorString: String
  \\"Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.\\"
  anchorUnits: String
  \\"Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorXOffset: String
  \\"Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorYOffset: String
  \\"When set to **true**, the information in the tab is bold.\\"
  bold: String
  \\"When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\\\\n\\\\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\\\\n\\\\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.\\"
  concealValueOnDocument: String
  \\"For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.\\"
  conditionalParentLabel: String
  \\"For conditional fields, this is the value of the parent tab that controls the tab's visibility.\\\\n\\\\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \\\\\\"on\\\\\\" as the value to show that the parent tab is active.\\"
  conditionalParentValue: String
  \\"The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.\\"
  customTabId: String
  \\"When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.\\"
  disableAutoSize: String
  \\"Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.\\"
  documentId: String
  errorDetails: errorDetails
  \\"The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.\\"
  font: String
  \\"The font color used for the information in the tab.\\\\n\\\\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.\\"
  fontColor: String
  \\"The font size used for the information in the tab.\\\\n\\\\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.\\"
  fontSize: String
  \\"Contains the formula\\\\nfor calculating the value of\\\\nthis tab.\\\\n\\\\nUse a tab's \`tabLabel\`,\\\\nenclosed in brackets,\\\\nto refer to it.\\\\n\\\\nFor example,\\\\nyou want to present the total cost\\\\nof two items, tax included.\\\\n\\\\nThe cost of each item is stored\\\\nin number tabs labeled Item1 and Item2.\\\\nThe tax rate is in a number tab\\\\nlabeled TaxRate.\\\\n\\\\nThe formula string for this property\\\\nwould be:\\\\n\`([Item1] + [Item2]) * (1 + [TaxRate])\`\\\\n\\\\nSee [Calculated Fields][calculatedfields]\\\\nin the DocuSign Support Center\\\\nto learn more about formulas.\\\\n\\\\nMaximum Length: 2000 characters\\\\n\\\\n[calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields\\"
  formula: String
  hidden: String
  \\"When set to **true**, sets this as a payment tab. Can only be used with Text, Number, Formula, or List tabs. The value of the tab must be a number.\\"
  isPaymentAmount: String
  \\"When set to **true**, the information in the tab is italic.\\"
  italic: String
  \\"When set to **true**, the signer cannot change the data of the custom tab.\\"
  locked: String
  \\"An optional value that describes the maximum length of the property when the property is a string.\\"
  maxLength: Int
  mergeField: mergeField
  name: String
  \\"The initial value of the tab when it was sent to the recipient.\\"
  originalValue: String
  \\"Specifies the page number on which the tab is located.\\\\nMust be 1 for [supplemental documents][supdocs].\\\\n\\\\n[supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents\\"
  pageNumber: String
  paymentDetails: paymentDetails
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  \\"When set to **true** and shared is true, information must be entered in this field to complete the envelope.\\"
  requireAll: String
  \\"Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.\\"
  requireInitialOnSharedChange: String
  \\"When set to **true**, the signer is required to fill out this tab\\"
  required: String
  roundDecimalPlaces: String
  \\"When set to **true**, the sender must populate the tab before an envelope can be sent using the template. \\\\n\\\\nThis value tab can only be changed by modifying (PUT) the template. \\\\n\\\\nTabs with a \`senderRequired\` value of true cannot be deleted from an envelope.\\"
  senderRequired: String
  \\"When set to **true**, this custom tab is shared.\\"
  shared: String
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].\\"
  tabId: String
  \\"The label string associated with the tab.\\\\nThe string may be the empty string.\\\\nIf no value is provided, the tab type is used as the value.\\\\n\\\\nMaximum of 500 characters.\\"
  tabLabel: String
  tabOrder: String
  \\"When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.\\"
  templateLocked: String
  \\"When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.\\"
  templateRequired: String
  \\"When set to **true**, the information in the tab is underlined.\\"
  underline: String
  \\"The message displayed if the custom tab fails input validation (either custom of embedded).\\"
  validationMessage: String
  \\"A regular expressionn used to validate input for the tab.\\"
  validationPattern: String
  \\"Specifies the value of the tab.\\"
  value: String
  \\"Width of the tab in pixels.\\"
  width: Int
  \\"This indicates the horizontal offset of the object on the page.\\\\nDocuSign uses 72 DPI when determining position.\\\\nRequired. May be zero.\\"
  xPosition: String
  \\"This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.\\"
  yPosition: String
}

\\"When a formula tab\\\\nhas a \`paymentDetails\` property,\\\\nthe formula tab\\\\nis a payment item.\\\\nSee [Requesting Payments Along with Signatures][paymentguide]\\\\nin the DocuSign Support Center\\\\nto learn more about payments.\\\\n\\\\n[paymentguide]:     https://support.docusign.com/en/guides/requesting-payments-along-with-signatures\\"
type paymentDetails {
  chargeId: String
  \\"Specifies the three-letter\\\\n[ISO 4217][ISO4217] currency code for the payment.\\\\n\\\\nSupported currencies are:\\\\n\\\\n* AUD Australian dollar\\\\n* CAD Canadian dollar\\\\n* EUR Euro\\\\n* GBP Great Britain pund\\\\n* USD United States dollar\\\\n\\\\nSpecifying any other ISO 4217 code for payments is an error.\\\\n\\\\n[ISO4217]:          https://en.wikipedia.org/wiki/ISO_4217\\"
  currencyCode: String
  \\"A GUID that identifies the payment gateway\\\\nconnected to the sender's DocuSign account.\\\\n\\\\nThere is no public API\\\\nfor connecting payment gateway accounts\\\\nYou must connect and manage payment gateway accounts\\\\nthrough the DocuSign Admin console\\\\nand through your chosen payment gateway.\\\\n\\\\nYou can get the gateway account ID\\\\nin the Payments section\\\\nof the DocuSign Admin console.\\\\n\\\\n\\\\n[paymentgateways]:  https://support.docusign.com/en/guides/managing-payment-gateways\\"
  gatewayAccountId: String
  gatewayName: String
  \\"A payment formula can have\\\\none or more line items\\\\nthat provide detail about\\\\nindividual items in a payment request.\\\\n\\\\nThe list of line items\\\\nare returned as metadata\\\\nto the payment gateway.\\"
  lineItems: [paymentLineItem]
  \\"This read-only property describes the status of a payment.\\\\n\\\\n* \`new\`<br>\\\\n  This is a new payment request.\\\\n  The envelope has been created,\\\\n  but no payment authorizations have been made.\\\\n\\\\n* \`auth_complete\`<br>\\\\n  A recipient has entered their credit card information,\\\\n  but the envelope has not been completed.\\\\n  The card has not been charged.\\\\n\\\\n* \`payment_complete\`<br>\\\\n  The recipient's card has been charged.\\\\n\\\\n* \`payment_capture_failed\`<br>\\\\n  Final charge failed.\\\\n  This can happen when too much time\\\\n  passes between authorizing the payment\\\\n  and completing the document.\\"
  status: String
  total: money
}

\\"A line item describes details\\\\nabout an individual line item\\\\nin a payment request.\\"
type paymentLineItem {
  \\"This is a the \`tabLabel\`\\\\nthat specifies the amount paid\\\\nfor the line items.\\"
  amountReference: String
  \\"A sender-defined description of the line item.\\"
  description: String
  \\"This is the sender-defined\\\\nSKU, inventory number, or other item code\\\\nfor the line item.\\"
  itemCode: String
  \\"This is a sender-defined\\\\nproduct name, service name,\\\\nor other designation for the line item.\\"
  name: String
}

\\"Describes information\\\\nabout the \`total\` of a payment.\\"
type money {
  \\"The total payment amount\\\\nin the currency's base unit.\\\\nFor example, for USD\\\\nthe base currency is one cent.\\"
  amountInBaseUnit: String
  \\"The three-letter\\\\n[ISO 4217][ISO4217] currency code for the payment.\\\\n\\\\nFor example:\\\\n\\\\n* AUD Australian dollar\\\\n* CAD Canadian dollar\\\\n* EUR Euro\\\\n* GBP Great Britain pund\\\\n* USD United States dollar\\\\n\\\\nThis is a read-only property.\\\\n\\\\n[ISO4217]:          https://en.wikipedia.org/wiki/ISO_4217\\"
  currency: String
  \\"The payment amount as displayed\\\\nin the \`currency\`.\\\\n\\\\nFor example, if the payment amount\\\\nis USD 12.59,\\\\nthe \`amountInBaseUnit\` is 1259 (cents),\\\\nand the displayed amount is \`$12.59 USD\`.\\\\n\\\\nThis is a read-only property.\\"
  displayAmount: String
}

type initialHere {
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\\\\n-->\\"
  anchorCaseSensitive: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\\\\n-->\\"
  anchorHorizontalAlignment: String
  \\"When set to **true**, this tab is ignored if anchorString is not found in the document.\\"
  anchorIgnoreIfNotPresent: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\\\\n-->\\"
  anchorMatchWholeWord: String
  \\"Anchor text information for a radio button.\\"
  anchorString: String
  \\"Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.\\"
  anchorUnits: String
  \\"Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorXOffset: String
  \\"Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorYOffset: String
  \\"For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.\\"
  conditionalParentLabel: String
  \\"For conditional fields, this is the value of the parent tab that controls the tab's visibility.\\\\n\\\\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \\\\\\"on\\\\\\" as the value to show that the parent tab is active.\\"
  conditionalParentValue: String
  \\"The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.\\"
  customTabId: String
  \\"Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.\\"
  documentId: String
  errorDetails: errorDetails
  mergeField: mergeField
  \\"Specifies the tool tip text for the tab.\\"
  name: String
  optional: String
  \\"Specifies the page number on which the tab is located.\\\\nMust be 1 for [supplemental documents][supdocs].\\\\n\\\\n[supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents\\"
  pageNumber: String
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  \\"Sets the size for the InitialHere tab. It can be value from 0.5 to 1.0, where 1.0 represents full size and 0.5 is 50% size.\\"
  scaleValue: Float
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].\\"
  tabId: String
  \\"The label string associated with the tab.\\\\nThe string may be the empty string.\\\\nIf no value is provided, the tab type is used as the value.\\\\n\\\\nMaximum of 500 characters.\\"
  tabLabel: String
  tabOrder: String
  \\"When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.\\"
  templateLocked: String
  \\"When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.\\"
  templateRequired: String
  \\"This indicates the horizontal offset of the object on the page.\\\\nDocuSign uses 72 DPI when determining position.\\\\nRequired. May be zero.\\"
  xPosition: String
  \\"This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.\\"
  yPosition: String
}

type list {
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\\\\n-->\\"
  anchorCaseSensitive: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\\\\n-->\\"
  anchorHorizontalAlignment: String
  \\"When set to **true**, this tab is ignored if anchorString is not found in the document.\\"
  anchorIgnoreIfNotPresent: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\\\\n-->\\"
  anchorMatchWholeWord: String
  \\"Anchor text information for a radio button.\\"
  anchorString: String
  \\"Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.\\"
  anchorUnits: String
  \\"Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorXOffset: String
  \\"Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorYOffset: String
  \\"When set to **true**, the information in the tab is bold.\\"
  bold: String
  \\"For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.\\"
  conditionalParentLabel: String
  \\"For conditional fields, this is the value of the parent tab that controls the tab's visibility.\\\\n\\\\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \\\\\\"on\\\\\\" as the value to show that the parent tab is active.\\"
  conditionalParentValue: String
  \\"The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.\\"
  customTabId: String
  \\"Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.\\"
  documentId: String
  errorDetails: errorDetails
  \\"The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.\\"
  font: String
  \\"The font color used for the information in the tab.\\\\n\\\\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.\\"
  fontColor: String
  \\"The font size used for the information in the tab.\\\\n\\\\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.\\"
  fontSize: String
  \\"When set to **true**, the information in the tab is italic.\\"
  italic: String
  \\"The list of values that can be selected by senders. The list values are separated by semi-colons. Example: [one;two;three;four]\\\\n\\\\nMaximum Length of listItems:  2048 characters.\\\\nMaximum Length of items in the list: 100 characters.\\"
  listItems: [listItem]
  \\"When set to **true**, the signer cannot change the data of the custom tab.\\"
  locked: String
  mergeField: mergeField
  \\"Specifies the page number on which the tab is located.\\\\nMust be 1 for [supplemental documents][supdocs].\\\\n\\\\n[supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents\\"
  pageNumber: String
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  \\"When set to **true** and shared is true, information must be entered in this field to complete the envelope.\\"
  requireAll: String
  \\"Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.\\"
  requireInitialOnSharedChange: String
  \\"When set to **true**, the signer is required to fill out this tab\\"
  required: String
  \\"When set to **true**, the sender must populate the tab before an envelope can be sent using the template. \\\\n\\\\nThis value tab can only be changed by modifying (PUT) the template. \\\\n\\\\nTabs with a \`senderRequired\` value of true cannot be deleted from an envelope.\\"
  senderRequired: String
  \\"When set to **true**, this custom tab is shared.\\"
  shared: String
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].\\"
  tabId: String
  \\"The label string associated with the tab.\\\\nThe string may be the empty string.\\\\nIf no value is provided, the tab type is used as the value.\\\\n\\\\nMaximum of 500 characters.\\"
  tabLabel: String
  tabOrder: String
  \\"When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.\\"
  templateLocked: String
  \\"When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.\\"
  templateRequired: String
  \\"When set to **true**, the information in the tab is underlined.\\"
  underline: String
  \\"The value to use when the item is selected.\\"
  value: String
  \\"Width of the tab in pixels.\\"
  width: Int
  \\"This indicates the horizontal offset of the object on the page.\\\\nDocuSign uses 72 DPI when determining position.\\\\nRequired. May be zero.\\"
  xPosition: String
  \\"This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.\\"
  yPosition: String
}

type listItem {
  \\"When set to **true**, indicates that this item is the default selection shown to a signer. \\\\n\\\\nOnly one selection can be set as the default.\\"
  selected: String
  \\"Specifies the text that is shown in the dropdown list.\\"
  text: String
  \\"Specifies the value that is used when the list item is selected.\\"
  value: String
}

type note {
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\\\\n-->\\"
  anchorCaseSensitive: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\\\\n-->\\"
  anchorHorizontalAlignment: String
  \\"When set to **true**, this tab is ignored if anchorString is not found in the document.\\"
  anchorIgnoreIfNotPresent: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\\\\n-->\\"
  anchorMatchWholeWord: String
  \\"Anchor text information for a radio button.\\"
  anchorString: String
  \\"Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.\\"
  anchorUnits: String
  \\"Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorXOffset: String
  \\"Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorYOffset: String
  \\"When set to **true**, the information in the tab is bold.\\"
  bold: String
  \\"For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.\\"
  conditionalParentLabel: String
  \\"For conditional fields, this is the value of the parent tab that controls the tab's visibility.\\\\n\\\\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \\\\\\"on\\\\\\" as the value to show that the parent tab is active.\\"
  conditionalParentValue: String
  \\"The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.\\"
  customTabId: String
  \\"Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.\\"
  documentId: String
  errorDetails: errorDetails
  \\"The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.\\"
  font: String
  \\"The font color used for the information in the tab.\\\\n\\\\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.\\"
  fontColor: String
  \\"The font size used for the information in the tab.\\\\n\\\\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.\\"
  fontSize: String
  \\"Height of the tab in pixels.\\"
  height: Int
  \\"When set to **true**, the information in the tab is italic.\\"
  italic: String
  mergeField: mergeField
  \\"Specifies the tool tip text for the tab.\\"
  name: String
  \\"Specifies the page number on which the tab is located.\\\\nMust be 1 for [supplemental documents][supdocs].\\\\n\\\\n[supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents\\"
  pageNumber: String
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  \\"When set to **true**, this custom tab is shared.\\"
  shared: String
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].\\"
  tabId: String
  \\"The label string associated with the tab.\\\\nThe string may be the empty string.\\\\nIf no value is provided, the tab type is used as the value.\\\\n\\\\nMaximum of 500 characters.\\"
  tabLabel: String
  tabOrder: String
  \\"When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.\\"
  templateLocked: String
  \\"When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.\\"
  templateRequired: String
  \\"When set to **true**, the information in the tab is underlined.\\"
  underline: String
  \\"Specifies the value of the tab.\\"
  value: String
  \\"Width of the tab in pixels.\\"
  width: Int
  \\"This indicates the horizontal offset of the object on the page.\\\\nDocuSign uses 72 DPI when determining position.\\\\nRequired. May be zero.\\"
  xPosition: String
  \\"This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.\\"
  yPosition: String
}

type number {
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\\\\n-->\\"
  anchorCaseSensitive: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\\\\n-->\\"
  anchorHorizontalAlignment: String
  \\"When set to **true**, this tab is ignored if anchorString is not found in the document.\\"
  anchorIgnoreIfNotPresent: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\\\\n-->\\"
  anchorMatchWholeWord: String
  \\"Anchor text information for a radio button.\\"
  anchorString: String
  \\"Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.\\"
  anchorUnits: String
  \\"Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorXOffset: String
  \\"Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorYOffset: String
  \\"When set to **true**, the information in the tab is bold.\\"
  bold: String
  \\"When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\\\\n\\\\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\\\\n\\\\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.\\"
  concealValueOnDocument: String
  \\"For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.\\"
  conditionalParentLabel: String
  \\"For conditional fields, this is the value of the parent tab that controls the tab's visibility.\\\\n\\\\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \\\\\\"on\\\\\\" as the value to show that the parent tab is active.\\"
  conditionalParentValue: String
  \\"The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.\\"
  customTabId: String
  \\"When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.\\"
  disableAutoSize: String
  \\"Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.\\"
  documentId: String
  errorDetails: errorDetails
  \\"The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.\\"
  font: String
  \\"The font color used for the information in the tab.\\\\n\\\\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.\\"
  fontColor: String
  \\"The font size used for the information in the tab.\\\\n\\\\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.\\"
  fontSize: String
  \\"Contains the formula\\\\nfor calculating the value of\\\\nthis tab.\\\\n\\\\nUse a tab's \`tabLabel\`,\\\\nenclosed in brackets,\\\\nto refer to it.\\\\n\\\\nFor example,\\\\nyou want to present the total cost\\\\nof two items, tax included.\\\\n\\\\nThe cost of each item is stored\\\\nin number tabs labeled Item1 and Item2.\\\\nThe tax rate is in a number tab\\\\nlabeled TaxRate.\\\\n\\\\nThe formula string for this property\\\\nwould be:\\\\n\`([Item1] + [Item2]) * (1 + [TaxRate])\`\\\\n\\\\nSee [Calculated Fields][calculatedfields]\\\\nin the DocuSign Support Center\\\\nto learn more about formulas.\\\\n\\\\nMaximum Length: 2000 characters\\\\n\\\\n[calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields\\"
  formula: String
  \\"When set to **true**, sets this as a payment tab. Can only be used with Text, Number, Formula, or List tabs. The value of the tab must be a number.\\"
  isPaymentAmount: String
  \\"When set to **true**, the information in the tab is italic.\\"
  italic: String
  \\"When set to **true**, the signer cannot change the data of the custom tab.\\"
  locked: String
  \\"An optional value that describes the maximum length of the property when the property is a string.\\"
  maxLength: Int
  mergeField: mergeField
  \\"Specifies the tool tip text for the tab.\\"
  name: String
  \\"The initial value of the tab when it was sent to the recipient.\\"
  originalValue: String
  \\"Specifies the page number on which the tab is located.\\\\nMust be 1 for [supplemental documents][supdocs].\\\\n\\\\n[supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents\\"
  pageNumber: String
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  \\"When set to **true** and shared is true, information must be entered in this field to complete the envelope.\\"
  requireAll: String
  \\"Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.\\"
  requireInitialOnSharedChange: String
  \\"When set to **true**, the signer is required to fill out this tab\\"
  required: String
  \\"When set to **true**, the sender must populate the tab before an envelope can be sent using the template. \\\\n\\\\nThis value tab can only be changed by modifying (PUT) the template. \\\\n\\\\nTabs with a \`senderRequired\` value of true cannot be deleted from an envelope.\\"
  senderRequired: String
  \\"When set to **true**, this custom tab is shared.\\"
  shared: String
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].\\"
  tabId: String
  \\"The label string associated with the tab.\\\\nThe string may be the empty string.\\\\nIf no value is provided, the tab type is used as the value.\\\\n\\\\nMaximum of 500 characters.\\"
  tabLabel: String
  tabOrder: String
  \\"When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.\\"
  templateLocked: String
  \\"When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.\\"
  templateRequired: String
  \\"When set to **true**, the information in the tab is underlined.\\"
  underline: String
  \\"The message displayed if the custom tab fails input validation (either custom of embedded).\\"
  validationMessage: String
  \\"A regular expressionn used to validate input for the tab.\\"
  validationPattern: String
  \\"Specifies the value of the tab.\\"
  value: String
  \\"Width of the tab in pixels.\\"
  width: Int
  \\"This indicates the horizontal offset of the object on the page.\\\\nDocuSign uses 72 DPI when determining position.\\\\nRequired. May be zero.\\"
  xPosition: String
  \\"This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.\\"
  yPosition: String
}

type radioGroup {
  \\"For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.\\"
  conditionalParentLabel: String
  \\"For conditional fields, this is the value of the parent tab that controls the tab's visibility.\\\\n\\\\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \\\\\\"on\\\\\\" as the value to show that the parent tab is active.\\"
  conditionalParentValue: String
  \\"Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.\\"
  documentId: String
  \\"The name of the group.\\"
  groupName: String
  \\"Specifies the locations and status for radio buttons that are grouped together.\\"
  radios: [radio]
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  \\"When set to **true** and shared is true, information must be entered in this field to complete the envelope.\\"
  requireAll: String
  \\"Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.\\"
  requireInitialOnSharedChange: String
  \\"When set to **true**, this custom tab is shared.\\"
  shared: String
}

type radio {
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\\\\n-->\\"
  anchorCaseSensitive: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\\\\n-->\\"
  anchorHorizontalAlignment: String
  \\"When set to **true**, this tab is ignored if anchorString is not found in the document.\\"
  anchorIgnoreIfNotPresent: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\\\\n-->\\"
  anchorMatchWholeWord: String
  \\"Anchor text information for a radio button.\\"
  anchorString: String
  \\"Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.\\"
  anchorUnits: String
  \\"Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorXOffset: String
  \\"Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorYOffset: String
  errorDetails: errorDetails
  \\"When set to **true**, the signer cannot change the data of the custom tab.\\"
  locked: String
  \\"Specifies the page number on which the tab is located.\\\\nMust be 1 for [supplemental documents][supdocs].\\\\n\\\\n[supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents\\"
  pageNumber: String
  \\"When set to **true**, the signer is required to fill out this tab\\"
  required: String
  \\"When set to **true**, the radio button is selected.\\"
  selected: String
  \\"The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].\\"
  tabId: String
  tabOrder: String
  \\"Specifies the value of the tab.\\"
  value: String
  \\"This indicates the horizontal offset of the object on the page.\\\\nDocuSign uses 72 DPI when determining position.\\\\nRequired. May be zero.\\"
  xPosition: String
  \\"This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.\\"
  yPosition: String
}

type signHere {
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\\\\n-->\\"
  anchorCaseSensitive: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\\\\n-->\\"
  anchorHorizontalAlignment: String
  \\"When set to **true**, this tab is ignored if anchorString is not found in the document.\\"
  anchorIgnoreIfNotPresent: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\\\\n-->\\"
  anchorMatchWholeWord: String
  \\"Anchor text information for a radio button.\\"
  anchorString: String
  \\"Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.\\"
  anchorUnits: String
  \\"Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorXOffset: String
  \\"Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorYOffset: String
  \\"For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.\\"
  conditionalParentLabel: String
  \\"For conditional fields, this is the value of the parent tab that controls the tab's visibility.\\\\n\\\\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \\\\\\"on\\\\\\" as the value to show that the parent tab is active.\\"
  conditionalParentValue: String
  \\"The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.\\"
  customTabId: String
  \\"Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.\\"
  documentId: String
  errorDetails: errorDetails
  mergeField: mergeField
  \\"Specifies the tool tip text for the tab.\\"
  name: String
  optional: String
  \\"Specifies the page number on which the tab is located.\\\\nMust be 1 for [supplemental documents][supdocs].\\\\n\\\\n[supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents\\"
  pageNumber: String
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  scaleValue: Float
  stampType: String
  stampTypeMetadata: propertyMetadata
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].\\"
  tabId: String
  \\"The label string associated with the tab.\\\\nThe string may be the empty string.\\\\nIf no value is provided, the tab type is used as the value.\\\\n\\\\nMaximum of 500 characters.\\"
  tabLabel: String
  tabOrder: String
  \\"When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.\\"
  templateLocked: String
  \\"When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.\\"
  templateRequired: String
  \\"This indicates the horizontal offset of the object on the page.\\\\nDocuSign uses 72 DPI when determining position.\\\\nRequired. May be zero.\\"
  xPosition: String
  \\"This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.\\"
  yPosition: String
}

type signerAttachment {
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\\\\n-->\\"
  anchorCaseSensitive: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\\\\n-->\\"
  anchorHorizontalAlignment: String
  \\"When set to **true**, this tab is ignored if anchorString is not found in the document.\\"
  anchorIgnoreIfNotPresent: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\\\\n-->\\"
  anchorMatchWholeWord: String
  \\"Anchor text information for a radio button.\\"
  anchorString: String
  \\"Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.\\"
  anchorUnits: String
  \\"Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorXOffset: String
  \\"Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorYOffset: String
  \\"For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.\\"
  conditionalParentLabel: String
  \\"For conditional fields, this is the value of the parent tab that controls the tab's visibility.\\\\n\\\\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \\\\\\"on\\\\\\" as the value to show that the parent tab is active.\\"
  conditionalParentValue: String
  \\"The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.\\"
  customTabId: String
  \\"Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.\\"
  documentId: String
  errorDetails: errorDetails
  mergeField: mergeField
  name: String
  optional: String
  \\"Specifies the page number on which the tab is located.\\\\nMust be 1 for [supplemental documents][supdocs].\\\\n\\\\n[supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents\\"
  pageNumber: String
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  scaleValue: Float
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].\\"
  tabId: String
  \\"The label string associated with the tab.\\\\nThe string may be the empty string.\\\\nIf no value is provided, the tab type is used as the value.\\\\n\\\\nMaximum of 500 characters.\\"
  tabLabel: String
  tabOrder: String
  \\"When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.\\"
  templateLocked: String
  \\"When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.\\"
  templateRequired: String
  \\"This indicates the horizontal offset of the object on the page.\\\\nDocuSign uses 72 DPI when determining position.\\\\nRequired. May be zero.\\"
  xPosition: String
  \\"This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.\\"
  yPosition: String
}

type ssn {
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\\\\n-->\\"
  anchorCaseSensitive: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\\\\n-->\\"
  anchorHorizontalAlignment: String
  \\"When set to **true**, this tab is ignored if anchorString is not found in the document.\\"
  anchorIgnoreIfNotPresent: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\\\\n-->\\"
  anchorMatchWholeWord: String
  \\"Anchor text information for a radio button.\\"
  anchorString: String
  \\"Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.\\"
  anchorUnits: String
  \\"Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorXOffset: String
  \\"Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorYOffset: String
  \\"When set to **true**, the information in the tab is bold.\\"
  bold: String
  \\"When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\\\\n\\\\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\\\\n\\\\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.\\"
  concealValueOnDocument: String
  \\"For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.\\"
  conditionalParentLabel: String
  \\"For conditional fields, this is the value of the parent tab that controls the tab's visibility.\\\\n\\\\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \\\\\\"on\\\\\\" as the value to show that the parent tab is active.\\"
  conditionalParentValue: String
  \\"The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.\\"
  customTabId: String
  \\"When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.\\"
  disableAutoSize: String
  \\"Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.\\"
  documentId: String
  errorDetails: errorDetails
  \\"The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.\\"
  font: String
  \\"The font color used for the information in the tab.\\\\n\\\\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.\\"
  fontColor: String
  \\"The font size used for the information in the tab.\\\\n\\\\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.\\"
  fontSize: String
  \\"When set to **true**, the information in the tab is italic.\\"
  italic: String
  \\"When set to **true**, the signer cannot change the data of the custom tab.\\"
  locked: String
  \\"An optional value that describes the maximum length of the property when the property is a string.\\"
  maxLength: Int
  mergeField: mergeField
  \\"Specifies the tool tip text for the tab.\\"
  name: String
  \\"The initial value of the tab when it was sent to the recipient.\\"
  originalValue: String
  \\"Specifies the page number on which the tab is located.\\\\nMust be 1 for [supplemental documents][supdocs].\\\\n\\\\n[supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents\\"
  pageNumber: String
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  \\"When set to **true** and shared is true, information must be entered in this field to complete the envelope.\\"
  requireAll: String
  \\"Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.\\"
  requireInitialOnSharedChange: String
  \\"When set to **true**, the signer is required to fill out this tab\\"
  required: String
  \\"When set to **true**, the sender must populate the tab before an envelope can be sent using the template. \\\\n\\\\nThis value tab can only be changed by modifying (PUT) the template. \\\\n\\\\nTabs with a \`senderRequired\` value of true cannot be deleted from an envelope.\\"
  senderRequired: String
  \\"When set to **true**, this custom tab is shared.\\"
  shared: String
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].\\"
  tabId: String
  \\"The label string associated with the tab.\\\\nThe string may be the empty string.\\\\nIf no value is provided, the tab type is used as the value.\\\\n\\\\nMaximum of 500 characters.\\"
  tabLabel: String
  tabOrder: String
  \\"When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.\\"
  templateLocked: String
  \\"When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.\\"
  templateRequired: String
  \\"When set to **true**, the information in the tab is underlined.\\"
  underline: String
  \\"The message displayed if the custom tab fails input validation (either custom of embedded).\\"
  validationMessage: String
  \\"A regular expressionn used to validate input for the tab.\\"
  validationPattern: String
  \\"Specifies the value of the tab.\\"
  value: String
  \\"Width of the tab in pixels.\\"
  width: Int
  \\"This indicates the horizontal offset of the object on the page.\\\\nDocuSign uses 72 DPI when determining position.\\\\nRequired. May be zero.\\"
  xPosition: String
  \\"This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.\\"
  yPosition: String
}

type text {
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\\\\n-->\\"
  anchorCaseSensitive: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\\\\n-->\\"
  anchorHorizontalAlignment: String
  \\"When set to **true**, this tab is ignored if anchorString is not found in the document.\\"
  anchorIgnoreIfNotPresent: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\\\\n-->\\"
  anchorMatchWholeWord: String
  \\"Anchor text information for a radio button.\\"
  anchorString: String
  \\"Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.\\"
  anchorUnits: String
  \\"Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorXOffset: String
  \\"Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorYOffset: String
  \\"When set to **true**, the information in the tab is bold.\\"
  bold: String
  \\"When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\\\\n\\\\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\\\\n\\\\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.\\"
  concealValueOnDocument: String
  \\"For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.\\"
  conditionalParentLabel: String
  \\"For conditional fields, this is the value of the parent tab that controls the tab's visibility.\\\\n\\\\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \\\\\\"on\\\\\\" as the value to show that the parent tab is active.\\"
  conditionalParentValue: String
  \\"The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.\\"
  customTabId: String
  \\"When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.\\"
  disableAutoSize: String
  \\"Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.\\"
  documentId: String
  errorDetails: errorDetails
  \\"The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.\\"
  font: String
  \\"The font color used for the information in the tab.\\\\n\\\\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.\\"
  fontColor: String
  \\"The font size used for the information in the tab.\\\\n\\\\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.\\"
  fontSize: String
  \\"Contains the formula\\\\nfor calculating the value of\\\\nthis tab.\\\\n\\\\nUse a tab's \`tabLabel\`,\\\\nenclosed in brackets,\\\\nto refer to it.\\\\n\\\\nFor example,\\\\nyou want to present the total cost\\\\nof two items, tax included.\\\\n\\\\nThe cost of each item is stored\\\\nin number tabs labeled Item1 and Item2.\\\\nThe tax rate is in a number tab\\\\nlabeled TaxRate.\\\\n\\\\nThe formula string for this property\\\\nwould be:\\\\n\`([Item1] + [Item2]) * (1 + [TaxRate])\`\\\\n\\\\nSee [Calculated Fields][calculatedfields]\\\\nin the DocuSign Support Center\\\\nto learn more about formulas.\\\\n\\\\nMaximum Length: 2000 characters\\\\n\\\\n[calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields\\"
  formula: String
  \\"Height of the tab in pixels.\\"
  height: Int
  \\"When set to **true**, sets this as a payment tab. Can only be used with Text, Number, Formula, or List tabs. The value of the tab must be a number.\\"
  isPaymentAmount: String
  \\"When set to **true**, the information in the tab is italic.\\"
  italic: String
  \\"When set to **true**, the signer cannot change the data of the custom tab.\\"
  locked: String
  \\"An optional value that describes the maximum length of the property when the property is a string.\\"
  maxLength: Int
  mergeField: mergeField
  \\"Specifies the tool tip text for the tab.\\"
  name: String
  \\"The initial value of the tab when it was sent to the recipient.\\"
  originalValue: String
  \\"Specifies the page number on which the tab is located.\\\\nMust be 1 for [supplemental documents][supdocs].\\\\n\\\\n[supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents\\"
  pageNumber: String
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  \\"When set to **true** and shared is true, information must be entered in this field to complete the envelope.\\"
  requireAll: String
  \\"Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.\\"
  requireInitialOnSharedChange: String
  \\"When set to **true**, the signer is required to fill out this tab\\"
  required: String
  \\"When set to **true**, the sender must populate the tab before an envelope can be sent using the template. \\\\n\\\\nThis value tab can only be changed by modifying (PUT) the template. \\\\n\\\\nTabs with a \`senderRequired\` value of true cannot be deleted from an envelope.\\"
  senderRequired: String
  \\"When set to **true**, this custom tab is shared.\\"
  shared: String
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].\\"
  tabId: String
  \\"The label string associated with the tab.\\\\nThe string may be the empty string.\\\\nIf no value is provided, the tab type is used as the value.\\\\n\\\\nMaximum of 500 characters.\\"
  tabLabel: String
  tabOrder: String
  \\"When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.\\"
  templateLocked: String
  \\"When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.\\"
  templateRequired: String
  \\"When set to **true**, the information in the tab is underlined.\\"
  underline: String
  \\"The message displayed if the custom tab fails input validation (either custom of embedded).\\"
  validationMessage: String
  \\"A regular expressionn used to validate input for the tab.\\"
  validationPattern: String
  \\"Specifies the value of the tab.\\"
  value: String
  \\"Width of the tab in pixels.\\"
  width: Int
  \\"This indicates the horizontal offset of the object on the page.\\\\nDocuSign uses 72 DPI when determining position.\\\\nRequired. May be zero.\\"
  xPosition: String
  \\"This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.\\"
  yPosition: String
}

type title {
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\\\\n-->\\"
  anchorCaseSensitive: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\\\\n-->\\"
  anchorHorizontalAlignment: String
  \\"When set to **true**, this tab is ignored if anchorString is not found in the document.\\"
  anchorIgnoreIfNotPresent: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\\\\n-->\\"
  anchorMatchWholeWord: String
  \\"Anchor text information for a radio button.\\"
  anchorString: String
  \\"Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.\\"
  anchorUnits: String
  \\"Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorXOffset: String
  \\"Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorYOffset: String
  \\"When set to **true**, the information in the tab is bold.\\"
  bold: String
  \\"When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\\\\n\\\\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\\\\n\\\\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.\\"
  concealValueOnDocument: String
  \\"For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.\\"
  conditionalParentLabel: String
  \\"For conditional fields, this is the value of the parent tab that controls the tab's visibility.\\\\n\\\\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \\\\\\"on\\\\\\" as the value to show that the parent tab is active.\\"
  conditionalParentValue: String
  \\"The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.\\"
  customTabId: String
  \\"When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.\\"
  disableAutoSize: String
  \\"Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.\\"
  documentId: String
  errorDetails: errorDetails
  \\"The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.\\"
  font: String
  \\"The font color used for the information in the tab.\\\\n\\\\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.\\"
  fontColor: String
  \\"The font size used for the information in the tab.\\\\n\\\\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.\\"
  fontSize: String
  \\"When set to **true**, the information in the tab is italic.\\"
  italic: String
  \\"When set to **true**, the signer cannot change the data of the custom tab.\\"
  locked: String
  \\"An optional value that describes the maximum length of the property when the property is a string.\\"
  maxLength: Int
  mergeField: mergeField
  name: String
  \\"The initial value of the tab when it was sent to the recipient.\\"
  originalValue: String
  \\"Specifies the page number on which the tab is located.\\\\nMust be 1 for [supplemental documents][supdocs].\\\\n\\\\n[supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents\\"
  pageNumber: String
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  \\"When set to **true**, the signer is required to fill out this tab\\"
  required: String
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].\\"
  tabId: String
  \\"The label string associated with the tab.\\\\nThe string may be the empty string.\\\\nIf no value is provided, the tab type is used as the value.\\\\n\\\\nMaximum of 500 characters.\\"
  tabLabel: String
  tabOrder: String
  \\"When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.\\"
  templateLocked: String
  \\"When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.\\"
  templateRequired: String
  \\"When set to **true**, the information in the tab is underlined.\\"
  underline: String
  \\"Specifies the value of the tab.\\"
  value: String
  \\"Width of the tab in pixels.\\"
  width: Int
  \\"This indicates the horizontal offset of the object on the page.\\\\nDocuSign uses 72 DPI when determining position.\\\\nRequired. May be zero.\\"
  xPosition: String
  \\"This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.\\"
  yPosition: String
}

type view {
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\\\\n-->\\"
  anchorCaseSensitive: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\\\\n-->\\"
  anchorHorizontalAlignment: String
  \\"When set to **true**, this tab is ignored if anchorString is not found in the document.\\"
  anchorIgnoreIfNotPresent: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\\\\n-->\\"
  anchorMatchWholeWord: String
  \\"Anchor text information for a radio button.\\"
  anchorString: String
  \\"Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.\\"
  anchorUnits: String
  \\"Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorXOffset: String
  \\"Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorYOffset: String
  \\"When set to **true**, the information in the tab is bold.\\"
  bold: String
  buttonText: String
  \\"For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.\\"
  conditionalParentLabel: String
  \\"For conditional fields, this is the value of the parent tab that controls the tab's visibility.\\\\n\\\\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \\\\\\"on\\\\\\" as the value to show that the parent tab is active.\\"
  conditionalParentValue: String
  \\"The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.\\"
  customTabId: String
  \\"Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.\\"
  documentId: String
  errorDetails: errorDetails
  \\"The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.\\"
  font: String
  \\"The font color used for the information in the tab.\\\\n\\\\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.\\"
  fontColor: String
  \\"The font size used for the information in the tab.\\\\n\\\\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.\\"
  fontSize: String
  \\"Height of the tab in pixels.\\"
  height: Int
  \\"When set to **true**, the information in the tab is italic.\\"
  italic: String
  mergeField: mergeField
  \\"Specifies the page number on which the tab is located.\\\\nMust be 1 for [supplemental documents][supdocs].\\\\n\\\\n[supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents\\"
  pageNumber: String
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  \\"When set to **true**, the signer is required to fill out this tab\\"
  required: String
  requiredRead: String
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].\\"
  tabId: String
  \\"The label string associated with the tab.\\\\nThe string may be the empty string.\\\\nIf no value is provided, the tab type is used as the value.\\\\n\\\\nMaximum of 500 characters.\\"
  tabLabel: String
  tabOrder: String
  \\"When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.\\"
  templateLocked: String
  \\"When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.\\"
  templateRequired: String
  \\"When set to **true**, the information in the tab is underlined.\\"
  underline: String
  \\"Width of the tab in pixels.\\"
  width: Int
  \\"This indicates the horizontal offset of the object on the page.\\\\nDocuSign uses 72 DPI when determining position.\\\\nRequired. May be zero.\\"
  xPosition: String
  \\"This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.\\"
  yPosition: String
}

type zip {
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\\\\n-->\\"
  anchorCaseSensitive: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\\\\n-->\\"
  anchorHorizontalAlignment: String
  \\"When set to **true**, this tab is ignored if anchorString is not found in the document.\\"
  anchorIgnoreIfNotPresent: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\\\\n-->\\"
  anchorMatchWholeWord: String
  \\"Anchor text information for a radio button.\\"
  anchorString: String
  \\"Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.\\"
  anchorUnits: String
  \\"Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorXOffset: String
  \\"Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorYOffset: String
  \\"When set to **true**, the information in the tab is bold.\\"
  bold: String
  \\"When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\\\\n\\\\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\\\\n\\\\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.\\"
  concealValueOnDocument: String
  \\"For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.\\"
  conditionalParentLabel: String
  \\"For conditional fields, this is the value of the parent tab that controls the tab's visibility.\\\\n\\\\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \\\\\\"on\\\\\\" as the value to show that the parent tab is active.\\"
  conditionalParentValue: String
  \\"The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.\\"
  customTabId: String
  \\"When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.\\"
  disableAutoSize: String
  \\"Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.\\"
  documentId: String
  errorDetails: errorDetails
  \\"The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.\\"
  font: String
  \\"The font color used for the information in the tab.\\\\n\\\\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.\\"
  fontColor: String
  \\"The font size used for the information in the tab.\\\\n\\\\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.\\"
  fontSize: String
  \\"When set to **true**, the information in the tab is italic.\\"
  italic: String
  \\"When set to **true**, the signer cannot change the data of the custom tab.\\"
  locked: String
  \\"An optional value that describes the maximum length of the property when the property is a string.\\"
  maxLength: Int
  mergeField: mergeField
  name: String
  \\"The initial value of the tab when it was sent to the recipient.\\"
  originalValue: String
  \\"Specifies the page number on which the tab is located.\\\\nMust be 1 for [supplemental documents][supdocs].\\\\n\\\\n[supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents\\"
  pageNumber: String
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  \\"When set to **true** and shared is true, information must be entered in this field to complete the envelope.\\"
  requireAll: String
  \\"Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.\\"
  requireInitialOnSharedChange: String
  \\"When set to **true**, the signer is required to fill out this tab\\"
  required: String
  \\"When set to **true**, the sender must populate the tab before an envelope can be sent using the template. \\\\n\\\\nThis value tab can only be changed by modifying (PUT) the template. \\\\n\\\\nTabs with a \`senderRequired\` value of true cannot be deleted from an envelope.\\"
  senderRequired: String
  \\"When set to **true**, this custom tab is shared.\\"
  shared: String
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].\\"
  tabId: String
  \\"The label string associated with the tab.\\\\nThe string may be the empty string.\\\\nIf no value is provided, the tab type is used as the value.\\\\n\\\\nMaximum of 500 characters.\\"
  tabLabel: String
  tabOrder: String
  \\"When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.\\"
  templateLocked: String
  \\"When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.\\"
  templateRequired: String
  \\"When set to **true**, the information in the tab is underlined.\\"
  underline: String
  useDash4: String
  \\"The message displayed if the custom tab fails input validation (either custom of embedded).\\"
  validationMessage: String
  \\"A regular expressionn used to validate input for the tab.\\"
  validationPattern: String
  \\"Specifies the value of the tab.\\"
  value: String
  \\"Width of the tab in pixels.\\"
  width: Int
  \\"This indicates the horizontal offset of the object on the page.\\\\nDocuSign uses 72 DPI when determining position.\\\\nRequired. May be zero.\\"
  xPosition: String
  \\"This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.\\"
  yPosition: String
}

type signer {
  \\"If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \\\\n\\\\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\\\\n\\\\nIf blank, but the signer \`accessCode\` property is set in the envelope, then that value is used.\\\\n\\\\nIf blank and the signer \`accessCode\` property is not set, then the access code is not required.\\"
  accessCode: String
  \\"This Optional attribute indicates that the access code will be added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient.\\"
  addAccessCodeToEmail: String
  \\"Specifies whether auto navigation is set for the recipient.\\"
  autoNavigation: String
  \\"Contains a URI for an endpoint that allows you to easily retrieve bulk recipient information.\\"
  bulkRecipientsUri: String
  \\"When set to **true**, specifies that the signer can perform the signing ceremony offline.\\"
  canSignOffline: String
  \\"Specifies whether the recipient is embedded or remote. \\\\n\\\\nIf the \`clientUserId\` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.\\\\n\\\\nNote: if the \`clientUserId\` property is set and either \`SignerMustHaveAccount\` or \`SignerMustLoginToSign\` property of the account settings is set to  **true**, an error is generated on sending. \\\\n\\\\nMaximum length: 100 characters.\\"
  clientUserId: String
  creationReason: String
  \\"An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.\\"
  customFields: [String]
  \\"The date and time the recipient declined the document.\\"
  declinedDateTime: String
  \\"The reason the recipient declined the document.\\"
  declinedReason: String
  \\"When set to **true**, this recipient is the default recipient and any tabs generated by the transformPdfFields option are mapped to this recipient.\\"
  defaultRecipient: String
  \\"Reserved: For DocuSign use only.\\"
  deliveredDateTime: String
  \\"Reserved: For DocuSign use only.\\"
  deliveryMethod: String
  documentVisibility: [documentVisibility]
  \\"Email id of the recipient. Notification of the document to sign is sent to this email id. \\\\n\\\\nMaximum length: 100 characters.\\"
  email: String
  emailNotification: recipientEmailNotification
  emailRecipientPostSigningURL: String
  \\"Specifies a sender provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \\\\n\\\\nIf set to \`SIGN_AT_DOCUSIGN\`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation that is launched by any partner.\\\\n\\\\nIt is important to remember that in a typical embedded workflow the authentication of an embedded recipient is the responsibility of the sending application, DocuSign expects that senders will follow their own process for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process in initiated. However, when the sending application sets \`EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN\`, the recipient goes directly to the embedded signing or viewing process bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\\\\n\\\\nIf the \`clientUserId\` property is NOT set, and the \`embeddedRecipientStartURL\` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: envelopeId, recipientId, recipientName, recipientEmail, and customFields. The \`customFields\` property must be set fort the recipient or envelope. The merge fields are enclosed in double brackets. \\\\n\\\\n*Example*: \\\\n\\\\n\`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]\`\\"
  embeddedRecipientStartURL: String
  errorDetails: errorDetails
  \\"Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the \`enforceSignerVisibility\` property must be set to **true** for the envelope to use this.\\\\n\\\\nWhen enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.\\"
  excludedDocuments: [String]
  \\"Reserved:\\"
  faxNumber: String
  \\"Specifies authentication check by name. The names used here must be the same as the authentication type names used by the account (these name can also be found in the web console sending interface in the Identify list for a recipient,) This overrides any default authentication setting.\\\\n\\\\n*Example*: Your account has ID Check and SMS Authentication available and in the web console Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check in an envelope, the idCheckConfigurationName should be 'ID Check '. If you wanted to use SMS, it would be 'SMS Auth $' and you would need to add you would need to add phone number information to the \`smsAuthentication\` node.\\"
  idCheckConfigurationName: String
  idCheckInformationInput: idCheckInformationInput
  \\"When set to **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account.\\"
  inheritEmailNotificationConfiguration: String
  \\"When set to **true**, this signer is a bulk recipient and the recipient information is contained in a bulk recipient file. \\\\n\\\\nNote that when this is true the email and name for the recipient becomes bulk@recipient.com and \\\\\\"Bulk Recipient\\\\\\". These fields can not be changed for the bulk recipient.\\"
  isBulkRecipient: String
  name: String
  \\"A note sent to the recipient in the signing email.\\\\nThis note is unique to this recipient.\\\\nIn the user interface,\\\\nit appears near the upper left corner\\\\nof the document\\\\non the signing screen.\\\\n\\\\nMaximum Length: 1000 characters.\\"
  note: String
  phoneAuthentication: recipientPhoneAuthentication
  \\"Reserved:\\"
  recipientAttachments: [recipientAttachment]
  recipientAuthenticationStatus: authenticationStatus
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  recipientIdGuid: String
  \\"The default signature provider is the DocuSign Electronic signature system. This parameter is used to specify one or more Standards Based Signature (digital signature) providers for the signer to use. [More information](../../../../guide/appendix/standards_based_signatures.html)\\"
  recipientSignatureProviders: [recipientSignatureProvider]
  recipientSuppliesTabs: String
  \\"When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity.\\"
  requireIdLookup: String
  \\"When set to **true**, the signer must print, sign, and upload or fax the signed documents to DocuSign.\\"
  requireSignOnPaper: String
  \\"By default, DocuSign signers create electronic signatures. This field can be used to require the signer to use a SAFE-BioPharma digital certificate for signing.\\\\n\\\\nThis parameter should only be used to select a SAFE-BioPharma certificate. New integrations should use the \`recipientSignatureProviders\` parameter for other types of digital certificates. \\\\n\\\\nSet this parameter to \`safe\` to use a SAFE-BioPharma certificate.\\\\n\\\\nThe signer must be enrolled in the SAFE program to sign with a SAFE certificate.\\"
  requireSignerCertificate: String
  \\"Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.\\"
  roleName: String
  \\"Specifies the routing order of the recipient in the envelope.\\"
  routingOrder: String
  samlAuthentication: recipientSAMLAuthentication
  \\"The date and time the envelope was sent.\\"
  sentDateTime: String
  \\"When set to **true**, specifies that the signer must sign in all locations.\\"
  signInEachLocation: String
  signatureInfo: recipientSignatureInformation
  \\"Reserved: For DocuSign use only.\\"
  signedDateTime: String
  \\"When set to **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab ( instead of adopting a signature/initial style or only drawing a signature/initial once).\\"
  signingGroupId: String
  \\"The display name for the signing group. \\\\n\\\\nMaximum Length: 100 characters.\\"
  signingGroupName: String
  \\"A complex type that contains information about users in the signing group.\\"
  signingGroupUsers: [userInfo]
  smsAuthentication: recipientSMSAuthentication
  \\"Lists the social ID type that can be used for recipient authentication.\\"
  socialAuthentications: [socialAuthentication]
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  tabs: EnvelopeRecipientTabs
  \\"When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.\\"
  templateLocked: String
  \\"When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.\\"
  templateRequired: String
  totalTabCount: String
  \\"The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.\\"
  userId: String
}

input Envelopes_GetEnvelopes_request_Input {
  \\"Specifies the Authoritative Copy Status for the envelopes. The possible values are: Unknown, Original, Transferred, AuthoritativeCopy, AuthoritativeCopyExportPending, AuthoritativeCopyExported, DepositPending, Deposited, DepositedEO, or DepositFailed.\\"
  ac_status: String
  \\"Reserved for DocuSign.\\"
  block: String
  \\"Optional. Number of items to return.\\"
  count: String
  \\"Optional. Specifies a envelope custom field name and value searched for in the envelopes. Format: \`custom_envelope_field_name=desired_value\`\\\\n\\\\nThe value portion of the query can use partial strings by adding '%' (percent sign) around the custom field query value. \\\\n\\\\nExample 1: If you have an envelope custom field named \\\\\\"Region\\\\\\" and you want to search for all envelopes where the value is \\\\\\"West\\\\\\" you would use set this parameter to \`Region=West\`. \\\\n\\\\nExample 2: To search for envelopes where the \`ApplicationID\` custom field has the value or partial value of \\\\\\"DocuSign\\\\\\" in the field, set this parameter to \`ApplicationId=%DocuSign%\` This would match envelopes where the custom field's value is \\\\\\"DocuSign for Salesforce\\\\\\" or \\\\\\"DocuSign envelope\\\\\\".\\"
  custom_field: String
  \\"Limit results to envelopes\\\\nsent by the account user\\\\nwith this email address.\\\\n\\\\n\`user_name\` must be given as well,\\\\nand both \`email\` and \`user_name\`\\\\nmust refer to an existing account user.\\"
  email: String
  \\"Comma separated list of \`envelopeId\` values.\\"
  envelope_ids: String
  \\"Reserved for DocuSign.\\"
  exclude: String
  \\"Reserved for DocuSign.\\"
  folder_ids: String
  \\"Reserved for DocuSign.\\"
  folder_types: String
  \\"Specifies the date and time\\\\nto start looking for status changes.\\\\nThis parameter is required\\\\nunless \`envelopeIds\` or \`transactionIds\`\\\\nare set.\\\\n\\\\n\\\\nAlthough you can use any date format\\\\nsupported by the .NET system library's\\\\n[\`DateTime.Parse()\`][msoft] function,\\\\nDocuSign recommends\\\\nusing [ISO 8601][] format dates\\\\nwith an explicit time zone offset\\\\nIf you do not provide\\\\na time zone offset,\\\\nthe method uses the server's time zone.\\\\n\\\\nFor example, the following dates and times refer to the same instant:\\\\n\\\\n* \`2017-05-02T01:44Z\`\\\\n* \`2017-05-01T21:44-04:00\`\\\\n* \`2017-05-01T18:44-07:00\`\\\\n\\\\n\\\\n[msoft]: https://msdn.microsoft.com/en-us/library/system.datetime.parse(v=vs.110).aspx#StringToParse\\\\n[ISO 8601]: https://en.wikipedia.org/wiki/ISO_8601\\"
  from_date: String
  \\"The status value checked for in the \`from_date\` to \`to_date\` time period. \\\\n\\\\nPossible values are: Voided, Changed, Created, Deleted, Sent, Delivered, Signed, Completed, Declined, TimedOut and Processing.\\\\n\\\\nIf \`Changed\` is specified, then envelopes that changed status during the period will be returned. \\\\n\\\\nFor example, if \`Created\` is specified, then envelopes created during the period are found. \\\\n\\\\nThe default is \`Changed\`.\\"
  from_to_status: String
  \\"Reserved for DocuSign.\\"
  include: String
  include_purge_information: String
  \\"Reserved for DocuSign.\\"
  intersecting_folder_ids: String
  \\"Reserved for DocuSign.\\"
  order: String
  \\"Reserved for DocuSign.\\"
  order_by: String
  \\"Reserved for DocuSign.\\"
  powerformids: String
  \\"Reserved for DocuSign.\\"
  search_text: String
  \\"Reserved for DocuSign.\\"
  start_position: String
  \\"A comma-separated list of current envelope statuses to included in the response. Possible values are:\\\\n\\\\n* completed\\\\n* created\\\\n* declined\\\\n* deleted\\\\n* delivered\\\\n* processing\\\\n* sent\\\\n* signed\\\\n* timedout\\\\n* voided\\\\n\\\\nThe \`any\` value is equivalent to any status.\\"
  status: String
  \\"Specifies the date and time\\\\nto stop looking for status changes.\\\\nThe default is the current date and time.\\\\n\\\\nAlthough you can use any date format\\\\nsupported by the .NET system library's\\\\n[\`DateTime.Parse()\`][msoft] function,\\\\nDocuSign recommends\\\\nusing [ISO 8601][] format dates\\\\nwith an explicit time zone offset\\\\nIf you do not provide\\\\na time zone offset,\\\\nthe method uses the server's time zone.\\\\n\\\\nFor example, the following dates and times refer to the same instant:\\\\n\\\\n* \`2017-05-02T01:44Z\`\\\\n* \`2017-05-01T21:44-04:00\`\\\\n* \`2017-05-01T18:44-07:00\`\\\\n\\\\n\\\\n[msoft]: https://msdn.microsoft.com/en-us/library/system.datetime.parse(v=vs.110).aspx#StringToParse\\\\n[ISO 8601]: https://en.wikipedia.org/wiki/ISO_8601\\"
  to_date: String
  \\"A comma-separated list of envelope transaction IDs.\\\\nTransaction IDs are only valid for seven days.\\"
  transaction_ids: String
  \\"Reserved for DocuSign.\\"
  user_filter: String
  \\"Reserved for DocuSign.\\"
  user_id: String
  \\"Limit results to envelopes\\\\nsent by the account user\\\\nwith this user name.\\\\n\\\\n\`email\` must be given as well,\\\\nand both \`email\` and \`user_name\`\\\\nmust refer to an existing account user.\\"
  user_name: String
}

input Envelopes_GetEnvelope_request_Input {
  \\"When true, envelope information can be added or modified.\\"
  advanced_update: String
  \\"Reserved for DocuSign.\\"
  include: String
}

type envelopeAttachmentsResult {
  attachments: [EnvelopeAttachments]
}

type EnvelopeAttachments {
  accessControl: String
  attachmentId: String
  attachmentType: String
  errorDetails: errorDetails
  label: String
  name: String
}

type envelopeAuditEventResponse {
  \\"Reserved: TBD\\"
  auditEvents: [envelopeAuditEvent]
}

type envelopeAuditEvent {
  eventFields: [nameValue]
}

\\"Envelope documents\\"
type EnvelopeDocuments {
  envelopeDocuments: [envelopeDocument]
  \\"The envelope ID of the envelope status that failed to post.\\"
  envelopeId: String
}

type envelopeDocument {
  attachmentTabId: String
  availableDocumentTypes: [signatureType]
  containsPdfFormFields: String
  \\"This string sets the display and behavior properties of\\\\nthe document during signing. The possible values are:\\\\n\\\\n* \`modal\`<br>\\\\n  The document is shown as a supplement action strip\\\\n  and can be viewed, downloaded, or printed in a modal window.\\\\n  This is the recommended value for supplemental documents. \\\\n\\\\n* \`download\`<br>\\\\n  The document is shown as a supplement action strip\\\\n  and can be viewed, downloaded, or printed in a new browser window. \\\\n\\\\n* \`inline\`<br>\\\\n  The document is shown in the normal signing window.\\\\n  This value is not used with supplemental documents,\\\\n  but is the default value for all other documents.\\"
  display: String
  documentFields: [nameValue]
  documentGroup: String
  \\"Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.\\"
  documentId: String
  errorDetails: errorDetails
  \\"When set to **true**,\\\\nthe document is included in the combined document download. \\\\nThe default value is **true**.\\"
  includeInDownload: String
  name: String
  \\"An optional value that sets the direction order used to sort the item list. \\\\n\\\\nValid values are: \\\\n\\\\n* asc = ascending sort order\\\\n* desc = descending sort order\\"
  order: String
  pages: String
  \\"Sets how the signer interacts with the supplemental document.\\\\nThe possible values are: \\\\n\\\\n*\\\\t\`no_interaction\`<br>\\\\n  No recipient action is required. \\\\n\\\\n*\\\\t\`view\`<br>\\\\n  The recipient is required to view the document. \\\\n\\\\n*\\\\t\`accept\`<br>\\\\n  The recipient is required to accept the document by selecting accept during signing, but is not required to view the document. \\\\n\\\\n*\\\\t\`view_accept\`<br>\\\\n  The recipient is required to view and accept the document.\\"
  signerMustAcknowledge: String
  \\"Type of the user. Valid values: type_owner, type_participant.\\"
  type: String
  uri: String
}

type signatureType {
  isDefault: String
  \\"Type of the user. Valid values: type_owner, type_participant.\\"
  type: String
}

input Documents_GetDocuments_request_Input {
  \\"Reserved for DocuSign.\\"
  include_metadata: String
}

scalar File

input Documents_GetDocument_request_Input {
  \\"When set to **false**, the envelope signing certificate is removed from the download.\\"
  certificate: String
  encoding: String
  \\"When set to **true**, the PDF bytes returned in the response are encrypted for all the key managers configured on your DocuSign account. The documents can be decrypted with the KeyManager Decrypt Document API.\\"
  encrypt: String
  \\"Specifies the language for the Certificate of Completion in the response. The supported languages, with the language value shown in parenthesis, are: Chinese Simplified (zh_CN), , Chinese Traditional (zh_TW), Dutch (nl), English US (en), French (fr), German (de), Italian (it), Japanese (ja), Korean (ko), Portuguese (pt), Portuguese (Brazil) (pt_BR), Russian (ru), Spanish (es).\\"
  language: String
  recipient_id: String
  \\"When set to **true**, any changed fields for the returned PDF are highlighted in yellow and optional signatures or initials outlined in red.\\"
  show_changes: String
  \\"When set to **true**, the account has the watermark feature enabled, and the envelope is not complete, the watermark for the account is added to the PDF documents. This option can remove the watermark.\\"
  watermark: String
}

\\"Envelope document fields\\"
type EnvelopeDocumentFields {
  \\"The array of name/value custom data strings to be added to a document. Custom document field information is returned in the status, but otherwise is not used by DocuSign. The array contains the elements: \\\\n\\\\n* name - A string that can be a maximum of 50 characters. \\\\n* value - A string that can be a maximum of 200 characters.\\\\n\\\\n*IMPORTANT*: If you are using xml, the name/value pair is contained in a nameValue element.\\"
  documentFields: [nameValue]
}

type pageImages {
  \\"The last position in the result set.\\"
  endPosition: String
  \\"The URI for the next chunk of records based on the search request. It is \`null\` if this is the last set of results for the search.\\"
  nextUri: String
  pages: [page]
  \\"The URI for the prior chunk of records based on the search request. It is \`null\` if this is the first set of results for the search.\\"
  previousUri: String
  \\"The number of results returned in this response.\\"
  resultSetSize: String
  \\"Starting position of the current result set.\\"
  startPosition: String
  \\"The total number of items in the search's result set. It will always be greater than or equal to the value of the \`resultSetSize\` field.\\"
  totalSetSize: String
}

\\"Description of a page of a document.\\"
type page {
  \\"The number of dots per inch used for the page image.\\"
  dpi: String
  errorDetails: errorDetails
  \\"Height of the tab in pixels.\\"
  height: String
  imageBytes: String
  mimeType: String
  pageId: String
  sequence: String
  \\"Width of the tab in pixels.\\"
  width: String
}

input Pages_GetPageImages_request_Input {
  \\"The maximum number of results to be returned by this request.\\"
  count: String
  \\"Number of dots per inch for the resulting image. The default if not used is 94. The range is 1-310.\\"
  dpi: String
  \\"Sets the maximum height (in pixels) of the returned image.\\"
  max_height: String
  \\"Sets the maximum width (in pixels) of the returned image.\\"
  max_width: String
  nocache: String
  show_changes: String
  \\"The position within the total result set from which to start returning values. The value **thumbnail** may be used to return the page image.\\"
  start_position: String
}

input Pages_GetPageImage_request_Input {
  \\"Sets the dpi for the image.\\"
  dpi: String
  \\"Sets the maximum height for the page image in pixels. The dpi is recalculated based on this setting.\\"
  max_height: String
  \\"Sets the maximum width for the page image in pixels. The dpi is recalculated based on this setting.\\"
  max_width: String
  show_changes: String
}

input Tabs_GetDocumentTabs_request_Input {
  page_numbers: String
}

\\"Envelope templates\\"
type EnvelopeTemplates {
  templates: [templateSummary]
}

type templateSummary {
  \\"Reserved: TBD\\"
  applied: String
  \\"Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.\\"
  documentId: String
  documentName: String
  name: String
  \\"The unique identifier of the template. If this is not provided, DocuSign will generate a value.\\"
  templateId: String
  templateMatch: templateMatch
  uri: String
}

type templateMatch {
  documentEndPage: String
  documentStartPage: String
  matchPercentage: String
}

input Templates_GetDocumentTemplates_request_Input {
  \\"A comma-separated list\\\\nthat limits the results.\\\\nValid values:\\\\n\\\\n* applied\\\\n* matched\\"
  include: String
}

type EnvelopeFormData {
  \\"Specifies the subject of the email that is sent to all recipients.\\\\n\\\\nSee [ML:Template Email Subject Merge Fields] for information about adding merge field information to the email subject.\\"
  emailSubject: String
  \\"The envelope ID of the envelope status that failed to post.\\"
  envelopeId: String
  formData: [nameValue]
  recipientFormData: [recipientFormData]
  \\"The date and time the envelope was sent.\\"
  sentDateTime: String
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
}

type recipientFormData {
  declinedTime: String
  deliveredTime: String
  email: String
  formData: [nameValue]
  name: String
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  sentTime: String
  signedTime: String
}

input Recipients_GetRecipients_request_Input {
  \\"When set to **true** and \`include_tabs\` is set to **true**, all tabs with anchor tab properties are included in the response.\\"
  include_anchor_tab_locations: String
  \\"When set to **true**, the extended properties are included in the response.\\"
  include_extended: String
  \\"Reserved for DocuSign.\\"
  include_metadata: String
  \\"When set to **true**, the tab information associated with the recipient is included in the response.\\"
  include_tabs: String
}

\\"Envelope bulk recipients\\"
type EnvelopeBulkRecipients {
  \\"A complex type containing information about the bulk recipients in the response.\\"
  bulkRecipients: [bulkRecipient]
  \\"The last position in the result set.\\"
  endPosition: String
  \\"The URI for the next chunk of records based on the search request. It is \`null\` if this is the last set of results for the search.\\"
  nextUri: String
  \\"The URI for the prior chunk of records based on the search request. It is \`null\` if this is the first set of results for the search.\\"
  previousUri: String
  \\"The number of results returned in this response.\\"
  resultSetSize: String
  \\"Starting position of the current result set.\\"
  startPosition: String
  \\"The total number of items in the search's result set. It will always be greater than or equal to the value of the \`resultSetSize\` field.\\"
  totalSetSize: String
}

type bulkRecipient {
  \\"If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \\\\n\\\\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\\\\n\\\\nIf blank, but the signer \`accessCode\` property is set in the envelope, then that value is used.\\\\n\\\\nIf blank and the signer \`accessCode\` property is not set, then the access code is not required.\\"
  accessCode: String
  \\"Specifies the recipient's email address. \\\\n\\\\nMaximum length: 100 characters.\\"
  email: String
  \\"Array or errors.\\"
  errorDetails: [errorDetails]
  \\"Specifies the authentication check used for the signer. If blank then no authentication check is required for the signer. Only one value can be used in this field.\\\\n\\\\nThe acceptable values are:\\\\n\\\\n* KBA: Enables the normal ID check authentication set up for your account.\\\\n* Phone: Enables phone authentication.\\\\n* SMS: Enables SMS authentication.\\"
  identification: String
  \\"Specifies the recipient's name. \\\\n\\\\nMaximum length: 50 characters.\\"
  name: String
  \\"A note sent to the recipient in the signing email.\\\\nThis note is unique to this recipient.\\\\nIn the user interface,\\\\nit appears near the upper left corner\\\\nof the document\\\\non the signing screen.\\\\n\\\\nMaximum Length: 1000 characters.\\"
  note: String
  \\"This is only used if the Identification field value is Phone or SMS. The value for this field can be a valid telephone number or, if Phone, usersupplied (SMS authentication cannot use a user supplied number). Parenthesis and dashes can be used in the telephone number.\\\\n\\\\nIf \`usersupplied\` is used, the signer supplies his or her own telephone number.\\"
  phoneNumber: String
  recipientSignatureProviderInfo: [bulkRecipientSignatureProvider]
  rowNumber: String
  \\"Specifies values used to populate recipient tabs with information. This allows each bulk recipient signer to have different values for their associated tabs. Any number of \`tabLabel\` columns can be added to the bulk recipient file.\\\\n\\\\nThe information used in the bulk recipient file header must be the same as the \`tabLabel\` for the tab.\\\\n\\\\nThe values entered in this column are automatically inserted into the corresponding tab for the recipient in the same row.\\\\n\\\\nNote that this option cannot be used for tabs that do not have data or that are automatically populated data such as Signature, Full Name, Email Address, Company, Title, and Date Signed tabs.\\"
  tabLabels: [bulkRecipientSignatureProvider]
}

type bulkRecipientSignatureProvider {
  name: String
  \\"Specifies the value of the tab.\\"
  value: String
}

input Recipients_GetBulkRecipients_request_Input {
  \\"If **true**\\\\ninclude the tabs in the the result.\\"
  include_tabs: String
  \\"Reserved for DocuSign.\\"
  start_position: String
}

input ConsumerDisclosure_GetConsumerDisclosureEnvelopeIdRecipientId_request_Input {
  langCode: String
}

type EnvelopeDocumentVisibility {
  documentVisibility: [documentVisibility]
}

input Recipients_GetRecipientInitialsImage_request_Input {
  \\"The added line and identifier around the initial image. Note: Older envelopes might only have chromed images. If getting the non-chromed image fails, try getting the chromed image.\\"
  include_chrome: String
}

\\"Users' signatures\\"
type UserSignatures {
  \\"The date and time the user adopted their signature.\\"
  adoptedDateTime: String
  \\"Indicates the date and time the item was created.\\"
  createdDateTime: String
  dateStampProperties: dateStampProperties
  errorDetails: errorDetails
  externalID: String
  \\"One of **signature_image** or **initials_image**.\\"
  imageType: String
  initials150ImageId: String
  \\"Contains the URI for an endpoint that you can use to retrieve the initials image.\\"
  initialsImageUri: String
  isDefault: String
  phoneticName: String
  signature150ImageId: String
  \\"The font type for the signature, if the signature is not drawn. The supported font types are:\\\\n\\\\n\\\\\\"7_DocuSign\\\\\\", \\\\\\"1_DocuSign\\\\\\", \\\\\\"6_DocuSign\\\\\\", \\\\\\"8_DocuSign\\\\\\", \\\\\\"3_DocuSign\\\\\\", \\\\\\"Mistral\\\\\\", \\\\\\"4_DocuSign\\\\\\", \\\\\\"2_DocuSign\\\\\\", \\\\\\"5_DocuSign\\\\\\", \\\\\\"Rage Italic\\\\\\"\\"
  signatureFont: String
  \\"Specifies the signature ID associated with the signature name. You can use the signature ID in the URI in place of the signature name, and the value stored in the \`signatureName\` property in the body is used. This allows the use of special characters (such as \\\\\\"&\\\\\\", \\\\\\"<\\\\\\", \\\\\\">\\\\\\") in a the signature name. Note that with each update to signatures, the returned signature ID might change, so the caller will need to trigger off the signature name to get the new signature ID.\\"
  signatureId: String
  \\"Contains the URI for an endpoint that you can use to retrieve the signature image.\\"
  signatureImageUri: String
  \\"The initials associated with the signature.\\"
  signatureInitials: String
  \\"Specifies the user signature name.\\"
  signatureName: String
  signatureType: String
  stampFormat: String
  stampImageUri: String
  stampSizeMM: String
  stampType: String
}

type dateStampProperties {
  dateAreaHeight: String
  dateAreaWidth: String
  dateAreaX: String
  dateAreaY: String
}

input Recipients_GetRecipientSignatureImage_request_Input {
  \\"When set to **true**, indicates the chromed version of the signature image should be retrieved.\\"
  include_chrome: String
}

input Recipients_GetRecipientTabs_request_Input {
  \\"When set to **true**, all tabs with anchor tab properties are included in the response.\\"
  include_anchor_tab_locations: String
  \\"Reserved for DocuSign.\\"
  include_metadata: String
}

input Templates_GetEnvelopeTemplates_request_Input {
  \\"The possible values are:  matching_applied - This returns template matching information for the template.\\"
  include: String
}

\\"Folder management\\"
type Folders {
  \\"A collection of folder objects returned in a response.\\"
  folders: [folder]
}

type folder {
  errorDetails: errorDetails
  filter: filter
  \\"The ID of the folder being accessed.\\"
  folderId: String
  \\"A collection of folder objects returned in a response.\\"
  folders: [folder]
  name: String
  ownerEmail: String
  ownerUserId: String
  ownerUserName: String
  parentFolderId: String
  parentFolderUri: String
  \\"Type of the user. Valid values: type_owner, type_participant.\\"
  type: String
  uri: String
}

type filter {
  \\"Access token information.\\"
  actionRequired: String
  expires: String
  folderIds: String
  fromDateTime: String
  isTemplate: String
  \\"An optional value that sets the direction order used to sort the item list. \\\\n\\\\nValid values are: \\\\n\\\\n* asc = ascending sort order\\\\n* desc = descending sort order\\"
  order: String
  orderBy: String
  searchTarget: String
  searchText: String
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"Must be set to \\\\\\"bearer\\\\\\".\\"
  toDateTime: String
}

input Folders_GetFolders_request_Input {
  \\"Reserved for DocuSign.\\"
  include: String
  include_items: String
  \\"Reserved for DocuSign.\\"
  start_position: String
  \\"Specifies the items that are returned. Valid values are: \\\\n\\\\n* include - The folder list will return normal folders plus template folders. \\\\n* only - Only the list of template folders are returned.\\"
  template: String
  \\"Reserved for DocuSign.\\"
  user_filter: String
}

type folderItemsResponse {
  \\"The last position in the result set.\\"
  endPosition: String
  \\"A list of the envelopes in the specified folder or folders.\\"
  folderItems: [folderItem]
  \\"The URI for the next chunk of records based on the search request. It is \`null\` if this is the last set of results for the search.\\"
  nextUri: String
  \\"The URI for the prior chunk of records based on the search request. It is \`null\` if this is the first set of results for the search.\\"
  previousUri: String
  \\"The number of results returned in this response.\\"
  resultSetSize: String
  \\"Starting position of the current result set.\\"
  startPosition: String
  \\"The total number of items in the search's result set. It will always be greater than or equal to the value of the \`resultSetSize\` field.\\"
  totalSetSize: String
}

type folderItem {
  \\"Specifies the date and time this item was completed.\\"
  completedDateTime: String
  \\"Indicates the date and time the item was created.\\"
  createdDateTime: String
  \\"An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.\\"
  customFields: [customField_v2]
  \\"A sender-defined description of the line item.\\"
  description: String
  \\"The envelope ID of the envelope status that failed to post.\\"
  envelopeId: String
  \\"Contains a URI for an endpoint that you can use to retrieve the envelope or envelopes.\\"
  envelopeUri: String
  \\"When set to **true**, indicates that this module is enabled on the account.\\"
  is21CFRPart11: String
  isSignatureProviderEnvelope: String
  \\"Utc date and time the comment was last updated (can only be done by creator.)\\"
  lastModified: String
  name: String
  \\"Name of the envelope owner.\\"
  ownerName: String
  pageCount: Int
  password: String
  senderEmail: String
  \\"Name of the envelope sender.\\"
  senderName: String
  \\"The date and time the envelope was sent.\\"
  sentDateTime: String
  \\"When set to **true**, this custom tab is shared.\\"
  shared: String
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  subject: String
  \\"The unique identifier of the template. If this is not provided, DocuSign will generate a value.\\"
  templateId: String
  uri: String
}

type customField_v2 {
  \\"If merge field's are being used, specifies the type of the merge field. The only  supported value is **salesforce**.\\"
  configurationType: String
  errorDetails: errorDetails
  \\"An ID used to specify a custom field.\\"
  fieldId: String
  name: String
  \\"When set to **true**, the signer is required to fill out this tab\\"
  required: String
  \\"A boolean indicating if the value should be displayed.\\"
  show: String
  \\"The value of the custom field.\\"
  value: String
}

input Folders_GetFolderItems_request_Input {
  \\"Only return items on or after this date. If no value is provided, the default search is the previous 30 days.\\"
  from_date: String
  include_items: String
  \\"The email of the folder owner.\\"
  owner_email: String
  \\"The name of the folder owner.\\"
  owner_name: String
  \\"The search text used to search the items of the envelope. The search looks at recipient names and emails, envelope custom fields, sender name, and subject.\\"
  search_text: String
  \\"The position of the folder items to return. This is used for repeated calls, when the number of envelopes returned is too much for one return (calls return 100 envelopes at a time). The default value is 0.\\"
  start_position: String
  \\"The current status of the envelope. If no value is provided, the default search is all/any status.\\"
  status: String
  \\"Only return items up to this date. If no value is provided, the default search is to the current date.\\"
  to_date: String
}

\\"Group information\\"
type Groups {
  \\"The last position in the result set.\\"
  endPosition: String
  \\"A collection group objects containing information about the groups returned.\\"
  groups: [group]
  \\"The URI for the next chunk of records based on the search request. It is \`null\` if this is the last set of results for the search.\\"
  nextUri: String
  \\"The URI for the prior chunk of records based on the search request. It is \`null\` if this is the first set of results for the search.\\"
  previousUri: String
  \\"The number of results returned in this response.\\"
  resultSetSize: String
  \\"Starting position of the current result set.\\"
  startPosition: String
  \\"The total number of items in the search's result set. It will always be greater than or equal to the value of the \`resultSetSize\` field.\\"
  totalSetSize: String
}

type group {
  errorDetails: errorDetails
  \\"The DocuSign group ID for the group.\\"
  groupId: String
  \\"The name of the group.\\"
  groupName: String
  \\"The group type.\\"
  groupType: String
  \\"The ID of the permission profile associated with the group.\\"
  permissionProfileId: String
  users: [userInfo]
}

input Groups_GetGroups_request_Input {
  \\"Number of records to return. The number must be greater than 1 and less than or equal to 100.\\"
  count: String
  \\"Filters the groups returned by the group name or a sub-string of group name.\\"
  group_name: String
  group_type: String
  search_text: String
  \\"Starting value for the list.\\"
  start_position: String
}

\\"Groups' users\\"
type GroupUsers {
  \\"The last position in the result set.\\"
  endPosition: String
  \\"The URI for the next chunk of records based on the search request. It is \`null\` if this is the last set of results for the search.\\"
  nextUri: String
  \\"The URI for the prior chunk of records based on the search request. It is \`null\` if this is the first set of results for the search.\\"
  previousUri: String
  \\"The number of results returned in this response.\\"
  resultSetSize: String
  \\"Starting position of the current result set.\\"
  startPosition: String
  \\"The total number of items in the search's result set. It will always be greater than or equal to the value of the \`resultSetSize\` field.\\"
  totalSetSize: String
  users: [userInfo]
}

input Groups_GetGroupUsers_request_Input {
  \\"Number of records to return. The number must be greater than 1 and less than or equal to 100.\\"
  count: String
  \\"Starting value for the list.\\"
  start_position: String
}

type paymentGatewayAccountsInfo {
  paymentGatewayAccounts: [PaymentGatewayAccounts]
}

type PaymentGatewayAccounts {
  displayName: String
  paymentGateway: String
  paymentGatewayAccountId: String
}

type permissionProfileInformation {
  \\"A complex type containing a collection of permission profiles.\\"
  permissionProfiles: [AccountPermissionProfiles]
}

type AccountPermissionProfiles {
  modifiedByUsername: String
  modifiedDateTime: String
  permissionProfileId: String
  permissionProfileName: String
  settings: accountRoleSettings
  userCount: String
  users: [Users]
}

type accountRoleSettings {
  allowAccountManagement: String
  allowAccountManagementMetadata: settingsMetadata
  allowApiAccess: String
  allowApiAccessMetadata: settingsMetadata
  allowApiAccessToAccount: String
  allowApiAccessToAccountMetadata: settingsMetadata
  allowApiSendingOnBehalfOfOthers: String
  allowApiSendingOnBehalfOfOthersMetadata: settingsMetadata
  allowApiSequentialSigning: String
  allowApiSequentialSigningMetadata: settingsMetadata
  allowBulkSending: String
  allowBulkSendingMetadata: settingsMetadata
  allowDocuSignDesktopClient: String
  allowDocuSignDesktopClientMetadata: settingsMetadata
  allowEnvelopeSending: String
  allowEnvelopeSendingMetadata: settingsMetadata
  allowSendersToSetRecipientEmailLanguage: String
  allowSendersToSetRecipientEmailLanguageMetadata: settingsMetadata
  allowSignerAttachments: String
  allowSignerAttachmentsMetadata: settingsMetadata
  allowSupplementalDocuments: String
  allowSupplementalDocumentsMetadata: settingsMetadata
  allowTaggingInSendAndCorrect: String
  allowTaggingInSendAndCorrectMetadata: settingsMetadata
  allowVaulting: String
  allowVaultingMetadata: settingsMetadata
  allowWetSigningOverride: String
  allowWetSigningOverrideMetadata: settingsMetadata
  allowedAddressBookAccess: String
  allowedAddressBookAccessMetadata: settingsMetadata
  allowedTemplateAccess: String
  allowedTemplateAccessMetadata: settingsMetadata
  allowedToBeEnvelopeTransferRecipient: String
  allowedToBeEnvelopeTransferRecipientMetadata: settingsMetadata
  canCreateWorkspaces: String
  canCreateWorkspacesMetadata: settingsMetadata
  disableDocumentUpload: String
  disableDocumentUploadMetadata: settingsMetadata
  disableOtherActions: String
  disableOtherActionsMetadata: settingsMetadata
  enableApiRequestLogging: String
  enableApiRequestLoggingMetadata: settingsMetadata
  enableRecipientViewingNotifications: String
  enableRecipientViewingNotificationsMetadata: settingsMetadata
  enableSequentialSigningInterface: String
  enableSequentialSigningInterfaceMetadata: settingsMetadata
  enableTransactionPointIntegration: String
  enableTransactionPointIntegrationMetadata: settingsMetadata
  powerFormRole: String
  powerFormRoleMetadata: settingsMetadata
  receiveCompletedSelfSignedDocumentsAsEmailLinks: String
  receiveCompletedSelfSignedDocumentsAsEmailLinksMetadata: settingsMetadata
  supplementalDocumentsMustAccept: String
  supplementalDocumentsMustAcceptMetadata: settingsMetadata
  supplementalDocumentsMustRead: String
  supplementalDocumentsMustReadMetadata: settingsMetadata
  supplementalDocumentsMustView: String
  supplementalDocumentsMustViewMetadata: settingsMetadata
  useNewDocuSignExperienceInterface: String
  useNewDocuSignExperienceInterfaceMetadata: settingsMetadata
  useNewSendingInterface: String
  useNewSendingInterfaceMetadata: settingsMetadata
  vaultingMode: String
  vaultingModeMetadata: settingsMetadata
}

\\"User management\\"
type Users {
  accountManagementGranular: userAccountManagementGranularInformation
  \\"The activation code the new user must enter when activating their account.\\"
  activationAccessCode: String
  \\"Indicates the date and time the item was created.\\"
  createdDateTime: String
  \\"The name/value pair information for the user custom setting.\\"
  customSettings: [nameValue]
  email: String
  \\"Specifies whether the user is enabled for updates from DocuSign Connect. Valid values: true or false.\\"
  enableConnectForUser: String
  errorDetails: errorDetails
  \\"The user's first name. \\\\nMaximum Length: 50 characters.\\"
  firstName: String
  forgottenPasswordInfo: forgottenPasswordInformation
  \\"A list of the group information for groups to add the user to. Group information can be found by calling [ML:GET group information]. The only required parameter is groupId. \\\\n\\\\nThe parameters are:\\\\n\\\\n* groupId - The DocuSign group ID for the group.\\\\n* groupName - The name of the group\\\\n* permissionProfileId - The ID of the permission profile associated with the group.\\\\n* groupType - The group type.\\"
  groupList: [group]
  homeAddress: addressInformation_v2
  \\"Contains the URI for an endpoint that you can use to retrieve the initials image.\\"
  initialsImageUri: String
  \\"Determines if the feature set is actively set as part of the plan.\\"
  isAdmin: String
  \\"Shows the date-time when the user last logged on to the system.\\"
  lastLogin: String
  \\"The user's last name. \\\\nMaximum Length: 50 characters.\\"
  lastName: String
  \\"Shows the current status of the user's password. Possible values are: \\\\n\\\\n* password_reset\\\\n* password_active\\\\n* password_expired\\\\n* password_locked\\\\n* password_reset_failed\\"
  loginStatus: String
  \\"The user's middle name. \\\\nMaximum Length: 50 characters.\\"
  middleName: String
  password: String
  passwordExpiration: String
  permissionProfileId: String
  permissionProfileName: String
  profileImageUri: String
  \\"When set to **true**, specifies that an additional activation email is sent to the user if they fail a log on before activating their account.\\"
  sendActivationOnInvalidLogin: String
  \\"Contains the URI for an endpoint that you can use to retrieve the signature image.\\"
  signatureImageUri: String
  \\"The suffix for the user's name. \\\\n\\\\nMaximum Length: 50 characters.\\"
  suffixName: String
  \\"The title of the user.\\"
  title: String
  uri: String
  \\"The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.\\"
  userId: String
  userName: String
  userProfileLastModifiedDate: String
  \\"The name/value pair information for user settings. These determine the actions that a user can take in the account. The \`[ML:userSettings]\` are listed and described below.\\"
  userSettings: [nameValue]
  userStatus: String
  userType: String
  workAddress: addressInformation_v2
}

type userAccountManagementGranularInformation {
  canManageAdmins: String
  canManageAdminsMetadata: settingsMetadata
  canManageGroups: String
  canManageGroupsMetadata: settingsMetadata
  canManageSharing: String
  canManageSharingMetadata: settingsMetadata
  canManageUsers: String
  canManageUsersMetadata: settingsMetadata
}

\\"A complex element that has up to four Question/Answer pairs for forgotten password information.\\"
type forgottenPasswordInformation {
  \\"The answer to the first forgotten password challenge question.\\"
  forgottenPasswordAnswer1: String
  \\"The answer to the second forgotten password challenge question.\\"
  forgottenPasswordAnswer2: String
  \\"The answer to the third forgotten password challenge question.\\"
  forgottenPasswordAnswer3: String
  \\"The answer to the fourth forgotten password challenge question.\\"
  forgottenPasswordAnswer4: String
  \\"The first challenge question presented to a user who has forgotten their password.\\"
  forgottenPasswordQuestion1: String
  \\"The second challenge question presented to a user who has forgotten their password.\\"
  forgottenPasswordQuestion2: String
  \\"The third challenge question presented to a user who has forgotten their password.\\"
  forgottenPasswordQuestion3: String
  \\"The fourth challenge question presented to a user who has forgotten their password.\\"
  forgottenPasswordQuestion4: String
}

type addressInformation_v2 {
  \\"First Line of the address.\\\\nMaximum length: 100 characters.\\"
  address1: String
  \\"Second Line of the address.\\\\nMaximum length: 100 characters.\\"
  address2: String
  city: String
  \\"Specifies the country associated with the address.\\"
  country: String
  fax: String
  phone: String
  postalCode: String
  \\"The state or province associated with the address.\\"
  stateOrProvince: String
}

input PermissionProfiles_GetPermissionProfiles_request_Input {
  \\"Reserved for DocuSign.\\"
  include: String
}

type powerFormsResponse {
  \\"The last position in the result set.\\"
  endPosition: String
  \\"The URI for the next chunk of records based on the search request. It is \`null\` if this is the last set of results for the search.\\"
  nextUri: String
  powerForms: [PowerForms]
  \\"The URI for the prior chunk of records based on the search request. It is \`null\` if this is the first set of results for the search.\\"
  previousUri: String
  \\"The number of results returned in this response.\\"
  resultSetSize: String
  \\"Starting position of the current result set.\\"
  startPosition: String
  \\"The total number of items in the search's result set. It will always be greater than or equal to the value of the \`resultSetSize\` field.\\"
  totalSetSize: String
}

type PowerForms {
  \\"Indicates the date and time the item was created.\\"
  createdDateTime: String
  \\"Specifies the email body of the message sent to the recipient. \\\\n\\\\nMaximum length: 10000 characters.\\"
  emailBody: String
  \\"Specifies the subject of the email that is sent to all recipients.\\\\n\\\\nSee [ML:Template Email Subject Merge Fields] for information about adding merge field information to the email subject.\\"
  emailSubject: String
  envelopes: [Envelopes]
  errorDetails: errorDetails
  instructions: String
  isActive: String
  lastUsed: String
  limitUseInterval: String
  limitUseIntervalEnabled: String
  limitUseIntervalUnits: String
  maxUseEnabled: String
  name: String
  powerFormId: String
  powerFormUrl: String
  \\"An array of powerform recipients.\\"
  recipients: [powerFormRecipient]
  senderName: String
  senderUserId: String
  signingMode: String
  \\"The unique identifier of the template. If this is not provided, DocuSign will generate a value.\\"
  templateId: String
  templateName: String
  timesUsed: String
  uri: String
  usesRemaining: String
}

type powerFormRecipient {
  \\"If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \\\\n\\\\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\\\\n\\\\nIf blank, but the signer \`accessCode\` property is set in the envelope, then that value is used.\\\\n\\\\nIf blank and the signer \`accessCode\` property is not set, then the access code is not required.\\"
  accessCode: String
  accessCodeLocked: String
  accessCodeRequired: String
  email: String
  emailLocked: String
  \\"Specifies authentication check by name. The names used here must be the same as the authentication type names used by the account (these name can also be found in the web console sending interface in the Identify list for a recipient,) This overrides any default authentication setting.\\\\n\\\\n*Example*: Your account has ID Check and SMS Authentication available and in the web console Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check in an envelope, the idCheckConfigurationName should be 'ID Check '. If you wanted to use SMS, it would be 'SMS Auth $' and you would need to add you would need to add phone number information to the \`smsAuthentication\` node.\\"
  idCheckConfigurationName: String
  idCheckRequired: String
  name: String
  recipientType: String
  \\"Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.\\"
  roleName: String
  \\"Specifies the routing order of the recipient in the envelope.\\"
  routingOrder: String
  templateRequiresIdLookup: String
  userNameLocked: String
}

input PowerForms_GetPowerFormsList_request_Input {
  \\"Start of the search date range. Only returns templates created on or after this date/time. If no value is specified, there is no limit on the earliest date created.\\"
  from_date: String
  \\"An optional value that sets the direction order used to sort the item list. \\\\n\\\\nValid values are: \\\\n\\\\n* asc = ascending sort order\\\\n* desc = descending sort order\\"
  order: String
  \\"An optional value that sets the file attribute used to sort the item list. \\\\n\\\\nValid values are: \\\\n\\\\n* modified\\\\n* name\\"
  order_by: String
  \\"End of the search date range. Only returns templates created up to this date/time. If no value is provided, this defaults to the current date.\\"
  to_date: String
}

type powerFormSendersResponse {
  \\"The last position in the result set.\\"
  endPosition: String
  \\"The URI for the next chunk of records based on the search request. It is \`null\` if this is the last set of results for the search.\\"
  nextUri: String
  powerFormSenders: [userInfo]
  \\"The URI for the prior chunk of records based on the search request. It is \`null\` if this is the first set of results for the search.\\"
  previousUri: String
  \\"The number of results returned in this response.\\"
  resultSetSize: String
  \\"Starting position of the current result set.\\"
  startPosition: String
  \\"The total number of items in the search's result set. It will always be greater than or equal to the value of the \`resultSetSize\` field.\\"
  totalSetSize: String
}

input PowerForms_GetPowerFormsSenders_request_Input {
  \\"The position within the total result set from which to start returning values. The value **thumbnail** may be used to return the page image.\\"
  start_position: String
}

type powerFormsFormDataResponse {
  envelopes: [PowerFormData]
}

type PowerFormData {
  \\"The envelope ID of the envelope status that failed to post.\\"
  envelopeId: String
  \\"An array of powerform recipients.\\"
  recipients: [powerFormFormDataRecipient]
}

type powerFormFormDataRecipient {
  email: String
  formData: [nameValue]
  name: String
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
}

type recipientNamesResponse {
  \\"Indicates whether email address is used by more than one user.\\"
  multipleUsers: String
  recipientNames: [String]
  reservedRecipientEmail: String
}

input RecipientNames_GetRecipientNames_request_Input {
  \\"The email address for the user\\"
  email: String
}

type folderItemResponse {
  \\"The last position in the result set.\\"
  endPosition: String
  \\"A list of the envelopes in the specified folder or folders.\\"
  folderItems: [folderItem_v2]
  \\"The URI for the next chunk of records based on the search request. It is \`null\` if this is the last set of results for the search.\\"
  nextUri: String
  \\"The URI for the prior chunk of records based on the search request. It is \`null\` if this is the first set of results for the search.\\"
  previousUri: String
  \\"The number of results returned in this response.\\"
  resultSetSize: String
  \\"Starting position of the current result set.\\"
  startPosition: String
  totalRows: String
}

type folderItem_v2 {
  \\"Specifies the date and time this item was completed.\\"
  completedDateTime: String
  \\"Indicates the date and time the item was created.\\"
  createdDateTime: String
  \\"The envelope ID of the envelope status that failed to post.\\"
  envelopeId: String
  \\"Contains a URI for an endpoint that you can use to retrieve the envelope or envelopes.\\"
  envelopeUri: String
  \\"The date and time the envelope is set to expire.\\"
  expireDateTime: String
  \\"The ID of the folder being accessed.\\"
  folderId: String
  folderUri: String
  \\"When set to **true**, indicates that this module is enabled on the account.\\"
  is21CFRPart11: String
  isSignatureProviderEnvelope: String
  \\"The date and time the item was last modified.\\"
  lastModifiedDateTime: String
  ownerName: String
  recipients: EnvelopeRecipients
  \\"Contains a URI for an endpoint that you can use to retrieve the recipients.\\"
  recipientsUri: String
  senderCompany: String
  senderEmail: String
  senderName: String
  senderUserId: String
  \\"The date and time the envelope was sent.\\"
  sentDateTime: String
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  subject: String
}

input SearchFolders_GetSearchFolderContents_request_Input {
  \\"Specifies that all envelopes that match the criteria are returned.\\"
  all: String
  \\"Specifies the number of records returned in the cache. The number must be greater than 0 and less than or equal to 100.\\"
  count: String
  \\"Specifies the start of the date range to return. If no value is provided, the default search is the previous 30 days.\\"
  from_date: String
  \\"When set to **true**, the recipient information is returned in the response.\\"
  include_recipients: String
  \\"Specifies the order in which the list is returned. Valid values are: \`asc\` for ascending order, and \`desc\` for descending order.\\"
  order: String
  \\"Specifies the property used to sort the list. Valid values are: \`action_required\`, \`created\`, \`completed\`, \`sent\`, \`signer_list\`, \`status\`, or \`subject\`.\\"
  order_by: String
  \\"Specifies the the starting location in the result set of the items that are returned.\\"
  start_position: String
  \\"Specifies the end of the date range to return.\\"
  to_date: String
}

\\"Contains account settings information.\\"
type accountSettingsInformation {
  \\"The list of\\\\n[account settings][accountsettings]\\\\nthat determine\\\\nthe features available for the account.\\\\nNote that some features are determined\\\\nby the plan used to create the account and cannot be overridden.\\\\n\\\\n[accountsettings]: /esign/restapi/Accounts/Accounts/create/#account-settings\\"
  accountSettings: [nameValue]
}

type ENoteConfigurations {
  connectConfigured: String
  eNoteConfigured: String
  organization: String
  password: String
  userName: String
}

type AccountPasswordRules {
  expirePassword: String
  expirePasswordDays: String
  expirePasswordDaysMetadata: accountPasswordExpirePasswordDays
  lockoutDurationMinutes: String
  lockoutDurationMinutesMetadata: accountPasswordLockoutDurationMinutes
  lockoutDurationType: String
  lockoutDurationTypeMetadata: accountPasswordLockoutDurationType
  minimumPasswordAgeDays: String
  minimumPasswordAgeDaysMetadata: accountPasswordMinimumPasswordAgeDays
  minimumPasswordLength: String
  minimumPasswordLengthMetadata: accountMinimumPasswordLength
  passwordIncludeDigit: String
  passwordIncludeDigitOrSpecialCharacter: String
  passwordIncludeLowerCase: String
  passwordIncludeSpecialCharacter: String
  passwordIncludeUpperCase: String
  passwordStrengthType: String
  passwordStrengthTypeMetadata: accountPasswordStrengthType
  questionsRequired: String
  questionsRequiredMetadata: accountPasswordQuestionsRequired
}

type accountPasswordExpirePasswordDays {
  maximumDays: String
  minimumDays: String
}

type accountPasswordLockoutDurationMinutes {
  maximumMinutes: String
  minimumMinutes: String
}

type accountPasswordLockoutDurationType {
  options: [String]
}

type accountPasswordMinimumPasswordAgeDays {
  maximumAge: String
  minimumAge: String
}

type accountMinimumPasswordLength {
  maximumLength: String
  minimumLength: String
}

type accountPasswordStrengthType {
  options: [accountPasswordStrengthTypeOption]
}

type accountPasswordStrengthTypeOption {
  minimumLength: String
  name: String
  passwordIncludeDigit: String
  passwordIncludeDigitOrSpecialCharacter: String
  passwordIncludeLowerCase: String
  passwordIncludeSpecialCharacter: String
  passwordIncludeUpperCase: String
}

type accountPasswordQuestionsRequired {
  maximumQuestions: String
  minimumQuestions: String
}

type AccountTabSettings {
  allowTabOrder: String
  allowTabOrderMetadata: settingsMetadata
  approveDeclineTabsEnabled: String
  approveDeclineTabsMetadata: settingsMetadata
  calculatedFieldsEnabled: String
  calculatedFieldsMetadata: settingsMetadata
  checkboxTabsEnabled: String
  checkboxTabsMetadata: settingsMetadata
  dataFieldRegexEnabled: String
  dataFieldRegexMetadata: settingsMetadata
  dataFieldSizeEnabled: String
  dataFieldSizeMetadata: settingsMetadata
  firstLastEmailTabsEnabled: String
  firstLastEmailTabsMetadata: settingsMetadata
  listTabsEnabled: String
  listTabsMetadata: settingsMetadata
  noteTabsEnabled: String
  noteTabsMetadata: settingsMetadata
  radioTabsEnabled: String
  radioTabsMetadata: settingsMetadata
  savingCustomTabsEnabled: String
  savingCustomTabsMetadata: settingsMetadata
  senderToChangeTabAssignmentsEnabled: String
  senderToChangeTabAssignmentsMetadata: settingsMetadata
  sharedCustomTabsEnabled: String
  sharedCustomTabsMetadata: settingsMetadata
  tabDataLabelEnabled: String
  tabDataLabelMetadata: settingsMetadata
  tabLocationEnabled: String
  tabLocationMetadata: settingsMetadata
  tabLockingEnabled: String
  tabLockingMetadata: settingsMetadata
  tabScaleEnabled: String
  tabScaleMetadata: settingsMetadata
  tabTextFormattingEnabled: String
  tabTextFormattingMetadata: settingsMetadata
  textTabsEnabled: String
  textTabsMetadata: settingsMetadata
}

\\"Contains shared access information.\\"
type accountSharedAccess {
  \\"The account ID associated with the envelope.\\"
  accountId: String
  \\"The last position in the result set.\\"
  endPosition: String
  errorDetails: errorDetails
  \\"The URI for the next chunk of records based on the search request. It is \`null\` if this is the last set of results for the search.\\"
  nextUri: String
  \\"The URI for the prior chunk of records based on the search request. It is \`null\` if this is the first set of results for the search.\\"
  previousUri: String
  \\"The number of results returned in this response.\\"
  resultSetSize: String
  \\"A complex type containing the shared access information to an envelope for the users specified in the request.\\"
  sharedAccess: [memberSharedItems]
  \\"Starting position of the current result set.\\"
  startPosition: String
  \\"The total number of items in the search's result set. It will always be greater than or equal to the value of the \`resultSetSize\` field.\\"
  totalSetSize: String
}

type memberSharedItems {
  envelopes: [sharedItem]
  errorDetails: errorDetails
  templates: [templateSharedItem]
  user: userInfo
}

type sharedItem {
  errorDetails: errorDetails
  \\"When set to **true**, this custom tab is shared.\\"
  shared: String
  user: userInfo
}

type templateSharedItem {
  errorDetails: errorDetails
  owner: userInfo
  \\"When set to **true**, this custom tab is shared.\\"
  shared: String
  sharedGroups: [memberGroupSharedItem]
  sharedUsers: [sharedItem]
  \\"The unique identifier of the template. If this is not provided, DocuSign will generate a value.\\"
  templateId: String
  templateName: String
}

type memberGroupSharedItem {
  errorDetails: errorDetails
  group: group
  \\"When set to **true**, this custom tab is shared.\\"
  shared: String
}

input SharedAccess_GetSharedAccess_request_Input {
  \\"Specifies maximum number of results included in the response. If no value is specified, this defaults to 1000.\\"
  count: String
  envelopes_not_shared_user_status: String
  \\"A comma separated list of folder ID GUIDs.\\"
  folder_ids: String
  \\"Reserved:\\"
  item_type: String
  \\"This can be used to filter user names in the response. The wild-card '*' (asterisk) can be used around the string.\\"
  search_text: String
  \\"Reserved:\\"
  shared: String
  \\"Reserved:\\"
  start_position: String
  \\"Reserved:\\"
  user_ids: String
}

\\"Account SBS Signature Providers\\"
type AccountSignatureProviders {
  signatureProviders: [accountSignatureProvider]
}

type accountSignatureProvider {
  isRequired: String
  priority: String
  signatureProviderDisplayName: String
  signatureProviderId: String
  \\"The name of an Electronic or Standards Based Signature (digital signature) provider for the signer to use. [The current provider list.](../../../../guide/appendix/standards_based_signatures.html#signature-provider-options)\\"
  signatureProviderName: String
  signatureProviderOptionsMetadata: [accountSignatureProviderOption]
  signatureProviderRequiredOptions: [signatureProviderRequiredOption]
}

type accountSignatureProviderOption {
  signatureProviderOptionDisplayName: String
  signatureProviderOptionId: String
  signatureProviderOptionName: String
}

type signatureProviderRequiredOption {
  requiredSignatureProviderOptionIds: [String]
  signerType: String
}

type signingGroupInformation {
  \\"A collection group objects containing information about the groups returned.\\"
  groups: [SigningGroups]
}

\\"Signing groups\\"
type SigningGroups {
  \\"The UTC DateTime when the workspace user authorization was created.\\"
  created: String
  createdBy: String
  errorDetails: errorDetails
  groupEmail: String
  \\"The name of the group.\\"
  groupName: String
  \\"The group type.\\"
  groupType: String
  modified: String
  modifiedBy: String
  \\"When set to **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab ( instead of adopting a signature/initial style or only drawing a signature/initial once).\\"
  signingGroupId: String
  users: [signingGroupUser]
}

type signingGroupUser {
  email: String
  errorDetails: errorDetails
  \\"The name of the group member. \\\\n\\\\nMaximum Length: 100 characters.\\"
  userName: String
}

input SigningGroups_GetSigningGroups_request_Input {
  group_type: String
  \\"When set to **true**, the response includes the signing group members.\\"
  include_users: String
}

\\"Signing groups' users\\"
type SigningGroupUsers {
  users: [signingGroupUser]
}

type supportedLanguages {
  languages: [nameValue]
}

type tabMetadataList {
  tabs: [CustomTabs]
}

\\"Custom tabs\\"
type CustomTabs {
  \\"An optional string that is used to auto-match tabs to strings located in the documents of an envelope.\\"
  anchor: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\\\\n-->\\"
  anchorCaseSensitive: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\\\\n-->\\"
  anchorHorizontalAlignment: String
  \\"When set to **true**, this tab is ignored if anchorString is not found in the document.\\"
  anchorIgnoreIfNotPresent: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\\\\n-->\\"
  anchorMatchWholeWord: String
  \\"Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.\\"
  anchorUnits: String
  \\"Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorXOffset: String
  \\"Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorYOffset: String
  \\"When set to **true**, the information in the tab is bold.\\"
  bold: String
  \\"When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\\\\n\\\\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\\\\n\\\\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.\\"
  concealValueOnDocument: String
  \\"The user name of the DocuSign user who created this object.\\"
  createdByDisplayName: String
  \\"The userId of the DocuSign user who created this object.\\"
  createdByUserId: String
  \\"The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.\\"
  customTabId: String
  \\"When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.\\"
  disableAutoSize: String
  \\"When set to **true**, the custom tab is editable. Otherwise the custom tab cannot be modified.\\"
  editable: String
  \\"The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.\\"
  font: String
  \\"The font color used for the information in the tab.\\\\n\\\\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.\\"
  fontColor: String
  \\"The font size used for the information in the tab.\\\\n\\\\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.\\"
  fontSize: String
  \\"Height of the tab in pixels.\\"
  height: String
  \\"When set to **true**, the tab is included in e-mails related to the envelope on which it exists. This applies to only specific tabs.\\"
  includedInEmail: String
  \\"The original value of the tab.\\"
  initialValue: String
  \\"When set to **true**, the information in the tab is italic.\\"
  italic: String
  \\"If the tab is a list, this represents the values that are possible for the tab.\\"
  items: [String]
  \\"The UTC DateTime this object was last modified. This is in ISO8601 format.\\"
  lastModified: String
  \\"The User Name of the DocuSign user who last modified this object.\\"
  lastModifiedByDisplayName: String
  \\"The userId of the DocuSign user who last modified this object.\\"
  lastModifiedByUserId: String
  \\"When set to **true**, the signer cannot change the data of the custom tab.\\"
  locked: String
  \\"The maximum number of entry characters supported by the custom tab.\\"
  maximumLength: String
  mergeField: mergeField
  name: String
  \\"When set to **true**, the signer is required to fill out this tab\\"
  required: String
  scaleValue: String
  \\"When set to **true**, this custom tab is shared.\\"
  shared: String
  stampType: String
  stampTypeMetadata: propertyMetadata
  \\"The label string associated with the tab.\\\\nThe string may be the empty string.\\\\nIf no value is provided, the tab type is used as the value.\\\\n\\\\nMaximum of 500 characters.\\"
  tabLabel: String
  \\"The type of this tab. Values are: Approve, CheckBox, Company, Date, DateSigned,\\\\tDecline, Email,\\\\tEmailAddress, EnvelopeId, FirstName, Formula, FullName,\\\\tInitialHere, InitialHereOptional, LastName, List, Note, Number,\\\\tRadio, SignerAttachment, SignHere, SignHereOptional, Ssn, Text, Title, Zip5, or Zip5Dash4.\\"
  type: String
  \\"When set to **true**, the information in the tab is underlined.\\"
  underline: String
  \\"The message displayed if the custom tab fails input validation (either custom of embedded).\\"
  validationMessage: String
  \\"A regular expressionn used to validate input for the tab.\\"
  validationPattern: String
  \\"Width of the tab in pixels.\\"
  width: String
}

input Tabs_GetTabDefinitions_request_Input {
  \\"When set to **true**, only custom tabs are returned in the response.\\"
  custom_tab_only: String
}

type envelopeTemplateResults {
  \\"The last position in the result set.\\"
  endPosition: String
  \\"The list of requested templates.\\"
  envelopeTemplates: [envelopeTemplateResult]
  \\"A collection of folder objects returned in a response.\\"
  folders: [folder]
  \\"The URI for the next chunk of records based on the search request. It is \`null\` if this is the last set of results for the search.\\"
  nextUri: String
  \\"The URI for the prior chunk of records based on the search request. It is \`null\` if this is the first set of results for the search.\\"
  previousUri: String
  \\"The number of results returned in this response.\\"
  resultSetSize: String
  \\"Starting position of the current result set.\\"
  startPosition: String
  \\"The total number of items in the search's result set. It will always be greater than or equal to the value of the \`resultSetSize\` field.\\"
  totalSetSize: String
}

type envelopeTemplateResult {
  \\"When set to **true**, Document Markup is enabled for envelope. Account must have Document Markup enabled to use this\\"
  allowMarkup: String
  \\"When set to **true**, the recipient can redirect an envelope to a more appropriate recipient.\\"
  allowReassign: String
  \\"When set to **true**, the envelope is queued for processing and the value of the \`status\` property is set to 'Processing'. Additionally, get status calls return 'Processing' until completed.\\"
  asynchronous: String
  attachmentsUri: String
  \\"Specifies the Authoritative copy feature. If set to true the Authoritative copy feature is enabled.\\"
  authoritativeCopy: String
  \\"Specifies whether auto navigation is set for the recipient.\\"
  autoNavigation: String
  \\"The unique identifier of a brand.\\"
  brandId: String
  brandLock: String
  \\"Retrieves a URI for an endpoint that allows you to easily retrieve certificate information.\\"
  certificateUri: String
  \\"Specifies the date and time this item was completed.\\"
  completedDateTime: String
  \\"Indicates the date and time the item was created.\\"
  createdDateTime: String
  customFields: AccountCustomFields
  \\"Contains a URI for an endpoint that you can use to retrieve the custom fields.\\"
  customFieldsUri: String
  \\"The date and time the recipient declined the document.\\"
  declinedDateTime: String
  \\"Specifies the data and time the item was deleted.\\"
  deletedDateTime: String
  \\"Reserved: For DocuSign use only.\\"
  deliveredDateTime: String
  \\"A sender-defined description of the line item.\\"
  description: String
  \\"Complex element contains the details on the documents in the envelope.\\"
  documents: [document]
  documentsCombinedUri: String
  \\"Contains a URI for an endpoint that you can use to retrieve the documents.\\"
  documentsUri: String
  emailBlurb: String
  emailSettings: EnvelopeEmailSettings
  \\"Specifies the subject of the email that is sent to all recipients.\\\\n\\\\nSee [ML:Template Email Subject Merge Fields] for information about adding merge field information to the email subject.\\"
  emailSubject: String
  \\"When set to **true**, the signer is allowed to print the document and sign it on paper.\\"
  enableWetSign: String
  \\"When set to **true**, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.\\\\n\\\\nYour account must have Document Visibility enabled to use this.\\"
  enforceSignerVisibility: String
  \\"The envelope ID of the envelope status that failed to post.\\"
  envelopeId: String
  \\"When set to **true**, Envelope ID Stamping is enabled.\\"
  envelopeIdStamping: String
  \\"Contains a URI for an endpoint that you can use to retrieve the envelope or envelopes.\\"
  envelopeUri: String
  \\"The ID of the folder being accessed.\\"
  folderId: String
  folderName: String
  folderUri: String
  initialSentDateTime: String
  \\"When set to **true**, indicates that this module is enabled on the account.\\"
  is21CFRPart11: String
  isSignatureProviderEnvelope: String
  \\"Utc date and time the comment was last updated (can only be done by creator.)\\"
  lastModified: String
  \\"The date and time the item was last modified.\\"
  lastModifiedDateTime: String
  lockInformation: EnvelopeLocks
  \\"When set to **true**, prevents senders from changing the contents of \`emailBlurb\` and \`emailSubject\` properties for the envelope. \\\\n\\\\nAdditionally, this prevents users from making changes to the contents of \`emailBlurb\` and \`emailSubject\` properties when correcting envelopes. \\\\n\\\\nHowever, if the \`messageLock\` node is set to true**** and the \`emailSubject\` property is empty, senders and correctors are able to add a subject to the envelope.\\"
  messageLock: String
  name: String
  notification: notification
  \\"Contains a URI for an endpoint that you can use to retrieve the notifications.\\"
  notificationUri: String
  owner: userInfo
  pageCount: Int
  parentFolderUri: String
  password: String
  purgeState: String
  recipients: EnvelopeRecipients
  \\"When set to **true**, prevents senders from changing, correcting, or deleting the recipient information for the envelope.\\"
  recipientsLock: String
  \\"Contains a URI for an endpoint that you can use to retrieve the recipients.\\"
  recipientsUri: String
  \\"The date and time the envelope was sent.\\"
  sentDateTime: String
  \\"When set to **true**, this custom tab is shared.\\"
  shared: String
  \\"Specifies the physical location where the signing takes place. It can have two enumeration values; InPerson and Online. The default value is Online.\\"
  signingLocation: String
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"The data and time the status changed.\\"
  statusChangedDateTime: String
  \\"The unique identifier of the template. If this is not provided, DocuSign will generate a value.\\"
  templateId: String
  \\"Contains a URI for an endpoint which you can use to retrieve the templates.\\"
  templatesUri: String
  \\"Used to identify an envelope. The id is a sender-generated value and is valid in the DocuSign system for 7 days. It is recommended that a transaction ID is used for offline signing to ensure that an envelope is not sent multiple times. The \`transactionId\` property can be used determine an envelope's status (i.e. was it created or not) in cases where the internet connection was lost before the envelope status was returned.\\"
  transactionId: String
  uri: String
  \\"When set to **true**, the disclosure is shown to recipients in accordance with the account's Electronic Record and Signature Disclosure frequency setting. When set to **false**, the Electronic Record and Signature Disclosure is not shown to any envelope recipients. \\\\n\\\\nIf the \`useDisclosure\` property is not set, then the account's normal disclosure setting is used and the value of the \`useDisclosure\` property is not returned in responses when getting envelope information.\\"
  useDisclosure: String
  \\"The date and time the envelope or template was voided.\\"
  voidedDateTime: String
  \\"The reason the envelope or template was voided.\\"
  voidedReason: String
}

type document {
  \\"Reserved: TBD\\"
  applyAnchorTabs: String
  \\"This string sets the display and behavior properties of\\\\nthe document during signing. The possible values are:\\\\n\\\\n* \`modal\`<br>\\\\n  The document is shown as a supplement action strip\\\\n  and can be viewed, downloaded, or printed in a modal window.\\\\n  This is the recommended value for supplemental documents. \\\\n\\\\n* \`download\`<br>\\\\n  The document is shown as a supplement action strip\\\\n  and can be viewed, downloaded, or printed in a new browser window. \\\\n\\\\n* \`inline\`<br>\\\\n  The document is shown in the normal signing window.\\\\n  This value is not used with supplemental documents,\\\\n  but is the default value for all other documents.\\"
  display: String
  \\"The document's bytes. This field can be used to include a base64 version of the document bytes within an envelope definition instead of sending the document using a multi-part HTTP request. The maximum document size is smaller if this field is used due to the overhead of the base64 encoding.\\"
  documentBase64: String
  documentFields: [nameValue]
  documentGroup: String
  \\"Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.\\"
  documentId: String
  \\"When set to **true**, the document is been already encrypted by the sender for use with the DocuSign Key Manager Security Appliance.\\"
  encryptedWithKeyManager: String
  \\"The file extension type of the document. If the document is not a PDF it is converted to a PDF.\\"
  fileExtension: String
  fileFormatHint: String
  \\"When set to **true**,\\\\nthe document is included in the combined document download. \\\\nThe default value is **true**.\\"
  includeInDownload: String
  \\"Matchboxes define areas in a document for document matching when you are creating envelopes. They are only used when you upload and edit a template. \\\\n\\\\nA matchbox consists of 5 elements:\\\\n\\\\n* pageNumber - The document page number  on which the matchbox will appear. \\\\n* xPosition - The x position of the matchbox on a page. \\\\n* yPosition - The y position of the matchbox on a page.\\\\n* width - The width of the matchbox. \\\\n* height - The height of the matchbox.\\"
  matchBoxes: [matchBox]
  name: String
  \\"An optional value that sets the direction order used to sort the item list. \\\\n\\\\nValid values are: \\\\n\\\\n* asc = ascending sort order\\\\n* desc = descending sort order\\"
  order: String
  pages: String
  password: String
  \\"The file id from the cloud storage service where the document is located. This information is returned using [ML:GET /folders] or [ML:/folders/{folderid}].\\"
  remoteUrl: String
  \\"Sets how the signer interacts with the supplemental document.\\\\nThe possible values are: \\\\n\\\\n*\\\\t\`no_interaction\`<br>\\\\n  No recipient action is required. \\\\n\\\\n*\\\\t\`view\`<br>\\\\n  The recipient is required to view the document. \\\\n\\\\n*\\\\t\`accept\`<br>\\\\n  The recipient is required to accept the document by selecting accept during signing, but is not required to view the document. \\\\n\\\\n*\\\\t\`view_accept\`<br>\\\\n  The recipient is required to view and accept the document.\\"
  signerMustAcknowledge: String
  \\"When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.\\"
  templateLocked: String
  \\"When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.\\"
  templateRequired: String
  \\"When set to **true**, PDF form field data is transformed into document tab values when the PDF form field name matches the DocuSign custom tab tabLabel. The resulting PDF form data is also returned in the PDF meta data when requesting the document PDF. See the [ML:Transform PDF Fields] section for more information about how fields are transformed into DocuSign tabs.\\"
  transformPdfFields: String
  uri: String
}

type matchBox {
  \\"Height of the tab in pixels.\\"
  height: Int
  \\"Specifies the page number on which the tab is located.\\\\nMust be 1 for [supplemental documents][supdocs].\\\\n\\\\n[supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents\\"
  pageNumber: Int
  \\"Width of the tab in pixels.\\"
  width: Int
  \\"This indicates the horizontal offset of the object on the page.\\\\nDocuSign uses 72 DPI when determining position.\\\\nRequired. May be zero.\\"
  xPosition: Int
  \\"This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.\\"
  yPosition: Int
}

input Templates_GetTemplates_request_Input {
  \\"Number of records to return in the cache.\\"
  count: String
  \\"The query value can be a folder name or folder ID. The response will only return templates in the specified folder.\\"
  folder: String
  \\"A comma separated list of folder ID GUIDs.\\"
  folder_ids: String
  folder_types: String
  \\"Start of the search date range. Only returns templates created on or after this date/time. If no value is specified, there is no limit on the earliest date created.\\"
  from_date: String
  \\"A comma-separated list\\\\nof additional template attributes\\\\nto include in the response.\\\\nValid values are:\\\\n\\\\n* custom_fields\\\\n* documents\\\\n* folders\\\\n* notifications\\\\n* recipients\\"
  include: String
  \\"Sets the direction order used to sort the list. Valid values are: -asc = ascending sort order (a to z)  -desc = descending sort order (z to a)\\"
  order: String
  \\"Sets the file attribute used to sort the list. Valid values are:  -name: template name  -modified: date/time template was last modified.  -used: date/time the template was last used.\\"
  order_by: String
  \\"The search text used to search the names of templates.\\"
  search_text: String
  shared: String
  \\"If true, the response only includes templates shared by the user. If false, the response only returns template not shared by the user. If not specified, the response is not affected.\\"
  shared_by_me: String
  \\"The starting index for the first template shown in the response. This must be greater than or equal to 0 (zero).\\"
  start_position: String
  \\"End of the search date range. Only returns templates created up to this date/time. If no value is provided, this defaults to the current date.\\"
  to_date: String
  \\"Start of the search date range. Only returns templates used or edited on or after this date/time. If no value is specified, there is no limit on the earliest date used.\\"
  used_from_date: String
  \\"End of the search date range. Only returns templates used or edited up to this date/time. If no value is provided, this defaults to the current date.\\"
  used_to_date: String
  \\"Sets if the templates shown in the response Valid values are:  -owned_by_me: only shows templates the user owns.  -shared_with_me: only shows templates that are shared with the user.  -all: shows all templates owned or shared with the user.\\"
  user_filter: String
  user_id: String
}

\\"Template management\\"
type Templates {
  \\"When set to **true**, Document Markup is enabled for envelope. Account must have Document Markup enabled to use this\\"
  allowMarkup: String
  \\"When set to **true**, the recipient can redirect an envelope to a more appropriate recipient.\\"
  allowReassign: String
  \\"When set to **true**, the envelope is queued for processing and the value of the \`status\` property is set to 'Processing'. Additionally, get status calls return 'Processing' until completed.\\"
  asynchronous: String
  attachmentsUri: String
  \\"Specifies the Authoritative copy feature. If set to true the Authoritative copy feature is enabled.\\"
  authoritativeCopy: String
  \\"Specifies whether auto navigation is set for the recipient.\\"
  autoNavigation: String
  \\"The unique identifier of a brand.\\"
  brandId: String
  brandLock: String
  \\"Retrieves a URI for an endpoint that allows you to easily retrieve certificate information.\\"
  certificateUri: String
  \\"Specifies the date and time this item was completed.\\"
  completedDateTime: String
  \\"Indicates the date and time the item was created.\\"
  createdDateTime: String
  customFields: AccountCustomFields
  \\"Contains a URI for an endpoint that you can use to retrieve the custom fields.\\"
  customFieldsUri: String
  \\"The date and time the recipient declined the document.\\"
  declinedDateTime: String
  \\"Specifies the data and time the item was deleted.\\"
  deletedDateTime: String
  \\"Reserved: For DocuSign use only.\\"
  deliveredDateTime: String
  \\"Complex element contains the details on the documents in the envelope.\\"
  documents: [document]
  documentsCombinedUri: String
  \\"Contains a URI for an endpoint that you can use to retrieve the documents.\\"
  documentsUri: String
  emailBlurb: String
  emailSettings: EnvelopeEmailSettings
  \\"Specifies the subject of the email that is sent to all recipients.\\\\n\\\\nSee [ML:Template Email Subject Merge Fields] for information about adding merge field information to the email subject.\\"
  emailSubject: String
  \\"When set to **true**, the signer is allowed to print the document and sign it on paper.\\"
  enableWetSign: String
  \\"When set to **true**, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.\\\\n\\\\nYour account must have Document Visibility enabled to use this.\\"
  enforceSignerVisibility: String
  \\"The envelope ID of the envelope status that failed to post.\\"
  envelopeId: String
  \\"When set to **true**, Envelope ID Stamping is enabled.\\"
  envelopeIdStamping: String
  envelopeTemplateDefinition: envelopeTemplateDefinition
  \\"Contains a URI for an endpoint that you can use to retrieve the envelope or envelopes.\\"
  envelopeUri: String
  initialSentDateTime: String
  \\"When set to **true**, indicates that this module is enabled on the account.\\"
  is21CFRPart11: String
  isSignatureProviderEnvelope: String
  \\"The date and time the item was last modified.\\"
  lastModifiedDateTime: String
  lockInformation: EnvelopeLocks
  \\"When set to **true**, prevents senders from changing the contents of \`emailBlurb\` and \`emailSubject\` properties for the envelope. \\\\n\\\\nAdditionally, this prevents users from making changes to the contents of \`emailBlurb\` and \`emailSubject\` properties when correcting envelopes. \\\\n\\\\nHowever, if the \`messageLock\` node is set to true**** and the \`emailSubject\` property is empty, senders and correctors are able to add a subject to the envelope.\\"
  messageLock: String
  notification: notification
  \\"Contains a URI for an endpoint that you can use to retrieve the notifications.\\"
  notificationUri: String
  purgeState: String
  recipients: EnvelopeRecipients
  \\"When set to **true**, prevents senders from changing, correcting, or deleting the recipient information for the envelope.\\"
  recipientsLock: String
  \\"Contains a URI for an endpoint that you can use to retrieve the recipients.\\"
  recipientsUri: String
  \\"The date and time the envelope was sent.\\"
  sentDateTime: String
  \\"Specifies the physical location where the signing takes place. It can have two enumeration values; InPerson and Online. The default value is Online.\\"
  signingLocation: String
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"The data and time the status changed.\\"
  statusChangedDateTime: String
  \\"Contains a URI for an endpoint which you can use to retrieve the templates.\\"
  templatesUri: String
  \\"Used to identify an envelope. The id is a sender-generated value and is valid in the DocuSign system for 7 days. It is recommended that a transaction ID is used for offline signing to ensure that an envelope is not sent multiple times. The \`transactionId\` property can be used determine an envelope's status (i.e. was it created or not) in cases where the internet connection was lost before the envelope status was returned.\\"
  transactionId: String
  \\"When set to **true**, the disclosure is shown to recipients in accordance with the account's Electronic Record and Signature Disclosure frequency setting. When set to **false**, the Electronic Record and Signature Disclosure is not shown to any envelope recipients. \\\\n\\\\nIf the \`useDisclosure\` property is not set, then the account's normal disclosure setting is used and the value of the \`useDisclosure\` property is not returned in responses when getting envelope information.\\"
  useDisclosure: String
  \\"The date and time the envelope or template was voided.\\"
  voidedDateTime: String
  \\"The reason the envelope or template was voided.\\"
  voidedReason: String
}

\\"A complex element containing the following information:\\\\n\\\\ntemplateId: Unique identifier of the template. If this is not provided, DocuSign will generate a value. \\\\n\\\\nname: Name of the template. Maximum length: 100 characters.\\\\n\\\\nshared: When set to **true**, the template is shared with the Everyone group in the account. If false, the template is only shared with the Administrator group.\\\\n\\\\npassword: Password, if the template is locked.\\\\n\\\\ndescription: Description of the template. Maximum Length: 500 characters.\\\\n\\\\npageCount: Number of document pages in the template.\\\\n\\\\nfolderName: The name of the folder the template is located in.\\\\n\\\\nfolderId: The ID for the folder.\\\\n\\\\nowner: The userName, email, userId, userType, and userStatus for the template owner.\\"
type envelopeTemplateDefinition {
  \\"A sender-defined description of the line item.\\"
  description: String
  \\"The ID for the folder.\\"
  folderId: String
  \\"The name of the folder in which the template is located.\\"
  folderName: String
  \\"The URI of the folder.\\"
  folderUri: String
  \\"Utc date and time the comment was last updated (can only be done by creator.)\\"
  lastModified: String
  lastModifiedBy: userInfo
  name: String
  \\"The user's new password.\\"
  newPassword: String
  owner: userInfo
  \\"An integer value specifying the number of document pages in the template. Omit this property if not submitting a page count.\\"
  pageCount: Int
  parentFolderUri: String
  password: String
  \\"When set to **true**, this custom tab is shared.\\"
  shared: String
  \\"The unique identifier of the template. If this is not provided, DocuSign will generate a value.\\"
  templateId: String
  uri: String
}

\\"Template documents\\"
type TemplateDocuments {
  templateDocuments: [envelopeDocument]
  \\"The unique identifier of the template. If this is not provided, DocuSign will generate a value.\\"
  templateId: String
}

input Documents_GetTemplateDocument_request_Input {
  encrypt: String
  show_changes: String
}

input Pages_GetTemplatePageImage_request_Input {
  \\"Number of dots per inch for the resulting image. The default if not used is 94. The range is 1-310.\\"
  dpi: String
  \\"Sets the maximum height (in pixels) of the returned image.\\"
  max_height: String
  \\"Sets the maximum width (in pixels) of the returned image.\\"
  max_width: String
  show_changes: String
}

input Recipients_GetTemplateRecipients_request_Input {
  \\"When set to **true** and \`include_tabs\` is set to **true**, all tabs with anchor tab properties are included in the response.\\"
  include_anchor_tab_locations: String
  \\"When set to **true**, the extended properties are included in the response.\\"
  include_extended: String
  \\"When set to **true**, the tab information associated with the recipient is included in the response.\\"
  include_tabs: String
}

input Recipients_GetTemplateBulkRecipients_request_Input {
  \\"When set to **true**, the tab information associated with the recipient is included in the response.\\"
  include_tabs: String
  \\"Reserved for DocuSign.\\"
  start_position: String
}

type fileTypeList {
  \\"A collection of file types.\\"
  fileTypes: [fileType]
}

type fileType {
  fileExtension: String
  \\"The mime-type of a file type listed in a fileTypes collection.\\"
  mimeType: String
}

type userInformationList {
  \\"The last position in the result set.\\"
  endPosition: String
  \\"The URI for the next chunk of records based on the search request. It is \`null\` if this is the last set of results for the search.\\"
  nextUri: String
  \\"The URI for the prior chunk of records based on the search request. It is \`null\` if this is the first set of results for the search.\\"
  previousUri: String
  \\"The number of results returned in this response.\\"
  resultSetSize: String
  \\"Starting position of the current result set.\\"
  startPosition: String
  \\"The total number of items in the search's result set. It will always be greater than or equal to the value of the \`resultSetSize\` field.\\"
  totalSetSize: String
  users: [Users]
}

input Users_GetUsers_request_Input {
  \\"When set to **true**, the full list of user information is returned for each user in the account.\\"
  additional_info: String
  \\"Number of records to return. The number must be greater than 0 and less than or equal to 100.\\"
  count: String
  email: String
  \\"Filters the returned user records by the email address or a sub-string of email address.\\"
  email_substring: String
  \\"Filters user records returned by one or more group Id's.\\"
  group_id: String
  include_usersettings_for_csv: String
  login_status: String
  not_group_id: String
  \\"Starting value for the list.\\"
  start_position: String
  \\"Filters the results by user status.\\\\nYou can specify a comma-separated\\\\nlist of the following statuses:\\\\n\\\\n* ActivationRequired \\\\n* ActivationSent \\\\n* Active\\\\n* Closed \\\\n* Disabled\\"
  status: String
  \\"Filters the user records returned by the user name or a sub-string of user name.\\"
  user_name_substring: String
}

input User_GetUser_request_Input {
  \\"When set to **true**, the full list of user information is returned for each user in the account.\\"
  additional_info: String
  email: String
}

\\"Cloud storage providers\\"
type CloudStorageProviders {
  \\"An Array containing the storage providers associated with the user.\\"
  storageProviders: [cloudStorageProvider]
}

type cloudStorageProvider {
  \\"The authentication URL used for the cloud storage provider. This information is only included in the response if the user has not passed authentication for the cloud storage provider. If the redirectUrl query string is provided, the returnUrl is appended to the authenticationUrl.\\"
  authenticationUrl: String
  errorDetails: errorDetails
  \\"The URL the user is redirected to after the cloud storage provider authenticates the user. Using this will append the redirectUrl to the authenticationUrl.\\\\n\\\\nThe redirectUrl is restricted to URLs in the docusign.com or docusign.net domains.\\"
  redirectUrl: String
  \\"The service name for the cloud storage provider.\\"
  service: String
  \\"The DocuSign generated ID for the cloud storage provider\\"
  serviceId: String
}

input CloudStorage_GetCloudStorageProviders_request_Input {
  \\"The URL the user is redirected to after the cloud storage provider authenticates the user. Using this will append the redirectUrl to the authenticationUrl.\\\\n\\\\nThe redirectUrl is restricted to URLs in the docusign.com or docusign.net domains.\\"
  redirectUrl: String
}

\\"Cloud storage\\"
type CloudStorage {
  \\"The last position in the result set.\\"
  endPosition: String
  errorDetails: externalDocServiceErrorDetails
  id: String
  items: [externalFile]
  name: String
  \\"The URI for the next chunk of records based on the search request. It is \`null\` if this is the last set of results for the search.\\"
  nextUri: String
  \\"The URI for the prior chunk of records based on the search request. It is \`null\` if this is the first set of results for the search.\\"
  previousUri: String
  \\"The number of results returned in this response.\\"
  resultSetSize: String
  \\"Starting position of the current result set.\\"
  startPosition: String
  \\"The total number of items in the search's result set. It will always be greater than or equal to the value of the \`resultSetSize\` field.\\"
  totalSetSize: String
}

type externalDocServiceErrorDetails {
  \\"Reserved: TBD\\"
  authenticationUrl: String
  errorCode: String
  message: String
}

type externalFile {
  date: String
  id: String
  img: String
  name: String
  \\"Reserved: TBD\\"
  size: String
  supported: String
  \\"Type of the user. Valid values: type_owner, type_participant.\\"
  type: String
  uri: String
}

input CloudStorageFolder_GetCloudStorageFolderAll_request_Input {
  \\"A comma separated list of folder IDs included in the request.\\"
  cloud_storage_folder_path: String
  \\"An optional value that sets how many items are included in the response. \\\\n\\\\nThe default setting for this is 25.\\"
  count: String
  \\"An optional value that sets the direction order used to sort the item list. \\\\n\\\\nValid values are: \\\\n\\\\n* asc = ascending sort order\\\\n* desc = descending sort order\\"
  order: String
  \\"An optional value that sets the file attribute used to sort the item list. \\\\n\\\\nValid values are: \\\\n\\\\n* modified\\\\n* name\\"
  order_by: String
  search_text: String
  \\"Indicates the starting point of the first item included in the response set. It uses a 0-based index. The default setting for this is 0.\\"
  start_position: String
}

input CloudStorageFolder_GetCloudStorageFolder_request_Input {
  cloud_storage_folder_path: String
  \\"An optional value that sets how many items are included in the response. \\\\n\\\\nThe default setting for this is 25.\\"
  count: String
  \\"An optional value that sets the direction order used to sort the item list. \\\\n\\\\nValid values are: \\\\n\\\\n* asc = ascending sort order\\\\n* desc = descending sort order\\"
  order: String
  \\"An optional value that sets the file attribute used to sort the item list. \\\\n\\\\nValid values are: \\\\n\\\\n* modified\\\\n* name\\"
  order_by: String
  search_text: String
  \\"Indicates the starting point of the first item included in the response set. It uses a 0-based index. The default setting for this is 0.\\"
  start_position: String
}

\\"Users' custom settings\\"
type UserCustomSettings {
  \\"The name/value pair information for the user custom setting.\\"
  customSettings: [nameValue]
}

\\"Users' profiles\\"
type UserProfiles {
  address: addressInformation_v2
  \\"These properties cannot be modified in the PUT. \\\\n\\\\nIndicates the authentication methods used by the user.\\"
  authenticationMethods: [authenticationMethod]
  \\"The name of the user's Company.\\"
  companyName: String
  \\"When set to **true**, the user's company and title information are shown on the ID card.\\"
  displayOrganizationInfo: String
  \\"When set to **true**, the user's Address and Phone number are shown on the ID card.\\"
  displayPersonalInfo: String
  \\"When set to **true**, the user's ID card can be viewed from signed documents and envelope history.\\"
  displayProfile: String
  \\"When set to **true**, the user's usage information is shown on the ID card.\\"
  displayUsageHistory: String
  profileImageUri: String
  \\"The title of the user.\\"
  title: String
  usageHistory: usageHistory
  userDetails: Users
  userProfileLastModifiedDate: String
}

\\"Contains information about the method used for authentication.\\"
type authenticationMethod {
  \\"Indicates the type of authentication. Valid values are: PhoneAuth, STAN, ISCheck, OFAC, AccessCode, AgeVerify, or SSOAuth.\\"
  authenticationType: String
  \\"The last provider that authenticated the user.\\"
  lastProvider: String
  \\"The data and time the user last used the authentication method.\\"
  lastTimestamp: String
  \\"The number of times the authentication method was used.\\"
  totalCount: Int
}

\\"A complex element consisting of: \\\\n\\\\n* lastSentDateTime - the date and time the user last sent an envelope. \\\\n* lastSignedDateTime - the date and time the user last signed an envelope.\\\\n* sentCount - the number of envelopes the user has sent.\\\\n* signedCount - the number of envelopes the user has signed.\\"
type usageHistory {
  \\"The date and time the user last sent an envelope.\\"
  lastSentDateTime: String
  \\"The date and time the user last signed an envelope.\\"
  lastSignedDateTime: String
  \\"The number of envelopes the user has sent.\\"
  sentCount: Int
  \\"The number of envelopes the user has signed.\\"
  signedCount: Int
}

input UserProfileImage_GetUserProfileImage_request_Input {
  encoding: String
}

type userSettingsInformation {
  accountManagementGranular: userAccountManagementGranularInformation
  senderEmailNotifications: senderEmailNotifications
  signerEmailNotifications: signerEmailNotifications
  userSettings: [nameValue]
}

type senderEmailNotifications {
  \\"When set to **true**, the sender receives notification if the signer changes.\\"
  changedSigner: String
  \\"When set to **true**, the sender receives notification if the delivery of the envelope fails.\\"
  deliveryFailed: String
  \\"When set to **true**, the user receives notification that the envelope has been completed.\\"
  envelopeComplete: String
  \\"When set to **true**, the user receives notification if the offline signing failed.\\"
  offlineSigningFailed: String
  \\"When set to **true**, the sender receives notification that the recipient viewed the enveloper.\\"
  recipientViewed: String
  senderEnvelopeDeclined: String
  \\"When set to **true**, the user receives notification if consent is withdrawn.\\"
  withdrawnConsent: String
}

\\"An array of email notifications that specifies the email the user receives when they are a sender. When the specific email notification is set to true, the user receives those types of email notifications from DocuSign. The user inherits the default account sender email notification settings when the user is created.\\"
type signerEmailNotifications {
  \\"When set to **true**, the user receives agent notification emails.\\"
  agentNotification: String
  \\"When set to **true**, the user receives notifications of carbon copy deliveries.\\"
  carbonCopyNotification: String
  \\"When set to **true**, the user receives notifications of certified deliveries.\\"
  certifiedDeliveryNotification: String
  \\"When set to **true**, the user receives notification that document markup has been activated.\\"
  documentMarkupActivation: String
  \\"When set to **true**, the user receives notification that the envelope has been activated.\\"
  envelopeActivation: String
  \\"When set to **true**, the user receives notification that the envelope has been completed.\\"
  envelopeComplete: String
  \\"When set to **true**, the user receives notification that the envelope has been corrected.\\"
  envelopeCorrected: String
  \\"When set to **true**, the user receives notification that the envelope has been declined.\\"
  envelopeDeclined: String
  \\"When set to **true**, the user receives notification that the envelope has been voided.\\"
  envelopeVoided: String
  \\"Reserved:\\"
  faxReceived: String
  \\"When set to **true**, the user receives notification if the offline signing failed.\\"
  offlineSigningFailed: String
  \\"When set to **true**, the user receives notification of document purges.\\"
  purgeDocuments: String
  \\"When set to **true**, the user receives notification that the envelope has been reassigned.\\"
  reassignedSigner: String
  whenSigningGroupMember: String
}

type userSignaturesInformation {
  userSignatures: [UserSignatures]
}

input UserSignatures_GetUserSignatures_request_Input {
  stamp_type: String
}

input UserSignatures_GetUserSignatureImage_request_Input {
  include_chrome: String
}

type userSocialIdResult {
  \\"Contains properties that map a DocuSign user to a social account (Facebook, Yahoo, etc.)\\"
  socialAccountInformation: [UserSocialAccountLogins]
  \\"The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.\\"
  userId: String
}

\\"Users' social account logins\\"
type UserSocialAccountLogins {
  \\"The users email address.\\"
  email: String
  errorDetails: errorDetails
  \\"The social account provider (Facebook, Yahoo, etc.)\\"
  provider: String
  \\"The ID provided by the Socal Account.\\"
  socialId: String
  \\"The full user name for the account.\\"
  userName: String
}

type AccountWatermarks {
  displayAngle: String
  enabled: String
  \\"The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.\\"
  font: String
  \\"The font color used for the information in the tab.\\\\n\\\\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.\\"
  fontColor: String
  \\"The font size used for the information in the tab.\\\\n\\\\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.\\"
  fontSize: String
  id: String
  imageBase64: String
  transparency: String
  watermarkText: String
}

\\"Provides properties that describe the workspaces avaialble.\\"
type workspaceList {
  \\"The last position in the result set.\\"
  endPosition: String
  \\"The number of results returned in this response.\\"
  resultSetSize: String
  \\"Starting position of the current result set.\\"
  startPosition: String
  \\"The total number of items in the search's result set. It will always be greater than or equal to the value of the \`resultSetSize\` field.\\"
  totalSetSize: String
  \\"A list of workspaces.\\"
  workspaces: [Workspaces]
}

type Workspaces {
  billableAccountId: String
  \\"The UTC DateTime when the workspace user authorization was created.\\"
  created: String
  createdByInformation: workspaceUser
  \\"Utc date and time the comment was last updated (can only be done by creator.)\\"
  lastModified: String
  lastModifiedByInformation: workspaceUser
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"The relative URL that may be used to access the workspace.\\"
  workspaceBaseUrl: String
  \\"Text describing the purpose of the workspace.\\"
  workspaceDescription: String
  \\"The id of the workspace, always populated.\\"
  workspaceId: String
  \\"The name of the workspace.\\"
  workspaceName: String
  \\"The relative URI that may be used to access the workspace.\\"
  workspaceUri: String
}

\\"A workspaceUser representing the user. This property is only returned in response to user specific GET call.\\"
type workspaceUser {
  \\"The account ID associated with the envelope.\\"
  accountId: String
  \\"The name of the account that the workspace user belongs to.\\"
  accountName: String
  activeSince: String
  \\"The UTC DateTime when the workspace user was created.\\"
  created: String
  createdById: String
  email: String
  errorDetails: errorDetails
  \\"Utc date and time the comment was last updated (can only be done by creator.)\\"
  lastModified: String
  lastModifiedById: String
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"Type of the user. Valid values: type_owner, type_participant.\\"
  type: String
  \\"The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.\\"
  userId: String
  userName: String
  \\"Specifies the workspace ID GUID.\\"
  workspaceId: String
  \\"The relative URI that may be used to access a workspace user.\\"
  workspaceUserBaseUrl: String
  workspaceUserId: String
}

\\"Provides properties that describe the contents of a workspace folder.\\"
type workspaceFolderContents {
  \\"The last position in the result set.\\"
  endPosition: String
  folder: WorkspaceItems
  items: [WorkspaceItems]
  parentFolders: [WorkspaceItems]
  \\"The number of results returned in this response.\\"
  resultSetSize: String
  \\"Starting position of the current result set.\\"
  startPosition: String
  \\"The total number of items in the search's result set. It will always be greater than or equal to the value of the \`resultSetSize\` field.\\"
  totalSetSize: String
  \\"The id of the workspace, always populated.\\"
  workspaceId: String
}

type WorkspaceItems {
  callerAuthorization: workspaceUserAuthorization
  contentType: String
  \\"The UTC DateTime when the workspace item was created.\\"
  created: String
  createdById: String
  createdByInformation: workspaceUser
  extension: String
  fileSize: String
  fileUri: String
  id: String
  \\"If true, this supersedes need for bit mask permission with workspaceUserAuthorization\\"
  isPublic: String
  \\"Utc date and time the comment was last updated (can only be done by creator.)\\"
  lastModified: String
  \\"Utc date and time the comment was last updated (can only be done by creator)\\"
  lastModifiedById: String
  lastModifiedByInformation: workspaceUser
  \\"A simple string description of the item, such as a file name or a folder name.\\"
  name: String
  pageCount: String
  \\"The ID of the parent folder. This is the GUID of the parent folder, or the special value 'root' for the root folder.\\"
  parentFolderId: String
  parentFolderUri: String
  \\"The type of the workspace item. Valid values are file, folder.\\"
  type: String
  uri: String
}

\\"Provides properties that describe user authorization to a workspace.\\"
type workspaceUserAuthorization {
  canDelete: String
  canMove: String
  canTransact: String
  canView: String
  \\"The UTC DateTime when the workspace user authorization was created.\\"
  created: String
  createdById: String
  errorDetails: errorDetails
  modified: String
  modifiedById: String
  workspaceUserId: String
  workspaceUserInformation: workspaceUser
}

input WorkspaceFolder_GetWorkspaceFolder_request_Input {
  \\"The maximum number of results to be returned by this request.\\"
  count: String
  \\"When set to **true**, file information is returned in the response along with folder information. The default is **false**.\\"
  include_files: String
  \\"When set to **true**, information about the sub-folders of the current folder is returned. The default is **false**.\\"
  include_sub_folders: String
  \\"When set to **true**, thumbnails are returned as part of the response.  The default is **false**.\\"
  include_thumbnails: String
  \\"Set to **true** to return extended details about the user. The default is **false**.\\"
  include_user_detail: String
  \\"The position within the total result set from which to start returning values.\\"
  start_position: String
  \\"If set, then the results are filtered to those associated with the specified userId.\\"
  workspace_user_id: String
}

input WorkspaceFile_GetWorkspaceFile_request_Input {
  \\"When set to **true**, the Content-Disposition header is set in the response. The value of the header provides the filename of the file. Default is **false**.\\"
  is_download: String
  \\"When set to **true** the file returned as a PDF.\\"
  pdf_version: String
}

input WorkspaceFilePages_GetWorkspaceFilePages_request_Input {
  \\"The maximum number of results to be returned by this request.\\"
  count: String
  \\"Number of dots per inch for the resulting image. The default if not used is 94. The range is 1-310.\\"
  dpi: String
  \\"Sets the maximum height (in pixels) of the returned image.\\"
  max_height: String
  \\"Sets the maximum width (in pixels) of the returned image.\\"
  max_width: String
  \\"The position within the total result set from which to start returning values. The value **thumbnail** may be used to return the page image.\\"
  start_position: String
}

\\"Defines a billing plans response object.\\"
type billingPlansResponse {
  \\"Reserved: TBD\\"
  billingPlans: [billingPlan]
}

\\"Defines a billing plan response object.\\"
type billingPlanResponse {
  billingPlan: billingPlan
  successorPlans: [billingPlan]
}

type userPasswordRules {
  passwordRules: AccountPasswordRules
  \\"The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.\\"
  userId: String
}

\\"Contains information about mutiple API request logs.\\"
type apiRequestLogsResult {
  \\"Reserved: TBD\\"
  apiRequestLogs: [apiRequestLog]
}

\\"Contains API request log information.\\"
type apiRequestLog {
  \\"Indicates the date and time the item was created.\\"
  createdDateTime: String
  \\"A sender-defined description of the line item.\\"
  description: String
  requestLogId: String
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
}

\\"Request logs\\"
type RequestLogs {
  \\"Specifies the maximum number of API requests to log.\\"
  apiRequestLogMaxEntries: String
  \\"Indicates the remaining number of API requests that can be logged.\\"
  apiRequestLogRemainingEntries: String
  \\"When set to **true**, enables API request logging for the user.\\"
  apiRequestLogging: String
}

\\"Authentication and login\\"
type Authentication {
  \\"Contains a token that can be used for authentication in API calls instead of using the user name and password. Only returned if the \`api_password=true\` query string is added to the URL.\\"
  apiPassword: String
  \\"The list of accounts that authenticating user is a member of.\\"
  loginAccounts: [loginAccount]
}

type loginAccount {
  \\"The account ID associated with the envelope.\\"
  accountId: String
  \\"The GUID associated with the account ID.\\"
  accountIdGuid: String
  \\"The URL that should be used for successive calls to this account. It includes the protocal (https), the DocuSign server where the account is located, and the account number. Use this Url to make API calls against this account. Many of the API calls provide Uri's that are relative to this baseUrl.\\"
  baseUrl: String
  \\"The email address for the user.\\"
  email: String
  \\"This value is true if this is the default account for the user, otherwise false is returned.\\"
  isDefault: String
  \\"A list of settings on the acccount that indicate what features are available.\\"
  loginAccountSettings: [nameValue]
  \\"A list of user-level settings that indicate what user-specific features are available.\\"
  loginUserSettings: [nameValue]
  \\"The name associated with the account.\\"
  name: String
  \\"An optional descirption of the site that hosts the account.\\"
  siteDescription: String
  \\"The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.\\"
  userId: String
  \\"The name of this user as defined by the account.\\"
  userName: String
}

input LoginInformation_GetLoginInformation_request_Input {
  \\"Reserved for DocuSign.\\"
  api_password: String
  embed_account_id_guid: String
  \\"When set to **true**, shows the account ID GUID in the response.\\"
  include_account_id_guid: String
  \\"Determines whether login settings are returned in the response.\\\\n\\\\nValid Values:\\\\n\\\\n* all -  All the login settings are returned. \\\\n* none - no login settings are returned.\\"
  login_settings: String
}

type Mutation {
  undefined: Any
  \\"Creates new DocuSign accounts.\\\\nYou can use this method to create\\\\na single account\\\\nor up to 100 accounts at a time.\\\\n\\\\nWhen creating a single account,\\\\nthe body of the request is a\\\\n[\`newAccountDefinition\`][newAccountDefinition]\\\\nobject.\\\\n\\\\nIf the request succeeds.\\\\nit returns a\\\\n201 (Created) code.\\\\nThe response returns the new account ID, password and the default user\\\\ninformation for each newly created account.\\\\n\\\\n\\\\nWhen creating multiple accounts,\\\\nthe body of the request is a\\\\n\`newAccountRequests\`\\\\nobject,\\\\nwhich contains one or more \\\\n[\`newAccountDefinition\`][newAccountDefinition]\\\\nobjects.\\\\nYou can create up to 100 new accounts\\\\nat a time this way.\\\\n\\\\nThe body for a multi-account\\\\ncreation request\\\\nlooks like this in JSON:\\\\n\\\\n\`\`\`\\\\n{\\\\n  \\\\\\"newAccountRequests\\\\\\": [\\\\n    {\\\\n      \\\\\\"accountName\\\\\\": \\\\\\"accountone\\\\\\",\\\\n      . . .\\\\n    },\\\\n    {\\\\n      \\\\\\"accountName\\\\\\": \\\\\\"accounttwo\\\\\\",\\\\n      . . .\\\\n    }\\\\n  ]\\\\n}\\\\n\`\`\`\\\\n\\\\nA multi-account request\\\\nlooks like this in XML:\\\\n\\\\n\`\`\`\\\\n<newAccountsDefinition xmlns:i=\\\\\\"http://www.w3.org/2001/XMLSchema-instance\\\\\\" xmlns=\\\\\\"http://www.docusign.com/restapi\\\\\\">\\\\n  <newAccountRequests>\\\\n    <newAccountDefinition>\\\\n      . . .\\\\n    </newAccountDefinition>\\\\n    <newAccountDefinition>\\\\n      . . .\\\\n    </newAccountDefinition>\\\\n  </newAccountRequests>\\\\n</newAccountsDefinition>\\\\n\`\`\`\\\\n\\\\nA multi-account creation request\\\\nmay succeed (report a 201 code)\\\\neven if some accounts could not be created.\\\\nIn this case, the \`errorDetails\` property\\\\nin the response contains specific information\\\\nabout the failure.\\\\n\\\\n\\\\n\\\\nThe \`accountSettings\` property\\\\nis a [name/value][nameValue]\\\\nlist that can contain the following settings:\\\\n\\\\n| Name                                               | Type    | Authorization Required                                      | Description|  \\\\n| :------------------------------------------------- | :------ | :---------------------------------------------------------- ||  \\\\n| adoptSigConfig                                     | Boolean | Admin                                                       | When **true**, the Signature Adoption Configuration page is available to account administrators|  \\\\n| allowAccessCodeFormat                              | Boolean | Admin                                                       | When **true**, the Access Code Format page is available to account administrators|  \\\\n| allowAccountManagementGranular                     | Boolean | Admin                                                       | When **true**, the Delegated Administration functionality is available to account|  \\\\n| allowBulkSend                                      | Boolean | Admin                                                       | When **true**, the account can set if the bulk send feature can be used|  \\\\n| allowCDWithdraw                                    | Boolean | Admin                                                       | When **true**, signers can withdraw their consent to use electronic signatures.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              |  \\\\n| allowConnectSendFinishLater                        | Boolean | Reserved                                                    | Reserved for DocuSign|  \\\\n| allowDataDownload                                  | Boolean | Admin                                                       | When **true**, the account can download envelope data|  \\\\n| allowEnvelopeCorrect                               | Boolean | Admin                                                       | When **true**, the account allows in process envelopes to be corrected|  \\\\n| allowEnvelopePublishReporting                      | Boolean | Admin                                                       | When **true**, the account can access the Envelope Publish section in Classic DocuSign Experience Account Administration|  \\\\n| allowExpressSignerCertificate                      | Boolean | Admin                                                       | When **true**, senders are allowed to use the DocuSign Express digital signatures|  \\\\n| allowExternalSignaturePad                          | Boolean | Admin                                                       | When **true**, an external signature pad can be used for signing. The signature pad type is set by the externalSignaturePadType property|  \\\\n| allowInPerson                                      | Boolean | SysAdmin                                                    | When **true**, the account allows In Person Signing|  \\\\n| allowMarkup                                        | Boolean | Admin                                                       | When **true**, the document markup feature is enabled for the account|  \\\\n| allowMemberTimezone                                | Boolean | Admin                                                       | When **true**, account users can set their own time zones|  \\\\n| allowMergeFields                                   | Boolean | Admin                                                       | When **true**, the account can use merge fields in conjunction with DocuSign for Salesforce|  \\\\n| allowMultipleSignerAttachments                     | Boolean | Admin                                                       | When **true**, multiple signer attachments are allowed for an envelope|  \\\\n| allowOfflineSigning                                | Boolean | Admin                                                       | When **true**, the account can use Offline Signing and envelopes signed using offline signing on mobile devices are synchronized with this account. This option and the inSessionEnabled option must both be enabled (**true**) for a caller to use offline signing|  \\\\n| allowOpenTrustSignerCertificate                    | Boolean | Admin                                                       | When **true**, senders are allowed to use the OpenTrust digital signatures|  \\\\n| allowPaymentProcessing                             | Boolean | Admin                                                       | When **true**, the account can access the Payment Processing set up page|  \\\\n| allowPersonalSignerCertificate                     | Boolean | Admin                                                       | When **true**, the account can specify that signers must use personal signer certificates during signing|  \\\\n| allowPrivateSigningGroups                          | Boolean | SysAdmin Read Only                                          | Reserved for DocuSign. This currently returns false in a response. This setting is only shown in the response when listing account settings|  \\\\n| allowReminders                                     | Boolean | Admin                                                       | When **true**, the reminder and expiration functionality is available when sending envelops|  \\\\n| allowSafeBioPharmaSignerCertificate                | Boolean | Admin                                                       | When **true**, senders are allowed to use the SAFE BioPharma digital signatures|  \\\\n| allowSharedTabs                                    | Boolean | Admin                                                       | When **true**, the account allows users to share custom tabs (fields). <br>   This setting is only shown when getting account settings. It cannot be modified|  \\\\n| allowSignDocumentFromHomePage                      | Boolean | Admin                                                       | When **true**, the Sign a Document Now button is available on the Home tab|  \\\\n| allowSignatureStamps                               | Boolean | Reserved                                                    | Reserved for DocuSign|  \\\\n| allowSignerReassign                                | Boolean | Admin                                                       | When **true**, the account allows signers to reassign an envelope|  \\\\n| allowSignerReassignOverride                        | Boolean | Admin                                                       | When **true**, the sender has the option override the default account setting for reassigning recipients.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    |  \\\\n| allowSigningGroups                                 | Boolean | SysAdmin Read Only                                          | When **true**, the account can use signing groups. This setting is only shown in the response when listing account settings|  \\\\n| allowTabOrder                                      | Boolean | Admin                                                       | When **true**, the Tab Order field is available for use when creating tabs|  \\\\n| allowWorkspaceComments                             | Boolean | Reserved                                                    | Reserved for DocuSign|  \\\\n| allowWorkspaceCreate                               | Boolean | Admin                                                       | When **true**, account users can create DocuSign Rooms|  \\\\n| attachCompletedEnvelope                            | Boolean | SysAdmin                                                    | When **true**, envelope documents are included as a PDF file attachment for signing completed emails|  \\\\n| authenticationCheck                                | String  | Admin                                                       | Sets when authentication checks are applied for recipient envelope access. This setting only applies to the following ID checks: <ul> <li>Phone Authentication</li> <li>SMS Authentication</li> <li>Knowledge-Based ID</li> </ul> This setting takes one of the following options: <ul> <li><p><code>initial_access</code>: The authentication check always applies the first time a recipient accesses the documents. Recipients are not asked to authenticate again when they access the documents from the same browser on the same device. If the recipient attempts to access the documents from a different browser or a different device, the recipient must pass authentication again. Once authenticated, that recipient is not challenged again on the new device or browser. The ability for a recipient to skip authentication for documents is limited to documents sent from the same sending account.</p></li> <li><p><code>each_access</code>: Authentication checks apply every time a recipient attempts to access the envelope. However, you can configure the Authentication Expiration setting to allow recipients to skip authentication when they have recently passed authentication by setting a variable timeframe.</p></li> </ul> |  \\\\n| autoNavRule                                        | String  | Admin                                                       | The auto-navigation rule for the account. Enumeration values are: <ul> <li><code>off</li></code> <li><code>required_fields</li></code> <li><code>required_and_blank_fields</li></code> <li><code>all_fields</li></code> <li><code>page_then_required_fields</li></code> <li><code>page_then_required_and_blank_fields</li></code> <li><code>page_then_all_fields</li></code> </ul|  \\\\n| bulkSend                                           | Boolean | Admin                                                       | When **true**, the account allows bulk sending of envelopes|  \\\\n| canSelfBrandSend                                   | Boolean | SysAdmin                                                    | When **true**, account administrators can self-brand their sending console through the DocuSign Console|  \\\\n| canSelfBrandSign                                   | Boolean | SysAdmin                                                    | When **true**, account administrators can self-brand their signing console through the DocuSign Console|  \\\\n| conditionalFieldsEnabled                           | Boolean | Admin                                                       | When **true**, conditional fields can be used by the account|  \\\\n| consumerDisclosureFrequency                        | enum    | Admin                                                       | Possible values are: <ul> <li> <code>once</code>: Per account, the supplemental document is displayed once only per userId. </li> <li> <code>always</code>: Per envelope, the supplemental document is displayed once only per userId. </li> <li> <code>each_access</code>: - Per envelope, the supplemental document is displayed once only per recipientId. </li> </ul|  \\\\n| dataFieldRegexEnabled                              | Boolean | Admin                                                       | When **true**, the Regex field is available for tabs with that property|  \\\\n| dataFieldSizeEnabled                               | Boolean | Admin                                                       | When **true**, the maximum number of characters field is available for tabs with that property|  \\\\n| dataPopulationScope                                | String  | Admin                                                       | Specifies how data is shared for tabs with the same tabLabel. There are two possible values: <ul> <li> <code>document</code>: Tabs in a document with the same label populate with the same data. </li> <li> <code>envelope</code>: Tabs in all documents in the envelope with the same label populate with the same data. </li> </ul> This setting applies to the following tab types: <ul> <li> Check box </li> <li> Company </li> <li> Data Field </li> <li> Dropdown List </li> <li> Full Name </li> <li> Formula </li> <li> Note </li> <li> Title </li> </ul> Changing this setting affects envelopes that have been sent but not completed|  \\\\n| disableMobilePushNotifications                     | Boolean | Admin                                                       | When **true**, mobile push notifications are disabled on the account|  \\\\n| disableMobileSending                               | Boolean | Admin                                                       | When **true**, sending from mobile applications is disabled|  \\\\n| disableMultipleSessions                            | Boolean | Admin                                                       | When **true**, account users cannot be logged into multiple sessions at once|  \\\\n| disableUploadSignature                             | Boolean | Admin                                                       | When **true**, signers cannot use the upload signature/initials image option when signing a document|  \\\\n| documentConversionRestrictions                     | String  | Admin                                                       | Sets the account document upload restriction for non-account administrators. There are three possible values: <ul> <li> <code>no_restrictions</code> : there are no restrictions on the type of documents that can be uploaded. </li> <li> <code>allow_pdf_only</code> : only: non-administrators can only upload PDF files. </li> <li> <code>no_upload</code> : Non-administrators cannot upload files. </li> </ul|  \\\\n| enableAutoNav                                      | Boolean | SysAdmin  or EnableAutoNavByDSAdmin is set                  | When **true**, the auto-navigation is enabled for the account|  \\\\n| enableCalculatedFields                             | Boolean | Admin & AllowExpression is set                              | When **true**, this account can use the Calculated Fields feature|  \\\\n| enableDSPro                                        | Boolean | SysAdmin                                                    | When **true**, this account can send and manage envelopes from the DocuSign Desktop Client|  \\\\n| enableEnvelopeStampingByAccountAdmin               | Boolean | SysAdmin or account has EnableEnvelopeStampingByDSAdmin set | When **true**, senders for this account can choose to have the envelope ID stamped in the document margins|  \\\\n| enablePaymentProcessing                            | Boolean | Admin & AllowPaymentProcessing is set.                      | When **true**, Payment Processing is enabled for the account|  \\\\n| enablePowerForm                                    | Boolean | SysAdmin                                                    | When **true**, PowerForm access is enabled for the account|  \\\\n| enablePowerFormDirect                              | Boolean | Admin                                                       | When **true**, direct PowerForms are enabled for the account|  \\\\n| enableRecipientDomainValidation                    | Boolean | Admin                                                       | When **true**, validation on recipient email domains for DocuSign Access feature is enabled|  \\\\n| enableRequireSignOnPaper                           | Boolean | Admin                                                       | When **true**, the account can use the requireSignOnPaper option|  \\\\n| enableReservedDomain                               | Boolean | SysAdmin                                                    | When **true**, an account administrator can reserve web domain and users|  \\\\n| enableSMSAuthentication                            | Boolean | Admin                                                       | When **true**, the account can use SMS authentication|  \\\\n| enableSendToAgent                                  | Boolean | SysAdmin                                                    | When **true**, this account can use the Agent Recipient Type|  \\\\n| enableSendToIntermediary                           | Boolean | Admin & AllowSendToIntermediary is set                      | When **true**, this account can use the Intermediary Recipient Type|  \\\\n| enableSendToManage                                 | Boolean | Admin                                                       | When **true**, this account can use the Editor Recipient Type|  \\\\n| enableSequentialSigningAPI                         | Boolean | SysAdmin                                                    | When **true**, the account can define the routing order of recipients for envelopes sent using the DocuSign|  \\\\n| enableSequentialSigningUI                          | Boolean | SysAdmin                                                    | When **true**, the account can define the routing order of recipients for envelopes sent using the DocuSign console|  \\\\n| enableSignOnPaper                                  | Boolean | Admin                                                       | When **true**, a user can allow signers to use the sign on paper option|  \\\\n| enableSignOnPaperOverride                          | Boolean | Admin                                                       | When **true**, a user can override the default account setting for the sign on paper option|  \\\\n| enableSignerAttachments                            | Boolean | Admin                                                       | When **true**, a user can request attachments from a signer|  \\\\n| enableTransactionPoint                             | Boolean | SysAdmin                                                    | When **true**, Transaction Point is enabled for this account|  \\\\n| enableVaulting                                     | Boolean | SysAdmin                                                    | When **true**, this account can use electronic vaulting for documents|  \\\\n| enableWorkspaces                                   | Boolean | Admin                                                       | When **true**, DocuSign Rooms is enabled for the account|  \\\\n| envelopeIntegrationAllowed                         | String  | SysAdmin                                                    | Shows the envelope integration rule for the account. <br> Enumeration values are: NotAllowed, Full, IntegrationSendOnly|  \\\\n| envelopeIntegrationEnabled                         | Boolean | Admin & EnvelopeIntegrationAllowed is set                   | When **true**, envelope integration is enabled for the account|  \\\\n| envelopeStamplingDefaultValue                      | Boolean | (GET only)                                                  | When **true**, envelopes sent by this account automatically have the envelope ID stamped in the margins, unless the sender selects not to have them stamped|  \\\\n| externalSignaturePadType                           | String  | Admin                                                       | Sets the type of signature pad that can be used. Possible values are: <ul> <li> <code>none</code> </li> <li> <code>topaz</code> </li> <li> <code>e_padv9</code> </li> <li> <code>e_pad_integrisign</code> </li> </ul|  \\\\n| faxOutEnabled                                      | Boolean | Admin                                                       | When **true**, the account can use the fax out feature|  \\\\n| idCheckExpire                                      | String  | Admin                                                       | Indicates when a user's authentication expires. Possible values are: <ul> <li> <code>always</code> </li> <li> <code>never</code> </li> <li> <code>variable</code>: Use the value in <code>idCheckExpireDays</code> </li> </ul>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               |  \\\\n| idCheckExpireDays                                  | Integer | Admin                                                       | The number of days before a user's authentication expires.  Valid only if the \`IDCheckExpire\` value is Variable|  \\\\n| idCheckRequired                                    | String  | Admin                                                       | Indicates if authentication is required by envelope signers. Possible values are: <ul> <li> <code>always</code> </li> <li> <code>never</code> </li> <li> <code>optional</code>: Authentication is determined by the sender. </li> </ul|  \\\\n| inPersonIDCheckQuestion                            | String  | Admin                                                       | The default question used by the In Person signing host for an In Person signing session|  \\\\n| inSessionEnabled                                   | Boolean | Admin                                                       | When **true**, the account can use In Session (embedded) and offline signing. This option and the allowOfflineSigning option must both be enabled (**true**) for a caller to use offline signing|  \\\\n| inSessionSuppressEmails                            | Boolean | Admin                                                       | When **true**, emails are not sent to the embedded recipients on an envelope for the account|  \\\\n| maximumSigningGroups                               | String  | SysAdmin Read Only                                          | The maximum number of signing groups an account can have. The default value for this is 50. This setting is only shown in the response when listing account settings|  \\\\n| maximumUsersPerSigningGroup                        | String  | SysAdmin Read Only                                          | The maximum number of members in a signing group. The default value for this is 50. This setting is only shown in the response when listing account settings|  \\\\n| mobileSessionTimeout                               | String  | Admin                                                       | Sets the amount of idle activity time, in minutes, before a mobile user is automatically logged off of the system. If the setting is 0, then DocuSign mobile application users are never automatically logged off the system. The minimum setting is 1 minute and the maximum setting is 120 minutes. <br> This setting only applies to the DocuSign for iOS v2.8.2 or later mobile app|  \\\\n| phoneAuthRecipientMayProvidePhoneNumber            | Boolean | Admin                                                       | When **true**, senders can select to allow the recipient to provide a phone number for the Phone Authentication process|  \\\\n| pkiSignDownloadedPDFDocs                           | String  | Admin                                                       | The policy for adding a digital certificate to downloaded, printed and emailed documents. Possible values are: <ul> <li> <code>no_sign</code> </li> <li> <code>no_sign_allow_user_override</code> </li> <li> <code>yes_sign</code> </li> </ul|  \\\\n| recipientsCanSignOffline                           | Boolean | Admin                                                       | When **true**, envelopes signed using offline signing on mobile devices are synchronized with this account|  \\\\n| requireDeclineReason                               | Boolean | Admin                                                       | When **true**, recipients that decline to sign an envelope must provide a reason|  \\\\n| requireSignerCertificateType                       | String  | Admin                                                       | Sets which Digital Signature certificate is required when sending envelopes. There are three possible values: <ul> <li> <code>none</code>: a Digital Signature certificate is not required. </li> <li> <code>docusign_express</code>: signers must use a DocuSign Express certificate. </li> <li> <code>docusign_personal</code>: signers must use a DocuSign personal certificate. </li> <li> <code>open_trust</code>: signers must use an OpenTrust certificate. </li> </ul|  \\\\n| rsaVeridAccountName                                | String  | Admin                                                       | The RSA account name.<br> Modifying this value might inadvertently disrupt your ID Check capability. Ensure you have the correct value before changing this|  \\\\n| rsaVeridPassword                                   | String  | Admin                                                       | The password used with the RSA account.<br>Modifying this value might inadvertently disrupt your ID Check capability. Ensure you have the correct value before changing this|  \\\\n| rsaVeridRuleset                                    | String  | Admin                                                       | The RSA rule set used with the account. <br>Modifying this value might inadvertently disrupt your ID Check capability. Ensure you have the correct value before changing this|  \\\\n| rsaVeridUserId                                     | String  | Admin                                                       | The user ID for the RSA account. <br>Modifying this value might inadvertently disrupt your ID Check capability. Ensure you have the correct value before changing this|  \\\\n| savingCustomTabsEnabled                            | Boolean | Admin                                                       | When **true**, account users can save custom tabs|  \\\\n| selfSignedRecipientEmailDocument                   | String  | Admin                                                       | Sets how self-signed documents are presented to the email recipients. Possible values are: <ul> <li><code>include_pdf</code>: A PDF of the completed document is attached to the email</li> <li><code>include_link</code>: A secure link to the self-signed documents is included in the email.</li> </ul|  \\\\n| selfSignedRecipientEmailDocumentRights             | Boolean | Admin                                                       | When **true**, account administrators can set the selfSignedRecipientEmailDocument option|  \\\\n| selfSignedRecipientEmailDocumentUserOverride       | Boolean | Admin                                                       | When **true** the selfSignedRecipientEmailDocument userSetting can be set for an individual user.  The userSetting will override the account setting|  \\\\n| selfSignedRecipientEmailDocumentUserOverrideRights | Boolean | Admin                                                       | When **true**, account administrators can set the selfSignedRecipientEmailDocumentOverride option|  \\\\n| sendToCertifiedDeliveryEnabled                     | Boolean | Admin                                                       | When **true**, the Certified Deliveries Recipient type can be used by the account|  \\\\n| senderMustAuthenticateSigning                      | Boolean | Admin                                                       | When **true**, a sender that is also a recipient of an envelope must follow the authentication requirements for the envelope|  \\\\n| sessionTimeout                                     | Integer | Admin                                                       | The amount of idle activity time, in minutes, before a user is automatically logged out of the system. The minimum setting is 20 minutes and the maximum setting is 120 minutes|  \\\\n| setRecipEmailLang                                  | Boolean | Admin                                                       | When **true**, senders can set the email languages for each recipient|  \\\\n| setRecipSignLang                                   | Boolean | Admin                                                       | When **true**, senders can set the signing language used for each recipient|  \\\\n| sharedCustomTabsEnabled                            | Boolean | Admin                                                       | When **true**, saved custom tabs can be shared with account users|  \\\\n| signDateFormat                                     | String  | Admin                                                       | The date/time format applied to Date Signed fields for the account|  \\\\n| signTimeShowAmPm                                   | Boolean | Admin                                                       | When **true**, AM or PM is shown as part of the time for signDateFormat|  \\\\n| signerAttachCertificateToEnvelopePDF               | Boolean | AccountAdmin & account is selected in AccountSigningSettings| When **true**, the Certificate of Completion is included in the envelope documents PDF when it is downloaded.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                |  \\\\n| signerAttachConcat                                 | Boolean | Admin                                                       | When **true**, signer attachments are added to the parent document that the attachment tab is located on, instead of the default behavior that creates a new document in the envelope for every signer attachment|  \\\\n| signerCanCreateAccount                             | Boolean | AccountAdmin & account is selected in AccountSigningSettings| When **true**, the signer without a DocuSign account can create a DocuSign account after signing|  \\\\n| signerCanSignOnMobile                              | Boolean | AccountAdmin & account is selected in AccountSigningSettings| When **true**, signers can use the DocuSign mobile signing user interface|  \\\\n| signerInSessionUseEnvelopeCompleteEmail            | Boolean | Admin                                                       | When **true**, an envelope complete email is sent to an In Session (embedded) or offline signer after DocuSign processes the envelope|  \\\\n| signerLoginRequirements                            | String  | Admin                                                       | Sets the Login requirements for the signer. There are four options: <ul> <li> <code>login_not_required</code>: The signer is not required to log on to the system. </li> <li> <code>login_required_if_account_holder</code>: If the signer has a DocuSign account, they must log on to sign the document. </li> <li> <code>login_required_per_session</code>: The sender cannot send an envelope to anyone who does not have a DocuSign account. </li> <li> <code>login_required_per_envelope</code>: The sender cannot send an envelope to anyone who does not have a DocuSign account and the signer must log on the system for each envelope they will sign. </li> </ul> If you use Direct PowerForms or captive/embedded signers, the \\\\\\"Account required\\\\\\" settings are bypassed for those signers. If your workflow requires that the signer have an account, you should not use those methods.                                                                                                                                                                                                                                                                                                                                                           |  \\\\n| signerMustHaveAccount                              | Boolean | AccountAdmin & account is selected in AccountSigningSettings| When **true**, senders can only send an envelope to a recipient that has a DocuSign account.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 |  \\\\n| signerMustLoginToSign                              | Boolean | AccountAdmin & account is selected in AccountSigningSettings| When **true**, an envelope signer must log in to the DocuSign console to sign an envelope|  \\\\n| signerShowSecureFieldInitialValues                 | Boolean | AccountAdmin & account is selected in AccountSigningSettings| When **true**, the initial value of all SecureFields is written to the document when sent|  \\\\n| tabDataLabelEnabled                                | Boolean | Admin                                                       | When **true**, senders can change the default tabLabel for tabs|  \\\\n| tabLockingEnabled                                  | Boolean | Admin                                                       | When **true**, the locked option is available for tabs with that property|  \\\\n| tabTextFormattingEnabled                           | Boolean | Admin                                                       | When **true**, the formatting options (font type, font size, font color, bold, italic, and underline) are available for tabs with those properties|  \\\\n| universalSignatureOptIn                            | Boolean | Reserved                                                    | Reserved for DocuSign|  \\\\n| universalSignatureOptOut                           | Boolean | Reserved                                                    | Reserved for DocuSign|  \\\\n| useAccountLevelEmail                               | Boolean | AccountAdmin & account is selected in AccountSigningSettings| When **true**, the content of notification emails is determined at the account level|  \\\\n| useConsumerDisclosure                              | Boolean | Admin                                                       | When **true**, the account  can use supplemental documents.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  |  \\\\n| usesAPI                                            | Boolean | SysAdmin                                                    | When **true**, the account can use the DocuSign|  \\\\n\\\\n\\\\n\\\\n\\\\n\\\\n[newAccountDefinition]: #/definitions/newAccountDefinition\\\\n[nameValue]: #/definitions/nameValue\\\\n\\"
  Accounts_PostAccounts(input: newAccountDefinition_Input, preview_billing_plan: String): newAccountSummary
  \\"This closes the specified account. You must be an account admin to close your account. Once closed, an account must be reopened by DocuSign.\\"
  Accounts_DeleteAccount(accountId: String!): Any
  \\"Posts a payment to a past due invoice. \\\\n\\\\n\\\\nThe response returns information for a single payment, if a payment ID was used in the endpoint, or a list of payments. If the from date or to date queries or payment ID are not used, the response returns payment information for the last 365 days. If the request was for a single payment ID, the \`nextUri\` and \`previousUri\` properties are not returned.\\\\n\\\\nPrivileges required: account administrator\\"
  BillingPayments_PostPayment(input: billingPaymentRequest_Input, accountId: String!): billingPaymentResponse
  \\"Updates the billing plan information, billing address, and credit card information for the specified account.\\"
  BillingPlan_PutBillingPlan(input: billingPlanInformation_Input, accountId: String!, preview_billing_plan: String): billingPlanUpdateResponse
  \\"Reserved: At this time, this endpoint is limited to DocuSign internal use only. Completes the purchase of envelopes for your account. The actual purchase is done as part of an internal workflow interaction with an envelope vendor.\\"
  PurchasedEnvelopes_PutPurchasedEnvelopes(input: purchasedEnvelopesInformation_Input, accountId: String!): Any
  \\"Deletes one or more brand profiles from an account. The Account Branding feature (accountSettings properties \`canSelfBrandSend\` and \`canSelfBrandSend\`) must be set to **true** to use this call.\\"
  Brands_DeleteBrands(input: brandsRequest_Input, accountId: String!): AccountBrands
  \\"Creates one or more brand profile files for the account. The Account Branding feature (accountSettings properties \`canSelfBrandSend\` and \`canSelfBrandSig\`) must be set to **true** for the account to use this call.\\\\n\\\\nAn error is returned if \`brandId\` property for a brand profile is already set for the account. To upload a new version of an existing brand profile, you must delete the profile and then upload the newer version.\\\\n\\\\nWhen brand profile files are being uploaded, they must be combined into one zip file and the \`Content-Type\` must be \`application/zip\`.\\"
  Brands_PostBrands(input: brand_Input, accountId: String!): AccountBrands
  \\"Removes a brand.\\"
  Brand_DeleteBrand(accountId: String!, brandId: String!): Any
  \\"Updates an existing brand.\\"
  Brand_PutBrand(input: brand_Input, accountId: String!, brandId: String!): brand
  \\"Delete one branding logo.\\"
  BrandLogo_DeleteBrandLogo(accountId: String!, brandId: String!, logoType: String!): Any
  \\"Put one branding logo.\\"
  BrandLogo_PutBrandLogo(accountId: String!, brandId: String!, logoType: String!): Any
  \\"Uploads a branding resource file.\\"
  BrandResources_PutBrandResources(accountId: String!, brandId: String!, resourceContentType: String!): brandResources
  \\"Deletes the signature for one or more captive recipient records; it is primarily used for testing. This provides a way to reset the signature associated with a client user ID so that a new signature can be created the next time the client user ID is used.\\"
  CaptiveRecipients_DeleteCaptiveRecipientsPart(input: captiveRecipientInformation_Input, accountId: String!, recipientPart: String!): captiveRecipientInformation
  \\"Initiate a new ChunkedUpload.\\"
  ChunkedUploads_PostChunkedUploads(input: chunkedUploadRequest_Input, accountId: String!): ChunkedUploads
  \\"Delete an existing ChunkedUpload.\\"
  ChunkedUploads_DeleteChunkedUpload(accountId: String!, chunkedUploadId: String!): ChunkedUploads
  \\"Integrity-Check and Commit a ChunkedUpload, readying it for use elsewhere.\\"
  ChunkedUploads_PutChunkedUploads(accountId: String!, chunkedUploadId: String!, action: String): ChunkedUploads
  \\"Add a chunk, a chunk 'part', to an existing ChunkedUpload.\\"
  ChunkedUploads_PutChunkedUploadPart(input: chunkedUploadRequest_Input, accountId: String!, chunkedUploadId: String!, chunkedUploadPartSeq: String!): ChunkedUploads
  \\"Creates a DocuSign Custom Connect definition for your account. DocuSign Connect enables the sending of real-time data updates to external applications. These updates are generated by user transactions as the envelope progresses through actions to completion. The Connect Service provides updated information about the status of these transactions and returns updates that include the actual content of document form fields. Be aware that, these updates might or might not include the document itself. For more information about Connect, see the [ML:DocuSign Connect Service Guide].\\"
  Connect_PostConnectConfiguration(input: ConnectConfigurations_Input, accountId: String!): ConnectConfigurations
  \\"Updates the specified DocuSign Connect configuration in your account.\\"
  Connect_PutConnectConfiguration(input: ConnectConfigurations_Input, accountId: String!): ConnectConfigurations
  \\"Republishes Connect information for the  specified set of envelopes. The primary use is to republish Connect post failures by including envelope IDs for the envelopes that failed to post in the request. The list of envelope IDs that failed to post correctly can be retrieved by calling to [ML:GetConnectLog] retrieve the failure log.\\"
  ConnectPublish_PutConnectRetry(input: connectFailureFilter_Input, accountId: String!): connectFailureResults
  \\"Republishes Connect information for the specified envelope.\\"
  ConnectPublish_PutConnectRetryByEnvelope(accountId: String!, envelopeId: String!): connectFailureResults
  \\"Deletes the Connect failure log information for the specified entry.\\"
  ConnectFailures_DeleteConnectFailureLog(accountId: String!, failureId: String!): Any
  \\"Retrieves a list of connect log entries for your account.\\"
  ConnectLog_DeleteConnectLogs(accountId: String!): Any
  \\"Deletes a specified entry from the Connect Log.\\\\n\\"
  ConnectLog_DeleteConnectLog(accountId: String!, logId: String!): Any
  \\"Deletes the specified DocuSign Connect configuration.\\\\n\\\\n\\\\n \\\\n\\"
  Connect_DeleteConnectConfig(accountId: String!, connectId: String!): Any
  \\"Update Consumer Disclosure.\\"
  ConsumerDisclosure_PutConsumerDisclosure(input: AccountConsumerDisclosures_Input, accountId: String!, langCode: String!, include_metadata: String): AccountConsumerDisclosures
  \\"Delete contacts associated with an account for the DocuSign service.\\"
  Contacts_DeleteContacts(input: contactUpdateResponse_Input, accountId: String!): contactUpdateResponse
  \\"Imports multiple new contacts into the contacts collection from CSV, JSON, or XML (based on content type).\\"
  Contacts_PostContacts(input: contactUpdateResponse_Input, accountId: String!): contactUpdateResponse
  \\"Replaces contacts associated with an account for the DocuSign service.\\"
  Contacts_PutContacts(input: contactUpdateResponse_Input, accountId: String!): contactUpdateResponse
  \\"Replaces a particular contact associated with an account for the DocuSign service.\\"
  Contacts_DeleteContactWithId(accountId: String!, contactId: String!): contactUpdateResponse
  \\"Creates an acount custom field.\\"
  AccountCustomFields_PostAccountCustomFields(input: customField_Input, accountId: String!, apply_to_templates: String): AccountCustomFields
  \\"Delete an existing account custom field.\\"
  AccountCustomFields_DeleteAccountCustomFields(accountId: String!, customFieldId: String!, apply_to_templates: String): Any
  \\"Updates an existing account custom field.\\"
  AccountCustomFields_PutAccountCustomFields(input: customField_Input, accountId: String!, customFieldId: String!, apply_to_templates: String): AccountCustomFields
  \\"Starts a new eMortgage Transaction\\"
  EMortgage_PostTransactions(input: EMortgageTransactions_Input, accountId: String!): postTransactionsResponse
  \\"Creates and sends an envelope or creates a draft envelope.\\\\nEnvelopes are fundamental resources in the DocuSign platform\\\\nand are used in a variety of ways.\\\\n\\\\nWith this method you can:\\\\n\\\\n* Create and send an envelope\\\\n  with documents, recipients, and tabs.\\\\n* Create and send an envelope from a template.\\\\n* Create and send an envelope from\\\\n  a combination of documents and templates.\\\\n* Create a draft envelope.\\\\n\\\\nThere are many ways to use envelopes.\\\\nYou can create and send an envelope\\\\nwith a single API request,\\\\nor you can use several API requests\\\\nto create, populate, and send envelopes.\\\\n\\\\nWhen you use this method\\\\nto create and send an envelope\\\\nin a single request,\\\\nthe following parameters are required:\\\\n\\\\n| Parameter      | Description |\\\\n| :--------      | :---------- |\\\\n| \`status\`       | Set to \`sent\` to send the envelope to recipients.<br>Set to \`created\` (or don't set at all) to save the envelope as a draft. |\\\\n| \`emailSubject\` | The subject of the email used to send the envelope. |\\\\n| \`documents\`    | The documents to be signed. |\\\\n| \`recipients\`   | The email addresses of the envelope recipients. |\\\\n\\\\nIf you are creating an envelope\\\\nto be sent later,\\\\nsave it as a draft\\\\nby either setting \`status\`\\\\nto \`created\` or leaving it unset.\\\\nFor instance, you can create a draft envelope\\\\nwith documents only.\\\\nUsing additional API requests,\\\\nyou can add the recipients\\\\nand send the envelope\\\\nin subsequent API requests.\\\\n\\\\n\\\\n\\\\n\\\\nNot all DocuSign features are available to all accounts.\\\\nUse DocuSign Admin to check and enable feature availability.\\\\nYou can also check feature availability via the web application.\\\\nFor example, if the web application allows you to send an envelope with SMS authentication,\\\\nthen you can use the same feature through the API.\\\\n\\\\n\\\\nDocuments can be included\\\\nwith the Envelopes:create method,\\\\nor a template can include documents.\\\\nDocuments can be added by using\\\\na multipart/form request\\\\nor by using the \`documentBase64\` property of the [\`document\` object][documentDef].\\\\n\\\\n\\\\nThere are two ways to add documents to your envelopes:\\\\n\\\\n1. Use the \`documents\` property of the envelope definition.\\\\n2. Send this request as a multipart/form-data \`POST\`\\\\n   with documents added through additional request parts.\\\\n\\\\nUsing the \`documents\` property is the simpler option,\\\\nbut the request may be quite large\\\\ndue to the base64 encoding.\\\\nThis example shows how to add a document\\\\nusing this method.\\\\n\\\\n\`\`\`json\\\\n{\\\\n  \\\\\\"status\\\\\\": \\\\\\"sent\\\\\\",\\\\n  \\\\\\"emailSubject\\\\\\": \\\\\\"Example of one recipient, type signer\\\\\\",\\\\n  \\\\\\"documents\\\\\\": [{\\\\n    \\\\\\"documentId\\\\\\": \\\\\\"1\\\\\\",\\\\n    \\\\\\"name\\\\\\": \\\\\\"contract.pdf\\\\\\",\\\\n    \\\\\\"documentBase64\\\\\\": \\\\\\"base64 document bytes...\\\\\\",\\\\n  }],\\\\n  \\\\\\"recipients\\\\\\": {\\\\n    \\\\\\"signers\\\\\\": [{\\\\n      \\\\\\"name\\\\\\": \\\\\\"Lisa Simpson\\\\\\",\\\\n      \\\\\\"email\\\\\\": \\\\\\"lisa@email.com\\\\\\",\\\\n      \\\\\\"recipientId\\\\\\": \\\\\\"1\\\\\\",\\\\n      \\\\\\"routingOrder\\\\\\": \\\\\\"1\\\\\\",\\\\n      \\\\\\"tabs\\\\\\": {\\\\n        \\\\\\"signHereTabs\\\\\\": [{\\\\n          \\\\\\"xPosition\\\\\\": \\\\\\"150\\\\\\",\\\\n          \\\\\\"yPosition\\\\\\": \\\\\\"200\\\\\\",\\\\n          \\\\\\"documentId\\\\\\": \\\\\\"1\\\\\\",\\\\n          \\\\\\"pageNumber\\\\\\": \\\\\\"1\\\\\\"\\\\n        }],\\\\n      }\\\\n    }]\\\\n  }\\\\n}\\\\n\`\`\`\\\\n\\\\nIf you are using a multipart/form-data \`POST\` request,\\\\nyou do not have to base64 encode your documents.\\\\nYou place the envelope definition in one part\\\\nand the document bytes in another:\\\\n\\\\n\`\`\`\\\\n--AAA\\\\nContent-Type: application/json\\\\nContent-Disposition: form-data\\\\n\\\\n<ENVELOPE DEFINITION GOES HERE>\\\\n--AAA\\\\nContent-Type:application/pdf\\\\nContent-Disposition: file; filename=\\\\\\"contract.pdf\\\\\\"; documentid=1\\\\n\\\\n<DOCUMENT BYTES GO HERE>\\\\n--AAA--\\\\n\`\`\`\\\\n\\\\n\\\\nSupplemental documents are supporting materials\\\\nsuch as disclosures and other informational documents\\\\nthat need to accompany a document sent for signature.\\\\nThese supplemental documents are available to the signer\\\\nto view and acknowledge,\\\\nwithout making the envelope too large or confusing for signers.\\\\n\\\\nSupplemental documents use the following properties in the\\\\n[\`document\` object][documentDef].\\\\n\\\\n| Name                  | Type    | Description|\\\\n| :-------------------- | :------ ||\\\\n| includeInDownload     | Boolean | When set to **true**, the document is included in the combined document download. The default value is **true|\\\\n| display               | String  | This string sets the display and behavior properties of the document during signing. The possible values are:<br>\`<ul><li><p><code>modal</code><br>The document is shown as a supplement action strip and can be viewed, downloaded, or printed in a modal window. This is the recommended value for supplemental documents.</p></li><li><p><code>download</code><br>The document is shown as a supplement action strip and can be viewed, downloaded, or printed in a new browser window.</p></li><li><p><code>inline</code><br>This value is not used with supplemental documents, but is the default value for all other documents. The document is shown in the normal signing window.</li></ul> |\\\\n| signerMustAcknowledge | String  | Sets how the signer interacts with the supplemental document. The possible values are:<br><ul><li><p><code>no_interaction</code><br>No recipient action is required.</p></li><li><p><code>view</code><br>The recipient is required to view the document.</p></li><li><p><code>accept</code><br>The recipient is required to accept the document by selecting accept during signing, but is not required to view the document.</p></li><li><p><code>view_accept</code><br>The recipient is required to view and accept the document.</p></li></ul>                                                                                                                                                    |\\\\n\\\\n\\\\n[viewtab]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/#view-tab\\\\n\\\\nThe [View][viewtab] and Approve tabs\\\\nare used to set the interactions\\\\nfor individual recipients.\\\\nThe View tab includes a \`required\` property\\\\nthat requires the recipient to view the supplemental document.\\\\nIf the View tab \`required\` property is not set,\\\\nthe recipient can, but is not required to,\\\\nview the supplemental document.\\\\n\\\\nTo use the View and Approve tabs for\\\\nsupplemental documents,\\\\nthe document \`display\` property\\\\nmust be set to \`modal\` or \`download\`.\\\\n\\\\nThe actions that the recipient must take\\\\ndepend on the value\\\\nof the \`signerMustAcknowledge\` document property\\\\nand\\\\nwhether the signer is assigned\\\\nView or Approve tabs\\\\non the document.\\\\n\\\\nTo set the interactions for individual recipients,\\\\nset the \`signerMustAcknowledge\` property\\\\nto \`no_interaction\`,\\\\nthen add View and Approve tabs\\\\non the appropriate document for the recipient.\\\\n\\\\n\\\\nThe action that a signer must take\\\\ndepends on the value of the\\\\n\`signerMustAcknowledge\` document property,\\\\nwhether the signer has an Approve tab,\\\\nand the value of the\\\\n\`required\` property of the View tab.\\\\nThe following table\\\\nshows the actions a recipient must take\\\\nfor different combinations\\\\nof these tabs and properties.\\\\n\\\\n\\\\n\\\\n| Document \`signerMustAcknowledge\`property  | Approve Tab | View Tab \`required\` property  | Recipient is required to ...  |\\\\n| :----                                     | :----       | :----                         | :----                         |\\\\n| no_interaction                            | No          |  --                           |  Take no action               |\\\\n| no_interaction                            | No          |  false                        |  Take no action               |\\\\n| no_interaction                            | No          |  true                         |  View                         |\\\\n| no_interaction                            | Yes         |  false                        |  Accept                       |\\\\n| no_interaction                            | Yes         |  true                         |  View and Accept              |\\\\n| view                                      | No          |  --                           |  View                         |\\\\n| view                                      | Yes         |  --                           |  View and Accept              |\\\\n| accept                                    | --          |  false                        |  Accept                       |\\\\n| accept                                    | --          |  true                         |  View and Accept              |\\\\n| view_accept                               | --          |  --                           |  View and Accept              |\\\\n\\\\n\\\\n\\\\n\\\\n\\\\nAn [\`envelopeDefinition\` object][envelopeDef] is used as the method's body.\\\\nEnvelope recipients can be defined in the envelope or in templates.\\\\nThe \`envelopeDefinition\` object's \`recipients\` property\\\\nis an [\`EnvelopeRecipients\` resource object][envelopeRecipientsDef].\\\\nIt includes arrays of the seven types of recipients defined by DocuSign:\\\\n\\\\n| Recipient type                      | Description                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         |\\\\n| :---------------------------------- | :-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\\\\n| [Agents][agentDef]                  | An agent recipient can add name and email information for recipients that appear after the agent in routing order.                                                                                                                                                                                                                                                                                                                                                                                  |\\\\n| [Carbon Copies][ccDef]              | Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date or add information to any of the documents. This type of recipient can be used in any routing order. Carbon copy recipients receive their copy of the envelope when the envelope reaches the recipient's order in the process flow and when the envelope is completed.                                                                                                                                      |\\\\n| [Certified Deliveries][certfiedDef] | Certified delivery recipients must receive the completed documents for the envelope to be completed. However, they don't need to sign, initial, date or add information to any of the documents.                                                                                                                                                                                                                                                                                                    |\\\\n| [Editors][editorDef]                | Editors have the same management and access rights for the envelope as the sender. They can make changes to the envelope as if they were using the Advanced Correct feature. This recipient can add name and email information, add or change the routing order and set authentication options for the remaining recipients. Additionally, this recipient can edit signature/initial tabs and data fields for the remaining recipients. The recipient must have a DocuSign account to be an editor. |\\\\n| [In-Person Signers][inPersonDef]    | An in-person recipient is a DocuSign user, acting as a Signing Host, who is in the same physical location as the signer.                                                                                                                                                                                                                                                                                                                                                                            |\\\\n| [Intermediaries][intermediaryDef]   | An intermediary is a recipient who can, but is not required to, add name and email information for recipients at the same or subsequent level in the routing order, unless subsequent agents, editors or intermediaries are added.                                                                                                                                                                                                                                                                  |\\\\n| [Signers][signerDef]                | A signer is a recipient who must sign, initial, date, or add data to form fields on the documents in the envelope.                                                                                                                                                                                                                                                                                                                                                                                  |\\\\n\\\\n\\\\nAdditional information about the different types of recipients\\\\nis available from the [\`EnvelopeRecipients\` resource page][envelopeRecipientsRes]\\\\nand from the Developer Center [Recipients][devecenterrecipients] topic.\\\\n\\\\n\\\\n\\\\n\\\\nTabs (also referred to as tags and fields in the web application),\\\\ncan be defined in the \`envelopeDefinition\`,\\\\nin templates, by transforming PDF Form Fields,\\\\nor by using Composite Templates (see below).\\\\n\\\\nThe \`inPersonSigner\`, and \`signer\` recipient objects\\\\ninclude a \`tabs\` property.\\\\nIt is an [\`EnvelopeRecipientTabs\` resource object][envRecipientTabsDef]\\\\nthat includes arrays of the different tab types available.\\\\nSee the [\`EnvelopeRecipientTabs\` resource][envRecipientTabsRes] for more information.\\\\n\\\\n\\\\n\\\\nEnvelopes use specific people or groups as recipients.\\\\nTemplates can specify a role, eg \`account_manager.\`\\\\nWhen a template is used in an envelope,\\\\nthe roles must be replaced with specific people or groups.\\\\n\\\\nWhen you create an envelope using a \`templateId\`,\\\\nthe different recipient type objects\\\\nwithin the [\`EnvelopeRecipients\` property][envelopeRecipientsDef]\\\\nare used to assign recipients to the template's roles via the \`roleName\` property.\\\\nThe recipient objects can also override settings\\\\nthat were specified in the template,\\\\nand set values for tab fields that were defined in the template.\\\\n\\\\n\\\\nWhen a template is added or applied to an envelope,\\\\nand the template has a locked email subject and message,\\\\nthat subject and message are used for the envelope\\\\nand cannot be changed\\\\neven if another locked template\\\\nis subsequently added or applied to the envelope.\\\\nThe \`messageLock\` property is used to lock the email subject and message.\\\\n\\\\nIf an email subject or message is entered\\\\nbefore adding or applying a template with \`messageLock\` set to **true**,\\\\nthe email subject and message is overwritten\\\\nwith the locked email subject and message from the template.\\\\n\\\\n\\\\nThe status of sent envelopes\\\\ncan be determined through the DocuSign webhook system\\\\nor by polling.\\\\nWebhooks are highly recommended:\\\\nthey provide your application with the quickest updates when an envelope's\\\\nstatus changes.\\\\nDocuSign limits polling to once every 15 minutes or less\\\\nfrequently.\\\\nSee [API Rules and Limits][apirules] for more information and examples.\\\\n\\\\n\\\\nWhen a webhook is used,\\\\nDocuSign calls your application via the URL you provide, with a notification XML message.\\\\n\\\\nSee the\\\\n[Webhook recipe](https://www.docusign.com/developer-center/recipes/webhook-status)\\\\nfor examples and live demos of using webhooks.\\\\n\\\\n\\\\nThe two webhook options,\\\\n\`eventNotification\` and Connect,\\\\nuse the same notification mechanism and message formats.\\\\nUse \`eventNotification\` to create a webhook\\\\nfor a specific envelope sent via the API.\\\\nConnect webhooks can be used\\\\nfor any envelope sent from an account,\\\\nfrom any user, from any client.\\\\nThe [Connect guide][connectGuide] discusses the webhook notification message format.\\\\n\\\\n\\\\nThe Envelopes:create method\\\\nincludes an optional [\`eventNotification\` object][eventNotificationDef] property\\\\nthat adds a webhook to the envelope.\\\\n\`eventNotification\` webhooks are available for all DocuSign accounts with API access.\\\\n\\\\n\\\\nConnect can be used to create a webhook\\\\nfor all envelopes sent by all users in an account,\\\\neither through the API or through other DocuSign clients (web, mobile, etc).\\\\nConnect configurations are independent of specific envelopes.\\\\nA Connect configuration includes a filter\\\\nthat may be used to limit the webhook to specific users, envelope statuses, etc.\\\\n\\\\nYou can create and manage Connect configurations with\\\\nthe [ConnectConfigurations resource][connectConfigurationsRes].\\\\nConfigurations can also be created and managed from DocuSign Admin\\\\naccessed by selecting **Go to Admin** from the menu\\\\nnext to your picture on the DocuSign web app.\\\\nSee the **Connect** topic in the **Integrations** section of DocuSign Admin.\\\\nFor repeatability, and to minimize support questions,\\\\ncreating Connect configurations via the API is recommended, especially for ISVs.\\\\n\\\\nConnect is available for some DocuSign account types.\\\\nPlease contact DocuSign Sales for more information.\\\\n\\\\n\\\\nThe Composite Templates feature,\\\\nlike [compositing in film production](https://en.wikipedia.org/wiki/Compositing),\\\\nenables you to overlay\\\\ndocument,\\\\nrecipient,\\\\nand tab definitions\\\\nfrom multiple sources,\\\\nincluding PDF Form Field definitions,\\\\ntemplates defined on the server,\\\\nand more.\\\\n\\\\nEach Composite Template consists of optional elements: server templates,\\\\ninline templates, PDF Metadata templates, and documents.\\\\n\\\\n* The Composite Template ID is an optional element used to identify the\\\\n  composite template. It is used as a reference when adding document\\\\n  object information via a multipart HTTP message. If used, the document\\\\n  content-disposition must include the \`compositeTemplateId\` to which the\\\\n  document should be added. If \`compositeTemplateId\` is not specified in\\\\n  the content-disposition, the document is applied based on the\\\\n  \`documentId\` only. If no document object is specified, the composite\\\\n  template inherits the first document.\\\\n\\\\n* Server Templates are server-side templates stored on the DocuSign\\\\n  platform. If supplied, they are overlaid into the envelope in the order\\\\n  of their Sequence value.\\\\n\\\\n* Inline Templates provide a container to add documents, recipients,\\\\n  tabs, and custom fields. If inline templates are supplied, they are\\\\n  overlaid into the envelope in the order of their Sequence value.\\\\n\\\\n* Document objects are optional structures that provide a container to\\\\n  pass in a document or form. If this object is not included, the\\\\n  composite template inherits the *first* document it finds from a server\\\\n  template or inline template, starting with the lowest sequence value.\\\\n\\\\nPDF Form objects are only transformed from the document object. DocuSign\\\\ndoes not derive PDF form properties from server templates or inline\\\\ntemplates. To instruct DocuSign to transform fields from the PDF form,\\\\nset \`transformPdfFields\` to **true** for the document.\\\\n\\\\nSee [PDF Form Field Transformation](#pdf-form-field-transformation)\\\\nfor more information about process.\\\\n\\\\n* PDF Metadata Templates provide a container to embed design-time\\\\n  template information into a PDF document. DocuSign uses this information\\\\n  when processing the Envelope. This convention allows the document to\\\\n  carry the signing instructions with it, so that less information needs\\\\n  to be provided at run-time through an inline template or synchronized\\\\n  with an external structure like a server template. PDF Metadata\\\\n  templates are stored in the Metadata layer of a PDF in accordance with\\\\n  Acrobat's XMP specification. DocuSign will only find PDF Metadata\\\\n  templates inside documents passed in the Document object (see below). If\\\\n  supplied, the PDF metadata template will be overlaid into the envelope\\\\n  in the order of its Sequence value.\\\\n\\\\n\\\\nEach Composite Template adds a new document and templates overlay into\\\\nthe envelope. For each Composite Template these rules are applied:\\\\n\\\\n* Templates are overlaid in the order of their Sequence value.\\\\n* If Document is not passed into the Composite Template's \`document\`\\\\n  field, the *first* template's document (based on the template's Sequence\\\\n  value) is used.\\\\n* Last in wins in all cases except for the document (i.e. envelope\\\\n  information, recipient information, secure field information). There is\\\\n  no special casing.\\\\n\\\\nFor example, if you want higher security on a tab,\\\\nthen that needs to be specified in a later template (by sequence number)\\\\nthan where the tab is included.\\\\nIf you want higher security on a role recipient,\\\\nthen it needs to be in a later template\\\\nthan where that role recipient is specified.\\\\n\\\\n* Recipient matching is based on Recipient Role and Routing Order. If\\\\n  there are matches, the recipient information is merged together. A final\\\\n  pass is done on all Composite Templates, after all template overlays\\\\n  have been applied, to collapse recipients with the same email, username\\\\n  and routing order. This prevents having the same recipients at the same\\\\n  routing order.\\\\n\\\\n* If you specify in a template that a recipient is locked, once that\\\\n  recipient is overlaid the recipient attributes can no longer be changed.\\\\n  The only items that can be changed for the recipient in this case are\\\\n  the email, username, access code and IDCheckInformationInput.\\\\n\\\\n* Tab matching is based on Tab Labels, Tab Types and Documents. If a Tab\\\\n  Label matches but the Document is not supplied, the Tab is overlaid for\\\\n  all the Documents.\\\\n\\\\nFor example, if you have a simple inline template with only one tab in\\\\nit with a label and a value, the Signature, Initial, Company, Envelope\\\\nID, User Name tabs will only be matched and collapsed if they fall in\\\\nthe exact same X and Y locations.\\\\n\\\\n* \`roleName\` and \`tabLabel\` matching is case sensitive.\\\\n\\\\n* The \`defaultRecipient\` property enables you to specify which recipient\\\\n  the tabs generated from a PDF form are mapped to. You can also set PDF\\\\n  form generated tabs to a recipient other than the default recipient by\\\\n  specifying the mapping of the tab label that is created to one of the\\\\n  template recipients.\\\\n\\\\n* You can use \`tabLabel\` wild carding to map a series of tabs from the PDF\\\\n  form. To use this you must end a tab label with \\\\\\"\\\\\\\\*\\\\\\" and then the system\\\\n  matches tabs that start with the label.\\\\n\\\\n* If no \`defaultRecipient\` is specified, tabs must be explicitly mapped\\\\n  to recipients in order to be generated from the form. Unmapped form\\\\n  objects will not be generated into their DocuSign equivalents. (In the\\\\n  case of Signature/Initials, the tabs will be disregarded entirely; in\\\\n  the case of pdf text fields, the field data will be flattened on the\\\\n  Envelope document, but there will not be a corresponding DocuSign data\\\\n  tab.)\\\\n\\\\n\\\\nDocument content can be supplied inline, using the \`documentBase64\` or\\\\ncan be included in a multipart HTTP message. If a multipart message is\\\\nused and there are multiple Composite Templates, the document\\\\ncontent-disposition can include the \`compositeTemplateId\` to which the\\\\ndocument should be added. Using the \`compositeTemplateId\` sets which\\\\ndocuments are associated with particular composite templates. An example\\\\nof this usage is:\\\\n\\\\n\`\`\`\\\\n--5cd3320a-5aac-4453-b3a4-cbb52a4cba5d\\\\nContent-Type: application/pdf\\\\nContent-Disposition: file; filename=\\\\\\"eula.pdf\\\\\\"; documentId=1; compositeTemplateId=\\\\\\"1\\\\\\"\\\\nContent-Transfer-Encoding: base64\\\\n\`\`\`\\\\n\\\\n\\\\nOnly the following PDF Form FieldTypes are transformed to DocuSign\\\\ntabs:\\\\n\\\\n* CheckBox\\\\n* DateTime\\\\n* ListBox\\\\n* Numeric\\\\n* Password\\\\n* Radio\\\\n* Signature,\\\\n* Text\\\\n\\\\nField Properties that are transformed:\\\\n\\\\n* Read Only\\\\n* Required\\\\n* Max Length\\\\n* Positions\\\\n* Initial Data\\\\n\\\\nWhen transforming a PDF Form Digital Signature Field, the following rules apply.\\\\nAny other PDF Form Digital Signature Field will be transformed to a DocuSign Signature tab\\\\n\\\\n\\\\n| If the PDF Field Name contains                              | Then the DocuSign tab will be |\\\\n| :---------------------------------------------------------- | :---------------------------- |\\\\n| DocuSignSignHere or<br> eSignSignHere                       | Signature                     |\\\\n| DocuSignSignHereOptional or<br> eSignSignHereOptional       | Optional Signature            |\\\\n| DocuSignInitialHere or<br> eSignInitialHere                 | Initials                      |\\\\n| DocuSignInitialHereOptional or<br> eSignInitialHereOptional | Optional Initials             |\\\\n\\\\n\\\\nWhen transforming PDF Form Text Fields, the following rules apply.\\\\nAny other PDF Form Text Field will be transformed to a DocuSign data (text) tab.\\\\n\\\\n\\\\n| If the PDF Field Name contains                                        | Then the DocuSign tab will be |\\\\n| :-------------------------------------------------------------------- | :---------------------------- |\\\\n| DocuSignSignHere or<br> eSignSignHere                                 | Signature                     |\\\\n| DocuSignSignHereOptional or<br> eSignSignHereOptional                 | Optional Signature            |\\\\n| DocuSignInitialHere or<br> eSignInitialHere                           | Initials                      |\\\\n| DocuSignInitialHereOptional or<br> eSignInitialHereOptional           | Optional Initials             |\\\\n| DocuSignEnvelopeID or<br> eSignEnvelopeID                             | EnvelopeID                    |\\\\n| DocuSignCompany or<br> eSignCompany                                   | Company                       |\\\\n| DocuSignDateSigned or<br> eSignDateSigned                             | Date Signed                   |\\\\n| DocuSignTitle or<br> eSignTitle                                       | Title                         |\\\\n| DocuSignFullName or<br> eSignFullName                                 | Full Name                     |\\\\n| DocuSignSignerAttachmentOptional or<br> eSignSignerAttachmentOptional | Optional Signer Attachment    |\\\\n\\\\n\\\\nPDF Form Field Names that include \`DocuSignIgnoreTransform\`\\\\nor \`eSignIgnoreTransform\` will not be transformed.\\\\n\\\\nPDF Form Date fields that include \`DocuSignDateSigned\` or \`eSignDateSigned\`\\\\nwill be transformed\\\\nto Date Signed fields.\\\\n\\\\n\\\\nThis feature enables you to insert recipient name and email address\\\\nmerge fields into the email subject line when creating or sending from a\\\\ntemplate.\\\\n\\\\nThe merge fields, based on the recipient's \`roleName\`, are added to the\\\\n\`emailSubject\` when the template is created or when the template is used\\\\nto create an envelope. After a template sender adds the name and email\\\\ninformation for the recipient and sends the envelope, the recipient\\\\ninformation is automatically merged into the appropriate fields in the\\\\nemail subject line.\\\\n\\\\nBoth the sender and the recipients will see the information in the email\\\\nsubject line for any emails associated with the template. This provides\\\\nan easy way for senders to organize their envelope emails without having\\\\nto open an envelope to check the recipient.\\\\n\\\\nIf merging the recipient information into the subject line causes the\\\\nsubject line to exceed 100 characters, then any characters over the 100\\\\ncharacter limit are not included in the subject line. For cases where\\\\nthe recipient name or email is expected to be long, you should consider\\\\nplacing the merge field at the start of the email subject.\\\\n\\\\n* To add a recipient's name in the subject line add the following text\\\\n  in the \`emailSubject\` when creating the template or when sending an\\\\n  envelope from a template:\\\\n\\\\n   \`[[<roleName>_UserName]]\`\\\\n\\\\n   Example:\\\\n\\\\n   \`\\\\\\"emailSubject\\\\\\":\\\\\\"[[Signer 1_UserName]], Please sign this NDA\\\\\\"\`\\\\n\\\\n* To add a recipient's email address in the subject line add the\\\\n  following text in the emailSubject when creating the template or when\\\\n  sending an envelope from a template:\\\\n\\\\n   \`[[<roleName>_Email]]\`\\\\n\\\\n   Example:\\\\n\\\\n   \`\\\\\\"emailSubject\\\\\\":\\\\\\"[[Signer 1_Email]], Please sign this NDA\\\\\\"\`\\\\n\\\\nIn both cases \`<roleName>\` is the recipient's \`roleName\` in the template.\\\\n\\\\nFor cases where another recipient (such as an Agent, Editor, or\\\\nIntermediary recipient) is entering the name and email information for\\\\nthe recipient included in the email subject, then\\\\n\`[[<roleName>_UserName]]\` or \`[[<roleName>_Email]]\` is shown in the\\\\nemail subject.\\\\n\\\\n\\\\nThe following rules are used to determine the \`brandId\` used in an envelope:\\\\n\\\\n* If a \`brandId\` is specified in the envelope or template\\\\n  and that \`brandId\` is available to the account,\\\\n  that brand is used in the envelope.\\\\n* If more than one template is used in an envelope,\\\\n  and more than one \`brandId\` is specified,\\\\n  the first \`brandId\` specified is used throughout the envelope.\\\\n* In cases where no brand is specified,\\\\n  and the sender belongs to a group:\\\\n  - If there is only one brand associated with the group,\\\\n    then that brand is used in the envelope.\\\\n  - Otherwise, the account's default signing brand is used.\\\\n* For envelopes that do not meet any of the previous criteria,\\\\n  the account's default signing brand is used for the envelope.\\\\n\\\\n\\\\n\\\\nThe BCC Email address feature\\\\nis designed to provide a copy\\\\nof all email communications for external archiving purposes.\\\\nDocuSign recommends that envelopes sent using the BCC for Email Archive feature,\\\\nincluding the BCC Email Override option,\\\\ninclude additional signer authentication options.\\\\n\\\\nDo **not** use this feature\\\\nto send a copy of the envelope\\\\nto a recipient who does not need to sign.\\\\nUse a Carbon Copy or Certified Delivery Recipient type instead.\\\\n\\\\n\\\\nWhen an envelope with multiple templates is sent,\\\\nthe recipients from the templates are merged according to the template roles,\\\\nand empty recipients are removed.\\\\nWhen creating an envelope with multiple templates,\\\\nbut not sending it (keeping it in a created state),\\\\nduplicate recipients are not merged,\\\\nwhich could leave duplicate recipients in the envelope.\\\\n\\\\nTo prevent this,\\\\nthe query parameter \`merge_roles_on_draft\`\\\\nshould be added when posting a draft envelope (\`status\` is \`created\`)\\\\nwith multiple templates.\\\\nDoing this will merge template roles and remove empty recipients.\\\\n\\\\n\\\\nDocuSign recommends that the \`merge_roles_on_draft\` query\\\\nparameter be used any time you are creating an envelope with\\\\nmultiple templates and keeping it in draft (\`status\` is \`created\`) status.\\\\n\\\\n\\\\n[agentDef]:                 #/definitions/agent\\\\n[apirules]:                 /esign/guide/appendix/resource_limits.html#api-rules-and-limits\\\\n[ccDef]:                     #/definitions/carbonCopy\\\\n[certfiedDef]:               #/definitions/certifiedDelivery\\\\n[connectConfigurationsRes]: /esign/restapi/Connect/ConnectConfigurations/\\\\n[connectGuide]:             https://www.docusign.com/supportdocs/pdf/connect-guide.pdf\\\\n[devecenterrecipients]:     https://www.docusign.com/developer-center/explore/features/recipients\\\\n[documentDef]:               #/definitions/document\\\\n[editorDef]:                 #/definitions/editor\\\\n[envelopeDef]:               #/definitions/envelopeDefinition\\\\n[envelopeRecipientsDef]:     #/definitions/EnvelopeRecipients\\\\n[envelopeRecipientsRes]:    /esign/restapi/Envelopes/EnvelopeRecipients/\\\\n[envRecipientTabsDef]:       #/definitions/EnvelopeRecipientTabs\\\\n[envRecipientTabsRes]:      /esign/restapi/Envelopes/EnvelopeRecipientTabs/\\\\n[eventNotificationDef]:      #/definitions/eventNotification\\\\n[inPersonDef]:               #/definitions/inPersonSigner\\\\n[intermediaryDef]:           #/definitions/intermediary\\\\n[signerDef]:                 #/definitions/signer\\\\n\\"
  Envelopes_PostEnvelopes(input: envelopeDefinition_Input, accountId: String!, cdse_mode: String, completed_documents_only: String, merge_roles_on_draft: String): envelopeSummary
  \\"Retrieves the envelope status for the specified envelopes.\\"
  Envelopes_PutStatus(input: envelopeIdsRequest_Input, accountId: String!, email: String, from_date: String, start_position: String, to_date: String): envelopesInformation
  \\"The Put Envelopes endpoint provides the following functionality:\\\\n\\\\n* Sends the specified single draft envelope.\\\\nAdd {\\\\\\"status\\\\\\":\\\\\\"sent\\\\\\"} to the request body to send the envelope.\\\\n\\\\n* Voids the specified in-process envelope.\\\\nAdd {\\\\\\"status\\\\\\":\\\\\\"voided\\\\\\", \\\\\\"voidedReason\\\\\\":\\\\\\"The reason for voiding the envelope\\\\\\"} to the request body to void the envelope.\\\\n\\\\n* Replaces the current email subject and message for a draft envelope.\\\\nAdd {\\\\\\"emailSubject\\\\\\":\\\\\\"subject\\\\\\",  \\\\\\"emailBlurb\\\\\\":\\\\\\"message\\\\\\"}  to the request body to modify the subject and message.\\\\n\\\\n* Place the envelope documents and envelope metadata in a purge queue so that this information is removed from the DocuSign system.\\\\nAdd {\\\\\\"purgeState\\\\\\":\\\\\\"purge type\\\\\\"} to the request body.\\\\n\\\\n*Additional information on purging documents*\\\\n\\\\nThe purge request can only be used for completed envelopes that are not marked as the authoritative copy. The requesting user must have permission to purge documents and must be the sender (the requesting user can act as the sender using Send On Behalf Of).\\\\n\\\\n\\\\nWhen the purge request is initiated the envelope documents, or documents and envelope metadata, are placed in a purge queue for deletion in 14 days. A warning email notification is sent to the sender and recipients associated with the envelope, notifying them that the envelope documents will be deleted in 14 days and providing a link to the documents. A second email is sent 7 days later with the same message. At the end of the 14-day period, the envelope documents are deleted from the system.\\\\n\\\\nIf \`purgeState=\\\\\\"documents_queued\\\\\\"\` is used in the request, then only the documents are deleted and any corresponding attachments and tabs remain in the DocuSign system. If \`purgeState= \\\\\\"documents_and_metadata_queued\\\\\\"\` is used in the request, then the documents, attachments, and tabs are deleted.\\"
  Envelopes_PutEnvelope(input: Envelopes_Input, accountId: String!, envelopeId: String!, advanced_update: String, resend_envelope: String): envelopeUpdateSummary
  \\"Delete one or more attachments from a DRAFT envelope.\\"
  Attachments_DeleteAttachments(input: envelopeAttachmentsRequest_Input, accountId: String!, envelopeId: String!): envelopeAttachmentsResult
  \\"Add one or more attachments to a DRAFT or IN-PROCESS envelope.\\"
  Attachments_PutAttachments(input: envelopeAttachmentsRequest_Input, accountId: String!, envelopeId: String!): envelopeAttachmentsResult
  \\"Add an attachment to a DRAFT or IN-PROCESS envelope.\\"
  Attachments_PutAttachment(input: attachment_Input, accountId: String!, envelopeId: String!, attachmentId: String!): envelopeAttachmentsResult
  \\"Deletes envelope custom fields for draft and in-process envelopes.\\"
  CustomFields_DeleteCustomFields(input: AccountCustomFields_Input, accountId: String!, envelopeId: String!): AccountCustomFields
  \\"Updates the envelope custom fields for draft and in-process envelopes.\\\\n\\\\nEach custom field used in an envelope must have a unique name.\\"
  CustomFields_PostCustomFields(input: AccountCustomFields_Input, accountId: String!, envelopeId: String!): AccountCustomFields
  \\"Updates the envelope custom fields in draft and in-process envelopes.\\\\n\\\\nEach custom field used in an envelope must have a unique name.\\\\n\\"
  CustomFields_PutCustomFields(input: AccountCustomFields_Input, accountId: String!, envelopeId: String!): AccountCustomFields
  \\"Deletes one or more documents from an existing draft envelope.\\"
  Documents_DeleteDocuments(input: envelopeDefinition_Input, accountId: String!, envelopeId: String!): EnvelopeDocuments
  \\"Adds one or more documents to an existing envelope document.\\"
  Documents_PutDocuments(input: envelopeDefinition_Input, accountId: String!, envelopeId: String!, apply_document_fields: String): EnvelopeDocuments
  \\"Adds a document to an existing draft envelope.\\"
  Documents_PutDocument(accountId: String!, envelopeId: String!, documentId: String!, apply_document_fields: String): Any
  \\"Deletes custom document fields from an existing envelope document.\\"
  DocumentFields_DeleteDocumentFields(input: EnvelopeDocumentFields_Input, accountId: String!, envelopeId: String!, documentId: String!): EnvelopeDocumentFields
  \\"Creates custom document fields in an existing envelope document.\\"
  DocumentFields_PostDocumentFields(input: EnvelopeDocumentFields_Input, accountId: String!, envelopeId: String!, documentId: String!): EnvelopeDocumentFields
  \\"Updates existing custom document fields in an existing envelope document.\\"
  DocumentFields_PutDocumentFields(input: EnvelopeDocumentFields_Input, accountId: String!, envelopeId: String!, documentId: String!): EnvelopeDocumentFields
  \\"Deletes a page from a document in an envelope based on the page number.\\"
  Pages_DeletePage(accountId: String!, envelopeId: String!, documentId: String!, pageNumber: String!): Any
  \\"Rotates page image from an envelope for display. The page image can be rotated to the left or right.\\"
  Pages_PutPageImage(input: pageRequest_Input, accountId: String!, envelopeId: String!, documentId: String!, pageNumber: String!): Any
  \\"Adds templates to a document in the specified envelope.\\"
  Templates_PostDocumentTemplates(input: documentTemplateList_Input, accountId: String!, envelopeId: String!, documentId: String!): documentTemplateList
  \\"Deletes the specified template from a document in an existing envelope.\\"
  Templates_DeleteDocumentTemplates(accountId: String!, envelopeId: String!, documentId: String!, templateId: String!): Any
  \\"Deletes all existing email override settings for the envelope. If you want to delete an individual email override setting, use the PUT and set the value to an empty string. Note that deleting email settings will only affect email communications that occur after the deletion and the normal account email settings are used for future email communications.\\"
  EmailSettings_DeleteEmailSettings(accountId: String!, envelopeId: String!): EnvelopeEmailSettings
  \\"Adds email override settings, changing the email address to reply to an email address, name, or the BCC for email archive information, for the envelope. Note that adding email settings will only affect email communications that occur after the addition was made.\\"
  EmailSettings_PostEmailSettings(input: EnvelopeEmailSettings_Input, accountId: String!, envelopeId: String!): EnvelopeEmailSettings
  \\"Updates the existing email override settings for the specified envelope. Note that modifying email settings will only affect email communications that occur after the modification was made.\\\\n\\\\nThis can also be used to delete an individual email override setting by using an empty string for the value to be deleted.\\"
  EmailSettings_PutEmailSettings(input: EnvelopeEmailSettings_Input, accountId: String!, envelopeId: String!): EnvelopeEmailSettings
  \\"Deletes the lock from the specified envelope. The \`X-DocuSign-Edit\` header must be included in the request.\\"
  Lock_DeleteEnvelopeLock(accountId: String!, envelopeId: String!): EnvelopeLocks
  \\"Locks the specified envelope, and sets the time until the lock expires, to prevent other users or recipients from accessing and changing the envelope.\\"
  Lock_PostEnvelopeLock(input: lockRequest_Input, accountId: String!, envelopeId: String!): EnvelopeLocks
  \\"Updates the lock duration time or update the \`lockedByApp\` property information for the specified envelope. The user and integrator key must match the user specified by the \`lockByUser\` property and integrator key information and the \`X-DocuSign-Edit\` header must be included or an error will be generated.\\"
  Lock_PutEnvelopeLock(input: lockRequest_Input, accountId: String!, envelopeId: String!): EnvelopeLocks
  \\"Sets envelope notification (Reminders/Expirations) structure for an existing envelope.\\"
  Notification_PutEnvelopesEnvelopeIdNotification(input: notification_Input, accountId: String!, envelopeId: String!): notification
  \\"Deletes one or more recipients from a draft or sent envelope. Recipients to be deleted are listed in the request, with the \`recipientId\` being used as the key for deleting recipients.\\\\n\\\\nIf the envelope is \`In Process\`, meaning that it has been sent and has not  been completed or voided, recipients that have completed their actions cannot be deleted.\\"
  Recipients_DeleteRecipients(input: EnvelopeRecipients_Input, accountId: String!, envelopeId: String!): EnvelopeRecipients
  \\"Adds one or more recipients to an envelope.\\\\n\\\\nFor an in process envelope, one that has been sent and has not been completed or voided, an email is sent to a new recipient when they are reached in the routing order. If the new recipient's routing order is before or the same as the envelope's next recipient, an email is only sent if the optional \`resend_envelope\` query string is set to **true**.\\"
  Recipients_PostRecipients(input: EnvelopeRecipients_Input, accountId: String!, envelopeId: String!, resend_envelope: String): EnvelopeRecipients
  \\"Updates recipients in a draft envelope or corrects recipient information for an in process envelope. \\\\n\\\\nFor draft envelopes, you can edit the following properties: \`email\`, \`userName\`, \`routingOrder\`, \`faxNumber\`, \`deliveryMethod\`, \`accessCode\`, and \`requireIdLookup\`.\\\\n\\\\nOnce an envelope has been sent, you can only edit: \`email\`, \`userName\`, \`signerName\`, \`routingOrder\`, \`faxNumber\`, and \`deliveryMethod\`. You can also select to resend an envelope by using the \`resend_envelope\` option.\\\\n\\\\nIf you send information for a recipient that does not already exist in a draft envelope, the recipient is added to the envelope (similar to the POST).\\"
  Recipients_PutRecipients(input: EnvelopeRecipients_Input, accountId: String!, envelopeId: String!, resend_envelope: String): recipientsUpdateSummary
  \\"Updates document visibility for the recipients\\"
  Recipients_PutRecipientsDocumentVisibility(input: EnvelopeDocumentVisibility_Input, accountId: String!, envelopeId: String!): EnvelopeDocumentVisibility
  \\"Deletes a recipient from a \`draft\` or \`sent\` envelope.\\\\n\\\\nIf the envelope is \\\\\\"In Process\\\\\\" (has been sent and is not completed or voided), recipients that have completed their actions cannot be deleted.\\"
  Recipients_DeleteRecipient(accountId: String!, envelopeId: String!, recipientId: String!): EnvelopeRecipients
  \\"Deletes the bulk recipient file from an envelope. This cannot be used if the envelope has been sent.\\\\n\\\\nAfter using this, the \`bulkRecipientsUri\` property is not returned in subsequent GET calls for the envelope, but the recipient will remain as a bulk recipient.\\"
  Recipients_DeleteBulkRecipientsFile(accountId: String!, envelopeId: String!, recipientId: String!): bulkRecipientsUpdateResponse
  \\"Updates the bulk recipients in a draft envelope using a file upload. The Content-Type supported for uploading a bulk recipient file is CSV (text/csv).\\\\n\\\\nThe REST API does not support modifying individual rows or values in the bulk recipients file. It only allows the entire file to be added or replaced with a new file.\\"
  Recipients_PutBulkRecipients(input: bulkRecipientsRequest_Input, accountId: String!, envelopeId: String!, recipientId: String!): bulkRecipientsSummaryResponse
  \\"Updates document visibility for the recipients\\"
  Recipients_PutRecipientDocumentVisibility(input: EnvelopeDocumentVisibility_Input, accountId: String!, envelopeId: String!, recipientId: String!): EnvelopeDocumentVisibility
  \\"Updates the initials image for a signer that does not have a DocuSign account. The supported image formats for this file are: gif, png, jpeg, and bmp. The file size must be less than 200K.\\\\n\\\\nFor the Authentication/Authorization for this call, the credentials must match the sender of the envelope, the recipient must be an accountless signer or in person signer. The account must have the \`CanSendEnvelope\` property set to **true** and the \`ExpressSendOnly\` property in \`SendingUser\` structure must be set to **false**.\\"
  Recipients_PutRecipientInitialsImage(accountId: String!, envelopeId: String!, recipientId: String!): Any
  \\"Updates the signature image for an accountless signer. The supported image formats for this file are: gif, png, jpeg, and bmp. The file size must be less than 200K.\\\\n\\\\nFor the Authentication/Authorization for this call, the credentials must match the sender of the envelope, the recipient must be an accountless signer or in person signer. The account must have the \`CanSendEnvelope\` property set to **true** and the \`ExpressSendOnly\` property in \`SendingUser\` structure must be set to **false**.\\"
  Recipients_PutRecipientSignatureImage(accountId: String!, envelopeId: String!, recipientId: String!): Any
  \\"Deletes one or more tabs associated with a recipient in a draft envelope.\\"
  Recipients_DeleteRecipientTabs(input: EnvelopeRecipientTabs_Input, accountId: String!, envelopeId: String!, recipientId: String!): EnvelopeRecipientTabs
  \\"Adds one or more tabs for a recipient.\\"
  Recipients_PostRecipientTabs(input: EnvelopeRecipientTabs_Input, accountId: String!, envelopeId: String!, recipientId: String!): EnvelopeRecipientTabs
  \\"Updates one or more tabs for a recipient in a draft envelope.\\"
  Recipients_PutRecipientTabs(input: EnvelopeRecipientTabs_Input, accountId: String!, envelopeId: String!, recipientId: String!): EnvelopeRecipientTabs
  \\"Adds templates to the specified envelope.\\"
  Templates_PostEnvelopeTemplates(input: documentTemplateList_Input, accountId: String!, envelopeId: String!): documentTemplateList
  \\"Returns a URL that allows you to embed the envelope correction view of the DocuSign UI in your applications.\\\\n\\\\nImportant: iFrames should not be used for embedded operations on mobile devices due to screen space issues. For iOS devices DocuSign recommends using a WebView. \\"
  Views_PostEnvelopeCorrectView(input: correctViewRequest_Input, accountId: String!, envelopeId: String!): EnvelopeViews
  \\"Returns a URL that allows you to embed the edit view of the DocuSign UI in your applications. This is a one-time use login token that allows the user to be placed into the DocuSign editing view. \\\\n\\\\nUpon sending completion, the user is returned to the return URL provided by the API application.\\\\n\\\\nImportant: iFrames should not be used for embedded operations on mobile devices due to screen space issues. For iOS devices DocuSign recommends using a WebView. \\"
  Views_PostEnvelopeEditView(input: returnUrlRequest_Input, accountId: String!, envelopeId: String!): EnvelopeViews
  \\"Returns a URL that enables you to embed the recipient view of the DocuSign UI in your applications. If the recipient is a signer, then the view will provide the signing ceremony.\\\\n\\\\n\\\\nThis method is only used with envelopes in the \`sent\` status.\\\\n\\\\nYour application is responsible for authenticating the identity of the recipient or signer when you use this method. Use the parameters \`assertionId\`, \`authenticationInstant\`, \`authenticationMethod\`, \`clientUserId\`, and \`securityDomain\` to record information on how the recipient was authenticated. At a minimum, \`authenticationMethod\` and \`clientUserId\` are required. The information that you provide is included in the envelope's certificate of completion.\\\\n\\\\nAfter the signer completes or ends the signing ceremony, DocuSign will redirect the user's browser back to your app via the \`returnUrl\` that you supply. DocuSIgn appends an \`event\` query parameter to the URL with the outcome of the signing ceremony. Your app should use the event parameter to determine the next step for the envelope. Don't fetch the envelope's status via Envelopes: get or a similar method; that could break the DocuSign rule against polling.\\\\n\\\\nThe URL returned by this method is valid for one use. It must be used/displayed within a couple of minutes after being generated. Once the recipient is redirected to the recipient view, they must interact with the DocuSign system periodically or their session will time out.\\\\n\\\\nBecause the URL is time-limited, it should not be stored or sent via email. Immediately redirect the user's browser to the URL after you receive it.\\\\n\\\\nIf you want to invite someone to an embedded signing session via email, the email invitation's URL must be to your application. When invoked, your app should request a recipientView URL from DocuSign and then redirect the signer to that URL.\\\\n\\\\nAfter the recipient completes the recipient view (or signing ceremony), they are redirected to your application. Your application can recover state information about the transaction by storing information in a cookie, or by including query parameters in the \`returnUrl\` field. Eg, \`https://myapp.eg.com/docusign_return?myState=12345\` When the user is redirected to your app, the \`event\` query parameter will be appended. In this example, prevent spoofing by not using a guessable value as the state value.\\"
  Views_PostEnvelopeRecipientView(input: recipientViewRequest_Input, accountId: String!, envelopeId: String!): EnvelopeViews
  \\"Returns a URL that enables you to embed the sender view of the DocuSign UI in your applications. \\\\n\\\\nThe returned URL can only be redirected to immediately after it is generated. It can only be used once.\\\\nTherefore, request the URL immediately before you redirect your user to it.\\\\n\\\\nFor the best user experience, don't use an iFrame. For iOS devices DocuSign recommends using a WebView.\\\\n\\\\nMultiple solutions are available for maintaining your\\\\nclient state. See the \\\\\\"Maintaining State\\\\\\" section of the [Embedded Signing introduction.](../../../../guide/usage/embedded_signing.html#maintaining-state)\\\\n\\\\nAfter the user has completed the sending view, their browser is redirected to the \`returnUrl\` you supplied.\\\\n\\\\nBy default, if the envelope already contains one or more documents, DocuSign will initially show the document tagging view when you redirect to the URL. \\\\n\\\\nTo start with the envelope's recipients and documents view instead, examine the URL in the method's response. \\\\nThen change the query parameter from \`send=1\` to \`send=0\` to start with the recipients/documents view.\\"
  Views_PostEnvelopeSenderView(input: returnUrlRequest_Input, accountId: String!, envelopeId: String!): EnvelopeViews
  \\"Moves an envelope from its current folder to the specified folder.\\"
  Folders_PutFolderById(input: foldersRequest_Input, accountId: String!, folderId: String!): Folders
  \\"Deletes an existing user group.\\"
  Groups_DeleteGroups(input: Groups_Input, accountId: String!): Groups
  \\"Creates one or more groups for the account.\\\\n\\\\nGroups can be used to help manage users by associating users with a group. You can associate a group with a Permission Profile, which sets the user permissions for users in that group without having to set the \`userSettings\` property for each user. You are not required to set Permission Profiles for a group, but it makes it easier to manage user permissions for a large number of users. You can also use groups with template sharing to limit user access to templates.\\"
  Groups_PostGroups(input: Groups_Input, accountId: String!): Groups
  \\"Updates the group name and modifies, or sets, the permission profile for the group.\\"
  Groups_PutGroups(input: Groups_Input, accountId: String!): Groups
  \\"Deletes brand information from the requested group.\\"
  Brands_DeleteGroupBrands(input: brandsRequest_Input, accountId: String!, groupId: String!): AccountBrands
  \\"Adds group brand ID information to a group.\\"
  Brands_PutGroupBrands(input: brandsRequest_Input, accountId: String!, groupId: String!): AccountBrands
  \\"Deletes one or more users from a group.\\\\n\\"
  Groups_DeleteGroupUsers(input: userInfoList_Input, accountId: String!, groupId: String!): GroupUsers
  \\"Adds one or more users to an existing group.\\"
  Groups_PutGroupUsers(input: userInfoList_Input, accountId: String!, groupId: String!): GroupUsers
  \\"Creates a new permission profile in the specified account.\\"
  PermissionProfiles_PostPermissionProfiles(input: AccountPermissionProfiles_Input, accountId: String!, include: String): AccountPermissionProfiles
  \\"Deletes a permissions profile within the specified account.\\"
  PermissionProfiles_DeletePermissionProfiles(accountId: String!, permissionProfileId: String!): Any
  \\"Updates a permission profile within the specified account.\\"
  PermissionProfiles_PutPermissionProfiles(input: AccountPermissionProfiles_Input, accountId: String!, permissionProfileId: String!, include: String): AccountPermissionProfiles
  \\"Deletes one or more PowerForms\\"
  PowerForms_DeletePowerFormsList(input: powerFormsRequest_Input, accountId: String!): powerFormsResponse
  \\"Creates a new PowerForm.\\"
  PowerForms_PostPowerForm(input: PowerForms_Input, accountId: String!): PowerForms
  \\"Delete a PowerForm.\\"
  PowerForms_DeletePowerForm(accountId: String!, powerFormId: String!): Any
  \\"Creates a new PowerForm.\\"
  PowerForms_PutPowerForm(input: PowerForms_Input, accountId: String!, powerFormId: String!): PowerForms
  \\"Updates the account settings for the specified account.\\"
  Settings_PutSettings(input: accountSettingsInformation_Input, accountId: String!): Any
  \\"Deletes configuration information for the eNote eOriginal integration.\\"
  ENoteConfiguration_DeleteENoteConfiguration(accountId: String!): Any
  \\"Updates configuration information for the eNote eOriginal integration.\\"
  ENoteConfiguration_PutENoteConfiguration(input: ENoteConfigurations_Input, accountId: String!): ENoteConfigurations
  \\"Update the password rules\\"
  AccountPasswordRules_PutAccountPasswordRules(input: AccountPasswordRules_Input, accountId: String!): AccountPasswordRules
  \\"Modifies tab settings for specified account\\"
  TabSettings_PutSettings(input: AccountTabSettings_Input, accountId: String!): AccountTabSettings
  \\"Reserved: Sets the shared access information for one or more users.\\"
  SharedAccess_PutSharedAccess(input: accountSharedAccess_Input, accountId: String!, item_type: String, user_ids: String): accountSharedAccess
  \\"Deletes one or more signing groups in the specified account.\\"
  SigningGroups_DeleteSigningGroups(input: signingGroupInformation_Input, accountId: String!): signingGroupInformation
  \\"Creates one or more signing groups. \\\\n\\\\nMultiple signing groups can be created in one call. Only users with account administrator privileges can create signing groups. \\\\n\\\\nAn account can have a maximum of 50 signing groups. Each signing group can have a maximum of 50 group members.\\\\n \\\\nSigning groups can be used by any account user.\\"
  SigningGroups_PostSigningGroups(input: signingGroupInformation_Input, accountId: String!): signingGroupInformation
  \\"Updates the name of one or more existing signing groups. \\"
  SigningGroups_PutSigningGroups(input: signingGroupInformation_Input, accountId: String!): signingGroupInformation
  \\"Updates signing group name and member information. You can also add new members to the signing group. A signing group can have a maximum of 50 members. \\"
  SigningGroups_PutSigningGroup(input: SigningGroups_Input, accountId: String!, signingGroupId: String!): SigningGroups
  \\"Deletes  one or more members from the specified signing group. \\"
  SigningGroups_DeleteSigningGroupUsers(input: SigningGroupUsers_Input, accountId: String!, signingGroupId: String!): SigningGroupUsers
  \\"Adds one or more new members to a signing group. A signing group can have a maximum of 50 members. \\"
  SigningGroups_PutSigningGroupUsers(input: SigningGroupUsers_Input, accountId: String!, signingGroupId: String!): SigningGroupUsers
  \\"Creates a tab with pre-defined properties, such as a text tab with a certain font type and validation pattern. Users can access the custom tabs when sending documents through the DocuSign web application.\\\\n\\\\nCustom tabs can be created for approve, checkbox, company, date, date signed, decline, email, email address, envelope ID, first name, formula, full name, initial here, last name, list, note, number, radio, sign here, signer attachment, SSN, text, title, and zip tabs.\\"
  Tabs_PostTabDefinitions(input: CustomTabs_Input, accountId: String!): CustomTabs
  \\"Deletes the custom from the specified account.\\"
  Tab_DeleteCustomTab(accountId: String!, customTabId: String!): Any
  \\"Updates the information in a custom tab for the specified account.\\"
  Tab_PutCustomTab(input: CustomTabs_Input, accountId: String!, customTabId: String!): CustomTabs
  \\"Creates a template definition using a multipart request.\\\\n\\\\n\\\\nCall this endpoint to insert a recipient name and email address merge fields into the email subject line when creating or sending from a template.\\\\n\\\\nThe merge fields, based on the recipient's role name, are added to the \`emailSubject\` property when the template is created or when the template is used to create an envelope. After a template sender adds the name and email information for the recipient and sends the envelope, the recipient information is automatically merged into the appropriate fields in the email subject line.\\\\n\\\\nBoth the sender and the recipients will see the information in the email subject line for any emails associated with the template. This provides an easy way for senders to organize their envelope emails without having to open an envelope to check the recipient.\\\\n\\\\nTo add a recipient's name in the subject line add the following text in the \`emailSubject\` property when creating the template or when sending an envelope from a template:\\\\n\\\\n\`[[<roleName>_UserName]]\`\\\\n\\\\nExample:\\\\n\\\\n\`\\\\\\"emailSubject\\\\\\":\\\\\\"[[Signer 1_UserName]], Please sign this NDA\\\\\\",\`\\\\n\\\\nTo add a recipient's email address in the subject line add the following text in the \`emailSubject\` property when creating the template or when sending an envelope from a template:\\\\n\\\\n\`[[<roleName>_Email]]\`\\\\n\\\\nExample:\\\\n\\\\n\`\\\\\\"emailSubject\\\\\\":\\\\\\"[[Signer 1_Email]], Please sign this NDA\\\\\\",\`\\\\n\\\\n\\\\nIn both cases the <roleName> is the recipient's contents of the \`roleName\` property in the template.\\\\n\\\\nFor cases where another recipient (such as an Agent, Editor, or Intermediary recipient) is entering the name and email information for the recipient included in the email subject, then \`[[<roleName>_UserName]]\` or \`[[<roleName>_Email]]\` is shown in the email subject.\\"
  Templates_PostTemplates(input: Templates_Input, accountId: String!): templateSummary
  \\"Updates an existing template.\\"
  Templates_PutTemplate(input: Templates_Input, accountId: String!, templateId: String!): envelopeUpdateSummary
  \\"Deletes envelope custom fields in a template.\\"
  CustomFields_DeleteTemplateCustomFields(input: AccountCustomFields_Input, accountId: String!, templateId: String!): AccountCustomFields
  \\"Creates custom document fields in an existing template document.\\"
  CustomFields_PostTemplateCustomFields(input: AccountCustomFields_Input, accountId: String!, templateId: String!): AccountCustomFields
  \\"Updates the custom fields in a template.\\\\n\\\\nEach custom field used in a template must have a unique name.\\"
  CustomFields_PutTemplateCustomFields(input: AccountCustomFields_Input, accountId: String!, templateId: String!): AccountCustomFields
  \\"Deletes one or more documents from an existing template.\\"
  Documents_DeleteTemplateDocuments(input: envelopeDefinition_Input, accountId: String!, templateId: String!): TemplateDocuments
  \\"Adds one or more documents to an existing template document.\\"
  Documents_PutTemplateDocuments(input: envelopeDefinition_Input, accountId: String!, templateId: String!, apply_document_fields: String): TemplateDocuments
  \\"Adds the specified document to an existing template document.\\"
  Documents_PutTemplateDocument(input: envelopeDefinition_Input, accountId: String!, templateId: String!, documentId: String!, apply_document_fields: String, is_envelope_definition: String): envelopeDocument
  \\"Deletes custom document fields from an existing template document.\\"
  DocumentFields_DeleteTemplateDocumentFields(input: EnvelopeDocumentFields_Input, accountId: String!, templateId: String!, documentId: String!): EnvelopeDocumentFields
  \\"Creates custom document fields in an existing template document.\\"
  DocumentFields_PostTemplateDocumentFields(input: EnvelopeDocumentFields_Input, accountId: String!, templateId: String!, documentId: String!): EnvelopeDocumentFields
  \\"Updates existing custom document fields in an existing template document.\\"
  DocumentFields_PutTemplateDocumentFields(input: EnvelopeDocumentFields_Input, accountId: String!, templateId: String!, documentId: String!): EnvelopeDocumentFields
  \\"Deletes a page from a document in a template based on the page number.\\"
  Pages_DeleteTemplatePage(input: pageRequest_Input, accountId: String!, templateId: String!, documentId: String!, pageNumber: String!): Any
  \\"Rotates page image from a template for display. The page image can be rotated to the left or right.\\"
  Pages_PutTemplatePageImage(input: pageRequest_Input, accountId: String!, templateId: String!, documentId: String!, pageNumber: String!): Any
  \\"Deletes the lock from the specified template. The \`X-DocuSign-Edit\` header must be included in the request.\\"
  Lock_DeleteTemplateLock(input: lockRequest_Input, accountId: String!, templateId: String!): EnvelopeLocks
  \\"Locks the specified template, and sets the time until the lock expires, to prevent other users or recipients from accessing and changing the template.\\"
  Lock_PostTemplateLock(input: lockRequest_Input, accountId: String!, templateId: String!): EnvelopeLocks
  \\"Updates the lock duration time or update the \`lockedByApp\` property information for the specified template. The user and integrator key must match the user specified by the \`lockByUser\` property and integrator key information and the \`X-DocuSign-Edit\` header must be included or an error will be generated.\\"
  Lock_PutTemplateLock(input: lockRequest_Input, accountId: String!, templateId: String!): EnvelopeLocks
  \\"Updates the notification structure for an existing template. Use this endpoint to set reminder and expiration notifications.\\"
  Notification_PutTemplatesTemplateIdNotification(input: templateNotificationRequest_Input, accountId: String!, templateId: String!): notification
  \\"Deletes one or more recipients from a template. Recipients to be deleted are listed in the request, with the \`recipientId\` being used as the key for deleting recipients.\\"
  Recipients_DeleteTemplateRecipients(input: templateRecipients_Input, accountId: String!, templateId: String!): EnvelopeRecipients
  \\"Adds one or more recipients to a template.\\"
  Recipients_PostTemplateRecipients(input: templateRecipients_Input, accountId: String!, templateId: String!, resend_envelope: String): EnvelopeRecipients
  \\"Updates recipients in a template. \\\\n\\\\nYou can edit the following properties: \`email\`, \`userName\`, \`routingOrder\`, \`faxNumber\`, \`deliveryMethod\`, \`accessCode\`, and \`requireIdLookup\`.\\"
  Recipients_PutTemplateRecipients(input: templateRecipients_Input, accountId: String!, templateId: String!, resend_envelope: String): recipientsUpdateSummary
  \\"Updates document visibility for the recipients\\"
  Recipients_PutTemplateRecipientsDocumentVisibility(input: EnvelopeDocumentVisibility_Input, accountId: String!, templateId: String!): EnvelopeDocumentVisibility
  \\"Deletes the specified recipient file from the specified template.\\"
  Recipients_DeleteTemplateRecipient(input: templateRecipients_Input, accountId: String!, templateId: String!, recipientId: String!): EnvelopeRecipients
  \\"Deletes the bulk recipient list on a template.\\"
  Recipients_DeleteTemplateBulkRecipientsFile(accountId: String!, templateId: String!, recipientId: String!): bulkRecipientsUpdateResponse
  \\"Updates the bulk recipients in a template using a file upload. The Content-Type supported for uploading a bulk recipient file is CSV (text/csv).\\\\n\\\\nThe REST API does not support modifying individual rows or values in the bulk recipients file. It only allows the entire file to be added or replaced with a new file.\\"
  Recipients_PutTemplateBulkRecipients(input: bulkRecipientsRequest_Input, accountId: String!, templateId: String!, recipientId: String!): bulkRecipientsSummaryResponse
  \\"Updates document visibility for the recipients\\"
  Recipients_PutTemplateRecipientDocumentVisibility(input: EnvelopeDocumentVisibility_Input, accountId: String!, templateId: String!, recipientId: String!): EnvelopeDocumentVisibility
  \\"Deletes one or more tabs associated with a recipient in a template.\\"
  Recipients_DeleteTemplateRecipientTabs(input: EnvelopeRecipientTabs_Input, accountId: String!, templateId: String!, recipientId: String!): EnvelopeRecipientTabs
  \\"Adds one or more tabs for a recipient.\\"
  Recipients_PostTemplateRecipientTabs(input: EnvelopeRecipientTabs_Input, accountId: String!, templateId: String!, recipientId: String!): EnvelopeRecipientTabs
  \\"Updates one or more tabs for a recipient in a template.\\"
  Recipients_PutTemplateRecipientTabs(input: EnvelopeRecipientTabs_Input, accountId: String!, templateId: String!, recipientId: String!): EnvelopeRecipientTabs
  \\"Provides a URL to start an edit view of the Template UI\\"
  Views_PostTemplateEditView(input: returnUrlRequest_Input, accountId: String!, templateId: String!): EnvelopeViews
  \\"Removes a member group's sharing permissions for a specified template.\\"
  Templates_DeleteTemplatePart(input: Groups_Input, accountId: String!, templateId: String!, templatePart: String!): Groups
  \\"Shares a template with the specified members group.\\"
  Templates_PutTemplatePart(input: Groups_Input, accountId: String!, templateId: String!, templatePart: String!): Groups
  \\"This closes one or more user records in the account. Users are never deleted from an account, but closing a user prevents them from using account functions.\\\\n\\\\nThe response returns whether the API execution was successful (200 - OK) or  if it failed. The response contains a user structure similar to the request and includes the user changes. If an error occurred during the DELETE operation for any of the users, the response for that user contains an \`errorDetails\` node with \`errorCode\` and \`message\` properties.\\"
  Users_DeleteUsers(input: userInfoList_Input, accountId: String!): GroupUsers
  \\"Adds new users to your account. Set the \`userSettings\` property in the request to specify the actions the users can perform on the account.\\"
  Users_PostUsers(input: newUsersDefinition_Input, accountId: String!): newUsersSummary
  \\"Change one or more user in the specified account.\\"
  Users_PutUsers(input: userInformationList_Input, accountId: String!): userInformationList
  \\"Updates the specified user information.\\"
  User_PutUser(input: Users_Input, accountId: String!, userId: String!): Users
  \\"Deletes the user authentication information for one or more cloud storage providers. The next time the user tries to access the cloud storage provider, they must pass normal authentication.\\"
  CloudStorage_DeleteCloudStorageProviders(input: CloudStorageProviders_Input, accountId: String!, userId: String!): CloudStorageProviders
  \\"Configures the redirect URL information  for one or more cloud storage providers for the specified user. The redirect URL is added to the authentication URL to complete the return route.\\"
  CloudStorage_PostCloudStorage(input: CloudStorageProviders_Input, accountId: String!, userId: String!): CloudStorageProviders
  \\"Deletes the user authentication information for the specified cloud storage provider. The next time the user tries to access the cloud storage provider, they must pass normal authentication for this cloud storage provider.\\"
  CloudStorage_DeleteCloudStorage(accountId: String!, userId: String!, serviceId: String!): CloudStorageProviders
  \\"Deletes the specified custom user settings for a single user.\\\\n\\\\n\\\\nIf the custom user settings you want to delete are grouped, you must include the following information in the header, after Content-Type, in the request:\\\\n\\\\n\`X-DocuSign-User-Settings-Key:group_name\`\\\\n\\\\nWhere the \`group_name\` is your designated name for the group of customer user settings.\\\\n\\\\nIf the extra header information is not included, only the custom user settings that were added without a group are deleted.\\"
  UserCustomSettings_DeleteCustomSettings(input: UserCustomSettings_Input, accountId: String!, userId: String!): UserCustomSettings
  \\"Adds or updates custom user settings for the specified user.\\\\n\\\\n\\\\nCustom settings provide a flexible way to store and retrieve custom user information that you can use in your own system.\\\\n\\\\n**Important**: There is a limit on the size for all the custom user settings for a single user. The limit is 4,000 characters, which includes the XML and JSON structure for the settings.\\\\n\\\\n\\\\nYou can group custom user settings when adding them. Grouping allows you to retrieve settings that are in a specific group, instead of retrieving all the user custom settings.\\\\n\\\\nTo group custom user settings, add the following information in the header, after Content-Type:\\\\n\\\\n\`X-DocuSign-User-Settings-Key:group_name\`\\\\n\\\\nWhere the \`group_name\` is your designated name for the group of customer user settings. Grouping is shown in the Example Request Body below.\\\\n\\\\nWhen getting or deleting grouped custom user settings, you must include the extra header information.\\\\n\\\\nGrouping custom user settings is not required and if the extra header information is not included, the custom user settings are added normally and can be retrieved or deleted without including the additional header.\\"
  UserCustomSettings_PutCustomSettings(input: UserCustomSettings_Input, accountId: String!, userId: String!): UserCustomSettings
  \\"Updates the user's detail information, profile information, privacy settings, and personal information in the user ID card.\\\\n\\\\nYou can also change a user's name by changing the information in the \`userDetails\` property. When changing a user's name, you can either change the information in the \`userName\` property OR change the information in \`firstName\`, \`middleName\`, \`lastName, suffixName\`, and \`title\` properties. Changes to \`firstName\`, \`middleName\`, \`lastName\`, \`suffixName\`, and \`title\` properties take precedence over changes to the \`userName\` property.\\"
  UserProfile_PutProfile(input: UserProfiles_Input, accountId: String!, userId: String!): Any
  \\"Deletes the user profile image from the  specified user's profile.\\\\n\\\\nThe userId parameter specified in the endpoint must match the authenticated user's user ID and the user must be a member of the specified account.\\"
  UserProfileImage_DeleteUserProfileImage(accountId: String!, userId: String!): Any
  \\"Updates the user profile image by uploading an image to the user profile.\\\\n\\\\nThe supported image formats are: gif, png, jpeg, and bmp. The file must be less than 200K. For best viewing results, DocuSign recommends that the image is no more than 79 pixels wide and high.\\"
  UserProfileImage_PutUserProfileImage(accountId: String!, userId: String!): Any
  \\"Updates the account settings list and email notification types for the specified user.\\"
  UserSettings_PutUserSettings(input: userSettingsInformation_Input, accountId: String!, userId: String!): Any
  \\"Adds a user signature image and/or user initials image to the specified user. \\\\n\\\\nThe userId property specified in the endpoint must match the authenticated user's userId and the user must be a member of the account.\\\\n\\\\nThe rules and processes associated with this are:\\\\n\\\\n* If Content-Type is set to application/json, then the default behavior for creating a default signature image, based on the name and a DocuSign font, is used.\\\\n* If Content-Type is set to multipart/form-data, then the request must contain a first part with the user signature information, followed by parts that contain the images.\\\\n\\\\nFor each Image part, the Content-Disposition header has a \\\\\\"filename\\\\\\" value that is used to map to the \`signatureName\` and/or \`signatureInitials\` properties in the JSON to the image. \\\\n\\\\nFor example: \\\\n\`Content-Disposition: file; filename=\\\\\\"Ron Test20121127083900\\\\\\"\`\\\\n\\\\nIf no matching image (by filename value) is found, then the image is not set. One, both, or neither of the signature and initials images can be set with this call.\\\\n\\\\nThe Content-Transfer-Encoding: base64 header, set in the header for the part containing the image, can be set to indicate that the images are formatted as base64 instead of as binary.\\\\n\\\\nIf successful, 200-OK is returned, and a JSON structure containing the signature information is provided, note that the signatureId can change with each API POST, PUT, or DELETE since the changes to the signature structure cause the current signature to be closed, and a new signature record to be created.\\"
  UserSignatures_PostUserSignatures(input: userSignaturesInformation_Input, accountId: String!, userId: String!): userSignaturesInformation
  \\"Adds/updates a user signature.\\"
  UserSignatures_PutUserSignature(input: userSignaturesInformation_Input, accountId: String!, userId: String!): userSignaturesInformation
  \\"Removes the signature information for the user.\\\\n\\\\nThe userId parameter specified in the endpoint must match the authenticated user's user ID and the user must be a member of the account.\\\\n\\\\nThe \`signatureId\` accepts a signature ID or a signature name. DocuSign recommends you use signature ID (\`signatureId\`), since some names contain characters that do not properly encode into a URL. If you use the user name, it is likely that the name includes spaces. In that case, URL encode the name before using it in the endpoint. \\\\n\\\\nFor example encode \\\\\\"Bob Smith\\\\\\" as \\\\\\"Bob%20Smith\\\\\\".\\"
  UserSignatures_DeleteUserSignature(accountId: String!, userId: String!, signatureId: String!): Any
  \\"Creates, or updates, the signature font and initials for the specified user. When creating a signature, you use this resource to create the signature name and then add the signature and initials images into the signature.\\\\n\\\\n\\\\nThe userId property specified in the endpoint must match the authenticated user's user ID and the user must be a member of the account.\\\\n\\\\nThe \`signatureId\` parameter accepts a signature ID or a signature name. DocuSign recommends you use signature ID (\`signatureId\`), since some names contain characters that do not properly encode into a URL. If you use the user name, it is likely that the name includes spaces. In that case, URL encode the name before using it in the endpoint. \\\\n\\\\nFor example encode \\\\\\"Bob Smith\\\\\\" as \\\\\\"Bob%20Smith\\\\\\".\\"
  UserSignatures_PutUserSignatureById(input: userSignatureDefinition_Input, accountId: String!, userId: String!, signatureId: String!, close_existing_signature: String): UserSignatures
  \\"Deletes the specified initials image or signature image for the specified user.\\\\n\\\\nThe function deletes one or the other of the image types, to delete both the initials image and signature image you must call the endpoint twice.\\\\n\\\\nThe userId parameter specified in the endpoint must match the authenticated user's user ID and the user must be a member of the account.\\\\n\\\\nThe \`signatureId\` parameter accepts a signature ID or a signature name. DocuSign recommends you use signature ID (\`signatureId\`), since some names contain characters that do not properly encode into a URL. If you use the user name, it is likely that the name includes spaces. In that case, URL encode the name before using it in the endpoint. \\\\n\\\\nFor example encode \\\\\\"Bob Smith\\\\\\" as \\\\\\"Bob%20Smith\\\\\\".\\"
  UserSignatures_DeleteUserSignatureImage(accountId: String!, userId: String!, signatureId: String!, imageType: String!): UserSignatures
  \\"Updates the user signature image or user initials image for the specified user. The supported image formats for this file are: gif, png, jpeg, and bmp. The file must be less than 200K.\\\\n\\\\nThe userId property specified in the endpoint must match the authenticated user's user ID and the user must be a member of the account.\\\\n\\\\nThe \`signatureId\` parameter accepts a signature ID or a signature name. DocuSign recommends you use signature ID (\`signatureId\`), since some names contain characters that do not properly encode into a URL. If you use the user name, it is likely that the name includes spaces. In that case, URL encode the name before using it in the endpoint. \\\\n\\\\nFor example encode \\\\\\"Bob Smith\\\\\\" as \\\\\\"Bob%20Smith\\\\\\".\\\\n\\"
  UserSignatures_PutUserSignatureImage(accountId: String!, userId: String!, signatureId: String!, imageType: String!): UserSignatures
  \\"Deletes a social account from a use's account.\\"
  UserSocialLogin_DeleteUserSocialLogin(input: UserSocialAccountLogins_Input, accountId: String!, userId: String!): Any
  \\"Adds a new social account to a user's account.\\"
  UserSocialLogin_PutUserSocialLogin(input: UserSocialAccountLogins_Input, accountId: String!, userId: String!): Any
  \\"Returns a URL that allows you to embed the authentication view of the DocuSign UI in your applications.\\"
  Views_PostAccountConsoleView(input: consoleViewRequest_Input, accountId: String!): EnvelopeViews
  \\"Update watermark information.\\"
  Watermark_PutWatermark(input: AccountWatermarks_Input, accountId: String!): AccountWatermarks
  \\"Get watermark preview.\\"
  WatermarkPreview_PutWatermarkPreview(input: AccountWatermarks_Input, accountId: String!): AccountWatermarks
  \\"Creates a new workspace.\\"
  Workspace_PostWorkspace(input: Workspaces_Input, accountId: String!): Workspaces
  \\"Deletes an existing workspace (logically).\\"
  Workspace_DeleteWorkspace(accountId: String!, workspaceId: String!): Workspaces
  \\"Updates information about a specific workspace.\\"
  Workspace_PutWorkspace(input: Workspaces_Input, accountId: String!, workspaceId: String!): Workspaces
  \\"Deletes workspace one or more specific files/folders from the given folder or root.\\"
  WorkspaceFolder_DeleteWorkspaceItems(input: workspaceItemList_Input, accountId: String!, workspaceId: String!, folderId: String!): Any
  \\"Creates a workspace file.\\"
  WorkspaceFile_PostWorkspaceFiles(accountId: String!, workspaceId: String!, folderId: String!): WorkspaceItems
  \\"Updates workspace item metadata for one or more specific files/folders.\\"
  WorkspaceFile_PutWorkspaceFile(accountId: String!, workspaceId: String!, folderId: String!, fileId: String!): WorkspaceItems
  \\"Deletes the request log files.\\"
  APIRequestLog_DeleteRequestLogs: Any
  \\"Enables or disables API request logging for troubleshooting.\\\\n\\\\nWhen enabled (\`apiRequestLogging\` is set to true), REST API requests and responses for the user are added to a log. A log can have up to 50 requests/responses and the current number of log entries can be determined by getting the settings. Logging is automatically disabled when the log limit of 50 is reached.\\\\n\\\\nYou can call [ML:GetRequestLog] or [ML:GetRequestLogs] to download the log files (individually or as a zip file). Call [ML:DeleteRequestLogs] to clear the log by deleting current entries.\\\\n\\\\nPrivate information, such as passwords and integrator key information, which is normally located in the call header is omitted from the request/response log.\\\\n\\"
  APIRequestLog_PutRequestLogSettings(input: RequestLogs_Input): RequestLogs
  \\"Updates the password for a specified user.\\"
  LoginInformation_PutLoginInformation(input: userPasswordInformation_Input, loginPart: String!): Any
  \\"**Deprecated**\\\\n\\\\nRevokes an OAuth2 authorization server token. After the revocation is complete, a caller must re-authenticate to restore access.\\\\n\\"
  OAuth2_PostRevoke: Any
  \\"**Deprecated**\\\\n\\\\nCreates an OAuth2 authorization server token endpoint.\\\\n\\"
  OAuth2_PostToken: oauthAccess
}

type newAccountSummary {
  \\"The account ID associated with the envelope.\\"
  accountId: String
  \\"The GUID associated with the account ID.\\"
  accountIdGuid: String
  \\"The account name for the new account.\\"
  accountName: String
  \\"Contains a token that can be used for authentication in API calls instead of using the user name and password.\\"
  apiPassword: String
  \\"The URL that should be used for successive calls to this account. It includes the protocal (https), the DocuSign server where the account is located, and the account number. Use this Url to make API calls against this account. Many of the API calls provide Uri's that are relative to this baseUrl.\\"
  baseUrl: String
  billingPlanPreview: billingPlanPreview
  \\"Specifies the user ID of the new user.\\"
  userId: String
}

\\"Contains information about a preview billing plan.\\"
type billingPlanPreview {
  \\"Specifies the ISO currency code for the account.\\"
  currencyCode: String
  invoice: Invoices
  isProrated: String
  subtotalAmount: String
  taxAmount: String
  totalAmount: String
}

input newAccountDefinition_Input {
  PaymentProcessorInformation: paymentProcessorInformation_Input
  \\"The account name for the new account.\\"
  accountName: String
  \\"The list of\\\\n[account settings][accountsettings]\\\\nthat determine\\\\nthe features available for the account.\\\\nNote that some features are determined\\\\nby the plan used to create the account and cannot be overridden.\\\\n\\\\n[accountsettings]: /esign/restapi/Accounts/Accounts/create/#account-settings\\"
  accountSettings: [nameValue_Input]
  addressInformation: accountAddress_Input
  creditCardInformation: creditCardInformation_Input
  \\"The code that identifies the billing plan groups and plans for the new account.\\"
  distributorCode: String
  \\"The password for the distributorCode.\\"
  distributorPassword: String
  initialUser: Users_Input
  planInformation: planInformation_Input
  referralInformation: referralInformation_Input
  socialAccountInformation: UserSocialAccountLogins_Input
}

input paymentProcessorInformation_Input {
  address: addressInformation_Input
  billingAgreementId: String
  email: String
}

\\"Contains address information.\\"
input addressInformation_Input {
  \\"The city associated with the address.\\"
  city: String
  \\"Specifies the country associated with the address.\\"
  country: String
  \\"A Fax number associated with the address if one is available.\\"
  fax: String
  \\"A phone number associated with the address.\\"
  phone: String
  \\"The state or province associated with the address.\\"
  state: String
  \\"The first line of the address.\\"
  street1: String
  \\"The second line of the address (optional).\\"
  street2: String
  \\"The zip or postal code associated with the address.\\"
  zip: String
}

input nameValue_Input {
  errorDetails: errorDetails_Input
  \\"The name or key of a name/value pair.\\"
  name: String
  \\"The initial value of the tab when it was sent to the recipient.\\"
  originalValue: String
  \\"The value field of a name/value pair.\\"
  value: String
}

\\"This object describes errors that occur. It is only valid for responses, and ignored in requests.\\"
input errorDetails_Input {
  \\"An error code associated with the error.\\"
  errorCode: String
  \\"A short error message.\\"
  message: String
}

\\"Contains information about an account address.\\"
input accountAddress_Input {
  \\"First Line of the address.\\\\nMaximum length: 100 characters.\\"
  address1: String
  \\"Second Line of the address.\\\\nMaximum length: 100 characters.\\"
  address2: String
  \\"The city value of the address.\\"
  city: String
  \\"Specifies the country associated with the address.\\"
  country: String
  email: String
  fax: String
  \\"The user's first name. \\\\nMaximum Length: 50 characters.\\"
  firstName: String
  lastName: String
  phone: String
  postalCode: String
  \\"The state or province associated with the address.\\"
  state: String
  \\"Contains an array of countries supported by the billing plan.\\"
  supportedCountries: [country_Input]
}

input country_Input {
  isoCode: String
  name: String
  provinceValidated: String
  provinces: [province_Input]
}

input province_Input {
  isoCode: String
  name: String
}

input creditCardInformation_Input {
  address: addressInformation_Input
  \\"The number on the credit card.\\"
  cardNumber: String
  \\"The credit card type. Valid values are: visa, mastercard, or amex.\\"
  cardType: String
  \\"The month that the credit card expires (1-12).\\"
  expirationMonth: String
  \\"The year 4 digit year in which the credit card expires.\\"
  expirationYear: String
  \\"The exact name printed on the credit card.\\"
  nameOnCard: String
}

\\"User management\\"
input Users_Input {
  accountManagementGranular: userAccountManagementGranularInformation_Input
  \\"The activation code the new user must enter when activating their account.\\"
  activationAccessCode: String
  \\"Indicates the date and time the item was created.\\"
  createdDateTime: String
  \\"The name/value pair information for the user custom setting.\\"
  customSettings: [nameValue_Input]
  email: String
  \\"Specifies whether the user is enabled for updates from DocuSign Connect. Valid values: true or false.\\"
  enableConnectForUser: String
  errorDetails: errorDetails_Input
  \\"The user's first name. \\\\nMaximum Length: 50 characters.\\"
  firstName: String
  forgottenPasswordInfo: forgottenPasswordInformation_Input
  \\"A list of the group information for groups to add the user to. Group information can be found by calling [ML:GET group information]. The only required parameter is groupId. \\\\n\\\\nThe parameters are:\\\\n\\\\n* groupId - The DocuSign group ID for the group.\\\\n* groupName - The name of the group\\\\n* permissionProfileId - The ID of the permission profile associated with the group.\\\\n* groupType - The group type.\\"
  groupList: [group_Input]
  homeAddress: addressInformation_v2_Input
  \\"Contains the URI for an endpoint that you can use to retrieve the initials image.\\"
  initialsImageUri: String
  \\"Determines if the feature set is actively set as part of the plan.\\"
  isAdmin: String
  \\"Shows the date-time when the user last logged on to the system.\\"
  lastLogin: String
  \\"The user's last name. \\\\nMaximum Length: 50 characters.\\"
  lastName: String
  \\"Shows the current status of the user's password. Possible values are: \\\\n\\\\n* password_reset\\\\n* password_active\\\\n* password_expired\\\\n* password_locked\\\\n* password_reset_failed\\"
  loginStatus: String
  \\"The user's middle name. \\\\nMaximum Length: 50 characters.\\"
  middleName: String
  password: String
  passwordExpiration: String
  permissionProfileId: String
  permissionProfileName: String
  profileImageUri: String
  \\"When set to **true**, specifies that an additional activation email is sent to the user if they fail a log on before activating their account.\\"
  sendActivationOnInvalidLogin: String
  \\"Contains the URI for an endpoint that you can use to retrieve the signature image.\\"
  signatureImageUri: String
  \\"The suffix for the user's name. \\\\n\\\\nMaximum Length: 50 characters.\\"
  suffixName: String
  \\"The title of the user.\\"
  title: String
  uri: String
  \\"The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.\\"
  userId: String
  userName: String
  userProfileLastModifiedDate: String
  \\"The name/value pair information for user settings. These determine the actions that a user can take in the account. The \`[ML:userSettings]\` are listed and described below.\\"
  userSettings: [nameValue_Input]
  userStatus: String
  userType: String
  workAddress: addressInformation_v2_Input
}

input userAccountManagementGranularInformation_Input {
  canManageAdmins: String
  canManageAdminsMetadata: settingsMetadata_Input
  canManageGroups: String
  canManageGroupsMetadata: settingsMetadata_Input
  canManageSharing: String
  canManageSharingMetadata: settingsMetadata_Input
  canManageUsers: String
  canManageUsersMetadata: settingsMetadata_Input
}

input settingsMetadata_Input {
  \\"When set to **true**, indicates that this module is enabled on the account.\\"
  is21CFRPart11: String
  options: [String]
  rights: String
  uiHint: String
  uiOrder: String
  uiType: String
}

\\"A complex element that has up to four Question/Answer pairs for forgotten password information.\\"
input forgottenPasswordInformation_Input {
  \\"The answer to the first forgotten password challenge question.\\"
  forgottenPasswordAnswer1: String
  \\"The answer to the second forgotten password challenge question.\\"
  forgottenPasswordAnswer2: String
  \\"The answer to the third forgotten password challenge question.\\"
  forgottenPasswordAnswer3: String
  \\"The answer to the fourth forgotten password challenge question.\\"
  forgottenPasswordAnswer4: String
  \\"The first challenge question presented to a user who has forgotten their password.\\"
  forgottenPasswordQuestion1: String
  \\"The second challenge question presented to a user who has forgotten their password.\\"
  forgottenPasswordQuestion2: String
  \\"The third challenge question presented to a user who has forgotten their password.\\"
  forgottenPasswordQuestion3: String
  \\"The fourth challenge question presented to a user who has forgotten their password.\\"
  forgottenPasswordQuestion4: String
}

input group_Input {
  errorDetails: errorDetails_Input
  \\"The DocuSign group ID for the group.\\"
  groupId: String
  \\"The name of the group.\\"
  groupName: String
  \\"The group type.\\"
  groupType: String
  \\"The ID of the permission profile associated with the group.\\"
  permissionProfileId: String
  users: [userInfo_Input]
}

input userInfo_Input {
  activationAccessCode: String
  email: String
  errorDetails: errorDetails_Input
  loginStatus: String
  sendActivationEmail: String
  uri: String
  \\"The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.\\"
  userId: String
  userName: String
  userStatus: String
  userType: String
}

input addressInformation_v2_Input {
  \\"First Line of the address.\\\\nMaximum length: 100 characters.\\"
  address1: String
  \\"Second Line of the address.\\\\nMaximum length: 100 characters.\\"
  address2: String
  city: String
  \\"Specifies the country associated with the address.\\"
  country: String
  fax: String
  phone: String
  postalCode: String
  \\"The state or province associated with the address.\\"
  stateOrProvince: String
}

\\"An object used to identify the features and attributes of the account being created.\\"
input planInformation_Input {
  \\"Reserved:\\"
  addOns: [addOn_Input]
  \\"Specifies the ISO currency code for the account.\\"
  currencyCode: String
  \\"Reserved for DocuSign use only.\\"
  freeTrialDaysOverride: String
  \\"A complex type that sets the feature sets for the account.\\"
  planFeatureSets: [featureSet_Input]
  \\"The DocuSign Plan ID for the account.\\"
  planId: String
  recipientDomains: [recipientDomain_Input]
}

\\"Contains information about add ons.\\"
input addOn_Input {
  \\"Reserved:\\"
  active: String
  \\"Reserved:\\"
  addOnId: String
  id: String
  \\"Reserved:\\"
  name: String
}

input featureSet_Input {
  \\"A complex type that contains alternate currency values that are configured for this plan feature set.\\"
  currencyFeatureSetPrices: [currencyFeatureSetPrice_Input]
  envelopeFee: String
  \\"A unique ID for the feature set.\\"
  featureSetId: String
  fixedFee: String
  \\"When set to **true**, indicates that this module is enabled on the account.\\"
  is21CFRPart11: String
  isActive: String
  \\"Specifies whether the feature set is actively enabled as part of the plan.\\"
  isEnabled: String
  name: String
  \\"An incremental seat cost for seat-based plans. Only valid when isEnabled for the feature set is set to true.\\"
  seatFee: String
}

input currencyFeatureSetPrice_Input {
  \\"Specifies the alternate ISO currency code for the account.\\"
  currencyCode: String
  \\"Specifies the alternate currency symbol for the account.\\"
  currencySymbol: String
  \\"An incremental envelope cost for plans with envelope overages (when \`isEnabled\` is set to **true**.)\\"
  envelopeFee: String
  \\"Specifies a one-time fee associated with the plan (when \`isEnabled\` is set to **true**.)\\"
  fixedFee: String
  \\"Specifies an incremental seat cost for seat-based plans (when \`isEnabled\` is set to **true**.)\\"
  seatFee: String
}

input recipientDomain_Input {
  active: String
  domainCode: String
  domainName: String
  recipientDomainId: String
}

\\"A complex type that contains the following information for entering referral and discount information. The following items are included in the referral information (all string content): enableSupport, includedSeats, saleDiscountPercent, saleDiscountAmount, saleDiscountFixedAmount, saleDiscountPeriods, saleDiscountSeatPriceOverride, planStartMonth, referralCode, referrerName, advertisementId, publisherId, shopperId, promoCode, groupMemberId, idType, and industry\\"
input referralInformation_Input {
  \\"A complex type that contains the following information for entering referral and discount information. The following items are included in the referral information (all string content): enableSupport, includedSeats, saleDiscountPercent, saleDiscountAmount, saleDiscountFixedAmount, saleDiscountPeriods, saleDiscountSeatPriceOverride, planStartMonth, referralCode, referrerName, advertisementId, publisherId, shopperId, promoCode, groupMemberId, idType, and industry.\\"
  advertisementId: String
  \\"When set to **true**, then customer support is provided as part of the account plan.\\"
  enableSupport: String
  externalOrgId: String
  groupMemberId: String
  idType: String
  \\"The number of seats (users) included.\\"
  includedSeats: String
  industry: String
  planStartMonth: String
  promoCode: String
  publisherId: String
  referralCode: String
  referrerName: String
  \\"Reserved for DocuSign use only.\\"
  saleDiscountAmount: String
  \\"Reserved for DocuSign use only.\\"
  saleDiscountFixedAmount: String
  \\"Reserved for DocuSign use only.\\"
  saleDiscountPercent: String
  \\"Reserved for DocuSign use only.\\"
  saleDiscountPeriods: String
  \\"Reserved for DocuSign use only.\\"
  saleDiscountSeatPriceOverride: String
  shopperId: String
}

\\"Users' social account logins\\"
input UserSocialAccountLogins_Input {
  \\"The users email address.\\"
  email: String
  errorDetails: errorDetails_Input
  \\"The social account provider (Facebook, Yahoo, etc.)\\"
  provider: String
  \\"The ID provided by the Socal Account.\\"
  socialId: String
  \\"The full user name for the account.\\"
  userName: String
}

\\"Defines an billing payment response object.\\"
type billingPaymentResponse {
  \\"Reserved: TBD\\"
  billingPayments: [billingPayment]
}

\\"Contains information on a billing plan.\\"
type billingPayment {
  \\"Reserved: TBD\\"
  amount: String
  \\"Reserved: TBD\\"
  invoiceId: String
  paymentId: String
}

input billingPaymentRequest_Input {
  \\"The payment amount for the past due invoices. This value must match the pastDueBalance value retrieved using Get Past Due Invoices.\\"
  paymentAmount: String
}

\\"Defines a billing plan update response object.\\"
type billingPlanUpdateResponse {
  accountPaymentMethod: String
  billingPlanPreview: billingPlanPreview
  \\"Specifies the ISO currency code for the account.\\"
  currencyCode: String
  \\"The number of seats (users) included.\\"
  includedSeats: String
  paymentCycle: String
  paymentMethod: String
  \\"The DocuSign Plan ID for the account.\\"
  planId: String
  planName: String
}

input billingPlanInformation_Input {
  appStoreReceipt: appStoreReceipt_Input
  billingAddress: accountAddress_Input
  creditCardInformation: creditCardInformation_Input
  downgradeReason: String
  \\"When set to **true**, then customer support is provided as part of the account plan.\\"
  enableSupport: String
  \\"The number of seats (users) included.\\"
  includedSeats: String
  \\"Reserved: TBD\\"
  incrementalSeats: String
  paymentProcessorInformation: paymentProcessorInformation_Input
  planInformation: planInformation_Input
  referralInformation: referralInformation_Input
  renewalStatus: String
  \\"Reserved for DocuSign use only.\\"
  saleDiscountAmount: String
  \\"Reserved for DocuSign use only.\\"
  saleDiscountFixedAmount: String
  \\"Reserved for DocuSign use only.\\"
  saleDiscountPercent: String
  \\"Reserved for DocuSign use only.\\"
  saleDiscountPeriods: String
  \\"Reserved for DocuSign use only.\\"
  saleDiscountSeatPriceOverride: String
}

\\"Contains information about an APP store receipt.\\"
input appStoreReceipt_Input {
  \\"The Product ID from the AppStore.\\"
  productId: String
  \\"Reserved: TBD\\"
  receiptData: String
}

input purchasedEnvelopesInformation_Input {
  \\"The total amount of the purchase.\\"
  amount: String
  \\"The AppName of the client application.\\"
  appName: String
  \\"Specifies the ISO currency code of the purchase. This is based on the ISO 4217 currency code information.\\"
  currencyCode: String
  \\"The Platform of the client application\\"
  platform: String
  \\"The Product ID from the AppStore.\\"
  productId: String
  \\"The quantity of envelopes to add to the account.\\"
  quantity: String
  \\"The encrypted Base64 encoded receipt data.\\"
  receiptData: String
  \\"The name of the AppStore.\\"
  storeName: String
  \\"Specifies the Transaction ID from the AppStore.\\"
  transactionId: String
}

input brandsRequest_Input {
  \\"The list of brands.\\"
  brands: [brandRequest_Input]
}

input brandRequest_Input {
  \\"The ID of the brand used in API calls\\"
  brandId: String
}

input brand_Input {
  \\"The name of the company associated with this brand.\\"
  brandCompany: String
  \\"The ID used to identify a specific brand in API calls.\\"
  brandId: String
  \\"The name of the brand.\\"
  brandName: String
  colors: [nameValue_Input]
  emailContent: [brandEmailContent_Input]
  errorDetails: errorDetails_Input
  isOverridingCompanyName: String
  isSendingDefault: String
  isSigningDefault: String
  landingPages: [nameValue_Input]
  links: [brandLink_Input]
  logos: brandLogos_Input
  resources: brandResourceUrls_Input
}

input brandEmailContent_Input {
  content: String
  emailContentType: String
  emailToLink: String
  linkText: String
}

input brandLink_Input {
  linkText: String
  linkType: String
  showLink: String
  urlOrMailTo: String
}

input brandLogos_Input {
  email: String
  primary: String
  secondary: String
}

input brandResourceUrls_Input {
  email: String
  sending: String
  signing: String
  signingCaptive: String
}

type captiveRecipientInformation {
  \\"A complex type containing information about one or more captive recipients.\\"
  captiveRecipients: [captiveRecipient]
}

type captiveRecipient {
  \\"Specifies whether the recipient is embedded or remote. \\\\n\\\\nIf the \`clientUserId\` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.\\\\n\\\\nNote: if the \`clientUserId\` property is set and either \`SignerMustHaveAccount\` or \`SignerMustLoginToSign\` property of the account settings is set to  **true**, an error is generated on sending. \\\\n\\\\nMaximum length: 100 characters.\\"
  clientUserId: String
  \\"Specifies the email address associated with the captive recipient.\\"
  email: String
  errorDetails: errorDetails
  \\"Specifies the user name associated with the captive recipient.\\"
  userName: String
}

input captiveRecipientInformation_Input {
  \\"A complex type containing information about one or more captive recipients.\\"
  captiveRecipients: [captiveRecipient_Input]
}

input captiveRecipient_Input {
  \\"Specifies whether the recipient is embedded or remote. \\\\n\\\\nIf the \`clientUserId\` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.\\\\n\\\\nNote: if the \`clientUserId\` property is set and either \`SignerMustHaveAccount\` or \`SignerMustLoginToSign\` property of the account settings is set to  **true**, an error is generated on sending. \\\\n\\\\nMaximum length: 100 characters.\\"
  clientUserId: String
  \\"Specifies the email address associated with the captive recipient.\\"
  email: String
  errorDetails: errorDetails_Input
  \\"Specifies the user name associated with the captive recipient.\\"
  userName: String
}

input chunkedUploadRequest_Input {
  chunkedUploadId: String
  data: String
}

\\"Connect configurations\\"
input ConnectConfigurations_Input {
  \\"When set to **true**, the tracked envelope and recipient events for all users, including users that are added a later time, are sent through Connect.\\"
  allUsers: String
  \\"When set to **true**, data is sent to the urlToPublishTo web address. This option can be set to false to stop sending data while maintaining the Connect configuration information.\\"
  allowEnvelopePublish: String
  \\"If merge field's are being used, specifies the type of the merge field. The only  supported value is **salesforce**.\\"
  configurationType: String
  \\"Specifies the DocuSign generated ID for the Connect configuration.\\"
  connectId: String
  \\"This turns Connect logging on or off. When set to **true**, logging is turned on.\\"
  enableLog: String
  \\"A comma separated list of Envelope related events that are tracked through Connect. The possible event values are: Sent, Delivered, Completed, Declined, and Voided.\\"
  envelopeEvents: String
  includeCertSoapHeader: String
  \\"When set to **true**, the Connect Service includes the Certificate of Completion with completed envelopes.\\"
  includeCertificateOfCompletion: String
  \\"When set to **true**, the Document Fields associated with the envelope's documents are included in the notification messages. Document Fields are optional custom name-value pairs added to documents using the API.\\"
  includeDocumentFields: String
  \\"When set to **true**, Connect will send the PDF document along with the update XML.\\"
  includeDocuments: String
  \\"When set to **true**, Connect will include the voidedReason for voided envelopes.\\"
  includeEnvelopeVoidReason: String
  \\"When set to **true**, Connect will include the sender account as Custom Field in the data.\\"
  includeSenderAccountasCustomField: String
  \\"When set to **true**, Connect will include the envelope time zone information.\\"
  includeTimeZoneInformation: String
  \\"The name of the Connect configuration. The name helps identify the configuration in the list.\\"
  name: String
  \\"A comma separated list of *Recipient* related events that will trigger a notification to your webhook Connect listener. The possible event values are: Sent, Delivered, Completed, Declined, AuthenticationFailed, and AutoResponded.\\"
  recipientEvents: String
  \\"When set to **true**, and a publication message fails to be acknowledged, the message goes back into the queue and the system will retry delivery after a successful acknowledgement is received. If the delivery fails a second time, the message is not returned to the queue for sending until Connect receives a successful acknowledgement and it has been at least 24 hours since the previous retry. There is a maximum of ten retries Alternately, you can use Republish Connect Information to manually republish the envelope information.\\"
  requiresAcknowledgement: String
  \\"When set to **true**, Mutual TLS will be enabled for notifications. Mutual TLS must be initiated by the listener (the customer's web server) during the TLS handshake protocol.\\"
  signMessageWithX509Certificate: String
  \\"The namespace of the SOAP interface.\\\\n\\\\nThe namespace value must be set if useSoapInterface is set to true.\\"
  soapNamespace: String
  \\"This is the web address and name of your listener or Retrieving Service endpoint. You need to include HTTPS:// in the web address.\\"
  urlToPublishTo: String
  \\"When set to **true**, indicates that the \`urlToPublishTo\` property contains a SOAP endpoint.\\"
  useSoapInterface: String
  \\"A comma separated list of userIds. This sets the users associated with the tracked envelope and recipient events. When a tracked event occurs for a set user, the a notification message is sent to your Connect listener.\\"
  userIds: String
}

type connectFailureResults {
  retryQueue: [connectFailureResult]
}

type connectFailureResult {
  \\"Reserved: TBD\\"
  configId: String
  \\"Reserved: TBD\\"
  configUrl: String
  \\"The envelope ID of the envelope status that failed to post.\\"
  envelopeId: String
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  statusMessage: String
}

input connectFailureFilter_Input {
  envelopeIds: [String]
  synchronous: String
}

\\"Account consumer disclosures\\"
input AccountConsumerDisclosures_Input {
  \\"A GUID identifying the account associated with the consumer disclosure\\"
  accountEsignId: String
  \\"Indicates whether the customer can withdraw their acceptance of the consumer disclosure.\\"
  allowCDWithdraw: String
  allowCDWithdrawMetadata: settingsMetadata_Input
  changeEmail: String
  changeEmailOther: String
  \\"The name of the company associated with the consumer disclosure.\\"
  companyName: String
  \\"The phone number of the company associated with the consumer disclosure.\\"
  companyPhone: String
  copyCostPerPage: String
  \\"Specifies the fee collection method for cases in which the customer requires paper copies of the document.\\\\n\\\\nMaximum Length: 255 characters\\"
  copyFeeCollectionMethod: String
  copyRequestEmail: String
  custom: String
  enableEsign: String
  \\"The Electronic Record and Signature Disclosure text. The disclosure text includes the html formatting.\\"
  esignAgreement: String
  esignText: String
  languageCode: String
  mustAgreeToEsign: String
  pdfId: String
  useBrand: String
  useConsumerDisclosureWithinAccount: String
  useConsumerDisclosureWithinAccountMetadata: settingsMetadata_Input
  \\"Contains the first address line of the postal address to which a customer can send a consent withdrawal notification.\\\\n\\\\nMaximum length: 100 characters.\\"
  withdrawAddressLine1: String
  \\"Contains the second address line of the postal address to which a customer can send a consent withdrawal notification.\\\\n\\\\nMaximum length: 100 characters.\\"
  withdrawAddressLine2: String
  \\"Indicates whether the customer can withdraw consent by email.\\"
  withdrawByEmail: String
  \\"Indicates whether the customer can withdraw consent by postal mail.\\"
  withdrawByMail: String
  \\"Indicates whether the customer can withdraw consent by phone.\\"
  withdrawByPhone: String
  \\"Contains the city of the postal address to which a customer can send a consent withdrawal notification.\\\\n\\\\nMaximum length: 50 characters.\\"
  withdrawCity: String
  \\"Indicates the consequences of withdrawing consent.\\"
  withdrawConsequences: String
  \\"Contains the email address to which a customer can send a consent withdrawal notification.\\\\n\\\\nMaximum length: 100 characters.\\"
  withdrawEmail: String
  \\"Indicates other information need to withdraw consent.\\\\n\\\\nMaximum length: 255 characters.\\"
  withdrawOther: String
  \\"Contains the phone number which a customer can call to register consent withdrawal notification.\\\\n\\\\nMaximum length: 20 characters.\\"
  withdrawPhone: String
  \\"Contains the postal code of the postal address to which a customer can send a consent withdrawal notification.\\\\n\\\\nMaximum length: 20 characters.\\"
  withdrawPostalCode: String
  \\"Contains the state of the postal address to which a customer can send a consent withdrawal notification.\\"
  withdrawState: String
}

type contactUpdateResponse {
  contacts: [Contacts]
}

input contactUpdateResponse_Input {
  contacts: [Contacts_Input]
}

input Contacts_Input {
  \\"The unique identifier of a person in the contacts address book.\\"
  contactId: String
  contactPhoneNumbers: [contactPhoneNumber_Input]
  contactUri: String
  emails: [String]
  errorDetails: errorDetails_Input
  name: String
  organization: String
  \\"When set to **true**, this custom tab is shared.\\"
  shared: String
  signingGroup: String
  \\"The display name for the signing group. \\\\n\\\\nMaximum Length: 100 characters.\\"
  signingGroupName: String
}

input contactPhoneNumber_Input {
  phoneNumber: String
  phoneType: String
}

input customField_Input {
  customFieldType: String
  errorDetails: errorDetails_Input
  \\"An ID used to specify a custom field.\\"
  fieldId: String
  listItems: [String]
  name: String
  \\"When set to **true**, the signer is required to fill out this tab\\"
  required: String
  \\"A boolean indicating if the value should be displayed.\\"
  show: String
  \\"Specifies the value of the tab.\\"
  value: String
}

type postTransactionsResponse {
  documentData: String
  transactionSid: String
}

input EMortgageTransactions_Input {
  documentData: String
  dptName: String
  transactionName: String
  transactionTypeName: String
}

type envelopeSummary {
  \\"The envelope ID of the envelope status that failed to post.\\"
  envelopeId: String
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"The DateTime that the envelope changed status (i.e. was created or sent.)\\"
  statusDateTime: String
  uri: String
}

input envelopeDefinition_Input {
  \\"Sets the document reading zones for screen reader applications.  This element can only be used if Document Accessibility is enabled for the account.\\"
  accessibility: String
  \\"When set to **true**, Document Markup is enabled for envelope. Account must have Document Markup enabled to use this\\"
  allowMarkup: String
  \\"When set to **true**, the recipient can redirect an envelope to a more appropriate recipient.\\"
  allowReassign: String
  \\"When set to **true**, this enables the Recursive Recipients feature and allows a recipient to appear more than once in the routing order.\\"
  allowRecipientRecursion: String
  \\"When set to **true**, the envelope is queued for processing and the value of the \`status\` property is set to 'Processing'. Additionally, get status calls return 'Processing' until completed.\\"
  asynchronous: String
  attachments: [attachment_Input]
  attachmentsUri: String
  \\"Specifies the Authoritative copy feature. If set to true the Authoritative copy feature is enabled.\\"
  authoritativeCopy: String
  \\"Specifies whether auto navigation is set for the recipient.\\"
  autoNavigation: String
  \\"This sets the brand profile format used for the envelope. The value in the string is the brandId associated with the profile. Account branding must be enabled for the account to use this option.\\"
  brandId: String
  brandLock: String
  \\"Retrieves a URI for an endpoint that allows you to easily retrieve certificate information.\\"
  certificateUri: String
  \\"Specifies the date and time this item was completed.\\"
  completedDateTime: String
  \\"A complex type that can be added to create envelopes from a combination of DocuSign templates and PDF forms. The basic envelope remains the same, while the Composite Template adds new document and template overlays into the envelope. There can be any number of Composite Template structures in the envelope.\\"
  compositeTemplates: [compositeTemplate_Input]
  \\"Indicates the date and time the item was created.\\"
  createdDateTime: String
  customFields: AccountCustomFields_Input
  \\"Contains a URI for an endpoint that you can use to retrieve the custom fields.\\"
  customFieldsUri: String
  \\"The date and time the recipient declined the document.\\"
  declinedDateTime: String
  \\"Specifies the data and time the item was deleted.\\"
  deletedDateTime: String
  \\"Reserved: For DocuSign use only.\\"
  deliveredDateTime: String
  \\"Complex element contains the details on the documents in the envelope.\\"
  documents: [document_Input]
  documentsCombinedUri: String
  \\"Contains a URI for an endpoint that you can use to retrieve the documents.\\"
  documentsUri: String
  \\"Optional element. This is the same as the email body. If specified it is included in email body for all envelope recipients. This can be a maximum of 10000 characters\\"
  emailBlurb: String
  emailSettings: EnvelopeEmailSettings_Input
  \\"Specifies the subject of the email that is sent to all recipients.\\\\n\\\\nSee [ML:Template Email Subject Merge Fields] for information about adding merge field information to the email subject.\\"
  emailSubject: String
  \\"When set to **true**, the signer is allowed to print the document and sign it on paper.\\"
  enableWetSign: String
  \\"When set to **true**, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.\\\\n\\\\nYour account must have Document Visibility enabled to use this.\\"
  enforceSignerVisibility: String
  \\"The envelope ID of the envelope status that failed to post.\\"
  envelopeId: String
  \\"When set to **true**, Envelope ID Stamping is enabled.\\"
  envelopeIdStamping: String
  \\"Contains a URI for an endpoint that you can use to retrieve the envelope or envelopes.\\"
  envelopeUri: String
  eventNotification: eventNotification_Input
  initialSentDateTime: String
  \\"When set to **true**, indicates that this module is enabled on the account.\\"
  is21CFRPart11: String
  isSignatureProviderEnvelope: String
  \\"The date and time the item was last modified.\\"
  lastModifiedDateTime: String
  lockInformation: EnvelopeLocks_Input
  \\"When set to **true**, prevents senders from changing the contents of \`emailBlurb\` and \`emailSubject\` properties for the envelope. \\\\n\\\\nAdditionally, this prevents users from making changes to the contents of \`emailBlurb\` and \`emailSubject\` properties when correcting envelopes. \\\\n\\\\nHowever, if the \`messageLock\` node is set to true**** and the \`emailSubject\` property is empty, senders and correctors are able to add a subject to the envelope.\\"
  messageLock: String
  notification: notification_Input
  \\"Contains a URI for an endpoint that you can use to retrieve the notifications.\\"
  notificationUri: String
  password: String
  \\"Initiates a purge request. Valid values are:\\\\n* documents_queued: Places envelope documents in the purge queue.\\\\n* documents_and_metadata_queued: Places envelope documents and metadata in the purge queue.\\"
  purgeState: String
  recipients: EnvelopeRecipients_Input
  \\"When set to **true**, prevents senders from changing, correcting, or deleting the recipient information for the envelope.\\"
  recipientsLock: String
  \\"Contains a URI for an endpoint that you can use to retrieve the recipients.\\"
  recipientsUri: String
  \\"The date and time the envelope was sent.\\"
  sentDateTime: String
  \\"Specifies the physical location where the signing takes place. It can have two enumeration values; InPerson and Online. The default value is Online.\\"
  signingLocation: String
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"The data and time the status changed.\\"
  statusChangedDateTime: String
  \\"The unique identifier of the template. If this is not provided, DocuSign will generate a value.\\"
  templateId: String
  \\"Specifies the template recipients. Each roleName in the template must have a recipient assigned to it. This is made up elements:\\\\n\\\\n* email - The recipient's email address.\\\\n* name - The recipient's name.\\\\n* roleName - The template roleName associated with the recipient.\\\\n* clientUserId - Optional, this sets if the signer is This specifies if the recipient is embedded or remote. If the clientUserId is not null then the recipient is embedded. Note that if a ClientUserId is used and the account settings SignerMustHaveAccount or SignerMustLoginToSign are true, an error is generated on sending.\\\\n* defaultRecipient - Optional, When set to **true**, this recipient is the default recipient and any tabs generated by the transformPdfFields option are mapped to this recipient.\\\\n* routingOrder - This specifies the routing order of the recipient in the envelope.\\\\n* accessCode - This optional element specifies the access code a recipient has to enter to validate the identity. This can be a maximum of 50 characters.\\\\n* inPersonSignerName - Optional, if the template role is an in person signer, this is the full legal name of the signer. This can be a maximum of 100 characters.\\\\n* emailNotification - This is an optional complex element that has a role specific emailSubject, emailBody, and language. It follows the same format as the emailNotification node for Recipients.\\\\n* tabs - This allows the tab values to be specified for matching to tabs in the template.\\"
  templateRoles: [templateRole_Input]
  \\"Contains a URI for an endpoint which you can use to retrieve the templates.\\"
  templatesUri: String
  \\"Used to identify an envelope. The id is a sender-generated value and is valid in the DocuSign system for 7 days. It is recommended that a transaction ID is used for offline signing to ensure that an envelope is not sent multiple times. The \`transactionId\` property can be used determine an envelope's status (i.e. was it created or not) in cases where the internet connection was lost before the envelope status was returned.\\"
  transactionId: String
  \\"When set to **true**, the disclosure is shown to recipients in accordance with the account's Electronic Record and Signature Disclosure frequency setting. When set to **false**, the Electronic Record and Signature Disclosure is not shown to any envelope recipients. \\\\n\\\\nIf the \`useDisclosure\` property is not set, then the account's normal disclosure setting is used and the value of the \`useDisclosure\` property is not returned in responses when getting envelope information.\\"
  useDisclosure: String
  \\"The date and time the envelope or template was voided.\\"
  voidedDateTime: String
  \\"The reason the envelope or template was voided.\\"
  voidedReason: String
}

\\"Contains information about an attachment.\\"
input attachment_Input {
  accessControl: String
  attachmentId: String
  \\"Specifies the type of the attachment for the recipient.\\"
  attachmentType: String
  data: String
  label: String
  name: String
  remoteUrl: String
}

input compositeTemplate_Input {
  \\"The identify of this composite template. It is used as a reference when adding document object information. If used, the document's \`content-disposition\` must include the composite template ID to which the document should be added. If a composite template ID is not specified in the content-disposition, the document is applied based on the value of the \`documentId\` property only. If no document object is specified, the composite template inherits the first document.\\"
  compositeTemplateId: String
  document: document_Input
  \\"Zero or more inline templates and their position in the overlay. If supplied, they are overlaid into the envelope in the order of their Sequence value.\\"
  inlineTemplates: [inlineTemplate_Input]
  pdfMetaDataTemplateSequence: String
  \\"0 or more server-side templates and their position in the overlay. If supplied, they are overlaid into the envelope in the order of their Sequence value\\"
  serverTemplates: [serverTemplate_Input]
}

input document_Input {
  \\"Reserved: TBD\\"
  applyAnchorTabs: String
  \\"This string sets the display and behavior properties of\\\\nthe document during signing. The possible values are:\\\\n\\\\n* \`modal\`<br>\\\\n  The document is shown as a supplement action strip\\\\n  and can be viewed, downloaded, or printed in a modal window.\\\\n  This is the recommended value for supplemental documents. \\\\n\\\\n* \`download\`<br>\\\\n  The document is shown as a supplement action strip\\\\n  and can be viewed, downloaded, or printed in a new browser window. \\\\n\\\\n* \`inline\`<br>\\\\n  The document is shown in the normal signing window.\\\\n  This value is not used with supplemental documents,\\\\n  but is the default value for all other documents.\\"
  display: String
  \\"The document's bytes. This field can be used to include a base64 version of the document bytes within an envelope definition instead of sending the document using a multi-part HTTP request. The maximum document size is smaller if this field is used due to the overhead of the base64 encoding.\\"
  documentBase64: String
  documentFields: [nameValue_Input]
  documentGroup: String
  \\"Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.\\"
  documentId: String
  \\"When set to **true**, the document is been already encrypted by the sender for use with the DocuSign Key Manager Security Appliance.\\"
  encryptedWithKeyManager: String
  \\"The file extension type of the document. If the document is not a PDF it is converted to a PDF.\\"
  fileExtension: String
  fileFormatHint: String
  \\"When set to **true**,\\\\nthe document is included in the combined document download. \\\\nThe default value is **true**.\\"
  includeInDownload: String
  \\"Matchboxes define areas in a document for document matching when you are creating envelopes. They are only used when you upload and edit a template. \\\\n\\\\nA matchbox consists of 5 elements:\\\\n\\\\n* pageNumber - The document page number  on which the matchbox will appear. \\\\n* xPosition - The x position of the matchbox on a page. \\\\n* yPosition - The y position of the matchbox on a page.\\\\n* width - The width of the matchbox. \\\\n* height - The height of the matchbox.\\"
  matchBoxes: [matchBox_Input]
  name: String
  \\"An optional value that sets the direction order used to sort the item list. \\\\n\\\\nValid values are: \\\\n\\\\n* asc = ascending sort order\\\\n* desc = descending sort order\\"
  order: String
  pages: String
  password: String
  \\"The file id from the cloud storage service where the document is located. This information is returned using [ML:GET /folders] or [ML:/folders/{folderid}].\\"
  remoteUrl: String
  \\"Sets how the signer interacts with the supplemental document.\\\\nThe possible values are: \\\\n\\\\n*\\\\t\`no_interaction\`<br>\\\\n  No recipient action is required. \\\\n\\\\n*\\\\t\`view\`<br>\\\\n  The recipient is required to view the document. \\\\n\\\\n*\\\\t\`accept\`<br>\\\\n  The recipient is required to accept the document by selecting accept during signing, but is not required to view the document. \\\\n\\\\n*\\\\t\`view_accept\`<br>\\\\n  The recipient is required to view and accept the document.\\"
  signerMustAcknowledge: String
  \\"When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.\\"
  templateLocked: String
  \\"When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.\\"
  templateRequired: String
  \\"When set to **true**, PDF form field data is transformed into document tab values when the PDF form field name matches the DocuSign custom tab tabLabel. The resulting PDF form data is also returned in the PDF meta data when requesting the document PDF. See the [ML:Transform PDF Fields] section for more information about how fields are transformed into DocuSign tabs.\\"
  transformPdfFields: String
  uri: String
}

input matchBox_Input {
  \\"Height of the tab in pixels.\\"
  height: Int
  \\"Specifies the page number on which the tab is located.\\\\nMust be 1 for [supplemental documents][supdocs].\\\\n\\\\n[supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents\\"
  pageNumber: Int
  \\"Width of the tab in pixels.\\"
  width: Int
  \\"This indicates the horizontal offset of the object on the page.\\\\nDocuSign uses 72 DPI when determining position.\\\\nRequired. May be zero.\\"
  xPosition: Int
  \\"This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.\\"
  yPosition: Int
}

input inlineTemplate_Input {
  customFields: AccountCustomFields_Input
  \\"Complex element contains the details on the documents in the envelope.\\"
  documents: [document_Input]
  envelope: Envelopes_Input
  recipients: EnvelopeRecipients_Input
  \\"Specifies the order in which templates are overlaid.\\"
  sequence: String
}

\\"Custom Fields\\"
input AccountCustomFields_Input {
  \\"An array of list custom fields.\\"
  listCustomFields: [listCustomField_Input]
  \\"An array of text custom fields.\\"
  textCustomFields: [textCustomField_Input]
}

input listCustomField_Input {
  \\"If merge field's are being used, specifies the type of the merge field. The only  supported value is **salesforce**.\\"
  configurationType: String
  errorDetails: errorDetails_Input
  \\"An ID used to specify a custom field.\\"
  fieldId: String
  listItems: [String]
  \\"The name of the custom field.\\"
  name: String
  \\"When set to **true**, the signer is required to fill out this tab\\"
  required: String
  \\"A boolean indicating if the value should be displayed.\\"
  show: String
  \\"The value of the custom field.\\\\n\\\\nMaximum Length: 100 characters.\\"
  value: String
}

input textCustomField_Input {
  \\"If merge field's are being used, specifies the type of the merge field. The only  supported value is **salesforce**.\\"
  configurationType: String
  errorDetails: errorDetails_Input
  \\"An ID used to specify a custom field.\\"
  fieldId: String
  \\"The name of the custom field.\\"
  name: String
  \\"When set to **true**, the signer is required to fill out this tab\\"
  required: String
  \\"A boolean indicating if the value should be displayed.\\"
  show: String
  \\"The value of the custom field.\\"
  value: String
}

\\"Envelope creation, management\\"
input Envelopes_Input {
  \\"When set to **true**, Document Markup is enabled for envelope. Account must have Document Markup enabled to use this\\"
  allowMarkup: String
  \\"When set to **true**, the recipient can redirect an envelope to a more appropriate recipient.\\"
  allowReassign: String
  \\"When set to **true**, the envelope is queued for processing and the value of the \`status\` property is set to 'Processing'. Additionally, get status calls return 'Processing' until completed.\\"
  asynchronous: String
  attachmentsUri: String
  \\"Specifies the Authoritative copy feature. If set to true the Authoritative copy feature is enabled.\\"
  authoritativeCopy: String
  \\"Specifies whether auto navigation is set for the recipient.\\"
  autoNavigation: String
  \\"The unique identifier of a brand.\\"
  brandId: String
  brandLock: String
  \\"Retrieves a URI for an endpoint that allows you to easily retrieve certificate information.\\"
  certificateUri: String
  \\"Specifies the date and time this item was completed.\\"
  completedDateTime: String
  \\"Indicates the date and time the item was created.\\"
  createdDateTime: String
  customFields: AccountCustomFields_Input
  \\"Contains a URI for an endpoint that you can use to retrieve the custom fields.\\"
  customFieldsUri: String
  \\"The date and time the recipient declined the document.\\"
  declinedDateTime: String
  \\"Specifies the data and time the item was deleted.\\"
  deletedDateTime: String
  \\"Reserved: For DocuSign use only.\\"
  deliveredDateTime: String
  documentsCombinedUri: String
  \\"Contains a URI for an endpoint that you can use to retrieve the documents.\\"
  documentsUri: String
  \\"This is the same as the email body. If specified it is included in email body for all envelope recipients.\\"
  emailBlurb: String
  emailSettings: EnvelopeEmailSettings_Input
  \\"Specifies the subject of the email that is sent to all recipients.\\\\n\\\\nSee [ML:Template Email Subject Merge Fields] for information about adding merge field information to the email subject.\\"
  emailSubject: String
  \\"When set to **true**, the signer is allowed to print the document and sign it on paper.\\"
  enableWetSign: String
  \\"When set to **true**, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.\\\\n\\\\nYour account must have Document Visibility enabled to use this.\\"
  enforceSignerVisibility: String
  \\"The envelope ID of the envelope status that failed to post.\\"
  envelopeId: String
  \\"When set to **true**, Envelope ID Stamping is enabled.\\"
  envelopeIdStamping: String
  \\"Contains a URI for an endpoint that you can use to retrieve the envelope or envelopes.\\"
  envelopeUri: String
  initialSentDateTime: String
  \\"When set to **true**, indicates that this module is enabled on the account.\\"
  is21CFRPart11: String
  isSignatureProviderEnvelope: String
  \\"The date and time the item was last modified.\\"
  lastModifiedDateTime: String
  lockInformation: EnvelopeLocks_Input
  \\"When set to **true**, prevents senders from changing the contents of \`emailBlurb\` and \`emailSubject\` properties for the envelope. \\\\n\\\\nAdditionally, this prevents users from making changes to the contents of \`emailBlurb\` and \`emailSubject\` properties when correcting envelopes. \\\\n\\\\nHowever, if the \`messageLock\` node is set to true**** and the \`emailSubject\` property is empty, senders and correctors are able to add a subject to the envelope.\\"
  messageLock: String
  notification: notification_Input
  \\"Contains a URI for an endpoint that you can use to retrieve the notifications.\\"
  notificationUri: String
  purgeState: String
  recipients: EnvelopeRecipients_Input
  \\"When set to **true**, prevents senders from changing, correcting, or deleting the recipient information for the envelope.\\"
  recipientsLock: String
  \\"Contains a URI for an endpoint that you can use to retrieve the recipients.\\"
  recipientsUri: String
  \\"The date and time the envelope was sent.\\"
  sentDateTime: String
  \\"Specifies the physical location where the signing takes place. It can have two enumeration values; InPerson and Online. The default value is Online.\\"
  signingLocation: String
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* created - The envelope is created as a draft. It can be modified and sent later.\\\\n* sent - The envelope is sent to the recipients.\\"
  status: String
  \\"The data and time the status changed.\\"
  statusChangedDateTime: String
  \\"Contains a URI for an endpoint which you can use to retrieve the templates.\\"
  templatesUri: String
  \\"Used to identify an envelope. The id is a sender-generated value and is valid in the DocuSign system for 7 days. It is recommended that a transaction ID is used for offline signing to ensure that an envelope is not sent multiple times. The \`transactionId\` property can be used determine an envelope's status (i.e. was it created or not) in cases where the internet connection was lost before the envelope status was returned.\\"
  transactionId: String
  \\"When set to **true**, the disclosure is shown to recipients in accordance with the account's Electronic Record and Signature Disclosure frequency setting. When set to **false**, the Electronic Record and Signature Disclosure is not shown to any envelope recipients. \\\\n\\\\nIf the \`useDisclosure\` property is not set, then the account's normal disclosure setting is used and the value of the \`useDisclosure\` property is not returned in responses when getting envelope information.\\"
  useDisclosure: String
  \\"The date and time the envelope or template was voided.\\"
  voidedDateTime: String
  \\"The reason the envelope or template was voided.\\"
  voidedReason: String
}

\\"Envelope email settings\\"
input EnvelopeEmailSettings_Input {
  \\"A list of email addresses that receive a copy of all email communications for an envelope. You can use this for archiving purposes.\\"
  bccEmailAddresses: [bccEmailAddress_Input]
  replyEmailAddressOverride: String
  replyEmailNameOverride: String
}

\\"Contains information about the BCC email address.\\"
input bccEmailAddress_Input {
  \\"Only users with canManageAccount setting can use this option. An array of up to 5 email addresses the envelope is sent to as a BCC email. \\\\n \\\\nExample: If your account has BCC for Email Archive set up for the email address 'archive@mycompany.com' and you send an envelope using the BCC Email Override to send a BCC email to 'salesarchive@mycompany.com', then a copy of the envelope is only sent to the 'salesarchive@mycompany.com' email address.\\"
  bccEmailAddressId: String
  \\"Specifies the BCC email address. DocuSign verifies that the email format is correct, but does not verify that the email is active.Using this overrides the BCC for Email Archive information setting for this envelope.\\\\n\\\\nMaximum of length: 100 characters.\\"
  email: String
}

\\"Envelope locks\\"
input EnvelopeLocks_Input {
  errorDetails: errorDetails_Input
  \\"Sets the time, in seconds, until the lock expires when there is no activity on the envelope.\\\\n\\\\nIf no value is entered, then the default value of 300 seconds is used. The maximum value is 1,800 seconds.\\\\n\\\\nThe lock duration can be extended.\\"
  lockDurationInSeconds: String
  \\"A unique identifier provided to the owner of the envelope lock.   Used to prove ownership of the lock.\\"
  lockToken: String
  \\"The type of envelope lock.  Currently \\\\\\"edit\\\\\\" is the only supported type.\\"
  lockType: String
  \\"Specifies the friendly name of  the application that is locking the envelope.\\"
  lockedByApp: String
  lockedByUser: userInfo_Input
  \\"The datetime until the envelope lock expires.\\"
  lockedUntilDateTime: String
  \\"Reserved for future use.\\\\n\\\\nIndicates whether a scratchpad is used for editing information.\\"
  useScratchPad: String
}

\\"A complex element that specifies the notification options for the envelope. It consists of:\\\\n\\\\n* useAccountDefaults - When set to **true**, the account default notification settings are used for the envelope. \\\\n* reminders - A complex element that specifies reminder settings for the envelope. It consists of: \\\\n\\\\n   * reminderEnabled - When set to **true**, a reminder message is sent to the recipient.\\\\n   * reminderDelay - An interger that sets the number of days after the recipient receives the envelope that reminder emails are sent to the recipient. \\\\n   * reminderFrequency - An interger that sets the interval, in days, between reminder emails. \\\\n\\\\n* expirations - A complex element that specifies the expiration settings for the envelope. It consists of:\\\\n\\\\n   * expireEnabled - When set to **true**, the envelope expires (is no longer available for signing) in the set number of days. If false, the account default setting is used. If the account does not have an expiration setting, the DocuSign default value of 120 days is used. \\\\n   * expireAfter - An integer that sets the number of days the envelope is active.\\\\n   * expireWarn - An integer that sets the number of days before envelope expiration that an expiration warning email is sent to the recipient. If set to 0 (zero), no warning email is sent.\\"
input notification_Input {
  expirations: expirations_Input
  reminders: reminders_Input
  \\"When set to **true**, the account default notification settings are used for the envelope.\\"
  useAccountDefaults: String
}

\\"A complex element that specifies the expiration settings for the envelope.\\"
input expirations_Input {
  \\"An integer that sets the number of days the envelope is active.\\"
  expireAfter: String
  \\"When set to **true**, the envelope expires (is no longer available for signing) in the set number of days. If false, the account default setting is used. If the account does not have an expiration setting, the DocuSign default value of 120 days is used.\\"
  expireEnabled: String
  \\"An integer that sets the number of days before envelope expiration that an expiration warning email is sent to the recipient. If set to 0 (zero), no warning email is sent.\\"
  expireWarn: String
}

\\"A complex element that specifies reminder settings for the envelope\\"
input reminders_Input {
  \\"An interger that sets the number of days after the recipient receives the envelope that reminder emails are sent to the recipient.\\"
  reminderDelay: String
  \\"When set to **true**, the envelope expires (is no longer available for signing) in the set number of days. If false, the account default setting is used. If the account does not have an expiration setting, the DocuSign default value of 120 days is used.\\"
  reminderEnabled: String
  \\"An interger that sets the interval, in days, between reminder emails.\\"
  reminderFrequency: String
}

\\"Envelope recipients\\"
input EnvelopeRecipients_Input {
  \\"A complex type defining the management and access rights of a recipient assigned assigned as an agent on the document.\\"
  agents: [agent_Input]
  \\"A complex type containing information about recipients who should receive a copy of the envelope, but does not need to sign it.\\"
  carbonCopies: [carbonCopy_Input]
  \\"A complex type containing information on a recipient the must receive the completed documents for the envelope to be completed, but the recipient does not need to sign, initial, date, or add information to any of the documents.\\"
  certifiedDeliveries: [certifiedDelivery_Input]
  currentRoutingOrder: String
  \\"A complex type defining the management and access rights of a recipient assigned assigned as an editor on the document.\\"
  editors: [editor_Input]
  errorDetails: errorDetails_Input
  \\"Specifies a signer that is in the same physical location as a DocuSign user who will act as a Signing Host for the transaction. The recipient added is the Signing Host and new separate Signer Name field appears after Sign in person is selected.\\"
  inPersonSigners: [inPersonSigner_Input]
  \\"Identifies a recipient that can, but is not required to, add name and email information for recipients at the same or subsequent level in the routing order (until subsequent Agents, Editors or Intermediaries recipient types are added).\\"
  intermediaries: [agent_Input]
  \\"The list of recipient event statuses that will trigger Connect to send updates to the url. It can be a two-part list with:\\\\n\\\\n* recipientEventStatusCode - The recipient status, this can be Sent, Delivered, Completed, Declined, AuthenticationFailed, and AutoResponded.\\\\n* includeDocuments - When set to **true**, the envelope time zone information is included in the message.\\"
  recipientCount: String
  \\"A complex type containing information about the Signer recipient.\\"
  signers: [signer_Input]
}

\\"Contains information about agent recipients.\\"
input agent_Input {
  \\"If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \\\\n\\\\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\\\\n\\\\nIf blank, but the signer \`accessCode\` property is set in the envelope, then that value is used.\\\\n\\\\nIf blank and the signer \`accessCode\` property is not set, then the access code is not required.\\"
  accessCode: String
  \\"This Optional attribute indicates that the access code will be added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient.\\"
  addAccessCodeToEmail: String
  \\"Specifies whether the recipient is embedded or remote. \\\\n\\\\nIf the \`clientUserId\` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.\\\\n\\\\nNote: if the \`clientUserId\` property is set and either \`SignerMustHaveAccount\` or \`SignerMustLoginToSign\` property of the account settings is set to  **true**, an error is generated on sending. \\\\n\\\\nMaximum length: 100 characters.\\"
  clientUserId: String
  \\"An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.\\"
  customFields: [String]
  \\"The date and time the recipient declined the document.\\"
  declinedDateTime: String
  \\"The reason the recipient declined the document.\\"
  declinedReason: String
  \\"Reserved: For DocuSign use only.\\"
  deliveredDateTime: String
  \\"Reserved: For DocuSign use only.\\"
  deliveryMethod: String
  documentVisibility: [documentVisibility_Input]
  \\"Email id of the recipient. Notification of the document to sign is sent to this email id. \\\\n\\\\nMaximum length: 100 characters.\\"
  email: String
  emailNotification: recipientEmailNotification_Input
  emailRecipientPostSigningURL: String
  \\"Specifies a sender provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \\\\n\\\\nIf set to \`SIGN_AT_DOCUSIGN\`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation that is launched by any partner.\\\\n\\\\nIt is important to remember that in a typical embedded workflow the authentication of an embedded recipient is the responsibility of the sending application, DocuSign expects that senders will follow their own process for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process in initiated. However, when the sending application sets \`EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN\`, the recipient goes directly to the embedded signing or viewing process bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\\\\n\\\\nIf the \`clientUserId\` property is NOT set, and the \`embeddedRecipientStartURL\` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: envelopeId, recipientId, recipientName, recipientEmail, and customFields. The \`customFields\` property must be set fort the recipient or envelope. The merge fields are enclosed in double brackets. \\\\n\\\\n*Example*: \\\\n\\\\n\`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]\`\\"
  embeddedRecipientStartURL: String
  errorDetails: errorDetails_Input
  \\"Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the \`enforceSignerVisibility\` property must be set to **true** for the envelope to use this.\\\\n\\\\nWhen enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.\\"
  excludedDocuments: [String]
  \\"Reserved:\\"
  faxNumber: String
  \\"Specifies authentication check by name. The names used here must be the same as the authentication type names used by the account (these name can also be found in the web console sending interface in the Identify list for a recipient,) This overrides any default authentication setting.\\\\n\\\\n*Example*: Your account has ID Check and SMS Authentication available and in the web console Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check in an envelope, the idCheckConfigurationName should be 'ID Check '. If you wanted to use SMS, it would be 'SMS Auth $' and you would need to add you would need to add phone number information to the \`smsAuthentication\` node.\\"
  idCheckConfigurationName: String
  idCheckInformationInput: idCheckInformationInput_Input
  \\"When set to **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account.\\"
  inheritEmailNotificationConfiguration: String
  name: String
  \\"A note sent to the recipient in the signing email.\\\\nThis note is unique to this recipient.\\\\nIn the user interface,\\\\nit appears near the upper left corner\\\\nof the document\\\\non the signing screen.\\\\n\\\\nMaximum Length: 1000 characters.\\"
  note: String
  phoneAuthentication: recipientPhoneAuthentication_Input
  \\"Reserved:\\"
  recipientAttachments: [recipientAttachment_Input]
  recipientAuthenticationStatus: authenticationStatus_Input
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  recipientIdGuid: String
  \\"When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity.\\"
  requireIdLookup: String
  \\"Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.\\"
  roleName: String
  \\"Specifies the routing order of the recipient in the envelope.\\"
  routingOrder: String
  samlAuthentication: recipientSAMLAuthentication_Input
  \\"The date and time the envelope was sent.\\"
  sentDateTime: String
  \\"Reserved: For DocuSign use only.\\"
  signedDateTime: String
  \\"When set to **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab ( instead of adopting a signature/initial style or only drawing a signature/initial once).\\"
  signingGroupId: String
  \\"The display name for the signing group. \\\\n\\\\nMaximum Length: 100 characters.\\"
  signingGroupName: String
  \\"A complex type that contains information about users in the signing group.\\"
  signingGroupUsers: [userInfo_Input]
  smsAuthentication: recipientSMSAuthentication_Input
  \\"Lists the social ID type that can be used for recipient authentication.\\"
  socialAuthentications: [socialAuthentication_Input]
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.\\"
  templateLocked: String
  \\"When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.\\"
  templateRequired: String
  totalTabCount: String
  \\"The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.\\"
  userId: String
}

input documentVisibility_Input {
  \\"Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.\\"
  documentId: String
  errorDetails: errorDetails_Input
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  rights: String
  visible: String
}

input recipientEmailNotification_Input {
  \\"Specifies the email body of the message sent to the recipient. \\\\n\\\\nMaximum length: 10000 characters.\\"
  emailBody: String
  \\"Specifies the subject of the email that is sent to all recipients.\\\\n\\\\nSee [ML:Template Email Subject Merge Fields] for information about adding merge field information to the email subject.\\"
  emailSubject: String
  \\"The language to be used with your custom notification email. The supported languages, with the language value shown in parenthesis, are: Arabic (ar), Bahasa Indonesia (id), Bahasa Melayu (ms) Bulgarian (bg), Czech (cs), Chinese Simplified (zh_CN), Chinese Traditional (zh_TW), Croatian (hr), Danish (da), Dutch (nl), English US (en), English UK (en_GB), Estonian (et), Farsi (fa), Finnish (fi), French (fr), French Canada (fr_CA), German (de), Greek (el), Hebrew (he), Hindi (hi), Hungarian (hu), Italian (it), Japanese (ja), Korean (ko), Latvian (lv), Lithuanian (lt), Norwegian (no), Polish (pl), Portuguese (pt), Portuguese Brazil (pt_BR), Romanian (ro),Russian (ru), Serbian (sr), Slovak (sk), Slovenian (sl), Spanish (es),Spanish Latin America (es_MX), Swedish (sv), Thai (th), Turkish (tr), Ukrainian (uk), and Vietnamese (vi).\\"
  supportedLanguage: String
}

\\"A complex element that contains input information related to a recipient ID check. It can include the following information.\\\\n\\\\naddressInformationInput: Used to set recipient address information and consists of:\\\\n\\\\n* addressInformation: consists of six elements, with stree2 and zipPlus4 being optional. The elements are: street1, street2, city, state, zip, zipPlus4. The maximum length of each element is: street1/street2 = 150 characters, city = 50 characters, state = 2 characters, and zip/zipPlus4 = 20 characters.\\\\n* displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.\\\\n* receiveInResponse: A Boolean element that specifies if the information needs to be returned in the response.\\\\n\\\\ndobInformationInput: Used to set recipient date of birth information and consists of:\\\\n\\\\n* dateOfBirth: Specifies the recipient's date, month and year of birth.\\\\n* displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.\\\\n* receiveInResponse: A Boolean element that specifies if the information needs to be returned in the response.\\\\n\\\\nssn4InformationInput: Used to set the last four digits of the recipient's SSN information and consists of:\\\\n\\\\n* ssn4: Specifies the last four digits of the recipient's SSN.\\\\n* displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.\\\\n* receiveInResponse: A Boolean element that specifies if the information needs to be returned in the response.\\\\n\\\\nssn9InformationInput: Used to set the recipient's SSN information. Note that the ssn9 information can never be returned in the response. The ssn9 input consists of: \\\\n* ssn9: Specifies the recipient's SSN.\\\\n* displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.\\"
input idCheckInformationInput_Input {
  addressInformationInput: addressInformationInput_Input
  dobInformationInput: dobInformationInput_Input
  ssn4InformationInput: ssn4InformationInput_Input
  ssn9InformationInput: ssn9InformationInput_Input
}

\\"Contains address input information.\\"
input addressInformationInput_Input {
  addressInformation: addressInformation_Input
  \\"Specifies the display level for the recipient. \\\\nValid values are: \\\\n\\\\n* ReadOnly\\\\n* Editable\\\\n* DoNotDisplay\\"
  displayLevelCode: String
  \\"When set to **true**, the information needs to be returned in the response.\\"
  receiveInResponse: String
}

\\"Complex type containing:\\\\n\\\\n* dateOfBirth\\\\n* displayLevelCode\\\\n* receiveInResponse\\"
input dobInformationInput_Input {
  \\"Specifies the recipient's date, month, and year of birth.\\"
  dateOfBirth: String
  \\"Specifies the display level for the recipient. \\\\nValid values are: \\\\n\\\\n* ReadOnly\\\\n* Editable\\\\n* DoNotDisplay\\"
  displayLevelCode: String
  \\"When set to **true**, the information needs to be returned in the response.\\"
  receiveInResponse: String
}

input ssn4InformationInput_Input {
  \\"Specifies the display level for the recipient. \\\\nValid values are: \\\\n\\\\n* ReadOnly\\\\n* Editable\\\\n* DoNotDisplay\\"
  displayLevelCode: String
  \\"When set to **true**, the information needs to be returned in the response.\\"
  receiveInResponse: String
  \\"The last four digits of the recipient's Social Security Number (SSN).\\"
  ssn4: String
}

input ssn9InformationInput_Input {
  \\"Specifies the display level for the recipient. \\\\nValid values are: \\\\n\\\\n* ReadOnly\\\\n* Editable\\\\n* DoNotDisplay\\"
  displayLevelCode: String
  \\"The recipient's Social Security Number(SSN).\\"
  ssn9: String
}

\\"A complex type that Contains the elements:\\\\n\\\\n* recipMayProvideNumber - Boolean. When set to **true**, the recipient can use whatever phone number they choose.\\\\n* senderProvidedNumbers - ArrayOfString.  A list of phone numbers the recipient can use.\\\\n* recordVoicePrint - Reserved.\\\\n* validateRecipProvidedNumber - Reserved.\\"
input recipientPhoneAuthentication_Input {
  \\"Boolean. When set to **true**, the recipient can supply a phone number their choice.\\"
  recipMayProvideNumber: String
  \\"Reserved.\\"
  recordVoicePrint: String
  \\"An Array containing a list of phone numbers the recipient may use for SMS text authentication.\\"
  senderProvidedNumbers: [String]
  \\"Reserved.\\"
  validateRecipProvidedNumber: String
}

input recipientAttachment_Input {
  attachmentId: String
  attachmentType: String
  data: String
  label: String
  name: String
  remoteUrl: String
}

\\"Contains information about the authentication status.\\"
input authenticationStatus_Input {
  accessCodeResult: eventResult_Input
  ageVerifyResult: eventResult_Input
  anySocialIDResult: eventResult_Input
  facebookResult: eventResult_Input
  googleResult: eventResult_Input
  idLookupResult: eventResult_Input
  idQuestionsResult: eventResult_Input
  linkedinResult: eventResult_Input
  liveIDResult: eventResult_Input
  ofacResult: eventResult_Input
  openIDResult: eventResult_Input
  phoneAuthResult: eventResult_Input
  sTANPinResult: eventResult_Input
  salesforceResult: eventResult_Input
  signatureProviderResult: eventResult_Input
  smsAuthResult: eventResult_Input
  twitterResult: eventResult_Input
  yahooResult: eventResult_Input
}

input eventResult_Input {
  eventTimestamp: String
  failureDescription: String
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  vendorFailureStatusCode: String
}

\\"Contains the name/value pair information for the SAML assertion attributes:\\\\n\\\\n* name - The name of the SAML assertion attribute.\\\\n* value - The value associated with the named SAML assertion attribute. \\\\n\\\\nYour account must be set up to use SSO to use this.\\"
input recipientSAMLAuthentication_Input {
  samlAssertionAttributes: [samlAssertionAttribute_Input]
}

input samlAssertionAttribute_Input {
  errorDetails: errorDetails_Input
  name: String
  \\"The initial value of the tab when it was sent to the recipient.\\"
  originalValue: String
  \\"The value associated with the named SAML assertion attribute\\"
  value: String
}

\\"Contains the element senderProvidedNumbers which is an Array  of phone numbers the recipient can use for SMS text authentication.\\"
input recipientSMSAuthentication_Input {
  \\"An Array containing a list of phone numbers the recipient may use for SMS text authentication.\\"
  senderProvidedNumbers: [String]
}

input socialAuthentication_Input {
  \\"Reserved: TBD\\"
  authentication: String
}

input carbonCopy_Input {
  \\"If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \\\\n\\\\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\\\\n\\\\nIf blank, but the signer \`accessCode\` property is set in the envelope, then that value is used.\\\\n\\\\nIf blank and the signer \`accessCode\` property is not set, then the access code is not required.\\"
  accessCode: String
  \\"This Optional attribute indicates that the access code will be added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient.\\"
  addAccessCodeToEmail: String
  \\"Specifies whether the recipient is embedded or remote. \\\\n\\\\nIf the \`clientUserId\` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.\\\\n\\\\nNote: if the \`clientUserId\` property is set and either \`SignerMustHaveAccount\` or \`SignerMustLoginToSign\` property of the account settings is set to  **true**, an error is generated on sending. \\\\n\\\\nMaximum length: 100 characters.\\"
  clientUserId: String
  \\"An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.\\"
  customFields: [String]
  \\"The date and time the recipient declined the document.\\"
  declinedDateTime: String
  \\"The reason the recipient declined the document.\\"
  declinedReason: String
  \\"Reserved: For DocuSign use only.\\"
  deliveredDateTime: String
  \\"Reserved: For DocuSign use only.\\"
  deliveryMethod: String
  documentVisibility: [documentVisibility_Input]
  \\"Email id of the recipient. Notification of the document to sign is sent to this email id. \\\\n\\\\nMaximum length: 100 characters.\\"
  email: String
  emailNotification: recipientEmailNotification_Input
  emailRecipientPostSigningURL: String
  \\"Specifies a sender provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \\\\n\\\\nIf set to \`SIGN_AT_DOCUSIGN\`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation that is launched by any partner.\\\\n\\\\nIt is important to remember that in a typical embedded workflow the authentication of an embedded recipient is the responsibility of the sending application, DocuSign expects that senders will follow their own process for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process in initiated. However, when the sending application sets \`EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN\`, the recipient goes directly to the embedded signing or viewing process bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\\\\n\\\\nIf the \`clientUserId\` property is NOT set, and the \`embeddedRecipientStartURL\` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: envelopeId, recipientId, recipientName, recipientEmail, and customFields. The \`customFields\` property must be set fort the recipient or envelope. The merge fields are enclosed in double brackets. \\\\n\\\\n*Example*: \\\\n\\\\n\`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]\`\\"
  embeddedRecipientStartURL: String
  errorDetails: errorDetails_Input
  \\"Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the \`enforceSignerVisibility\` property must be set to **true** for the envelope to use this.\\\\n\\\\nWhen enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.\\"
  excludedDocuments: [String]
  \\"Reserved:\\"
  faxNumber: String
  \\"Specifies authentication check by name. The names used here must be the same as the authentication type names used by the account (these name can also be found in the web console sending interface in the Identify list for a recipient,) This overrides any default authentication setting.\\\\n\\\\n*Example*: Your account has ID Check and SMS Authentication available and in the web console Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check in an envelope, the idCheckConfigurationName should be 'ID Check '. If you wanted to use SMS, it would be 'SMS Auth $' and you would need to add you would need to add phone number information to the \`smsAuthentication\` node.\\"
  idCheckConfigurationName: String
  idCheckInformationInput: idCheckInformationInput_Input
  \\"When set to **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account.\\"
  inheritEmailNotificationConfiguration: String
  \\"legal name of the recipient.\\\\n\\\\nMaximum Length: 100 characters.\\"
  name: String
  \\"A note sent to the recipient in the signing email.\\\\nThis note is unique to this recipient.\\\\nIn the user interface,\\\\nit appears near the upper left corner\\\\nof the document\\\\non the signing screen.\\\\n\\\\nMaximum Length: 1000 characters.\\"
  note: String
  phoneAuthentication: recipientPhoneAuthentication_Input
  \\"Reserved:\\"
  recipientAttachments: [recipientAttachment_Input]
  recipientAuthenticationStatus: authenticationStatus_Input
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  recipientIdGuid: String
  \\"When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity.\\"
  requireIdLookup: String
  \\"Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.\\"
  roleName: String
  \\"Specifies the routing order of the recipient in the envelope.\\"
  routingOrder: String
  samlAuthentication: recipientSAMLAuthentication_Input
  \\"The date and time the envelope was sent.\\"
  sentDateTime: String
  \\"Reserved: For DocuSign use only.\\"
  signedDateTime: String
  \\"When set to **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab ( instead of adopting a signature/initial style or only drawing a signature/initial once).\\"
  signingGroupId: String
  \\"The display name for the signing group. \\\\n\\\\nMaximum Length: 100 characters.\\"
  signingGroupName: String
  \\"A complex type that contains information about users in the signing group.\\"
  signingGroupUsers: [userInfo_Input]
  smsAuthentication: recipientSMSAuthentication_Input
  \\"Lists the social ID type that can be used for recipient authentication.\\"
  socialAuthentications: [socialAuthentication_Input]
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.\\"
  templateLocked: String
  \\"When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.\\"
  templateRequired: String
  totalTabCount: String
  \\"The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.\\"
  userId: String
}

input certifiedDelivery_Input {
  \\"If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \\\\n\\\\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\\\\n\\\\nIf blank, but the signer \`accessCode\` property is set in the envelope, then that value is used.\\\\n\\\\nIf blank and the signer \`accessCode\` property is not set, then the access code is not required.\\"
  accessCode: String
  \\"This Optional attribute indicates that the access code will be added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient.\\"
  addAccessCodeToEmail: String
  \\"Specifies whether the recipient is embedded or remote. \\\\n\\\\nIf the \`clientUserId\` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.\\\\n\\\\nNote: if the \`clientUserId\` property is set and either \`SignerMustHaveAccount\` or \`SignerMustLoginToSign\` property of the account settings is set to  **true**, an error is generated on sending. \\\\n\\\\nMaximum length: 100 characters.\\"
  clientUserId: String
  \\"An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.\\"
  customFields: [String]
  \\"The date and time the recipient declined the document.\\"
  declinedDateTime: String
  \\"The reason the recipient declined the document.\\"
  declinedReason: String
  \\"Reserved: For DocuSign use only.\\"
  deliveredDateTime: String
  \\"Reserved: For DocuSign use only.\\"
  deliveryMethod: String
  documentVisibility: [documentVisibility_Input]
  email: String
  emailNotification: recipientEmailNotification_Input
  emailRecipientPostSigningURL: String
  \\"Specifies a sender provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \\\\n\\\\nIf set to \`SIGN_AT_DOCUSIGN\`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation that is launched by any partner.\\\\n\\\\nIt is important to remember that in a typical embedded workflow the authentication of an embedded recipient is the responsibility of the sending application, DocuSign expects that senders will follow their own process for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process in initiated. However, when the sending application sets \`EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN\`, the recipient goes directly to the embedded signing or viewing process bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\\\\n\\\\nIf the \`clientUserId\` property is NOT set, and the \`embeddedRecipientStartURL\` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: envelopeId, recipientId, recipientName, recipientEmail, and customFields. The \`customFields\` property must be set fort the recipient or envelope. The merge fields are enclosed in double brackets. \\\\n\\\\n*Example*: \\\\n\\\\n\`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]\`\\"
  embeddedRecipientStartURL: String
  errorDetails: errorDetails_Input
  \\"Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the \`enforceSignerVisibility\` property must be set to **true** for the envelope to use this.\\\\n\\\\nWhen enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.\\"
  excludedDocuments: [String]
  \\"Reserved:\\"
  faxNumber: String
  \\"Specifies authentication check by name. The names used here must be the same as the authentication type names used by the account (these name can also be found in the web console sending interface in the Identify list for a recipient,) This overrides any default authentication setting.\\\\n\\\\n*Example*: Your account has ID Check and SMS Authentication available and in the web console Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check in an envelope, the idCheckConfigurationName should be 'ID Check '. If you wanted to use SMS, it would be 'SMS Auth $' and you would need to add you would need to add phone number information to the \`smsAuthentication\` node.\\"
  idCheckConfigurationName: String
  idCheckInformationInput: idCheckInformationInput_Input
  \\"When set to **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account.\\"
  inheritEmailNotificationConfiguration: String
  name: String
  \\"A note sent to the recipient in the signing email.\\\\nThis note is unique to this recipient.\\\\nIn the user interface,\\\\nit appears near the upper left corner\\\\nof the document\\\\non the signing screen.\\\\n\\\\nMaximum Length: 1000 characters.\\"
  note: String
  phoneAuthentication: recipientPhoneAuthentication_Input
  \\"Reserved:\\"
  recipientAttachments: [recipientAttachment_Input]
  recipientAuthenticationStatus: authenticationStatus_Input
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  recipientIdGuid: String
  \\"When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity.\\"
  requireIdLookup: String
  \\"Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.\\"
  roleName: String
  \\"Specifies the routing order of the recipient in the envelope.\\"
  routingOrder: String
  samlAuthentication: recipientSAMLAuthentication_Input
  \\"The date and time the envelope was sent.\\"
  sentDateTime: String
  \\"Reserved: For DocuSign use only.\\"
  signedDateTime: String
  \\"When set to **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab ( instead of adopting a signature/initial style or only drawing a signature/initial once).\\"
  signingGroupId: String
  \\"The display name for the signing group. \\\\n\\\\nMaximum Length: 100 characters.\\"
  signingGroupName: String
  \\"A complex type that contains information about users in the signing group.\\"
  signingGroupUsers: [userInfo_Input]
  smsAuthentication: recipientSMSAuthentication_Input
  \\"Lists the social ID type that can be used for recipient authentication.\\"
  socialAuthentications: [socialAuthentication_Input]
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.\\"
  templateLocked: String
  \\"When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.\\"
  templateRequired: String
  totalTabCount: String
  \\"The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.\\"
  userId: String
}

input editor_Input {
  \\"If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \\\\n\\\\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\\\\n\\\\nIf blank, but the signer \`accessCode\` property is set in the envelope, then that value is used.\\\\n\\\\nIf blank and the signer \`accessCode\` property is not set, then the access code is not required.\\"
  accessCode: String
  \\"This Optional attribute indicates that the access code will be added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient.\\"
  addAccessCodeToEmail: String
  \\"Specifies whether the recipient is embedded or remote. \\\\n\\\\nIf the \`clientUserId\` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.\\\\n\\\\nNote: if the \`clientUserId\` property is set and either \`SignerMustHaveAccount\` or \`SignerMustLoginToSign\` property of the account settings is set to  **true**, an error is generated on sending. \\\\n\\\\nMaximum length: 100 characters.\\"
  clientUserId: String
  \\"An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.\\"
  customFields: [String]
  \\"The date and time the recipient declined the document.\\"
  declinedDateTime: String
  \\"The reason the recipient declined the document.\\"
  declinedReason: String
  \\"Reserved: For DocuSign use only.\\"
  deliveredDateTime: String
  \\"Reserved: For DocuSign use only.\\"
  deliveryMethod: String
  documentVisibility: [documentVisibility_Input]
  \\"Email id of the recipient. Notification of the document to sign is sent to this email id. \\\\n\\\\nMaximum length: 100 characters.\\"
  email: String
  emailNotification: recipientEmailNotification_Input
  emailRecipientPostSigningURL: String
  \\"Specifies a sender provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \\\\n\\\\nIf set to \`SIGN_AT_DOCUSIGN\`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation that is launched by any partner.\\\\n\\\\nIt is important to remember that in a typical embedded workflow the authentication of an embedded recipient is the responsibility of the sending application, DocuSign expects that senders will follow their own process for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process in initiated. However, when the sending application sets \`EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN\`, the recipient goes directly to the embedded signing or viewing process bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\\\\n\\\\nIf the \`clientUserId\` property is NOT set, and the \`embeddedRecipientStartURL\` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: envelopeId, recipientId, recipientName, recipientEmail, and customFields. The \`customFields\` property must be set fort the recipient or envelope. The merge fields are enclosed in double brackets. \\\\n\\\\n*Example*: \\\\n\\\\n\`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]\`\\"
  embeddedRecipientStartURL: String
  errorDetails: errorDetails_Input
  \\"Reserved:\\"
  faxNumber: String
  \\"Specifies authentication check by name. The names used here must be the same as the authentication type names used by the account (these name can also be found in the web console sending interface in the Identify list for a recipient,) This overrides any default authentication setting.\\\\n\\\\n*Example*: Your account has ID Check and SMS Authentication available and in the web console Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check in an envelope, the idCheckConfigurationName should be 'ID Check '. If you wanted to use SMS, it would be 'SMS Auth $' and you would need to add you would need to add phone number information to the \`smsAuthentication\` node.\\"
  idCheckConfigurationName: String
  idCheckInformationInput: idCheckInformationInput_Input
  \\"When set to **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account.\\"
  inheritEmailNotificationConfiguration: String
  \\"legal name of the recipient.\\\\n\\\\nMaximum Length: 100 characters.\\"
  name: String
  \\"A note sent to the recipient in the signing email.\\\\nThis note is unique to this recipient.\\\\nIn the user interface,\\\\nit appears near the upper left corner\\\\nof the document\\\\non the signing screen.\\\\n\\\\nMaximum Length: 1000 characters.\\"
  note: String
  phoneAuthentication: recipientPhoneAuthentication_Input
  \\"Reserved:\\"
  recipientAttachments: [recipientAttachment_Input]
  recipientAuthenticationStatus: authenticationStatus_Input
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  recipientIdGuid: String
  \\"When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity.\\"
  requireIdLookup: String
  \\"Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.\\"
  roleName: String
  \\"Specifies the routing order of the recipient in the envelope.\\"
  routingOrder: String
  samlAuthentication: recipientSAMLAuthentication_Input
  \\"The date and time the envelope was sent.\\"
  sentDateTime: String
  \\"Reserved: For DocuSign use only.\\"
  signedDateTime: String
  \\"When set to **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab ( instead of adopting a signature/initial style or only drawing a signature/initial once).\\"
  signingGroupId: String
  \\"The display name for the signing group. \\\\n\\\\nMaximum Length: 100 characters.\\"
  signingGroupName: String
  \\"A complex type that contains information about users in the signing group.\\"
  signingGroupUsers: [userInfo_Input]
  smsAuthentication: recipientSMSAuthentication_Input
  \\"Lists the social ID type that can be used for recipient authentication.\\"
  socialAuthentications: [socialAuthentication_Input]
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.\\"
  templateLocked: String
  \\"When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.\\"
  templateRequired: String
  totalTabCount: String
  \\"The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.\\"
  userId: String
}

\\"An in-person recipient is a DocuSign user,\\\\nacting as a Signing Host,\\\\nwho is in the same physical location as the signer.\\\\nTo learn about fields used\\\\nfor eNotary feature,\\\\nsee the [EnvelopeRecipients resource][enveloperecipientsInPerson].\\\\n\\\\n[enveloperecipientsInPerson]: /esign/restapi/Envelopes/EnvelopeRecipients/#in-person-signers-recipient\\"
input inPersonSigner_Input {
  \\"If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \\\\n\\\\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\\\\n\\\\nIf blank, but the signer \`accessCode\` property is set in the envelope, then that value is used.\\\\n\\\\nIf blank and the signer \`accessCode\` property is not set, then the access code is not required.\\"
  accessCode: String
  \\"This Optional attribute indicates that the access code will be added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient.\\"
  addAccessCodeToEmail: String
  \\"Specifies whether auto navigation is set for the recipient.\\"
  autoNavigation: String
  \\"When set to **true**, specifies that the signer can perform the signing ceremony offline.\\"
  canSignOffline: String
  \\"Specifies whether the recipient is embedded or remote. \\\\n\\\\nIf the \`clientUserId\` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.\\\\n\\\\nNote: if the \`clientUserId\` property is set and either \`SignerMustHaveAccount\` or \`SignerMustLoginToSign\` property of the account settings is set to  **true**, an error is generated on sending. \\\\n\\\\nMaximum length: 100 characters.\\"
  clientUserId: String
  creationReason: String
  \\"An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.\\"
  customFields: [String]
  \\"The date and time the recipient declined the document.\\"
  declinedDateTime: String
  \\"The reason the recipient declined the document.\\"
  declinedReason: String
  \\"When set to **true**,\\\\nthis is the default recipient for the envelope.\\\\nThis option is used when creating an envelope from a template.\\"
  defaultRecipient: String
  \\"Reserved: For DocuSign use only.\\"
  deliveredDateTime: String
  \\"Reserved: For DocuSign use only.\\"
  deliveryMethod: String
  documentVisibility: [documentVisibility_Input]
  \\"The signer's email address in an eNotary flow.\\\\n\\\\nUse only when \`inPersonSigningType\` is \`notary\`.\\\\nFor regular in-person-signer flow, use \`signerEmail\` instead.\\"
  email: String
  emailNotification: recipientEmailNotification_Input
  \\"Specifies a sender provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \\\\n\\\\nIf set to \`SIGN_AT_DOCUSIGN\`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation that is launched by any partner.\\\\n\\\\nIt is important to remember that in a typical embedded workflow the authentication of an embedded recipient is the responsibility of the sending application, DocuSign expects that senders will follow their own process for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process in initiated. However, when the sending application sets \`EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN\`, the recipient goes directly to the embedded signing or viewing process bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\\\\n\\\\nIf the \`clientUserId\` property is NOT set, and the \`embeddedRecipientStartURL\` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: envelopeId, recipientId, recipientName, recipientEmail, and customFields. The \`customFields\` property must be set fort the recipient or envelope. The merge fields are enclosed in double brackets. \\\\n\\\\n*Example*: \\\\n\\\\n\`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]\`\\"
  embeddedRecipientStartURL: String
  errorDetails: errorDetails_Input
  \\"Reserved:\\"
  faxNumber: String
  \\"The email address of the signing host.\\\\nThis is the DocuSign user that is hosting the in-person signing session.\\\\n\\\\nRequired when \`inPersonSigningType\` is \`inPersonSigner\`.\\\\nFor eNotary flow, use \`email\` instead.\\\\n\\\\nMaximum Length: 100 characters.\\"
  hostEmail: String
  \\"The name of the signing host.\\\\nThis is the DocuSign user that is hosting the in-person signing session.\\\\n\\\\nRequired when \`inPersonSigningType\` is \`inPersonSigner\`.\\\\nFor eNotary flow, use \`name\` instead.\\\\n\\\\nMaximum Length: 100 characters.\\"
  hostName: String
  \\"Specifies authentication check by name. The names used here must be the same as the authentication type names used by the account (these name can also be found in the web console sending interface in the Identify list for a recipient,) This overrides any default authentication setting.\\\\n\\\\n*Example*: Your account has ID Check and SMS Authentication available and in the web console Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check in an envelope, the idCheckConfigurationName should be 'ID Check '. If you wanted to use SMS, it would be 'SMS Auth $' and you would need to add you would need to add phone number information to the \`smsAuthentication\` node.\\"
  idCheckConfigurationName: String
  idCheckInformationInput: idCheckInformationInput_Input
  \\"Specifies whether the envelope uses the eNotary feature.\\\\nValid values:\\\\n\\\\n* \`inPersonSigner\` The envelope uses the normal in-person signing flow.\\\\n* \`notary\`: The envelope uses the eNotary in-person signing flow.\\"
  inPersonSigningType: String
  \\"When set to **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account.\\"
  inheritEmailNotificationConfiguration: String
  \\"The signer's full legal name in an eNotary flow.\\\\n\\\\nRequired when \`inPersonSigningType\` is \`notary\`.\\\\nFor regular in-person-signer flow, use \`signerName\` instead.\\\\n\\\\nMaximum Length: 100 characters.\\"
  name: String
  notaryHost: notaryHost_Input
  \\"A note sent to the in-person signer in the signing email.\\\\nThis note is visible only to this recipient.\\\\n\\\\nMaximum Length: 1000 characters.\\"
  note: String
  phoneAuthentication: recipientPhoneAuthentication_Input
  \\"Reserved:\\"
  recipientAttachments: [recipientAttachment_Input]
  recipientAuthenticationStatus: authenticationStatus_Input
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  recipientIdGuid: String
  \\"The default signature provider is the DocuSign Electronic signature system. This parameter is used to specify one or more Standards Based Signature (digital signature) providers for the signer to use. [More information](../../../../guide/appendix/standards_based_signatures.html)\\"
  recipientSignatureProviders: [recipientSignatureProvider_Input]
  recipientSuppliesTabs: String
  \\"When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity.\\"
  requireIdLookup: String
  \\"When set to **true**, the signer must print, sign, and upload or fax the signed documents to DocuSign.\\"
  requireSignOnPaper: String
  \\"By default, DocuSign signers create electronic signatures. This field can be used to require the signer to use a SAFE-BioPharma digital certificate for signing.\\\\n\\\\nThis parameter should only be used to select a SAFE-BioPharma certificate. New integrations should use the \`recipientSignatureProviders\` parameter for other types of digital certificates. \\\\n\\\\nSet this parameter to \`safe\` to use a SAFE-BioPharma certificate.\\\\n\\\\nThe signer must be enrolled in the SAFE program to sign with a SAFE certificate.\\"
  requireSignerCertificate: String
  \\"Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.\\"
  roleName: String
  \\"Specifies the routing order of the recipient in the envelope.\\"
  routingOrder: String
  samlAuthentication: recipientSAMLAuthentication_Input
  \\"The date and time the envelope was sent.\\"
  sentDateTime: String
  \\"When set to **true**, specifies that the signer must sign in all locations.\\"
  signInEachLocation: String
  signatureInfo: recipientSignatureInformation_Input
  \\"Reserved: For DocuSign use only.\\"
  signedDateTime: String
  \\"The in-person signer's email address.\\\\n\\\\nRequired when \`inPersonSigningType\` is \`inPersonSigner\`.\\\\nFor eNotary flow, use \`email\` instead.\\\\n\\\\nMaximum Length: 100 characters.\\"
  signerEmail: String
  \\"The in-person signer's full legal name.\\\\n\\\\nRequired when \`inPersonSigningType\` is \`inPersonSigner\`.\\\\nFor eNotary flow, use \`name\` instead.\\\\n\\\\nMaximum Length: 100 characters.\\"
  signerName: String
  \\"When set to **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab ( instead of adopting a signature/initial style or only drawing a signature/initial once).\\"
  signingGroupId: String
  \\"The display name for the signing group. \\\\n\\\\nMaximum Length: 100 characters.\\"
  signingGroupName: String
  \\"A complex type that contains information about users in the signing group.\\"
  signingGroupUsers: [userInfo_Input]
  smsAuthentication: recipientSMSAuthentication_Input
  \\"Lists the social ID type that can be used for recipient authentication.\\"
  socialAuthentications: [socialAuthentication_Input]
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  tabs: EnvelopeRecipientTabs_Input
  \\"When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.\\"
  templateLocked: String
  \\"When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.\\"
  templateRequired: String
  totalTabCount: String
  \\"The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.\\"
  userId: String
}

\\"This object is used only when \`inPersonSigningType\` in the \`inPersonSigner\` object is \`notary\`.\\\\n\\\\nIt describes information about the notary host.\\\\nThe following information is required\\\\nwhen using the eNotary in-person signing flow:\\\\n\\\\n* \`name\`: Specifies the notary's full legal name.\\\\n* \`email\`: Specifies the notary's email address.\\\\n* \`recipientId\`: A unique ID number for the notary signing host.\\"
input notaryHost_Input {
  \\"If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \\\\n\\\\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\\\\n\\\\nIf blank, but the signer \`accessCode\` property is set in the envelope, then that value is used.\\\\n\\\\nIf blank and the signer \`accessCode\` property is not set, then the access code is not required.\\"
  accessCode: String
  \\"This Optional attribute indicates that the access code will be added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient.\\"
  addAccessCodeToEmail: String
  \\"Specifies whether the recipient is embedded or remote. \\\\n\\\\nIf the \`clientUserId\` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.\\\\n\\\\nNote: if the \`clientUserId\` property is set and either \`SignerMustHaveAccount\` or \`SignerMustLoginToSign\` property of the account settings is set to  **true**, an error is generated on sending. \\\\n\\\\nMaximum length: 100 characters.\\"
  clientUserId: String
  \\"An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.\\"
  customFields: [String]
  \\"The date and time the recipient declined the document.\\"
  declinedDateTime: String
  \\"The reason the recipient declined the document.\\"
  declinedReason: String
  \\"Reserved: For DocuSign use only.\\"
  deliveredDateTime: String
  \\"Reserved: For DocuSign use only.\\"
  deliveryMethod: String
  documentVisibility: [documentVisibility_Input]
  \\"The notary's email address.\\\\n\\\\nMaximum Length: 100 characters.\\"
  email: String
  emailNotification: recipientEmailNotification_Input
  \\"Specifies a sender provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \\\\n\\\\nIf set to \`SIGN_AT_DOCUSIGN\`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation that is launched by any partner.\\\\n\\\\nIt is important to remember that in a typical embedded workflow the authentication of an embedded recipient is the responsibility of the sending application, DocuSign expects that senders will follow their own process for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process in initiated. However, when the sending application sets \`EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN\`, the recipient goes directly to the embedded signing or viewing process bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\\\\n\\\\nIf the \`clientUserId\` property is NOT set, and the \`embeddedRecipientStartURL\` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: envelopeId, recipientId, recipientName, recipientEmail, and customFields. The \`customFields\` property must be set fort the recipient or envelope. The merge fields are enclosed in double brackets. \\\\n\\\\n*Example*: \\\\n\\\\n\`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]\`\\"
  embeddedRecipientStartURL: String
  errorDetails: errorDetails_Input
  \\"Reserved:\\"
  faxNumber: String
  hostRecipientId: String
  \\"Specifies authentication check by name. The names used here must be the same as the authentication type names used by the account (these name can also be found in the web console sending interface in the Identify list for a recipient,) This overrides any default authentication setting.\\\\n\\\\n*Example*: Your account has ID Check and SMS Authentication available and in the web console Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check in an envelope, the idCheckConfigurationName should be 'ID Check '. If you wanted to use SMS, it would be 'SMS Auth $' and you would need to add you would need to add phone number information to the \`smsAuthentication\` node.\\"
  idCheckConfigurationName: String
  idCheckInformationInput: idCheckInformationInput_Input
  \\"When set to **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account.\\"
  inheritEmailNotificationConfiguration: String
  \\"The notary's full legal name.\\\\n\\\\nMaximum Length: 100 characters.\\"
  name: String
  notaryEmailMetadata: propertyMetadata_Input
  notaryNameMetadata: propertyMetadata_Input
  \\"A note sent to the notary in the signing email.\\\\nThis note is visible only to this notary.\\\\n\\\\nMaximum Length: 1000 characters.\\"
  note: String
  phoneAuthentication: recipientPhoneAuthentication_Input
  \\"Reserved:\\"
  recipientAttachments: [recipientAttachment_Input]
  recipientAuthenticationStatus: authenticationStatus_Input
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  recipientIdGuid: String
  \\"When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity.\\"
  requireIdLookup: String
  \\"Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.\\"
  roleName: String
  \\"Specifies the routing order of the recipient in the envelope.\\"
  routingOrder: String
  samlAuthentication: recipientSAMLAuthentication_Input
  \\"The date and time the envelope was sent.\\"
  sentDateTime: String
  \\"Reserved: For DocuSign use only.\\"
  signedDateTime: String
  smsAuthentication: recipientSMSAuthentication_Input
  \\"Lists the social ID type that can be used for recipient authentication.\\"
  socialAuthentications: [socialAuthentication_Input]
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.\\"
  templateLocked: String
  \\"When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.\\"
  templateRequired: String
  totalTabCount: String
  \\"The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.\\"
  userId: String
}

input propertyMetadata_Input {
  options: [String]
  rights: String
}

\\"An Electronic or Standards Based Signature (digital signature) provider for the signer to use. [More information.](../../../../guide/appendix/standards_based_signatures.html)\\"
input recipientSignatureProvider_Input {
  \\"The name of an Electronic or Standards Based Signature (digital signature) provider for the signer to use. [The current provider list.](../../../../guide/appendix/standards_based_signatures.html#signature-provider-options)\\"
  signatureProviderName: String
  signatureProviderOptions: recipientSignatureProviderOptions_Input
}

\\"Option settings for the signature provider. Different providers require or use different options. [The current provider list and the options they require.](../../../../guide/appendix/standards_based_signatures.html#signature-provider-options)\\"
input recipientSignatureProviderOptions_Input {
  \\"Reserved for DocuSign\\"
  cpfNumber: String
  \\"A pre-shared secret that the signer must enter to complete the signing process. Eg last six digits of the signer's government ID or Social Security number. Or a newly created pre-shared secret for the transaction. Note: some signature providers may require an exact (case-sensitive) match if alphabetic characters are included in the field.\\"
  oneTimePassword: String
  \\"The role or capacity of the signing recipient. Examples: Manager, Approver, etc.\\"
  signerRole: String
  \\"The mobile phone number used to send the recipient an access code for the signing ceremony. Format: a string starting with +, then the country code followed by the full mobile phone number without any spaces or special characters. Omit leading zeroes before a city code. Examples: +14155551234, +97235551234, +33505551234.\\"
  sms: String
}

\\"Allows the sender to pre-specify the signature name, signature initials and signature font used in the signature stamp for the recipient.\\\\n\\\\nUsed only with recipient types In Person Signers and Signers.\\"
input recipientSignatureInformation_Input {
  fontStyle: String
  signatureInitials: String
  \\"Specifies the user signature name.\\"
  signatureName: String
}

\\"Envelope tabs\\"
input EnvelopeRecipientTabs_Input {
  \\"A tab that allows the recipient to approve documents\\\\nwithout placing a signature or initials on the\\\\ndocument. If the recipient clicks the Approve tab during the signing\\\\nprocess, the recipient is considered to have signed the document. No\\\\ninformation is shown on the document for the approval, but it is\\\\nrecorded as a signature in the envelope history.\\"
  approveTabs: [approve_Input]
  \\"Specifies a tag on the document in a location where the recipient can select an option.\\"
  checkboxTabs: [checkbox_Input]
  \\"Specifies a tag on the document where you want the recipient's company name to appear.\\\\n\\\\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.\\"
  companyTabs: [company_Input]
  \\"Specifies a tab on the document where the date the document was signed will automatically appear.\\"
  dateSignedTabs: [dateSigned_Input]
  \\"Specifies a tab on the document where you want the recipient to enter a date. Date tabs are single-line fields that allow date information to be entered in any format. The tooltip for this tab recommends entering the date as MM/DD/YYYY, but this is not enforced. The format entered by the signer is retained. \\\\n\\\\nIf you need a particular date format enforced, DocuSign recommends using a Text tab with a Validation Pattern and Validation Message to enforce the format.\\"
  dateTabs: [date_Input]
  \\"Specifies a tag on the document where you want to give the recipient the option of declining an envelope. If the recipient clicks the Decline tag during the signing process, the envelope is voided.\\"
  declineTabs: [decline_Input]
  \\"Specifies a location on the document where you want where you want the recipient's email, as entered in the recipient information, to display.\\"
  emailAddressTabs: [dateSigned_Input]
  \\"Specifies a tag on the document where you want the recipient to enter an email. Email tags are single-line fields that accept any characters. The system checks that a valid email format (i.e. xxx@yyy.zzz) is entered in the tag. It uses the same parameters as a Text tab, with the validation message and pattern set for email information.\\\\n\\\\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.\\"
  emailTabs: [date_Input]
  \\"Specifies a tag on the document where you want the envelope ID for to appear. Recipients cannot enter or change the information in this tab, it is for informational purposes only.\\"
  envelopeIdTabs: [envelopeId_Input]
  \\"Specifies tag on a document where you want the recipient's first name to appear. This tag takes the recipient's name, as entered in the recipient information, splits it into sections based on spaces and uses the first section as the first name.\\"
  firstNameTabs: [dateSigned_Input]
  \\"A list of formula tabs.\\\\n\\\\nThe value of a formula tab is calculated\\\\nfrom the values of other\\\\nnumber or date tabs in the document.\\\\nWhen the recipient completes the underlying fields,\\\\nthe formula tab calculates and displays the result.\\\\n\\\\nThe \`formula\` property of the tab\\\\ncontains the references\\\\nto the underlying tabs.\\\\nSee [Calculated Fields][calculatedfields]\\\\nin the DocuSign Support Center\\\\nto learn more about formulas.\\\\n\\\\nIf a formula tab contains\\\\na \`paymentDetails\` property,\\\\nthe tab is considered a payment item.\\\\nSee [Requesting Payments Along with Signatures][paymentguide]\\\\nin the DocuSign Support Center\\\\nto learn more about payments.\\\\n\\\\n[calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields\\\\n[paymentguide]:     https://support.docusign.com/en/guides/requesting-payments-along-with-signatures\\"
  formulaTabs: [formulaTab_Input]
  \\"Specifies a tag on the document where you want the recipient's name to appear.\\"
  fullNameTabs: [dateSigned_Input]
  \\"Specifies a tag location in the document at which a recipient will place their initials. The \`optional\` parameter specifies whether the initials are required or optional.\\"
  initialHereTabs: [initialHere_Input]
  \\"Specifies a tag on a document where you want the recipient's last name to appear. This tag takes the recipient's name, as entered in the recipient information, splits it into sections based on spaces and uses the last section as the last name.\\"
  lastNameTabs: [dateSigned_Input]
  \\"Specify this tag to give your recipient a list of options, presented as a drop-down list, from which they can select.\\"
  listTabs: [list_Input]
  \\"Specifies a location on the document where you want to place additional information, in the form of a note, for a recipient.\\"
  noteTabs: [note_Input]
  \\"Specifies a tag on the document where you want the recipient to enter a number. It uses the same parameters as a Text tab, with the validation message and pattern set for number information.\\\\n\\\\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.\\"
  numberTabs: [number_Input]
  \\"Specifies a tag on the document in a location where the recipient can select one option from a group of options using a radio button. The radio buttons do not have to be on the same page in a document.\\"
  radioGroupTabs: [radioGroup_Input]
  \\"A complex type the contains information about the tag that specifies where the recipient places their signature in the document. The \\\\\\"optional\\\\\\" parameter sets if the signature is required or optional.\\"
  signHereTabs: [signHere_Input]
  \\"Specifies a tag on the document when you want the recipient to add supporting documents to an envelope.\\"
  signerAttachmentTabs: [signerAttachment_Input]
  \\"Specifies a tag on the document where you want the recipient to enter a Social Security Number (SSN). A SSN can be typed with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for SSN information.\\\\n\\\\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.\\"
  ssnTabs: [ssn_Input]
  \\"Specifies a that that is an adaptable field that allows the recipient to enter different text information.\\\\n\\\\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.\\"
  textTabs: [text_Input]
  \\"Specifies a tag on the document where you want the recipient's title to appear.\\\\n\\\\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.\\"
  titleTabs: [title_Input]
  viewTabs: [view_Input]
  \\"Specifies a tag on the document where you want the recipient to enter a ZIP code. The ZIP code can be a five numbers or the ZIP+4 format with nine numbers. The zip code can be typed with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for ZIP code information.\\\\n\\\\nWhen getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.\\"
  zipTabs: [zip_Input]
}

\\"A tab that allows the recipient to approve documents\\\\nwithout placing a signature or initials on the\\\\ndocument.\\"
input approve_Input {
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\\\\n-->\\"
  anchorCaseSensitive: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\\\\n-->\\"
  anchorHorizontalAlignment: String
  \\"When set to **true**, this tab is ignored if anchorString is not found in the document.\\"
  anchorIgnoreIfNotPresent: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\\\\n-->\\"
  anchorMatchWholeWord: String
  \\"Anchor text information for a radio button.\\"
  anchorString: String
  \\"Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.\\"
  anchorUnits: String
  \\"Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorXOffset: String
  \\"Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorYOffset: String
  \\"When set to **true**, the information in the tab is bold.\\"
  bold: String
  \\"Specifies the approval text displayed in the tab.\\"
  buttonText: String
  \\"For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.\\"
  conditionalParentLabel: String
  \\"For conditional fields, this is the value of the parent tab that controls the tab's visibility.\\\\n\\\\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \\\\\\"on\\\\\\" as the value to show that the parent tab is active.\\"
  conditionalParentValue: String
  \\"The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.\\"
  customTabId: String
  \\"Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.\\"
  documentId: String
  errorDetails: errorDetails_Input
  \\"The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.\\"
  font: String
  \\"The font color used for the information in the tab.\\\\n\\\\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.\\"
  fontColor: String
  \\"The font size used for the information in the tab.\\\\n\\\\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.\\"
  fontSize: String
  \\"Height of the tab in pixels.\\"
  height: Int
  \\"When set to **true**, the information in the tab is italic.\\"
  italic: String
  mergeField: mergeField_Input
  \\"Specifies the page number on which the tab is located.\\\\nMust be 1 for [supplemental documents][supdocs].\\\\n\\\\n[supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents\\"
  pageNumber: String
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].\\"
  tabId: String
  \\"The label string associated with the tab.\\\\nThe string may be the empty string.\\\\nIf no value is provided, the tab type is used as the value.\\\\n\\\\nMaximum of 500 characters.\\"
  tabLabel: String
  tabOrder: String
  \\"When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.\\"
  templateLocked: String
  \\"When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.\\"
  templateRequired: String
  \\"When set to **true**, the information in the tab is underlined.\\"
  underline: String
  \\"Width of the tab in pixels.\\"
  width: Int
  \\"This indicates the horizontal offset of the object on the page.\\\\nDocuSign uses 72 DPI when determining position.\\\\nRequired. May be zero.\\"
  xPosition: String
  \\"This indicates the vertical offset of the object on the page.\\\\nDocuSign uses 72 DPI when determining position.\\\\nRequired. May be zero.\\"
  yPosition: String
}

\\"Contains information for transfering values between Salesforce data fields and DocuSign Tabs.\\"
input mergeField_Input {
  \\"When set to **true**, the sender can modify the value of the custom tab during the sending process.\\"
  allowSenderToEdit: String
  \\"If merge field's are being used, specifies the type of the merge field. The only  supported value is **salesforce**.\\"
  configurationType: String
  \\"Sets the object associated with the custom tab. Currently this is the Salesforce Object.\\"
  path: String
  \\"Specifies the row number in a Salesforce table that the merge field value corresponds to.\\"
  row: String
  \\"When wet to true, the information entered in the tab automatically updates the related Salesforce data when an envelope is completed.\\"
  writeBack: String
}

input checkbox_Input {
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\\\\n-->\\"
  anchorCaseSensitive: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\\\\n-->\\"
  anchorHorizontalAlignment: String
  \\"When set to **true**, this tab is ignored if anchorString is not found in the document.\\"
  anchorIgnoreIfNotPresent: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\\\\n-->\\"
  anchorMatchWholeWord: String
  \\"Anchor text information for a radio button.\\"
  anchorString: String
  \\"Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.\\"
  anchorUnits: String
  \\"Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorXOffset: String
  \\"Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorYOffset: String
  \\"For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.\\"
  conditionalParentLabel: String
  \\"For conditional fields, this is the value of the parent tab that controls the tab's visibility.\\\\n\\\\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \\\\\\"on\\\\\\" as the value to show that the parent tab is active.\\"
  conditionalParentValue: String
  \\"The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.\\"
  customTabId: String
  \\"Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.\\"
  documentId: String
  errorDetails: errorDetails_Input
  \\"When set to **true**, the signer cannot change the data of the custom tab.\\"
  locked: String
  mergeField: mergeField_Input
  \\"Specifies the tool tip text for the tab.\\"
  name: String
  \\"Specifies the page number on which the tab is located.\\\\nMust be 1 for [supplemental documents][supdocs].\\\\n\\\\n[supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents\\"
  pageNumber: String
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  \\"Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.\\"
  requireInitialOnSharedChange: String
  \\"When set to **true**, the signer is required to fill out this tab\\"
  required: String
  \\"When set to **true**, the checkbox is selected.\\"
  selected: String
  \\"When set to **true**, this custom tab is shared.\\"
  shared: String
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].\\"
  tabId: String
  \\"The label string associated with the tab.\\\\nThe string may be the empty string.\\\\nIf no value is provided, the tab type is used as the value.\\\\n\\\\nMaximum of 500 characters.\\"
  tabLabel: String
  tabOrder: String
  \\"When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.\\"
  templateLocked: String
  \\"When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.\\"
  templateRequired: String
  \\"This indicates the horizontal offset of the object on the page.\\\\nDocuSign uses 72 DPI when determining position.\\\\nRequired. May be zero.\\"
  xPosition: String
  \\"This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.\\"
  yPosition: String
}

input company_Input {
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\\\\n-->\\"
  anchorCaseSensitive: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\\\\n-->\\"
  anchorHorizontalAlignment: String
  \\"When set to **true**, this tab is ignored if anchorString is not found in the document.\\"
  anchorIgnoreIfNotPresent: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\\\\n-->\\"
  anchorMatchWholeWord: String
  \\"Anchor text information for a radio button.\\"
  anchorString: String
  \\"Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.\\"
  anchorUnits: String
  \\"Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorXOffset: String
  \\"Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorYOffset: String
  \\"When set to **true**, the information in the tab is bold.\\"
  bold: String
  \\"When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\\\\n\\\\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\\\\n\\\\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.\\"
  concealValueOnDocument: String
  \\"For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.\\"
  conditionalParentLabel: String
  \\"For conditional fields, this is the value of the parent tab that controls the tab's visibility.\\\\n\\\\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \\\\\\"on\\\\\\" as the value to show that the parent tab is active.\\"
  conditionalParentValue: String
  \\"The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.\\"
  customTabId: String
  \\"When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.\\"
  disableAutoSize: String
  \\"Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.\\"
  documentId: String
  errorDetails: errorDetails_Input
  \\"The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.\\"
  font: String
  \\"The font color used for the information in the tab.\\\\n\\\\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.\\"
  fontColor: String
  \\"The font size used for the information in the tab.\\\\n\\\\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.\\"
  fontSize: String
  \\"When set to **true**, the information in the tab is italic.\\"
  italic: String
  \\"When set to **true**, the signer cannot change the data of the custom tab.\\"
  locked: String
  \\"An optional value that describes the maximum length of the property when the property is a string.\\"
  maxLength: Int
  mergeField: mergeField_Input
  \\"Specifies the tool tip text for the tab.\\"
  name: String
  \\"The initial value of the tab when it was sent to the recipient.\\"
  originalValue: String
  \\"Specifies the page number on which the tab is located.\\\\nMust be 1 for [supplemental documents][supdocs].\\\\n\\\\n[supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents\\"
  pageNumber: String
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  \\"When set to **true**, the signer is required to fill out this tab\\"
  required: String
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].\\"
  tabId: String
  \\"The label string associated with the tab.\\\\nThe string may be the empty string.\\\\nIf no value is provided, the tab type is used as the value.\\\\n\\\\nMaximum of 500 characters.\\"
  tabLabel: String
  tabOrder: String
  \\"When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.\\"
  templateLocked: String
  \\"When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.\\"
  templateRequired: String
  \\"When set to **true**, the information in the tab is underlined.\\"
  underline: String
  \\"Specifies the value of the tab.\\"
  value: String
  \\"Width of the tab in pixels.\\"
  width: Int
  \\"This indicates the horizontal offset of the object on the page.\\\\nDocuSign uses 72 DPI when determining position.\\\\nRequired. May be zero.\\"
  xPosition: String
  \\"This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.\\"
  yPosition: String
}

input dateSigned_Input {
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\\\\n-->\\"
  anchorCaseSensitive: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\\\\n-->\\"
  anchorHorizontalAlignment: String
  \\"When set to **true**, this tab is ignored if anchorString is not found in the document.\\"
  anchorIgnoreIfNotPresent: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\\\\n-->\\"
  anchorMatchWholeWord: String
  \\"Anchor text information for a radio button.\\"
  anchorString: String
  \\"Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.\\"
  anchorUnits: String
  \\"Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorXOffset: String
  \\"Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorYOffset: String
  \\"When set to **true**, the information in the tab is bold.\\"
  bold: String
  \\"For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.\\"
  conditionalParentLabel: String
  \\"For conditional fields, this is the value of the parent tab that controls the tab's visibility.\\\\n\\\\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \\\\\\"on\\\\\\" as the value to show that the parent tab is active.\\"
  conditionalParentValue: String
  \\"The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.\\"
  customTabId: String
  \\"Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.\\"
  documentId: String
  errorDetails: errorDetails_Input
  \\"The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.\\"
  font: String
  \\"The font color used for the information in the tab.\\\\n\\\\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.\\"
  fontColor: String
  \\"The font size used for the information in the tab.\\\\n\\\\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.\\"
  fontSize: String
  \\"When set to **true**, the information in the tab is italic.\\"
  italic: String
  mergeField: mergeField_Input
  name: String
  \\"Specifies the page number on which the tab is located.\\\\nMust be 1 for [supplemental documents][supdocs].\\\\n\\\\n[supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents\\"
  pageNumber: String
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].\\"
  tabId: String
  \\"The label string associated with the tab.\\\\nThe string may be the empty string.\\\\nIf no value is provided, the tab type is used as the value.\\\\n\\\\nMaximum of 500 characters.\\"
  tabLabel: String
  tabOrder: String
  \\"When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.\\"
  templateLocked: String
  \\"When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.\\"
  templateRequired: String
  \\"When set to **true**, the information in the tab is underlined.\\"
  underline: String
  \\"Specifies the value of the tab.\\"
  value: String
  \\"This indicates the horizontal offset of the object on the page.\\\\nDocuSign uses 72 DPI when determining position.\\\\nRequired. May be zero.\\"
  xPosition: String
  \\"This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.\\"
  yPosition: String
}

input date_Input {
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\\\\n-->\\"
  anchorCaseSensitive: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\\\\n-->\\"
  anchorHorizontalAlignment: String
  \\"When set to **true**, this tab is ignored if anchorString is not found in the document.\\"
  anchorIgnoreIfNotPresent: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\\\\n-->\\"
  anchorMatchWholeWord: String
  \\"Anchor text information for a radio button.\\"
  anchorString: String
  \\"Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.\\"
  anchorUnits: String
  \\"Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorXOffset: String
  \\"Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorYOffset: String
  \\"When set to **true**, the information in the tab is bold.\\"
  bold: String
  \\"When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\\\\n\\\\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\\\\n\\\\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.\\"
  concealValueOnDocument: String
  \\"For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.\\"
  conditionalParentLabel: String
  \\"For conditional fields, this is the value of the parent tab that controls the tab's visibility.\\\\n\\\\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \\\\\\"on\\\\\\" as the value to show that the parent tab is active.\\"
  conditionalParentValue: String
  \\"The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.\\"
  customTabId: String
  \\"When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.\\"
  disableAutoSize: String
  \\"Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.\\"
  documentId: String
  errorDetails: errorDetails_Input
  \\"The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.\\"
  font: String
  \\"The font color used for the information in the tab.\\\\n\\\\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.\\"
  fontColor: String
  \\"The font size used for the information in the tab.\\\\n\\\\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.\\"
  fontSize: String
  \\"When set to **true**, the information in the tab is italic.\\"
  italic: String
  \\"When set to **true**, the signer cannot change the data of the custom tab.\\"
  locked: String
  \\"An optional value that describes the maximum length of the property when the property is a string.\\"
  maxLength: Int
  mergeField: mergeField_Input
  name: String
  \\"The initial value of the tab when it was sent to the recipient.\\"
  originalValue: String
  \\"Specifies the page number on which the tab is located.\\\\nMust be 1 for [supplemental documents][supdocs].\\\\n\\\\n[supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents\\"
  pageNumber: String
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  \\"When set to **true** and shared is true, information must be entered in this field to complete the envelope.\\"
  requireAll: String
  \\"Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.\\"
  requireInitialOnSharedChange: String
  \\"When set to **true**, the signer is required to fill out this tab\\"
  required: String
  \\"When set to **true**, the sender must populate the tab before an envelope can be sent using the template. \\\\n\\\\nThis value tab can only be changed by modifying (PUT) the template. \\\\n\\\\nTabs with a \`senderRequired\` value of true cannot be deleted from an envelope.\\"
  senderRequired: String
  \\"When set to **true**, this custom tab is shared.\\"
  shared: String
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].\\"
  tabId: String
  \\"The label string associated with the tab.\\\\nThe string may be the empty string.\\\\nIf no value is provided, the tab type is used as the value.\\\\n\\\\nMaximum of 500 characters.\\"
  tabLabel: String
  tabOrder: String
  \\"When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.\\"
  templateLocked: String
  \\"When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.\\"
  templateRequired: String
  \\"When set to **true**, the information in the tab is underlined.\\"
  underline: String
  \\"The message displayed if the custom tab fails input validation (either custom of embedded).\\"
  validationMessage: String
  \\"A regular expressionn used to validate input for the tab.\\"
  validationPattern: String
  \\"Specifies the value of the tab.\\"
  value: String
  \\"Width of the tab in pixels.\\"
  width: Int
  \\"This indicates the horizontal offset of the object on the page.\\\\nDocuSign uses 72 DPI when determining position.\\\\nRequired. May be zero.\\"
  xPosition: String
  \\"This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.\\"
  yPosition: String
}

input decline_Input {
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\\\\n-->\\"
  anchorCaseSensitive: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\\\\n-->\\"
  anchorHorizontalAlignment: String
  \\"When set to **true**, this tab is ignored if anchorString is not found in the document.\\"
  anchorIgnoreIfNotPresent: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\\\\n-->\\"
  anchorMatchWholeWord: String
  \\"Anchor text information for a radio button.\\"
  anchorString: String
  \\"Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.\\"
  anchorUnits: String
  \\"Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorXOffset: String
  \\"Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorYOffset: String
  \\"When set to **true**, the information in the tab is bold.\\"
  bold: String
  \\"Specifies the decline text displayed in the tab.\\"
  buttonText: String
  \\"For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.\\"
  conditionalParentLabel: String
  \\"For conditional fields, this is the value of the parent tab that controls the tab's visibility.\\\\n\\\\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \\\\\\"on\\\\\\" as the value to show that the parent tab is active.\\"
  conditionalParentValue: String
  \\"The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.\\"
  customTabId: String
  \\"The reason the recipient declined the document.\\"
  declineReason: String
  \\"Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.\\"
  documentId: String
  errorDetails: errorDetails_Input
  \\"The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.\\"
  font: String
  \\"The font color used for the information in the tab.\\\\n\\\\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.\\"
  fontColor: String
  \\"The font size used for the information in the tab.\\\\n\\\\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.\\"
  fontSize: String
  \\"Height of the tab in pixels.\\"
  height: Int
  \\"When set to **true**, the information in the tab is italic.\\"
  italic: String
  mergeField: mergeField_Input
  \\"Specifies the page number on which the tab is located.\\\\nMust be 1 for [supplemental documents][supdocs].\\\\n\\\\n[supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents\\"
  pageNumber: String
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].\\"
  tabId: String
  \\"The label string associated with the tab.\\\\nThe string may be the empty string.\\\\nIf no value is provided, the tab type is used as the value.\\\\n\\\\nMaximum of 500 characters.\\"
  tabLabel: String
  tabOrder: String
  \\"When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.\\"
  templateLocked: String
  \\"When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.\\"
  templateRequired: String
  \\"When set to **true**, the information in the tab is underlined.\\"
  underline: String
  \\"Width of the tab in pixels.\\"
  width: Int
  \\"This indicates the horizontal offset of the object on the page.\\\\nDocuSign uses 72 DPI when determining position.\\\\nRequired. May be zero.\\"
  xPosition: String
  \\"This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.\\"
  yPosition: String
}

input envelopeId_Input {
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\\\\n-->\\"
  anchorCaseSensitive: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\\\\n-->\\"
  anchorHorizontalAlignment: String
  \\"When set to **true**, this tab is ignored if anchorString is not found in the document.\\"
  anchorIgnoreIfNotPresent: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\\\\n-->\\"
  anchorMatchWholeWord: String
  \\"Anchor text information for a radio button.\\"
  anchorString: String
  \\"Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.\\"
  anchorUnits: String
  \\"Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorXOffset: String
  \\"Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorYOffset: String
  \\"When set to **true**, the information in the tab is bold.\\"
  bold: String
  \\"For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.\\"
  conditionalParentLabel: String
  \\"For conditional fields, this is the value of the parent tab that controls the tab's visibility.\\\\n\\\\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \\\\\\"on\\\\\\" as the value to show that the parent tab is active.\\"
  conditionalParentValue: String
  \\"The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.\\"
  customTabId: String
  \\"Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.\\"
  documentId: String
  errorDetails: errorDetails_Input
  \\"The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.\\"
  font: String
  \\"The font color used for the information in the tab.\\\\n\\\\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.\\"
  fontColor: String
  \\"The font size used for the information in the tab.\\\\n\\\\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.\\"
  fontSize: String
  \\"When set to **true**, the information in the tab is italic.\\"
  italic: String
  mergeField: mergeField_Input
  name: String
  \\"Specifies the page number on which the tab is located.\\\\nMust be 1 for [supplemental documents][supdocs].\\\\n\\\\n[supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents\\"
  pageNumber: String
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].\\"
  tabId: String
  \\"The label string associated with the tab.\\\\nThe string may be the empty string.\\\\nIf no value is provided, the tab type is used as the value.\\\\n\\\\nMaximum of 500 characters.\\"
  tabLabel: String
  tabOrder: String
  \\"When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.\\"
  templateLocked: String
  \\"When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.\\"
  templateRequired: String
  \\"When set to **true**, the information in the tab is underlined.\\"
  underline: String
  \\"This indicates the horizontal offset of the object on the page.\\\\nDocuSign uses 72 DPI when determining position.\\\\nRequired. May be zero.\\"
  xPosition: String
  \\"This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.\\"
  yPosition: String
}

\\"The value of a formula tab is calculated\\\\nfrom the values of other\\\\nnumber or date tabs in the document.\\\\nWhen the recipient completes the underlying fields,\\\\nthe formula tab calculates and displays the result.\\\\n\\\\nThe \`formula\` property of the tab\\\\ncontains the references\\\\nto the underlying tabs.\\\\nSee [Calculated Fields][calculatedfields]\\\\nin the DocuSign Support Center\\\\nto learn more about formulas.\\\\n\\\\nIf a formula tab contains\\\\na \`paymentDetails\` property,\\\\nthe tab is considered a payment item.\\\\nSee [Requesting Payments Along with Signatures][paymentguide]\\\\nin the DocuSign Support Center\\\\nto learn more about payments.\\\\n\\\\n[calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields\\\\n[paymentguide]:     https://support.docusign.com/en/guides/requesting-payments-along-with-signatures\\"
input formulaTab_Input {
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\\\\n-->\\"
  anchorCaseSensitive: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\\\\n-->\\"
  anchorHorizontalAlignment: String
  \\"When set to **true**, this tab is ignored if anchorString is not found in the document.\\"
  anchorIgnoreIfNotPresent: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\\\\n-->\\"
  anchorMatchWholeWord: String
  \\"Anchor text information for a radio button.\\"
  anchorString: String
  \\"Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.\\"
  anchorUnits: String
  \\"Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorXOffset: String
  \\"Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorYOffset: String
  \\"When set to **true**, the information in the tab is bold.\\"
  bold: String
  \\"When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\\\\n\\\\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\\\\n\\\\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.\\"
  concealValueOnDocument: String
  \\"For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.\\"
  conditionalParentLabel: String
  \\"For conditional fields, this is the value of the parent tab that controls the tab's visibility.\\\\n\\\\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \\\\\\"on\\\\\\" as the value to show that the parent tab is active.\\"
  conditionalParentValue: String
  \\"The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.\\"
  customTabId: String
  \\"When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.\\"
  disableAutoSize: String
  \\"Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.\\"
  documentId: String
  errorDetails: errorDetails_Input
  \\"The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.\\"
  font: String
  \\"The font color used for the information in the tab.\\\\n\\\\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.\\"
  fontColor: String
  \\"The font size used for the information in the tab.\\\\n\\\\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.\\"
  fontSize: String
  \\"Contains the formula\\\\nfor calculating the value of\\\\nthis tab.\\\\n\\\\nUse a tab's \`tabLabel\`,\\\\nenclosed in brackets,\\\\nto refer to it.\\\\n\\\\nFor example,\\\\nyou want to present the total cost\\\\nof two items, tax included.\\\\n\\\\nThe cost of each item is stored\\\\nin number tabs labeled Item1 and Item2.\\\\nThe tax rate is in a number tab\\\\nlabeled TaxRate.\\\\n\\\\nThe formula string for this property\\\\nwould be:\\\\n\`([Item1] + [Item2]) * (1 + [TaxRate])\`\\\\n\\\\nSee [Calculated Fields][calculatedfields]\\\\nin the DocuSign Support Center\\\\nto learn more about formulas.\\\\n\\\\nMaximum Length: 2000 characters\\\\n\\\\n[calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields\\"
  formula: String
  hidden: String
  \\"When set to **true**, sets this as a payment tab. Can only be used with Text, Number, Formula, or List tabs. The value of the tab must be a number.\\"
  isPaymentAmount: String
  \\"When set to **true**, the information in the tab is italic.\\"
  italic: String
  \\"When set to **true**, the signer cannot change the data of the custom tab.\\"
  locked: String
  \\"An optional value that describes the maximum length of the property when the property is a string.\\"
  maxLength: Int
  mergeField: mergeField_Input
  name: String
  \\"The initial value of the tab when it was sent to the recipient.\\"
  originalValue: String
  \\"Specifies the page number on which the tab is located.\\\\nMust be 1 for [supplemental documents][supdocs].\\\\n\\\\n[supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents\\"
  pageNumber: String
  paymentDetails: paymentDetails_Input
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  \\"When set to **true** and shared is true, information must be entered in this field to complete the envelope.\\"
  requireAll: String
  \\"Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.\\"
  requireInitialOnSharedChange: String
  \\"When set to **true**, the signer is required to fill out this tab\\"
  required: String
  roundDecimalPlaces: String
  \\"When set to **true**, the sender must populate the tab before an envelope can be sent using the template. \\\\n\\\\nThis value tab can only be changed by modifying (PUT) the template. \\\\n\\\\nTabs with a \`senderRequired\` value of true cannot be deleted from an envelope.\\"
  senderRequired: String
  \\"When set to **true**, this custom tab is shared.\\"
  shared: String
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].\\"
  tabId: String
  \\"The label string associated with the tab.\\\\nThe string may be the empty string.\\\\nIf no value is provided, the tab type is used as the value.\\\\n\\\\nMaximum of 500 characters.\\"
  tabLabel: String
  tabOrder: String
  \\"When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.\\"
  templateLocked: String
  \\"When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.\\"
  templateRequired: String
  \\"When set to **true**, the information in the tab is underlined.\\"
  underline: String
  \\"The message displayed if the custom tab fails input validation (either custom of embedded).\\"
  validationMessage: String
  \\"A regular expressionn used to validate input for the tab.\\"
  validationPattern: String
  \\"Specifies the value of the tab.\\"
  value: String
  \\"Width of the tab in pixels.\\"
  width: Int
  \\"This indicates the horizontal offset of the object on the page.\\\\nDocuSign uses 72 DPI when determining position.\\\\nRequired. May be zero.\\"
  xPosition: String
  \\"This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.\\"
  yPosition: String
}

\\"When a formula tab\\\\nhas a \`paymentDetails\` property,\\\\nthe formula tab\\\\nis a payment item.\\\\nSee [Requesting Payments Along with Signatures][paymentguide]\\\\nin the DocuSign Support Center\\\\nto learn more about payments.\\\\n\\\\n[paymentguide]:     https://support.docusign.com/en/guides/requesting-payments-along-with-signatures\\"
input paymentDetails_Input {
  chargeId: String
  \\"Specifies the three-letter\\\\n[ISO 4217][ISO4217] currency code for the payment.\\\\n\\\\nSupported currencies are:\\\\n\\\\n* AUD Australian dollar\\\\n* CAD Canadian dollar\\\\n* EUR Euro\\\\n* GBP Great Britain pund\\\\n* USD United States dollar\\\\n\\\\nSpecifying any other ISO 4217 code for payments is an error.\\\\n\\\\n[ISO4217]:          https://en.wikipedia.org/wiki/ISO_4217\\"
  currencyCode: String
  \\"A GUID that identifies the payment gateway\\\\nconnected to the sender's DocuSign account.\\\\n\\\\nThere is no public API\\\\nfor connecting payment gateway accounts\\\\nYou must connect and manage payment gateway accounts\\\\nthrough the DocuSign Admin console\\\\nand through your chosen payment gateway.\\\\n\\\\nYou can get the gateway account ID\\\\nin the Payments section\\\\nof the DocuSign Admin console.\\\\n\\\\n\\\\n[paymentgateways]:  https://support.docusign.com/en/guides/managing-payment-gateways\\"
  gatewayAccountId: String
  gatewayName: String
  \\"A payment formula can have\\\\none or more line items\\\\nthat provide detail about\\\\nindividual items in a payment request.\\\\n\\\\nThe list of line items\\\\nare returned as metadata\\\\nto the payment gateway.\\"
  lineItems: [paymentLineItem_Input]
  \\"This read-only property describes the status of a payment.\\\\n\\\\n* \`new\`<br>\\\\n  This is a new payment request.\\\\n  The envelope has been created,\\\\n  but no payment authorizations have been made.\\\\n\\\\n* \`auth_complete\`<br>\\\\n  A recipient has entered their credit card information,\\\\n  but the envelope has not been completed.\\\\n  The card has not been charged.\\\\n\\\\n* \`payment_complete\`<br>\\\\n  The recipient's card has been charged.\\\\n\\\\n* \`payment_capture_failed\`<br>\\\\n  Final charge failed.\\\\n  This can happen when too much time\\\\n  passes between authorizing the payment\\\\n  and completing the document.\\"
  status: String
  total: money_Input
}

\\"A line item describes details\\\\nabout an individual line item\\\\nin a payment request.\\"
input paymentLineItem_Input {
  \\"This is a the \`tabLabel\`\\\\nthat specifies the amount paid\\\\nfor the line items.\\"
  amountReference: String
  \\"A sender-defined description of the line item.\\"
  description: String
  \\"This is the sender-defined\\\\nSKU, inventory number, or other item code\\\\nfor the line item.\\"
  itemCode: String
  \\"This is a sender-defined\\\\nproduct name, service name,\\\\nor other designation for the line item.\\"
  name: String
}

\\"Describes information\\\\nabout the \`total\` of a payment.\\"
input money_Input {
  \\"The total payment amount\\\\nin the currency's base unit.\\\\nFor example, for USD\\\\nthe base currency is one cent.\\"
  amountInBaseUnit: String
  \\"The three-letter\\\\n[ISO 4217][ISO4217] currency code for the payment.\\\\n\\\\nFor example:\\\\n\\\\n* AUD Australian dollar\\\\n* CAD Canadian dollar\\\\n* EUR Euro\\\\n* GBP Great Britain pund\\\\n* USD United States dollar\\\\n\\\\nThis is a read-only property.\\\\n\\\\n[ISO4217]:          https://en.wikipedia.org/wiki/ISO_4217\\"
  currency: String
  \\"The payment amount as displayed\\\\nin the \`currency\`.\\\\n\\\\nFor example, if the payment amount\\\\nis USD 12.59,\\\\nthe \`amountInBaseUnit\` is 1259 (cents),\\\\nand the displayed amount is \`$12.59 USD\`.\\\\n\\\\nThis is a read-only property.\\"
  displayAmount: String
}

input initialHere_Input {
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\\\\n-->\\"
  anchorCaseSensitive: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\\\\n-->\\"
  anchorHorizontalAlignment: String
  \\"When set to **true**, this tab is ignored if anchorString is not found in the document.\\"
  anchorIgnoreIfNotPresent: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\\\\n-->\\"
  anchorMatchWholeWord: String
  \\"Anchor text information for a radio button.\\"
  anchorString: String
  \\"Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.\\"
  anchorUnits: String
  \\"Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorXOffset: String
  \\"Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorYOffset: String
  \\"For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.\\"
  conditionalParentLabel: String
  \\"For conditional fields, this is the value of the parent tab that controls the tab's visibility.\\\\n\\\\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \\\\\\"on\\\\\\" as the value to show that the parent tab is active.\\"
  conditionalParentValue: String
  \\"The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.\\"
  customTabId: String
  \\"Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.\\"
  documentId: String
  errorDetails: errorDetails_Input
  mergeField: mergeField_Input
  \\"Specifies the tool tip text for the tab.\\"
  name: String
  optional: String
  \\"Specifies the page number on which the tab is located.\\\\nMust be 1 for [supplemental documents][supdocs].\\\\n\\\\n[supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents\\"
  pageNumber: String
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  \\"Sets the size for the InitialHere tab. It can be value from 0.5 to 1.0, where 1.0 represents full size and 0.5 is 50% size.\\"
  scaleValue: Float
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].\\"
  tabId: String
  \\"The label string associated with the tab.\\\\nThe string may be the empty string.\\\\nIf no value is provided, the tab type is used as the value.\\\\n\\\\nMaximum of 500 characters.\\"
  tabLabel: String
  tabOrder: String
  \\"When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.\\"
  templateLocked: String
  \\"When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.\\"
  templateRequired: String
  \\"This indicates the horizontal offset of the object on the page.\\\\nDocuSign uses 72 DPI when determining position.\\\\nRequired. May be zero.\\"
  xPosition: String
  \\"This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.\\"
  yPosition: String
}

input list_Input {
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\\\\n-->\\"
  anchorCaseSensitive: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\\\\n-->\\"
  anchorHorizontalAlignment: String
  \\"When set to **true**, this tab is ignored if anchorString is not found in the document.\\"
  anchorIgnoreIfNotPresent: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\\\\n-->\\"
  anchorMatchWholeWord: String
  \\"Anchor text information for a radio button.\\"
  anchorString: String
  \\"Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.\\"
  anchorUnits: String
  \\"Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorXOffset: String
  \\"Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorYOffset: String
  \\"When set to **true**, the information in the tab is bold.\\"
  bold: String
  \\"For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.\\"
  conditionalParentLabel: String
  \\"For conditional fields, this is the value of the parent tab that controls the tab's visibility.\\\\n\\\\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \\\\\\"on\\\\\\" as the value to show that the parent tab is active.\\"
  conditionalParentValue: String
  \\"The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.\\"
  customTabId: String
  \\"Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.\\"
  documentId: String
  errorDetails: errorDetails_Input
  \\"The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.\\"
  font: String
  \\"The font color used for the information in the tab.\\\\n\\\\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.\\"
  fontColor: String
  \\"The font size used for the information in the tab.\\\\n\\\\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.\\"
  fontSize: String
  \\"When set to **true**, the information in the tab is italic.\\"
  italic: String
  \\"The list of values that can be selected by senders. The list values are separated by semi-colons. Example: [one;two;three;four]\\\\n\\\\nMaximum Length of listItems:  2048 characters.\\\\nMaximum Length of items in the list: 100 characters.\\"
  listItems: [listItem_Input]
  \\"When set to **true**, the signer cannot change the data of the custom tab.\\"
  locked: String
  mergeField: mergeField_Input
  \\"Specifies the page number on which the tab is located.\\\\nMust be 1 for [supplemental documents][supdocs].\\\\n\\\\n[supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents\\"
  pageNumber: String
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  \\"When set to **true** and shared is true, information must be entered in this field to complete the envelope.\\"
  requireAll: String
  \\"Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.\\"
  requireInitialOnSharedChange: String
  \\"When set to **true**, the signer is required to fill out this tab\\"
  required: String
  \\"When set to **true**, the sender must populate the tab before an envelope can be sent using the template. \\\\n\\\\nThis value tab can only be changed by modifying (PUT) the template. \\\\n\\\\nTabs with a \`senderRequired\` value of true cannot be deleted from an envelope.\\"
  senderRequired: String
  \\"When set to **true**, this custom tab is shared.\\"
  shared: String
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].\\"
  tabId: String
  \\"The label string associated with the tab.\\\\nThe string may be the empty string.\\\\nIf no value is provided, the tab type is used as the value.\\\\n\\\\nMaximum of 500 characters.\\"
  tabLabel: String
  tabOrder: String
  \\"When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.\\"
  templateLocked: String
  \\"When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.\\"
  templateRequired: String
  \\"When set to **true**, the information in the tab is underlined.\\"
  underline: String
  \\"The value to use when the item is selected.\\"
  value: String
  \\"Width of the tab in pixels.\\"
  width: Int
  \\"This indicates the horizontal offset of the object on the page.\\\\nDocuSign uses 72 DPI when determining position.\\\\nRequired. May be zero.\\"
  xPosition: String
  \\"This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.\\"
  yPosition: String
}

input listItem_Input {
  \\"When set to **true**, indicates that this item is the default selection shown to a signer. \\\\n\\\\nOnly one selection can be set as the default.\\"
  selected: String
  \\"Specifies the text that is shown in the dropdown list.\\"
  text: String
  \\"Specifies the value that is used when the list item is selected.\\"
  value: String
}

input note_Input {
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\\\\n-->\\"
  anchorCaseSensitive: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\\\\n-->\\"
  anchorHorizontalAlignment: String
  \\"When set to **true**, this tab is ignored if anchorString is not found in the document.\\"
  anchorIgnoreIfNotPresent: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\\\\n-->\\"
  anchorMatchWholeWord: String
  \\"Anchor text information for a radio button.\\"
  anchorString: String
  \\"Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.\\"
  anchorUnits: String
  \\"Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorXOffset: String
  \\"Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorYOffset: String
  \\"When set to **true**, the information in the tab is bold.\\"
  bold: String
  \\"For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.\\"
  conditionalParentLabel: String
  \\"For conditional fields, this is the value of the parent tab that controls the tab's visibility.\\\\n\\\\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \\\\\\"on\\\\\\" as the value to show that the parent tab is active.\\"
  conditionalParentValue: String
  \\"The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.\\"
  customTabId: String
  \\"Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.\\"
  documentId: String
  errorDetails: errorDetails_Input
  \\"The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.\\"
  font: String
  \\"The font color used for the information in the tab.\\\\n\\\\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.\\"
  fontColor: String
  \\"The font size used for the information in the tab.\\\\n\\\\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.\\"
  fontSize: String
  \\"Height of the tab in pixels.\\"
  height: Int
  \\"When set to **true**, the information in the tab is italic.\\"
  italic: String
  mergeField: mergeField_Input
  \\"Specifies the tool tip text for the tab.\\"
  name: String
  \\"Specifies the page number on which the tab is located.\\\\nMust be 1 for [supplemental documents][supdocs].\\\\n\\\\n[supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents\\"
  pageNumber: String
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  \\"When set to **true**, this custom tab is shared.\\"
  shared: String
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].\\"
  tabId: String
  \\"The label string associated with the tab.\\\\nThe string may be the empty string.\\\\nIf no value is provided, the tab type is used as the value.\\\\n\\\\nMaximum of 500 characters.\\"
  tabLabel: String
  tabOrder: String
  \\"When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.\\"
  templateLocked: String
  \\"When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.\\"
  templateRequired: String
  \\"When set to **true**, the information in the tab is underlined.\\"
  underline: String
  \\"Specifies the value of the tab.\\"
  value: String
  \\"Width of the tab in pixels.\\"
  width: Int
  \\"This indicates the horizontal offset of the object on the page.\\\\nDocuSign uses 72 DPI when determining position.\\\\nRequired. May be zero.\\"
  xPosition: String
  \\"This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.\\"
  yPosition: String
}

input number_Input {
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\\\\n-->\\"
  anchorCaseSensitive: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\\\\n-->\\"
  anchorHorizontalAlignment: String
  \\"When set to **true**, this tab is ignored if anchorString is not found in the document.\\"
  anchorIgnoreIfNotPresent: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\\\\n-->\\"
  anchorMatchWholeWord: String
  \\"Anchor text information for a radio button.\\"
  anchorString: String
  \\"Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.\\"
  anchorUnits: String
  \\"Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorXOffset: String
  \\"Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorYOffset: String
  \\"When set to **true**, the information in the tab is bold.\\"
  bold: String
  \\"When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\\\\n\\\\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\\\\n\\\\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.\\"
  concealValueOnDocument: String
  \\"For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.\\"
  conditionalParentLabel: String
  \\"For conditional fields, this is the value of the parent tab that controls the tab's visibility.\\\\n\\\\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \\\\\\"on\\\\\\" as the value to show that the parent tab is active.\\"
  conditionalParentValue: String
  \\"The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.\\"
  customTabId: String
  \\"When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.\\"
  disableAutoSize: String
  \\"Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.\\"
  documentId: String
  errorDetails: errorDetails_Input
  \\"The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.\\"
  font: String
  \\"The font color used for the information in the tab.\\\\n\\\\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.\\"
  fontColor: String
  \\"The font size used for the information in the tab.\\\\n\\\\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.\\"
  fontSize: String
  \\"Contains the formula\\\\nfor calculating the value of\\\\nthis tab.\\\\n\\\\nUse a tab's \`tabLabel\`,\\\\nenclosed in brackets,\\\\nto refer to it.\\\\n\\\\nFor example,\\\\nyou want to present the total cost\\\\nof two items, tax included.\\\\n\\\\nThe cost of each item is stored\\\\nin number tabs labeled Item1 and Item2.\\\\nThe tax rate is in a number tab\\\\nlabeled TaxRate.\\\\n\\\\nThe formula string for this property\\\\nwould be:\\\\n\`([Item1] + [Item2]) * (1 + [TaxRate])\`\\\\n\\\\nSee [Calculated Fields][calculatedfields]\\\\nin the DocuSign Support Center\\\\nto learn more about formulas.\\\\n\\\\nMaximum Length: 2000 characters\\\\n\\\\n[calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields\\"
  formula: String
  \\"When set to **true**, sets this as a payment tab. Can only be used with Text, Number, Formula, or List tabs. The value of the tab must be a number.\\"
  isPaymentAmount: String
  \\"When set to **true**, the information in the tab is italic.\\"
  italic: String
  \\"When set to **true**, the signer cannot change the data of the custom tab.\\"
  locked: String
  \\"An optional value that describes the maximum length of the property when the property is a string.\\"
  maxLength: Int
  mergeField: mergeField_Input
  \\"Specifies the tool tip text for the tab.\\"
  name: String
  \\"The initial value of the tab when it was sent to the recipient.\\"
  originalValue: String
  \\"Specifies the page number on which the tab is located.\\\\nMust be 1 for [supplemental documents][supdocs].\\\\n\\\\n[supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents\\"
  pageNumber: String
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  \\"When set to **true** and shared is true, information must be entered in this field to complete the envelope.\\"
  requireAll: String
  \\"Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.\\"
  requireInitialOnSharedChange: String
  \\"When set to **true**, the signer is required to fill out this tab\\"
  required: String
  \\"When set to **true**, the sender must populate the tab before an envelope can be sent using the template. \\\\n\\\\nThis value tab can only be changed by modifying (PUT) the template. \\\\n\\\\nTabs with a \`senderRequired\` value of true cannot be deleted from an envelope.\\"
  senderRequired: String
  \\"When set to **true**, this custom tab is shared.\\"
  shared: String
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].\\"
  tabId: String
  \\"The label string associated with the tab.\\\\nThe string may be the empty string.\\\\nIf no value is provided, the tab type is used as the value.\\\\n\\\\nMaximum of 500 characters.\\"
  tabLabel: String
  tabOrder: String
  \\"When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.\\"
  templateLocked: String
  \\"When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.\\"
  templateRequired: String
  \\"When set to **true**, the information in the tab is underlined.\\"
  underline: String
  \\"The message displayed if the custom tab fails input validation (either custom of embedded).\\"
  validationMessage: String
  \\"A regular expressionn used to validate input for the tab.\\"
  validationPattern: String
  \\"Specifies the value of the tab.\\"
  value: String
  \\"Width of the tab in pixels.\\"
  width: Int
  \\"This indicates the horizontal offset of the object on the page.\\\\nDocuSign uses 72 DPI when determining position.\\\\nRequired. May be zero.\\"
  xPosition: String
  \\"This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.\\"
  yPosition: String
}

input radioGroup_Input {
  \\"For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.\\"
  conditionalParentLabel: String
  \\"For conditional fields, this is the value of the parent tab that controls the tab's visibility.\\\\n\\\\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \\\\\\"on\\\\\\" as the value to show that the parent tab is active.\\"
  conditionalParentValue: String
  \\"Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.\\"
  documentId: String
  \\"The name of the group.\\"
  groupName: String
  \\"Specifies the locations and status for radio buttons that are grouped together.\\"
  radios: [radio_Input]
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  \\"When set to **true** and shared is true, information must be entered in this field to complete the envelope.\\"
  requireAll: String
  \\"Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.\\"
  requireInitialOnSharedChange: String
  \\"When set to **true**, this custom tab is shared.\\"
  shared: String
}

input radio_Input {
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\\\\n-->\\"
  anchorCaseSensitive: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\\\\n-->\\"
  anchorHorizontalAlignment: String
  \\"When set to **true**, this tab is ignored if anchorString is not found in the document.\\"
  anchorIgnoreIfNotPresent: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\\\\n-->\\"
  anchorMatchWholeWord: String
  \\"Anchor text information for a radio button.\\"
  anchorString: String
  \\"Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.\\"
  anchorUnits: String
  \\"Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorXOffset: String
  \\"Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorYOffset: String
  errorDetails: errorDetails_Input
  \\"When set to **true**, the signer cannot change the data of the custom tab.\\"
  locked: String
  \\"Specifies the page number on which the tab is located.\\\\nMust be 1 for [supplemental documents][supdocs].\\\\n\\\\n[supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents\\"
  pageNumber: String
  \\"When set to **true**, the signer is required to fill out this tab\\"
  required: String
  \\"When set to **true**, the radio button is selected.\\"
  selected: String
  \\"The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].\\"
  tabId: String
  tabOrder: String
  \\"Specifies the value of the tab.\\"
  value: String
  \\"This indicates the horizontal offset of the object on the page.\\\\nDocuSign uses 72 DPI when determining position.\\\\nRequired. May be zero.\\"
  xPosition: String
  \\"This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.\\"
  yPosition: String
}

input signHere_Input {
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\\\\n-->\\"
  anchorCaseSensitive: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\\\\n-->\\"
  anchorHorizontalAlignment: String
  \\"When set to **true**, this tab is ignored if anchorString is not found in the document.\\"
  anchorIgnoreIfNotPresent: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\\\\n-->\\"
  anchorMatchWholeWord: String
  \\"Anchor text information for a radio button.\\"
  anchorString: String
  \\"Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.\\"
  anchorUnits: String
  \\"Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorXOffset: String
  \\"Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorYOffset: String
  \\"For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.\\"
  conditionalParentLabel: String
  \\"For conditional fields, this is the value of the parent tab that controls the tab's visibility.\\\\n\\\\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \\\\\\"on\\\\\\" as the value to show that the parent tab is active.\\"
  conditionalParentValue: String
  \\"The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.\\"
  customTabId: String
  \\"Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.\\"
  documentId: String
  errorDetails: errorDetails_Input
  mergeField: mergeField_Input
  \\"Specifies the tool tip text for the tab.\\"
  name: String
  optional: String
  \\"Specifies the page number on which the tab is located.\\\\nMust be 1 for [supplemental documents][supdocs].\\\\n\\\\n[supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents\\"
  pageNumber: String
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  scaleValue: Float
  stampType: String
  stampTypeMetadata: propertyMetadata_Input
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].\\"
  tabId: String
  \\"The label string associated with the tab.\\\\nThe string may be the empty string.\\\\nIf no value is provided, the tab type is used as the value.\\\\n\\\\nMaximum of 500 characters.\\"
  tabLabel: String
  tabOrder: String
  \\"When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.\\"
  templateLocked: String
  \\"When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.\\"
  templateRequired: String
  \\"This indicates the horizontal offset of the object on the page.\\\\nDocuSign uses 72 DPI when determining position.\\\\nRequired. May be zero.\\"
  xPosition: String
  \\"This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.\\"
  yPosition: String
}

input signerAttachment_Input {
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\\\\n-->\\"
  anchorCaseSensitive: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\\\\n-->\\"
  anchorHorizontalAlignment: String
  \\"When set to **true**, this tab is ignored if anchorString is not found in the document.\\"
  anchorIgnoreIfNotPresent: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\\\\n-->\\"
  anchorMatchWholeWord: String
  \\"Anchor text information for a radio button.\\"
  anchorString: String
  \\"Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.\\"
  anchorUnits: String
  \\"Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorXOffset: String
  \\"Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorYOffset: String
  \\"For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.\\"
  conditionalParentLabel: String
  \\"For conditional fields, this is the value of the parent tab that controls the tab's visibility.\\\\n\\\\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \\\\\\"on\\\\\\" as the value to show that the parent tab is active.\\"
  conditionalParentValue: String
  \\"The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.\\"
  customTabId: String
  \\"Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.\\"
  documentId: String
  errorDetails: errorDetails_Input
  mergeField: mergeField_Input
  name: String
  optional: String
  \\"Specifies the page number on which the tab is located.\\\\nMust be 1 for [supplemental documents][supdocs].\\\\n\\\\n[supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents\\"
  pageNumber: String
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  scaleValue: Float
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].\\"
  tabId: String
  \\"The label string associated with the tab.\\\\nThe string may be the empty string.\\\\nIf no value is provided, the tab type is used as the value.\\\\n\\\\nMaximum of 500 characters.\\"
  tabLabel: String
  tabOrder: String
  \\"When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.\\"
  templateLocked: String
  \\"When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.\\"
  templateRequired: String
  \\"This indicates the horizontal offset of the object on the page.\\\\nDocuSign uses 72 DPI when determining position.\\\\nRequired. May be zero.\\"
  xPosition: String
  \\"This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.\\"
  yPosition: String
}

input ssn_Input {
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\\\\n-->\\"
  anchorCaseSensitive: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\\\\n-->\\"
  anchorHorizontalAlignment: String
  \\"When set to **true**, this tab is ignored if anchorString is not found in the document.\\"
  anchorIgnoreIfNotPresent: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\\\\n-->\\"
  anchorMatchWholeWord: String
  \\"Anchor text information for a radio button.\\"
  anchorString: String
  \\"Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.\\"
  anchorUnits: String
  \\"Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorXOffset: String
  \\"Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorYOffset: String
  \\"When set to **true**, the information in the tab is bold.\\"
  bold: String
  \\"When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\\\\n\\\\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\\\\n\\\\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.\\"
  concealValueOnDocument: String
  \\"For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.\\"
  conditionalParentLabel: String
  \\"For conditional fields, this is the value of the parent tab that controls the tab's visibility.\\\\n\\\\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \\\\\\"on\\\\\\" as the value to show that the parent tab is active.\\"
  conditionalParentValue: String
  \\"The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.\\"
  customTabId: String
  \\"When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.\\"
  disableAutoSize: String
  \\"Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.\\"
  documentId: String
  errorDetails: errorDetails_Input
  \\"The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.\\"
  font: String
  \\"The font color used for the information in the tab.\\\\n\\\\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.\\"
  fontColor: String
  \\"The font size used for the information in the tab.\\\\n\\\\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.\\"
  fontSize: String
  \\"When set to **true**, the information in the tab is italic.\\"
  italic: String
  \\"When set to **true**, the signer cannot change the data of the custom tab.\\"
  locked: String
  \\"An optional value that describes the maximum length of the property when the property is a string.\\"
  maxLength: Int
  mergeField: mergeField_Input
  \\"Specifies the tool tip text for the tab.\\"
  name: String
  \\"The initial value of the tab when it was sent to the recipient.\\"
  originalValue: String
  \\"Specifies the page number on which the tab is located.\\\\nMust be 1 for [supplemental documents][supdocs].\\\\n\\\\n[supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents\\"
  pageNumber: String
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  \\"When set to **true** and shared is true, information must be entered in this field to complete the envelope.\\"
  requireAll: String
  \\"Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.\\"
  requireInitialOnSharedChange: String
  \\"When set to **true**, the signer is required to fill out this tab\\"
  required: String
  \\"When set to **true**, the sender must populate the tab before an envelope can be sent using the template. \\\\n\\\\nThis value tab can only be changed by modifying (PUT) the template. \\\\n\\\\nTabs with a \`senderRequired\` value of true cannot be deleted from an envelope.\\"
  senderRequired: String
  \\"When set to **true**, this custom tab is shared.\\"
  shared: String
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].\\"
  tabId: String
  \\"The label string associated with the tab.\\\\nThe string may be the empty string.\\\\nIf no value is provided, the tab type is used as the value.\\\\n\\\\nMaximum of 500 characters.\\"
  tabLabel: String
  tabOrder: String
  \\"When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.\\"
  templateLocked: String
  \\"When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.\\"
  templateRequired: String
  \\"When set to **true**, the information in the tab is underlined.\\"
  underline: String
  \\"The message displayed if the custom tab fails input validation (either custom of embedded).\\"
  validationMessage: String
  \\"A regular expressionn used to validate input for the tab.\\"
  validationPattern: String
  \\"Specifies the value of the tab.\\"
  value: String
  \\"Width of the tab in pixels.\\"
  width: Int
  \\"This indicates the horizontal offset of the object on the page.\\\\nDocuSign uses 72 DPI when determining position.\\\\nRequired. May be zero.\\"
  xPosition: String
  \\"This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.\\"
  yPosition: String
}

input text_Input {
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\\\\n-->\\"
  anchorCaseSensitive: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\\\\n-->\\"
  anchorHorizontalAlignment: String
  \\"When set to **true**, this tab is ignored if anchorString is not found in the document.\\"
  anchorIgnoreIfNotPresent: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\\\\n-->\\"
  anchorMatchWholeWord: String
  \\"Anchor text information for a radio button.\\"
  anchorString: String
  \\"Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.\\"
  anchorUnits: String
  \\"Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorXOffset: String
  \\"Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorYOffset: String
  \\"When set to **true**, the information in the tab is bold.\\"
  bold: String
  \\"When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\\\\n\\\\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\\\\n\\\\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.\\"
  concealValueOnDocument: String
  \\"For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.\\"
  conditionalParentLabel: String
  \\"For conditional fields, this is the value of the parent tab that controls the tab's visibility.\\\\n\\\\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \\\\\\"on\\\\\\" as the value to show that the parent tab is active.\\"
  conditionalParentValue: String
  \\"The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.\\"
  customTabId: String
  \\"When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.\\"
  disableAutoSize: String
  \\"Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.\\"
  documentId: String
  errorDetails: errorDetails_Input
  \\"The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.\\"
  font: String
  \\"The font color used for the information in the tab.\\\\n\\\\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.\\"
  fontColor: String
  \\"The font size used for the information in the tab.\\\\n\\\\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.\\"
  fontSize: String
  \\"Contains the formula\\\\nfor calculating the value of\\\\nthis tab.\\\\n\\\\nUse a tab's \`tabLabel\`,\\\\nenclosed in brackets,\\\\nto refer to it.\\\\n\\\\nFor example,\\\\nyou want to present the total cost\\\\nof two items, tax included.\\\\n\\\\nThe cost of each item is stored\\\\nin number tabs labeled Item1 and Item2.\\\\nThe tax rate is in a number tab\\\\nlabeled TaxRate.\\\\n\\\\nThe formula string for this property\\\\nwould be:\\\\n\`([Item1] + [Item2]) * (1 + [TaxRate])\`\\\\n\\\\nSee [Calculated Fields][calculatedfields]\\\\nin the DocuSign Support Center\\\\nto learn more about formulas.\\\\n\\\\nMaximum Length: 2000 characters\\\\n\\\\n[calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields\\"
  formula: String
  \\"Height of the tab in pixels.\\"
  height: Int
  \\"When set to **true**, sets this as a payment tab. Can only be used with Text, Number, Formula, or List tabs. The value of the tab must be a number.\\"
  isPaymentAmount: String
  \\"When set to **true**, the information in the tab is italic.\\"
  italic: String
  \\"When set to **true**, the signer cannot change the data of the custom tab.\\"
  locked: String
  \\"An optional value that describes the maximum length of the property when the property is a string.\\"
  maxLength: Int
  mergeField: mergeField_Input
  \\"Specifies the tool tip text for the tab.\\"
  name: String
  \\"The initial value of the tab when it was sent to the recipient.\\"
  originalValue: String
  \\"Specifies the page number on which the tab is located.\\\\nMust be 1 for [supplemental documents][supdocs].\\\\n\\\\n[supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents\\"
  pageNumber: String
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  \\"When set to **true** and shared is true, information must be entered in this field to complete the envelope.\\"
  requireAll: String
  \\"Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.\\"
  requireInitialOnSharedChange: String
  \\"When set to **true**, the signer is required to fill out this tab\\"
  required: String
  \\"When set to **true**, the sender must populate the tab before an envelope can be sent using the template. \\\\n\\\\nThis value tab can only be changed by modifying (PUT) the template. \\\\n\\\\nTabs with a \`senderRequired\` value of true cannot be deleted from an envelope.\\"
  senderRequired: String
  \\"When set to **true**, this custom tab is shared.\\"
  shared: String
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].\\"
  tabId: String
  \\"The label string associated with the tab.\\\\nThe string may be the empty string.\\\\nIf no value is provided, the tab type is used as the value.\\\\n\\\\nMaximum of 500 characters.\\"
  tabLabel: String
  tabOrder: String
  \\"When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.\\"
  templateLocked: String
  \\"When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.\\"
  templateRequired: String
  \\"When set to **true**, the information in the tab is underlined.\\"
  underline: String
  \\"The message displayed if the custom tab fails input validation (either custom of embedded).\\"
  validationMessage: String
  \\"A regular expressionn used to validate input for the tab.\\"
  validationPattern: String
  \\"Specifies the value of the tab.\\"
  value: String
  \\"Width of the tab in pixels.\\"
  width: Int
  \\"This indicates the horizontal offset of the object on the page.\\\\nDocuSign uses 72 DPI when determining position.\\\\nRequired. May be zero.\\"
  xPosition: String
  \\"This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.\\"
  yPosition: String
}

input title_Input {
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\\\\n-->\\"
  anchorCaseSensitive: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\\\\n-->\\"
  anchorHorizontalAlignment: String
  \\"When set to **true**, this tab is ignored if anchorString is not found in the document.\\"
  anchorIgnoreIfNotPresent: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\\\\n-->\\"
  anchorMatchWholeWord: String
  \\"Anchor text information for a radio button.\\"
  anchorString: String
  \\"Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.\\"
  anchorUnits: String
  \\"Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorXOffset: String
  \\"Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorYOffset: String
  \\"When set to **true**, the information in the tab is bold.\\"
  bold: String
  \\"When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\\\\n\\\\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\\\\n\\\\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.\\"
  concealValueOnDocument: String
  \\"For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.\\"
  conditionalParentLabel: String
  \\"For conditional fields, this is the value of the parent tab that controls the tab's visibility.\\\\n\\\\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \\\\\\"on\\\\\\" as the value to show that the parent tab is active.\\"
  conditionalParentValue: String
  \\"The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.\\"
  customTabId: String
  \\"When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.\\"
  disableAutoSize: String
  \\"Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.\\"
  documentId: String
  errorDetails: errorDetails_Input
  \\"The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.\\"
  font: String
  \\"The font color used for the information in the tab.\\\\n\\\\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.\\"
  fontColor: String
  \\"The font size used for the information in the tab.\\\\n\\\\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.\\"
  fontSize: String
  \\"When set to **true**, the information in the tab is italic.\\"
  italic: String
  \\"When set to **true**, the signer cannot change the data of the custom tab.\\"
  locked: String
  \\"An optional value that describes the maximum length of the property when the property is a string.\\"
  maxLength: Int
  mergeField: mergeField_Input
  name: String
  \\"The initial value of the tab when it was sent to the recipient.\\"
  originalValue: String
  \\"Specifies the page number on which the tab is located.\\\\nMust be 1 for [supplemental documents][supdocs].\\\\n\\\\n[supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents\\"
  pageNumber: String
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  \\"When set to **true**, the signer is required to fill out this tab\\"
  required: String
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].\\"
  tabId: String
  \\"The label string associated with the tab.\\\\nThe string may be the empty string.\\\\nIf no value is provided, the tab type is used as the value.\\\\n\\\\nMaximum of 500 characters.\\"
  tabLabel: String
  tabOrder: String
  \\"When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.\\"
  templateLocked: String
  \\"When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.\\"
  templateRequired: String
  \\"When set to **true**, the information in the tab is underlined.\\"
  underline: String
  \\"Specifies the value of the tab.\\"
  value: String
  \\"Width of the tab in pixels.\\"
  width: Int
  \\"This indicates the horizontal offset of the object on the page.\\\\nDocuSign uses 72 DPI when determining position.\\\\nRequired. May be zero.\\"
  xPosition: String
  \\"This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.\\"
  yPosition: String
}

input view_Input {
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\\\\n-->\\"
  anchorCaseSensitive: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\\\\n-->\\"
  anchorHorizontalAlignment: String
  \\"When set to **true**, this tab is ignored if anchorString is not found in the document.\\"
  anchorIgnoreIfNotPresent: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\\\\n-->\\"
  anchorMatchWholeWord: String
  \\"Anchor text information for a radio button.\\"
  anchorString: String
  \\"Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.\\"
  anchorUnits: String
  \\"Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorXOffset: String
  \\"Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorYOffset: String
  \\"When set to **true**, the information in the tab is bold.\\"
  bold: String
  buttonText: String
  \\"For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.\\"
  conditionalParentLabel: String
  \\"For conditional fields, this is the value of the parent tab that controls the tab's visibility.\\\\n\\\\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \\\\\\"on\\\\\\" as the value to show that the parent tab is active.\\"
  conditionalParentValue: String
  \\"The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.\\"
  customTabId: String
  \\"Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.\\"
  documentId: String
  errorDetails: errorDetails_Input
  \\"The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.\\"
  font: String
  \\"The font color used for the information in the tab.\\\\n\\\\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.\\"
  fontColor: String
  \\"The font size used for the information in the tab.\\\\n\\\\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.\\"
  fontSize: String
  \\"Height of the tab in pixels.\\"
  height: Int
  \\"When set to **true**, the information in the tab is italic.\\"
  italic: String
  mergeField: mergeField_Input
  \\"Specifies the page number on which the tab is located.\\\\nMust be 1 for [supplemental documents][supdocs].\\\\n\\\\n[supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents\\"
  pageNumber: String
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  \\"When set to **true**, the signer is required to fill out this tab\\"
  required: String
  requiredRead: String
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].\\"
  tabId: String
  \\"The label string associated with the tab.\\\\nThe string may be the empty string.\\\\nIf no value is provided, the tab type is used as the value.\\\\n\\\\nMaximum of 500 characters.\\"
  tabLabel: String
  tabOrder: String
  \\"When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.\\"
  templateLocked: String
  \\"When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.\\"
  templateRequired: String
  \\"When set to **true**, the information in the tab is underlined.\\"
  underline: String
  \\"Width of the tab in pixels.\\"
  width: Int
  \\"This indicates the horizontal offset of the object on the page.\\\\nDocuSign uses 72 DPI when determining position.\\\\nRequired. May be zero.\\"
  xPosition: String
  \\"This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.\\"
  yPosition: String
}

input zip_Input {
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\\\\n-->\\"
  anchorCaseSensitive: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\\\\n-->\\"
  anchorHorizontalAlignment: String
  \\"When set to **true**, this tab is ignored if anchorString is not found in the document.\\"
  anchorIgnoreIfNotPresent: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\\\\n-->\\"
  anchorMatchWholeWord: String
  \\"Anchor text information for a radio button.\\"
  anchorString: String
  \\"Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.\\"
  anchorUnits: String
  \\"Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorXOffset: String
  \\"Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorYOffset: String
  \\"When set to **true**, the information in the tab is bold.\\"
  bold: String
  \\"When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\\\\n\\\\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\\\\n\\\\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.\\"
  concealValueOnDocument: String
  \\"For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.\\"
  conditionalParentLabel: String
  \\"For conditional fields, this is the value of the parent tab that controls the tab's visibility.\\\\n\\\\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \\\\\\"on\\\\\\" as the value to show that the parent tab is active.\\"
  conditionalParentValue: String
  \\"The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.\\"
  customTabId: String
  \\"When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.\\"
  disableAutoSize: String
  \\"Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.\\"
  documentId: String
  errorDetails: errorDetails_Input
  \\"The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.\\"
  font: String
  \\"The font color used for the information in the tab.\\\\n\\\\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.\\"
  fontColor: String
  \\"The font size used for the information in the tab.\\\\n\\\\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.\\"
  fontSize: String
  \\"When set to **true**, the information in the tab is italic.\\"
  italic: String
  \\"When set to **true**, the signer cannot change the data of the custom tab.\\"
  locked: String
  \\"An optional value that describes the maximum length of the property when the property is a string.\\"
  maxLength: Int
  mergeField: mergeField_Input
  name: String
  \\"The initial value of the tab when it was sent to the recipient.\\"
  originalValue: String
  \\"Specifies the page number on which the tab is located.\\\\nMust be 1 for [supplemental documents][supdocs].\\\\n\\\\n[supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents\\"
  pageNumber: String
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  \\"When set to **true** and shared is true, information must be entered in this field to complete the envelope.\\"
  requireAll: String
  \\"Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.\\"
  requireInitialOnSharedChange: String
  \\"When set to **true**, the signer is required to fill out this tab\\"
  required: String
  \\"When set to **true**, the sender must populate the tab before an envelope can be sent using the template. \\\\n\\\\nThis value tab can only be changed by modifying (PUT) the template. \\\\n\\\\nTabs with a \`senderRequired\` value of true cannot be deleted from an envelope.\\"
  senderRequired: String
  \\"When set to **true**, this custom tab is shared.\\"
  shared: String
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call].\\"
  tabId: String
  \\"The label string associated with the tab.\\\\nThe string may be the empty string.\\\\nIf no value is provided, the tab type is used as the value.\\\\n\\\\nMaximum of 500 characters.\\"
  tabLabel: String
  tabOrder: String
  \\"When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.\\"
  templateLocked: String
  \\"When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.\\"
  templateRequired: String
  \\"When set to **true**, the information in the tab is underlined.\\"
  underline: String
  useDash4: String
  \\"The message displayed if the custom tab fails input validation (either custom of embedded).\\"
  validationMessage: String
  \\"A regular expressionn used to validate input for the tab.\\"
  validationPattern: String
  \\"Specifies the value of the tab.\\"
  value: String
  \\"Width of the tab in pixels.\\"
  width: Int
  \\"This indicates the horizontal offset of the object on the page.\\\\nDocuSign uses 72 DPI when determining position.\\\\nRequired. May be zero.\\"
  xPosition: String
  \\"This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.\\"
  yPosition: String
}

input signer_Input {
  \\"If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \\\\n\\\\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\\\\n\\\\nIf blank, but the signer \`accessCode\` property is set in the envelope, then that value is used.\\\\n\\\\nIf blank and the signer \`accessCode\` property is not set, then the access code is not required.\\"
  accessCode: String
  \\"This Optional attribute indicates that the access code will be added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient.\\"
  addAccessCodeToEmail: String
  \\"Specifies whether auto navigation is set for the recipient.\\"
  autoNavigation: String
  \\"Contains a URI for an endpoint that allows you to easily retrieve bulk recipient information.\\"
  bulkRecipientsUri: String
  \\"When set to **true**, specifies that the signer can perform the signing ceremony offline.\\"
  canSignOffline: String
  \\"Specifies whether the recipient is embedded or remote. \\\\n\\\\nIf the \`clientUserId\` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.\\\\n\\\\nNote: if the \`clientUserId\` property is set and either \`SignerMustHaveAccount\` or \`SignerMustLoginToSign\` property of the account settings is set to  **true**, an error is generated on sending. \\\\n\\\\nMaximum length: 100 characters.\\"
  clientUserId: String
  creationReason: String
  \\"An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.\\"
  customFields: [String]
  \\"The date and time the recipient declined the document.\\"
  declinedDateTime: String
  \\"The reason the recipient declined the document.\\"
  declinedReason: String
  \\"When set to **true**, this recipient is the default recipient and any tabs generated by the transformPdfFields option are mapped to this recipient.\\"
  defaultRecipient: String
  \\"Reserved: For DocuSign use only.\\"
  deliveredDateTime: String
  \\"Reserved: For DocuSign use only.\\"
  deliveryMethod: String
  documentVisibility: [documentVisibility_Input]
  \\"Email id of the recipient. Notification of the document to sign is sent to this email id. \\\\n\\\\nMaximum length: 100 characters.\\"
  email: String
  emailNotification: recipientEmailNotification_Input
  emailRecipientPostSigningURL: String
  \\"Specifies a sender provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \\\\n\\\\nIf set to \`SIGN_AT_DOCUSIGN\`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation that is launched by any partner.\\\\n\\\\nIt is important to remember that in a typical embedded workflow the authentication of an embedded recipient is the responsibility of the sending application, DocuSign expects that senders will follow their own process for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process in initiated. However, when the sending application sets \`EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN\`, the recipient goes directly to the embedded signing or viewing process bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\\\\n\\\\nIf the \`clientUserId\` property is NOT set, and the \`embeddedRecipientStartURL\` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: envelopeId, recipientId, recipientName, recipientEmail, and customFields. The \`customFields\` property must be set fort the recipient or envelope. The merge fields are enclosed in double brackets. \\\\n\\\\n*Example*: \\\\n\\\\n\`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]\`\\"
  embeddedRecipientStartURL: String
  errorDetails: errorDetails_Input
  \\"Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the \`enforceSignerVisibility\` property must be set to **true** for the envelope to use this.\\\\n\\\\nWhen enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.\\"
  excludedDocuments: [String]
  \\"Reserved:\\"
  faxNumber: String
  \\"Specifies authentication check by name. The names used here must be the same as the authentication type names used by the account (these name can also be found in the web console sending interface in the Identify list for a recipient,) This overrides any default authentication setting.\\\\n\\\\n*Example*: Your account has ID Check and SMS Authentication available and in the web console Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check in an envelope, the idCheckConfigurationName should be 'ID Check '. If you wanted to use SMS, it would be 'SMS Auth $' and you would need to add you would need to add phone number information to the \`smsAuthentication\` node.\\"
  idCheckConfigurationName: String
  idCheckInformationInput: idCheckInformationInput_Input
  \\"When set to **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account.\\"
  inheritEmailNotificationConfiguration: String
  \\"When set to **true**, this signer is a bulk recipient and the recipient information is contained in a bulk recipient file. \\\\n\\\\nNote that when this is true the email and name for the recipient becomes bulk@recipient.com and \\\\\\"Bulk Recipient\\\\\\". These fields can not be changed for the bulk recipient.\\"
  isBulkRecipient: String
  name: String
  \\"A note sent to the recipient in the signing email.\\\\nThis note is unique to this recipient.\\\\nIn the user interface,\\\\nit appears near the upper left corner\\\\nof the document\\\\non the signing screen.\\\\n\\\\nMaximum Length: 1000 characters.\\"
  note: String
  phoneAuthentication: recipientPhoneAuthentication_Input
  \\"Reserved:\\"
  recipientAttachments: [recipientAttachment_Input]
  recipientAuthenticationStatus: authenticationStatus_Input
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  recipientIdGuid: String
  \\"The default signature provider is the DocuSign Electronic signature system. This parameter is used to specify one or more Standards Based Signature (digital signature) providers for the signer to use. [More information](../../../../guide/appendix/standards_based_signatures.html)\\"
  recipientSignatureProviders: [recipientSignatureProvider_Input]
  recipientSuppliesTabs: String
  \\"When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity.\\"
  requireIdLookup: String
  \\"When set to **true**, the signer must print, sign, and upload or fax the signed documents to DocuSign.\\"
  requireSignOnPaper: String
  \\"By default, DocuSign signers create electronic signatures. This field can be used to require the signer to use a SAFE-BioPharma digital certificate for signing.\\\\n\\\\nThis parameter should only be used to select a SAFE-BioPharma certificate. New integrations should use the \`recipientSignatureProviders\` parameter for other types of digital certificates. \\\\n\\\\nSet this parameter to \`safe\` to use a SAFE-BioPharma certificate.\\\\n\\\\nThe signer must be enrolled in the SAFE program to sign with a SAFE certificate.\\"
  requireSignerCertificate: String
  \\"Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.\\"
  roleName: String
  \\"Specifies the routing order of the recipient in the envelope.\\"
  routingOrder: String
  samlAuthentication: recipientSAMLAuthentication_Input
  \\"The date and time the envelope was sent.\\"
  sentDateTime: String
  \\"When set to **true**, specifies that the signer must sign in all locations.\\"
  signInEachLocation: String
  signatureInfo: recipientSignatureInformation_Input
  \\"Reserved: For DocuSign use only.\\"
  signedDateTime: String
  \\"When set to **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab ( instead of adopting a signature/initial style or only drawing a signature/initial once).\\"
  signingGroupId: String
  \\"The display name for the signing group. \\\\n\\\\nMaximum Length: 100 characters.\\"
  signingGroupName: String
  \\"A complex type that contains information about users in the signing group.\\"
  signingGroupUsers: [userInfo_Input]
  smsAuthentication: recipientSMSAuthentication_Input
  \\"Lists the social ID type that can be used for recipient authentication.\\"
  socialAuthentications: [socialAuthentication_Input]
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  tabs: EnvelopeRecipientTabs_Input
  \\"When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients.\\"
  templateLocked: String
  \\"When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.\\"
  templateRequired: String
  totalTabCount: String
  \\"The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.\\"
  userId: String
}

input serverTemplate_Input {
  sequence: String
  \\"The unique identifier of the template. If this is not provided, DocuSign will generate a value.\\"
  templateId: String
}

\\"Register a webhook for the envelope\\"
input eventNotification_Input {
  \\"A list of envelope-level event statuses that will trigger Connect to send updates to the endpoint specified in the \`url\` property. \\\\n\\\\nTo receive notifications, you must include either an \`envelopeEvents\` node or a \`recipientEvents\` node. You do not need to specify both.\\"
  envelopeEvents: [envelopeEvent_Input]
  \\"When set to **true**, the Connect Service includes the Certificate of Completion with completed envelopes.\\"
  includeCertificateOfCompletion: String
  \\"When set to **true**, the Connect service will send the DocuSign signedby certificate as part of the SOAP xml. The certificate is included in the XML message as \`wsse:BinarySecurityToken\`.\\"
  includeCertificateWithSoap: String
  \\"When set to **true**, the Document Fields associated with the envelope's documents are included in the notification messages. Document Fields are optional custom name-value pairs added to documents using the API.\\"
  includeDocumentFields: String
  \\"When set to **true**, the XML webhook messages will include the envelope's PDF documents. Including the PDF documents will greatly increase the size of the notification messages. Ensure that your listener can handle incoming messages that are 25MB or larger.\\"
  includeDocuments: String
  \\"When set to **true**, if the envelope is voided, the Connect Service notification will include the void reason, as entered by the person that voided the envelope.\\"
  includeEnvelopeVoidReason: String
  \\"When set to **true**, Connect will include the sender account as Custom Field in the data.\\"
  includeSenderAccountAsCustomField: String
  \\"When set to **true**, the envelope's time zone information is included in the webhook messages.\\"
  includeTimeZone: String
  \\"When set to **true**, the webhook messages are logged. They can be viewed on the DocuSign Administration Web Tool in the Connect section. Logged messages can also be downloaded via the [ConnectEvents resource](../../../Connect/ConnectEvents/)\\"
  loggingEnabled: String
  \\"An array of recipient event statuses that will trigger Connect to send notifications to your webhook listener at the url endpoint specified in the \`url\` property. \\\\n\\\\nTo receive notifications, you must include either an \`envelopeEvents\` node or a \`recipientEvents\` node. You do not need to specify both.\\"
  recipientEvents: [recipientEvent_Input]
  \\"When set to **true**, the DocuSign Connect service checks that the message was received and retries on failures.\\"
  requireAcknowledgment: String
  \\"When set to **true**, notification messages are digitally signed with an [X509 certificate](https://trust.docusign.com/en-us/trust-certifications/docusign-public-certificates/).\\"
  signMessageWithX509Cert: String
  \\"The namespace of the SOAP interface.\\\\n\\\\nThe namespace value must be set if useSoapInterface is set to true.\\"
  soapNameSpace: String
  \\"The endpoint to which webhook notification messages are sent via an HTTP/S POST request. For the DocuSign production platform, the url must start with https. For the demo platform, either http or https is ok.\\"
  url: String
  \\"When set to **true**, the notifications are sent to your endpoint as SOAP requests.\\"
  useSoapInterface: String
}

\\"For which envelope events should your webhook be called?\\"
input envelopeEvent_Input {
  \\"An envelope status for which your webhook should be called. Values: Draft, Sent, Delivered, Completed, Declined, or Voided.\\"
  envelopeEventStatusCode: String
  \\"reserved\\"
  includeDocuments: String
}

input recipientEvent_Input {
  \\"reserved\\"
  includeDocuments: String
  \\"Send a webhook notification for the following recipient statuses: Sent, Delivered, Completed, Declined, AuthenticationFailed, and AutoResponded.\\"
  recipientEventStatusCode: String
}

input templateRole_Input {
  \\"If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \\\\n\\\\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\\\\n\\\\nIf blank, but the signer \`accessCode\` property is set in the envelope, then that value is used.\\\\n\\\\nIf blank and the signer \`accessCode\` property is not set, then the access code is not required.\\"
  accessCode: String
  \\"Specifies whether the recipient is embedded or remote. \\\\n\\\\nIf the \`clientUserId\` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.\\\\n\\\\nNote: if the \`clientUserId\` property is set and either \`SignerMustHaveAccount\` or \`SignerMustLoginToSign\` property of the account settings is set to  **true**, an error is generated on sending. \\\\n\\\\nMaximum length: 100 characters.\\"
  clientUserId: String
  \\"When set to **true**, this recipient is the default recipient and any tabs generated by the transformPdfFields option are mapped to this recipient.\\"
  defaultRecipient: String
  \\"Specifies the email associated with a role name.\\"
  email: String
  emailNotification: recipientEmailNotification_Input
  \\"Specifies a sender provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \\\\n\\\\nIf set to \`SIGN_AT_DOCUSIGN\`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation that is launched by any partner.\\\\n\\\\nIt is important to remember that in a typical embedded workflow the authentication of an embedded recipient is the responsibility of the sending application, DocuSign expects that senders will follow their own process for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process in initiated. However, when the sending application sets \`EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN\`, the recipient goes directly to the embedded signing or viewing process bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\\\\n\\\\nIf the \`clientUserId\` property is NOT set, and the \`embeddedRecipientStartURL\` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: envelopeId, recipientId, recipientName, recipientEmail, and customFields. The \`customFields\` property must be set fort the recipient or envelope. The merge fields are enclosed in double brackets. \\\\n\\\\n*Example*: \\\\n\\\\n\`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]\`\\"
  embeddedRecipientStartURL: String
  \\"Specifies the full legal name of the signer in person signer template roles.\\\\n\\\\nMaximum Length: 100 characters.\\"
  inPersonSignerName: String
  \\"Specifies the recipient's name.\\"
  name: String
  \\"The default signature provider is the DocuSign Electronic signature system. This parameter is used to specify one or more Standards Based Signature (digital signature) providers for the signer to use. [More information](../../../../guide/appendix/standards_based_signatures.html)\\"
  recipientSignatureProviders: [recipientSignatureProvider_Input]
  \\"Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.\\"
  roleName: String
  \\"Specifies the routing order of the recipient in the envelope.\\"
  routingOrder: String
  \\"When set to **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab ( instead of adopting a signature/initial style or only drawing a signature/initial once).\\"
  signingGroupId: String
  tabs: EnvelopeRecipientTabs_Input
}

input envelopeIdsRequest_Input {
  envelopeIds: [String]
  \\"A list of transaction Id's used to determining the status of envelopes sent asynchronously. See **transactionId** property on envelopes.\\"
  transactionIds: [String]
}

type envelopeUpdateSummary {
  bulkEnvelopeStatus: bulkEnvelopeStatus
  \\"The envelope ID of the envelope status that failed to post.\\"
  envelopeId: String
  errorDetails: errorDetails
  listCustomFieldUpdateResults: [listCustomField]
  lockInformation: EnvelopeLocks
  recipientUpdateResults: [recipientUpdateResponse]
  tabUpdateResults: EnvelopeRecipientTabs
  textCustomFieldUpdateResults: [textCustomField]
}

type recipientUpdateResponse {
  errorDetails: errorDetails
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  tabs: EnvelopeRecipientTabs
}

input envelopeAttachmentsRequest_Input {
  attachments: [attachment_Input]
}

\\"Envelope document fields\\"
input EnvelopeDocumentFields_Input {
  \\"The array of name/value custom data strings to be added to a document. Custom document field information is returned in the status, but otherwise is not used by DocuSign. The array contains the elements: \\\\n\\\\n* name - A string that can be a maximum of 50 characters. \\\\n* value - A string that can be a maximum of 200 characters.\\\\n\\\\n*IMPORTANT*: If you are using xml, the name/value pair is contained in a nameValue element.\\"
  documentFields: [nameValue_Input]
}

input pageRequest_Input {
  password: String
  \\"Sets the direction the page image is rotated. The possible settings are: left or right\\"
  rotate: String
}

type documentTemplateList {
  documentTemplates: [documentTemplate]
}

type documentTemplate {
  documentEndPage: String
  \\"Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.\\"
  documentId: String
  documentStartPage: String
  errorDetails: errorDetails
  \\"The unique identifier of the template. If this is not provided, DocuSign will generate a value.\\"
  templateId: String
}

input documentTemplateList_Input {
  documentTemplates: [documentTemplate_Input]
}

input documentTemplate_Input {
  documentEndPage: String
  \\"Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.\\"
  documentId: String
  documentStartPage: String
  errorDetails: errorDetails_Input
  \\"The unique identifier of the template. If this is not provided, DocuSign will generate a value.\\"
  templateId: String
}

input lockRequest_Input {
  \\"The number of seconds to lock the envelope for editing.  Must be greater than 0 seconds.\\"
  lockDurationInSeconds: String
  \\"The type of envelope lock.  Currently \\\\\\"edit\\\\\\" is the only supported type.\\"
  lockType: String
  \\"A friendly name of the application used to lock the envelope.  Will be used in error messages to the user when lock conflicts occur.\\"
  lockedByApp: String
  templatePassword: String
  \\"Reserved for future use.\\\\n\\\\nIndicates whether a scratchpad is used for editing information.\\"
  useScratchPad: String
}

type recipientsUpdateSummary {
  recipientUpdateResults: [recipientUpdateResponse]
}

input EnvelopeDocumentVisibility_Input {
  documentVisibility: [documentVisibility_Input]
}

type bulkRecipientsUpdateResponse {
  signer: signer
}

type bulkRecipientsSummaryResponse {
  \\"A complex type containing information about the bulk recipients in the response.\\"
  bulkRecipients: [bulkRecipient]
  \\"The number of items returned in this response.\\"
  bulkRecipientsCount: String
  \\"Contains a URI for an endpoint that allows you to easily retrieve bulk recipient information.\\"
  bulkRecipientsUri: String
  \\"Array or errors.\\"
  errorDetails: [errorDetails]
}

input bulkRecipientsRequest_Input {
  \\"A complex type containing information about the bulk recipients in the request.\\"
  bulkRecipients: [bulkRecipient_Input]
}

input bulkRecipient_Input {
  \\"If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \\\\n\\\\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\\\\n\\\\nIf blank, but the signer \`accessCode\` property is set in the envelope, then that value is used.\\\\n\\\\nIf blank and the signer \`accessCode\` property is not set, then the access code is not required.\\"
  accessCode: String
  \\"Specifies the recipient's email address. \\\\n\\\\nMaximum length: 100 characters.\\"
  email: String
  \\"Array or errors.\\"
  errorDetails: [errorDetails_Input]
  \\"Specifies the authentication check used for the signer. If blank then no authentication check is required for the signer. Only one value can be used in this field.\\\\n\\\\nThe acceptable values are:\\\\n\\\\n* KBA: Enables the normal ID check authentication set up for your account.\\\\n* Phone: Enables phone authentication.\\\\n* SMS: Enables SMS authentication.\\"
  identification: String
  \\"Specifies the recipient's name. \\\\n\\\\nMaximum length: 50 characters.\\"
  name: String
  \\"A note sent to the recipient in the signing email.\\\\nThis note is unique to this recipient.\\\\nIn the user interface,\\\\nit appears near the upper left corner\\\\nof the document\\\\non the signing screen.\\\\n\\\\nMaximum Length: 1000 characters.\\"
  note: String
  \\"This is only used if the Identification field value is Phone or SMS. The value for this field can be a valid telephone number or, if Phone, usersupplied (SMS authentication cannot use a user supplied number). Parenthesis and dashes can be used in the telephone number.\\\\n\\\\nIf \`usersupplied\` is used, the signer supplies his or her own telephone number.\\"
  phoneNumber: String
  recipientSignatureProviderInfo: [bulkRecipientSignatureProvider_Input]
  rowNumber: String
  \\"Specifies values used to populate recipient tabs with information. This allows each bulk recipient signer to have different values for their associated tabs. Any number of \`tabLabel\` columns can be added to the bulk recipient file.\\\\n\\\\nThe information used in the bulk recipient file header must be the same as the \`tabLabel\` for the tab.\\\\n\\\\nThe values entered in this column are automatically inserted into the corresponding tab for the recipient in the same row.\\\\n\\\\nNote that this option cannot be used for tabs that do not have data or that are automatically populated data such as Signature, Full Name, Email Address, Company, Title, and Date Signed tabs.\\"
  tabLabels: [bulkRecipientSignatureProvider_Input]
}

input bulkRecipientSignatureProvider_Input {
  name: String
  \\"Specifies the value of the tab.\\"
  value: String
}

\\"Embedding Envelope views\\"
type EnvelopeViews {
  \\"The view URL to be navigated to.\\"
  url: String
}

input correctViewRequest_Input {
  \\"The url used after correct/send view session has ended. DocuSign redirects to the url and includes an event parameter that can be used by your app. The event parameters returned are: \\\\n\\\\n* send (user corrected and sent the envelope)\\\\n* save (user saved the envelope)\\\\n* cancel (user canceled the transaction.)\\\\n* error (there was an error when performing the correct or send)\\\\n* sessionEnd (the session ended before the user completed a different action)\\"
  returnUrl: String
  \\"Specifies whether the window is displayed with or without dressing.\\"
  suppressNavigation: String
}

\\"The request body for the EnvelopeViews: createSender method.\\"
input returnUrlRequest_Input {
  \\"Your app's return url that the user will be redirected to after sending the envelope or completing the sending/tagging view. Query parameters \`envelopeId\` and \`event\` will be added to the URL. The event parameter values: \\\\n\\\\n* \`Send\` (the user sent the envelope)\\\\n* \`Save\` (the user saved the envelope, it is still a draft)\\\\n* \`Cancel\` (the user canceled the sending transaction)\\\\n* \`Error\` (there was an error during the send operation)\\\\n* \`SessionEnd\` (the sending session ended before the user completed a different action)\\"
  returnUrl: String
}

input recipientViewRequest_Input {
  \\"A unique identifier of the authentication event executed by the client application.\\"
  assertionId: String
  \\"A sender generated value that indicates the date/time that the signer was authenticated.\\"
  authenticationInstant: String
  \\"Required. Choose a value that most closely matches the technique your application used to authenticate the recipient / signer. \\\\n\\\\nChoose a value from this list: \\\\n* Biometric \\\\n* Email\\\\n* HTTPBasicAuth\\\\n* Kerberos\\\\n* KnowledgeBasedAuth\\\\n* None\\\\n* PaperDocuments\\\\n* Password\\\\n* RSASecureID\\\\n* SingleSignOn_CASiteminder\\\\n* SingleSignOn_InfoCard\\\\n* SingleSignOn_MicrosoftActiveDirectory\\\\n* SingleSignOn_Other\\\\n* SingleSignOn_Passport\\\\n* SingleSignOn_SAML\\\\n* Smartcard\\\\n* SSLMutualAuth\\\\n* X509Certificate\\\\n\\\\nThis information is included in the Certificate of Completion.\\"
  authenticationMethod: String
  \\"A sender created value. If provided, the recipient is treated as an embedded (captive) recipient or signer.\\\\n\\\\nUse your application's client ID (user ID) for the recipient. Doing so enables the details of your application's authentication of the recipient to be connected to the recipient's signature if the signature is disputed or repudiated.\\\\n\\\\nMaximum length: 100 characters.\\"
  clientUserId: String
  \\"Specifies the email of the recipient. You can use either email and userName or userId to identify the recipient.\\"
  email: String
  \\"Only used if pingUrl is specified. This is the interval, in seconds, between pings on the pingUrl.  The default is 300 seconds. Valid values are 60-1200 seconds.\\"
  pingFrequency: String
  \\"A client Url to be pinged by the DocuSign Signing experience to indicate to the client that Signing is active. An HTTP Get is executed against the client. The response from the client is ignored. The intent is for the client to reset it's session timer when the request is received.\\"
  pingUrl: String
  \\"Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.\\"
  recipientId: String
  \\"The URL that the recipient is redirected to\\\\nafter the signing session has ended.\\\\nDocuSign redirects to the URL\\\\nand includes an \`event\` query parameter\\\\nthat can be used by your application.\\\\n\\\\nPossible \`event\` parameter values: \\\\n\\\\n* \`access_code_failed\`<br>\\\\n  Recipient used incorrect access code.\\\\n* \`cancel\`<br>\\\\n  Recipient canceled the signing operation,\\\\n  possibly by using the Finish Later option.\\\\n* \`decline\`<br>\\\\n  Recipient declined to sign.\\\\n* \`exception\`<br>\\\\n  A system error occurred during signing.\\\\n* \`fax_pending\`<br>\\\\n  Recipient has a fax pending.\\\\n* \`id_check_failed\`<br>\\\\n  Recipient failed an ID check.\\\\n* \`session_timeout\`<br>\\\\n  The session timed out.\\\\n  An account can control this timeout using the Signer Session Timeout option.\\\\n* \`signing_complete\`<br>\\\\n  Recipient completed the signing ceremony.\\\\n* \`ttl_expired\`<br>\\\\n  The Time To Live token for the envelope has expired.\\\\n  After being successfully invoked, these tokens expire\\\\n  after 5 minutes\\\\n  or if the envelope is voided.\\\\n* \`viewing_complete\`<br>\\\\n  The recipient completed viewing an envelope\\\\n  that is in a read-only/terminal state\\\\n  such as completed, declined, or voided.\\\\n\\\\nBe sure to include \`https://\` in the URL\\\\nor the redirect may fail\\\\non some browsers.\\"
  returnUrl: String
  \\"The domain in which the user authenticated.\\"
  securityDomain: String
  \\"Specifies the user ID of the recipient. You can use with user ID or email and user name to identify the recipient. \\\\n\\\\nIf userId is used and a clientUserId is provided, the value in the \`userId\` property must match a recipientId (which can be retrieved with a GET recipients call) for the envelope. \\\\n\\\\nIf a userId is used and a clientUserId is not provided, the userId must match the user ID of the authenticating user.\\"
  userId: String
  \\"Specifies the username of the recipient. You can use either email and userName or userId to identify the recipient.\\"
  userName: String
  xFrameOptions: String
  xFrameOptionsAllowFromUrl: String
}

input foldersRequest_Input {
  envelopeIds: [String]
  \\"The folder ID the envelope is being moved from.\\"
  fromFolderId: String
}

\\"Group information\\"
input Groups_Input {
  \\"The last position in the result set.\\"
  endPosition: String
  \\"A collection group objects containing information about the groups returned.\\"
  groups: [group_Input]
  \\"The URI for the next chunk of records based on the search request. It is \`null\` if this is the last set of results for the search.\\"
  nextUri: String
  \\"The URI for the prior chunk of records based on the search request. It is \`null\` if this is the first set of results for the search.\\"
  previousUri: String
  \\"The number of results returned in this response.\\"
  resultSetSize: String
  \\"Starting position of the current result set.\\"
  startPosition: String
  \\"The total number of items in the search's result set. It will always be greater than or equal to the value of the \`resultSetSize\` field.\\"
  totalSetSize: String
}

input userInfoList_Input {
  users: [userInfo_Input]
}

input AccountPermissionProfiles_Input {
  modifiedByUsername: String
  modifiedDateTime: String
  permissionProfileId: String
  permissionProfileName: String
  settings: accountRoleSettings_Input
  userCount: String
  users: [Users_Input]
}

input accountRoleSettings_Input {
  allowAccountManagement: String
  allowAccountManagementMetadata: settingsMetadata_Input
  allowApiAccess: String
  allowApiAccessMetadata: settingsMetadata_Input
  allowApiAccessToAccount: String
  allowApiAccessToAccountMetadata: settingsMetadata_Input
  allowApiSendingOnBehalfOfOthers: String
  allowApiSendingOnBehalfOfOthersMetadata: settingsMetadata_Input
  allowApiSequentialSigning: String
  allowApiSequentialSigningMetadata: settingsMetadata_Input
  allowBulkSending: String
  allowBulkSendingMetadata: settingsMetadata_Input
  allowDocuSignDesktopClient: String
  allowDocuSignDesktopClientMetadata: settingsMetadata_Input
  allowEnvelopeSending: String
  allowEnvelopeSendingMetadata: settingsMetadata_Input
  allowSendersToSetRecipientEmailLanguage: String
  allowSendersToSetRecipientEmailLanguageMetadata: settingsMetadata_Input
  allowSignerAttachments: String
  allowSignerAttachmentsMetadata: settingsMetadata_Input
  allowSupplementalDocuments: String
  allowSupplementalDocumentsMetadata: settingsMetadata_Input
  allowTaggingInSendAndCorrect: String
  allowTaggingInSendAndCorrectMetadata: settingsMetadata_Input
  allowVaulting: String
  allowVaultingMetadata: settingsMetadata_Input
  allowWetSigningOverride: String
  allowWetSigningOverrideMetadata: settingsMetadata_Input
  allowedAddressBookAccess: String
  allowedAddressBookAccessMetadata: settingsMetadata_Input
  allowedTemplateAccess: String
  allowedTemplateAccessMetadata: settingsMetadata_Input
  allowedToBeEnvelopeTransferRecipient: String
  allowedToBeEnvelopeTransferRecipientMetadata: settingsMetadata_Input
  canCreateWorkspaces: String
  canCreateWorkspacesMetadata: settingsMetadata_Input
  disableDocumentUpload: String
  disableDocumentUploadMetadata: settingsMetadata_Input
  disableOtherActions: String
  disableOtherActionsMetadata: settingsMetadata_Input
  enableApiRequestLogging: String
  enableApiRequestLoggingMetadata: settingsMetadata_Input
  enableRecipientViewingNotifications: String
  enableRecipientViewingNotificationsMetadata: settingsMetadata_Input
  enableSequentialSigningInterface: String
  enableSequentialSigningInterfaceMetadata: settingsMetadata_Input
  enableTransactionPointIntegration: String
  enableTransactionPointIntegrationMetadata: settingsMetadata_Input
  powerFormRole: String
  powerFormRoleMetadata: settingsMetadata_Input
  receiveCompletedSelfSignedDocumentsAsEmailLinks: String
  receiveCompletedSelfSignedDocumentsAsEmailLinksMetadata: settingsMetadata_Input
  supplementalDocumentsMustAccept: String
  supplementalDocumentsMustAcceptMetadata: settingsMetadata_Input
  supplementalDocumentsMustRead: String
  supplementalDocumentsMustReadMetadata: settingsMetadata_Input
  supplementalDocumentsMustView: String
  supplementalDocumentsMustViewMetadata: settingsMetadata_Input
  useNewDocuSignExperienceInterface: String
  useNewDocuSignExperienceInterfaceMetadata: settingsMetadata_Input
  useNewSendingInterface: String
  useNewSendingInterfaceMetadata: settingsMetadata_Input
  vaultingMode: String
  vaultingModeMetadata: settingsMetadata_Input
}

input powerFormsRequest_Input {
  powerForms: [PowerForms_Input]
}

input PowerForms_Input {
  \\"Indicates the date and time the item was created.\\"
  createdDateTime: String
  \\"Specifies the email body of the message sent to the recipient. \\\\n\\\\nMaximum length: 10000 characters.\\"
  emailBody: String
  \\"Specifies the subject of the email that is sent to all recipients.\\\\n\\\\nSee [ML:Template Email Subject Merge Fields] for information about adding merge field information to the email subject.\\"
  emailSubject: String
  envelopes: [Envelopes_Input]
  errorDetails: errorDetails_Input
  instructions: String
  isActive: String
  lastUsed: String
  limitUseInterval: String
  limitUseIntervalEnabled: String
  limitUseIntervalUnits: String
  maxUseEnabled: String
  name: String
  powerFormId: String
  powerFormUrl: String
  \\"An array of powerform recipients.\\"
  recipients: [powerFormRecipient_Input]
  senderName: String
  senderUserId: String
  signingMode: String
  \\"The unique identifier of the template. If this is not provided, DocuSign will generate a value.\\"
  templateId: String
  templateName: String
  timesUsed: String
  uri: String
  usesRemaining: String
}

input powerFormRecipient_Input {
  \\"If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \\\\n\\\\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\\\\n\\\\nIf blank, but the signer \`accessCode\` property is set in the envelope, then that value is used.\\\\n\\\\nIf blank and the signer \`accessCode\` property is not set, then the access code is not required.\\"
  accessCode: String
  accessCodeLocked: String
  accessCodeRequired: String
  email: String
  emailLocked: String
  \\"Specifies authentication check by name. The names used here must be the same as the authentication type names used by the account (these name can also be found in the web console sending interface in the Identify list for a recipient,) This overrides any default authentication setting.\\\\n\\\\n*Example*: Your account has ID Check and SMS Authentication available and in the web console Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check in an envelope, the idCheckConfigurationName should be 'ID Check '. If you wanted to use SMS, it would be 'SMS Auth $' and you would need to add you would need to add phone number information to the \`smsAuthentication\` node.\\"
  idCheckConfigurationName: String
  idCheckRequired: String
  name: String
  recipientType: String
  \\"Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.\\"
  roleName: String
  \\"Specifies the routing order of the recipient in the envelope.\\"
  routingOrder: String
  templateRequiresIdLookup: String
  userNameLocked: String
}

\\"Contains account settings information.\\"
input accountSettingsInformation_Input {
  \\"The list of\\\\n[account settings][accountsettings]\\\\nthat determine\\\\nthe features available for the account.\\\\nNote that some features are determined\\\\nby the plan used to create the account and cannot be overridden.\\\\n\\\\n[accountsettings]: /esign/restapi/Accounts/Accounts/create/#account-settings\\"
  accountSettings: [nameValue_Input]
}

input ENoteConfigurations_Input {
  connectConfigured: String
  eNoteConfigured: String
  organization: String
  password: String
  userName: String
}

input AccountPasswordRules_Input {
  expirePassword: String
  expirePasswordDays: String
  expirePasswordDaysMetadata: accountPasswordExpirePasswordDays_Input
  lockoutDurationMinutes: String
  lockoutDurationMinutesMetadata: accountPasswordLockoutDurationMinutes_Input
  lockoutDurationType: String
  lockoutDurationTypeMetadata: accountPasswordLockoutDurationType_Input
  minimumPasswordAgeDays: String
  minimumPasswordAgeDaysMetadata: accountPasswordMinimumPasswordAgeDays_Input
  minimumPasswordLength: String
  minimumPasswordLengthMetadata: accountMinimumPasswordLength_Input
  passwordIncludeDigit: String
  passwordIncludeDigitOrSpecialCharacter: String
  passwordIncludeLowerCase: String
  passwordIncludeSpecialCharacter: String
  passwordIncludeUpperCase: String
  passwordStrengthType: String
  passwordStrengthTypeMetadata: accountPasswordStrengthType_Input
  questionsRequired: String
  questionsRequiredMetadata: accountPasswordQuestionsRequired_Input
}

input accountPasswordExpirePasswordDays_Input {
  maximumDays: String
  minimumDays: String
}

input accountPasswordLockoutDurationMinutes_Input {
  maximumMinutes: String
  minimumMinutes: String
}

input accountPasswordLockoutDurationType_Input {
  options: [String]
}

input accountPasswordMinimumPasswordAgeDays_Input {
  maximumAge: String
  minimumAge: String
}

input accountMinimumPasswordLength_Input {
  maximumLength: String
  minimumLength: String
}

input accountPasswordStrengthType_Input {
  options: [accountPasswordStrengthTypeOption_Input]
}

input accountPasswordStrengthTypeOption_Input {
  minimumLength: String
  name: String
  passwordIncludeDigit: String
  passwordIncludeDigitOrSpecialCharacter: String
  passwordIncludeLowerCase: String
  passwordIncludeSpecialCharacter: String
  passwordIncludeUpperCase: String
}

input accountPasswordQuestionsRequired_Input {
  maximumQuestions: String
  minimumQuestions: String
}

input AccountTabSettings_Input {
  allowTabOrder: String
  allowTabOrderMetadata: settingsMetadata_Input
  approveDeclineTabsEnabled: String
  approveDeclineTabsMetadata: settingsMetadata_Input
  calculatedFieldsEnabled: String
  calculatedFieldsMetadata: settingsMetadata_Input
  checkboxTabsEnabled: String
  checkboxTabsMetadata: settingsMetadata_Input
  dataFieldRegexEnabled: String
  dataFieldRegexMetadata: settingsMetadata_Input
  dataFieldSizeEnabled: String
  dataFieldSizeMetadata: settingsMetadata_Input
  firstLastEmailTabsEnabled: String
  firstLastEmailTabsMetadata: settingsMetadata_Input
  listTabsEnabled: String
  listTabsMetadata: settingsMetadata_Input
  noteTabsEnabled: String
  noteTabsMetadata: settingsMetadata_Input
  radioTabsEnabled: String
  radioTabsMetadata: settingsMetadata_Input
  savingCustomTabsEnabled: String
  savingCustomTabsMetadata: settingsMetadata_Input
  senderToChangeTabAssignmentsEnabled: String
  senderToChangeTabAssignmentsMetadata: settingsMetadata_Input
  sharedCustomTabsEnabled: String
  sharedCustomTabsMetadata: settingsMetadata_Input
  tabDataLabelEnabled: String
  tabDataLabelMetadata: settingsMetadata_Input
  tabLocationEnabled: String
  tabLocationMetadata: settingsMetadata_Input
  tabLockingEnabled: String
  tabLockingMetadata: settingsMetadata_Input
  tabScaleEnabled: String
  tabScaleMetadata: settingsMetadata_Input
  tabTextFormattingEnabled: String
  tabTextFormattingMetadata: settingsMetadata_Input
  textTabsEnabled: String
  textTabsMetadata: settingsMetadata_Input
}

\\"Contains shared access information.\\"
input accountSharedAccess_Input {
  \\"The account ID associated with the envelope.\\"
  accountId: String
  \\"The last position in the result set.\\"
  endPosition: String
  errorDetails: errorDetails_Input
  \\"The URI for the next chunk of records based on the search request. It is \`null\` if this is the last set of results for the search.\\"
  nextUri: String
  \\"The URI for the prior chunk of records based on the search request. It is \`null\` if this is the first set of results for the search.\\"
  previousUri: String
  \\"The number of results returned in this response.\\"
  resultSetSize: String
  \\"A complex type containing the shared access information to an envelope for the users specified in the request.\\"
  sharedAccess: [memberSharedItems_Input]
  \\"Starting position of the current result set.\\"
  startPosition: String
  \\"The total number of items in the search's result set. It will always be greater than or equal to the value of the \`resultSetSize\` field.\\"
  totalSetSize: String
}

input memberSharedItems_Input {
  envelopes: [sharedItem_Input]
  errorDetails: errorDetails_Input
  templates: [templateSharedItem_Input]
  user: userInfo_Input
}

input sharedItem_Input {
  errorDetails: errorDetails_Input
  \\"When set to **true**, this custom tab is shared.\\"
  shared: String
  user: userInfo_Input
}

input templateSharedItem_Input {
  errorDetails: errorDetails_Input
  owner: userInfo_Input
  \\"When set to **true**, this custom tab is shared.\\"
  shared: String
  sharedGroups: [memberGroupSharedItem_Input]
  sharedUsers: [sharedItem_Input]
  \\"The unique identifier of the template. If this is not provided, DocuSign will generate a value.\\"
  templateId: String
  templateName: String
}

input memberGroupSharedItem_Input {
  errorDetails: errorDetails_Input
  group: group_Input
  \\"When set to **true**, this custom tab is shared.\\"
  shared: String
}

input signingGroupInformation_Input {
  \\"A collection group objects containing information about the groups returned.\\"
  groups: [SigningGroups_Input]
}

\\"Signing groups\\"
input SigningGroups_Input {
  \\"The UTC DateTime when the workspace user authorization was created.\\"
  created: String
  createdBy: String
  errorDetails: errorDetails_Input
  groupEmail: String
  \\"The name of the group.\\"
  groupName: String
  \\"The group type.\\"
  groupType: String
  modified: String
  modifiedBy: String
  \\"When set to **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab ( instead of adopting a signature/initial style or only drawing a signature/initial once).\\"
  signingGroupId: String
  users: [signingGroupUser_Input]
}

input signingGroupUser_Input {
  email: String
  errorDetails: errorDetails_Input
  \\"The name of the group member. \\\\n\\\\nMaximum Length: 100 characters.\\"
  userName: String
}

\\"Signing groups' users\\"
input SigningGroupUsers_Input {
  users: [signingGroupUser_Input]
}

\\"Custom tabs\\"
input CustomTabs_Input {
  \\"An optional string that is used to auto-match tabs to strings located in the documents of an envelope.\\"
  anchor: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.\\\\n-->\\"
  anchorCaseSensitive: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nSpecifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.\\\\n-->\\"
  anchorHorizontalAlignment: String
  \\"When set to **true**, this tab is ignored if anchorString is not found in the document.\\"
  anchorIgnoreIfNotPresent: String
  \\"Reserved for DocuSign.\\\\n<!--\\\\nWhen set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.\\\\n-->\\"
  anchorMatchWholeWord: String
  \\"Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.\\"
  anchorUnits: String
  \\"Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorXOffset: String
  \\"Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.\\"
  anchorYOffset: String
  \\"When set to **true**, the information in the tab is bold.\\"
  bold: String
  \\"When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\\\\n\\\\nWhen an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.\\\\n\\\\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.\\"
  concealValueOnDocument: String
  \\"The user name of the DocuSign user who created this object.\\"
  createdByDisplayName: String
  \\"The userId of the DocuSign user who created this object.\\"
  createdByUserId: String
  \\"The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.\\"
  customTabId: String
  \\"When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.\\"
  disableAutoSize: String
  \\"When set to **true**, the custom tab is editable. Otherwise the custom tab cannot be modified.\\"
  editable: String
  \\"The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.\\"
  font: String
  \\"The font color used for the information in the tab.\\\\n\\\\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.\\"
  fontColor: String
  \\"The font size used for the information in the tab.\\\\n\\\\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.\\"
  fontSize: String
  \\"Height of the tab in pixels.\\"
  height: String
  \\"When set to **true**, the tab is included in e-mails related to the envelope on which it exists. This applies to only specific tabs.\\"
  includedInEmail: String
  \\"The original value of the tab.\\"
  initialValue: String
  \\"When set to **true**, the information in the tab is italic.\\"
  italic: String
  \\"If the tab is a list, this represents the values that are possible for the tab.\\"
  items: [String]
  \\"The UTC DateTime this object was last modified. This is in ISO8601 format.\\"
  lastModified: String
  \\"The User Name of the DocuSign user who last modified this object.\\"
  lastModifiedByDisplayName: String
  \\"The userId of the DocuSign user who last modified this object.\\"
  lastModifiedByUserId: String
  \\"When set to **true**, the signer cannot change the data of the custom tab.\\"
  locked: String
  \\"The maximum number of entry characters supported by the custom tab.\\"
  maximumLength: String
  mergeField: mergeField_Input
  name: String
  \\"When set to **true**, the signer is required to fill out this tab\\"
  required: String
  scaleValue: String
  \\"When set to **true**, this custom tab is shared.\\"
  shared: String
  stampType: String
  stampTypeMetadata: propertyMetadata_Input
  \\"The label string associated with the tab.\\\\nThe string may be the empty string.\\\\nIf no value is provided, the tab type is used as the value.\\\\n\\\\nMaximum of 500 characters.\\"
  tabLabel: String
  \\"The type of this tab. Values are: Approve, CheckBox, Company, Date, DateSigned,\\\\tDecline, Email,\\\\tEmailAddress, EnvelopeId, FirstName, Formula, FullName,\\\\tInitialHere, InitialHereOptional, LastName, List, Note, Number,\\\\tRadio, SignerAttachment, SignHere, SignHereOptional, Ssn, Text, Title, Zip5, or Zip5Dash4.\\"
  type: String
  \\"When set to **true**, the information in the tab is underlined.\\"
  underline: String
  \\"The message displayed if the custom tab fails input validation (either custom of embedded).\\"
  validationMessage: String
  \\"A regular expressionn used to validate input for the tab.\\"
  validationPattern: String
  \\"Width of the tab in pixels.\\"
  width: String
}

\\"Template management\\"
input Templates_Input {
  \\"When set to **true**, Document Markup is enabled for envelope. Account must have Document Markup enabled to use this\\"
  allowMarkup: String
  \\"When set to **true**, the recipient can redirect an envelope to a more appropriate recipient.\\"
  allowReassign: String
  \\"When set to **true**, the envelope is queued for processing and the value of the \`status\` property is set to 'Processing'. Additionally, get status calls return 'Processing' until completed.\\"
  asynchronous: String
  attachmentsUri: String
  \\"Specifies the Authoritative copy feature. If set to true the Authoritative copy feature is enabled.\\"
  authoritativeCopy: String
  \\"Specifies whether auto navigation is set for the recipient.\\"
  autoNavigation: String
  \\"The unique identifier of a brand.\\"
  brandId: String
  brandLock: String
  \\"Retrieves a URI for an endpoint that allows you to easily retrieve certificate information.\\"
  certificateUri: String
  \\"Specifies the date and time this item was completed.\\"
  completedDateTime: String
  \\"Indicates the date and time the item was created.\\"
  createdDateTime: String
  customFields: AccountCustomFields_Input
  \\"Contains a URI for an endpoint that you can use to retrieve the custom fields.\\"
  customFieldsUri: String
  \\"The date and time the recipient declined the document.\\"
  declinedDateTime: String
  \\"Specifies the data and time the item was deleted.\\"
  deletedDateTime: String
  \\"Reserved: For DocuSign use only.\\"
  deliveredDateTime: String
  \\"Complex element contains the details on the documents in the envelope.\\"
  documents: [document_Input]
  documentsCombinedUri: String
  \\"Contains a URI for an endpoint that you can use to retrieve the documents.\\"
  documentsUri: String
  emailBlurb: String
  emailSettings: EnvelopeEmailSettings_Input
  \\"Specifies the subject of the email that is sent to all recipients.\\\\n\\\\nSee [ML:Template Email Subject Merge Fields] for information about adding merge field information to the email subject.\\"
  emailSubject: String
  \\"When set to **true**, the signer is allowed to print the document and sign it on paper.\\"
  enableWetSign: String
  \\"When set to **true**, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.\\\\n\\\\nYour account must have Document Visibility enabled to use this.\\"
  enforceSignerVisibility: String
  \\"The envelope ID of the envelope status that failed to post.\\"
  envelopeId: String
  \\"When set to **true**, Envelope ID Stamping is enabled.\\"
  envelopeIdStamping: String
  envelopeTemplateDefinition: envelopeTemplateDefinition_Input
  \\"Contains a URI for an endpoint that you can use to retrieve the envelope or envelopes.\\"
  envelopeUri: String
  initialSentDateTime: String
  \\"When set to **true**, indicates that this module is enabled on the account.\\"
  is21CFRPart11: String
  isSignatureProviderEnvelope: String
  \\"The date and time the item was last modified.\\"
  lastModifiedDateTime: String
  lockInformation: EnvelopeLocks_Input
  \\"When set to **true**, prevents senders from changing the contents of \`emailBlurb\` and \`emailSubject\` properties for the envelope. \\\\n\\\\nAdditionally, this prevents users from making changes to the contents of \`emailBlurb\` and \`emailSubject\` properties when correcting envelopes. \\\\n\\\\nHowever, if the \`messageLock\` node is set to true**** and the \`emailSubject\` property is empty, senders and correctors are able to add a subject to the envelope.\\"
  messageLock: String
  notification: notification_Input
  \\"Contains a URI for an endpoint that you can use to retrieve the notifications.\\"
  notificationUri: String
  purgeState: String
  recipients: EnvelopeRecipients_Input
  \\"When set to **true**, prevents senders from changing, correcting, or deleting the recipient information for the envelope.\\"
  recipientsLock: String
  \\"Contains a URI for an endpoint that you can use to retrieve the recipients.\\"
  recipientsUri: String
  \\"The date and time the envelope was sent.\\"
  sentDateTime: String
  \\"Specifies the physical location where the signing takes place. It can have two enumeration values; InPerson and Online. The default value is Online.\\"
  signingLocation: String
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"The data and time the status changed.\\"
  statusChangedDateTime: String
  \\"Contains a URI for an endpoint which you can use to retrieve the templates.\\"
  templatesUri: String
  \\"Used to identify an envelope. The id is a sender-generated value and is valid in the DocuSign system for 7 days. It is recommended that a transaction ID is used for offline signing to ensure that an envelope is not sent multiple times. The \`transactionId\` property can be used determine an envelope's status (i.e. was it created or not) in cases where the internet connection was lost before the envelope status was returned.\\"
  transactionId: String
  \\"When set to **true**, the disclosure is shown to recipients in accordance with the account's Electronic Record and Signature Disclosure frequency setting. When set to **false**, the Electronic Record and Signature Disclosure is not shown to any envelope recipients. \\\\n\\\\nIf the \`useDisclosure\` property is not set, then the account's normal disclosure setting is used and the value of the \`useDisclosure\` property is not returned in responses when getting envelope information.\\"
  useDisclosure: String
  \\"The date and time the envelope or template was voided.\\"
  voidedDateTime: String
  \\"The reason the envelope or template was voided.\\"
  voidedReason: String
}

\\"A complex element containing the following information:\\\\n\\\\ntemplateId: Unique identifier of the template. If this is not provided, DocuSign will generate a value. \\\\n\\\\nname: Name of the template. Maximum length: 100 characters.\\\\n\\\\nshared: When set to **true**, the template is shared with the Everyone group in the account. If false, the template is only shared with the Administrator group.\\\\n\\\\npassword: Password, if the template is locked.\\\\n\\\\ndescription: Description of the template. Maximum Length: 500 characters.\\\\n\\\\npageCount: Number of document pages in the template.\\\\n\\\\nfolderName: The name of the folder the template is located in.\\\\n\\\\nfolderId: The ID for the folder.\\\\n\\\\nowner: The userName, email, userId, userType, and userStatus for the template owner.\\"
input envelopeTemplateDefinition_Input {
  \\"A sender-defined description of the line item.\\"
  description: String
  \\"The ID for the folder.\\"
  folderId: String
  \\"The name of the folder in which the template is located.\\"
  folderName: String
  \\"The URI of the folder.\\"
  folderUri: String
  \\"Utc date and time the comment was last updated (can only be done by creator.)\\"
  lastModified: String
  lastModifiedBy: userInfo_Input
  name: String
  \\"The user's new password.\\"
  newPassword: String
  owner: userInfo_Input
  \\"An integer value specifying the number of document pages in the template. Omit this property if not submitting a page count.\\"
  pageCount: Int
  parentFolderUri: String
  password: String
  \\"When set to **true**, this custom tab is shared.\\"
  shared: String
  \\"The unique identifier of the template. If this is not provided, DocuSign will generate a value.\\"
  templateId: String
  uri: String
}

input templateNotificationRequest_Input {
  expirations: expirations_Input
  password: String
  reminders: reminders_Input
  \\"When set to **true**, the account default notification settings are used for the envelope.\\"
  useAccountDefaults: String
}

input templateRecipients_Input {
  \\"A complex type defining the management and access rights of a recipient assigned assigned as an agent on the document.\\"
  agents: [agent_Input]
  \\"A complex type containing information about recipients who should receive a copy of the envelope, but does not need to sign it.\\"
  carbonCopies: [carbonCopy_Input]
  \\"A complex type containing information on a recipient the must receive the completed documents for the envelope to be completed, but the recipient does not need to sign, initial, date, or add information to any of the documents.\\"
  certifiedDeliveries: [certifiedDelivery_Input]
  currentRoutingOrder: String
  editors: [editor_Input]
  errorDetails: errorDetails_Input
  \\"Specifies a signer that is in the same physical location as a DocuSign user who will act as a Signing Host for the transaction. The recipient added is the Signing Host and new separate Signer Name field appears after Sign in person is selected.\\"
  inPersonSigners: [inPersonSigner_Input]
  \\"Identifies a recipient that can, but is not required to, add name and email information for recipients at the same or subsequent level in the routing order (until subsequent Agents, Editors or Intermediaries recipient types are added).\\"
  intermediaries: [agent_Input]
  \\"The list of recipient event statuses that will trigger Connect to send updates to the url. It can be a two-part list with:\\\\n\\\\n* recipientEventStatusCode - The recipient status, this can be Sent, Delivered, Completed, Declined, AuthenticationFailed, and AutoResponded.\\\\n* includeDocuments - When set to **true**, the envelope time zone information is included in the message.\\"
  recipientCount: String
  \\"A complex type containing information about the Signer recipient.\\"
  signers: [signer_Input]
}

type newUsersSummary {
  newUsers: [newUser]
}

type newUser {
  \\"Contains a token that can be used for authentication in API calls instead of using the user name and password.\\"
  apiPassword: String
  \\"Indicates the date and time the item was created.\\"
  createdDateTime: String
  email: String
  errorDetails: errorDetails
  permissionProfileId: String
  permissionProfileName: String
  uri: String
  \\"Specifies the user ID for the new user.\\"
  userId: String
  userName: String
  userStatus: String
}

input newUsersDefinition_Input {
  newUsers: [Users_Input]
}

input userInformationList_Input {
  \\"The last position in the result set.\\"
  endPosition: String
  \\"The URI for the next chunk of records based on the search request. It is \`null\` if this is the last set of results for the search.\\"
  nextUri: String
  \\"The URI for the prior chunk of records based on the search request. It is \`null\` if this is the first set of results for the search.\\"
  previousUri: String
  \\"The number of results returned in this response.\\"
  resultSetSize: String
  \\"Starting position of the current result set.\\"
  startPosition: String
  \\"The total number of items in the search's result set. It will always be greater than or equal to the value of the \`resultSetSize\` field.\\"
  totalSetSize: String
  users: [Users_Input]
}

\\"Cloud storage providers\\"
input CloudStorageProviders_Input {
  \\"An Array containing the storage providers associated with the user.\\"
  storageProviders: [cloudStorageProvider_Input]
}

input cloudStorageProvider_Input {
  \\"The authentication URL used for the cloud storage provider. This information is only included in the response if the user has not passed authentication for the cloud storage provider. If the redirectUrl query string is provided, the returnUrl is appended to the authenticationUrl.\\"
  authenticationUrl: String
  errorDetails: errorDetails_Input
  \\"The URL the user is redirected to after the cloud storage provider authenticates the user. Using this will append the redirectUrl to the authenticationUrl.\\\\n\\\\nThe redirectUrl is restricted to URLs in the docusign.com or docusign.net domains.\\"
  redirectUrl: String
  \\"The service name for the cloud storage provider.\\"
  service: String
  \\"The DocuSign generated ID for the cloud storage provider\\"
  serviceId: String
}

\\"Users' custom settings\\"
input UserCustomSettings_Input {
  \\"The name/value pair information for the user custom setting.\\"
  customSettings: [nameValue_Input]
}

\\"Users' profiles\\"
input UserProfiles_Input {
  address: addressInformation_v2_Input
  \\"These properties cannot be modified in the PUT. \\\\n\\\\nIndicates the authentication methods used by the user.\\"
  authenticationMethods: [authenticationMethod_Input]
  \\"The name of the user's Company.\\"
  companyName: String
  \\"When set to **true**, the user's company and title information are shown on the ID card.\\"
  displayOrganizationInfo: String
  \\"When set to **true**, the user's Address and Phone number are shown on the ID card.\\"
  displayPersonalInfo: String
  \\"When set to **true**, the user's ID card can be viewed from signed documents and envelope history.\\"
  displayProfile: String
  \\"When set to **true**, the user's usage information is shown on the ID card.\\"
  displayUsageHistory: String
  profileImageUri: String
  \\"The title of the user.\\"
  title: String
  usageHistory: usageHistory_Input
  userDetails: Users_Input
  userProfileLastModifiedDate: String
}

\\"Contains information about the method used for authentication.\\"
input authenticationMethod_Input {
  \\"Indicates the type of authentication. Valid values are: PhoneAuth, STAN, ISCheck, OFAC, AccessCode, AgeVerify, or SSOAuth.\\"
  authenticationType: String
  \\"The last provider that authenticated the user.\\"
  lastProvider: String
  \\"The data and time the user last used the authentication method.\\"
  lastTimestamp: String
  \\"The number of times the authentication method was used.\\"
  totalCount: Int
}

\\"A complex element consisting of: \\\\n\\\\n* lastSentDateTime - the date and time the user last sent an envelope. \\\\n* lastSignedDateTime - the date and time the user last signed an envelope.\\\\n* sentCount - the number of envelopes the user has sent.\\\\n* signedCount - the number of envelopes the user has signed.\\"
input usageHistory_Input {
  \\"The date and time the user last sent an envelope.\\"
  lastSentDateTime: String
  \\"The date and time the user last signed an envelope.\\"
  lastSignedDateTime: String
  \\"The number of envelopes the user has sent.\\"
  sentCount: Int
  \\"The number of envelopes the user has signed.\\"
  signedCount: Int
}

input userSettingsInformation_Input {
  accountManagementGranular: userAccountManagementGranularInformation_Input
  senderEmailNotifications: senderEmailNotifications_Input
  signerEmailNotifications: signerEmailNotifications_Input
  userSettings: [nameValue_Input]
}

input senderEmailNotifications_Input {
  \\"When set to **true**, the sender receives notification if the signer changes.\\"
  changedSigner: String
  \\"When set to **true**, the sender receives notification if the delivery of the envelope fails.\\"
  deliveryFailed: String
  \\"When set to **true**, the user receives notification that the envelope has been completed.\\"
  envelopeComplete: String
  \\"When set to **true**, the user receives notification if the offline signing failed.\\"
  offlineSigningFailed: String
  \\"When set to **true**, the sender receives notification that the recipient viewed the enveloper.\\"
  recipientViewed: String
  senderEnvelopeDeclined: String
  \\"When set to **true**, the user receives notification if consent is withdrawn.\\"
  withdrawnConsent: String
}

\\"An array of email notifications that specifies the email the user receives when they are a sender. When the specific email notification is set to true, the user receives those types of email notifications from DocuSign. The user inherits the default account sender email notification settings when the user is created.\\"
input signerEmailNotifications_Input {
  \\"When set to **true**, the user receives agent notification emails.\\"
  agentNotification: String
  \\"When set to **true**, the user receives notifications of carbon copy deliveries.\\"
  carbonCopyNotification: String
  \\"When set to **true**, the user receives notifications of certified deliveries.\\"
  certifiedDeliveryNotification: String
  \\"When set to **true**, the user receives notification that document markup has been activated.\\"
  documentMarkupActivation: String
  \\"When set to **true**, the user receives notification that the envelope has been activated.\\"
  envelopeActivation: String
  \\"When set to **true**, the user receives notification that the envelope has been completed.\\"
  envelopeComplete: String
  \\"When set to **true**, the user receives notification that the envelope has been corrected.\\"
  envelopeCorrected: String
  \\"When set to **true**, the user receives notification that the envelope has been declined.\\"
  envelopeDeclined: String
  \\"When set to **true**, the user receives notification that the envelope has been voided.\\"
  envelopeVoided: String
  \\"Reserved:\\"
  faxReceived: String
  \\"When set to **true**, the user receives notification if the offline signing failed.\\"
  offlineSigningFailed: String
  \\"When set to **true**, the user receives notification of document purges.\\"
  purgeDocuments: String
  \\"When set to **true**, the user receives notification that the envelope has been reassigned.\\"
  reassignedSigner: String
  whenSigningGroupMember: String
}

input userSignaturesInformation_Input {
  userSignatures: [UserSignatures_Input]
}

\\"Users' signatures\\"
input UserSignatures_Input {
  \\"The date and time the user adopted their signature.\\"
  adoptedDateTime: String
  \\"Indicates the date and time the item was created.\\"
  createdDateTime: String
  dateStampProperties: dateStampProperties_Input
  errorDetails: errorDetails_Input
  externalID: String
  \\"One of **signature_image** or **initials_image**.\\"
  imageType: String
  initials150ImageId: String
  \\"Contains the URI for an endpoint that you can use to retrieve the initials image.\\"
  initialsImageUri: String
  isDefault: String
  phoneticName: String
  signature150ImageId: String
  \\"The font type for the signature, if the signature is not drawn. The supported font types are:\\\\n\\\\n\\\\\\"7_DocuSign\\\\\\", \\\\\\"1_DocuSign\\\\\\", \\\\\\"6_DocuSign\\\\\\", \\\\\\"8_DocuSign\\\\\\", \\\\\\"3_DocuSign\\\\\\", \\\\\\"Mistral\\\\\\", \\\\\\"4_DocuSign\\\\\\", \\\\\\"2_DocuSign\\\\\\", \\\\\\"5_DocuSign\\\\\\", \\\\\\"Rage Italic\\\\\\"\\"
  signatureFont: String
  \\"Specifies the signature ID associated with the signature name. You can use the signature ID in the URI in place of the signature name, and the value stored in the \`signatureName\` property in the body is used. This allows the use of special characters (such as \\\\\\"&\\\\\\", \\\\\\"<\\\\\\", \\\\\\">\\\\\\") in a the signature name. Note that with each update to signatures, the returned signature ID might change, so the caller will need to trigger off the signature name to get the new signature ID.\\"
  signatureId: String
  \\"Contains the URI for an endpoint that you can use to retrieve the signature image.\\"
  signatureImageUri: String
  \\"The initials associated with the signature.\\"
  signatureInitials: String
  \\"Specifies the user signature name.\\"
  signatureName: String
  signatureType: String
  stampFormat: String
  stampImageUri: String
  stampSizeMM: String
  stampType: String
}

input dateStampProperties_Input {
  dateAreaHeight: String
  dateAreaWidth: String
  dateAreaX: String
  dateAreaY: String
}

input userSignatureDefinition_Input {
  signatureFont: String
  \\"Specifies the signature ID associated with the signature name. You can use the signature ID in the URI in place of the signature name, and the value stored in the \`signatureName\` property in the body is used. This allows the use of special characters (such as \\\\\\"&\\\\\\", \\\\\\"<\\\\\\", \\\\\\">\\\\\\") in a the signature name. Note that with each update to signatures, the returned signature ID might change, so the caller will need to trigger off the signature name to get the new signature ID.\\"
  signatureId: String
  signatureInitials: String
  \\"Specifies the user signature name.\\"
  signatureName: String
}

input consoleViewRequest_Input {
  \\"The envelope ID of the envelope status that failed to post.\\"
  envelopeId: String
  \\"The URL to be redirected to after the console view session has ended.\\"
  returnUrl: String
}

input AccountWatermarks_Input {
  displayAngle: String
  enabled: String
  \\"The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.\\"
  font: String
  \\"The font color used for the information in the tab.\\\\n\\\\nPossible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.\\"
  fontColor: String
  \\"The font size used for the information in the tab.\\\\n\\\\nPossible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.\\"
  fontSize: String
  id: String
  imageBase64: String
  transparency: String
  watermarkText: String
}

input Workspaces_Input {
  billableAccountId: String
  \\"The UTC DateTime when the workspace user authorization was created.\\"
  created: String
  createdByInformation: workspaceUser_Input
  \\"Utc date and time the comment was last updated (can only be done by creator.)\\"
  lastModified: String
  lastModifiedByInformation: workspaceUser_Input
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"The relative URL that may be used to access the workspace.\\"
  workspaceBaseUrl: String
  \\"Text describing the purpose of the workspace.\\"
  workspaceDescription: String
  \\"The id of the workspace, always populated.\\"
  workspaceId: String
  \\"The name of the workspace.\\"
  workspaceName: String
  \\"The relative URI that may be used to access the workspace.\\"
  workspaceUri: String
}

\\"A workspaceUser representing the user. This property is only returned in response to user specific GET call.\\"
input workspaceUser_Input {
  \\"The account ID associated with the envelope.\\"
  accountId: String
  \\"The name of the account that the workspace user belongs to.\\"
  accountName: String
  activeSince: String
  \\"The UTC DateTime when the workspace user was created.\\"
  created: String
  createdById: String
  email: String
  errorDetails: errorDetails_Input
  \\"Utc date and time the comment was last updated (can only be done by creator.)\\"
  lastModified: String
  lastModifiedById: String
  \\"Indicates the envelope status. Valid values are:\\\\n\\\\n* sent - The envelope is sent to the recipients. \\\\n* created - The envelope is saved as a draft and can be modified and sent later.\\"
  status: String
  \\"Type of the user. Valid values: type_owner, type_participant.\\"
  type: String
  \\"The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.\\"
  userId: String
  userName: String
  \\"Specifies the workspace ID GUID.\\"
  workspaceId: String
  \\"The relative URI that may be used to access a workspace user.\\"
  workspaceUserBaseUrl: String
  workspaceUserId: String
}

\\"Provides properties that describe the items contained in a workspace.\\"
input workspaceItemList_Input {
  items: [WorkspaceItems_Input]
}

input WorkspaceItems_Input {
  callerAuthorization: workspaceUserAuthorization_Input
  contentType: String
  \\"The UTC DateTime when the workspace item was created.\\"
  created: String
  createdById: String
  createdByInformation: workspaceUser_Input
  extension: String
  fileSize: String
  fileUri: String
  id: String
  \\"If true, this supersedes need for bit mask permission with workspaceUserAuthorization\\"
  isPublic: String
  \\"Utc date and time the comment was last updated (can only be done by creator.)\\"
  lastModified: String
  \\"Utc date and time the comment was last updated (can only be done by creator)\\"
  lastModifiedById: String
  lastModifiedByInformation: workspaceUser_Input
  \\"A simple string description of the item, such as a file name or a folder name.\\"
  name: String
  pageCount: String
  \\"The ID of the parent folder. This is the GUID of the parent folder, or the special value 'root' for the root folder.\\"
  parentFolderId: String
  parentFolderUri: String
  \\"The type of the workspace item. Valid values are file, folder.\\"
  type: String
  uri: String
}

\\"Provides properties that describe user authorization to a workspace.\\"
input workspaceUserAuthorization_Input {
  canDelete: String
  canMove: String
  canTransact: String
  canView: String
  \\"The UTC DateTime when the workspace user authorization was created.\\"
  created: String
  createdById: String
  errorDetails: errorDetails_Input
  modified: String
  modifiedById: String
  workspaceUserId: String
  workspaceUserInformation: workspaceUser_Input
}

\\"Request logs\\"
input RequestLogs_Input {
  \\"Specifies the maximum number of API requests to log.\\"
  apiRequestLogMaxEntries: String
  \\"Indicates the remaining number of API requests that can be logged.\\"
  apiRequestLogRemainingEntries: String
  \\"When set to **true**, enables API request logging for the user.\\"
  apiRequestLogging: String
}

input userPasswordInformation_Input {
  \\"The user's current password to be changed.\\"
  currentPassword: String
  \\"The user's email address for the associated account.\\"
  email: String
  forgottenPasswordInfo: forgottenPasswordInformation_Input
  \\"The user's new password.\\"
  newPassword: String
}

type oauthAccess {
  \\"Access token information.\\"
  access_token: String
  data: [nameValue]
  expires_in: String
  refresh_token: String
  \\"Must be set to \\\\\\"api\\\\\\".\\"
  scope: String
  token_type: String
}"
`;
