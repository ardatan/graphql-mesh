// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Links on non-object fields should generate the correct schema 1`] = `
"schema @transport(subgraph: "toto", kind: "rest", location: "http://localhost:7777") {
  query: Query
}

directive @httpOperation(subgraph: String, path: String, operationSpecificHeaders: [[String]], httpMethod: HTTPMethod, isBinary: Boolean, requestBaseBody: ObjMap, queryParamArgMap: ObjMap, queryStringOptionsByParam: ObjMap, jsonApiFields: Boolean, queryStringOptions: ObjMap) on FIELD_DEFINITION

directive @resolveRoot(subgraph: String) on FIELD_DEFINITION

directive @linkResolver(subgraph: String, linkResolverMap: ObjMap) on FIELD_DEFINITION

directive @oas_link(subgraph: String, defaultRootType: String, defaultField: String) on FIELD_DEFINITION

directive @transport(subgraph: String, kind: String, location: String, headers: [[String]], queryStringOptions: ObjMap, queryParams: [[String]]) repeatable on SCHEMA

type Query {
  test: test_200_response @httpOperation(subgraph: "toto", path: "/test", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET) @linkResolver(subgraph: "toto", linkResolverMap: "{\\"testLink\\":{\\"targetTypeName\\":\\"Query\\",\\"targetFieldName\\":\\"testLink\\"}}")
  testLink: testLink_200_response @httpOperation(subgraph: "toto", path: "/test-link", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET)
}

type test_200_response {
  String: String @resolveRoot(subgraph: "toto")
  testLink: testLink_200_response @oas_link(subgraph: "toto", defaultRootType: "Query", defaultField: "test")
}

type testLink_200_response {
  foo: String
}

enum HTTPMethod {
  GET
  HEAD
  POST
  PUT
  DELETE
  CONNECT
  OPTIONS
  TRACE
  PATCH
}

scalar ObjMap"
`;
