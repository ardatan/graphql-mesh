// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Example API Combined should generate correct schema: example_oas_combined-schema 1`] = `
"schema {
  query: Query
}

type Query {
  \\"Returns information about all employee cars\\"
  getAllCars: [query_getAllCars_items]
}

type query_getAllCars_items {
  \\"The model of the car.\\"
  model: String
  \\"The color of the car.\\"
  color: String
  features: query_getAllCars_items_allOf_0_features
  tags: Tags
  kind: query_getAllCars_items_allOf_0_kind
  rating: query_getAllCars_items_allOf_0_rating
}

type query_getAllCars_items_allOf_0_features {
  additionalProperties: JSON
}

\\"The \`JSON\` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).\\"
scalar JSON @specifiedBy(url: \\"http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf\\")

\\"Arbitrary (string) tags describing an entity.\\"
type Tags {
  additionalProperties: JSON
}

enum query_getAllCars_items_allOf_0_kind {
  SEDAN
  SUV
  MINIVAN
  LIMOSINE
  RACE_CAR
}

\\"The rating of the car.\\"
enum query_getAllCars_items_allOf_0_rating {
  _100
  _101
  _200
}"
`;

exports[`Example API Combined should handle allOf correctly: example_oas_combined-query-result 1`] = `
Object {
  "data": Object {
    "getAllCars": Array [
      Object {
        "model": "Retro Rides",
      },
      Object {
        "model": "Speedzone Speedster",
      },
      Object {
        "model": "Glossy German",
      },
      Object {
        "model": "Glossy German",
      },
    ],
  },
}
`;
