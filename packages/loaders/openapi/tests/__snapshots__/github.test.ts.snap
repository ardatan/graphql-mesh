// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OpenAPI Loader: Github should generate the correct bundle 1`] = `
{
  "baseUrl": "https://api.github.com/",
  "name": "github",
  "operationHeaders": {},
  "operations": [
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
      },
      "description": "Lists all the emojis available to use on GitHub.",
      "field": "emojis",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/emojis",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/emojis",
            "properties": {
              "+1": {
                "type": "string",
              },
              "-1": {
                "type": "string",
              },
              "100": {
                "type": "string",
              },
              "1234": {
                "type": "string",
              },
              "8ball": {
                "type": "string",
              },
              "a": {
                "type": "string",
              },
              "ab": {
                "type": "string",
              },
            },
            "title": "emojis",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
      },
      "description": "List public events.",
      "field": "events",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/events",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/events",
            "properties": {
              "actor": {
                "$ref": "#/definitions/query_events_actor",
              },
              "created_at": {
                "type": "object",
              },
              "id": {
                "type": "integer",
              },
              "org": {
                "$ref": "#/definitions/query_events_org",
              },
              "payload": {
                "$ref": "#/definitions/query_events_payload",
              },
              "public": {
                "type": "boolean",
              },
              "repo": {
                "$ref": "#/definitions/query_events_repo",
              },
              "type": {
                "type": "string",
              },
            },
            "title": "events",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
      },
      "description": "List Feeds.
GitHub provides several timeline resources in Atom format. The Feeds API
 lists all the feeds available to the authenticating user.
",
      "field": "feeds",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/feeds",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/feeds",
            "properties": {
              "current_user_actor_url": {
                "type": "string",
              },
              "current_user_organization_url": {
                "type": "string",
              },
              "current_user_public": {
                "type": "string",
              },
              "current_user_url": {
                "type": "string",
              },
              "links": {
                "$ref": "#/definitions/query_feeds_links",
              },
              "timeline_url": {
                "type": "string",
              },
              "user_url": {
                "type": "string",
              },
            },
            "title": "feeds",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "since": {
          "description": "Timestamp in ISO 8601 format YYYY-MM-DDTHH:MM:SSZ.
Only gists updated at or after this time are returned.",
          "in": "query",
          "name": "since",
          "type": "string",
        },
      },
      "description": "List the authenticated user's gists or if called anonymously, this will
return all public gists.
",
      "field": "gists",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/gists",
      "queryParamArgMap": {
        "since": "since",
      },
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/gists",
            "items": {
              "properties": {
                "comments": {
                  "type": "integer",
                },
                "comments_url": {
                  "type": "string",
                },
                "created_at": {
                  "type": "string",
                },
                "description": {
                  "type": "string",
                },
                "files": {
                  "$ref": "#/definitions/query_gists_items_files",
                },
                "git_pull_url": {
                  "type": "string",
                },
                "git_push_url": {
                  "type": "string",
                },
                "html_url": {
                  "type": "string",
                },
                "id": {
                  "type": "string",
                },
                "public": {
                  "type": "boolean",
                },
                "url": {
                  "type": "string",
                },
                "user": {
                  "$ref": "#/definitions/query_gists_items_user",
                },
              },
              "title": "query_gists_items",
              "type": "object",
            },
            "title": "gists",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "body": {
          "$resolvedRef": "/definitions/postGist",
          "description": undefined,
          "nullable": false,
          "properties": {
            "description": {
              "type": "string",
            },
            "files": {
              "$ref": "#/definitions/mutationInput_post_gists_input_files",
            },
            "public": {
              "type": "boolean",
            },
          },
          "title": "postGist",
          "type": "object",
        },
      },
      "description": "Create a gist.",
      "field": "post_gists",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "POST",
      "operationHeaders": undefined,
      "path": "/gists",
      "requestSchema": {
        "$resolvedRef": "/definitions/postGist",
        "description": undefined,
        "nullable": false,
        "properties": {
          "description": {
            "type": "string",
          },
          "files": {
            "$ref": "#/definitions/mutationInput_post_gists_input_files",
          },
          "public": {
            "type": "boolean",
          },
        },
        "title": "postGist",
        "type": "object",
      },
      "responseByStatusCode": {
        "201": {
          "responseSchema": {
            "$resolvedRef": "/definitions/gist",
            "properties": {
              "comments": {
                "type": "integer",
              },
              "comments_url": {
                "type": "string",
              },
              "created_at": {
                "description": "Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.",
                "type": "string",
              },
              "description": {
                "type": "string",
              },
              "files": {
                "$ref": "#/definitions/query_gists_by_id_files",
              },
              "forks": {
                "items": {
                  "$ref": "#/definitions/query_gists_by_id_forks_items",
                },
                "type": "array",
              },
              "git_pull_url": {
                "type": "string",
              },
              "git_push_url": {
                "type": "string",
              },
              "history": {
                "items": {
                  "$ref": "#/definitions/query_gists_by_id_history_items",
                },
                "type": "array",
              },
              "html_url": {
                "type": "string",
              },
              "id": {
                "type": "string",
              },
              "public": {
                "type": "boolean",
              },
              "url": {
                "type": "string",
              },
              "user": {
                "$ref": "#/definitions/query_gists_by_id_user",
              },
            },
            "title": "gist",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "since": {
          "description": "Timestamp in ISO 8601 format YYYY-MM-DDTHH:MM:SSZ.
Only gists updated at or after this time are returned.",
          "in": "query",
          "name": "since",
          "type": "string",
        },
      },
      "description": "List all public gists.",
      "field": "gists_public",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/gists/public",
      "queryParamArgMap": {
        "since": "since",
      },
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/gists",
            "items": {
              "properties": {
                "comments": {
                  "type": "integer",
                },
                "comments_url": {
                  "type": "string",
                },
                "created_at": {
                  "type": "string",
                },
                "description": {
                  "type": "string",
                },
                "files": {
                  "$ref": "#/definitions/query_gists_items_files",
                },
                "git_pull_url": {
                  "type": "string",
                },
                "git_push_url": {
                  "type": "string",
                },
                "html_url": {
                  "type": "string",
                },
                "id": {
                  "type": "string",
                },
                "public": {
                  "type": "boolean",
                },
                "url": {
                  "type": "string",
                },
                "user": {
                  "$ref": "#/definitions/query_gists_items_user",
                },
              },
              "title": "query_gists_items",
              "type": "object",
            },
            "title": "gists",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "since": {
          "description": "Timestamp in ISO 8601 format YYYY-MM-DDTHH:MM:SSZ.
Only gists updated at or after this time are returned.",
          "in": "query",
          "name": "since",
          "type": "string",
        },
      },
      "description": "List the authenticated user's starred gists.",
      "field": "gists_starred",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/gists/starred",
      "queryParamArgMap": {
        "since": "since",
      },
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/gists",
            "items": {
              "properties": {
                "comments": {
                  "type": "integer",
                },
                "comments_url": {
                  "type": "string",
                },
                "created_at": {
                  "type": "string",
                },
                "description": {
                  "type": "string",
                },
                "files": {
                  "$ref": "#/definitions/query_gists_items_files",
                },
                "git_pull_url": {
                  "type": "string",
                },
                "git_push_url": {
                  "type": "string",
                },
                "html_url": {
                  "type": "string",
                },
                "id": {
                  "type": "string",
                },
                "public": {
                  "type": "boolean",
                },
                "url": {
                  "type": "string",
                },
                "user": {
                  "$ref": "#/definitions/query_gists_items_user",
                },
              },
              "title": "query_gists_items",
              "type": "object",
            },
            "title": "gists",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "id": {
          "description": "Id of gist.",
          "in": "path",
          "name": "id",
          "nullable": false,
          "type": "integer",
        },
      },
      "description": "Delete a gist.",
      "field": "delete_gists_by_id",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "DELETE",
      "operationHeaders": undefined,
      "path": "/gists/{args.id}",
      "responseByStatusCode": {
        "204": {
          "responseSchema": {
            "description": "No content.",
            "title": "delete_gists_by_id_204_response",
            "type": "null",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "id": {
          "description": "Id of gist.",
          "in": "path",
          "name": "id",
          "nullable": false,
          "type": "integer",
        },
      },
      "description": "Get a single gist.",
      "field": "gists_by_id",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/gists/{args.id}",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/gist",
            "properties": {
              "comments": {
                "type": "integer",
              },
              "comments_url": {
                "type": "string",
              },
              "created_at": {
                "description": "Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.",
                "type": "string",
              },
              "description": {
                "type": "string",
              },
              "files": {
                "$ref": "#/definitions/query_gists_by_id_files",
              },
              "forks": {
                "items": {
                  "$ref": "#/definitions/query_gists_by_id_forks_items",
                },
                "type": "array",
              },
              "git_pull_url": {
                "type": "string",
              },
              "git_push_url": {
                "type": "string",
              },
              "history": {
                "items": {
                  "$ref": "#/definitions/query_gists_by_id_history_items",
                },
                "type": "array",
              },
              "html_url": {
                "type": "string",
              },
              "id": {
                "type": "string",
              },
              "public": {
                "type": "boolean",
              },
              "url": {
                "type": "string",
              },
              "user": {
                "$ref": "#/definitions/query_gists_by_id_user",
              },
            },
            "title": "gist",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "body": {
          "$resolvedRef": "/definitions/patchGist",
          "description": undefined,
          "nullable": false,
          "properties": {
            "description": {
              "type": "string",
            },
            "files": {
              "$ref": "#/definitions/mutationInput_patch_gists_by_id_input_files",
            },
          },
          "title": "patchGist",
          "type": "object",
        },
        "id": {
          "description": "Id of gist.",
          "in": "path",
          "name": "id",
          "nullable": false,
          "type": "integer",
        },
      },
      "description": "Edit a gist.",
      "field": "patch_gists_by_id",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "PATCH",
      "operationHeaders": undefined,
      "path": "/gists/{args.id}",
      "requestSchema": {
        "$resolvedRef": "/definitions/patchGist",
        "description": undefined,
        "nullable": false,
        "properties": {
          "description": {
            "type": "string",
          },
          "files": {
            "$ref": "#/definitions/mutationInput_patch_gists_by_id_input_files",
          },
        },
        "title": "patchGist",
        "type": "object",
      },
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/gist",
            "properties": {
              "comments": {
                "type": "integer",
              },
              "comments_url": {
                "type": "string",
              },
              "created_at": {
                "description": "Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.",
                "type": "string",
              },
              "description": {
                "type": "string",
              },
              "files": {
                "$ref": "#/definitions/query_gists_by_id_files",
              },
              "forks": {
                "items": {
                  "$ref": "#/definitions/query_gists_by_id_forks_items",
                },
                "type": "array",
              },
              "git_pull_url": {
                "type": "string",
              },
              "git_push_url": {
                "type": "string",
              },
              "history": {
                "items": {
                  "$ref": "#/definitions/query_gists_by_id_history_items",
                },
                "type": "array",
              },
              "html_url": {
                "type": "string",
              },
              "id": {
                "type": "string",
              },
              "public": {
                "type": "boolean",
              },
              "url": {
                "type": "string",
              },
              "user": {
                "$ref": "#/definitions/query_gists_by_id_user",
              },
            },
            "title": "gist",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "id": {
          "description": "Id of gist.",
          "in": "path",
          "name": "id",
          "nullable": false,
          "type": "integer",
        },
      },
      "description": "List comments on a gist.",
      "field": "gists_by_id_comments",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/gists/{args.id}/comments",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/comments",
            "items": {
              "properties": {
                "body": {
                  "type": "string",
                },
                "created_at": {
                  "description": "ISO 8601.",
                  "type": "string",
                },
                "id": {
                  "type": "integer",
                },
                "url": {
                  "type": "string",
                },
                "user": {
                  "$ref": "#/definitions/query_gists_by_id_comments_items_user",
                },
              },
              "title": "query_gists_by_id_comments_items",
              "type": "object",
            },
            "title": "comments",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "body": {
          "$resolvedRef": "/definitions/commentBody",
          "description": undefined,
          "nullable": false,
          "properties": {
            "body": {
              "type": "string",
            },
          },
          "required": [
            "body",
          ],
          "title": "commentBody",
          "type": "object",
        },
        "id": {
          "description": "Id of gist.",
          "in": "path",
          "name": "id",
          "nullable": false,
          "type": "integer",
        },
      },
      "description": "Create a commen",
      "field": "post_gists_by_id_comments",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "POST",
      "operationHeaders": undefined,
      "path": "/gists/{args.id}/comments",
      "requestSchema": {
        "$resolvedRef": "/definitions/commentBody",
        "description": undefined,
        "nullable": false,
        "properties": {
          "body": {
            "type": "string",
          },
        },
        "required": [
          "body",
        ],
        "title": "commentBody",
        "type": "object",
      },
      "responseByStatusCode": {
        "201": {
          "responseSchema": {
            "$resolvedRef": "/definitions/comment",
            "description": undefined,
            "nullable": false,
            "properties": {
              "body": {
                "type": "string",
              },
            },
            "title": "comment",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "commentId": {
          "description": "Id of comment.",
          "in": "path",
          "name": "commentId",
          "nullable": false,
          "type": "integer",
        },
        "id": {
          "description": "Id of gist.",
          "in": "path",
          "name": "id",
          "nullable": false,
          "type": "integer",
        },
      },
      "description": "Delete a comment.",
      "field": "delete_gists_by_id_comments_by_commentId",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "DELETE",
      "operationHeaders": undefined,
      "path": "/gists/{args.id}/comments/{args.commentId}",
      "responseByStatusCode": {
        "204": {
          "responseSchema": {
            "description": "No content.",
            "title": "delete_gists_by_id_comments_by_commentId_204_response",
            "type": "null",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "commentId": {
          "description": "Id of comment.",
          "in": "path",
          "name": "commentId",
          "nullable": false,
          "type": "integer",
        },
        "id": {
          "description": "Id of gist.",
          "in": "path",
          "name": "id",
          "nullable": false,
          "type": "integer",
        },
      },
      "description": "Get a single comment.",
      "field": "gists_by_id_comments_by_commentId",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/gists/{args.id}/comments/{args.commentId}",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/comment",
            "description": undefined,
            "nullable": false,
            "properties": {
              "body": {
                "type": "string",
              },
            },
            "title": "comment",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "body": {
          "$resolvedRef": "/definitions/comment",
          "description": undefined,
          "nullable": false,
          "properties": {
            "body": {
              "type": "string",
            },
          },
          "title": "comment",
          "type": "object",
        },
        "commentId": {
          "description": "Id of comment.",
          "in": "path",
          "name": "commentId",
          "nullable": false,
          "type": "integer",
        },
        "id": {
          "description": "Id of gist.",
          "in": "path",
          "name": "id",
          "nullable": false,
          "type": "integer",
        },
      },
      "description": "Edit a comment.",
      "field": "patch_gists_by_id_comments_by_commentId",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "PATCH",
      "operationHeaders": undefined,
      "path": "/gists/{args.id}/comments/{args.commentId}",
      "requestSchema": {
        "$resolvedRef": "/definitions/comment",
        "description": undefined,
        "nullable": false,
        "properties": {
          "body": {
            "type": "string",
          },
        },
        "title": "comment",
        "type": "object",
      },
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/comment",
            "description": undefined,
            "nullable": false,
            "properties": {
              "body": {
                "type": "string",
              },
            },
            "title": "comment",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "id": {
          "description": "Id of gist.",
          "in": "path",
          "name": "id",
          "nullable": false,
          "type": "integer",
        },
      },
      "description": "Fork a gist.",
      "field": "post_gists_by_id_forks",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "POST",
      "operationHeaders": undefined,
      "path": "/gists/{args.id}/forks",
      "responseByStatusCode": {
        "204": {
          "responseSchema": {
            "description": "Exists.",
            "title": "post_gists_by_id_forks_204_response",
            "type": "null",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "id": {
          "description": "Id of gist.",
          "in": "path",
          "name": "id",
          "nullable": false,
          "type": "integer",
        },
      },
      "description": "Unstar a gist.",
      "field": "delete_gists_by_id_star",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "DELETE",
      "operationHeaders": undefined,
      "path": "/gists/{args.id}/star",
      "responseByStatusCode": {
        "204": {
          "responseSchema": {
            "description": "Item removed.",
            "title": "delete_gists_by_id_star_204_response",
            "type": "null",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "id": {
          "description": "Id of gist.",
          "in": "path",
          "name": "id",
          "nullable": false,
          "type": "integer",
        },
      },
      "description": "Check if a gist is starred.",
      "field": "gists_by_id_star",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/gists/{args.id}/star",
      "responseByStatusCode": {
        "204": {
          "responseSchema": {
            "description": "Exists.",
            "title": "gists_by_id_star_204_response",
            "type": "null",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "id": {
          "description": "Id of gist.",
          "in": "path",
          "name": "id",
          "nullable": false,
          "type": "integer",
        },
      },
      "description": "Star a gist.",
      "field": "put_gists_by_id_star",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "PUT",
      "operationHeaders": undefined,
      "path": "/gists/{args.id}/star",
      "responseByStatusCode": {
        "204": {
          "responseSchema": {
            "description": "Starred.",
            "title": "put_gists_by_id_star_204_response",
            "type": "null",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
      },
      "description": "Listing available templates.
List all templates available to pass as an option when creating a repository.
",
      "field": "gitignore_templates",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/gitignore/templates",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/gitignore",
            "title": "gitignore",
            "type": "string",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "language": {
          "description": undefined,
          "in": "path",
          "name": "language",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Get a single template.",
      "field": "gitignore_templates_by_language",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/gitignore/templates/{args.language}",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/gitignore-lang",
            "properties": {
              "name": {
                "type": "string",
              },
              "source": {
                "type": "string",
              },
            },
            "title": "gitignore-lang",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "direction": {
          "default": "desc",
          "description": undefined,
          "enum": [
            "asc",
            "desc",
          ],
          "in": "query",
          "name": "direction",
          "nullable": false,
          "title": "queryInput_issues_direction",
          "type": "string",
        },
        "filter": {
          "default": "all",
          "description": "Issues assigned to you / created by you / mentioning you / you're
subscribed to updates for / All issues the authenticated user can see",
          "enum": [
            "assigned",
            "created",
            "mentioned",
            "subscribed",
            "all",
          ],
          "in": "query",
          "name": "filter",
          "nullable": false,
          "title": "queryInput_issues_filter",
          "type": "string",
        },
        "labels": {
          "description": "String list of comma separated Label names. Example - bug,ui,@high.",
          "in": "query",
          "name": "labels",
          "nullable": false,
          "type": "string",
        },
        "since": {
          "description": "Optional string of a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.
Only issues updated at or after this time are returned.",
          "in": "query",
          "name": "since",
          "type": "string",
        },
        "sort": {
          "default": "created",
          "description": undefined,
          "enum": [
            "created",
            "updated",
            "comments",
          ],
          "in": "query",
          "name": "sort",
          "nullable": false,
          "title": "queryInput_issues_sort",
          "type": "string",
        },
        "state": {
          "default": "open",
          "description": undefined,
          "enum": [
            "open",
            "closed",
          ],
          "in": "query",
          "name": "state",
          "nullable": false,
          "title": "queryInput_issues_state",
          "type": "string",
        },
      },
      "description": "List issues.
List all issues across all the authenticated user's visible repositories.
",
      "field": "issues",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/issues",
      "queryParamArgMap": {
        "direction": "direction",
        "filter": "filter",
        "labels": "labels",
        "since": "since",
        "sort": "sort",
        "state": "state",
      },
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/issues",
            "items": {
              "properties": {
                "assignee": {
                  "$ref": "#/definitions/query_issues_items_assignee",
                },
                "body": {
                  "type": "string",
                },
                "closed_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "comments": {
                  "type": "integer",
                },
                "created_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "html_url": {
                  "type": "string",
                },
                "labels": {
                  "items": {
                    "$ref": "#/definitions/query_issues_items_labels_items",
                  },
                  "type": "array",
                },
                "milestone": {
                  "$ref": "#/definitions/query_issues_items_milestone",
                },
                "number": {
                  "type": "integer",
                },
                "pull_request": {
                  "$ref": "#/definitions/query_issues_items_pull_request",
                },
                "state": {
                  "$ref": "#/definitions/query_issues_items_state",
                },
                "title": {
                  "type": "string",
                },
                "updated_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "url": {
                  "type": "string",
                },
                "user": {
                  "$ref": "#/definitions/query_issues_items_user",
                },
              },
              "title": "query_issues_items",
              "type": "object",
            },
            "title": "issues",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "keyword": {
          "description": "The search term.",
          "in": "path",
          "name": "keyword",
          "nullable": false,
          "type": "string",
        },
        "owner": {
          "description": undefined,
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repository": {
          "description": undefined,
          "in": "path",
          "name": "repository",
          "nullable": false,
          "type": "string",
        },
        "state": {
          "description": "Indicates the state of the issues to return. Can be either open or closed.",
          "enum": [
            "open",
            "closed",
          ],
          "in": "path",
          "name": "state",
          "nullable": false,
          "title": "queryInput_legacy_issues_search_by_owner_by_repository_by_state_by_keyword_state",
          "type": "string",
        },
      },
      "description": "Find issues by state and keyword.",
      "field": "legacy_issues_search_by_owner_by_repository_by_state_by_keyword",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/legacy/issues/search/{args.owner}/{args.repository}/{args.state}/{args.keyword}",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/search-issues-by-keyword",
            "properties": {
              "issues": {
                "items": {
                  "$ref": "#/definitions/query_legacy_issues_search_by_owner_by_repository_by_state_by_keyword_issues_items",
                },
                "type": "array",
              },
            },
            "title": "search-issues-by-keyword",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "keyword": {
          "description": "The search term",
          "in": "path",
          "name": "keyword",
          "nullable": false,
          "type": "string",
        },
        "language": {
          "description": "Filter results by language",
          "in": "query",
          "name": "language",
          "type": "string",
        },
        "order": {
          "default": "desc",
          "description": "The sort field. if sort param is provided. Can be either asc or desc.",
          "enum": [
            "desc",
            "asc",
          ],
          "in": "query",
          "name": "order",
          "title": "queryInput_legacy_repos_search_by_keyword_order",
          "type": "string",
        },
        "sort": {
          "description": "The sort field. One of stars, forks, or updated. Default: results are sorted by best match.",
          "enum": [
            "updated",
            "stars",
            "forks",
          ],
          "in": "query",
          "name": "sort",
          "title": "queryInput_legacy_repos_search_by_keyword_sort",
          "type": "string",
        },
        "start_page": {
          "description": "The page number to fetch",
          "in": "query",
          "name": "start_page",
          "type": "string",
        },
      },
      "description": "Find repositories by keyword. Note, this legacy method does not follow the v3 pagination pattern. This method returns up to 100 results per page and pages can be fetched using the start_page parameter.",
      "field": "legacy_repos_search_by_keyword",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/legacy/repos/search/{args.keyword}",
      "queryParamArgMap": {
        "language": "language",
        "order": "order",
        "sort": "sort",
        "start_page": "start_page",
      },
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/search-repositories-by-keyword",
            "properties": {
              "repositories": {
                "items": {
                  "$ref": "#/definitions/query_legacy_repos_search_by_keyword_repositories_items",
                },
                "type": "array",
              },
            },
            "title": "search-repositories-by-keyword",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "email": {
          "description": "The email address",
          "in": "path",
          "name": "email",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "This API call is added for compatibility reasons only.",
      "field": "legacy_user_email_by_email",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/legacy/user/email/{args.email}",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/search-user-by-email",
            "properties": {
              "user": {
                "$ref": "#/definitions/query_legacy_user_email_by_email_user",
              },
            },
            "title": "search-user-by-email",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "keyword": {
          "description": "The search term",
          "in": "path",
          "name": "keyword",
          "nullable": false,
          "type": "string",
        },
        "order": {
          "default": "desc",
          "description": "The sort field. if sort param is provided. Can be either asc or desc.",
          "enum": [
            "desc",
            "asc",
          ],
          "in": "query",
          "name": "order",
          "title": "queryInput_legacy_user_search_by_keyword_order",
          "type": "string",
        },
        "sort": {
          "description": "The sort field. One of stars, forks, or updated. Default: results are sorted by best match.",
          "enum": [
            "updated",
            "stars",
            "forks",
          ],
          "in": "query",
          "name": "sort",
          "title": "queryInput_legacy_user_search_by_keyword_sort",
          "type": "string",
        },
        "start_page": {
          "description": "The page number to fetch",
          "in": "query",
          "name": "start_page",
          "type": "string",
        },
      },
      "description": "Find users by keyword.",
      "field": "legacy_user_search_by_keyword",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/legacy/user/search/{args.keyword}",
      "queryParamArgMap": {
        "order": "order",
        "sort": "sort",
        "start_page": "start_page",
      },
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/search-users-by-keyword",
            "properties": {
              "users": {
                "items": {
                  "$ref": "#/definitions/query_legacy_user_search_by_keyword_users_items",
                },
                "type": "array",
              },
            },
            "title": "search-users-by-keyword",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "body": {
          "$resolvedRef": "/definitions/markdown",
          "description": undefined,
          "nullable": false,
          "properties": {
            "context": {
              "type": "string",
            },
            "mode": {
              "type": "string",
            },
            "text": {
              "type": "string",
            },
          },
          "title": "markdown",
          "type": "object",
        },
      },
      "description": "Render an arbitrary Markdown document",
      "field": "post_markdown",
      "headers": {
        "Accept": "text/html",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "POST",
      "operationHeaders": undefined,
      "path": "/markdown",
      "requestSchema": {
        "$resolvedRef": "/definitions/markdown",
        "description": undefined,
        "nullable": false,
        "properties": {
          "context": {
            "type": "string",
          },
          "mode": {
            "type": "string",
          },
          "text": {
            "type": "string",
          },
        },
        "title": "markdown",
        "type": "object",
      },
      "responseByStatusCode": {},
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
      },
      "description": "Render a Markdown document in raw mode",
      "field": "post_markdown_raw",
      "headers": {
        "Accept": "text/html",
        "Content-Type": "text/plain",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "POST",
      "operationHeaders": undefined,
      "path": "/markdown/raw",
      "responseByStatusCode": {},
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
      },
      "description": "This gives some information about GitHub.com, the service.",
      "field": "meta",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/meta",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/meta",
            "properties": {
              "git": {
                "items": {
                  "description": "An Array of IP addresses in CIDR format specifying the Git servers at GitHub.",
                  "type": "string",
                },
                "type": "array",
              },
              "hooks": {
                "items": {
                  "description": "An Array of IP addresses in CIDR format specifying the addresses that incoming service hooks will originate from.",
                  "type": "string",
                },
                "type": "array",
              },
            },
            "title": "meta",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "owner": {
          "description": "Name of the owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "List public events for a network of repositories.",
      "field": "networks_by_owner_by_repo_events",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/networks/{args.owner}/{args.repo}/events",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/events",
            "properties": {
              "actor": {
                "$ref": "#/definitions/query_events_actor",
              },
              "created_at": {
                "type": "object",
              },
              "id": {
                "type": "integer",
              },
              "org": {
                "$ref": "#/definitions/query_events_org",
              },
              "payload": {
                "$ref": "#/definitions/query_events_payload",
              },
              "public": {
                "type": "boolean",
              },
              "repo": {
                "$ref": "#/definitions/query_events_repo",
              },
              "type": {
                "type": "string",
              },
            },
            "title": "events",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "all": {
          "description": "True to show notifications marked as read.",
          "in": "query",
          "name": "all",
          "type": "boolean",
        },
        "participating": {
          "description": "True to show only notifications in which the user is directly participating
or mentioned.",
          "in": "query",
          "name": "participating",
          "type": "boolean",
        },
        "since": {
          "description": "The time should be passed in as UTC in the ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.
Example: "2012-10-09T23:39:01Z".",
          "in": "query",
          "name": "since",
          "type": "string",
        },
      },
      "description": "List your notifications.
List all notifications for the current user, grouped by repository.
",
      "field": "notifications",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/notifications",
      "queryParamArgMap": {
        "all": "all",
        "participating": "participating",
        "since": "since",
      },
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/notifications",
            "properties": {
              "id": {
                "type": "integer",
              },
              "last_read_at": {
                "type": "string",
              },
              "reason": {
                "type": "string",
              },
              "repository": {
                "$ref": "#/definitions/query_notifications_repository",
              },
              "subject": {
                "$ref": "#/definitions/query_notifications_subject",
              },
              "unread": {
                "type": "boolean",
              },
              "updated_at": {
                "type": "string",
              },
              "url": {
                "type": "string",
              },
            },
            "title": "notifications",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "body": {
          "$resolvedRef": "/definitions/notificationMarkRead",
          "description": undefined,
          "nullable": false,
          "properties": {
            "last_read_at": {
              "type": "string",
            },
          },
          "title": "notificationMarkRead",
          "type": "object",
        },
      },
      "description": "Mark as read.
Marking a notification as "read" removes it from the default view on GitHub.com.
",
      "field": "put_notifications",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "PUT",
      "operationHeaders": undefined,
      "path": "/notifications",
      "requestSchema": {
        "$resolvedRef": "/definitions/notificationMarkRead",
        "description": undefined,
        "nullable": false,
        "properties": {
          "last_read_at": {
            "type": "string",
          },
        },
        "title": "notificationMarkRead",
        "type": "object",
      },
      "responseByStatusCode": {},
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "id": {
          "description": "Id of thread.",
          "in": "path",
          "name": "id",
          "nullable": false,
          "type": "integer",
        },
      },
      "description": "View a single thread.",
      "field": "notifications_threads_by_id",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/notifications/threads/{args.id}",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/notifications",
            "properties": {
              "id": {
                "type": "integer",
              },
              "last_read_at": {
                "type": "string",
              },
              "reason": {
                "type": "string",
              },
              "repository": {
                "$ref": "#/definitions/query_notifications_repository",
              },
              "subject": {
                "$ref": "#/definitions/query_notifications_subject",
              },
              "unread": {
                "type": "boolean",
              },
              "updated_at": {
                "type": "string",
              },
              "url": {
                "type": "string",
              },
            },
            "title": "notifications",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "id": {
          "description": "Id of thread.",
          "in": "path",
          "name": "id",
          "nullable": false,
          "type": "integer",
        },
      },
      "description": "Mark a thread as read",
      "field": "patch_notifications_threads_by_id",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "PATCH",
      "operationHeaders": undefined,
      "path": "/notifications/threads/{args.id}",
      "responseByStatusCode": {},
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "id": {
          "description": "Id of thread.",
          "in": "path",
          "name": "id",
          "nullable": false,
          "type": "integer",
        },
      },
      "description": "Delete a Thread Subscription.",
      "field": "delete_notifications_threads_by_id_subscription",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "DELETE",
      "operationHeaders": undefined,
      "path": "/notifications/threads/{args.id}/subscription",
      "responseByStatusCode": {
        "204": {
          "responseSchema": {
            "description": "No Content",
            "title": "delete_notifications_threads_by_id_subscription_204_response",
            "type": "null",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "id": {
          "description": "Id of thread.",
          "in": "path",
          "name": "id",
          "nullable": false,
          "type": "integer",
        },
      },
      "description": "Get a Thread Subscription.",
      "field": "notifications_threads_by_id_subscription",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/notifications/threads/{args.id}/subscription",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/subscription",
            "properties": {
              "created_at": {
                "type": "string",
              },
              "ignored": {
                "type": "boolean",
              },
              "reason": {
                "type": "boolean",
              },
              "subscribed": {
                "type": "boolean",
              },
              "thread_url": {
                "type": "string",
              },
              "url": {
                "type": "string",
              },
            },
            "title": "subscription",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "body": {
          "$resolvedRef": "/definitions/putSubscription",
          "description": undefined,
          "nullable": false,
          "properties": {
            "created_at": {
              "type": "string",
            },
            "ignored": {
              "type": "boolean",
            },
            "reason": {
              "type": "object",
            },
            "subscribed": {
              "type": "boolean",
            },
            "thread_url": {
              "type": "string",
            },
            "url": {
              "type": "string",
            },
          },
          "title": "putSubscription",
          "type": "object",
        },
        "id": {
          "description": "Id of thread.",
          "in": "path",
          "name": "id",
          "nullable": false,
          "type": "integer",
        },
      },
      "description": "Set a Thread Subscription.
This lets you subscribe to a thread, or ignore it. Subscribing to a thread
is unnecessary if the user is already subscribed to the repository. Ignoring
a thread will mute all future notifications (until you comment or get @mentioned).
",
      "field": "put_notifications_threads_by_id_subscription",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "PUT",
      "operationHeaders": undefined,
      "path": "/notifications/threads/{args.id}/subscription",
      "requestSchema": {
        "$resolvedRef": "/definitions/putSubscription",
        "description": undefined,
        "nullable": false,
        "properties": {
          "created_at": {
            "type": "string",
          },
          "ignored": {
            "type": "boolean",
          },
          "reason": {
            "type": "object",
          },
          "subscribed": {
            "type": "boolean",
          },
          "thread_url": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "putSubscription",
        "type": "object",
      },
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/subscription",
            "properties": {
              "created_at": {
                "type": "string",
              },
              "ignored": {
                "type": "boolean",
              },
              "reason": {
                "type": "boolean",
              },
              "subscribed": {
                "type": "boolean",
              },
              "thread_url": {
                "type": "string",
              },
              "url": {
                "type": "string",
              },
            },
            "title": "subscription",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "org": {
          "description": "Name of organisation.",
          "in": "path",
          "name": "org",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Get an Organization.",
      "field": "orgs_by_org",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/orgs/{args.org}",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/organization",
            "properties": {
              "avatar_url": {
                "type": "string",
              },
              "blog": {
                "type": "string",
              },
              "company": {
                "type": "string",
              },
              "created_at": {
                "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                "type": "string",
              },
              "email": {
                "type": "string",
              },
              "followers": {
                "type": "integer",
              },
              "following": {
                "type": "integer",
              },
              "html_url": {
                "type": "string",
              },
              "id": {
                "type": "integer",
              },
              "location": {
                "type": "string",
              },
              "login": {
                "type": "string",
              },
              "name": {
                "type": "string",
              },
              "public_gists": {
                "type": "integer",
              },
              "public_repos": {
                "type": "integer",
              },
              "type": {
                "type": "string",
              },
              "url": {
                "type": "string",
              },
            },
            "title": "organization",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "body": {
          "$resolvedRef": "/definitions/patchOrg",
          "description": undefined,
          "nullable": false,
          "properties": {
            "billing_email": {
              "description": "Billing email address. This address is not publicized.",
              "type": "string",
            },
            "company": {
              "type": "string",
            },
            "email": {
              "description": "Publicly visible email address.",
              "type": "string",
            },
            "location": {
              "type": "string",
            },
            "name": {
              "type": "string",
            },
          },
          "title": "patchOrg",
          "type": "object",
        },
        "org": {
          "description": "Name of organisation.",
          "in": "path",
          "name": "org",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Edit an Organization.",
      "field": "patch_orgs_by_org",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "PATCH",
      "operationHeaders": undefined,
      "path": "/orgs/{args.org}",
      "requestSchema": {
        "$resolvedRef": "/definitions/patchOrg",
        "description": undefined,
        "nullable": false,
        "properties": {
          "billing_email": {
            "description": "Billing email address. This address is not publicized.",
            "type": "string",
          },
          "company": {
            "type": "string",
          },
          "email": {
            "description": "Publicly visible email address.",
            "type": "string",
          },
          "location": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
        },
        "title": "patchOrg",
        "type": "object",
      },
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/organization",
            "properties": {
              "avatar_url": {
                "type": "string",
              },
              "blog": {
                "type": "string",
              },
              "company": {
                "type": "string",
              },
              "created_at": {
                "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                "type": "string",
              },
              "email": {
                "type": "string",
              },
              "followers": {
                "type": "integer",
              },
              "following": {
                "type": "integer",
              },
              "html_url": {
                "type": "string",
              },
              "id": {
                "type": "integer",
              },
              "location": {
                "type": "string",
              },
              "login": {
                "type": "string",
              },
              "name": {
                "type": "string",
              },
              "public_gists": {
                "type": "integer",
              },
              "public_repos": {
                "type": "integer",
              },
              "type": {
                "type": "string",
              },
              "url": {
                "type": "string",
              },
            },
            "title": "organization",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "org": {
          "description": "Name of organisation.",
          "in": "path",
          "name": "org",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "List public events for an organization.",
      "field": "orgs_by_org_events",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/orgs/{args.org}/events",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/events",
            "properties": {
              "actor": {
                "$ref": "#/definitions/query_events_actor",
              },
              "created_at": {
                "type": "object",
              },
              "id": {
                "type": "integer",
              },
              "org": {
                "$ref": "#/definitions/query_events_org",
              },
              "payload": {
                "$ref": "#/definitions/query_events_payload",
              },
              "public": {
                "type": "boolean",
              },
              "repo": {
                "$ref": "#/definitions/query_events_repo",
              },
              "type": {
                "type": "string",
              },
            },
            "title": "events",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "direction": {
          "default": "desc",
          "description": undefined,
          "enum": [
            "asc",
            "desc",
          ],
          "in": "query",
          "name": "direction",
          "nullable": false,
          "title": "queryInput_orgs_by_org_issues_direction",
          "type": "string",
        },
        "filter": {
          "default": "all",
          "description": "Issues assigned to you / created by you / mentioning you / you're
subscribed to updates for / All issues the authenticated user can see",
          "enum": [
            "assigned",
            "created",
            "mentioned",
            "subscribed",
            "all",
          ],
          "in": "query",
          "name": "filter",
          "nullable": false,
          "title": "queryInput_orgs_by_org_issues_filter",
          "type": "string",
        },
        "labels": {
          "description": "String list of comma separated Label names. Example - bug,ui,@high.",
          "in": "query",
          "name": "labels",
          "nullable": false,
          "type": "string",
        },
        "org": {
          "description": "Name of organisation.",
          "in": "path",
          "name": "org",
          "nullable": false,
          "type": "string",
        },
        "since": {
          "description": "Optional string of a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.
Only issues updated at or after this time are returned.",
          "in": "query",
          "name": "since",
          "type": "string",
        },
        "sort": {
          "default": "created",
          "description": undefined,
          "enum": [
            "created",
            "updated",
            "comments",
          ],
          "in": "query",
          "name": "sort",
          "nullable": false,
          "title": "queryInput_orgs_by_org_issues_sort",
          "type": "string",
        },
        "state": {
          "default": "open",
          "description": undefined,
          "enum": [
            "open",
            "closed",
          ],
          "in": "query",
          "name": "state",
          "nullable": false,
          "title": "queryInput_orgs_by_org_issues_state",
          "type": "string",
        },
      },
      "description": "List issues.
List all issues for a given organization for the authenticated user.
",
      "field": "orgs_by_org_issues",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/orgs/{args.org}/issues",
      "queryParamArgMap": {
        "direction": "direction",
        "filter": "filter",
        "labels": "labels",
        "since": "since",
        "sort": "sort",
        "state": "state",
      },
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/issues",
            "items": {
              "properties": {
                "assignee": {
                  "$ref": "#/definitions/query_issues_items_assignee",
                },
                "body": {
                  "type": "string",
                },
                "closed_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "comments": {
                  "type": "integer",
                },
                "created_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "html_url": {
                  "type": "string",
                },
                "labels": {
                  "items": {
                    "$ref": "#/definitions/query_issues_items_labels_items",
                  },
                  "type": "array",
                },
                "milestone": {
                  "$ref": "#/definitions/query_issues_items_milestone",
                },
                "number": {
                  "type": "integer",
                },
                "pull_request": {
                  "$ref": "#/definitions/query_issues_items_pull_request",
                },
                "state": {
                  "$ref": "#/definitions/query_issues_items_state",
                },
                "title": {
                  "type": "string",
                },
                "updated_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "url": {
                  "type": "string",
                },
                "user": {
                  "$ref": "#/definitions/query_issues_items_user",
                },
              },
              "title": "query_issues_items",
              "type": "object",
            },
            "title": "issues",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "org": {
          "description": "Name of organisation.",
          "in": "path",
          "name": "org",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Members list.
List all users who are members of an organization. A member is a user tha
belongs to at least 1 team in the organization. If the authenticated user
is also an owner of this organization then both concealed and public members
will be returned. If the requester is not an owner of the organization the
query will be redirected to the public members list.
",
      "field": "orgs_by_org_members",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/orgs/{args.org}/members",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/users",
            "items": {
              "properties": {
                "avatar_url": {
                  "type": "string",
                },
                "gravatar_id": {
                  "type": "string",
                },
                "id": {
                  "type": "integer",
                },
                "login": {
                  "type": "string",
                },
                "url": {
                  "type": "string",
                },
              },
              "title": "query_orgs_by_org_members_items",
              "type": "object",
            },
            "title": "users",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "org": {
          "description": "Name of organisation.",
          "in": "path",
          "name": "org",
          "nullable": false,
          "type": "string",
        },
        "username": {
          "description": "Name of the user.",
          "in": "path",
          "name": "username",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Remove a member.
Removing a user from this list will remove them from all teams and they
will no longer have any access to the organization's repositories.
",
      "field": "delete_orgs_by_org_members_by_username",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "DELETE",
      "operationHeaders": undefined,
      "path": "/orgs/{args.org}/members/{args.username}",
      "responseByStatusCode": {
        "204": {
          "responseSchema": {
            "description": "No content.",
            "title": "delete_orgs_by_org_members_by_username_204_response",
            "type": "null",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "org": {
          "description": "Name of organisation.",
          "in": "path",
          "name": "org",
          "nullable": false,
          "type": "string",
        },
        "username": {
          "description": "Name of the user.",
          "in": "path",
          "name": "username",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Check if a user is, publicly or privately, a member of the organization.",
      "field": "orgs_by_org_members_by_username",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/orgs/{args.org}/members/{args.username}",
      "responseByStatusCode": {
        "204": {
          "responseSchema": {
            "description": "No content. Response if requester is an organization member and user is a member",
            "title": "orgs_by_org_members_by_username_204_response",
            "type": "null",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "org": {
          "description": "Name of organisation.",
          "in": "path",
          "name": "org",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Public members list.
Members of an organization can choose to have their membership publicized
or not.
",
      "field": "orgs_by_org_public_members",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/orgs/{args.org}/public_members",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/users",
            "items": {
              "properties": {
                "avatar_url": {
                  "type": "string",
                },
                "gravatar_id": {
                  "type": "string",
                },
                "id": {
                  "type": "integer",
                },
                "login": {
                  "type": "string",
                },
                "url": {
                  "type": "string",
                },
              },
              "title": "query_orgs_by_org_members_items",
              "type": "object",
            },
            "title": "users",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "org": {
          "description": "Name of organisation.",
          "in": "path",
          "name": "org",
          "nullable": false,
          "type": "string",
        },
        "username": {
          "description": "Name of the user.",
          "in": "path",
          "name": "username",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Conceal a user's membership.",
      "field": "delete_orgs_by_org_public_members_by_username",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "DELETE",
      "operationHeaders": undefined,
      "path": "/orgs/{args.org}/public_members/{args.username}",
      "responseByStatusCode": {
        "204": {
          "responseSchema": {
            "description": "Concealed.",
            "title": "delete_orgs_by_org_public_members_by_username_204_response",
            "type": "null",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "org": {
          "description": "Name of organisation.",
          "in": "path",
          "name": "org",
          "nullable": false,
          "type": "string",
        },
        "username": {
          "description": "Name of the user.",
          "in": "path",
          "name": "username",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Check public membership.",
      "field": "orgs_by_org_public_members_by_username",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/orgs/{args.org}/public_members/{args.username}",
      "responseByStatusCode": {
        "204": {
          "responseSchema": {
            "description": "User is a public member.",
            "title": "orgs_by_org_public_members_by_username_204_response",
            "type": "null",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "org": {
          "description": "Name of organisation.",
          "in": "path",
          "name": "org",
          "nullable": false,
          "type": "string",
        },
        "username": {
          "description": "Name of the user.",
          "in": "path",
          "name": "username",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Publicize a user's membership.",
      "field": "put_orgs_by_org_public_members_by_username",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "PUT",
      "operationHeaders": undefined,
      "path": "/orgs/{args.org}/public_members/{args.username}",
      "responseByStatusCode": {
        "204": {
          "responseSchema": {
            "description": "Publicized.",
            "title": "put_orgs_by_org_public_members_by_username_204_response",
            "type": "null",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "org": {
          "description": "Name of organisation.",
          "in": "path",
          "name": "org",
          "nullable": false,
          "type": "string",
        },
        "type": {
          "default": "all",
          "description": undefined,
          "enum": [
            "all",
            "public",
            "private",
            "forks",
            "sources",
            "member",
          ],
          "in": "query",
          "name": "type",
          "title": "queryInput_orgs_by_org_repos_type",
          "type": "string",
        },
      },
      "description": "List repositories for the specified org.",
      "field": "orgs_by_org_repos",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/orgs/{args.org}/repos",
      "queryParamArgMap": {
        "type": "type",
      },
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/repos",
            "items": {
              "properties": {
                "clone_url": {
                  "type": "string",
                },
                "created_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "description": {
                  "type": "string",
                },
                "fork": {
                  "type": "boolean",
                },
                "forks": {
                  "type": "integer",
                },
                "forks_count": {
                  "type": "integer",
                },
                "full_name": {
                  "type": "string",
                },
                "git_url": {
                  "type": "string",
                },
                "homepage": {
                  "type": "string",
                },
                "html_url": {
                  "type": "string",
                },
                "id": {
                  "type": "integer",
                },
                "language": {
                  "type": "string",
                },
                "master_branch": {
                  "type": "string",
                },
                "mirror_url": {
                  "type": "string",
                },
                "name": {
                  "type": "string",
                },
                "open_issues": {
                  "type": "integer",
                },
                "open_issues_count": {
                  "type": "integer",
                },
                "owner": {
                  "$ref": "#/definitions/query_orgs_by_org_repos_items_owner",
                },
                "private": {
                  "type": "boolean",
                },
                "pushed_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "size": {
                  "type": "integer",
                },
                "ssh_url": {
                  "type": "string",
                },
                "svn_url": {
                  "type": "string",
                },
                "updated_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "url": {
                  "type": "string",
                },
                "watchers": {
                  "type": "integer",
                },
                "watchers_count": {
                  "type": "integer",
                },
              },
              "title": "query_orgs_by_org_repos_items",
              "type": "object",
            },
            "title": "repos",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "body": {
          "$resolvedRef": "/definitions/postRepo",
          "description": undefined,
          "nullable": false,
          "properties": {
            "auto_init": {
              "description": "True to create an initial commit with empty README. Default is false.",
              "type": "boolean",
            },
            "description": {
              "type": "string",
            },
            "gitignore_template": {
              "description": "Desired language or platform .gitignore template to apply. Use the name of the template without the extension. For example, "Haskell" Ignored if auto_init parameter is not provided.",
              "type": "string",
            },
            "has_downloads": {
              "description": "True to enable downloads for this repository, false to disable them. Default is true.",
              "type": "boolean",
            },
            "has_issues": {
              "description": "True to enable issues for this repository, false to disable them. Default is true.",
              "type": "boolean",
            },
            "has_wiki": {
              "description": "True to enable the wiki for this repository, false to disable it. Default is true.",
              "type": "boolean",
            },
            "homepage": {
              "type": "string",
            },
            "name": {
              "type": "string",
            },
            "private": {
              "description": "True to create a private repository, false to create a public one. Creating private repositories requires a paid GitHub account.",
              "type": "boolean",
            },
            "team_id": {
              "description": "The id of the team that will be granted access to this repository. This is only valid when creating a repo in an organization.",
              "type": "integer",
            },
          },
          "required": [
            "name",
          ],
          "title": "postRepo",
          "type": "object",
        },
        "org": {
          "description": "Name of organisation.",
          "in": "path",
          "name": "org",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Create a new repository for the authenticated user. OAuth users must supply
repo scope.
",
      "field": "post_orgs_by_org_repos",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "POST",
      "operationHeaders": undefined,
      "path": "/orgs/{args.org}/repos",
      "requestSchema": {
        "$resolvedRef": "/definitions/postRepo",
        "description": undefined,
        "nullable": false,
        "properties": {
          "auto_init": {
            "description": "True to create an initial commit with empty README. Default is false.",
            "type": "boolean",
          },
          "description": {
            "type": "string",
          },
          "gitignore_template": {
            "description": "Desired language or platform .gitignore template to apply. Use the name of the template without the extension. For example, "Haskell" Ignored if auto_init parameter is not provided.",
            "type": "string",
          },
          "has_downloads": {
            "description": "True to enable downloads for this repository, false to disable them. Default is true.",
            "type": "boolean",
          },
          "has_issues": {
            "description": "True to enable issues for this repository, false to disable them. Default is true.",
            "type": "boolean",
          },
          "has_wiki": {
            "description": "True to enable the wiki for this repository, false to disable it. Default is true.",
            "type": "boolean",
          },
          "homepage": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
          "private": {
            "description": "True to create a private repository, false to create a public one. Creating private repositories requires a paid GitHub account.",
            "type": "boolean",
          },
          "team_id": {
            "description": "The id of the team that will be granted access to this repository. This is only valid when creating a repo in an organization.",
            "type": "integer",
          },
        },
        "required": [
          "name",
        ],
        "title": "postRepo",
        "type": "object",
      },
      "responseByStatusCode": {
        "201": {
          "responseSchema": {
            "$resolvedRef": "/definitions/repos",
            "items": {
              "properties": {
                "clone_url": {
                  "type": "string",
                },
                "created_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "description": {
                  "type": "string",
                },
                "fork": {
                  "type": "boolean",
                },
                "forks": {
                  "type": "integer",
                },
                "forks_count": {
                  "type": "integer",
                },
                "full_name": {
                  "type": "string",
                },
                "git_url": {
                  "type": "string",
                },
                "homepage": {
                  "type": "string",
                },
                "html_url": {
                  "type": "string",
                },
                "id": {
                  "type": "integer",
                },
                "language": {
                  "type": "string",
                },
                "master_branch": {
                  "type": "string",
                },
                "mirror_url": {
                  "type": "string",
                },
                "name": {
                  "type": "string",
                },
                "open_issues": {
                  "type": "integer",
                },
                "open_issues_count": {
                  "type": "integer",
                },
                "owner": {
                  "$ref": "#/definitions/query_orgs_by_org_repos_items_owner",
                },
                "private": {
                  "type": "boolean",
                },
                "pushed_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "size": {
                  "type": "integer",
                },
                "ssh_url": {
                  "type": "string",
                },
                "svn_url": {
                  "type": "string",
                },
                "updated_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "url": {
                  "type": "string",
                },
                "watchers": {
                  "type": "integer",
                },
                "watchers_count": {
                  "type": "integer",
                },
              },
              "title": "query_orgs_by_org_repos_items",
              "type": "object",
            },
            "title": "repos",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "org": {
          "description": "Name of organisation.",
          "in": "path",
          "name": "org",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "List teams.",
      "field": "orgs_by_org_teams",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/orgs/{args.org}/teams",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/teams",
            "items": {
              "properties": {
                "id": {
                  "type": "integer",
                },
                "name": {
                  "type": "string",
                },
                "url": {
                  "type": "string",
                },
              },
              "title": "query_orgs_by_org_teams_items",
              "type": "object",
            },
            "title": "teams",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "body": {
          "$resolvedRef": "/definitions/orgTeamsPost",
          "description": undefined,
          "nullable": false,
          "properties": {
            "name": {
              "type": "string",
            },
            "permission": {
              "$ref": "#/definitions/mutationInput_post_orgs_by_org_teams_input_permission",
            },
            "repo_names": {
              "items": {
                "type": "string",
              },
              "type": "array",
            },
          },
          "required": [
            "name",
          ],
          "title": "orgTeamsPost",
          "type": "object",
        },
        "org": {
          "description": "Name of organisation.",
          "in": "path",
          "name": "org",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Create team.
In order to create a team, the authenticated user must be an owner of organization.
",
      "field": "post_orgs_by_org_teams",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "POST",
      "operationHeaders": undefined,
      "path": "/orgs/{args.org}/teams",
      "requestSchema": {
        "$resolvedRef": "/definitions/orgTeamsPost",
        "description": undefined,
        "nullable": false,
        "properties": {
          "name": {
            "type": "string",
          },
          "permission": {
            "$ref": "#/definitions/mutationInput_post_orgs_by_org_teams_input_permission",
          },
          "repo_names": {
            "items": {
              "type": "string",
            },
            "type": "array",
          },
        },
        "required": [
          "name",
        ],
        "title": "orgTeamsPost",
        "type": "object",
      },
      "responseByStatusCode": {
        "201": {
          "responseSchema": {
            "$resolvedRef": "/definitions/team",
            "properties": {
              "id": {
                "type": "integer",
              },
              "members_count": {
                "type": "integer",
              },
              "name": {
                "type": "string",
              },
              "permission": {
                "type": "string",
              },
              "repos_count": {
                "type": "integer",
              },
              "url": {
                "type": "string",
              },
            },
            "title": "team",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
      },
      "description": "Get your current rate limit status
Note: Accessing this endpoint does not count against your rate limit.
",
      "field": "rate_limit",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/rate_limit",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/rate_limit",
            "properties": {
              "rate": {
                "$ref": "#/definitions/query_rate_limit_rate",
              },
            },
            "title": "rate_limit",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Delete a Repository.
Deleting a repository requires admin access. If OAuth is used, the delete_repo
scope is required.
",
      "field": "delete_repos_by_owner_by_repo",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "DELETE",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}",
      "responseByStatusCode": {
        "204": {
          "responseSchema": {
            "description": "Item removed.",
            "title": "delete_repos_by_owner_by_repo_204_response",
            "type": "null",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Get repository.",
      "field": "repos_by_owner_by_repo",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/repo",
            "properties": {
              "clone_url": {
                "type": "string",
              },
              "created_at": {
                "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                "type": "string",
              },
              "description": {
                "type": "string",
              },
              "fork": {
                "type": "boolean",
              },
              "forks": {
                "type": "integer",
              },
              "forks_count": {
                "type": "integer",
              },
              "full_name": {
                "type": "string",
              },
              "git_url": {
                "type": "string",
              },
              "has_downloads": {
                "type": "boolean",
              },
              "has_issues": {
                "type": "boolean",
              },
              "has_wiki": {
                "type": "boolean",
              },
              "homepage": {
                "type": "string",
              },
              "html_url": {
                "type": "string",
              },
              "id": {
                "type": "integer",
              },
              "language": {
                "type": "string",
              },
              "master_branch": {
                "type": "string",
              },
              "mirror_url": {
                "type": "string",
              },
              "name": {
                "type": "string",
              },
              "open_issues": {
                "type": "integer",
              },
              "open_issues_count": {
                "type": "integer",
              },
              "organization": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_organization",
              },
              "owner": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_owner",
              },
              "parent": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_parent",
              },
              "private": {
                "type": "boolean",
              },
              "pushed_at": {
                "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                "type": "string",
              },
              "size": {
                "type": "integer",
              },
              "source": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_source",
              },
              "ssh_url": {
                "type": "string",
              },
              "svn_url": {
                "type": "string",
              },
              "updated_at": {
                "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                "type": "string",
              },
              "url": {
                "type": "string",
              },
              "watchers": {
                "type": "integer",
              },
              "watchers_count": {
                "type": "integer",
              },
            },
            "title": "repo",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "body": {
          "$resolvedRef": "/definitions/repoEdit",
          "description": undefined,
          "nullable": false,
          "properties": {
            "description": {
              "type": "string",
            },
            "has_downloads": {
              "type": "boolean",
            },
            "has_issues": {
              "type": "boolean",
            },
            "has_wiki": {
              "type": "boolean",
            },
            "homepage": {
              "type": "string",
            },
            "name": {
              "type": "string",
            },
            "private": {
              "type": "boolean",
            },
          },
          "title": "repoEdit",
          "type": "object",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Edit repository.",
      "field": "patch_repos_by_owner_by_repo",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "PATCH",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}",
      "requestSchema": {
        "$resolvedRef": "/definitions/repoEdit",
        "description": undefined,
        "nullable": false,
        "properties": {
          "description": {
            "type": "string",
          },
          "has_downloads": {
            "type": "boolean",
          },
          "has_issues": {
            "type": "boolean",
          },
          "has_wiki": {
            "type": "boolean",
          },
          "homepage": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
          "private": {
            "type": "boolean",
          },
        },
        "title": "repoEdit",
        "type": "object",
      },
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/repo",
            "properties": {
              "clone_url": {
                "type": "string",
              },
              "created_at": {
                "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                "type": "string",
              },
              "description": {
                "type": "string",
              },
              "fork": {
                "type": "boolean",
              },
              "forks": {
                "type": "integer",
              },
              "forks_count": {
                "type": "integer",
              },
              "full_name": {
                "type": "string",
              },
              "git_url": {
                "type": "string",
              },
              "has_downloads": {
                "type": "boolean",
              },
              "has_issues": {
                "type": "boolean",
              },
              "has_wiki": {
                "type": "boolean",
              },
              "homepage": {
                "type": "string",
              },
              "html_url": {
                "type": "string",
              },
              "id": {
                "type": "integer",
              },
              "language": {
                "type": "string",
              },
              "master_branch": {
                "type": "string",
              },
              "mirror_url": {
                "type": "string",
              },
              "name": {
                "type": "string",
              },
              "open_issues": {
                "type": "integer",
              },
              "open_issues_count": {
                "type": "integer",
              },
              "organization": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_organization",
              },
              "owner": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_owner",
              },
              "parent": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_parent",
              },
              "private": {
                "type": "boolean",
              },
              "pushed_at": {
                "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                "type": "string",
              },
              "size": {
                "type": "integer",
              },
              "source": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_source",
              },
              "ssh_url": {
                "type": "string",
              },
              "svn_url": {
                "type": "string",
              },
              "updated_at": {
                "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                "type": "string",
              },
              "url": {
                "type": "string",
              },
              "watchers": {
                "type": "integer",
              },
              "watchers_count": {
                "type": "integer",
              },
            },
            "title": "repo",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "List assignees.
This call lists all the available assignees (owner + collaborators) to which
issues may be assigned.
",
      "field": "repos_by_owner_by_repo_assignees",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/assignees",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/assignees",
            "items": {
              "properties": {
                "avatar_url": {
                  "type": "integer",
                },
                "gravatar_id": {
                  "type": "string",
                },
                "id": {
                  "type": "integer",
                },
                "login": {
                  "type": "string",
                },
                "url": {
                  "type": "string",
                },
              },
              "title": "query_repos_by_owner_by_repo_assignees_items",
              "type": "object",
            },
            "title": "assignees",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "assignee": {
          "description": "Login of the assignee.",
          "in": "path",
          "name": "assignee",
          "nullable": false,
          "type": "string",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Check assignee.
You may also check to see if a particular user is an assignee for a repository.
",
      "field": "repos_by_owner_by_repo_assignees_by_assignee",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/assignees/{args.assignee}",
      "responseByStatusCode": {
        "204": {
          "responseSchema": {
            "description": "User is an assignee.",
            "title": "repos_by_owner_by_repo_assignees_by_assignee_204_response",
            "type": "null",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Get list of branches",
      "field": "repos_by_owner_by_repo_branches",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/branches",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/branches",
            "items": {
              "properties": {
                "commit": {
                  "$ref": "#/definitions/query_repos_by_owner_by_repo_branches_items_commit",
                },
                "name": {
                  "type": "string",
                },
              },
              "title": "query_repos_by_owner_by_repo_branches_items",
              "type": "object",
            },
            "title": "branches",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "branch": {
          "description": "Name of the branch.",
          "in": "path",
          "name": "branch",
          "nullable": false,
          "type": "string",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Get Branch",
      "field": "repos_by_owner_by_repo_branches_by_branch",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/branches/{args.branch}",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/branch",
            "properties": {
              "commit": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_branches_by_branch_commit",
              },
              "links": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_branches_by_branch_links",
              },
              "name": {
                "type": "string",
              },
            },
            "title": "branch",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "List.
When authenticating as an organization owner of an organization-owned
repository, all organization owners are included in the list of
collaborators. Otherwise, only users with access to the repository are
returned in the collaborators list.
",
      "field": "repos_by_owner_by_repo_collaborators",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/collaborators",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/users",
            "items": {
              "properties": {
                "avatar_url": {
                  "type": "string",
                },
                "gravatar_id": {
                  "type": "string",
                },
                "id": {
                  "type": "integer",
                },
                "login": {
                  "type": "string",
                },
                "url": {
                  "type": "string",
                },
              },
              "title": "query_orgs_by_org_members_items",
              "type": "object",
            },
            "title": "users",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
        "user": {
          "description": "Login of the user.",
          "in": "path",
          "name": "user",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Remove collaborator.",
      "field": "delete_repos_by_owner_by_repo_collaborators_by_user",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "DELETE",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/collaborators/{args.user}",
      "responseByStatusCode": {
        "204": {
          "responseSchema": {
            "description": "Collaborator removed.",
            "title": "delete_repos_by_owner_by_repo_collaborators_by_user_204_response",
            "type": "null",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
        "user": {
          "description": "Login of the user.",
          "in": "path",
          "name": "user",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Check if user is a collaborator",
      "field": "repos_by_owner_by_repo_collaborators_by_user",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/collaborators/{args.user}",
      "responseByStatusCode": {
        "204": {
          "responseSchema": {
            "description": "User is a collaborator.",
            "title": "repos_by_owner_by_repo_collaborators_by_user_204_response",
            "type": "null",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
        "user": {
          "description": "Login of the user.",
          "in": "path",
          "name": "user",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Add collaborator.",
      "field": "put_repos_by_owner_by_repo_collaborators_by_user",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "PUT",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/collaborators/{args.user}",
      "responseByStatusCode": {
        "204": {
          "responseSchema": {
            "description": "Collaborator added.",
            "title": "put_repos_by_owner_by_repo_collaborators_by_user_204_response",
            "type": "null",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "List commit comments for a repository.
Comments are ordered by ascending ID.
",
      "field": "repos_by_owner_by_repo_comments",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/comments",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/repoComments",
            "items": {
              "properties": {
                "body": {
                  "type": "string",
                },
                "commit_id": {
                  "type": "string",
                },
                "created_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "html_url": {
                  "type": "string",
                },
                "id": {
                  "type": "integer",
                },
                "line": {
                  "type": "integer",
                },
                "path": {
                  "type": "string",
                },
                "position": {
                  "type": "integer",
                },
                "updated_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "url": {
                  "type": "string",
                },
                "user": {
                  "$ref": "#/definitions/query_repos_by_owner_by_repo_comments_items_user",
                },
              },
              "title": "query_repos_by_owner_by_repo_comments_items",
              "type": "object",
            },
            "title": "repoComments",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "commentId": {
          "description": "Id of comment.",
          "in": "path",
          "name": "commentId",
          "nullable": false,
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Delete a commit comment",
      "field": "delete_repos_by_owner_by_repo_comments_by_commentId",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "DELETE",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/comments/{args.commentId}",
      "responseByStatusCode": {
        "204": {
          "responseSchema": {
            "description": "No content.",
            "title": "delete_repos_by_owner_by_repo_comments_by_commentId_204_response",
            "type": "null",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "commentId": {
          "description": "Id of comment.",
          "in": "path",
          "name": "commentId",
          "nullable": false,
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Get a single commit comment.",
      "field": "repos_by_owner_by_repo_comments_by_commentId",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/comments/{args.commentId}",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/commitComments",
            "properties": {
              "body": {
                "type": "string",
              },
              "commit_id": {
                "type": "string",
              },
              "created_at": {
                "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                "type": "string",
              },
              "html_url": {
                "type": "string",
              },
              "id": {
                "type": "integer",
              },
              "line": {
                "type": "integer",
              },
              "path": {
                "type": "string",
              },
              "position": {
                "type": "integer",
              },
              "updated_at": {
                "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                "type": "string",
              },
              "url": {
                "type": "string",
              },
              "user": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_comments_by_commentId_user",
              },
            },
            "title": "commitComments",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "body": {
          "$resolvedRef": "/definitions/commentBody",
          "description": undefined,
          "nullable": false,
          "properties": {
            "body": {
              "type": "string",
            },
          },
          "required": [
            "body",
          ],
          "title": "commentBody",
          "type": "object",
        },
        "commentId": {
          "description": "Id of comment.",
          "in": "path",
          "name": "commentId",
          "nullable": false,
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Update a commit comment.",
      "field": "patch_repos_by_owner_by_repo_comments_by_commentId",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "PATCH",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/comments/{args.commentId}",
      "requestSchema": {
        "$resolvedRef": "/definitions/commentBody",
        "description": undefined,
        "nullable": false,
        "properties": {
          "body": {
            "type": "string",
          },
        },
        "required": [
          "body",
        ],
        "title": "commentBody",
        "type": "object",
      },
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/commitComments",
            "properties": {
              "body": {
                "type": "string",
              },
              "commit_id": {
                "type": "string",
              },
              "created_at": {
                "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                "type": "string",
              },
              "html_url": {
                "type": "string",
              },
              "id": {
                "type": "integer",
              },
              "line": {
                "type": "integer",
              },
              "path": {
                "type": "string",
              },
              "position": {
                "type": "integer",
              },
              "updated_at": {
                "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                "type": "string",
              },
              "url": {
                "type": "string",
              },
              "user": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_comments_by_commentId_user",
              },
            },
            "title": "commitComments",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "author": {
          "description": "GitHub login, name, or email by which to filter by commit author.",
          "in": "query",
          "name": "author",
          "type": "string",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "path": {
          "description": "Only commits containing this file path will be returned.",
          "in": "query",
          "name": "path",
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
        "sha": {
          "description": "Sha or branch to start listing commits from.",
          "in": "query",
          "name": "sha",
          "type": "string",
        },
        "since": {
          "description": "The time should be passed in as UTC in the ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.
Example: "2012-10-09T23:39:01Z".",
          "in": "query",
          "name": "since",
          "type": "string",
        },
        "until": {
          "description": "ISO 8601 Date - Only commits before this date will be returned.",
          "in": "query",
          "name": "until",
          "type": "string",
        },
      },
      "description": "List commits on a repository.",
      "field": "repos_by_owner_by_repo_commits",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/commits",
      "queryParamArgMap": {
        "author": "author",
        "path": "path",
        "sha": "sha",
        "since": "since",
        "until": "until",
      },
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/commits",
            "items": {
              "properties": {
                "author": {
                  "$ref": "#/definitions/query_repos_by_owner_by_repo_commits_items_author",
                },
                "commit": {
                  "$ref": "#/definitions/query_repos_by_owner_by_repo_commits_items_commit",
                },
                "committer": {
                  "$ref": "#/definitions/query_repos_by_owner_by_repo_commits_items_committer",
                },
                "parents": {
                  "items": {
                    "$ref": "#/definitions/query_repos_by_owner_by_repo_commits_items_parents_items",
                  },
                  "type": "array",
                },
                "sha": {
                  "type": "string",
                },
                "url": {
                  "type": "string",
                },
              },
              "title": "query_repos_by_owner_by_repo_commits_items",
              "type": "object",
            },
            "title": "commits",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "ref": {
          "description": undefined,
          "in": "path",
          "name": "ref",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Get the combined Status for a specific Ref
The Combined status endpoint is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the blog post for full details.
To access this endpoint during the preview period, you must provide a custom media type in the Accept header:
application/vnd.github.she-hulk-preview+json
",
      "field": "repos_by_owner_by_repo_commits_by_ref_status",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/commits/{args.ref}/status",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/refStatus",
            "items": {
              "properties": {
                "commit_url": {
                  "type": "string",
                },
                "name": {
                  "type": "string",
                },
                "repository_url": {
                  "type": "string",
                },
                "sha": {
                  "type": "string",
                },
                "state": {
                  "type": "string",
                },
                "statuses": {
                  "items": {
                    "$ref": "#/definitions/query_repos_by_owner_by_repo_commits_by_ref_status_items_statuses_items",
                  },
                  "type": "array",
                },
              },
              "title": "query_repos_by_owner_by_repo_commits_by_ref_status_items",
              "type": "object",
            },
            "title": "refStatus",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
        "shaCode": {
          "description": "SHA-1 code of the commit.",
          "in": "path",
          "name": "shaCode",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Get a single commit.",
      "field": "repos_by_owner_by_repo_commits_by_shaCode",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/commits/{args.shaCode}",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/commit",
            "properties": {
              "author": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_commits_by_shaCode_author",
              },
              "commit": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_commits_by_shaCode_commit",
              },
              "committer": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_commits_by_shaCode_committer",
              },
              "files": {
                "items": {
                  "$ref": "#/definitions/query_repos_by_owner_by_repo_commits_by_shaCode_files_items",
                },
                "type": "array",
              },
              "parents": {
                "items": {
                  "$ref": "#/definitions/query_repos_by_owner_by_repo_commits_by_shaCode_parents_items",
                },
                "type": "array",
              },
              "sha": {
                "type": "string",
              },
              "stats": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_commits_by_shaCode_stats",
              },
              "url": {
                "type": "string",
              },
            },
            "title": "commit",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
        "shaCode": {
          "description": "SHA-1 code of the commit.",
          "in": "path",
          "name": "shaCode",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "List comments for a single commitList comments for a single commit.",
      "field": "repos_by_owner_by_repo_commits_by_shaCode_comments",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/commits/{args.shaCode}/comments",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/repoComments",
            "items": {
              "properties": {
                "body": {
                  "type": "string",
                },
                "commit_id": {
                  "type": "string",
                },
                "created_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "html_url": {
                  "type": "string",
                },
                "id": {
                  "type": "integer",
                },
                "line": {
                  "type": "integer",
                },
                "path": {
                  "type": "string",
                },
                "position": {
                  "type": "integer",
                },
                "updated_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "url": {
                  "type": "string",
                },
                "user": {
                  "$ref": "#/definitions/query_repos_by_owner_by_repo_comments_items_user",
                },
              },
              "title": "query_repos_by_owner_by_repo_comments_items",
              "type": "object",
            },
            "title": "repoComments",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "body": {
          "$resolvedRef": "/definitions/commitBody",
          "description": undefined,
          "nullable": false,
          "properties": {
            "body": {
              "type": "string",
            },
            "line": {
              "description": "Deprecated - Use position parameter instead.",
              "type": "string",
            },
            "number": {
              "description": "Line number in the file to comment on. Defaults to null.",
              "type": "string",
            },
            "path": {
              "description": "Relative path of the file to comment on.",
              "type": "string",
            },
            "position": {
              "description": "Line index in the diff to comment on.",
              "type": "integer",
            },
            "sha": {
              "description": "SHA of the commit to comment on.",
              "type": "string",
            },
          },
          "required": [
            "sha",
            "body",
          ],
          "title": "commitBody",
          "type": "object",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
        "shaCode": {
          "description": "SHA-1 code of the commit.",
          "in": "path",
          "name": "shaCode",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Create a commit comment.",
      "field": "post_repos_by_owner_by_repo_commits_by_shaCode_comments",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "POST",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/commits/{args.shaCode}/comments",
      "requestSchema": {
        "$resolvedRef": "/definitions/commitBody",
        "description": undefined,
        "nullable": false,
        "properties": {
          "body": {
            "type": "string",
          },
          "line": {
            "description": "Deprecated - Use position parameter instead.",
            "type": "string",
          },
          "number": {
            "description": "Line number in the file to comment on. Defaults to null.",
            "type": "string",
          },
          "path": {
            "description": "Relative path of the file to comment on.",
            "type": "string",
          },
          "position": {
            "description": "Line index in the diff to comment on.",
            "type": "integer",
          },
          "sha": {
            "description": "SHA of the commit to comment on.",
            "type": "string",
          },
        },
        "required": [
          "sha",
          "body",
        ],
        "title": "commitBody",
        "type": "object",
      },
      "responseByStatusCode": {
        "201": {
          "responseSchema": {
            "$resolvedRef": "/definitions/commitComments",
            "properties": {
              "body": {
                "type": "string",
              },
              "commit_id": {
                "type": "string",
              },
              "created_at": {
                "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                "type": "string",
              },
              "html_url": {
                "type": "string",
              },
              "id": {
                "type": "integer",
              },
              "line": {
                "type": "integer",
              },
              "path": {
                "type": "string",
              },
              "position": {
                "type": "integer",
              },
              "updated_at": {
                "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                "type": "string",
              },
              "url": {
                "type": "string",
              },
              "user": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_comments_by_commentId_user",
              },
            },
            "title": "commitComments",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "baseId": {
          "description": undefined,
          "in": "path",
          "name": "baseId",
          "nullable": false,
          "type": "string",
        },
        "headId": {
          "description": undefined,
          "in": "path",
          "name": "headId",
          "nullable": false,
          "type": "string",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Compare two commits",
      "field": "repos_by_owner_by_repo_compare_by_baseId___by_headId",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/compare/{args.baseId}...{args.headId}",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/compare-commits",
            "properties": {
              "ahead_by": {
                "type": "integer",
              },
              "base_commit": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_compare_by_baseId___by_headId_base_commit",
              },
              "behind_by": {
                "type": "integer",
              },
              "commits": {
                "items": {
                  "$ref": "#/definitions/query_repos_by_owner_by_repo_compare_by_baseId___by_headId_commits_items",
                },
                "type": "array",
              },
              "diff_url": {
                "type": "string",
              },
              "files": {
                "items": {
                  "$ref": "#/definitions/query_repos_by_owner_by_repo_compare_by_baseId___by_headId_files_items",
                },
                "type": "array",
              },
              "html_url": {
                "type": "string",
              },
              "patch_url": {
                "type": "string",
              },
              "permalink_url": {
                "type": "string",
              },
              "status": {
                "type": "string",
              },
              "total_commits": {
                "type": "integer",
              },
              "url": {
                "type": "string",
              },
            },
            "title": "compare-commits",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "body": {
          "$resolvedRef": "/definitions/deleteFileBody",
          "description": undefined,
          "nullable": false,
          "properties": {
            "committer": {
              "$ref": "#/definitions/mutationInput_delete_repos_by_owner_by_repo_contents_by_path_input_committer",
            },
            "message": {
              "type": "string",
            },
            "sha": {
              "type": "string",
            },
          },
          "title": "deleteFileBody",
          "type": "object",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "path": {
          "description": undefined,
          "in": "path",
          "name": "path",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Delete a file.
This method deletes a file in a repository.
",
      "field": "delete_repos_by_owner_by_repo_contents_by_path",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "DELETE",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/contents/{args.path}",
      "requestSchema": {
        "$resolvedRef": "/definitions/deleteFileBody",
        "description": undefined,
        "nullable": false,
        "properties": {
          "committer": {
            "$ref": "#/definitions/mutationInput_delete_repos_by_owner_by_repo_contents_by_path_input_committer",
          },
          "message": {
            "type": "string",
          },
          "sha": {
            "type": "string",
          },
        },
        "title": "deleteFileBody",
        "type": "object",
      },
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/deleteFile",
            "properties": {
              "commit": {
                "$ref": "#/definitions/mutation_delete_repos_by_owner_by_repo_contents_by_path_commit",
              },
              "content": {
                "type": "string",
              },
            },
            "title": "deleteFile",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "path": {
          "description": "The content path.",
          "in": "query",
          "name": "path",
          "type": "string",
        },
        "ref": {
          "description": "The String name of the Commit/Branch/Tag. Defaults to 'master'.",
          "in": "query",
          "name": "ref",
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Get contents.
This method returns the contents of a file or directory in a repository.
Files and symlinks support a custom media type for getting the raw content.
Directories and submodules do not support custom media types.
Note: This API supports files up to 1 megabyte in size.
Here can be many outcomes. For details see "http://developer.github.com/v3/repos/contents/"
",
      "field": "repos_by_owner_by_repo_contents_by_path",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/contents/{args.path}",
      "queryParamArgMap": {
        "path": "path",
        "ref": "ref",
      },
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/contents-path",
            "properties": {
              "content": {
                "type": "string",
              },
              "encoding": {
                "type": "string",
              },
              "git_url": {
                "type": "string",
              },
              "html_url": {
                "type": "string",
              },
              "links": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_contents_by_path_links",
              },
              "name": {
                "type": "string",
              },
              "path": {
                "type": "string",
              },
              "sha": {
                "type": "string",
              },
              "size": {
                "type": "integer",
              },
              "type": {
                "type": "string",
              },
              "url": {
                "type": "string",
              },
            },
            "title": "contents-path",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "body": {
          "$resolvedRef": "/definitions/createFileBody",
          "description": undefined,
          "nullable": false,
          "properties": {
            "committer": {
              "$ref": "#/definitions/mutationInput_put_repos_by_owner_by_repo_contents_by_path_input_committer",
            },
            "content": {
              "type": "string",
            },
            "message": {
              "type": "string",
            },
          },
          "title": "createFileBody",
          "type": "object",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "path": {
          "description": undefined,
          "in": "path",
          "name": "path",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Create a file.",
      "field": "put_repos_by_owner_by_repo_contents_by_path",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "PUT",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/contents/{args.path}",
      "requestSchema": {
        "$resolvedRef": "/definitions/createFileBody",
        "description": undefined,
        "nullable": false,
        "properties": {
          "committer": {
            "$ref": "#/definitions/mutationInput_put_repos_by_owner_by_repo_contents_by_path_input_committer",
          },
          "content": {
            "type": "string",
          },
          "message": {
            "type": "string",
          },
        },
        "title": "createFileBody",
        "type": "object",
      },
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/createFile",
            "properties": {
              "commit": {
                "$ref": "#/definitions/mutation_put_repos_by_owner_by_repo_contents_by_path_commit",
              },
              "content": {
                "$ref": "#/definitions/mutation_put_repos_by_owner_by_repo_contents_by_path_content",
              },
            },
            "title": "createFile",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "anon": {
          "description": "Set to 1 or true to include anonymous contributors in results.",
          "in": "query",
          "name": "anon",
          "nullable": false,
          "type": "string",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Get list of contributors.",
      "field": "repos_by_owner_by_repo_contributors",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/contributors",
      "queryParamArgMap": {
        "anon": "anon",
      },
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/contributors",
            "items": {
              "properties": {
                "avatar_url": {
                  "type": "string",
                },
                "contributions": {
                  "type": "integer",
                },
                "gravatar_id": {
                  "type": "string",
                },
                "id": {
                  "type": "integer",
                },
                "login": {
                  "type": "string",
                },
                "url": {
                  "type": "string",
                },
              },
              "title": "query_repos_by_owner_by_repo_contributors_items",
              "type": "object",
            },
            "title": "contributors",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Users with pull access can view deployments for a repository",
      "field": "repos_by_owner_by_repo_deployments",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/deployments",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/repo-deployments",
            "items": {
              "properties": {
                "created_at": {
                  "type": "string",
                },
                "creator": {
                  "$ref": "#/definitions/query_repos_by_owner_by_repo_deployments_items_creator",
                },
                "description": {
                  "type": "string",
                },
                "id": {
                  "type": "integer",
                },
                "payload": {
                  "type": "string",
                },
                "sha": {
                  "type": "string",
                },
                "statuses_url": {
                  "type": "string",
                },
                "updated_at": {
                  "type": "string",
                },
                "url": {
                  "type": "string",
                },
              },
              "title": "query_repos_by_owner_by_repo_deployments_items",
              "type": "object",
            },
            "title": "repo-deployments",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "body": {
          "$resolvedRef": "/definitions/deployment",
          "description": undefined,
          "nullable": false,
          "properties": {
            "description": {
              "type": "string",
            },
            "payload": {
              "$ref": "#/definitions/mutationInput_post_repos_by_owner_by_repo_deployments_input_payload",
            },
            "ref": {
              "type": "string",
            },
          },
          "title": "deployment",
          "type": "object",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Users with push access can create a deployment for a given ref",
      "field": "post_repos_by_owner_by_repo_deployments",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "POST",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/deployments",
      "requestSchema": {
        "$resolvedRef": "/definitions/deployment",
        "description": undefined,
        "nullable": false,
        "properties": {
          "description": {
            "type": "string",
          },
          "payload": {
            "$ref": "#/definitions/mutationInput_post_repos_by_owner_by_repo_deployments_input_payload",
          },
          "ref": {
            "type": "string",
          },
        },
        "title": "deployment",
        "type": "object",
      },
      "responseByStatusCode": {
        "201": {
          "responseSchema": {
            "$resolvedRef": "/definitions/deployment-resp",
            "properties": {
              "created_at": {
                "type": "string",
              },
              "creator": {
                "$ref": "#/definitions/mutation_post_repos_by_owner_by_repo_deployments_creator",
              },
              "description": {
                "type": "string",
              },
              "id": {
                "type": "integer",
              },
              "payload": {
                "type": "string",
              },
              "sha": {
                "type": "string",
              },
              "statuses_url": {
                "type": "string",
              },
              "updated_at": {
                "type": "string",
              },
              "url": {
                "type": "string",
              },
            },
            "title": "deployment-resp",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "id": {
          "description": "The Deployment ID to list the statuses from.",
          "in": "path",
          "name": "id",
          "nullable": false,
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Users with pull access can view deployment statuses for a deployment",
      "field": "repos_by_owner_by_repo_deployments_by_id_statuses",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/deployments/{args.id}/statuses",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/deployment-statuses",
            "items": {
              "properties": {
                "created_at": {
                  "type": "string",
                },
                "creator": {
                  "$ref": "#/definitions/query_repos_by_owner_by_repo_deployments_by_id_statuses_items_creator",
                },
                "description": {
                  "type": "string",
                },
                "id": {
                  "type": "integer",
                },
                "payload": {
                  "type": "string",
                },
                "state": {
                  "type": "string",
                },
                "target_url": {
                  "type": "string",
                },
                "updated_at": {
                  "type": "string",
                },
                "url": {
                  "type": "string",
                },
              },
              "title": "query_repos_by_owner_by_repo_deployments_by_id_statuses_items",
              "type": "object",
            },
            "title": "deployment-statuses",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "body": {
          "$resolvedRef": "/definitions/deployment-statuses-create",
          "description": undefined,
          "nullable": false,
          "properties": {
            "description": {
              "type": "string",
            },
            "state": {
              "type": "string",
            },
            "target_url": {
              "type": "string",
            },
          },
          "title": "deployment-statuses-create",
          "type": "object",
        },
        "id": {
          "description": "The Deployment ID to list the statuses from.",
          "in": "path",
          "name": "id",
          "nullable": false,
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Create a Deployment Status
Users with push access can create deployment statuses for a given deployment:
",
      "field": "post_repos_by_owner_by_repo_deployments_by_id_statuses",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "POST",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/deployments/{args.id}/statuses",
      "requestSchema": {
        "$resolvedRef": "/definitions/deployment-statuses-create",
        "description": undefined,
        "nullable": false,
        "properties": {
          "description": {
            "type": "string",
          },
          "state": {
            "type": "string",
          },
          "target_url": {
            "type": "string",
          },
        },
        "title": "deployment-statuses-create",
        "type": "object",
      },
      "responseByStatusCode": {},
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Deprecated. List downloads for a repository.",
      "field": "repos_by_owner_by_repo_downloads",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/downloads",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/downloads",
            "properties": {
              "content_type": {
                "type": "string",
              },
              "description": {
                "type": "string",
              },
              "download_count": {
                "type": "integer",
              },
              "html_url": {
                "type": "string",
              },
              "id": {
                "type": "integer",
              },
              "name": {
                "type": "string",
              },
              "size": {
                "type": "integer",
              },
              "url": {
                "type": "string",
              },
            },
            "title": "downloads",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "downloadId": {
          "description": "Id of download.",
          "in": "path",
          "name": "downloadId",
          "nullable": false,
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Deprecated. Delete a download.",
      "field": "delete_repos_by_owner_by_repo_downloads_by_downloadId",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "DELETE",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/downloads/{args.downloadId}",
      "responseByStatusCode": {
        "204": {
          "responseSchema": {
            "description": "No content.",
            "title": "delete_repos_by_owner_by_repo_downloads_by_downloadId_204_response",
            "type": "null",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "downloadId": {
          "description": "Id of download.",
          "in": "path",
          "name": "downloadId",
          "nullable": false,
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Deprecated. Get a single download.",
      "field": "repos_by_owner_by_repo_downloads_by_downloadId",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/downloads/{args.downloadId}",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/downloads",
            "properties": {
              "content_type": {
                "type": "string",
              },
              "description": {
                "type": "string",
              },
              "download_count": {
                "type": "integer",
              },
              "html_url": {
                "type": "string",
              },
              "id": {
                "type": "integer",
              },
              "name": {
                "type": "string",
              },
              "size": {
                "type": "integer",
              },
              "url": {
                "type": "string",
              },
            },
            "title": "downloads",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Get list of repository events.",
      "field": "repos_by_owner_by_repo_events",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/events",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/events",
            "properties": {
              "actor": {
                "$ref": "#/definitions/query_events_actor",
              },
              "created_at": {
                "type": "object",
              },
              "id": {
                "type": "integer",
              },
              "org": {
                "$ref": "#/definitions/query_events_org",
              },
              "payload": {
                "$ref": "#/definitions/query_events_payload",
              },
              "public": {
                "type": "boolean",
              },
              "repo": {
                "$ref": "#/definitions/query_events_repo",
              },
              "type": {
                "type": "string",
              },
            },
            "title": "events",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
        "sort": {
          "default": "newes",
          "description": undefined,
          "enum": [
            "newes",
            "oldes",
            "watchers",
          ],
          "in": "query",
          "name": "sort",
          "title": "queryInput_repos_by_owner_by_repo_forks_sort",
          "type": "string",
        },
      },
      "description": "List forks.",
      "field": "repos_by_owner_by_repo_forks",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/forks",
      "queryParamArgMap": {
        "sort": "sort",
      },
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/forks",
            "items": {
              "properties": {
                "clone_url": {
                  "type": "string",
                },
                "created_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "description": {
                  "type": "string",
                },
                "fork": {
                  "type": "boolean",
                },
                "forks": {
                  "type": "integer",
                },
                "forks_count": {
                  "type": "integer",
                },
                "full_name": {
                  "type": "string",
                },
                "git_url": {
                  "type": "string",
                },
                "homepage": {
                  "type": "string",
                },
                "html_url": {
                  "type": "string",
                },
                "id": {
                  "type": "integer",
                },
                "language": {
                  "type": "string",
                },
                "master_branch": {
                  "type": "string",
                },
                "mirror_url": {
                  "type": "string",
                },
                "name": {
                  "type": "string",
                },
                "open_issues": {
                  "type": "integer",
                },
                "open_issues_count": {
                  "type": "integer",
                },
                "owner": {
                  "$ref": "#/definitions/query_repos_by_owner_by_repo_forks_items_owner",
                },
                "private": {
                  "type": "boolean",
                },
                "pushed_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "size": {
                  "type": "integer",
                },
                "ssh_url": {
                  "type": "string",
                },
                "svn_url": {
                  "type": "string",
                },
                "updated_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "url": {
                  "type": "string",
                },
                "watchers": {
                  "type": "integer",
                },
                "watchers_count": {
                  "type": "integer",
                },
              },
              "title": "query_repos_by_owner_by_repo_forks_items",
              "type": "object",
            },
            "title": "forks",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "body": {
          "$resolvedRef": "/definitions/forkBody",
          "description": undefined,
          "nullable": false,
          "properties": {
            "organization": {
              "type": "string",
            },
          },
          "title": "forkBody",
          "type": "object",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Create a fork.
Forking a Repository happens asynchronously. Therefore, you may have to wai
a short period before accessing the git objects. If this takes longer than 5
minutes, be sure to contact Support.
",
      "field": "post_repos_by_owner_by_repo_forks",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "POST",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/forks",
      "requestSchema": {
        "$resolvedRef": "/definitions/forkBody",
        "description": undefined,
        "nullable": false,
        "properties": {
          "organization": {
            "type": "string",
          },
        },
        "title": "forkBody",
        "type": "object",
      },
      "responseByStatusCode": {
        "201": {
          "responseSchema": {
            "$resolvedRef": "/definitions/fork",
            "properties": {
              "clone_url": {
                "type": "string",
              },
              "created_at": {
                "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                "type": "string",
              },
              "description": {
                "type": "string",
              },
              "fork": {
                "type": "boolean",
              },
              "forks": {
                "type": "integer",
              },
              "forks_count": {
                "type": "integer",
              },
              "full_name": {
                "type": "string",
              },
              "git_url": {
                "type": "string",
              },
              "homepage": {
                "type": "string",
              },
              "html_url": {
                "type": "string",
              },
              "id": {
                "type": "integer",
              },
              "language": {
                "type": "string",
              },
              "master_branch": {
                "type": "string",
              },
              "mirror_url": {
                "type": "string",
              },
              "name": {
                "type": "string",
              },
              "open_issues": {
                "type": "integer",
              },
              "open_issues_count": {
                "type": "integer",
              },
              "owner": {
                "$ref": "#/definitions/mutation_post_repos_by_owner_by_repo_forks_owner",
              },
              "private": {
                "type": "boolean",
              },
              "pushed_at": {
                "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                "type": "string",
              },
              "size": {
                "type": "integer",
              },
              "ssh_url": {
                "type": "string",
              },
              "svn_url": {
                "type": "string",
              },
              "updated_at": {
                "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                "type": "string",
              },
              "url": {
                "type": "string",
              },
              "watchers": {
                "type": "integer",
              },
              "watchers_count": {
                "type": "integer",
              },
            },
            "title": "fork",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "body": {
          "$resolvedRef": "/definitions/blob",
          "description": undefined,
          "nullable": false,
          "properties": {
            "content": {
              "type": "string",
            },
            "encoding": {
              "$ref": "#/definitions/query_repos_by_owner_by_repo_git_blobs_by_shaCode_encoding",
            },
            "sha": {
              "type": "string",
            },
            "size": {
              "type": "integer",
            },
          },
          "title": "blob",
          "type": "object",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Create a Blob.",
      "field": "post_repos_by_owner_by_repo_git_blobs",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "POST",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/git/blobs",
      "requestSchema": {
        "$resolvedRef": "/definitions/blob",
        "description": undefined,
        "nullable": false,
        "properties": {
          "content": {
            "type": "string",
          },
          "encoding": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_git_blobs_by_shaCode_encoding",
          },
          "sha": {
            "type": "string",
          },
          "size": {
            "type": "integer",
          },
        },
        "title": "blob",
        "type": "object",
      },
      "responseByStatusCode": {
        "201": {
          "responseSchema": {
            "$resolvedRef": "/definitions/blobs",
            "properties": {
              "sha": {
                "type": "string",
              },
            },
            "title": "blobs",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
        "shaCode": {
          "description": "SHA-1 code.",
          "in": "path",
          "name": "shaCode",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Get a Blob.
Since blobs can be any arbitrary binary data, the input and responses for
the blob API takes an encoding parameter that can be either utf-8 or
base64. If your data cannot be losslessly sent as a UTF-8 string, you can
base64 encode it.
",
      "field": "repos_by_owner_by_repo_git_blobs_by_shaCode",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/git/blobs/{args.shaCode}",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/blob",
            "description": undefined,
            "nullable": false,
            "properties": {
              "content": {
                "type": "string",
              },
              "encoding": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_git_blobs_by_shaCode_encoding",
              },
              "sha": {
                "type": "string",
              },
              "size": {
                "type": "integer",
              },
            },
            "title": "blob",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "body": {
          "$resolvedRef": "/definitions/repoCommitBody",
          "description": undefined,
          "nullable": false,
          "properties": {
            "author": {
              "$ref": "#/definitions/mutationInput_post_repos_by_owner_by_repo_git_commits_input_author",
            },
            "message": {
              "type": "string",
            },
            "parents": {
              "items": {
                "type": "string",
              },
              "type": "array",
            },
            "tree": {
              "type": "string",
            },
          },
          "required": [
            "message",
            "parents",
            "tree",
          ],
          "title": "repoCommitBody",
          "type": "object",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Create a Commit.",
      "field": "post_repos_by_owner_by_repo_git_commits",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "POST",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/git/commits",
      "requestSchema": {
        "$resolvedRef": "/definitions/repoCommitBody",
        "description": undefined,
        "nullable": false,
        "properties": {
          "author": {
            "$ref": "#/definitions/mutationInput_post_repos_by_owner_by_repo_git_commits_input_author",
          },
          "message": {
            "type": "string",
          },
          "parents": {
            "items": {
              "type": "string",
            },
            "type": "array",
          },
          "tree": {
            "type": "string",
          },
        },
        "required": [
          "message",
          "parents",
          "tree",
        ],
        "title": "repoCommitBody",
        "type": "object",
      },
      "responseByStatusCode": {
        "201": {
          "responseSchema": {
            "$resolvedRef": "/definitions/gitCommit",
            "properties": {
              "author": {
                "$ref": "#/definitions/mutation_post_repos_by_owner_by_repo_git_commits_author",
              },
              "message": {
                "type": "string",
              },
              "parents": {
                "type": "string",
              },
              "tree": {
                "type": "string",
              },
            },
            "title": "gitCommit",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
        "shaCode": {
          "description": "SHA-1 code.",
          "in": "path",
          "name": "shaCode",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Get a Commit.",
      "field": "repos_by_owner_by_repo_git_commits_by_shaCode",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/git/commits/{args.shaCode}",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/repoCommit",
            "properties": {
              "author": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_git_commits_by_shaCode_author",
              },
              "committer": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_git_commits_by_shaCode_committer",
              },
              "message": {
                "type": "string",
              },
              "parents": {
                "items": {
                  "$ref": "#/definitions/query_repos_by_owner_by_repo_git_commits_by_shaCode_parents_items",
                },
                "type": "array",
              },
              "sha": {
                "type": "string",
              },
              "tree": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_git_commits_by_shaCode_tree",
              },
              "url": {
                "type": "string",
              },
            },
            "title": "repoCommit",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Get all References",
      "field": "repos_by_owner_by_repo_git_refs",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/git/refs",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/refs",
            "items": {
              "properties": {
                "object": {
                  "$ref": "#/definitions/query_repos_by_owner_by_repo_git_refs_items_object",
                },
                "ref": {
                  "type": "string",
                },
                "url": {
                  "type": "string",
                },
              },
              "title": "query_repos_by_owner_by_repo_git_refs_items",
              "type": "object",
            },
            "title": "refs",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "body": {
          "$resolvedRef": "/definitions/refsBody",
          "description": undefined,
          "nullable": false,
          "properties": {
            "ref": {
              "type": "string",
            },
            "sha": {
              "type": "string",
            },
          },
          "title": "refsBody",
          "type": "object",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Create a Reference",
      "field": "post_repos_by_owner_by_repo_git_refs",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "POST",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/git/refs",
      "requestSchema": {
        "$resolvedRef": "/definitions/refsBody",
        "description": undefined,
        "nullable": false,
        "properties": {
          "ref": {
            "type": "string",
          },
          "sha": {
            "type": "string",
          },
        },
        "title": "refsBody",
        "type": "object",
      },
      "responseByStatusCode": {
        "201": {
          "responseSchema": {
            "$resolvedRef": "/definitions/headBranch",
            "description": undefined,
            "nullable": false,
            "properties": {
              "object": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_git_refs_by_ref_object",
              },
              "ref": {
                "type": "string",
              },
              "url": {
                "type": "string",
              },
            },
            "title": "headBranch",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "ref": {
          "description": undefined,
          "in": "path",
          "name": "ref",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Delete a Reference
Example: Deleting a branch: DELETE /repos/octocat/Hello-World/git/refs/heads/feature-a 
Example: Deleting a tag:        DELETE /repos/octocat/Hello-World/git/refs/tags/v1.0
",
      "field": "delete_repos_by_owner_by_repo_git_refs_by_ref",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "DELETE",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/git/refs/{args.ref}",
      "responseByStatusCode": {
        "204": {
          "responseSchema": {
            "description": "No Content",
            "title": "delete_repos_by_owner_by_repo_git_refs_by_ref_204_response",
            "type": "null",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "ref": {
          "description": undefined,
          "in": "path",
          "name": "ref",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Get a Reference",
      "field": "repos_by_owner_by_repo_git_refs_by_ref",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/git/refs/{args.ref}",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/headBranch",
            "description": undefined,
            "nullable": false,
            "properties": {
              "object": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_git_refs_by_ref_object",
              },
              "ref": {
                "type": "string",
              },
              "url": {
                "type": "string",
              },
            },
            "title": "headBranch",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "body": {
          "$resolvedRef": "/definitions/gitRefPatch",
          "description": undefined,
          "nullable": false,
          "properties": {
            "force": {
              "type": "boolean",
            },
            "sha": {
              "type": "string",
            },
          },
          "title": "gitRefPatch",
          "type": "object",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "ref": {
          "description": undefined,
          "in": "path",
          "name": "ref",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Update a Reference",
      "field": "patch_repos_by_owner_by_repo_git_refs_by_ref",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "PATCH",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/git/refs/{args.ref}",
      "requestSchema": {
        "$resolvedRef": "/definitions/gitRefPatch",
        "description": undefined,
        "nullable": false,
        "properties": {
          "force": {
            "type": "boolean",
          },
          "sha": {
            "type": "string",
          },
        },
        "title": "gitRefPatch",
        "type": "object",
      },
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/headBranch",
            "description": undefined,
            "nullable": false,
            "properties": {
              "object": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_git_refs_by_ref_object",
              },
              "ref": {
                "type": "string",
              },
              "url": {
                "type": "string",
              },
            },
            "title": "headBranch",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "body": {
          "$resolvedRef": "/definitions/tag",
          "description": undefined,
          "nullable": false,
          "properties": {
            "message": {
              "type": "string",
            },
            "object": {
              "$ref": "#/definitions/query_repos_by_owner_by_repo_git_tags_by_shaCode_object",
            },
            "sha": {
              "type": "string",
            },
            "tag": {
              "type": "string",
            },
            "tagger": {
              "$ref": "#/definitions/query_repos_by_owner_by_repo_git_tags_by_shaCode_tagger",
            },
            "url": {
              "type": "string",
            },
          },
          "title": "tag",
          "type": "object",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Create a Tag Object.
Note that creating a tag object does not create the reference that makes a
tag in Git. If you want to create an annotated tag in Git, you have to do
this call to create the tag object, and then create the refs/tags/[tag]
reference. If you want to create a lightweight tag, you only have to create
the tag reference - this call would be unnecessary.
",
      "field": "post_repos_by_owner_by_repo_git_tags",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "POST",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/git/tags",
      "requestSchema": {
        "$resolvedRef": "/definitions/tag",
        "description": undefined,
        "nullable": false,
        "properties": {
          "message": {
            "type": "string",
          },
          "object": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_git_tags_by_shaCode_object",
          },
          "sha": {
            "type": "string",
          },
          "tag": {
            "type": "string",
          },
          "tagger": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_git_tags_by_shaCode_tagger",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "tag",
        "type": "object",
      },
      "responseByStatusCode": {
        "201": {
          "responseSchema": {
            "$resolvedRef": "/definitions/tags",
            "properties": {
              "message": {
                "description": "String of the tag message.",
                "type": "string",
              },
              "object": {
                "description": "String of the SHA of the git object this is tagging.",
                "type": "string",
              },
              "tag": {
                "type": "string",
              },
              "tagger": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_tags_tagger",
              },
              "type": {
                "description": "String of the type of the object we’re tagging. Normally this is a commit but it can also be a tree or a blob.",
                "type": "string",
              },
            },
            "required": [
              "tag",
              "message",
              "object",
              "type",
              "tagger",
            ],
            "title": "tags",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
        "shaCode": {
          "description": undefined,
          "in": "path",
          "name": "shaCode",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Get a Tag.",
      "field": "repos_by_owner_by_repo_git_tags_by_shaCode",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/git/tags/{args.shaCode}",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/tag",
            "description": undefined,
            "nullable": false,
            "properties": {
              "message": {
                "type": "string",
              },
              "object": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_git_tags_by_shaCode_object",
              },
              "sha": {
                "type": "string",
              },
              "tag": {
                "type": "string",
              },
              "tagger": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_git_tags_by_shaCode_tagger",
              },
              "url": {
                "type": "string",
              },
            },
            "title": "tag",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "body": {
          "$resolvedRef": "/definitions/tree",
          "description": undefined,
          "nullable": false,
          "properties": {
            "sha": {
              "type": "string",
            },
            "tree": {
              "items": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_git_trees_by_shaCode_tree_items",
              },
              "type": "array",
            },
            "url": {
              "type": "string",
            },
          },
          "title": "tree",
          "type": "object",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Create a Tree.
The tree creation API will take nested entries as well. If both a tree and
a nested path modifying that tree are specified, it will overwrite the
contents of that tree with the new path contents and write a new tree out.
",
      "field": "post_repos_by_owner_by_repo_git_trees",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "POST",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/git/trees",
      "requestSchema": {
        "$resolvedRef": "/definitions/tree",
        "description": undefined,
        "nullable": false,
        "properties": {
          "sha": {
            "type": "string",
          },
          "tree": {
            "items": {
              "$ref": "#/definitions/query_repos_by_owner_by_repo_git_trees_by_shaCode_tree_items",
            },
            "type": "array",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "tree",
        "type": "object",
      },
      "responseByStatusCode": {
        "201": {
          "responseSchema": {
            "$resolvedRef": "/definitions/trees",
            "properties": {
              "base_tree": {
                "type": "string",
              },
              "sha": {
                "description": "SHA1 checksum ID of the object in the tree.",
                "type": "string",
              },
              "tree": {
                "items": {
                  "$ref": "#/definitions/mutation_post_repos_by_owner_by_repo_git_trees_tree_items",
                },
                "type": "array",
              },
              "url": {
                "type": "string",
              },
            },
            "title": "trees",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "recursive": {
          "description": "Get a Tree Recursively. (0 or 1)",
          "in": "query",
          "name": "recursive",
          "type": "integer",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
        "shaCode": {
          "description": "Tree SHA.",
          "in": "path",
          "name": "shaCode",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Get a Tree.",
      "field": "repos_by_owner_by_repo_git_trees_by_shaCode",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/git/trees/{args.shaCode}",
      "queryParamArgMap": {
        "recursive": "recursive",
      },
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/tree",
            "description": undefined,
            "nullable": false,
            "properties": {
              "sha": {
                "type": "string",
              },
              "tree": {
                "items": {
                  "$ref": "#/definitions/query_repos_by_owner_by_repo_git_trees_by_shaCode_tree_items",
                },
                "type": "array",
              },
              "url": {
                "type": "string",
              },
            },
            "title": "tree",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Get list of hooks.",
      "field": "repos_by_owner_by_repo_hooks",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/hooks",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/hook",
            "items": {
              "properties": {
                "active": {
                  "type": "boolean",
                },
                "config": {
                  "$ref": "#/definitions/query_repos_by_owner_by_repo_hooks_items_config",
                },
                "created_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "events": {
                  "items": {
                    "$ref": "#/definitions/query_repos_by_owner_by_repo_hooks_items_events_items",
                  },
                  "type": "array",
                },
                "id": {
                  "type": "integer",
                },
                "name": {
                  "type": "string",
                },
                "updated_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "url": {
                  "type": "string",
                },
              },
              "title": "query_repos_by_owner_by_repo_hooks_items",
              "type": "object",
            },
            "title": "hook",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "body": {
          "$resolvedRef": "/definitions/hookBody",
          "description": undefined,
          "nullable": false,
          "properties": {
            "active": {
              "type": "boolean",
            },
            "add_events": {
              "items": {
                "type": "string",
              },
              "type": "array",
            },
          },
          "title": "hookBody",
          "type": "object",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Create a hook.",
      "field": "post_repos_by_owner_by_repo_hooks",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "POST",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/hooks",
      "requestSchema": {
        "$resolvedRef": "/definitions/hookBody",
        "description": undefined,
        "nullable": false,
        "properties": {
          "active": {
            "type": "boolean",
          },
          "add_events": {
            "items": {
              "type": "string",
            },
            "type": "array",
          },
        },
        "title": "hookBody",
        "type": "object",
      },
      "responseByStatusCode": {
        "201": {
          "responseSchema": {
            "$resolvedRef": "/definitions/hook",
            "items": {
              "properties": {
                "active": {
                  "type": "boolean",
                },
                "config": {
                  "$ref": "#/definitions/query_repos_by_owner_by_repo_hooks_items_config",
                },
                "created_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "events": {
                  "items": {
                    "$ref": "#/definitions/query_repos_by_owner_by_repo_hooks_items_events_items",
                  },
                  "type": "array",
                },
                "id": {
                  "type": "integer",
                },
                "name": {
                  "type": "string",
                },
                "updated_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "url": {
                  "type": "string",
                },
              },
              "title": "query_repos_by_owner_by_repo_hooks_items",
              "type": "object",
            },
            "title": "hook",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "hookId": {
          "description": "Id of hook.",
          "in": "path",
          "name": "hookId",
          "nullable": false,
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Delete a hook.",
      "field": "delete_repos_by_owner_by_repo_hooks_by_hookId",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "DELETE",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/hooks/{args.hookId}",
      "responseByStatusCode": {
        "204": {
          "responseSchema": {
            "description": "No content.",
            "title": "delete_repos_by_owner_by_repo_hooks_by_hookId_204_response",
            "type": "null",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "hookId": {
          "description": "Id of hook.",
          "in": "path",
          "name": "hookId",
          "nullable": false,
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Get single hook.",
      "field": "repos_by_owner_by_repo_hooks_by_hookId",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/hooks/{args.hookId}",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/hook",
            "items": {
              "properties": {
                "active": {
                  "type": "boolean",
                },
                "config": {
                  "$ref": "#/definitions/query_repos_by_owner_by_repo_hooks_items_config",
                },
                "created_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "events": {
                  "items": {
                    "$ref": "#/definitions/query_repos_by_owner_by_repo_hooks_items_events_items",
                  },
                  "type": "array",
                },
                "id": {
                  "type": "integer",
                },
                "name": {
                  "type": "string",
                },
                "updated_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "url": {
                  "type": "string",
                },
              },
              "title": "query_repos_by_owner_by_repo_hooks_items",
              "type": "object",
            },
            "title": "hook",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "body": {
          "$resolvedRef": "/definitions/hookBody",
          "description": undefined,
          "nullable": false,
          "properties": {
            "active": {
              "type": "boolean",
            },
            "add_events": {
              "items": {
                "type": "string",
              },
              "type": "array",
            },
          },
          "title": "hookBody",
          "type": "object",
        },
        "hookId": {
          "description": "Id of hook.",
          "in": "path",
          "name": "hookId",
          "nullable": false,
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Edit a hook.",
      "field": "patch_repos_by_owner_by_repo_hooks_by_hookId",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "PATCH",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/hooks/{args.hookId}",
      "requestSchema": {
        "$resolvedRef": "/definitions/hookBody",
        "description": undefined,
        "nullable": false,
        "properties": {
          "active": {
            "type": "boolean",
          },
          "add_events": {
            "items": {
              "type": "string",
            },
            "type": "array",
          },
        },
        "title": "hookBody",
        "type": "object",
      },
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/hook",
            "items": {
              "properties": {
                "active": {
                  "type": "boolean",
                },
                "config": {
                  "$ref": "#/definitions/query_repos_by_owner_by_repo_hooks_items_config",
                },
                "created_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "events": {
                  "items": {
                    "$ref": "#/definitions/query_repos_by_owner_by_repo_hooks_items_events_items",
                  },
                  "type": "array",
                },
                "id": {
                  "type": "integer",
                },
                "name": {
                  "type": "string",
                },
                "updated_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "url": {
                  "type": "string",
                },
              },
              "title": "query_repos_by_owner_by_repo_hooks_items",
              "type": "object",
            },
            "title": "hook",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "hookId": {
          "description": "Id of hook.",
          "in": "path",
          "name": "hookId",
          "nullable": false,
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Test a push hook.
This will trigger the hook with the latest push to the current repository
if the hook is subscribed to push events. If the hook is not subscribed
to push events, the server will respond with 204 but no test POST will
be generated.
Note: Previously /repos/:owner/:repo/hooks/:id/tes
",
      "field": "post_repos_by_owner_by_repo_hooks_by_hookId_tests",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "POST",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/hooks/{args.hookId}/tests",
      "responseByStatusCode": {
        "204": {
          "responseSchema": {
            "description": "Hook is triggered.",
            "title": "post_repos_by_owner_by_repo_hooks_by_hookId_tests_204_response",
            "type": "null",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "direction": {
          "default": "desc",
          "description": undefined,
          "enum": [
            "asc",
            "desc",
          ],
          "in": "query",
          "name": "direction",
          "nullable": false,
          "title": "queryInput_repos_by_owner_by_repo_issues_direction",
          "type": "string",
        },
        "filter": {
          "default": "all",
          "description": "Issues assigned to you / created by you / mentioning you / you're
subscribed to updates for / All issues the authenticated user can see",
          "enum": [
            "assigned",
            "created",
            "mentioned",
            "subscribed",
            "all",
          ],
          "in": "query",
          "name": "filter",
          "nullable": false,
          "title": "queryInput_repos_by_owner_by_repo_issues_filter",
          "type": "string",
        },
        "labels": {
          "description": "String list of comma separated Label names. Example - bug,ui,@high.",
          "in": "query",
          "name": "labels",
          "nullable": false,
          "type": "string",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
        "since": {
          "description": "Optional string of a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.
Only issues updated at or after this time are returned.",
          "in": "query",
          "name": "since",
          "type": "string",
        },
        "sort": {
          "default": "created",
          "description": undefined,
          "enum": [
            "created",
            "updated",
            "comments",
          ],
          "in": "query",
          "name": "sort",
          "nullable": false,
          "title": "queryInput_repos_by_owner_by_repo_issues_sort",
          "type": "string",
        },
        "state": {
          "default": "open",
          "description": undefined,
          "enum": [
            "open",
            "closed",
          ],
          "in": "query",
          "name": "state",
          "nullable": false,
          "title": "queryInput_repos_by_owner_by_repo_issues_state",
          "type": "string",
        },
      },
      "description": "List issues for a repository.",
      "field": "repos_by_owner_by_repo_issues",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/issues",
      "queryParamArgMap": {
        "direction": "direction",
        "filter": "filter",
        "labels": "labels",
        "since": "since",
        "sort": "sort",
        "state": "state",
      },
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/issues",
            "items": {
              "properties": {
                "assignee": {
                  "$ref": "#/definitions/query_issues_items_assignee",
                },
                "body": {
                  "type": "string",
                },
                "closed_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "comments": {
                  "type": "integer",
                },
                "created_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "html_url": {
                  "type": "string",
                },
                "labels": {
                  "items": {
                    "$ref": "#/definitions/query_issues_items_labels_items",
                  },
                  "type": "array",
                },
                "milestone": {
                  "$ref": "#/definitions/query_issues_items_milestone",
                },
                "number": {
                  "type": "integer",
                },
                "pull_request": {
                  "$ref": "#/definitions/query_issues_items_pull_request",
                },
                "state": {
                  "$ref": "#/definitions/query_issues_items_state",
                },
                "title": {
                  "type": "string",
                },
                "updated_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "url": {
                  "type": "string",
                },
                "user": {
                  "$ref": "#/definitions/query_issues_items_user",
                },
              },
              "title": "query_issues_items",
              "type": "object",
            },
            "title": "issues",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "body": {
          "$resolvedRef": "/definitions/issue",
          "description": undefined,
          "nullable": false,
          "properties": {
            "assignee": {
              "type": "string",
            },
            "body": {
              "type": "string",
            },
            "labels": {
              "items": {
                "type": "string",
              },
              "type": "array",
            },
            "milestone": {
              "type": "number",
            },
            "title": {
              "type": "string",
            },
          },
          "title": "issue",
          "type": "object",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Create an issue.
Any user with pull access to a repository can create an issue.
",
      "field": "post_repos_by_owner_by_repo_issues",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "POST",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/issues",
      "requestSchema": {
        "$resolvedRef": "/definitions/issue",
        "description": undefined,
        "nullable": false,
        "properties": {
          "assignee": {
            "type": "string",
          },
          "body": {
            "type": "string",
          },
          "labels": {
            "items": {
              "type": "string",
            },
            "type": "array",
          },
          "milestone": {
            "type": "number",
          },
          "title": {
            "type": "string",
          },
        },
        "title": "issue",
        "type": "object",
      },
      "responseByStatusCode": {
        "201": {
          "responseSchema": {
            "$resolvedRef": "/definitions/issue",
            "description": undefined,
            "nullable": false,
            "properties": {
              "assignee": {
                "type": "string",
              },
              "body": {
                "type": "string",
              },
              "labels": {
                "items": {
                  "type": "string",
                },
                "type": "array",
              },
              "milestone": {
                "type": "number",
              },
              "title": {
                "type": "string",
              },
            },
            "title": "issue",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "direction": {
          "description": "Ignored without 'sort' parameter.",
          "in": "query",
          "name": "direction",
          "type": "string",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
        "since": {
          "description": "The time should be passed in as UTC in the ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.
Example: "2012-10-09T23:39:01Z".",
          "in": "query",
          "name": "since",
          "type": "string",
        },
        "sort": {
          "description": "",
          "enum": [
            "created",
            "updated",
          ],
          "in": "query",
          "name": "sort",
          "title": "queryInput_repos_by_owner_by_repo_issues_comments_sort",
          "type": "string",
        },
      },
      "description": "List comments in a repository.",
      "field": "repos_by_owner_by_repo_issues_comments",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/issues/comments",
      "queryParamArgMap": {
        "direction": "direction",
        "since": "since",
        "sort": "sort",
      },
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/issuesComments",
            "items": {
              "properties": {
                "body": {
                  "type": "string",
                },
                "commit_id": {
                  "type": "string",
                },
                "created_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "id": {
                  "type": "integer",
                },
                "links": {
                  "$ref": "#/definitions/query_repos_by_owner_by_repo_issues_comments_items_links",
                },
                "path": {
                  "type": "string",
                },
                "position": {
                  "type": "integer",
                },
                "updated_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "url": {
                  "type": "string",
                },
                "user": {
                  "$ref": "#/definitions/query_repos_by_owner_by_repo_issues_comments_items_user",
                },
              },
              "title": "query_repos_by_owner_by_repo_issues_comments_items",
              "type": "object",
            },
            "title": "issuesComments",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "commentId": {
          "description": "ID of comment.",
          "in": "path",
          "name": "commentId",
          "nullable": false,
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Delete a comment.",
      "field": "delete_repos_by_owner_by_repo_issues_comments_by_commentId",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "DELETE",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/issues/comments/{args.commentId}",
      "responseByStatusCode": {
        "204": {
          "responseSchema": {
            "description": "No content.",
            "title": "delete_repos_by_owner_by_repo_issues_comments_by_commentId_204_response",
            "type": "null",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "commentId": {
          "description": "ID of comment.",
          "in": "path",
          "name": "commentId",
          "nullable": false,
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Get a single comment.",
      "field": "repos_by_owner_by_repo_issues_comments_by_commentId",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/issues/comments/{args.commentId}",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/issuesComment",
            "properties": {
              "body": {
                "type": "string",
              },
              "created_at": {
                "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                "type": "string",
              },
              "html_url": {
                "type": "string",
              },
              "id": {
                "type": "integer",
              },
              "updated_at": {
                "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                "type": "string",
              },
              "url": {
                "type": "string",
              },
              "user": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_issues_comments_by_commentId_user",
              },
            },
            "title": "issuesComment",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "body": {
          "$resolvedRef": "/definitions/commentBody",
          "description": undefined,
          "nullable": false,
          "properties": {
            "body": {
              "type": "string",
            },
          },
          "required": [
            "body",
          ],
          "title": "commentBody",
          "type": "object",
        },
        "commentId": {
          "description": "ID of comment.",
          "in": "path",
          "name": "commentId",
          "nullable": false,
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Edit a comment.",
      "field": "patch_repos_by_owner_by_repo_issues_comments_by_commentId",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "PATCH",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/issues/comments/{args.commentId}",
      "requestSchema": {
        "$resolvedRef": "/definitions/commentBody",
        "description": undefined,
        "nullable": false,
        "properties": {
          "body": {
            "type": "string",
          },
        },
        "required": [
          "body",
        ],
        "title": "commentBody",
        "type": "object",
      },
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/issuesComment",
            "properties": {
              "body": {
                "type": "string",
              },
              "created_at": {
                "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                "type": "string",
              },
              "html_url": {
                "type": "string",
              },
              "id": {
                "type": "integer",
              },
              "updated_at": {
                "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                "type": "string",
              },
              "url": {
                "type": "string",
              },
              "user": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_issues_comments_by_commentId_user",
              },
            },
            "title": "issuesComment",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "List issue events for a repository.",
      "field": "repos_by_owner_by_repo_issues_events",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/issues/events",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/events",
            "properties": {
              "actor": {
                "$ref": "#/definitions/query_events_actor",
              },
              "created_at": {
                "type": "object",
              },
              "id": {
                "type": "integer",
              },
              "org": {
                "$ref": "#/definitions/query_events_org",
              },
              "payload": {
                "$ref": "#/definitions/query_events_payload",
              },
              "public": {
                "type": "boolean",
              },
              "repo": {
                "$ref": "#/definitions/query_events_repo",
              },
              "type": {
                "type": "string",
              },
            },
            "title": "events",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "eventId": {
          "description": "Id of the event.",
          "in": "path",
          "name": "eventId",
          "nullable": false,
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Get a single event.",
      "field": "repos_by_owner_by_repo_issues_events_by_eventId",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/issues/events/{args.eventId}",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/event",
            "properties": {
              "actor": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_issues_events_by_eventId_actor",
              },
              "commit_id": {
                "type": "string",
              },
              "created_at": {
                "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                "type": "string",
              },
              "event": {
                "type": "string",
              },
              "issue": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_issues_events_by_eventId_issue",
              },
              "url": {
                "type": "string",
              },
            },
            "title": "event",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "number": {
          "description": "Number of issue.",
          "in": "path",
          "name": "number",
          "nullable": false,
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Get a single issue",
      "field": "repos_by_owner_by_repo_issues_by_number",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/issues/{args.number}",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/issue",
            "description": undefined,
            "nullable": false,
            "properties": {
              "assignee": {
                "type": "string",
              },
              "body": {
                "type": "string",
              },
              "labels": {
                "items": {
                  "type": "string",
                },
                "type": "array",
              },
              "milestone": {
                "type": "number",
              },
              "title": {
                "type": "string",
              },
            },
            "title": "issue",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "body": {
          "$resolvedRef": "/definitions/issue",
          "description": undefined,
          "nullable": false,
          "properties": {
            "assignee": {
              "type": "string",
            },
            "body": {
              "type": "string",
            },
            "labels": {
              "items": {
                "type": "string",
              },
              "type": "array",
            },
            "milestone": {
              "type": "number",
            },
            "title": {
              "type": "string",
            },
          },
          "title": "issue",
          "type": "object",
        },
        "number": {
          "description": "Number of issue.",
          "in": "path",
          "name": "number",
          "nullable": false,
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Edit an issue.
Issue owners and users with push access can edit an issue.
",
      "field": "patch_repos_by_owner_by_repo_issues_by_number",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "PATCH",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/issues/{args.number}",
      "requestSchema": {
        "$resolvedRef": "/definitions/issue",
        "description": undefined,
        "nullable": false,
        "properties": {
          "assignee": {
            "type": "string",
          },
          "body": {
            "type": "string",
          },
          "labels": {
            "items": {
              "type": "string",
            },
            "type": "array",
          },
          "milestone": {
            "type": "number",
          },
          "title": {
            "type": "string",
          },
        },
        "title": "issue",
        "type": "object",
      },
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/issue",
            "description": undefined,
            "nullable": false,
            "properties": {
              "assignee": {
                "type": "string",
              },
              "body": {
                "type": "string",
              },
              "labels": {
                "items": {
                  "type": "string",
                },
                "type": "array",
              },
              "milestone": {
                "type": "number",
              },
              "title": {
                "type": "string",
              },
            },
            "title": "issue",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "number": {
          "description": "Number of issue.",
          "in": "path",
          "name": "number",
          "nullable": false,
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "List comments on an issue.",
      "field": "repos_by_owner_by_repo_issues_by_number_comments",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/issues/{args.number}/comments",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/issuesComments",
            "items": {
              "properties": {
                "body": {
                  "type": "string",
                },
                "commit_id": {
                  "type": "string",
                },
                "created_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "id": {
                  "type": "integer",
                },
                "links": {
                  "$ref": "#/definitions/query_repos_by_owner_by_repo_issues_comments_items_links",
                },
                "path": {
                  "type": "string",
                },
                "position": {
                  "type": "integer",
                },
                "updated_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "url": {
                  "type": "string",
                },
                "user": {
                  "$ref": "#/definitions/query_repos_by_owner_by_repo_issues_comments_items_user",
                },
              },
              "title": "query_repos_by_owner_by_repo_issues_comments_items",
              "type": "object",
            },
            "title": "issuesComments",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "body": {
          "$resolvedRef": "/definitions/commentBody",
          "description": undefined,
          "nullable": false,
          "properties": {
            "body": {
              "type": "string",
            },
          },
          "required": [
            "body",
          ],
          "title": "commentBody",
          "type": "object",
        },
        "number": {
          "description": "Number of issue.",
          "in": "path",
          "name": "number",
          "nullable": false,
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Create a comment.",
      "field": "post_repos_by_owner_by_repo_issues_by_number_comments",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "POST",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/issues/{args.number}/comments",
      "requestSchema": {
        "$resolvedRef": "/definitions/commentBody",
        "description": undefined,
        "nullable": false,
        "properties": {
          "body": {
            "type": "string",
          },
        },
        "required": [
          "body",
        ],
        "title": "commentBody",
        "type": "object",
      },
      "responseByStatusCode": {
        "201": {
          "responseSchema": {
            "$resolvedRef": "/definitions/issuesComment",
            "properties": {
              "body": {
                "type": "string",
              },
              "created_at": {
                "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                "type": "string",
              },
              "html_url": {
                "type": "string",
              },
              "id": {
                "type": "integer",
              },
              "updated_at": {
                "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                "type": "string",
              },
              "url": {
                "type": "string",
              },
              "user": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_issues_comments_by_commentId_user",
              },
            },
            "title": "issuesComment",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "number": {
          "description": "Number of issue.",
          "in": "path",
          "name": "number",
          "nullable": false,
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "List events for an issue.",
      "field": "repos_by_owner_by_repo_issues_by_number_events",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/issues/{args.number}/events",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/events",
            "properties": {
              "actor": {
                "$ref": "#/definitions/query_events_actor",
              },
              "created_at": {
                "type": "object",
              },
              "id": {
                "type": "integer",
              },
              "org": {
                "$ref": "#/definitions/query_events_org",
              },
              "payload": {
                "$ref": "#/definitions/query_events_payload",
              },
              "public": {
                "type": "boolean",
              },
              "repo": {
                "$ref": "#/definitions/query_events_repo",
              },
              "type": {
                "type": "string",
              },
            },
            "title": "events",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "number": {
          "description": "Number of issue.",
          "in": "path",
          "name": "number",
          "nullable": false,
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Remove all labels from an issue.",
      "field": "delete_repos_by_owner_by_repo_issues_by_number_labels",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "DELETE",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/issues/{args.number}/labels",
      "responseByStatusCode": {
        "204": {
          "responseSchema": {
            "description": "No content.",
            "title": "delete_repos_by_owner_by_repo_issues_by_number_labels_204_response",
            "type": "null",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "number": {
          "description": "Number of issue.",
          "in": "path",
          "name": "number",
          "nullable": false,
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "List labels on an issue.",
      "field": "repos_by_owner_by_repo_issues_by_number_labels",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/issues/{args.number}/labels",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/labels",
            "items": {
              "properties": {
                "color": {
                  "$ref": "#/definitions/query_repos_by_owner_by_repo_issues_by_number_labels_items_color",
                },
                "name": {
                  "type": "string",
                },
                "url": {
                  "type": "string",
                },
              },
              "title": "query_repos_by_owner_by_repo_issues_by_number_labels_items",
              "type": "object",
            },
            "title": "labels",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "body": {
          "$resolvedRef": "/definitions/emailsPost",
          "description": undefined,
          "items": {
            "type": "string",
          },
          "nullable": false,
          "title": "emailsPost",
          "type": "array",
        },
        "number": {
          "description": "Number of issue.",
          "in": "path",
          "name": "number",
          "nullable": false,
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Add labels to an issue.",
      "field": "post_repos_by_owner_by_repo_issues_by_number_labels",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "POST",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/issues/{args.number}/labels",
      "requestSchema": {
        "$resolvedRef": "/definitions/emailsPost",
        "description": undefined,
        "items": {
          "type": "string",
        },
        "nullable": false,
        "title": "emailsPost",
        "type": "array",
      },
      "responseByStatusCode": {
        "201": {
          "responseSchema": {
            "$resolvedRef": "/definitions/label",
            "properties": {
              "color": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_labels_by_name_color",
              },
              "name": {
                "type": "string",
              },
              "url": {
                "type": "string",
              },
            },
            "title": "label",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "body": {
          "$resolvedRef": "/definitions/emailsPost",
          "description": undefined,
          "items": {
            "type": "string",
          },
          "nullable": false,
          "title": "emailsPost",
          "type": "array",
        },
        "number": {
          "description": "Number of issue.",
          "in": "path",
          "name": "number",
          "nullable": false,
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Replace all labels for an issue.
Sending an empty array ([]) will remove all Labels from the Issue.
",
      "field": "put_repos_by_owner_by_repo_issues_by_number_labels",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "PUT",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/issues/{args.number}/labels",
      "requestSchema": {
        "$resolvedRef": "/definitions/emailsPost",
        "description": undefined,
        "items": {
          "type": "string",
        },
        "nullable": false,
        "title": "emailsPost",
        "type": "array",
      },
      "responseByStatusCode": {
        "201": {
          "responseSchema": {
            "$resolvedRef": "/definitions/label",
            "properties": {
              "color": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_labels_by_name_color",
              },
              "name": {
                "type": "string",
              },
              "url": {
                "type": "string",
              },
            },
            "title": "label",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "name": {
          "description": "Name of the label.",
          "in": "path",
          "name": "name",
          "nullable": false,
          "type": "string",
        },
        "number": {
          "description": "Number of issue.",
          "in": "path",
          "name": "number",
          "nullable": false,
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Remove a label from an issue.",
      "field": "delete_repos_by_owner_by_repo_issues_by_number_labels_by_name",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "DELETE",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/issues/{args.number}/labels/{args.name}",
      "responseByStatusCode": {
        "204": {
          "responseSchema": {
            "description": "Item removed.",
            "title": "delete_repos_by_owner_by_repo_issues_by_number_labels_by_name_204_response",
            "type": "null",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Get list of keys.",
      "field": "repos_by_owner_by_repo_keys",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/keys",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/keys",
            "items": {
              "properties": {
                "id": {
                  "type": "integer",
                },
                "key": {
                  "type": "string",
                },
                "title": {
                  "type": "string",
                },
                "url": {
                  "type": "string",
                },
              },
              "title": "query_repos_by_owner_by_repo_keys_items",
              "type": "object",
            },
            "title": "keys",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "body": {
          "$resolvedRef": "/definitions/user-keys-post",
          "description": undefined,
          "nullable": false,
          "properties": {
            "key": {
              "type": "string",
            },
            "title": {
              "type": "string",
            },
          },
          "title": "user-keys-post",
          "type": "object",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Create a key.",
      "field": "post_repos_by_owner_by_repo_keys",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "POST",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/keys",
      "requestSchema": {
        "$resolvedRef": "/definitions/user-keys-post",
        "description": undefined,
        "nullable": false,
        "properties": {
          "key": {
            "type": "string",
          },
          "title": {
            "type": "string",
          },
        },
        "title": "user-keys-post",
        "type": "object",
      },
      "responseByStatusCode": {
        "201": {
          "responseSchema": {
            "$resolvedRef": "/definitions/user-keys-keyId",
            "properties": {
              "id": {
                "type": "integer",
              },
              "key": {
                "type": "string",
              },
              "title": {
                "type": "string",
              },
              "url": {
                "type": "string",
              },
            },
            "title": "user-keys-keyId",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "keyId": {
          "description": "Id of key.",
          "in": "path",
          "name": "keyId",
          "nullable": false,
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Delete a key.",
      "field": "delete_repos_by_owner_by_repo_keys_by_keyId",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "DELETE",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/keys/{args.keyId}",
      "responseByStatusCode": {
        "204": {
          "responseSchema": {
            "description": "No content.",
            "title": "delete_repos_by_owner_by_repo_keys_by_keyId_204_response",
            "type": "null",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "keyId": {
          "description": "Id of key.",
          "in": "path",
          "name": "keyId",
          "nullable": false,
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Get a key",
      "field": "repos_by_owner_by_repo_keys_by_keyId",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/keys/{args.keyId}",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/user-keys-keyId",
            "properties": {
              "id": {
                "type": "integer",
              },
              "key": {
                "type": "string",
              },
              "title": {
                "type": "string",
              },
              "url": {
                "type": "string",
              },
            },
            "title": "user-keys-keyId",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "List all labels for this repository.",
      "field": "repos_by_owner_by_repo_labels",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/labels",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/labels",
            "items": {
              "properties": {
                "color": {
                  "$ref": "#/definitions/query_repos_by_owner_by_repo_issues_by_number_labels_items_color",
                },
                "name": {
                  "type": "string",
                },
                "url": {
                  "type": "string",
                },
              },
              "title": "query_repos_by_owner_by_repo_issues_by_number_labels_items",
              "type": "object",
            },
            "title": "labels",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "body": {
          "$resolvedRef": "/definitions/emailsPost",
          "description": undefined,
          "items": {
            "type": "string",
          },
          "nullable": false,
          "title": "emailsPost",
          "type": "array",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Create a label.",
      "field": "post_repos_by_owner_by_repo_labels",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "POST",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/labels",
      "requestSchema": {
        "$resolvedRef": "/definitions/emailsPost",
        "description": undefined,
        "items": {
          "type": "string",
        },
        "nullable": false,
        "title": "emailsPost",
        "type": "array",
      },
      "responseByStatusCode": {
        "201": {
          "responseSchema": {
            "$resolvedRef": "/definitions/label",
            "properties": {
              "color": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_labels_by_name_color",
              },
              "name": {
                "type": "string",
              },
              "url": {
                "type": "string",
              },
            },
            "title": "label",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "name": {
          "description": "Name of the label.",
          "in": "path",
          "name": "name",
          "nullable": false,
          "type": "string",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Delete a label.",
      "field": "delete_repos_by_owner_by_repo_labels_by_name",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "DELETE",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/labels/{args.name}",
      "responseByStatusCode": {
        "204": {
          "responseSchema": {
            "description": "No content.",
            "title": "delete_repos_by_owner_by_repo_labels_by_name_204_response",
            "type": "null",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "name": {
          "description": "Name of the label.",
          "in": "path",
          "name": "name",
          "nullable": false,
          "type": "string",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Get a single label.",
      "field": "repos_by_owner_by_repo_labels_by_name",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/labels/{args.name}",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/label",
            "properties": {
              "color": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_labels_by_name_color",
              },
              "name": {
                "type": "string",
              },
              "url": {
                "type": "string",
              },
            },
            "title": "label",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "body": {
          "$resolvedRef": "/definitions/emailsPost",
          "description": undefined,
          "items": {
            "type": "string",
          },
          "nullable": false,
          "title": "emailsPost",
          "type": "array",
        },
        "name": {
          "description": "Name of the label.",
          "in": "path",
          "name": "name",
          "nullable": false,
          "type": "string",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Update a label.",
      "field": "patch_repos_by_owner_by_repo_labels_by_name",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "PATCH",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/labels/{args.name}",
      "requestSchema": {
        "$resolvedRef": "/definitions/emailsPost",
        "description": undefined,
        "items": {
          "type": "string",
        },
        "nullable": false,
        "title": "emailsPost",
        "type": "array",
      },
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/label",
            "properties": {
              "color": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_labels_by_name_color",
              },
              "name": {
                "type": "string",
              },
              "url": {
                "type": "string",
              },
            },
            "title": "label",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "List languages.
List languages for the specified repository. The value on the right of a
language is the number of bytes of code written in that language.
",
      "field": "repos_by_owner_by_repo_languages",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/languages",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/languages",
            "additionalProperties": {
              "type": "integer",
            },
            "title": "languages",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "body": {
          "$resolvedRef": "/definitions/mergesBody",
          "description": undefined,
          "nullable": false,
          "properties": {
            "base": {
              "type": "string",
            },
            "commit_message": {
              "type": "string",
            },
            "head": {
              "type": "string",
            },
          },
          "title": "mergesBody",
          "type": "object",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Perform a merge.",
      "field": "post_repos_by_owner_by_repo_merges",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "POST",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/merges",
      "requestSchema": {
        "$resolvedRef": "/definitions/mergesBody",
        "description": undefined,
        "nullable": false,
        "properties": {
          "base": {
            "type": "string",
          },
          "commit_message": {
            "type": "string",
          },
          "head": {
            "type": "string",
          },
        },
        "title": "mergesBody",
        "type": "object",
      },
      "responseByStatusCode": {
        "201": {
          "responseSchema": {
            "$resolvedRef": "/definitions/mergesSuccessful",
            "properties": {
              "author": {
                "$ref": "#/definitions/mutation_post_repos_by_owner_by_repo_merges_oneOf_0_author",
              },
              "comments_url": {
                "type": "string",
              },
              "commit": {
                "$ref": "#/definitions/mutation_post_repos_by_owner_by_repo_merges_oneOf_0_commit",
              },
              "committer": {
                "$ref": "#/definitions/mutation_post_repos_by_owner_by_repo_merges_oneOf_0_committer",
              },
              "merged": {
                "type": "boolean",
              },
              "message": {
                "type": "string",
              },
              "parents": {
                "items": {
                  "$ref": "#/definitions/mutation_post_repos_by_owner_by_repo_merges_oneOf_0_parents_items",
                },
                "type": "array",
              },
              "sha": {
                "type": "string",
              },
              "url": {
                "type": "string",
              },
            },
            "title": "mergesSuccessful",
            "type": "object",
          },
        },
        "204": {
          "responseSchema": {
            "description": "No-op response (base already contains the head, nothing to merge)",
            "title": "post_repos_by_owner_by_repo_merges_204_response",
            "type": "null",
          },
        },
        "404": {
          "responseSchema": {
            "$resolvedRef": "/definitions/mergesConflict",
            "properties": {
              "message": {
                "description": "Error message",
                "type": "string",
              },
            },
            "title": "mergesConflict",
            "type": "object",
          },
        },
        "409": {
          "responseSchema": {
            "$resolvedRef": "/definitions/mergesConflict",
            "properties": {
              "message": {
                "description": "Error message",
                "type": "string",
              },
            },
            "title": "mergesConflict",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "direction": {
          "description": "Ignored without 'sort' parameter.",
          "in": "query",
          "name": "direction",
          "type": "string",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
        "sort": {
          "default": "due_date",
          "description": "",
          "enum": [
            "due_date",
            "completeness",
          ],
          "in": "query",
          "name": "sort",
          "title": "queryInput_repos_by_owner_by_repo_milestones_sort",
          "type": "string",
        },
        "state": {
          "default": "open",
          "description": "String to filter by state.",
          "enum": [
            "open",
            "closed",
          ],
          "in": "query",
          "name": "state",
          "title": "queryInput_repos_by_owner_by_repo_milestones_state",
          "type": "string",
        },
      },
      "description": "List milestones for a repository.",
      "field": "repos_by_owner_by_repo_milestones",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/milestones",
      "queryParamArgMap": {
        "direction": "direction",
        "sort": "sort",
        "state": "state",
      },
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/milestone",
            "properties": {
              "closed_issues": {
                "type": "integer",
              },
              "created_at": {
                "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                "type": "string",
              },
              "creator": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_milestones_creator",
              },
              "description": {
                "type": "string",
              },
              "due_on": {
                "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                "type": "string",
              },
              "number": {
                "type": "integer",
              },
              "open_issues": {
                "type": "integer",
              },
              "state": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_milestones_state",
              },
              "title": {
                "type": "string",
              },
              "url": {
                "type": "string",
              },
            },
            "title": "milestone",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "body": {
          "$resolvedRef": "/definitions/milestoneUpdate",
          "description": undefined,
          "nullable": false,
          "properties": {
            "description": {
              "type": "string",
            },
            "due_on": {
              "type": "string",
            },
            "state": {
              "type": "string",
            },
            "title": {
              "type": "string",
            },
          },
          "title": "milestoneUpdate",
          "type": "object",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Create a milestone.",
      "field": "post_repos_by_owner_by_repo_milestones",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "POST",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/milestones",
      "requestSchema": {
        "$resolvedRef": "/definitions/milestoneUpdate",
        "description": undefined,
        "nullable": false,
        "properties": {
          "description": {
            "type": "string",
          },
          "due_on": {
            "type": "string",
          },
          "state": {
            "type": "string",
          },
          "title": {
            "type": "string",
          },
        },
        "title": "milestoneUpdate",
        "type": "object",
      },
      "responseByStatusCode": {
        "201": {
          "responseSchema": {
            "$resolvedRef": "/definitions/milestone",
            "properties": {
              "closed_issues": {
                "type": "integer",
              },
              "created_at": {
                "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                "type": "string",
              },
              "creator": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_milestones_creator",
              },
              "description": {
                "type": "string",
              },
              "due_on": {
                "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                "type": "string",
              },
              "number": {
                "type": "integer",
              },
              "open_issues": {
                "type": "integer",
              },
              "state": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_milestones_state",
              },
              "title": {
                "type": "string",
              },
              "url": {
                "type": "string",
              },
            },
            "title": "milestone",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "number": {
          "description": "Number of milestone.",
          "in": "path",
          "name": "number",
          "nullable": false,
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Delete a milestone.",
      "field": "delete_repos_by_owner_by_repo_milestones_by_number",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "DELETE",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/milestones/{args.number}",
      "responseByStatusCode": {
        "204": {
          "responseSchema": {
            "description": "No content.",
            "title": "delete_repos_by_owner_by_repo_milestones_by_number_204_response",
            "type": "null",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "number": {
          "description": "Number of milestone.",
          "in": "path",
          "name": "number",
          "nullable": false,
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Get a single milestone.",
      "field": "repos_by_owner_by_repo_milestones_by_number",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/milestones/{args.number}",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/milestone",
            "properties": {
              "closed_issues": {
                "type": "integer",
              },
              "created_at": {
                "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                "type": "string",
              },
              "creator": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_milestones_creator",
              },
              "description": {
                "type": "string",
              },
              "due_on": {
                "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                "type": "string",
              },
              "number": {
                "type": "integer",
              },
              "open_issues": {
                "type": "integer",
              },
              "state": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_milestones_state",
              },
              "title": {
                "type": "string",
              },
              "url": {
                "type": "string",
              },
            },
            "title": "milestone",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "body": {
          "$resolvedRef": "/definitions/milestoneUpdate",
          "description": undefined,
          "nullable": false,
          "properties": {
            "description": {
              "type": "string",
            },
            "due_on": {
              "type": "string",
            },
            "state": {
              "type": "string",
            },
            "title": {
              "type": "string",
            },
          },
          "title": "milestoneUpdate",
          "type": "object",
        },
        "number": {
          "description": "Number of milestone.",
          "in": "path",
          "name": "number",
          "nullable": false,
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Update a milestone.",
      "field": "patch_repos_by_owner_by_repo_milestones_by_number",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "PATCH",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/milestones/{args.number}",
      "requestSchema": {
        "$resolvedRef": "/definitions/milestoneUpdate",
        "description": undefined,
        "nullable": false,
        "properties": {
          "description": {
            "type": "string",
          },
          "due_on": {
            "type": "string",
          },
          "state": {
            "type": "string",
          },
          "title": {
            "type": "string",
          },
        },
        "title": "milestoneUpdate",
        "type": "object",
      },
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/milestone",
            "properties": {
              "closed_issues": {
                "type": "integer",
              },
              "created_at": {
                "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                "type": "string",
              },
              "creator": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_milestones_creator",
              },
              "description": {
                "type": "string",
              },
              "due_on": {
                "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                "type": "string",
              },
              "number": {
                "type": "integer",
              },
              "open_issues": {
                "type": "integer",
              },
              "state": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_milestones_state",
              },
              "title": {
                "type": "string",
              },
              "url": {
                "type": "string",
              },
            },
            "title": "milestone",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "number": {
          "description": "Number of milestone.",
          "in": "path",
          "name": "number",
          "nullable": false,
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Get labels for every issue in a milestone.",
      "field": "repos_by_owner_by_repo_milestones_by_number_labels",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/milestones/{args.number}/labels",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/labels",
            "items": {
              "properties": {
                "color": {
                  "$ref": "#/definitions/query_repos_by_owner_by_repo_issues_by_number_labels_items_color",
                },
                "name": {
                  "type": "string",
                },
                "url": {
                  "type": "string",
                },
              },
              "title": "query_repos_by_owner_by_repo_issues_by_number_labels_items",
              "type": "object",
            },
            "title": "labels",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "all": {
          "description": "True to show notifications marked as read.",
          "in": "query",
          "name": "all",
          "type": "boolean",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "participating": {
          "description": "True to show only notifications in which the user is directly participating
or mentioned.",
          "in": "query",
          "name": "participating",
          "type": "boolean",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
        "since": {
          "description": "The time should be passed in as UTC in the ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.
Example: "2012-10-09T23:39:01Z".",
          "in": "query",
          "name": "since",
          "type": "string",
        },
      },
      "description": "List your notifications in a repository
List all notifications for the current user.
",
      "field": "repos_by_owner_by_repo_notifications",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/notifications",
      "queryParamArgMap": {
        "all": "all",
        "participating": "participating",
        "since": "since",
      },
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/notifications",
            "properties": {
              "id": {
                "type": "integer",
              },
              "last_read_at": {
                "type": "string",
              },
              "reason": {
                "type": "string",
              },
              "repository": {
                "$ref": "#/definitions/query_notifications_repository",
              },
              "subject": {
                "$ref": "#/definitions/query_notifications_subject",
              },
              "unread": {
                "type": "boolean",
              },
              "updated_at": {
                "type": "string",
              },
              "url": {
                "type": "string",
              },
            },
            "title": "notifications",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "body": {
          "$resolvedRef": "/definitions/notificationMarkRead",
          "description": undefined,
          "nullable": false,
          "properties": {
            "last_read_at": {
              "type": "string",
            },
          },
          "title": "notificationMarkRead",
          "type": "object",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Mark notifications as read in a repository.
Marking all notifications in a repository as "read" removes them from the
default view on GitHub.com.
",
      "field": "put_repos_by_owner_by_repo_notifications",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "PUT",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/notifications",
      "requestSchema": {
        "$resolvedRef": "/definitions/notificationMarkRead",
        "description": undefined,
        "nullable": false,
        "properties": {
          "last_read_at": {
            "type": "string",
          },
        },
        "title": "notificationMarkRead",
        "type": "object",
      },
      "responseByStatusCode": {},
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "base": {
          "description": "Filter pulls by base branch name. Example - gh-pages.",
          "in": "query",
          "name": "base",
          "type": "string",
        },
        "head": {
          "description": "Filter pulls by head user and branch name in the format of 'user:ref-name'.
Example: github:new-script-format.",
          "in": "query",
          "name": "head",
          "type": "string",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
        "state": {
          "default": "open",
          "description": "String to filter by state.",
          "enum": [
            "open",
            "closed",
          ],
          "in": "query",
          "name": "state",
          "title": "queryInput_repos_by_owner_by_repo_pulls_state",
          "type": "string",
        },
      },
      "description": "List pull requests.",
      "field": "repos_by_owner_by_repo_pulls",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/pulls",
      "queryParamArgMap": {
        "base": "base",
        "head": "head",
        "state": "state",
      },
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/pulls",
            "items": {
              "properties": {
                "base": {
                  "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_items_base",
                },
                "body": {
                  "type": "string",
                },
                "closed_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "created_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "diff_url": {
                  "type": "string",
                },
                "head": {
                  "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_items_head",
                },
                "html_url": {
                  "type": "string",
                },
                "issue_url": {
                  "type": "string",
                },
                "links": {
                  "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_items_links",
                },
                "merged_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "number": {
                  "type": "integer",
                },
                "patch_url": {
                  "type": "string",
                },
                "state": {
                  "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_items_state",
                },
                "title": {
                  "type": "string",
                },
                "updated_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "url": {
                  "type": "string",
                },
                "user": {
                  "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_items_user",
                },
              },
              "title": "query_repos_by_owner_by_repo_pulls_items",
              "type": "object",
            },
            "title": "pulls",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "body": {
          "$resolvedRef": "/definitions/pullsPost",
          "description": undefined,
          "nullable": false,
          "properties": {
            "base": {
              "type": "string",
            },
            "body": {
              "type": "string",
            },
            "head": {
              "type": "string",
            },
            "title": {
              "type": "string",
            },
          },
          "title": "pullsPost",
          "type": "object",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Create a pull request.",
      "field": "post_repos_by_owner_by_repo_pulls",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "POST",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/pulls",
      "requestSchema": {
        "$resolvedRef": "/definitions/pullsPost",
        "description": undefined,
        "nullable": false,
        "properties": {
          "base": {
            "type": "string",
          },
          "body": {
            "type": "string",
          },
          "head": {
            "type": "string",
          },
          "title": {
            "type": "string",
          },
        },
        "title": "pullsPost",
        "type": "object",
      },
      "responseByStatusCode": {
        "201": {
          "responseSchema": {
            "$resolvedRef": "/definitions/pulls",
            "items": {
              "properties": {
                "base": {
                  "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_items_base",
                },
                "body": {
                  "type": "string",
                },
                "closed_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "created_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "diff_url": {
                  "type": "string",
                },
                "head": {
                  "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_items_head",
                },
                "html_url": {
                  "type": "string",
                },
                "issue_url": {
                  "type": "string",
                },
                "links": {
                  "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_items_links",
                },
                "merged_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "number": {
                  "type": "integer",
                },
                "patch_url": {
                  "type": "string",
                },
                "state": {
                  "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_items_state",
                },
                "title": {
                  "type": "string",
                },
                "updated_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "url": {
                  "type": "string",
                },
                "user": {
                  "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_items_user",
                },
              },
              "title": "query_repos_by_owner_by_repo_pulls_items",
              "type": "object",
            },
            "title": "pulls",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "direction": {
          "description": "Ignored without 'sort' parameter.",
          "in": "query",
          "name": "direction",
          "type": "string",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
        "since": {
          "description": "The time should be passed in as UTC in the ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.
Example: "2012-10-09T23:39:01Z".",
          "in": "query",
          "name": "since",
          "type": "string",
        },
        "sort": {
          "description": "",
          "enum": [
            "created",
            "updated",
          ],
          "in": "query",
          "name": "sort",
          "title": "queryInput_repos_by_owner_by_repo_pulls_comments_sort",
          "type": "string",
        },
      },
      "description": "List comments in a repository.
By default, Review Comments are ordered by ascending ID.
",
      "field": "repos_by_owner_by_repo_pulls_comments",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/pulls/comments",
      "queryParamArgMap": {
        "direction": "direction",
        "since": "since",
        "sort": "sort",
      },
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/issuesComments",
            "items": {
              "properties": {
                "body": {
                  "type": "string",
                },
                "commit_id": {
                  "type": "string",
                },
                "created_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "id": {
                  "type": "integer",
                },
                "links": {
                  "$ref": "#/definitions/query_repos_by_owner_by_repo_issues_comments_items_links",
                },
                "path": {
                  "type": "string",
                },
                "position": {
                  "type": "integer",
                },
                "updated_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "url": {
                  "type": "string",
                },
                "user": {
                  "$ref": "#/definitions/query_repos_by_owner_by_repo_issues_comments_items_user",
                },
              },
              "title": "query_repos_by_owner_by_repo_issues_comments_items",
              "type": "object",
            },
            "title": "issuesComments",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "commentId": {
          "description": "Id of comment.",
          "in": "path",
          "name": "commentId",
          "nullable": false,
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Delete a comment.",
      "field": "delete_repos_by_owner_by_repo_pulls_comments_by_commentId",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "DELETE",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/pulls/comments/{args.commentId}",
      "responseByStatusCode": {
        "204": {
          "responseSchema": {
            "description": "No content.",
            "title": "delete_repos_by_owner_by_repo_pulls_comments_by_commentId_204_response",
            "type": "null",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "commentId": {
          "description": "Id of comment.",
          "in": "path",
          "name": "commentId",
          "nullable": false,
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Get a single comment.",
      "field": "repos_by_owner_by_repo_pulls_comments_by_commentId",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/pulls/comments/{args.commentId}",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/pullsComment",
            "properties": {
              "body": {
                "type": "string",
              },
              "commit_id": {
                "type": "string",
              },
              "created_at": {
                "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                "type": "string",
              },
              "id": {
                "type": "integer",
              },
              "links": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_comments_by_commentId_links",
              },
              "path": {
                "type": "string",
              },
              "position": {
                "type": "integer",
              },
              "updated_at": {
                "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                "type": "string",
              },
              "url": {
                "type": "string",
              },
              "user": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_comments_by_commentId_user",
              },
            },
            "title": "pullsComment",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "body": {
          "$resolvedRef": "/definitions/commentBody",
          "description": undefined,
          "nullable": false,
          "properties": {
            "body": {
              "type": "string",
            },
          },
          "required": [
            "body",
          ],
          "title": "commentBody",
          "type": "object",
        },
        "commentId": {
          "description": "Id of comment.",
          "in": "path",
          "name": "commentId",
          "nullable": false,
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Edit a comment.",
      "field": "patch_repos_by_owner_by_repo_pulls_comments_by_commentId",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "PATCH",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/pulls/comments/{args.commentId}",
      "requestSchema": {
        "$resolvedRef": "/definitions/commentBody",
        "description": undefined,
        "nullable": false,
        "properties": {
          "body": {
            "type": "string",
          },
        },
        "required": [
          "body",
        ],
        "title": "commentBody",
        "type": "object",
      },
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/pullsComment",
            "properties": {
              "body": {
                "type": "string",
              },
              "commit_id": {
                "type": "string",
              },
              "created_at": {
                "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                "type": "string",
              },
              "id": {
                "type": "integer",
              },
              "links": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_comments_by_commentId_links",
              },
              "path": {
                "type": "string",
              },
              "position": {
                "type": "integer",
              },
              "updated_at": {
                "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                "type": "string",
              },
              "url": {
                "type": "string",
              },
              "user": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_comments_by_commentId_user",
              },
            },
            "title": "pullsComment",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "number": {
          "description": "Id of pull.",
          "in": "path",
          "name": "number",
          "nullable": false,
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Get a single pull request.",
      "field": "repos_by_owner_by_repo_pulls_by_number",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/pulls/{args.number}",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/pullRequest",
            "properties": {
              "additions": {
                "type": "integer",
              },
              "base": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_by_number_base",
              },
              "body": {
                "type": "string",
              },
              "changed_files": {
                "type": "integer",
              },
              "closed_at": {
                "type": "string",
              },
              "comments": {
                "type": "integer",
              },
              "commits": {
                "type": "integer",
              },
              "created_at": {
                "type": "string",
              },
              "deletions": {
                "type": "integer",
              },
              "diff_url": {
                "type": "string",
              },
              "head": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_by_number_head",
              },
              "html_url": {
                "type": "string",
              },
              "issue_url": {
                "type": "string",
              },
              "links": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_by_number_links",
              },
              "merge_commit_sha": {
                "type": "string",
              },
              "mergeable": {
                "type": "boolean",
              },
              "merged": {
                "type": "boolean",
              },
              "merged_at": {
                "type": "string",
              },
              "merged_by": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_by_number_merged_by",
              },
              "number": {
                "type": "integer",
              },
              "patch_url": {
                "type": "string",
              },
              "state": {
                "type": "string",
              },
              "title": {
                "type": "string",
              },
              "updated_at": {
                "type": "string",
              },
              "url": {
                "type": "string",
              },
              "user": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_by_number_user",
              },
            },
            "title": "pullRequest",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "body": {
          "$resolvedRef": "/definitions/pullUpdate",
          "description": undefined,
          "nullable": false,
          "properties": {
            "body": {
              "type": "string",
            },
            "state": {
              "type": "string",
            },
            "title": {
              "type": "string",
            },
          },
          "title": "pullUpdate",
          "type": "object",
        },
        "number": {
          "description": "Id of pull.",
          "in": "path",
          "name": "number",
          "nullable": false,
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Update a pull request.",
      "field": "patch_repos_by_owner_by_repo_pulls_by_number",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "PATCH",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/pulls/{args.number}",
      "requestSchema": {
        "$resolvedRef": "/definitions/pullUpdate",
        "description": undefined,
        "nullable": false,
        "properties": {
          "body": {
            "type": "string",
          },
          "state": {
            "type": "string",
          },
          "title": {
            "type": "string",
          },
        },
        "title": "pullUpdate",
        "type": "object",
      },
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/repo",
            "properties": {
              "clone_url": {
                "type": "string",
              },
              "created_at": {
                "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                "type": "string",
              },
              "description": {
                "type": "string",
              },
              "fork": {
                "type": "boolean",
              },
              "forks": {
                "type": "integer",
              },
              "forks_count": {
                "type": "integer",
              },
              "full_name": {
                "type": "string",
              },
              "git_url": {
                "type": "string",
              },
              "has_downloads": {
                "type": "boolean",
              },
              "has_issues": {
                "type": "boolean",
              },
              "has_wiki": {
                "type": "boolean",
              },
              "homepage": {
                "type": "string",
              },
              "html_url": {
                "type": "string",
              },
              "id": {
                "type": "integer",
              },
              "language": {
                "type": "string",
              },
              "master_branch": {
                "type": "string",
              },
              "mirror_url": {
                "type": "string",
              },
              "name": {
                "type": "string",
              },
              "open_issues": {
                "type": "integer",
              },
              "open_issues_count": {
                "type": "integer",
              },
              "organization": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_organization",
              },
              "owner": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_owner",
              },
              "parent": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_parent",
              },
              "private": {
                "type": "boolean",
              },
              "pushed_at": {
                "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                "type": "string",
              },
              "size": {
                "type": "integer",
              },
              "source": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_source",
              },
              "ssh_url": {
                "type": "string",
              },
              "svn_url": {
                "type": "string",
              },
              "updated_at": {
                "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                "type": "string",
              },
              "url": {
                "type": "string",
              },
              "watchers": {
                "type": "integer",
              },
              "watchers_count": {
                "type": "integer",
              },
            },
            "title": "repo",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "number": {
          "description": "Id of pull.",
          "in": "path",
          "name": "number",
          "nullable": false,
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "List comments on a pull request.",
      "field": "repos_by_owner_by_repo_pulls_by_number_comments",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/pulls/{args.number}/comments",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/pullsComment",
            "properties": {
              "body": {
                "type": "string",
              },
              "commit_id": {
                "type": "string",
              },
              "created_at": {
                "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                "type": "string",
              },
              "id": {
                "type": "integer",
              },
              "links": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_comments_by_commentId_links",
              },
              "path": {
                "type": "string",
              },
              "position": {
                "type": "integer",
              },
              "updated_at": {
                "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                "type": "string",
              },
              "url": {
                "type": "string",
              },
              "user": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_comments_by_commentId_user",
              },
            },
            "title": "pullsComment",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "body": {
          "$resolvedRef": "/definitions/pullsCommentPost",
          "description": undefined,
          "nullable": false,
          "properties": {
            "body": {
              "type": "string",
            },
            "commit_id": {
              "type": "string",
            },
            "path": {
              "type": "string",
            },
            "position": {
              "type": "number",
            },
          },
          "title": "pullsCommentPost",
          "type": "object",
        },
        "number": {
          "description": "Id of pull.",
          "in": "path",
          "name": "number",
          "nullable": false,
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Create a comment.
  #TODO Alternative input ( http://developer.github.com/v3/pulls/comments/ )
  description: |
    Alternative Input.
    Instead of passing commit_id, path, and position you can reply to an
    existing Pull Request Comment like this:

        body
           Required string
        in_reply_to
           Required number - Comment id to reply to.
",
      "field": "post_repos_by_owner_by_repo_pulls_by_number_comments",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "POST",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/pulls/{args.number}/comments",
      "requestSchema": {
        "$resolvedRef": "/definitions/pullsCommentPost",
        "description": undefined,
        "nullable": false,
        "properties": {
          "body": {
            "type": "string",
          },
          "commit_id": {
            "type": "string",
          },
          "path": {
            "type": "string",
          },
          "position": {
            "type": "number",
          },
        },
        "title": "pullsCommentPost",
        "type": "object",
      },
      "responseByStatusCode": {
        "201": {
          "responseSchema": {
            "$resolvedRef": "/definitions/pullsComment",
            "properties": {
              "body": {
                "type": "string",
              },
              "commit_id": {
                "type": "string",
              },
              "created_at": {
                "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                "type": "string",
              },
              "id": {
                "type": "integer",
              },
              "links": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_comments_by_commentId_links",
              },
              "path": {
                "type": "string",
              },
              "position": {
                "type": "integer",
              },
              "updated_at": {
                "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                "type": "string",
              },
              "url": {
                "type": "string",
              },
              "user": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_comments_by_commentId_user",
              },
            },
            "title": "pullsComment",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "number": {
          "description": "Id of pull.",
          "in": "path",
          "name": "number",
          "nullable": false,
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "List commits on a pull request.",
      "field": "repos_by_owner_by_repo_pulls_by_number_commits",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/pulls/{args.number}/commits",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/commits",
            "items": {
              "properties": {
                "author": {
                  "$ref": "#/definitions/query_repos_by_owner_by_repo_commits_items_author",
                },
                "commit": {
                  "$ref": "#/definitions/query_repos_by_owner_by_repo_commits_items_commit",
                },
                "committer": {
                  "$ref": "#/definitions/query_repos_by_owner_by_repo_commits_items_committer",
                },
                "parents": {
                  "items": {
                    "$ref": "#/definitions/query_repos_by_owner_by_repo_commits_items_parents_items",
                  },
                  "type": "array",
                },
                "sha": {
                  "type": "string",
                },
                "url": {
                  "type": "string",
                },
              },
              "title": "query_repos_by_owner_by_repo_commits_items",
              "type": "object",
            },
            "title": "commits",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "number": {
          "description": "Id of pull.",
          "in": "path",
          "name": "number",
          "nullable": false,
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "List pull requests files.",
      "field": "repos_by_owner_by_repo_pulls_by_number_files",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/pulls/{args.number}/files",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/pulls",
            "items": {
              "properties": {
                "base": {
                  "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_items_base",
                },
                "body": {
                  "type": "string",
                },
                "closed_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "created_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "diff_url": {
                  "type": "string",
                },
                "head": {
                  "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_items_head",
                },
                "html_url": {
                  "type": "string",
                },
                "issue_url": {
                  "type": "string",
                },
                "links": {
                  "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_items_links",
                },
                "merged_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "number": {
                  "type": "integer",
                },
                "patch_url": {
                  "type": "string",
                },
                "state": {
                  "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_items_state",
                },
                "title": {
                  "type": "string",
                },
                "updated_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "url": {
                  "type": "string",
                },
                "user": {
                  "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_items_user",
                },
              },
              "title": "query_repos_by_owner_by_repo_pulls_items",
              "type": "object",
            },
            "title": "pulls",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "number": {
          "description": "Id of pull.",
          "in": "path",
          "name": "number",
          "nullable": false,
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Get if a pull request has been merged.",
      "field": "repos_by_owner_by_repo_pulls_by_number_merge",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/pulls/{args.number}/merge",
      "responseByStatusCode": {
        "204": {
          "responseSchema": {
            "description": "Pull request has been merged.",
            "title": "repos_by_owner_by_repo_pulls_by_number_merge_204_response",
            "type": "null",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "body": {
          "$resolvedRef": "/definitions/mergePullBody",
          "description": undefined,
          "nullable": false,
          "properties": {
            "commit_message": {
              "type": "string",
            },
          },
          "title": "mergePullBody",
          "type": "object",
        },
        "number": {
          "description": "Id of pull.",
          "in": "path",
          "name": "number",
          "nullable": false,
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Merge a pull request (Merge Button's)",
      "field": "put_repos_by_owner_by_repo_pulls_by_number_merge",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "PUT",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/pulls/{args.number}/merge",
      "requestSchema": {
        "$resolvedRef": "/definitions/mergePullBody",
        "description": undefined,
        "nullable": false,
        "properties": {
          "commit_message": {
            "type": "string",
          },
        },
        "title": "mergePullBody",
        "type": "object",
      },
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/merge",
            "properties": {
              "merged": {
                "type": "boolean",
              },
              "message": {
                "type": "string",
              },
              "sha": {
                "type": "string",
              },
            },
            "title": "merge",
            "type": "object",
          },
        },
        "405": {
          "responseSchema": {
            "$resolvedRef": "/definitions/merge",
            "properties": {
              "merged": {
                "type": "boolean",
              },
              "message": {
                "type": "string",
              },
              "sha": {
                "type": "string",
              },
            },
            "title": "merge",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "ref": {
          "description": "The String name of the Commit/Branch/Tag. Defaults to master.",
          "in": "query",
          "name": "ref",
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Get the README.
This method returns the preferred README for a repository.
",
      "field": "repos_by_owner_by_repo_readme",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/readme",
      "queryParamArgMap": {
        "ref": "ref",
      },
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/contents-path",
            "properties": {
              "content": {
                "type": "string",
              },
              "encoding": {
                "type": "string",
              },
              "git_url": {
                "type": "string",
              },
              "html_url": {
                "type": "string",
              },
              "links": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_contents_by_path_links",
              },
              "name": {
                "type": "string",
              },
              "path": {
                "type": "string",
              },
              "sha": {
                "type": "string",
              },
              "size": {
                "type": "integer",
              },
              "type": {
                "type": "string",
              },
              "url": {
                "type": "string",
              },
            },
            "title": "contents-path",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Users with push access to the repository will receive all releases (i.e., published releases and draft releases). Users with pull access will receive published releases only",
      "field": "repos_by_owner_by_repo_releases",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/releases",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/releases",
            "items": {
              "properties": {
                "assets": {
                  "items": {
                    "$ref": "#/definitions/query_repos_by_owner_by_repo_releases_items_assets_items",
                  },
                  "type": "array",
                },
                "assets_url": {
                  "type": "string",
                },
                "author": {
                  "$ref": "#/definitions/query_repos_by_owner_by_repo_releases_items_author",
                },
                "body": {
                  "type": "string",
                },
                "created_at": {
                  "type": "string",
                },
                "draft": {
                  "type": "boolean",
                },
                "html_url": {
                  "type": "string",
                },
                "id": {
                  "type": "integer",
                },
                "name": {
                  "type": "string",
                },
                "prerelease": {
                  "type": "boolean",
                },
                "published_at": {
                  "type": "string",
                },
                "tag_name": {
                  "type": "string",
                },
                "tarball_url": {
                  "type": "string",
                },
                "target_commitish": {
                  "type": "string",
                },
                "upload_url": {
                  "type": "string",
                },
                "url": {
                  "type": "string",
                },
                "zipball_url": {
                  "type": "string",
                },
              },
              "title": "query_repos_by_owner_by_repo_releases_items",
              "type": "object",
            },
            "title": "releases",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "body": {
          "$resolvedRef": "/definitions/release-create",
          "description": undefined,
          "nullable": false,
          "properties": {
            "body": {
              "type": "string",
            },
            "draft": {
              "type": "boolean",
            },
            "name": {
              "type": "string",
            },
            "prerelease": {
              "type": "boolean",
            },
            "tag_name": {
              "type": "string",
            },
            "target_commitish": {
              "type": "string",
            },
          },
          "title": "release-create",
          "type": "object",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Create a release
Users with push access to the repository can create a release.
",
      "field": "post_repos_by_owner_by_repo_releases",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "POST",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/releases",
      "requestSchema": {
        "$resolvedRef": "/definitions/release-create",
        "description": undefined,
        "nullable": false,
        "properties": {
          "body": {
            "type": "string",
          },
          "draft": {
            "type": "boolean",
          },
          "name": {
            "type": "string",
          },
          "prerelease": {
            "type": "boolean",
          },
          "tag_name": {
            "type": "string",
          },
          "target_commitish": {
            "type": "string",
          },
        },
        "title": "release-create",
        "type": "object",
      },
      "responseByStatusCode": {
        "201": {
          "responseSchema": {
            "$resolvedRef": "/definitions/release",
            "properties": {
              "assets": {
                "items": {
                  "$ref": "#/definitions/query_repos_by_owner_by_repo_releases_by_id_assets_items",
                },
                "type": "array",
              },
              "assets_url": {
                "type": "string",
              },
              "author": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_releases_by_id_author",
              },
              "body": {
                "type": "string",
              },
              "created_at": {
                "type": "string",
              },
              "draft": {
                "type": "boolean",
              },
              "html_url": {
                "type": "string",
              },
              "id": {
                "type": "integer",
              },
              "name": {
                "type": "string",
              },
              "prerelease": {
                "type": "boolean",
              },
              "published_at": {
                "type": "string",
              },
              "tag_name": {
                "type": "string",
              },
              "tarball_url": {
                "type": "string",
              },
              "target_commitish": {
                "type": "string",
              },
              "upload_url": {
                "type": "string",
              },
              "url": {
                "type": "string",
              },
              "zipball_url": {
                "type": "string",
              },
            },
            "title": "release",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "id": {
          "description": undefined,
          "in": "path",
          "name": "id",
          "nullable": false,
          "type": "string",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Delete a release asset",
      "field": "delete_repos_by_owner_by_repo_releases_assets_by_id",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "DELETE",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/releases/assets/{args.id}",
      "responseByStatusCode": {
        "204": {
          "responseSchema": {
            "description": "No Content",
            "title": "delete_repos_by_owner_by_repo_releases_assets_by_id_204_response",
            "type": "null",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "id": {
          "description": undefined,
          "in": "path",
          "name": "id",
          "nullable": false,
          "type": "string",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Get a single release asset",
      "field": "repos_by_owner_by_repo_releases_assets_by_id",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/releases/assets/{args.id}",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/asset",
            "properties": {
              "content_type": {
                "type": "string",
              },
              "created_at": {
                "type": "string",
              },
              "download_count": {
                "type": "number",
              },
              "id": {
                "type": "number",
              },
              "label": {
                "type": "string",
              },
              "name": {
                "type": "string",
              },
              "size": {
                "type": "number",
              },
              "state": {
                "type": "string",
              },
              "updated_at": {
                "type": "string",
              },
              "uploader": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_releases_assets_by_id_uploader",
              },
              "url": {
                "type": "string",
              },
            },
            "title": "asset",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "body": {
          "$resolvedRef": "/definitions/assetPatch",
          "description": undefined,
          "nullable": false,
          "properties": {
            "label": {
              "type": "string",
            },
            "name": {
              "type": "string",
            },
          },
          "required": [
            "name",
          ],
          "title": "assetPatch",
          "type": "object",
        },
        "id": {
          "description": undefined,
          "in": "path",
          "name": "id",
          "nullable": false,
          "type": "string",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Edit a release asset
Users with push access to the repository can edit a release asset.
",
      "field": "patch_repos_by_owner_by_repo_releases_assets_by_id",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "PATCH",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/releases/assets/{args.id}",
      "requestSchema": {
        "$resolvedRef": "/definitions/assetPatch",
        "description": undefined,
        "nullable": false,
        "properties": {
          "label": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
        },
        "required": [
          "name",
        ],
        "title": "assetPatch",
        "type": "object",
      },
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/asset",
            "properties": {
              "content_type": {
                "type": "string",
              },
              "created_at": {
                "type": "string",
              },
              "download_count": {
                "type": "number",
              },
              "id": {
                "type": "number",
              },
              "label": {
                "type": "string",
              },
              "name": {
                "type": "string",
              },
              "size": {
                "type": "number",
              },
              "state": {
                "type": "string",
              },
              "updated_at": {
                "type": "string",
              },
              "uploader": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_releases_assets_by_id_uploader",
              },
              "url": {
                "type": "string",
              },
            },
            "title": "asset",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "id": {
          "description": undefined,
          "in": "path",
          "name": "id",
          "nullable": false,
          "type": "string",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Users with push access to the repository can delete a release.",
      "field": "delete_repos_by_owner_by_repo_releases_by_id",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "DELETE",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/releases/{args.id}",
      "responseByStatusCode": {
        "204": {
          "responseSchema": {
            "description": "No Content",
            "title": "delete_repos_by_owner_by_repo_releases_by_id_204_response",
            "type": "null",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "id": {
          "description": undefined,
          "in": "path",
          "name": "id",
          "nullable": false,
          "type": "string",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Get a single release",
      "field": "repos_by_owner_by_repo_releases_by_id",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/releases/{args.id}",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/release",
            "properties": {
              "assets": {
                "items": {
                  "$ref": "#/definitions/query_repos_by_owner_by_repo_releases_by_id_assets_items",
                },
                "type": "array",
              },
              "assets_url": {
                "type": "string",
              },
              "author": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_releases_by_id_author",
              },
              "body": {
                "type": "string",
              },
              "created_at": {
                "type": "string",
              },
              "draft": {
                "type": "boolean",
              },
              "html_url": {
                "type": "string",
              },
              "id": {
                "type": "integer",
              },
              "name": {
                "type": "string",
              },
              "prerelease": {
                "type": "boolean",
              },
              "published_at": {
                "type": "string",
              },
              "tag_name": {
                "type": "string",
              },
              "tarball_url": {
                "type": "string",
              },
              "target_commitish": {
                "type": "string",
              },
              "upload_url": {
                "type": "string",
              },
              "url": {
                "type": "string",
              },
              "zipball_url": {
                "type": "string",
              },
            },
            "title": "release",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "body": {
          "$resolvedRef": "/definitions/release-create",
          "description": undefined,
          "nullable": false,
          "properties": {
            "body": {
              "type": "string",
            },
            "draft": {
              "type": "boolean",
            },
            "name": {
              "type": "string",
            },
            "prerelease": {
              "type": "boolean",
            },
            "tag_name": {
              "type": "string",
            },
            "target_commitish": {
              "type": "string",
            },
          },
          "title": "release-create",
          "type": "object",
        },
        "id": {
          "description": undefined,
          "in": "path",
          "name": "id",
          "nullable": false,
          "type": "string",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Users with push access to the repository can edit a release",
      "field": "patch_repos_by_owner_by_repo_releases_by_id",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "PATCH",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/releases/{args.id}",
      "requestSchema": {
        "$resolvedRef": "/definitions/release-create",
        "description": undefined,
        "nullable": false,
        "properties": {
          "body": {
            "type": "string",
          },
          "draft": {
            "type": "boolean",
          },
          "name": {
            "type": "string",
          },
          "prerelease": {
            "type": "boolean",
          },
          "tag_name": {
            "type": "string",
          },
          "target_commitish": {
            "type": "string",
          },
        },
        "title": "release-create",
        "type": "object",
      },
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/release",
            "properties": {
              "assets": {
                "items": {
                  "$ref": "#/definitions/query_repos_by_owner_by_repo_releases_by_id_assets_items",
                },
                "type": "array",
              },
              "assets_url": {
                "type": "string",
              },
              "author": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_releases_by_id_author",
              },
              "body": {
                "type": "string",
              },
              "created_at": {
                "type": "string",
              },
              "draft": {
                "type": "boolean",
              },
              "html_url": {
                "type": "string",
              },
              "id": {
                "type": "integer",
              },
              "name": {
                "type": "string",
              },
              "prerelease": {
                "type": "boolean",
              },
              "published_at": {
                "type": "string",
              },
              "tag_name": {
                "type": "string",
              },
              "tarball_url": {
                "type": "string",
              },
              "target_commitish": {
                "type": "string",
              },
              "upload_url": {
                "type": "string",
              },
              "url": {
                "type": "string",
              },
              "zipball_url": {
                "type": "string",
              },
            },
            "title": "release",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "id": {
          "description": undefined,
          "in": "path",
          "name": "id",
          "nullable": false,
          "type": "string",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "List assets for a release",
      "field": "repos_by_owner_by_repo_releases_by_id_assets",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/releases/{args.id}/assets",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/assets",
            "items": {
              "properties": {
                "content_type": {
                  "type": "string",
                },
                "created_at": {
                  "type": "string",
                },
                "download_count": {
                  "type": "number",
                },
                "id": {
                  "type": "number",
                },
                "label": {
                  "type": "string",
                },
                "name": {
                  "type": "string",
                },
                "size": {
                  "type": "number",
                },
                "state": {
                  "type": "string",
                },
                "updated_at": {
                  "type": "string",
                },
                "uploader": {
                  "$ref": "#/definitions/query_repos_by_owner_by_repo_releases_by_id_assets_items_uploader2",
                },
                "url": {
                  "type": "string",
                },
              },
              "title": "query_repos_by_owner_by_repo_releases_by_id_assets_items",
              "type": "object",
            },
            "title": "assets",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "List Stargazers.",
      "field": "repos_by_owner_by_repo_stargazers",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/stargazers",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/users",
            "items": {
              "properties": {
                "avatar_url": {
                  "type": "string",
                },
                "gravatar_id": {
                  "type": "string",
                },
                "id": {
                  "type": "integer",
                },
                "login": {
                  "type": "string",
                },
                "url": {
                  "type": "string",
                },
              },
              "title": "query_orgs_by_org_members_items",
              "type": "object",
            },
            "title": "users",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Get the number of additions and deletions per week.
Returns a weekly aggregate of the number of additions and deletions pushed
to a repository.
",
      "field": "repos_by_owner_by_repo_stats_code_frequency",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/stats/code_frequency",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/codeFrequencyStats",
            "items": {
              "type": "integer",
            },
            "title": "codeFrequencyStats",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Get the last year of commit activity data.
Returns the last year of commit activity grouped by week. The days array
is a group of commits per day, starting on Sunday.
",
      "field": "repos_by_owner_by_repo_stats_commit_activity",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/stats/commit_activity",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/commitActivityStats",
            "items": {
              "properties": {
                "days": {
                  "items": {
                    "type": "integer",
                  },
                  "type": "array",
                },
                "total": {
                  "type": "integer",
                },
                "week": {
                  "type": "integer",
                },
              },
              "title": "query_repos_by_owner_by_repo_stats_commit_activity_items",
              "type": "object",
            },
            "title": "commitActivityStats",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Get contributors list with additions, deletions, and commit counts.",
      "field": "repos_by_owner_by_repo_stats_contributors",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/stats/contributors",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/contributorsStats",
            "items": {
              "properties": {
                "author": {
                  "$ref": "#/definitions/query_repos_by_owner_by_repo_stats_contributors_items_author",
                },
                "total": {
                  "description": "The Total number of commits authored by the contributor.",
                  "type": "integer",
                },
                "weeks": {
                  "items": {
                    "$ref": "#/definitions/query_repos_by_owner_by_repo_stats_contributors_items_weeks_items",
                  },
                  "type": "array",
                },
              },
              "title": "query_repos_by_owner_by_repo_stats_contributors_items",
              "type": "object",
            },
            "title": "contributorsStats",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Get the weekly commit count for the repo owner and everyone else.",
      "field": "repos_by_owner_by_repo_stats_participation",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/stats/participation",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/participationStats",
            "properties": {
              "all": {
                "items": {
                  "type": "integer",
                },
                "type": "array",
              },
              "owner": {
                "items": {
                  "type": "integer",
                },
                "type": "array",
              },
            },
            "title": "participationStats",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Get the number of commits per hour in each day.
Each array contains the day number, hour number, and number of commits
0-6 Sunday - Saturday
0-23 Hour of day
Number of commits

For example, [2, 14, 25] indicates that there were 25 total commits, during
the 2.00pm hour on Tuesdays. All times are based on the time zone of
individual commits.
",
      "field": "repos_by_owner_by_repo_stats_punch_card",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/stats/punch_card",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/codeFrequencyStats",
            "items": {
              "type": "integer",
            },
            "title": "codeFrequencyStats",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "ref": {
          "description": "Ref to list the statuses from. It can be a SHA, a branch name, or a tag name.",
          "in": "path",
          "name": "ref",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "List Statuses for a specific Ref.",
      "field": "repos_by_owner_by_repo_statuses_by_ref",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/statuses/{args.ref}",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/ref",
            "items": {
              "properties": {
                "created_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "creator": {
                  "$ref": "#/definitions/query_repos_by_owner_by_repo_statuses_by_ref_items_creator",
                },
                "description": {
                  "type": "string",
                },
                "id": {
                  "type": "integer",
                },
                "state": {
                  "type": "string",
                },
                "target_url": {
                  "type": "string",
                },
                "updated_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "url": {
                  "type": "string",
                },
              },
              "title": "query_repos_by_owner_by_repo_statuses_by_ref_items",
              "type": "object",
            },
            "title": "ref",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "body": {
          "$resolvedRef": "/definitions/headBranch",
          "description": undefined,
          "nullable": false,
          "properties": {
            "object": {
              "$ref": "#/definitions/query_repos_by_owner_by_repo_git_refs_by_ref_object",
            },
            "ref": {
              "type": "string",
            },
            "url": {
              "type": "string",
            },
          },
          "title": "headBranch",
          "type": "object",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "ref": {
          "description": "Ref to list the statuses from. It can be a SHA, a branch name, or a tag name.",
          "in": "path",
          "name": "ref",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Create a Status.",
      "field": "post_repos_by_owner_by_repo_statuses_by_ref",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "POST",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/statuses/{args.ref}",
      "requestSchema": {
        "$resolvedRef": "/definitions/headBranch",
        "description": undefined,
        "nullable": false,
        "properties": {
          "object": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_git_refs_by_ref_object",
          },
          "ref": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "headBranch",
        "type": "object",
      },
      "responseByStatusCode": {
        "201": {
          "responseSchema": {
            "$resolvedRef": "/definitions/ref",
            "items": {
              "properties": {
                "created_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "creator": {
                  "$ref": "#/definitions/query_repos_by_owner_by_repo_statuses_by_ref_items_creator",
                },
                "description": {
                  "type": "string",
                },
                "id": {
                  "type": "integer",
                },
                "state": {
                  "type": "string",
                },
                "target_url": {
                  "type": "string",
                },
                "updated_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "url": {
                  "type": "string",
                },
              },
              "title": "query_repos_by_owner_by_repo_statuses_by_ref_items",
              "type": "object",
            },
            "title": "ref",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "List watchers.",
      "field": "repos_by_owner_by_repo_subscribers",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/subscribers",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/users",
            "items": {
              "properties": {
                "avatar_url": {
                  "type": "string",
                },
                "gravatar_id": {
                  "type": "string",
                },
                "id": {
                  "type": "integer",
                },
                "login": {
                  "type": "string",
                },
                "url": {
                  "type": "string",
                },
              },
              "title": "query_orgs_by_org_members_items",
              "type": "object",
            },
            "title": "users",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Delete a Repository Subscription.",
      "field": "delete_repos_by_owner_by_repo_subscription",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "DELETE",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/subscription",
      "responseByStatusCode": {
        "204": {
          "responseSchema": {
            "description": "No content.",
            "title": "delete_repos_by_owner_by_repo_subscription_204_response",
            "type": "null",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Get a Repository Subscription.",
      "field": "repos_by_owner_by_repo_subscription",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/subscription",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/subscribition",
            "properties": {
              "created_at": {
                "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                "type": "string",
              },
              "ignored": {
                "type": "boolean",
              },
              "reason": {
                "type": "string",
              },
              "repository_url": {
                "type": "string",
              },
              "subscribed": {
                "type": "boolean",
              },
              "url": {
                "type": "string",
              },
            },
            "title": "subscribition",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "body": {
          "$resolvedRef": "/definitions/subscribitionBody",
          "description": undefined,
          "nullable": false,
          "properties": {
            "ignored": {
              "type": "boolean",
            },
            "subscribed": {
              "type": "boolean",
            },
          },
          "title": "subscribitionBody",
          "type": "object",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Set a Repository Subscription",
      "field": "put_repos_by_owner_by_repo_subscription",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "PUT",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/subscription",
      "requestSchema": {
        "$resolvedRef": "/definitions/subscribitionBody",
        "description": undefined,
        "nullable": false,
        "properties": {
          "ignored": {
            "type": "boolean",
          },
          "subscribed": {
            "type": "boolean",
          },
        },
        "title": "subscribitionBody",
        "type": "object",
      },
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/subscribition",
            "properties": {
              "created_at": {
                "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                "type": "string",
              },
              "ignored": {
                "type": "boolean",
              },
              "reason": {
                "type": "string",
              },
              "repository_url": {
                "type": "string",
              },
              "subscribed": {
                "type": "boolean",
              },
              "url": {
                "type": "string",
              },
            },
            "title": "subscribition",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Get list of tags.",
      "field": "repos_by_owner_by_repo_tags",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/tags",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/tags",
            "properties": {
              "message": {
                "description": "String of the tag message.",
                "type": "string",
              },
              "object": {
                "description": "String of the SHA of the git object this is tagging.",
                "type": "string",
              },
              "tag": {
                "type": "string",
              },
              "tagger": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_tags_tagger",
              },
              "type": {
                "description": "String of the type of the object we’re tagging. Normally this is a commit but it can also be a tree or a blob.",
                "type": "string",
              },
            },
            "required": [
              "tag",
              "message",
              "object",
              "type",
              "tagger",
            ],
            "title": "tags",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Get list of teams",
      "field": "repos_by_owner_by_repo_teams",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/teams",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/teams",
            "items": {
              "properties": {
                "id": {
                  "type": "integer",
                },
                "name": {
                  "type": "string",
                },
                "url": {
                  "type": "string",
                },
              },
              "title": "query_orgs_by_org_teams_items",
              "type": "object",
            },
            "title": "teams",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "List Stargazers. New implementation.",
      "field": "repos_by_owner_by_repo_watchers",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/watchers",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/users",
            "items": {
              "properties": {
                "avatar_url": {
                  "type": "string",
                },
                "gravatar_id": {
                  "type": "string",
                },
                "id": {
                  "type": "integer",
                },
                "login": {
                  "type": "string",
                },
                "url": {
                  "type": "string",
                },
              },
              "title": "query_orgs_by_org_members_items",
              "type": "object",
            },
            "title": "users",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "archive_format": {
          "description": undefined,
          "enum": [
            "tarball",
            "zipball",
          ],
          "in": "path",
          "name": "archive_format",
          "nullable": false,
          "title": "queryInput_repos_by_owner_by_repo_by_archive_format_by_path_archive_format",
          "type": "string",
        },
        "owner": {
          "description": "Name of repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "path": {
          "description": "Valid Git reference, defaults to 'master'.",
          "in": "path",
          "name": "path",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Get archive link.
This method will return a 302 to a URL to download a tarball or zipball
archive for a repository. Please make sure your HTTP framework is
configured to follow redirects or you will need to use the Location header
to make a second GET request.
Note: For private repositories, these links are temporary and expire quickly.
",
      "field": "repos_by_owner_by_repo_by_archive_format_by_path",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repos/{args.owner}/{args.repo}/{args.archive_format}/{args.path}",
      "responseByStatusCode": {},
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "since": {
          "description": "The time should be passed in as UTC in the ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.
Example: "2012-10-09T23:39:01Z".",
          "in": "query",
          "name": "since",
          "type": "string",
        },
      },
      "description": "List all public repositories.
This provides a dump of every public repository, in the order that they
were created.
Note: Pagination is powered exclusively by the since parameter. is the
Link header to get the URL for the next page of repositories.
",
      "field": "repositories",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/repositories",
      "queryParamArgMap": {
        "since": "since",
      },
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/repositories",
            "items": {
              "properties": {
                "description": {
                  "type": "string",
                },
                "fork": {
                  "type": "boolean",
                },
                "full_name": {
                  "type": "string",
                },
                "html_url": {
                  "type": "string",
                },
                "id": {
                  "type": "integer",
                },
                "name": {
                  "type": "string",
                },
                "owner": {
                  "$ref": "#/definitions/query_repositories_items_owner",
                },
                "private": {
                  "type": "boolean",
                },
                "url": {
                  "type": "string",
                },
              },
              "title": "query_repositories_items",
              "type": "object",
            },
            "title": "repositories",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "order": {
          "default": "desc",
          "description": "The sort field. if sort param is provided. Can be either asc or desc.",
          "enum": [
            "desc",
            "asc",
          ],
          "in": "query",
          "name": "order",
          "title": "queryInput_search_code_order",
          "type": "string",
        },
        "q": {
          "description": "The search terms. This can be any combination of the supported code
search parameters:
'Search In' Qualifies which fields are searched. With this qualifier
you can restrict the search to just the file contents, the file path,
or both.
'Languages' Searches code based on the language it's written in.
'Forks' Filters repositories based on the number of forks, and/or
whether code from forked repositories should be included in the results
at all.
'Size' Finds files that match a certain size (in bytes).
'Path' Specifies the path that the resulting file must be at.
'Extension' Matches files with a certain extension.
'Users' or 'Repositories' Limits searches to a specific user or repository.",
          "in": "query",
          "name": "q",
          "nullable": false,
          "type": "string",
        },
        "sort": {
          "description": "Can only be 'indexed', which indicates how recently a file has been indexed
by the GitHub search infrastructure. If not provided, results are sorted
by best match.",
          "enum": [
            "indexed",
          ],
          "in": "query",
          "name": "sort",
          "title": "queryInput_search_code_sort",
          "type": "string",
        },
      },
      "description": "Search code.",
      "field": "search_code",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/search/code",
      "queryParamArgMap": {
        "order": "order",
        "q": "q",
        "sort": "sort",
      },
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/search-code",
            "properties": {
              "items": {
                "items": {
                  "$ref": "#/definitions/query_search_code_items_items",
                },
                "type": "array",
              },
              "total_count": {
                "type": "integer",
              },
            },
            "title": "search-code",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "order": {
          "default": "desc",
          "description": "The sort field. if sort param is provided. Can be either asc or desc.",
          "enum": [
            "desc",
            "asc",
          ],
          "in": "query",
          "name": "order",
          "title": "queryInput_search_issues_order",
          "type": "string",
        },
        "q": {
          "description": "The q search term can also contain any combination of the supported issue search qualifiers:",
          "in": "query",
          "name": "q",
          "nullable": false,
          "type": "string",
        },
        "sort": {
          "description": "The sort field. Can be comments, created, or updated. Default: results are sorted by best match.",
          "enum": [
            "updated",
            "created",
            "comments",
          ],
          "in": "query",
          "name": "sort",
          "title": "queryInput_search_issues_sort",
          "type": "string",
        },
      },
      "description": "Find issues by state and keyword. (This method returns up to 100 results per page.)",
      "field": "search_issues",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/search/issues",
      "queryParamArgMap": {
        "order": "order",
        "q": "q",
        "sort": "sort",
      },
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/search-issues",
            "properties": {
              "items": {
                "items": {
                  "$ref": "#/definitions/query_search_issues_items_items",
                },
                "type": "array",
              },
              "total_count": {
                "type": "integer",
              },
            },
            "title": "search-issues",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "order": {
          "default": "desc",
          "description": "The sort field. if sort param is provided. Can be either asc or desc.",
          "enum": [
            "desc",
            "asc",
          ],
          "in": "query",
          "name": "order",
          "title": "queryInput_search_repositories_order",
          "type": "string",
        },
        "q": {
          "description": "The search terms. This can be any combination of the supported repository
search parameters:
'Search In' Qualifies which fields are searched. With this qualifier you
can restrict the search to just the repository name, description, readme,
or any combination of these.
'Size' Finds repositories that match a certain size (in kilobytes).
'Forks' Filters repositories based on the number of forks, and/or whether
forked repositories should be included in the results at all.
'Created' and 'Last Updated' Filters repositories based on times of
creation, or when they were last updated.
'Users or Repositories' Limits searches to a specific user or repository.
'Languages' Searches repositories based on the language they are written in.
'Stars' Searches repositories based on the number of stars.",
          "in": "query",
          "name": "q",
          "nullable": false,
          "type": "string",
        },
        "sort": {
          "description": "If not provided, results are sorted by best match.",
          "enum": [
            "stars",
            "forks",
            "updated",
          ],
          "in": "query",
          "name": "sort",
          "title": "queryInput_search_repositories_sort",
          "type": "string",
        },
      },
      "description": "Search repositories.",
      "field": "search_repositories",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/search/repositories",
      "queryParamArgMap": {
        "order": "order",
        "q": "q",
        "sort": "sort",
      },
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/search-repositories",
            "properties": {
              "items": {
                "items": {
                  "$ref": "#/definitions/query_search_repositories_items_items",
                },
                "type": "array",
              },
              "total_count": {
                "type": "integer",
              },
            },
            "title": "search-repositories",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "order": {
          "default": "desc",
          "description": "The sort field. if sort param is provided. Can be either asc or desc.",
          "enum": [
            "desc",
            "asc",
          ],
          "in": "query",
          "name": "order",
          "title": "queryInput_search_users_order",
          "type": "string",
        },
        "q": {
          "description": "The search terms. This can be any combination of the supported user
search parameters:
'Search In' Qualifies which fields are searched. With this qualifier you
can restrict the search to just the username, public email, full name,
location, or any combination of these.
'Repository count' Filters users based on the number of repositories they
have.
'Location' Filter users by the location indicated in their profile.
'Language' Search for users that have repositories that match a certain
language.
'Created' Filter users based on when they joined.
'Followers' Filter users based on the number of followers they have.",
          "in": "query",
          "name": "q",
          "nullable": false,
          "type": "string",
        },
        "sort": {
          "description": "If not provided, results are sorted by best match.",
          "enum": [
            "followers",
            "repositories",
            "joined",
          ],
          "in": "query",
          "name": "sort",
          "title": "queryInput_search_users_sort",
          "type": "string",
        },
      },
      "description": "Search users.",
      "field": "search_users",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/search/users",
      "queryParamArgMap": {
        "order": "order",
        "q": "q",
        "sort": "sort",
      },
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/search-users",
            "properties": {
              "items": {
                "items": {
                  "$ref": "#/definitions/query_search_users_items_items",
                },
                "type": "array",
              },
              "total_count": {
                "type": "integer",
              },
            },
            "title": "search-users",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "teamId": {
          "description": "Id of team.",
          "in": "path",
          "name": "teamId",
          "nullable": false,
          "type": "integer",
        },
      },
      "description": "Delete team.
In order to delete a team, the authenticated user must be an owner of the
org that the team is associated with.
",
      "field": "delete_teams_by_teamId",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "DELETE",
      "operationHeaders": undefined,
      "path": "/teams/{args.teamId}",
      "responseByStatusCode": {
        "204": {
          "responseSchema": {
            "description": "No content.",
            "title": "delete_teams_by_teamId_204_response",
            "type": "null",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "teamId": {
          "description": "Id of team.",
          "in": "path",
          "name": "teamId",
          "nullable": false,
          "type": "integer",
        },
      },
      "description": "Get team.",
      "field": "teams_by_teamId",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/teams/{args.teamId}",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/team",
            "properties": {
              "id": {
                "type": "integer",
              },
              "members_count": {
                "type": "integer",
              },
              "name": {
                "type": "string",
              },
              "permission": {
                "type": "string",
              },
              "repos_count": {
                "type": "integer",
              },
              "url": {
                "type": "string",
              },
            },
            "title": "team",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "body": {
          "$resolvedRef": "/definitions/editTeam",
          "description": undefined,
          "nullable": false,
          "properties": {
            "name": {
              "type": "string",
            },
            "permission": {
              "$ref": "#/definitions/mutationInput_patch_teams_by_teamId_input_permission",
            },
          },
          "required": [
            "name",
          ],
          "title": "editTeam",
          "type": "object",
        },
        "teamId": {
          "description": "Id of team.",
          "in": "path",
          "name": "teamId",
          "nullable": false,
          "type": "integer",
        },
      },
      "description": "Edit team.
In order to edit a team, the authenticated user must be an owner of the org
that the team is associated with.
",
      "field": "patch_teams_by_teamId",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "PATCH",
      "operationHeaders": undefined,
      "path": "/teams/{args.teamId}",
      "requestSchema": {
        "$resolvedRef": "/definitions/editTeam",
        "description": undefined,
        "nullable": false,
        "properties": {
          "name": {
            "type": "string",
          },
          "permission": {
            "$ref": "#/definitions/mutationInput_patch_teams_by_teamId_input_permission",
          },
        },
        "required": [
          "name",
        ],
        "title": "editTeam",
        "type": "object",
      },
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/team",
            "properties": {
              "id": {
                "type": "integer",
              },
              "members_count": {
                "type": "integer",
              },
              "name": {
                "type": "string",
              },
              "permission": {
                "type": "string",
              },
              "repos_count": {
                "type": "integer",
              },
              "url": {
                "type": "string",
              },
            },
            "title": "team",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "teamId": {
          "description": "Id of team.",
          "in": "path",
          "name": "teamId",
          "nullable": false,
          "type": "integer",
        },
      },
      "description": "List team members.
In order to list members in a team, the authenticated user must be a member
of the team.
",
      "field": "teams_by_teamId_members",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/teams/{args.teamId}/members",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/users",
            "items": {
              "properties": {
                "avatar_url": {
                  "type": "string",
                },
                "gravatar_id": {
                  "type": "string",
                },
                "id": {
                  "type": "integer",
                },
                "login": {
                  "type": "string",
                },
                "url": {
                  "type": "string",
                },
              },
              "title": "query_orgs_by_org_members_items",
              "type": "object",
            },
            "title": "users",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "teamId": {
          "description": "Id of team.",
          "in": "path",
          "name": "teamId",
          "nullable": false,
          "type": "integer",
        },
        "username": {
          "description": "Name of a member.",
          "in": "path",
          "name": "username",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "The "Remove team member" API is deprecated and is scheduled for removal in the next major version of the API. We recommend using the Remove team membership API instead. It allows you to remove both active and pending memberships.

Remove team member.
In order to remove a user from a team, the authenticated user must have 'admin'
permissions to the team or be an owner of the org that the team is associated
with.
NOTE This does not delete the user, it just remove them from the team.
",
      "field": "delete_teams_by_teamId_members_by_username",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "DELETE",
      "operationHeaders": undefined,
      "path": "/teams/{args.teamId}/members/{args.username}",
      "responseByStatusCode": {
        "204": {
          "responseSchema": {
            "description": "Team member removed.",
            "title": "delete_teams_by_teamId_members_by_username_204_response",
            "type": "null",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "teamId": {
          "description": "Id of team.",
          "in": "path",
          "name": "teamId",
          "nullable": false,
          "type": "integer",
        },
        "username": {
          "description": "Name of a member.",
          "in": "path",
          "name": "username",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "The "Get team member" API is deprecated and is scheduled for removal in the next major version of the API. We recommend using the Get team membership API instead. It allows you to get both active and pending memberships.

Get team member.
In order to get if a user is a member of a team, the authenticated user mus
be a member of the team.
",
      "field": "teams_by_teamId_members_by_username",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/teams/{args.teamId}/members/{args.username}",
      "responseByStatusCode": {
        "204": {
          "responseSchema": {
            "description": "User is a member.",
            "title": "teams_by_teamId_members_by_username_204_response",
            "type": "null",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "teamId": {
          "description": "Id of team.",
          "in": "path",
          "name": "teamId",
          "nullable": false,
          "type": "integer",
        },
        "username": {
          "description": "Name of a member.",
          "in": "path",
          "name": "username",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "The API (described below) is deprecated and is scheduled for removal in the next major version of the API. We recommend using the Add team membership API instead. It allows you to invite new organization members to your teams.

Add team member.
In order to add a user to a team, the authenticated user must have 'admin'
permissions to the team or be an owner of the org that the team is associated
with.
",
      "field": "put_teams_by_teamId_members_by_username",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "PUT",
      "operationHeaders": undefined,
      "path": "/teams/{args.teamId}/members/{args.username}",
      "responseByStatusCode": {
        "204": {
          "responseSchema": {
            "description": "Team member added.",
            "title": "put_teams_by_teamId_members_by_username_204_response",
            "type": "null",
          },
        },
        "422": {
          "responseSchema": {
            "$resolvedRef": "/definitions/organizationAsTeamMember",
            "properties": {
              "errors": {
                "items": {
                  "$ref": "#/definitions/mutation_put_teams_by_teamId_members_by_username_oneOf_1_errors_items",
                },
                "type": "array",
              },
              "message": {
                "type": "string",
              },
            },
            "title": "organizationAsTeamMember",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "teamId": {
          "description": "Id of team.",
          "in": "path",
          "name": "teamId",
          "nullable": false,
          "type": "integer",
        },
        "username": {
          "description": "Name of a member.",
          "in": "path",
          "name": "username",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Remove team membership.
In order to remove a membership between a user and a team, the authenticated user must have 'admin' permissions to the team or be an owner of the organization that the team is associated with. NOTE: This does not delete the user, it just removes their membership from the team.
",
      "field": "delete_teams_by_teamId_memberships_by_username",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "DELETE",
      "operationHeaders": undefined,
      "path": "/teams/{args.teamId}/memberships/{args.username}",
      "responseByStatusCode": {
        "204": {
          "responseSchema": {
            "description": "Team member removed.",
            "title": "delete_teams_by_teamId_memberships_by_username_204_response",
            "type": "null",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "teamId": {
          "description": "Id of team.",
          "in": "path",
          "name": "teamId",
          "nullable": false,
          "type": "integer",
        },
        "username": {
          "description": "Name of a member.",
          "in": "path",
          "name": "username",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Get team membership.
In order to get a user's membership with a team, the authenticated user must be a member of the team or an owner of the team's organization.
",
      "field": "teams_by_teamId_memberships_by_username",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/teams/{args.teamId}/memberships/{args.username}",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/teamMembership",
            "properties": {
              "state": {
                "type": "string",
              },
              "url": {
                "type": "string",
              },
            },
            "title": "teamMembership",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "teamId": {
          "description": "Id of team.",
          "in": "path",
          "name": "teamId",
          "nullable": false,
          "type": "integer",
        },
        "username": {
          "description": "Name of a member.",
          "in": "path",
          "name": "username",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Add team membership.
In order to add a membership between a user and a team, the authenticated user must have 'admin' permissions to the team or be an owner of the organization that the team is associated with.

If the user is already a part of the team's organization (meaning they're on at least one other team in the organization), this endpoint will add the user to the team.

If the user is completely unaffiliated with the team's organization (meaning they're on none of the organization's teams), this endpoint will send an invitation to the user via email. This newly-created membership will be in the 'pending' state until the user accepts the invitation, at which point the membership will transition to the 'active' state and the user will be added as a member of the team.
",
      "field": "put_teams_by_teamId_memberships_by_username",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "PUT",
      "operationHeaders": undefined,
      "path": "/teams/{args.teamId}/memberships/{args.username}",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/teamMembership",
            "properties": {
              "state": {
                "type": "string",
              },
              "url": {
                "type": "string",
              },
            },
            "title": "teamMembership",
            "type": "object",
          },
        },
        "422": {
          "responseSchema": {
            "$resolvedRef": "/definitions/organizationAsTeamMember",
            "properties": {
              "errors": {
                "items": {
                  "$ref": "#/definitions/mutation_put_teams_by_teamId_members_by_username_oneOf_1_errors_items",
                },
                "type": "array",
              },
              "message": {
                "type": "string",
              },
            },
            "title": "organizationAsTeamMember",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "teamId": {
          "description": "Id of team.",
          "in": "path",
          "name": "teamId",
          "nullable": false,
          "type": "integer",
        },
      },
      "description": "List team repos",
      "field": "teams_by_teamId_repos",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/teams/{args.teamId}/repos",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/teamRepos",
            "items": {
              "properties": {
                "clone_url": {
                  "type": "string",
                },
                "created_at": {
                  "type": "string",
                },
                "description": {
                  "type": "string",
                },
                "fork": {
                  "type": "boolean",
                },
                "forks": {
                  "type": "integer",
                },
                "forks_count": {
                  "type": "integer",
                },
                "full_name": {
                  "type": "string",
                },
                "git_url": {
                  "type": "string",
                },
                "homepage": {
                  "type": "string",
                },
                "html_url": {
                  "type": "string",
                },
                "id": {
                  "type": "integer",
                },
                "language": {
                  "type": "null",
                },
                "master_branch": {
                  "type": "string",
                },
                "mirror_url": {
                  "type": "string",
                },
                "name": {
                  "type": "string",
                },
                "open_issues": {
                  "type": "integer",
                },
                "open_issues_count": {
                  "type": "integer",
                },
                "owner": {
                  "$ref": "#/definitions/query_teams_by_teamId_repos_items_owner",
                },
                "private": {
                  "type": "boolean",
                },
                "pushed_at": {
                  "type": "string",
                },
                "size": {
                  "type": "integer",
                },
                "ssh_url": {
                  "type": "string",
                },
                "svn_url": {
                  "type": "string",
                },
                "updated_at": {
                  "type": "string",
                },
                "url": {
                  "type": "string",
                },
                "watchers": {
                  "type": "integer",
                },
                "watchers_count": {
                  "type": "integer",
                },
              },
              "title": "query_teams_by_teamId_repos_items",
              "type": "object",
            },
            "title": "teamRepos",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "org": {
          "description": "Name of a organization.",
          "in": "path",
          "name": "org",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of a repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
        "teamId": {
          "description": "Id of team.",
          "in": "path",
          "name": "teamId",
          "nullable": false,
          "type": "integer",
        },
      },
      "description": "In order to add a repository to a team, the authenticated user must be an owner of the org that the team is associated with. Also, the repository must be owned by the organization, or a direct fork of a repository owned by the organization.",
      "field": "put_teams_by_teamId_repos_by_org_by_repo",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "PUT",
      "operationHeaders": undefined,
      "path": "/teams/{args.teamId}/repos/{args.org}/{args.repo}",
      "responseByStatusCode": {},
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "owner": {
          "description": "Name of a repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of a repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
        "teamId": {
          "description": "Id of team.",
          "in": "path",
          "name": "teamId",
          "nullable": false,
          "type": "integer",
        },
      },
      "description": "In order to remove a repository from a team, the authenticated user must be an owner of the org that the team is associated with. NOTE: This does not delete the repository, it just removes it from the team.",
      "field": "delete_teams_by_teamId_repos_by_owner_by_repo",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "DELETE",
      "operationHeaders": undefined,
      "path": "/teams/{args.teamId}/repos/{args.owner}/{args.repo}",
      "responseByStatusCode": {
        "204": {
          "responseSchema": {
            "description": "No content.",
            "title": "delete_teams_by_teamId_repos_by_owner_by_repo_204_response",
            "type": "null",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "owner": {
          "description": "Name of a repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of a repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
        "teamId": {
          "description": "Id of team.",
          "in": "path",
          "name": "teamId",
          "nullable": false,
          "type": "integer",
        },
      },
      "description": "Check if a team manages a repository",
      "field": "teams_by_teamId_repos_by_owner_by_repo",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/teams/{args.teamId}/repos/{args.owner}/{args.repo}",
      "responseByStatusCode": {},
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
      },
      "description": "Get the authenticated user.",
      "field": "user",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/user",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/user",
            "properties": {
              "avatar_url": {
                "type": "string",
              },
              "bio": {
                "type": "string",
              },
              "blog": {
                "type": "string",
              },
              "collaborators": {
                "type": "integer",
              },
              "company": {
                "type": "string",
              },
              "created_at": {
                "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                "type": "string",
              },
              "disk_usage": {
                "type": "integer",
              },
              "email": {
                "type": "string",
              },
              "followers": {
                "type": "integer",
              },
              "following": {
                "type": "integer",
              },
              "gravatar_id": {
                "type": "string",
              },
              "hireable": {
                "type": "boolean",
              },
              "html_url": {
                "type": "string",
              },
              "id": {
                "type": "integer",
              },
              "location": {
                "type": "string",
              },
              "login": {
                "type": "string",
              },
              "name": {
                "type": "string",
              },
              "owned_private_repos": {
                "type": "integer",
              },
              "plan": {
                "$ref": "#/definitions/query_user_plan",
              },
              "private_gists": {
                "type": "integer",
              },
              "public_gists": {
                "type": "integer",
              },
              "public_repos": {
                "type": "integer",
              },
              "total_private_repos": {
                "type": "integer",
              },
              "type": {
                "type": "string",
              },
              "url": {
                "type": "string",
              },
            },
            "title": "user",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "body": {
          "$resolvedRef": "/definitions/user-update",
          "description": undefined,
          "nullable": false,
          "properties": {
            "bio": {
              "type": "string",
            },
            "blog": {
              "type": "string",
            },
            "company": {
              "type": "string",
            },
            "email": {
              "type": "string",
            },
            "hireable": {
              "type": "boolean",
            },
            "location": {
              "type": "string",
            },
            "name": {
              "type": "string",
            },
          },
          "title": "user-update",
          "type": "object",
        },
      },
      "description": "Update the authenticated user.",
      "field": "patch_user",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "PATCH",
      "operationHeaders": undefined,
      "path": "/user",
      "requestSchema": {
        "$resolvedRef": "/definitions/user-update",
        "description": undefined,
        "nullable": false,
        "properties": {
          "bio": {
            "type": "string",
          },
          "blog": {
            "type": "string",
          },
          "company": {
            "type": "string",
          },
          "email": {
            "type": "string",
          },
          "hireable": {
            "type": "boolean",
          },
          "location": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
        },
        "title": "user-update",
        "type": "object",
      },
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/user",
            "properties": {
              "avatar_url": {
                "type": "string",
              },
              "bio": {
                "type": "string",
              },
              "blog": {
                "type": "string",
              },
              "collaborators": {
                "type": "integer",
              },
              "company": {
                "type": "string",
              },
              "created_at": {
                "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                "type": "string",
              },
              "disk_usage": {
                "type": "integer",
              },
              "email": {
                "type": "string",
              },
              "followers": {
                "type": "integer",
              },
              "following": {
                "type": "integer",
              },
              "gravatar_id": {
                "type": "string",
              },
              "hireable": {
                "type": "boolean",
              },
              "html_url": {
                "type": "string",
              },
              "id": {
                "type": "integer",
              },
              "location": {
                "type": "string",
              },
              "login": {
                "type": "string",
              },
              "name": {
                "type": "string",
              },
              "owned_private_repos": {
                "type": "integer",
              },
              "plan": {
                "$ref": "#/definitions/query_user_plan",
              },
              "private_gists": {
                "type": "integer",
              },
              "public_gists": {
                "type": "integer",
              },
              "public_repos": {
                "type": "integer",
              },
              "total_private_repos": {
                "type": "integer",
              },
              "type": {
                "type": "string",
              },
              "url": {
                "type": "string",
              },
            },
            "title": "user",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "body": {
          "$resolvedRef": "/definitions/user-emails",
          "description": undefined,
          "items": {
            "type": "string",
          },
          "nullable": false,
          "title": "user-emails",
          "type": "array",
        },
      },
      "description": "Delete email address(es).
You can include a single email address or an array of addresses.
",
      "field": "delete_user_emails",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "DELETE",
      "operationHeaders": undefined,
      "path": "/user/emails",
      "requestSchema": {
        "$resolvedRef": "/definitions/user-emails",
        "description": undefined,
        "items": {
          "type": "string",
        },
        "nullable": false,
        "title": "user-emails",
        "type": "array",
      },
      "responseByStatusCode": {
        "204": {
          "responseSchema": {
            "description": "No content.",
            "title": "delete_user_emails_204_response",
            "type": "null",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
      },
      "description": "List email addresses for a user.
In the final version of the API, this method will return an array of hashes
with extended information for each email address indicating if the address
has been verified and if it's primary email address for GitHub.
Until API v3 is finalized, use the application/vnd.github.v3 media type to
get other response format.
",
      "field": "user_emails",
      "headers": {
        "Accept": "application/vnd.github.v3",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/user/emails",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/user-emails",
            "description": undefined,
            "items": {
              "type": "string",
            },
            "nullable": false,
            "title": "user-emails",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "body": {
          "$resolvedRef": "/definitions/emailsPost",
          "description": undefined,
          "items": {
            "type": "string",
          },
          "nullable": false,
          "title": "emailsPost",
          "type": "array",
        },
      },
      "description": "Add email address(es).
You can post a single email address or an array of addresses.
",
      "field": "post_user_emails",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "POST",
      "operationHeaders": undefined,
      "path": "/user/emails",
      "requestSchema": {
        "$resolvedRef": "/definitions/emailsPost",
        "description": undefined,
        "items": {
          "type": "string",
        },
        "nullable": false,
        "title": "emailsPost",
        "type": "array",
      },
      "responseByStatusCode": {},
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
      },
      "description": "List the authenticated user's followers",
      "field": "user_followers",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/user/followers",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/users",
            "items": {
              "properties": {
                "avatar_url": {
                  "type": "string",
                },
                "gravatar_id": {
                  "type": "string",
                },
                "id": {
                  "type": "integer",
                },
                "login": {
                  "type": "string",
                },
                "url": {
                  "type": "string",
                },
              },
              "title": "query_orgs_by_org_members_items",
              "type": "object",
            },
            "title": "users",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
      },
      "description": "List who the authenticated user is following.",
      "field": "user_following",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/user/following",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/users",
            "items": {
              "properties": {
                "avatar_url": {
                  "type": "string",
                },
                "gravatar_id": {
                  "type": "string",
                },
                "id": {
                  "type": "integer",
                },
                "login": {
                  "type": "string",
                },
                "url": {
                  "type": "string",
                },
              },
              "title": "query_orgs_by_org_members_items",
              "type": "object",
            },
            "title": "users",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "username": {
          "description": "Name of user.",
          "in": "path",
          "name": "username",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Unfollow a user.
Unfollowing a user requires the user to be logged in and authenticated with
basic auth or OAuth with the user:follow scope.
",
      "field": "delete_user_following_by_username",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "DELETE",
      "operationHeaders": undefined,
      "path": "/user/following/{args.username}",
      "responseByStatusCode": {
        "204": {
          "responseSchema": {
            "description": "User unfollowed.",
            "title": "delete_user_following_by_username_204_response",
            "type": "null",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "username": {
          "description": "Name of user.",
          "in": "path",
          "name": "username",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Check if you are following a user.",
      "field": "user_following_by_username",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/user/following/{args.username}",
      "responseByStatusCode": {
        "204": {
          "responseSchema": {
            "description": "Response if you are following this user.",
            "title": "user_following_by_username_204_response",
            "type": "null",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "username": {
          "description": "Name of user.",
          "in": "path",
          "name": "username",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Follow a user.
Following a user requires the user to be logged in and authenticated with
basic auth or OAuth with the user:follow scope.
",
      "field": "put_user_following_by_username",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "PUT",
      "operationHeaders": undefined,
      "path": "/user/following/{args.username}",
      "responseByStatusCode": {
        "204": {
          "responseSchema": {
            "description": "You are now following the user.",
            "title": "put_user_following_by_username_204_response",
            "type": "null",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "direction": {
          "default": "desc",
          "description": undefined,
          "enum": [
            "asc",
            "desc",
          ],
          "in": "query",
          "name": "direction",
          "nullable": false,
          "title": "queryInput_user_issues_direction",
          "type": "string",
        },
        "filter": {
          "default": "all",
          "description": "Issues assigned to you / created by you / mentioning you / you're
subscribed to updates for / All issues the authenticated user can see",
          "enum": [
            "assigned",
            "created",
            "mentioned",
            "subscribed",
            "all",
          ],
          "in": "query",
          "name": "filter",
          "nullable": false,
          "title": "queryInput_user_issues_filter",
          "type": "string",
        },
        "labels": {
          "description": "String list of comma separated Label names. Example - bug,ui,@high.",
          "in": "query",
          "name": "labels",
          "nullable": false,
          "type": "string",
        },
        "since": {
          "description": "Optional string of a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.
Only issues updated at or after this time are returned.",
          "in": "query",
          "name": "since",
          "type": "string",
        },
        "sort": {
          "default": "created",
          "description": undefined,
          "enum": [
            "created",
            "updated",
            "comments",
          ],
          "in": "query",
          "name": "sort",
          "nullable": false,
          "title": "queryInput_user_issues_sort",
          "type": "string",
        },
        "state": {
          "default": "open",
          "description": undefined,
          "enum": [
            "open",
            "closed",
          ],
          "in": "query",
          "name": "state",
          "nullable": false,
          "title": "queryInput_user_issues_state",
          "type": "string",
        },
      },
      "description": "List issues.
List all issues across owned and member repositories for the authenticated
user.
",
      "field": "user_issues",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/user/issues",
      "queryParamArgMap": {
        "direction": "direction",
        "filter": "filter",
        "labels": "labels",
        "since": "since",
        "sort": "sort",
        "state": "state",
      },
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/issues",
            "items": {
              "properties": {
                "assignee": {
                  "$ref": "#/definitions/query_issues_items_assignee",
                },
                "body": {
                  "type": "string",
                },
                "closed_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "comments": {
                  "type": "integer",
                },
                "created_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "html_url": {
                  "type": "string",
                },
                "labels": {
                  "items": {
                    "$ref": "#/definitions/query_issues_items_labels_items",
                  },
                  "type": "array",
                },
                "milestone": {
                  "$ref": "#/definitions/query_issues_items_milestone",
                },
                "number": {
                  "type": "integer",
                },
                "pull_request": {
                  "$ref": "#/definitions/query_issues_items_pull_request",
                },
                "state": {
                  "$ref": "#/definitions/query_issues_items_state",
                },
                "title": {
                  "type": "string",
                },
                "updated_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "url": {
                  "type": "string",
                },
                "user": {
                  "$ref": "#/definitions/query_issues_items_user",
                },
              },
              "title": "query_issues_items",
              "type": "object",
            },
            "title": "issues",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
      },
      "description": "List your public keys.
Lists the current user's keys. Management of public keys via the API requires
that you are authenticated through basic auth, or OAuth with the 'user', 'write:public_key' scopes.
",
      "field": "user_keys",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/user/keys",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/gitignore",
            "title": "gitignore",
            "type": "string",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "body": {
          "$resolvedRef": "/definitions/user-keys-post",
          "description": undefined,
          "nullable": false,
          "properties": {
            "key": {
              "type": "string",
            },
            "title": {
              "type": "string",
            },
          },
          "title": "user-keys-post",
          "type": "object",
        },
      },
      "description": "Create a public key.",
      "field": "post_user_keys",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "POST",
      "operationHeaders": undefined,
      "path": "/user/keys",
      "requestSchema": {
        "$resolvedRef": "/definitions/user-keys-post",
        "description": undefined,
        "nullable": false,
        "properties": {
          "key": {
            "type": "string",
          },
          "title": {
            "type": "string",
          },
        },
        "title": "user-keys-post",
        "type": "object",
      },
      "responseByStatusCode": {
        "201": {
          "responseSchema": {
            "$resolvedRef": "/definitions/user-keys-keyId",
            "properties": {
              "id": {
                "type": "integer",
              },
              "key": {
                "type": "string",
              },
              "title": {
                "type": "string",
              },
              "url": {
                "type": "string",
              },
            },
            "title": "user-keys-keyId",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "keyId": {
          "description": "ID of key.",
          "in": "path",
          "name": "keyId",
          "nullable": false,
          "type": "integer",
        },
      },
      "description": "Delete a public key. Removes a public key. Requires that you are authenticated via Basic Auth or via OAuth with at least admin:public_key scope.",
      "field": "delete_user_keys_by_keyId",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "DELETE",
      "operationHeaders": undefined,
      "path": "/user/keys/{args.keyId}",
      "responseByStatusCode": {
        "204": {
          "responseSchema": {
            "description": "No content.",
            "title": "delete_user_keys_by_keyId_204_response",
            "type": "null",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "keyId": {
          "description": "ID of key.",
          "in": "path",
          "name": "keyId",
          "nullable": false,
          "type": "integer",
        },
      },
      "description": "Get a single public key.",
      "field": "user_keys_by_keyId",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/user/keys/{args.keyId}",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/user-keys-keyId",
            "properties": {
              "id": {
                "type": "integer",
              },
              "key": {
                "type": "string",
              },
              "title": {
                "type": "string",
              },
              "url": {
                "type": "string",
              },
            },
            "title": "user-keys-keyId",
            "type": "object",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
      },
      "description": "List public and private organizations for the authenticated user.",
      "field": "user_orgs",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/user/orgs",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/gitignore",
            "title": "gitignore",
            "type": "string",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "type": {
          "default": "all",
          "description": undefined,
          "enum": [
            "all",
            "public",
            "private",
            "forks",
            "sources",
            "member",
          ],
          "in": "query",
          "name": "type",
          "title": "queryInput_user_repos_type",
          "type": "string",
        },
      },
      "description": "List repositories for the authenticated user. Note that this does not include
repositories owned by organizations which the user can access. You can lis
user organizations and list organization repositories separately.
",
      "field": "user_repos",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/user/repos",
      "queryParamArgMap": {
        "type": "type",
      },
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/repos",
            "items": {
              "properties": {
                "clone_url": {
                  "type": "string",
                },
                "created_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "description": {
                  "type": "string",
                },
                "fork": {
                  "type": "boolean",
                },
                "forks": {
                  "type": "integer",
                },
                "forks_count": {
                  "type": "integer",
                },
                "full_name": {
                  "type": "string",
                },
                "git_url": {
                  "type": "string",
                },
                "homepage": {
                  "type": "string",
                },
                "html_url": {
                  "type": "string",
                },
                "id": {
                  "type": "integer",
                },
                "language": {
                  "type": "string",
                },
                "master_branch": {
                  "type": "string",
                },
                "mirror_url": {
                  "type": "string",
                },
                "name": {
                  "type": "string",
                },
                "open_issues": {
                  "type": "integer",
                },
                "open_issues_count": {
                  "type": "integer",
                },
                "owner": {
                  "$ref": "#/definitions/query_orgs_by_org_repos_items_owner",
                },
                "private": {
                  "type": "boolean",
                },
                "pushed_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "size": {
                  "type": "integer",
                },
                "ssh_url": {
                  "type": "string",
                },
                "svn_url": {
                  "type": "string",
                },
                "updated_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "url": {
                  "type": "string",
                },
                "watchers": {
                  "type": "integer",
                },
                "watchers_count": {
                  "type": "integer",
                },
              },
              "title": "query_orgs_by_org_repos_items",
              "type": "object",
            },
            "title": "repos",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "body": {
          "$resolvedRef": "/definitions/postRepo",
          "description": undefined,
          "nullable": false,
          "properties": {
            "auto_init": {
              "description": "True to create an initial commit with empty README. Default is false.",
              "type": "boolean",
            },
            "description": {
              "type": "string",
            },
            "gitignore_template": {
              "description": "Desired language or platform .gitignore template to apply. Use the name of the template without the extension. For example, "Haskell" Ignored if auto_init parameter is not provided.",
              "type": "string",
            },
            "has_downloads": {
              "description": "True to enable downloads for this repository, false to disable them. Default is true.",
              "type": "boolean",
            },
            "has_issues": {
              "description": "True to enable issues for this repository, false to disable them. Default is true.",
              "type": "boolean",
            },
            "has_wiki": {
              "description": "True to enable the wiki for this repository, false to disable it. Default is true.",
              "type": "boolean",
            },
            "homepage": {
              "type": "string",
            },
            "name": {
              "type": "string",
            },
            "private": {
              "description": "True to create a private repository, false to create a public one. Creating private repositories requires a paid GitHub account.",
              "type": "boolean",
            },
            "team_id": {
              "description": "The id of the team that will be granted access to this repository. This is only valid when creating a repo in an organization.",
              "type": "integer",
            },
          },
          "required": [
            "name",
          ],
          "title": "postRepo",
          "type": "object",
        },
      },
      "description": "Create a new repository for the authenticated user. OAuth users must supply
repo scope.
",
      "field": "post_user_repos",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "POST",
      "operationHeaders": undefined,
      "path": "/user/repos",
      "requestSchema": {
        "$resolvedRef": "/definitions/postRepo",
        "description": undefined,
        "nullable": false,
        "properties": {
          "auto_init": {
            "description": "True to create an initial commit with empty README. Default is false.",
            "type": "boolean",
          },
          "description": {
            "type": "string",
          },
          "gitignore_template": {
            "description": "Desired language or platform .gitignore template to apply. Use the name of the template without the extension. For example, "Haskell" Ignored if auto_init parameter is not provided.",
            "type": "string",
          },
          "has_downloads": {
            "description": "True to enable downloads for this repository, false to disable them. Default is true.",
            "type": "boolean",
          },
          "has_issues": {
            "description": "True to enable issues for this repository, false to disable them. Default is true.",
            "type": "boolean",
          },
          "has_wiki": {
            "description": "True to enable the wiki for this repository, false to disable it. Default is true.",
            "type": "boolean",
          },
          "homepage": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
          "private": {
            "description": "True to create a private repository, false to create a public one. Creating private repositories requires a paid GitHub account.",
            "type": "boolean",
          },
          "team_id": {
            "description": "The id of the team that will be granted access to this repository. This is only valid when creating a repo in an organization.",
            "type": "integer",
          },
        },
        "required": [
          "name",
        ],
        "title": "postRepo",
        "type": "object",
      },
      "responseByStatusCode": {
        "201": {
          "responseSchema": {
            "$resolvedRef": "/definitions/repos",
            "items": {
              "properties": {
                "clone_url": {
                  "type": "string",
                },
                "created_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "description": {
                  "type": "string",
                },
                "fork": {
                  "type": "boolean",
                },
                "forks": {
                  "type": "integer",
                },
                "forks_count": {
                  "type": "integer",
                },
                "full_name": {
                  "type": "string",
                },
                "git_url": {
                  "type": "string",
                },
                "homepage": {
                  "type": "string",
                },
                "html_url": {
                  "type": "string",
                },
                "id": {
                  "type": "integer",
                },
                "language": {
                  "type": "string",
                },
                "master_branch": {
                  "type": "string",
                },
                "mirror_url": {
                  "type": "string",
                },
                "name": {
                  "type": "string",
                },
                "open_issues": {
                  "type": "integer",
                },
                "open_issues_count": {
                  "type": "integer",
                },
                "owner": {
                  "$ref": "#/definitions/query_orgs_by_org_repos_items_owner",
                },
                "private": {
                  "type": "boolean",
                },
                "pushed_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "size": {
                  "type": "integer",
                },
                "ssh_url": {
                  "type": "string",
                },
                "svn_url": {
                  "type": "string",
                },
                "updated_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "url": {
                  "type": "string",
                },
                "watchers": {
                  "type": "integer",
                },
                "watchers_count": {
                  "type": "integer",
                },
              },
              "title": "query_orgs_by_org_repos_items",
              "type": "object",
            },
            "title": "repos",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "direction": {
          "description": "Ignored without 'sort' parameter.",
          "in": "query",
          "name": "direction",
          "type": "string",
        },
        "sort": {
          "default": "created",
          "description": "",
          "enum": [
            "created",
            "updated",
          ],
          "in": "query",
          "name": "sort",
          "title": "queryInput_user_starred_sort",
          "type": "string",
        },
      },
      "description": "List repositories being starred by the authenticated user.",
      "field": "user_starred",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/user/starred",
      "queryParamArgMap": {
        "direction": "direction",
        "sort": "sort",
      },
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/gitignore",
            "title": "gitignore",
            "type": "string",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "owner": {
          "description": "Name of a repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of a repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Unstar a repository",
      "field": "delete_user_starred_by_owner_by_repo",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "DELETE",
      "operationHeaders": undefined,
      "path": "/user/starred/{args.owner}/{args.repo}",
      "responseByStatusCode": {
        "204": {
          "responseSchema": {
            "description": "Unstarred.",
            "title": "delete_user_starred_by_owner_by_repo_204_response",
            "type": "null",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "owner": {
          "description": "Name of a repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of a repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Check if you are starring a repository.",
      "field": "user_starred_by_owner_by_repo",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/user/starred/{args.owner}/{args.repo}",
      "responseByStatusCode": {
        "204": {
          "responseSchema": {
            "description": "This repository is starred by you.",
            "title": "user_starred_by_owner_by_repo_204_response",
            "type": "null",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "owner": {
          "description": "Name of a repository owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of a repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Star a repository.",
      "field": "put_user_starred_by_owner_by_repo",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "PUT",
      "operationHeaders": undefined,
      "path": "/user/starred/{args.owner}/{args.repo}",
      "responseByStatusCode": {
        "204": {
          "responseSchema": {
            "description": "Repository starred.",
            "title": "put_user_starred_by_owner_by_repo_204_response",
            "type": "null",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
      },
      "description": "List repositories being watched by the authenticated user.",
      "field": "user_subscriptions",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/user/subscriptions",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/user-userId-subscribitions",
            "items": {
              "properties": {
                "clone_url": {
                  "type": "string",
                },
                "created_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "description": {
                  "type": "string",
                },
                "fork": {
                  "type": "boolean",
                },
                "forks": {
                  "type": "integer",
                },
                "forks_count": {
                  "type": "integer",
                },
                "full_name": {
                  "type": "string",
                },
                "git_url": {
                  "type": "string",
                },
                "homepage": {
                  "type": "string",
                },
                "html_url": {
                  "type": "string",
                },
                "id": {
                  "type": "integer",
                },
                "language": {
                  "type": "string",
                },
                "master_branch": {
                  "type": "integer",
                },
                "mirror_url": {
                  "type": "string",
                },
                "name": {
                  "type": "string",
                },
                "open_issues": {
                  "type": "integer",
                },
                "open_issues_count": {
                  "type": "integer",
                },
                "owner": {
                  "$ref": "#/definitions/query_user_subscriptions_items_owner",
                },
                "private": {
                  "type": "boolean",
                },
                "pushed_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "size": {
                  "type": "integer",
                },
                "ssh_url": {
                  "type": "string",
                },
                "svn_url": {
                  "type": "string",
                },
                "updated_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "url": {
                  "type": "string",
                },
                "watchers": {
                  "type": "integer",
                },
                "watchers_count": {
                  "type": "integer",
                },
              },
              "title": "query_user_subscriptions_items",
              "type": "object",
            },
            "title": "user-userId-subscribitions",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "owner": {
          "description": "Name of the owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Stop watching a repository",
      "field": "delete_user_subscriptions_by_owner_by_repo",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "DELETE",
      "operationHeaders": undefined,
      "path": "/user/subscriptions/{args.owner}/{args.repo}",
      "responseByStatusCode": {
        "204": {
          "responseSchema": {
            "description": "Unwatched.",
            "title": "delete_user_subscriptions_by_owner_by_repo_204_response",
            "type": "null",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "owner": {
          "description": "Name of the owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Check if you are watching a repository.",
      "field": "user_subscriptions_by_owner_by_repo",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/user/subscriptions/{args.owner}/{args.repo}",
      "responseByStatusCode": {
        "204": {
          "responseSchema": {
            "description": "Repository is watched by you.",
            "title": "user_subscriptions_by_owner_by_repo_204_response",
            "type": "null",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "owner": {
          "description": "Name of the owner.",
          "in": "path",
          "name": "owner",
          "nullable": false,
          "type": "string",
        },
        "repo": {
          "description": "Name of repository.",
          "in": "path",
          "name": "repo",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Watch a repository.",
      "field": "put_user_subscriptions_by_owner_by_repo",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "PUT",
      "operationHeaders": undefined,
      "path": "/user/subscriptions/{args.owner}/{args.repo}",
      "responseByStatusCode": {
        "204": {
          "responseSchema": {
            "description": "Repository is watched.",
            "title": "put_user_subscriptions_by_owner_by_repo_204_response",
            "type": "null",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "mutation",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
      },
      "description": "List all of the teams across all of the organizations to which the authenticated user belongs. This method requires user or repo scope when authenticating via OAuth.",
      "field": "user_teams",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/user/teams",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/teams-list",
            "items": {
              "properties": {
                "id": {
                  "type": "integer",
                },
                "members_count": {
                  "type": "integer",
                },
                "name": {
                  "type": "string",
                },
                "organization": {
                  "$ref": "#/definitions/query_user_teams_items_organization",
                },
                "permission": {
                  "type": "string",
                },
                "repos_count": {
                  "type": "integer",
                },
                "url": {
                  "type": "string",
                },
              },
              "title": "query_user_teams_items",
              "type": "object",
            },
            "title": "teams-list",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "since": {
          "description": "The integer ID of the last User that you've seen.",
          "in": "query",
          "name": "since",
          "type": "integer",
        },
      },
      "description": "Get all users.
This provides a dump of every user, in the order that they signed up for GitHub.
Note: Pagination is powered exclusively by the since parameter. Use the Link
header to get the URL for the next page of users.
",
      "field": "users",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/users",
      "queryParamArgMap": {
        "since": "since",
      },
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/users",
            "items": {
              "properties": {
                "avatar_url": {
                  "type": "string",
                },
                "gravatar_id": {
                  "type": "string",
                },
                "id": {
                  "type": "integer",
                },
                "login": {
                  "type": "string",
                },
                "url": {
                  "type": "string",
                },
              },
              "title": "query_orgs_by_org_members_items",
              "type": "object",
            },
            "title": "users",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "username": {
          "description": "Name of user.",
          "in": "path",
          "name": "username",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Get a single user.",
      "field": "users_by_username",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/users/{args.username}",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/users",
            "items": {
              "properties": {
                "avatar_url": {
                  "type": "string",
                },
                "gravatar_id": {
                  "type": "string",
                },
                "id": {
                  "type": "integer",
                },
                "login": {
                  "type": "string",
                },
                "url": {
                  "type": "string",
                },
              },
              "title": "query_orgs_by_org_members_items",
              "type": "object",
            },
            "title": "users",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "username": {
          "description": "Name of user.",
          "in": "path",
          "name": "username",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "If you are authenticated as the given user, you will see your private events. Otherwise, you'll only see public events.",
      "field": "users_by_username_events",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/users/{args.username}/events",
      "responseByStatusCode": {},
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "org": {
          "description": undefined,
          "in": "path",
          "name": "org",
          "nullable": false,
          "type": "string",
        },
        "username": {
          "description": "Name of user.",
          "in": "path",
          "name": "username",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "This is the user's organization dashboard. You must be authenticated as the user to view this.",
      "field": "users_by_username_events_orgs_by_org",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/users/{args.username}/events/orgs/{args.org}",
      "responseByStatusCode": {},
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "username": {
          "description": "Name of user.",
          "in": "path",
          "name": "username",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "List a user's followers",
      "field": "users_by_username_followers",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/users/{args.username}/followers",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/users",
            "items": {
              "properties": {
                "avatar_url": {
                  "type": "string",
                },
                "gravatar_id": {
                  "type": "string",
                },
                "id": {
                  "type": "integer",
                },
                "login": {
                  "type": "string",
                },
                "url": {
                  "type": "string",
                },
              },
              "title": "query_orgs_by_org_members_items",
              "type": "object",
            },
            "title": "users",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "targetUser": {
          "description": "Name of user.",
          "in": "path",
          "name": "targetUser",
          "nullable": false,
          "type": "string",
        },
        "username": {
          "description": "Name of user.",
          "in": "path",
          "name": "username",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "Check if one user follows another.",
      "field": "users_by_username_following_by_targetUser",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/users/{args.username}/following/{args.targetUser}",
      "responseByStatusCode": {
        "204": {
          "responseSchema": {
            "description": "Response if user follows target user.",
            "title": "users_by_username_following_by_targetUser_204_response",
            "type": "null",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "since": {
          "description": "The time should be passed in as UTC in the ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.
Example: "2012-10-09T23:39:01Z".",
          "in": "query",
          "name": "since",
          "type": "string",
        },
        "username": {
          "description": "Name of user.",
          "in": "path",
          "name": "username",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "List a users gists.",
      "field": "users_by_username_gists",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/users/{args.username}/gists",
      "queryParamArgMap": {
        "since": "since",
      },
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/gists",
            "items": {
              "properties": {
                "comments": {
                  "type": "integer",
                },
                "comments_url": {
                  "type": "string",
                },
                "created_at": {
                  "type": "string",
                },
                "description": {
                  "type": "string",
                },
                "files": {
                  "$ref": "#/definitions/query_gists_items_files",
                },
                "git_pull_url": {
                  "type": "string",
                },
                "git_push_url": {
                  "type": "string",
                },
                "html_url": {
                  "type": "string",
                },
                "id": {
                  "type": "string",
                },
                "public": {
                  "type": "boolean",
                },
                "url": {
                  "type": "string",
                },
                "user": {
                  "$ref": "#/definitions/query_gists_items_user",
                },
              },
              "title": "query_gists_items",
              "type": "object",
            },
            "title": "gists",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "username": {
          "description": "Name of user.",
          "in": "path",
          "name": "username",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "List public keys for a user.
Lists the verified public keys for a user. This is accessible by anyone.
",
      "field": "users_by_username_keys",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/users/{args.username}/keys",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/gitignore",
            "title": "gitignore",
            "type": "string",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "username": {
          "description": "Name of user.",
          "in": "path",
          "name": "username",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "List all public organizations for a user.",
      "field": "users_by_username_orgs",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/users/{args.username}/orgs",
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/gitignore",
            "title": "gitignore",
            "type": "string",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "username": {
          "description": "Name of user.",
          "in": "path",
          "name": "username",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "These are events that you'll only see public events.",
      "field": "users_by_username_received_events",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/users/{args.username}/received_events",
      "responseByStatusCode": {},
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "username": {
          "description": "Name of user.",
          "in": "path",
          "name": "username",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "List public events that a user has received",
      "field": "users_by_username_received_events_public",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/users/{args.username}/received_events/public",
      "responseByStatusCode": {},
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "type": {
          "default": "all",
          "description": undefined,
          "enum": [
            "all",
            "public",
            "private",
            "forks",
            "sources",
            "member",
          ],
          "in": "query",
          "name": "type",
          "title": "queryInput_users_by_username_repos_type",
          "type": "string",
        },
        "username": {
          "description": "Name of user.",
          "in": "path",
          "name": "username",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "List public repositories for the specified user.",
      "field": "users_by_username_repos",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/users/{args.username}/repos",
      "queryParamArgMap": {
        "type": "type",
      },
      "responseByStatusCode": {
        "200": {
          "responseSchema": {
            "$resolvedRef": "/definitions/repos",
            "items": {
              "properties": {
                "clone_url": {
                  "type": "string",
                },
                "created_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "description": {
                  "type": "string",
                },
                "fork": {
                  "type": "boolean",
                },
                "forks": {
                  "type": "integer",
                },
                "forks_count": {
                  "type": "integer",
                },
                "full_name": {
                  "type": "string",
                },
                "git_url": {
                  "type": "string",
                },
                "homepage": {
                  "type": "string",
                },
                "html_url": {
                  "type": "string",
                },
                "id": {
                  "type": "integer",
                },
                "language": {
                  "type": "string",
                },
                "master_branch": {
                  "type": "string",
                },
                "mirror_url": {
                  "type": "string",
                },
                "name": {
                  "type": "string",
                },
                "open_issues": {
                  "type": "integer",
                },
                "open_issues_count": {
                  "type": "integer",
                },
                "owner": {
                  "$ref": "#/definitions/query_orgs_by_org_repos_items_owner",
                },
                "private": {
                  "type": "boolean",
                },
                "pushed_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "size": {
                  "type": "integer",
                },
                "ssh_url": {
                  "type": "string",
                },
                "svn_url": {
                  "type": "string",
                },
                "updated_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string",
                },
                "url": {
                  "type": "string",
                },
                "watchers": {
                  "type": "integer",
                },
                "watchers_count": {
                  "type": "integer",
                },
              },
              "title": "query_orgs_by_org_repos_items",
              "type": "object",
            },
            "title": "repos",
            "type": "array",
          },
        },
      },
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "username": {
          "description": "Name of user.",
          "in": "path",
          "name": "username",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "List repositories being starred by a user.",
      "field": "users_by_username_starred",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/users/{args.username}/starred",
      "responseByStatusCode": {},
      "schemaHeaders": undefined,
      "type": "query",
    },
    {
      "argTypeMap": {
        "Accept": {
          "description": "Is used to set specified media type.",
          "in": "header",
          "name": "Accept",
          "type": "string",
        },
        "X_GitHub_Media_Type": {
          "description": "You can check the current version of media type in responses.",
          "in": "header",
          "name": "X-GitHub-Media-Type",
          "type": "string",
        },
        "X_GitHub_Request_Id": {
          "description": undefined,
          "in": "header",
          "name": "X-GitHub-Request-Id",
          "type": "integer",
        },
        "X_RateLimit_Limit": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Limit",
          "type": "integer",
        },
        "X_RateLimit_Remaining": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Remaining",
          "type": "integer",
        },
        "X_RateLimit_Reset": {
          "description": undefined,
          "in": "header",
          "name": "X-RateLimit-Reset",
          "type": "integer",
        },
        "username": {
          "description": "Name of user.",
          "in": "path",
          "name": "username",
          "nullable": false,
          "type": "string",
        },
      },
      "description": "List repositories being watched by a user.",
      "field": "users_by_username_subscriptions",
      "headers": {
        "Accept": "{args.Accept}",
        "X-GitHub-Media-Type": "{args.X_GitHub_Media_Type}",
        "X-GitHub-Request-Id": "{args.X_GitHub_Request_Id}",
        "X-RateLimit-Limit": "{args.X_RateLimit_Limit}",
        "X-RateLimit-Remaining": "{args.X_RateLimit_Remaining}",
        "X-RateLimit-Reset": "{args.X_RateLimit_Reset}",
      },
      "method": "GET",
      "operationHeaders": undefined,
      "path": "/users/{args.username}/subscriptions",
      "responseByStatusCode": {},
      "schemaHeaders": undefined,
      "type": "query",
    },
  ],
  "referencedSchema": {
    "$ref": "#/definitions/_schema",
    "definitions": {
      "Any": {
        "oneOf": [
          {
            "type": "string",
          },
          {
            "type": "integer",
          },
          {
            "type": "boolean",
          },
          {
            "type": "number",
          },
          {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_by_archive_format_by_path_oneOf_4",
          },
        ],
        "title": "Any",
      },
      "Mutation": {
        "properties": {
          "delete_gists_by_id": {
            "$ref": "#/definitions/delete_gists_by_id_204_response",
          },
          "delete_gists_by_id_comments_by_commentId": {
            "$ref": "#/definitions/delete_gists_by_id_comments_by_commentId_204_response",
          },
          "delete_gists_by_id_star": {
            "$ref": "#/definitions/delete_gists_by_id_star_204_response",
          },
          "delete_notifications_threads_by_id_subscription": {
            "$ref": "#/definitions/delete_notifications_threads_by_id_subscription_204_response",
          },
          "delete_orgs_by_org_members_by_username": {
            "$ref": "#/definitions/delete_orgs_by_org_members_by_username_204_response",
          },
          "delete_orgs_by_org_public_members_by_username": {
            "$ref": "#/definitions/delete_orgs_by_org_public_members_by_username_204_response",
          },
          "delete_repos_by_owner_by_repo": {
            "$ref": "#/definitions/delete_repos_by_owner_by_repo_204_response",
          },
          "delete_repos_by_owner_by_repo_collaborators_by_user": {
            "$ref": "#/definitions/delete_repos_by_owner_by_repo_collaborators_by_user_204_response",
          },
          "delete_repos_by_owner_by_repo_comments_by_commentId": {
            "$ref": "#/definitions/delete_repos_by_owner_by_repo_comments_by_commentId_204_response",
          },
          "delete_repos_by_owner_by_repo_contents_by_path": {
            "$ref": "#/definitions/deleteFile",
          },
          "delete_repos_by_owner_by_repo_downloads_by_downloadId": {
            "$ref": "#/definitions/delete_repos_by_owner_by_repo_downloads_by_downloadId_204_response",
          },
          "delete_repos_by_owner_by_repo_git_refs_by_ref": {
            "$ref": "#/definitions/delete_repos_by_owner_by_repo_git_refs_by_ref_204_response",
          },
          "delete_repos_by_owner_by_repo_hooks_by_hookId": {
            "$ref": "#/definitions/delete_repos_by_owner_by_repo_hooks_by_hookId_204_response",
          },
          "delete_repos_by_owner_by_repo_issues_by_number_labels": {
            "$ref": "#/definitions/delete_repos_by_owner_by_repo_issues_by_number_labels_204_response",
          },
          "delete_repos_by_owner_by_repo_issues_by_number_labels_by_name": {
            "$ref": "#/definitions/delete_repos_by_owner_by_repo_issues_by_number_labels_by_name_204_response",
          },
          "delete_repos_by_owner_by_repo_issues_comments_by_commentId": {
            "$ref": "#/definitions/delete_repos_by_owner_by_repo_issues_comments_by_commentId_204_response",
          },
          "delete_repos_by_owner_by_repo_keys_by_keyId": {
            "$ref": "#/definitions/delete_repos_by_owner_by_repo_keys_by_keyId_204_response",
          },
          "delete_repos_by_owner_by_repo_labels_by_name": {
            "$ref": "#/definitions/delete_repos_by_owner_by_repo_labels_by_name_204_response",
          },
          "delete_repos_by_owner_by_repo_milestones_by_number": {
            "$ref": "#/definitions/delete_repos_by_owner_by_repo_milestones_by_number_204_response",
          },
          "delete_repos_by_owner_by_repo_pulls_comments_by_commentId": {
            "$ref": "#/definitions/delete_repos_by_owner_by_repo_pulls_comments_by_commentId_204_response",
          },
          "delete_repos_by_owner_by_repo_releases_assets_by_id": {
            "$ref": "#/definitions/delete_repos_by_owner_by_repo_releases_assets_by_id_204_response",
          },
          "delete_repos_by_owner_by_repo_releases_by_id": {
            "$ref": "#/definitions/delete_repos_by_owner_by_repo_releases_by_id_204_response",
          },
          "delete_repos_by_owner_by_repo_subscription": {
            "$ref": "#/definitions/delete_repos_by_owner_by_repo_subscription_204_response",
          },
          "delete_teams_by_teamId": {
            "$ref": "#/definitions/delete_teams_by_teamId_204_response",
          },
          "delete_teams_by_teamId_members_by_username": {
            "$ref": "#/definitions/delete_teams_by_teamId_members_by_username_204_response",
          },
          "delete_teams_by_teamId_memberships_by_username": {
            "$ref": "#/definitions/delete_teams_by_teamId_memberships_by_username_204_response",
          },
          "delete_teams_by_teamId_repos_by_owner_by_repo": {
            "$ref": "#/definitions/delete_teams_by_teamId_repos_by_owner_by_repo_204_response",
          },
          "delete_user_emails": {
            "$ref": "#/definitions/delete_user_emails_204_response",
          },
          "delete_user_following_by_username": {
            "$ref": "#/definitions/delete_user_following_by_username_204_response",
          },
          "delete_user_keys_by_keyId": {
            "$ref": "#/definitions/delete_user_keys_by_keyId_204_response",
          },
          "delete_user_starred_by_owner_by_repo": {
            "$ref": "#/definitions/delete_user_starred_by_owner_by_repo_204_response",
          },
          "delete_user_subscriptions_by_owner_by_repo": {
            "$ref": "#/definitions/delete_user_subscriptions_by_owner_by_repo_204_response",
          },
          "patch_gists_by_id": {
            "$ref": "#/definitions/gist",
          },
          "patch_gists_by_id_comments_by_commentId": {
            "$ref": "#/definitions/comment",
          },
          "patch_notifications_threads_by_id": {
            "$ref": "#/definitions/Any",
          },
          "patch_orgs_by_org": {
            "$ref": "#/definitions/organization",
          },
          "patch_repos_by_owner_by_repo": {
            "$ref": "#/definitions/repo",
          },
          "patch_repos_by_owner_by_repo_comments_by_commentId": {
            "$ref": "#/definitions/commitComments",
          },
          "patch_repos_by_owner_by_repo_git_refs_by_ref": {
            "$ref": "#/definitions/headBranch",
          },
          "patch_repos_by_owner_by_repo_hooks_by_hookId": {
            "$ref": "#/definitions/hook",
          },
          "patch_repos_by_owner_by_repo_issues_by_number": {
            "$ref": "#/definitions/issue",
          },
          "patch_repos_by_owner_by_repo_issues_comments_by_commentId": {
            "$ref": "#/definitions/issuesComment",
          },
          "patch_repos_by_owner_by_repo_labels_by_name": {
            "$ref": "#/definitions/label",
          },
          "patch_repos_by_owner_by_repo_milestones_by_number": {
            "$ref": "#/definitions/milestone",
          },
          "patch_repos_by_owner_by_repo_pulls_by_number": {
            "$ref": "#/definitions/repo",
          },
          "patch_repos_by_owner_by_repo_pulls_comments_by_commentId": {
            "$ref": "#/definitions/pullsComment",
          },
          "patch_repos_by_owner_by_repo_releases_assets_by_id": {
            "$ref": "#/definitions/asset",
          },
          "patch_repos_by_owner_by_repo_releases_by_id": {
            "$ref": "#/definitions/release",
          },
          "patch_teams_by_teamId": {
            "$ref": "#/definitions/team",
          },
          "patch_user": {
            "$ref": "#/definitions/user",
          },
          "post_gists": {
            "$ref": "#/definitions/gist",
          },
          "post_gists_by_id_comments": {
            "$ref": "#/definitions/comment",
          },
          "post_gists_by_id_forks": {
            "$ref": "#/definitions/post_gists_by_id_forks_204_response",
          },
          "post_markdown": {
            "$ref": "#/definitions/Any",
          },
          "post_markdown_raw": {
            "$ref": "#/definitions/Any",
          },
          "post_orgs_by_org_repos": {
            "$ref": "#/definitions/repos",
          },
          "post_orgs_by_org_teams": {
            "$ref": "#/definitions/team",
          },
          "post_repos_by_owner_by_repo_commits_by_shaCode_comments": {
            "$ref": "#/definitions/commitComments",
          },
          "post_repos_by_owner_by_repo_deployments": {
            "$ref": "#/definitions/deployment-resp",
          },
          "post_repos_by_owner_by_repo_deployments_by_id_statuses": {
            "$ref": "#/definitions/Any",
          },
          "post_repos_by_owner_by_repo_forks": {
            "$ref": "#/definitions/fork",
          },
          "post_repos_by_owner_by_repo_git_blobs": {
            "$ref": "#/definitions/blobs",
          },
          "post_repos_by_owner_by_repo_git_commits": {
            "$ref": "#/definitions/gitCommit",
          },
          "post_repos_by_owner_by_repo_git_refs": {
            "$ref": "#/definitions/headBranch",
          },
          "post_repos_by_owner_by_repo_git_tags": {
            "$ref": "#/definitions/tags",
          },
          "post_repos_by_owner_by_repo_git_trees": {
            "$ref": "#/definitions/trees",
          },
          "post_repos_by_owner_by_repo_hooks": {
            "$ref": "#/definitions/hook",
          },
          "post_repos_by_owner_by_repo_hooks_by_hookId_tests": {
            "$ref": "#/definitions/post_repos_by_owner_by_repo_hooks_by_hookId_tests_204_response",
          },
          "post_repos_by_owner_by_repo_issues": {
            "$ref": "#/definitions/issue",
          },
          "post_repos_by_owner_by_repo_issues_by_number_comments": {
            "$ref": "#/definitions/issuesComment",
          },
          "post_repos_by_owner_by_repo_issues_by_number_labels": {
            "$ref": "#/definitions/label",
          },
          "post_repos_by_owner_by_repo_keys": {
            "$ref": "#/definitions/user-keys-keyId",
          },
          "post_repos_by_owner_by_repo_labels": {
            "$ref": "#/definitions/label",
          },
          "post_repos_by_owner_by_repo_merges": {
            "$ref": "#/definitions/post_repos_by_owner_by_repo_merges_response",
          },
          "post_repos_by_owner_by_repo_milestones": {
            "$ref": "#/definitions/milestone",
          },
          "post_repos_by_owner_by_repo_pulls": {
            "$ref": "#/definitions/pulls",
          },
          "post_repos_by_owner_by_repo_pulls_by_number_comments": {
            "$ref": "#/definitions/pullsComment",
          },
          "post_repos_by_owner_by_repo_releases": {
            "$ref": "#/definitions/release",
          },
          "post_repos_by_owner_by_repo_statuses_by_ref": {
            "$ref": "#/definitions/ref",
          },
          "post_user_emails": {
            "$ref": "#/definitions/Any",
          },
          "post_user_keys": {
            "$ref": "#/definitions/user-keys-keyId",
          },
          "post_user_repos": {
            "$ref": "#/definitions/repos",
          },
          "put_gists_by_id_star": {
            "$ref": "#/definitions/put_gists_by_id_star_204_response",
          },
          "put_notifications": {
            "$ref": "#/definitions/Any",
          },
          "put_notifications_threads_by_id_subscription": {
            "$ref": "#/definitions/subscription",
          },
          "put_orgs_by_org_public_members_by_username": {
            "$ref": "#/definitions/put_orgs_by_org_public_members_by_username_204_response",
          },
          "put_repos_by_owner_by_repo_collaborators_by_user": {
            "$ref": "#/definitions/put_repos_by_owner_by_repo_collaborators_by_user_204_response",
          },
          "put_repos_by_owner_by_repo_contents_by_path": {
            "$ref": "#/definitions/createFile",
          },
          "put_repos_by_owner_by_repo_issues_by_number_labels": {
            "$ref": "#/definitions/label",
          },
          "put_repos_by_owner_by_repo_notifications": {
            "$ref": "#/definitions/Any",
          },
          "put_repos_by_owner_by_repo_pulls_by_number_merge": {
            "$ref": "#/definitions/put_repos_by_owner_by_repo_pulls_by_number_merge_response",
          },
          "put_repos_by_owner_by_repo_subscription": {
            "$ref": "#/definitions/subscribition",
          },
          "put_teams_by_teamId_members_by_username": {
            "$ref": "#/definitions/put_teams_by_teamId_members_by_username_response",
          },
          "put_teams_by_teamId_memberships_by_username": {
            "$ref": "#/definitions/put_teams_by_teamId_memberships_by_username_response",
          },
          "put_teams_by_teamId_repos_by_org_by_repo": {
            "$ref": "#/definitions/Any",
          },
          "put_user_following_by_username": {
            "$ref": "#/definitions/put_user_following_by_username_204_response",
          },
          "put_user_starred_by_owner_by_repo": {
            "$ref": "#/definitions/put_user_starred_by_owner_by_repo_204_response",
          },
          "put_user_subscriptions_by_owner_by_repo": {
            "$ref": "#/definitions/put_user_subscriptions_by_owner_by_repo_204_response",
          },
        },
        "readOnly": true,
        "title": "Mutation",
        "type": "object",
      },
      "MutationInput": {
        "properties": {
          "delete_gists_by_id": {
            "$ref": "#/definitions/mutationInput_delete_gists_by_id",
          },
          "delete_gists_by_id_comments_by_commentId": {
            "$ref": "#/definitions/mutationInput_delete_gists_by_id_comments_by_commentId",
          },
          "delete_gists_by_id_star": {
            "$ref": "#/definitions/mutationInput_delete_gists_by_id_star",
          },
          "delete_notifications_threads_by_id_subscription": {
            "$ref": "#/definitions/mutationInput_delete_notifications_threads_by_id_subscription",
          },
          "delete_orgs_by_org_members_by_username": {
            "$ref": "#/definitions/mutationInput_delete_orgs_by_org_members_by_username",
          },
          "delete_orgs_by_org_public_members_by_username": {
            "$ref": "#/definitions/mutationInput_delete_orgs_by_org_public_members_by_username",
          },
          "delete_repos_by_owner_by_repo": {
            "$ref": "#/definitions/mutationInput_delete_repos_by_owner_by_repo",
          },
          "delete_repos_by_owner_by_repo_collaborators_by_user": {
            "$ref": "#/definitions/mutationInput_delete_repos_by_owner_by_repo_collaborators_by_user",
          },
          "delete_repos_by_owner_by_repo_comments_by_commentId": {
            "$ref": "#/definitions/mutationInput_delete_repos_by_owner_by_repo_comments_by_commentId",
          },
          "delete_repos_by_owner_by_repo_contents_by_path": {
            "$ref": "#/definitions/mutationInput_delete_repos_by_owner_by_repo_contents_by_path",
          },
          "delete_repos_by_owner_by_repo_downloads_by_downloadId": {
            "$ref": "#/definitions/mutationInput_delete_repos_by_owner_by_repo_downloads_by_downloadId",
          },
          "delete_repos_by_owner_by_repo_git_refs_by_ref": {
            "$ref": "#/definitions/mutationInput_delete_repos_by_owner_by_repo_git_refs_by_ref",
          },
          "delete_repos_by_owner_by_repo_hooks_by_hookId": {
            "$ref": "#/definitions/mutationInput_delete_repos_by_owner_by_repo_hooks_by_hookId",
          },
          "delete_repos_by_owner_by_repo_issues_by_number_labels": {
            "$ref": "#/definitions/mutationInput_delete_repos_by_owner_by_repo_issues_by_number_labels",
          },
          "delete_repos_by_owner_by_repo_issues_by_number_labels_by_name": {
            "$ref": "#/definitions/mutationInput_delete_repos_by_owner_by_repo_issues_by_number_labels_by_name",
          },
          "delete_repos_by_owner_by_repo_issues_comments_by_commentId": {
            "$ref": "#/definitions/mutationInput_delete_repos_by_owner_by_repo_issues_comments_by_commentId",
          },
          "delete_repos_by_owner_by_repo_keys_by_keyId": {
            "$ref": "#/definitions/mutationInput_delete_repos_by_owner_by_repo_keys_by_keyId",
          },
          "delete_repos_by_owner_by_repo_labels_by_name": {
            "$ref": "#/definitions/mutationInput_delete_repos_by_owner_by_repo_labels_by_name",
          },
          "delete_repos_by_owner_by_repo_milestones_by_number": {
            "$ref": "#/definitions/mutationInput_delete_repos_by_owner_by_repo_milestones_by_number",
          },
          "delete_repos_by_owner_by_repo_pulls_comments_by_commentId": {
            "$ref": "#/definitions/mutationInput_delete_repos_by_owner_by_repo_pulls_comments_by_commentId",
          },
          "delete_repos_by_owner_by_repo_releases_assets_by_id": {
            "$ref": "#/definitions/mutationInput_delete_repos_by_owner_by_repo_releases_assets_by_id",
          },
          "delete_repos_by_owner_by_repo_releases_by_id": {
            "$ref": "#/definitions/mutationInput_delete_repos_by_owner_by_repo_releases_by_id",
          },
          "delete_repos_by_owner_by_repo_subscription": {
            "$ref": "#/definitions/mutationInput_delete_repos_by_owner_by_repo_subscription",
          },
          "delete_teams_by_teamId": {
            "$ref": "#/definitions/mutationInput_delete_teams_by_teamId",
          },
          "delete_teams_by_teamId_members_by_username": {
            "$ref": "#/definitions/mutationInput_delete_teams_by_teamId_members_by_username",
          },
          "delete_teams_by_teamId_memberships_by_username": {
            "$ref": "#/definitions/mutationInput_delete_teams_by_teamId_memberships_by_username",
          },
          "delete_teams_by_teamId_repos_by_owner_by_repo": {
            "$ref": "#/definitions/mutationInput_delete_teams_by_teamId_repos_by_owner_by_repo",
          },
          "delete_user_emails": {
            "$ref": "#/definitions/mutationInput_delete_user_emails",
          },
          "delete_user_following_by_username": {
            "$ref": "#/definitions/mutationInput_delete_user_following_by_username",
          },
          "delete_user_keys_by_keyId": {
            "$ref": "#/definitions/mutationInput_delete_user_keys_by_keyId",
          },
          "delete_user_starred_by_owner_by_repo": {
            "$ref": "#/definitions/mutationInput_delete_user_starred_by_owner_by_repo",
          },
          "delete_user_subscriptions_by_owner_by_repo": {
            "$ref": "#/definitions/mutationInput_delete_user_subscriptions_by_owner_by_repo",
          },
          "patch_gists_by_id": {
            "$ref": "#/definitions/mutationInput_patch_gists_by_id",
          },
          "patch_gists_by_id_comments_by_commentId": {
            "$ref": "#/definitions/mutationInput_patch_gists_by_id_comments_by_commentId",
          },
          "patch_notifications_threads_by_id": {
            "$ref": "#/definitions/mutationInput_patch_notifications_threads_by_id",
          },
          "patch_orgs_by_org": {
            "$ref": "#/definitions/mutationInput_patch_orgs_by_org",
          },
          "patch_repos_by_owner_by_repo": {
            "$ref": "#/definitions/mutationInput_patch_repos_by_owner_by_repo",
          },
          "patch_repos_by_owner_by_repo_comments_by_commentId": {
            "$ref": "#/definitions/mutationInput_patch_repos_by_owner_by_repo_comments_by_commentId",
          },
          "patch_repos_by_owner_by_repo_git_refs_by_ref": {
            "$ref": "#/definitions/mutationInput_patch_repos_by_owner_by_repo_git_refs_by_ref",
          },
          "patch_repos_by_owner_by_repo_hooks_by_hookId": {
            "$ref": "#/definitions/mutationInput_patch_repos_by_owner_by_repo_hooks_by_hookId",
          },
          "patch_repos_by_owner_by_repo_issues_by_number": {
            "$ref": "#/definitions/mutationInput_patch_repos_by_owner_by_repo_issues_by_number",
          },
          "patch_repos_by_owner_by_repo_issues_comments_by_commentId": {
            "$ref": "#/definitions/mutationInput_patch_repos_by_owner_by_repo_issues_comments_by_commentId",
          },
          "patch_repos_by_owner_by_repo_labels_by_name": {
            "$ref": "#/definitions/mutationInput_patch_repos_by_owner_by_repo_labels_by_name",
          },
          "patch_repos_by_owner_by_repo_milestones_by_number": {
            "$ref": "#/definitions/mutationInput_patch_repos_by_owner_by_repo_milestones_by_number",
          },
          "patch_repos_by_owner_by_repo_pulls_by_number": {
            "$ref": "#/definitions/mutationInput_patch_repos_by_owner_by_repo_pulls_by_number",
          },
          "patch_repos_by_owner_by_repo_pulls_comments_by_commentId": {
            "$ref": "#/definitions/mutationInput_patch_repos_by_owner_by_repo_pulls_comments_by_commentId",
          },
          "patch_repos_by_owner_by_repo_releases_assets_by_id": {
            "$ref": "#/definitions/mutationInput_patch_repos_by_owner_by_repo_releases_assets_by_id",
          },
          "patch_repos_by_owner_by_repo_releases_by_id": {
            "$ref": "#/definitions/mutationInput_patch_repos_by_owner_by_repo_releases_by_id",
          },
          "patch_teams_by_teamId": {
            "$ref": "#/definitions/mutationInput_patch_teams_by_teamId",
          },
          "patch_user": {
            "$ref": "#/definitions/mutationInput_patch_user",
          },
          "post_gists": {
            "$ref": "#/definitions/mutationInput_post_gists",
          },
          "post_gists_by_id_comments": {
            "$ref": "#/definitions/mutationInput_post_gists_by_id_comments",
          },
          "post_gists_by_id_forks": {
            "$ref": "#/definitions/mutationInput_post_gists_by_id_forks",
          },
          "post_markdown": {
            "$ref": "#/definitions/mutationInput_post_markdown",
          },
          "post_markdown_raw": {
            "$ref": "#/definitions/mutationInput_post_markdown_raw",
          },
          "post_orgs_by_org_repos": {
            "$ref": "#/definitions/mutationInput_post_orgs_by_org_repos",
          },
          "post_orgs_by_org_teams": {
            "$ref": "#/definitions/mutationInput_post_orgs_by_org_teams",
          },
          "post_repos_by_owner_by_repo_commits_by_shaCode_comments": {
            "$ref": "#/definitions/mutationInput_post_repos_by_owner_by_repo_commits_by_shaCode_comments",
          },
          "post_repos_by_owner_by_repo_deployments": {
            "$ref": "#/definitions/mutationInput_post_repos_by_owner_by_repo_deployments",
          },
          "post_repos_by_owner_by_repo_deployments_by_id_statuses": {
            "$ref": "#/definitions/mutationInput_post_repos_by_owner_by_repo_deployments_by_id_statuses",
          },
          "post_repos_by_owner_by_repo_forks": {
            "$ref": "#/definitions/mutationInput_post_repos_by_owner_by_repo_forks",
          },
          "post_repos_by_owner_by_repo_git_blobs": {
            "$ref": "#/definitions/mutationInput_post_repos_by_owner_by_repo_git_blobs",
          },
          "post_repos_by_owner_by_repo_git_commits": {
            "$ref": "#/definitions/mutationInput_post_repos_by_owner_by_repo_git_commits",
          },
          "post_repos_by_owner_by_repo_git_refs": {
            "$ref": "#/definitions/mutationInput_post_repos_by_owner_by_repo_git_refs",
          },
          "post_repos_by_owner_by_repo_git_tags": {
            "$ref": "#/definitions/mutationInput_post_repos_by_owner_by_repo_git_tags",
          },
          "post_repos_by_owner_by_repo_git_trees": {
            "$ref": "#/definitions/mutationInput_post_repos_by_owner_by_repo_git_trees",
          },
          "post_repos_by_owner_by_repo_hooks": {
            "$ref": "#/definitions/mutationInput_post_repos_by_owner_by_repo_hooks",
          },
          "post_repos_by_owner_by_repo_hooks_by_hookId_tests": {
            "$ref": "#/definitions/mutationInput_post_repos_by_owner_by_repo_hooks_by_hookId_tests",
          },
          "post_repos_by_owner_by_repo_issues": {
            "$ref": "#/definitions/mutationInput_post_repos_by_owner_by_repo_issues",
          },
          "post_repos_by_owner_by_repo_issues_by_number_comments": {
            "$ref": "#/definitions/mutationInput_post_repos_by_owner_by_repo_issues_by_number_comments",
          },
          "post_repos_by_owner_by_repo_issues_by_number_labels": {
            "$ref": "#/definitions/mutationInput_post_repos_by_owner_by_repo_issues_by_number_labels",
          },
          "post_repos_by_owner_by_repo_keys": {
            "$ref": "#/definitions/mutationInput_post_repos_by_owner_by_repo_keys",
          },
          "post_repos_by_owner_by_repo_labels": {
            "$ref": "#/definitions/mutationInput_post_repos_by_owner_by_repo_labels",
          },
          "post_repos_by_owner_by_repo_merges": {
            "$ref": "#/definitions/mutationInput_post_repos_by_owner_by_repo_merges",
          },
          "post_repos_by_owner_by_repo_milestones": {
            "$ref": "#/definitions/mutationInput_post_repos_by_owner_by_repo_milestones",
          },
          "post_repos_by_owner_by_repo_pulls": {
            "$ref": "#/definitions/mutationInput_post_repos_by_owner_by_repo_pulls",
          },
          "post_repos_by_owner_by_repo_pulls_by_number_comments": {
            "$ref": "#/definitions/mutationInput_post_repos_by_owner_by_repo_pulls_by_number_comments",
          },
          "post_repos_by_owner_by_repo_releases": {
            "$ref": "#/definitions/mutationInput_post_repos_by_owner_by_repo_releases",
          },
          "post_repos_by_owner_by_repo_statuses_by_ref": {
            "$ref": "#/definitions/mutationInput_post_repos_by_owner_by_repo_statuses_by_ref",
          },
          "post_user_emails": {
            "$ref": "#/definitions/mutationInput_post_user_emails",
          },
          "post_user_keys": {
            "$ref": "#/definitions/mutationInput_post_user_keys",
          },
          "post_user_repos": {
            "$ref": "#/definitions/mutationInput_post_user_repos",
          },
          "put_gists_by_id_star": {
            "$ref": "#/definitions/mutationInput_put_gists_by_id_star",
          },
          "put_notifications": {
            "$ref": "#/definitions/mutationInput_put_notifications",
          },
          "put_notifications_threads_by_id_subscription": {
            "$ref": "#/definitions/mutationInput_put_notifications_threads_by_id_subscription",
          },
          "put_orgs_by_org_public_members_by_username": {
            "$ref": "#/definitions/mutationInput_put_orgs_by_org_public_members_by_username",
          },
          "put_repos_by_owner_by_repo_collaborators_by_user": {
            "$ref": "#/definitions/mutationInput_put_repos_by_owner_by_repo_collaborators_by_user",
          },
          "put_repos_by_owner_by_repo_contents_by_path": {
            "$ref": "#/definitions/mutationInput_put_repos_by_owner_by_repo_contents_by_path",
          },
          "put_repos_by_owner_by_repo_issues_by_number_labels": {
            "$ref": "#/definitions/mutationInput_put_repos_by_owner_by_repo_issues_by_number_labels",
          },
          "put_repos_by_owner_by_repo_notifications": {
            "$ref": "#/definitions/mutationInput_put_repos_by_owner_by_repo_notifications",
          },
          "put_repos_by_owner_by_repo_pulls_by_number_merge": {
            "$ref": "#/definitions/mutationInput_put_repos_by_owner_by_repo_pulls_by_number_merge",
          },
          "put_repos_by_owner_by_repo_subscription": {
            "$ref": "#/definitions/mutationInput_put_repos_by_owner_by_repo_subscription",
          },
          "put_teams_by_teamId_members_by_username": {
            "$ref": "#/definitions/mutationInput_put_teams_by_teamId_members_by_username",
          },
          "put_teams_by_teamId_memberships_by_username": {
            "$ref": "#/definitions/mutationInput_put_teams_by_teamId_memberships_by_username",
          },
          "put_teams_by_teamId_repos_by_org_by_repo": {
            "$ref": "#/definitions/mutationInput_put_teams_by_teamId_repos_by_org_by_repo",
          },
          "put_user_following_by_username": {
            "$ref": "#/definitions/mutationInput_put_user_following_by_username",
          },
          "put_user_starred_by_owner_by_repo": {
            "$ref": "#/definitions/mutationInput_put_user_starred_by_owner_by_repo",
          },
          "put_user_subscriptions_by_owner_by_repo": {
            "$ref": "#/definitions/mutationInput_put_user_subscriptions_by_owner_by_repo",
          },
        },
        "title": "MutationInput",
        "type": "object",
        "writeOnly": true,
      },
      "Query": {
        "properties": {
          "emojis": {
            "$ref": "#/definitions/emojis",
          },
          "events": {
            "$ref": "#/definitions/events",
          },
          "feeds": {
            "$ref": "#/definitions/feeds",
          },
          "gists": {
            "$ref": "#/definitions/gists",
          },
          "gists_by_id": {
            "$ref": "#/definitions/gist",
          },
          "gists_by_id_comments": {
            "$ref": "#/definitions/comments",
          },
          "gists_by_id_comments_by_commentId": {
            "$ref": "#/definitions/comment",
          },
          "gists_by_id_star": {
            "$ref": "#/definitions/gists_by_id_star_204_response",
          },
          "gists_public": {
            "$ref": "#/definitions/gists",
          },
          "gists_starred": {
            "$ref": "#/definitions/gists",
          },
          "gitignore_templates": {
            "$ref": "#/definitions/gitignore",
          },
          "gitignore_templates_by_language": {
            "$ref": "#/definitions/gitignore-lang",
          },
          "issues": {
            "$ref": "#/definitions/issues",
          },
          "legacy_issues_search_by_owner_by_repository_by_state_by_keyword": {
            "$ref": "#/definitions/search-issues-by-keyword",
          },
          "legacy_repos_search_by_keyword": {
            "$ref": "#/definitions/search-repositories-by-keyword",
          },
          "legacy_user_email_by_email": {
            "$ref": "#/definitions/search-user-by-email",
          },
          "legacy_user_search_by_keyword": {
            "$ref": "#/definitions/search-users-by-keyword",
          },
          "meta": {
            "$ref": "#/definitions/meta",
          },
          "networks_by_owner_by_repo_events": {
            "$ref": "#/definitions/events",
          },
          "notifications": {
            "$ref": "#/definitions/notifications",
          },
          "notifications_threads_by_id": {
            "$ref": "#/definitions/notifications",
          },
          "notifications_threads_by_id_subscription": {
            "$ref": "#/definitions/subscription",
          },
          "orgs_by_org": {
            "$ref": "#/definitions/organization",
          },
          "orgs_by_org_events": {
            "$ref": "#/definitions/events",
          },
          "orgs_by_org_issues": {
            "$ref": "#/definitions/issues",
          },
          "orgs_by_org_members": {
            "$ref": "#/definitions/users",
          },
          "orgs_by_org_members_by_username": {
            "$ref": "#/definitions/orgs_by_org_members_by_username_204_response",
          },
          "orgs_by_org_public_members": {
            "$ref": "#/definitions/users",
          },
          "orgs_by_org_public_members_by_username": {
            "$ref": "#/definitions/orgs_by_org_public_members_by_username_204_response",
          },
          "orgs_by_org_repos": {
            "$ref": "#/definitions/repos",
          },
          "orgs_by_org_teams": {
            "$ref": "#/definitions/teams",
          },
          "rate_limit": {
            "$ref": "#/definitions/rate_limit",
          },
          "repos_by_owner_by_repo": {
            "$ref": "#/definitions/repo",
          },
          "repos_by_owner_by_repo_assignees": {
            "$ref": "#/definitions/assignees",
          },
          "repos_by_owner_by_repo_assignees_by_assignee": {
            "$ref": "#/definitions/repos_by_owner_by_repo_assignees_by_assignee_204_response",
          },
          "repos_by_owner_by_repo_branches": {
            "$ref": "#/definitions/branches",
          },
          "repos_by_owner_by_repo_branches_by_branch": {
            "$ref": "#/definitions/branch",
          },
          "repos_by_owner_by_repo_by_archive_format_by_path": {
            "$ref": "#/definitions/Any",
          },
          "repos_by_owner_by_repo_collaborators": {
            "$ref": "#/definitions/users",
          },
          "repos_by_owner_by_repo_collaborators_by_user": {
            "$ref": "#/definitions/repos_by_owner_by_repo_collaborators_by_user_204_response",
          },
          "repos_by_owner_by_repo_comments": {
            "$ref": "#/definitions/repoComments",
          },
          "repos_by_owner_by_repo_comments_by_commentId": {
            "$ref": "#/definitions/commitComments",
          },
          "repos_by_owner_by_repo_commits": {
            "$ref": "#/definitions/commits",
          },
          "repos_by_owner_by_repo_commits_by_ref_status": {
            "$ref": "#/definitions/refStatus",
          },
          "repos_by_owner_by_repo_commits_by_shaCode": {
            "$ref": "#/definitions/commit",
          },
          "repos_by_owner_by_repo_commits_by_shaCode_comments": {
            "$ref": "#/definitions/repoComments",
          },
          "repos_by_owner_by_repo_compare_by_baseId___by_headId": {
            "$ref": "#/definitions/compare-commits",
          },
          "repos_by_owner_by_repo_contents_by_path": {
            "$ref": "#/definitions/contents-path",
          },
          "repos_by_owner_by_repo_contributors": {
            "$ref": "#/definitions/contributors",
          },
          "repos_by_owner_by_repo_deployments": {
            "$ref": "#/definitions/repo-deployments",
          },
          "repos_by_owner_by_repo_deployments_by_id_statuses": {
            "$ref": "#/definitions/deployment-statuses",
          },
          "repos_by_owner_by_repo_downloads": {
            "$ref": "#/definitions/downloads",
          },
          "repos_by_owner_by_repo_downloads_by_downloadId": {
            "$ref": "#/definitions/downloads",
          },
          "repos_by_owner_by_repo_events": {
            "$ref": "#/definitions/events",
          },
          "repos_by_owner_by_repo_forks": {
            "$ref": "#/definitions/forks",
          },
          "repos_by_owner_by_repo_git_blobs_by_shaCode": {
            "$ref": "#/definitions/blob",
          },
          "repos_by_owner_by_repo_git_commits_by_shaCode": {
            "$ref": "#/definitions/repoCommit",
          },
          "repos_by_owner_by_repo_git_refs": {
            "$ref": "#/definitions/refs",
          },
          "repos_by_owner_by_repo_git_refs_by_ref": {
            "$ref": "#/definitions/headBranch",
          },
          "repos_by_owner_by_repo_git_tags_by_shaCode": {
            "$ref": "#/definitions/tag",
          },
          "repos_by_owner_by_repo_git_trees_by_shaCode": {
            "$ref": "#/definitions/tree",
          },
          "repos_by_owner_by_repo_hooks": {
            "$ref": "#/definitions/hook",
          },
          "repos_by_owner_by_repo_hooks_by_hookId": {
            "$ref": "#/definitions/hook",
          },
          "repos_by_owner_by_repo_issues": {
            "$ref": "#/definitions/issues",
          },
          "repos_by_owner_by_repo_issues_by_number": {
            "$ref": "#/definitions/issue",
          },
          "repos_by_owner_by_repo_issues_by_number_comments": {
            "$ref": "#/definitions/issuesComments",
          },
          "repos_by_owner_by_repo_issues_by_number_events": {
            "$ref": "#/definitions/events",
          },
          "repos_by_owner_by_repo_issues_by_number_labels": {
            "$ref": "#/definitions/labels",
          },
          "repos_by_owner_by_repo_issues_comments": {
            "$ref": "#/definitions/issuesComments",
          },
          "repos_by_owner_by_repo_issues_comments_by_commentId": {
            "$ref": "#/definitions/issuesComment",
          },
          "repos_by_owner_by_repo_issues_events": {
            "$ref": "#/definitions/events",
          },
          "repos_by_owner_by_repo_issues_events_by_eventId": {
            "$ref": "#/definitions/event",
          },
          "repos_by_owner_by_repo_keys": {
            "$ref": "#/definitions/keys",
          },
          "repos_by_owner_by_repo_keys_by_keyId": {
            "$ref": "#/definitions/user-keys-keyId",
          },
          "repos_by_owner_by_repo_labels": {
            "$ref": "#/definitions/labels",
          },
          "repos_by_owner_by_repo_labels_by_name": {
            "$ref": "#/definitions/label",
          },
          "repos_by_owner_by_repo_languages": {
            "$ref": "#/definitions/languages",
          },
          "repos_by_owner_by_repo_milestones": {
            "$ref": "#/definitions/milestone",
          },
          "repos_by_owner_by_repo_milestones_by_number": {
            "$ref": "#/definitions/milestone",
          },
          "repos_by_owner_by_repo_milestones_by_number_labels": {
            "$ref": "#/definitions/labels",
          },
          "repos_by_owner_by_repo_notifications": {
            "$ref": "#/definitions/notifications",
          },
          "repos_by_owner_by_repo_pulls": {
            "$ref": "#/definitions/pulls",
          },
          "repos_by_owner_by_repo_pulls_by_number": {
            "$ref": "#/definitions/pullRequest",
          },
          "repos_by_owner_by_repo_pulls_by_number_comments": {
            "$ref": "#/definitions/pullsComment",
          },
          "repos_by_owner_by_repo_pulls_by_number_commits": {
            "$ref": "#/definitions/commits",
          },
          "repos_by_owner_by_repo_pulls_by_number_files": {
            "$ref": "#/definitions/pulls",
          },
          "repos_by_owner_by_repo_pulls_by_number_merge": {
            "$ref": "#/definitions/repos_by_owner_by_repo_pulls_by_number_merge_204_response",
          },
          "repos_by_owner_by_repo_pulls_comments": {
            "$ref": "#/definitions/issuesComments",
          },
          "repos_by_owner_by_repo_pulls_comments_by_commentId": {
            "$ref": "#/definitions/pullsComment",
          },
          "repos_by_owner_by_repo_readme": {
            "$ref": "#/definitions/contents-path",
          },
          "repos_by_owner_by_repo_releases": {
            "$ref": "#/definitions/releases",
          },
          "repos_by_owner_by_repo_releases_assets_by_id": {
            "$ref": "#/definitions/asset",
          },
          "repos_by_owner_by_repo_releases_by_id": {
            "$ref": "#/definitions/release",
          },
          "repos_by_owner_by_repo_releases_by_id_assets": {
            "$ref": "#/definitions/assets",
          },
          "repos_by_owner_by_repo_stargazers": {
            "$ref": "#/definitions/users",
          },
          "repos_by_owner_by_repo_stats_code_frequency": {
            "$ref": "#/definitions/codeFrequencyStats",
          },
          "repos_by_owner_by_repo_stats_commit_activity": {
            "$ref": "#/definitions/commitActivityStats",
          },
          "repos_by_owner_by_repo_stats_contributors": {
            "$ref": "#/definitions/contributorsStats",
          },
          "repos_by_owner_by_repo_stats_participation": {
            "$ref": "#/definitions/participationStats",
          },
          "repos_by_owner_by_repo_stats_punch_card": {
            "$ref": "#/definitions/codeFrequencyStats",
          },
          "repos_by_owner_by_repo_statuses_by_ref": {
            "$ref": "#/definitions/ref",
          },
          "repos_by_owner_by_repo_subscribers": {
            "$ref": "#/definitions/users",
          },
          "repos_by_owner_by_repo_subscription": {
            "$ref": "#/definitions/subscribition",
          },
          "repos_by_owner_by_repo_tags": {
            "$ref": "#/definitions/tags",
          },
          "repos_by_owner_by_repo_teams": {
            "$ref": "#/definitions/teams",
          },
          "repos_by_owner_by_repo_watchers": {
            "$ref": "#/definitions/users",
          },
          "repositories": {
            "$ref": "#/definitions/repositories",
          },
          "search_code": {
            "$ref": "#/definitions/search-code",
          },
          "search_issues": {
            "$ref": "#/definitions/search-issues",
          },
          "search_repositories": {
            "$ref": "#/definitions/search-repositories",
          },
          "search_users": {
            "$ref": "#/definitions/search-users",
          },
          "teams_by_teamId": {
            "$ref": "#/definitions/team",
          },
          "teams_by_teamId_members": {
            "$ref": "#/definitions/users",
          },
          "teams_by_teamId_members_by_username": {
            "$ref": "#/definitions/teams_by_teamId_members_by_username_204_response",
          },
          "teams_by_teamId_memberships_by_username": {
            "$ref": "#/definitions/teamMembership",
          },
          "teams_by_teamId_repos": {
            "$ref": "#/definitions/teamRepos",
          },
          "teams_by_teamId_repos_by_owner_by_repo": {
            "$ref": "#/definitions/Any",
          },
          "user": {
            "$ref": "#/definitions/user",
          },
          "user_emails": {
            "$ref": "#/definitions/user-emails",
          },
          "user_followers": {
            "$ref": "#/definitions/users",
          },
          "user_following": {
            "$ref": "#/definitions/users",
          },
          "user_following_by_username": {
            "$ref": "#/definitions/user_following_by_username_204_response",
          },
          "user_issues": {
            "$ref": "#/definitions/issues",
          },
          "user_keys": {
            "$ref": "#/definitions/gitignore",
          },
          "user_keys_by_keyId": {
            "$ref": "#/definitions/user-keys-keyId",
          },
          "user_orgs": {
            "$ref": "#/definitions/gitignore",
          },
          "user_repos": {
            "$ref": "#/definitions/repos",
          },
          "user_starred": {
            "$ref": "#/definitions/gitignore",
          },
          "user_starred_by_owner_by_repo": {
            "$ref": "#/definitions/user_starred_by_owner_by_repo_204_response",
          },
          "user_subscriptions": {
            "$ref": "#/definitions/user-userId-subscribitions",
          },
          "user_subscriptions_by_owner_by_repo": {
            "$ref": "#/definitions/user_subscriptions_by_owner_by_repo_204_response",
          },
          "user_teams": {
            "$ref": "#/definitions/teams-list",
          },
          "users": {
            "$ref": "#/definitions/users",
          },
          "users_by_username": {
            "$ref": "#/definitions/users",
          },
          "users_by_username_events": {
            "$ref": "#/definitions/Any",
          },
          "users_by_username_events_orgs_by_org": {
            "$ref": "#/definitions/Any",
          },
          "users_by_username_followers": {
            "$ref": "#/definitions/users",
          },
          "users_by_username_following_by_targetUser": {
            "$ref": "#/definitions/users_by_username_following_by_targetUser_204_response",
          },
          "users_by_username_gists": {
            "$ref": "#/definitions/gists",
          },
          "users_by_username_keys": {
            "$ref": "#/definitions/gitignore",
          },
          "users_by_username_orgs": {
            "$ref": "#/definitions/gitignore",
          },
          "users_by_username_received_events": {
            "$ref": "#/definitions/Any",
          },
          "users_by_username_received_events_public": {
            "$ref": "#/definitions/Any",
          },
          "users_by_username_repos": {
            "$ref": "#/definitions/repos",
          },
          "users_by_username_starred": {
            "$ref": "#/definitions/Any",
          },
          "users_by_username_subscriptions": {
            "$ref": "#/definitions/Any",
          },
        },
        "readOnly": true,
        "title": "Query",
        "type": "object",
      },
      "QueryInput": {
        "properties": {
          "emojis": {
            "$ref": "#/definitions/queryInput_emojis",
          },
          "events": {
            "$ref": "#/definitions/queryInput_events",
          },
          "feeds": {
            "$ref": "#/definitions/queryInput_feeds",
          },
          "gists": {
            "$ref": "#/definitions/queryInput_gists",
          },
          "gists_by_id": {
            "$ref": "#/definitions/queryInput_gists_by_id",
          },
          "gists_by_id_comments": {
            "$ref": "#/definitions/queryInput_gists_by_id_comments",
          },
          "gists_by_id_comments_by_commentId": {
            "$ref": "#/definitions/queryInput_gists_by_id_comments_by_commentId",
          },
          "gists_by_id_star": {
            "$ref": "#/definitions/queryInput_gists_by_id_star",
          },
          "gists_public": {
            "$ref": "#/definitions/queryInput_gists_public",
          },
          "gists_starred": {
            "$ref": "#/definitions/queryInput_gists_starred",
          },
          "gitignore_templates": {
            "$ref": "#/definitions/queryInput_gitignore_templates",
          },
          "gitignore_templates_by_language": {
            "$ref": "#/definitions/queryInput_gitignore_templates_by_language",
          },
          "issues": {
            "$ref": "#/definitions/queryInput_issues",
          },
          "legacy_issues_search_by_owner_by_repository_by_state_by_keyword": {
            "$ref": "#/definitions/queryInput_legacy_issues_search_by_owner_by_repository_by_state_by_keyword",
          },
          "legacy_repos_search_by_keyword": {
            "$ref": "#/definitions/queryInput_legacy_repos_search_by_keyword",
          },
          "legacy_user_email_by_email": {
            "$ref": "#/definitions/queryInput_legacy_user_email_by_email",
          },
          "legacy_user_search_by_keyword": {
            "$ref": "#/definitions/queryInput_legacy_user_search_by_keyword",
          },
          "meta": {
            "$ref": "#/definitions/queryInput_meta",
          },
          "networks_by_owner_by_repo_events": {
            "$ref": "#/definitions/queryInput_networks_by_owner_by_repo_events",
          },
          "notifications": {
            "$ref": "#/definitions/queryInput_notifications",
          },
          "notifications_threads_by_id": {
            "$ref": "#/definitions/queryInput_notifications_threads_by_id",
          },
          "notifications_threads_by_id_subscription": {
            "$ref": "#/definitions/queryInput_notifications_threads_by_id_subscription",
          },
          "orgs_by_org": {
            "$ref": "#/definitions/queryInput_orgs_by_org",
          },
          "orgs_by_org_events": {
            "$ref": "#/definitions/queryInput_orgs_by_org_events",
          },
          "orgs_by_org_issues": {
            "$ref": "#/definitions/queryInput_orgs_by_org_issues",
          },
          "orgs_by_org_members": {
            "$ref": "#/definitions/queryInput_orgs_by_org_members",
          },
          "orgs_by_org_members_by_username": {
            "$ref": "#/definitions/queryInput_orgs_by_org_members_by_username",
          },
          "orgs_by_org_public_members": {
            "$ref": "#/definitions/queryInput_orgs_by_org_public_members",
          },
          "orgs_by_org_public_members_by_username": {
            "$ref": "#/definitions/queryInput_orgs_by_org_public_members_by_username",
          },
          "orgs_by_org_repos": {
            "$ref": "#/definitions/queryInput_orgs_by_org_repos",
          },
          "orgs_by_org_teams": {
            "$ref": "#/definitions/queryInput_orgs_by_org_teams",
          },
          "rate_limit": {
            "$ref": "#/definitions/queryInput_rate_limit",
          },
          "repos_by_owner_by_repo": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo",
          },
          "repos_by_owner_by_repo_assignees": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_assignees",
          },
          "repos_by_owner_by_repo_assignees_by_assignee": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_assignees_by_assignee",
          },
          "repos_by_owner_by_repo_branches": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_branches",
          },
          "repos_by_owner_by_repo_branches_by_branch": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_branches_by_branch",
          },
          "repos_by_owner_by_repo_by_archive_format_by_path": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_by_archive_format_by_path",
          },
          "repos_by_owner_by_repo_collaborators": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_collaborators",
          },
          "repos_by_owner_by_repo_collaborators_by_user": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_collaborators_by_user",
          },
          "repos_by_owner_by_repo_comments": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_comments",
          },
          "repos_by_owner_by_repo_comments_by_commentId": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_comments_by_commentId",
          },
          "repos_by_owner_by_repo_commits": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_commits",
          },
          "repos_by_owner_by_repo_commits_by_ref_status": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_commits_by_ref_status",
          },
          "repos_by_owner_by_repo_commits_by_shaCode": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_commits_by_shaCode",
          },
          "repos_by_owner_by_repo_commits_by_shaCode_comments": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_commits_by_shaCode_comments",
          },
          "repos_by_owner_by_repo_compare_by_baseId___by_headId": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_compare_by_baseId___by_headId",
          },
          "repos_by_owner_by_repo_contents_by_path": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_contents_by_path",
          },
          "repos_by_owner_by_repo_contributors": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_contributors",
          },
          "repos_by_owner_by_repo_deployments": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_deployments",
          },
          "repos_by_owner_by_repo_deployments_by_id_statuses": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_deployments_by_id_statuses",
          },
          "repos_by_owner_by_repo_downloads": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_downloads",
          },
          "repos_by_owner_by_repo_downloads_by_downloadId": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_downloads_by_downloadId",
          },
          "repos_by_owner_by_repo_events": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_events",
          },
          "repos_by_owner_by_repo_forks": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_forks",
          },
          "repos_by_owner_by_repo_git_blobs_by_shaCode": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_git_blobs_by_shaCode",
          },
          "repos_by_owner_by_repo_git_commits_by_shaCode": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_git_commits_by_shaCode",
          },
          "repos_by_owner_by_repo_git_refs": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_git_refs",
          },
          "repos_by_owner_by_repo_git_refs_by_ref": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_git_refs_by_ref",
          },
          "repos_by_owner_by_repo_git_tags_by_shaCode": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_git_tags_by_shaCode",
          },
          "repos_by_owner_by_repo_git_trees_by_shaCode": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_git_trees_by_shaCode",
          },
          "repos_by_owner_by_repo_hooks": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_hooks",
          },
          "repos_by_owner_by_repo_hooks_by_hookId": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_hooks_by_hookId",
          },
          "repos_by_owner_by_repo_issues": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_issues",
          },
          "repos_by_owner_by_repo_issues_by_number": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_issues_by_number",
          },
          "repos_by_owner_by_repo_issues_by_number_comments": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_issues_by_number_comments",
          },
          "repos_by_owner_by_repo_issues_by_number_events": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_issues_by_number_events",
          },
          "repos_by_owner_by_repo_issues_by_number_labels": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_issues_by_number_labels",
          },
          "repos_by_owner_by_repo_issues_comments": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_issues_comments",
          },
          "repos_by_owner_by_repo_issues_comments_by_commentId": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_issues_comments_by_commentId",
          },
          "repos_by_owner_by_repo_issues_events": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_issues_events",
          },
          "repos_by_owner_by_repo_issues_events_by_eventId": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_issues_events_by_eventId",
          },
          "repos_by_owner_by_repo_keys": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_keys",
          },
          "repos_by_owner_by_repo_keys_by_keyId": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_keys_by_keyId",
          },
          "repos_by_owner_by_repo_labels": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_labels",
          },
          "repos_by_owner_by_repo_labels_by_name": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_labels_by_name",
          },
          "repos_by_owner_by_repo_languages": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_languages",
          },
          "repos_by_owner_by_repo_milestones": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_milestones",
          },
          "repos_by_owner_by_repo_milestones_by_number": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_milestones_by_number",
          },
          "repos_by_owner_by_repo_milestones_by_number_labels": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_milestones_by_number_labels",
          },
          "repos_by_owner_by_repo_notifications": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_notifications",
          },
          "repos_by_owner_by_repo_pulls": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_pulls",
          },
          "repos_by_owner_by_repo_pulls_by_number": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_pulls_by_number",
          },
          "repos_by_owner_by_repo_pulls_by_number_comments": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_pulls_by_number_comments",
          },
          "repos_by_owner_by_repo_pulls_by_number_commits": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_pulls_by_number_commits",
          },
          "repos_by_owner_by_repo_pulls_by_number_files": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_pulls_by_number_files",
          },
          "repos_by_owner_by_repo_pulls_by_number_merge": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_pulls_by_number_merge",
          },
          "repos_by_owner_by_repo_pulls_comments": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_pulls_comments",
          },
          "repos_by_owner_by_repo_pulls_comments_by_commentId": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_pulls_comments_by_commentId",
          },
          "repos_by_owner_by_repo_readme": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_readme",
          },
          "repos_by_owner_by_repo_releases": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_releases",
          },
          "repos_by_owner_by_repo_releases_assets_by_id": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_releases_assets_by_id",
          },
          "repos_by_owner_by_repo_releases_by_id": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_releases_by_id",
          },
          "repos_by_owner_by_repo_releases_by_id_assets": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_releases_by_id_assets",
          },
          "repos_by_owner_by_repo_stargazers": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_stargazers",
          },
          "repos_by_owner_by_repo_stats_code_frequency": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_stats_code_frequency",
          },
          "repos_by_owner_by_repo_stats_commit_activity": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_stats_commit_activity",
          },
          "repos_by_owner_by_repo_stats_contributors": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_stats_contributors",
          },
          "repos_by_owner_by_repo_stats_participation": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_stats_participation",
          },
          "repos_by_owner_by_repo_stats_punch_card": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_stats_punch_card",
          },
          "repos_by_owner_by_repo_statuses_by_ref": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_statuses_by_ref",
          },
          "repos_by_owner_by_repo_subscribers": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_subscribers",
          },
          "repos_by_owner_by_repo_subscription": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_subscription",
          },
          "repos_by_owner_by_repo_tags": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_tags",
          },
          "repos_by_owner_by_repo_teams": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_teams",
          },
          "repos_by_owner_by_repo_watchers": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_watchers",
          },
          "repositories": {
            "$ref": "#/definitions/queryInput_repositories",
          },
          "search_code": {
            "$ref": "#/definitions/queryInput_search_code",
          },
          "search_issues": {
            "$ref": "#/definitions/queryInput_search_issues",
          },
          "search_repositories": {
            "$ref": "#/definitions/queryInput_search_repositories",
          },
          "search_users": {
            "$ref": "#/definitions/queryInput_search_users",
          },
          "teams_by_teamId": {
            "$ref": "#/definitions/queryInput_teams_by_teamId",
          },
          "teams_by_teamId_members": {
            "$ref": "#/definitions/queryInput_teams_by_teamId_members",
          },
          "teams_by_teamId_members_by_username": {
            "$ref": "#/definitions/queryInput_teams_by_teamId_members_by_username",
          },
          "teams_by_teamId_memberships_by_username": {
            "$ref": "#/definitions/queryInput_teams_by_teamId_memberships_by_username",
          },
          "teams_by_teamId_repos": {
            "$ref": "#/definitions/queryInput_teams_by_teamId_repos",
          },
          "teams_by_teamId_repos_by_owner_by_repo": {
            "$ref": "#/definitions/queryInput_teams_by_teamId_repos_by_owner_by_repo",
          },
          "user": {
            "$ref": "#/definitions/queryInput_user",
          },
          "user_emails": {
            "$ref": "#/definitions/queryInput_user_emails",
          },
          "user_followers": {
            "$ref": "#/definitions/queryInput_user_followers",
          },
          "user_following": {
            "$ref": "#/definitions/queryInput_user_following",
          },
          "user_following_by_username": {
            "$ref": "#/definitions/queryInput_user_following_by_username",
          },
          "user_issues": {
            "$ref": "#/definitions/queryInput_user_issues",
          },
          "user_keys": {
            "$ref": "#/definitions/queryInput_user_keys",
          },
          "user_keys_by_keyId": {
            "$ref": "#/definitions/queryInput_user_keys_by_keyId",
          },
          "user_orgs": {
            "$ref": "#/definitions/queryInput_user_orgs",
          },
          "user_repos": {
            "$ref": "#/definitions/queryInput_user_repos",
          },
          "user_starred": {
            "$ref": "#/definitions/queryInput_user_starred",
          },
          "user_starred_by_owner_by_repo": {
            "$ref": "#/definitions/queryInput_user_starred_by_owner_by_repo",
          },
          "user_subscriptions": {
            "$ref": "#/definitions/queryInput_user_subscriptions",
          },
          "user_subscriptions_by_owner_by_repo": {
            "$ref": "#/definitions/queryInput_user_subscriptions_by_owner_by_repo",
          },
          "user_teams": {
            "$ref": "#/definitions/queryInput_user_teams",
          },
          "users": {
            "$ref": "#/definitions/queryInput_users",
          },
          "users_by_username": {
            "$ref": "#/definitions/queryInput_users_by_username",
          },
          "users_by_username_events": {
            "$ref": "#/definitions/queryInput_users_by_username_events",
          },
          "users_by_username_events_orgs_by_org": {
            "$ref": "#/definitions/queryInput_users_by_username_events_orgs_by_org",
          },
          "users_by_username_followers": {
            "$ref": "#/definitions/queryInput_users_by_username_followers",
          },
          "users_by_username_following_by_targetUser": {
            "$ref": "#/definitions/queryInput_users_by_username_following_by_targetUser",
          },
          "users_by_username_gists": {
            "$ref": "#/definitions/queryInput_users_by_username_gists",
          },
          "users_by_username_keys": {
            "$ref": "#/definitions/queryInput_users_by_username_keys",
          },
          "users_by_username_orgs": {
            "$ref": "#/definitions/queryInput_users_by_username_orgs",
          },
          "users_by_username_received_events": {
            "$ref": "#/definitions/queryInput_users_by_username_received_events",
          },
          "users_by_username_received_events_public": {
            "$ref": "#/definitions/queryInput_users_by_username_received_events_public",
          },
          "users_by_username_repos": {
            "$ref": "#/definitions/queryInput_users_by_username_repos",
          },
          "users_by_username_starred": {
            "$ref": "#/definitions/queryInput_users_by_username_starred",
          },
          "users_by_username_subscriptions": {
            "$ref": "#/definitions/queryInput_users_by_username_subscriptions",
          },
        },
        "title": "QueryInput",
        "type": "object",
        "writeOnly": true,
      },
      "_schema": {
        "properties": {
          "mutation": {
            "$ref": "#/definitions/Mutation",
          },
          "mutationInput": {
            "$ref": "#/definitions/MutationInput",
          },
          "query": {
            "$ref": "#/definitions/Query",
          },
          "queryInput": {
            "$ref": "#/definitions/QueryInput",
          },
        },
        "required": [
          "query",
        ],
        "title": "_schema",
        "type": "object",
      },
      "asset": {
        "$resolvedRef": "/definitions/asset",
        "properties": {
          "content_type": {
            "type": "string",
          },
          "created_at": {
            "type": "string",
          },
          "download_count": {
            "type": "number",
          },
          "id": {
            "type": "number",
          },
          "label": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
          "size": {
            "type": "number",
          },
          "state": {
            "type": "string",
          },
          "updated_at": {
            "type": "string",
          },
          "uploader": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_releases_assets_by_id_uploader",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "asset",
        "type": "object",
      },
      "assetPatch": {
        "$resolvedRef": "/definitions/assetPatch",
        "description": undefined,
        "nullable": false,
        "properties": {
          "label": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
        },
        "required": [
          "name",
        ],
        "title": "assetPatch",
        "type": "object",
      },
      "assets": {
        "$resolvedRef": "/definitions/assets",
        "items": {
          "properties": {
            "content_type": {
              "type": "string",
            },
            "created_at": {
              "type": "string",
            },
            "download_count": {
              "type": "number",
            },
            "id": {
              "type": "number",
            },
            "label": {
              "type": "string",
            },
            "name": {
              "type": "string",
            },
            "size": {
              "type": "number",
            },
            "state": {
              "type": "string",
            },
            "updated_at": {
              "type": "string",
            },
            "uploader": {
              "$ref": "#/definitions/query_repos_by_owner_by_repo_releases_by_id_assets_items_uploader2",
            },
            "url": {
              "type": "string",
            },
          },
          "title": "query_repos_by_owner_by_repo_releases_by_id_assets_items",
          "type": "object",
        },
        "title": "assets",
        "type": "array",
      },
      "assignees": {
        "$resolvedRef": "/definitions/assignees",
        "items": {
          "properties": {
            "avatar_url": {
              "type": "integer",
            },
            "gravatar_id": {
              "type": "string",
            },
            "id": {
              "type": "integer",
            },
            "login": {
              "type": "string",
            },
            "url": {
              "type": "string",
            },
          },
          "title": "query_repos_by_owner_by_repo_assignees_items",
          "type": "object",
        },
        "title": "assignees",
        "type": "array",
      },
      "blob": {
        "$resolvedRef": "/definitions/blob",
        "description": undefined,
        "nullable": false,
        "properties": {
          "content": {
            "type": "string",
          },
          "encoding": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_git_blobs_by_shaCode_encoding",
          },
          "sha": {
            "type": "string",
          },
          "size": {
            "type": "integer",
          },
        },
        "title": "blob",
        "type": "object",
      },
      "blobs": {
        "$resolvedRef": "/definitions/blobs",
        "properties": {
          "sha": {
            "type": "string",
          },
        },
        "title": "blobs",
        "type": "object",
      },
      "branch": {
        "$resolvedRef": "/definitions/branch",
        "properties": {
          "commit": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_branches_by_branch_commit",
          },
          "links": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_branches_by_branch_links",
          },
          "name": {
            "type": "string",
          },
        },
        "title": "branch",
        "type": "object",
      },
      "branches": {
        "$resolvedRef": "/definitions/branches",
        "items": {
          "properties": {
            "commit": {
              "$ref": "#/definitions/query_repos_by_owner_by_repo_branches_items_commit",
            },
            "name": {
              "type": "string",
            },
          },
          "title": "query_repos_by_owner_by_repo_branches_items",
          "type": "object",
        },
        "title": "branches",
        "type": "array",
      },
      "codeFrequencyStats": {
        "$resolvedRef": "/definitions/codeFrequencyStats",
        "items": {
          "type": "integer",
        },
        "title": "codeFrequencyStats",
        "type": "array",
      },
      "comment": {
        "$resolvedRef": "/definitions/comment",
        "description": undefined,
        "nullable": false,
        "properties": {
          "body": {
            "type": "string",
          },
        },
        "title": "comment",
        "type": "object",
      },
      "commentBody": {
        "$resolvedRef": "/definitions/commentBody",
        "description": undefined,
        "nullable": false,
        "properties": {
          "body": {
            "type": "string",
          },
        },
        "required": [
          "body",
        ],
        "title": "commentBody",
        "type": "object",
      },
      "comments": {
        "$resolvedRef": "/definitions/comments",
        "items": {
          "properties": {
            "body": {
              "type": "string",
            },
            "created_at": {
              "description": "ISO 8601.",
              "type": "string",
            },
            "id": {
              "type": "integer",
            },
            "url": {
              "type": "string",
            },
            "user": {
              "$ref": "#/definitions/query_gists_by_id_comments_items_user",
            },
          },
          "title": "query_gists_by_id_comments_items",
          "type": "object",
        },
        "title": "comments",
        "type": "array",
      },
      "commit": {
        "$resolvedRef": "/definitions/commit",
        "properties": {
          "author": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_commits_by_shaCode_author",
          },
          "commit": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_commits_by_shaCode_commit",
          },
          "committer": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_commits_by_shaCode_committer",
          },
          "files": {
            "items": {
              "$ref": "#/definitions/query_repos_by_owner_by_repo_commits_by_shaCode_files_items",
            },
            "type": "array",
          },
          "parents": {
            "items": {
              "$ref": "#/definitions/query_repos_by_owner_by_repo_commits_by_shaCode_parents_items",
            },
            "type": "array",
          },
          "sha": {
            "type": "string",
          },
          "stats": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_commits_by_shaCode_stats",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "commit",
        "type": "object",
      },
      "commitActivityStats": {
        "$resolvedRef": "/definitions/commitActivityStats",
        "items": {
          "properties": {
            "days": {
              "items": {
                "type": "integer",
              },
              "type": "array",
            },
            "total": {
              "type": "integer",
            },
            "week": {
              "type": "integer",
            },
          },
          "title": "query_repos_by_owner_by_repo_stats_commit_activity_items",
          "type": "object",
        },
        "title": "commitActivityStats",
        "type": "array",
      },
      "commitBody": {
        "$resolvedRef": "/definitions/commitBody",
        "description": undefined,
        "nullable": false,
        "properties": {
          "body": {
            "type": "string",
          },
          "line": {
            "description": "Deprecated - Use position parameter instead.",
            "type": "string",
          },
          "number": {
            "description": "Line number in the file to comment on. Defaults to null.",
            "type": "string",
          },
          "path": {
            "description": "Relative path of the file to comment on.",
            "type": "string",
          },
          "position": {
            "description": "Line index in the diff to comment on.",
            "type": "integer",
          },
          "sha": {
            "description": "SHA of the commit to comment on.",
            "type": "string",
          },
        },
        "required": [
          "sha",
          "body",
        ],
        "title": "commitBody",
        "type": "object",
      },
      "commitComments": {
        "$resolvedRef": "/definitions/commitComments",
        "properties": {
          "body": {
            "type": "string",
          },
          "commit_id": {
            "type": "string",
          },
          "created_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "html_url": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "line": {
            "type": "integer",
          },
          "path": {
            "type": "string",
          },
          "position": {
            "type": "integer",
          },
          "updated_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "url": {
            "type": "string",
          },
          "user": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_comments_by_commentId_user",
          },
        },
        "title": "commitComments",
        "type": "object",
      },
      "commits": {
        "$resolvedRef": "/definitions/commits",
        "items": {
          "properties": {
            "author": {
              "$ref": "#/definitions/query_repos_by_owner_by_repo_commits_items_author",
            },
            "commit": {
              "$ref": "#/definitions/query_repos_by_owner_by_repo_commits_items_commit",
            },
            "committer": {
              "$ref": "#/definitions/query_repos_by_owner_by_repo_commits_items_committer",
            },
            "parents": {
              "items": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_commits_items_parents_items",
              },
              "type": "array",
            },
            "sha": {
              "type": "string",
            },
            "url": {
              "type": "string",
            },
          },
          "title": "query_repos_by_owner_by_repo_commits_items",
          "type": "object",
        },
        "title": "commits",
        "type": "array",
      },
      "compare-commits": {
        "$resolvedRef": "/definitions/compare-commits",
        "properties": {
          "ahead_by": {
            "type": "integer",
          },
          "base_commit": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_compare_by_baseId___by_headId_base_commit",
          },
          "behind_by": {
            "type": "integer",
          },
          "commits": {
            "items": {
              "$ref": "#/definitions/query_repos_by_owner_by_repo_compare_by_baseId___by_headId_commits_items",
            },
            "type": "array",
          },
          "diff_url": {
            "type": "string",
          },
          "files": {
            "items": {
              "$ref": "#/definitions/query_repos_by_owner_by_repo_compare_by_baseId___by_headId_files_items",
            },
            "type": "array",
          },
          "html_url": {
            "type": "string",
          },
          "patch_url": {
            "type": "string",
          },
          "permalink_url": {
            "type": "string",
          },
          "status": {
            "type": "string",
          },
          "total_commits": {
            "type": "integer",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "compare-commits",
        "type": "object",
      },
      "contents-path": {
        "$resolvedRef": "/definitions/contents-path",
        "properties": {
          "content": {
            "type": "string",
          },
          "encoding": {
            "type": "string",
          },
          "git_url": {
            "type": "string",
          },
          "html_url": {
            "type": "string",
          },
          "links": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_contents_by_path_links",
          },
          "name": {
            "type": "string",
          },
          "path": {
            "type": "string",
          },
          "sha": {
            "type": "string",
          },
          "size": {
            "type": "integer",
          },
          "type": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "contents-path",
        "type": "object",
      },
      "contributors": {
        "$resolvedRef": "/definitions/contributors",
        "items": {
          "properties": {
            "avatar_url": {
              "type": "string",
            },
            "contributions": {
              "type": "integer",
            },
            "gravatar_id": {
              "type": "string",
            },
            "id": {
              "type": "integer",
            },
            "login": {
              "type": "string",
            },
            "url": {
              "type": "string",
            },
          },
          "title": "query_repos_by_owner_by_repo_contributors_items",
          "type": "object",
        },
        "title": "contributors",
        "type": "array",
      },
      "contributorsStats": {
        "$resolvedRef": "/definitions/contributorsStats",
        "items": {
          "properties": {
            "author": {
              "$ref": "#/definitions/query_repos_by_owner_by_repo_stats_contributors_items_author",
            },
            "total": {
              "description": "The Total number of commits authored by the contributor.",
              "type": "integer",
            },
            "weeks": {
              "items": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_stats_contributors_items_weeks_items",
              },
              "type": "array",
            },
          },
          "title": "query_repos_by_owner_by_repo_stats_contributors_items",
          "type": "object",
        },
        "title": "contributorsStats",
        "type": "array",
      },
      "createFile": {
        "$resolvedRef": "/definitions/createFile",
        "properties": {
          "commit": {
            "$ref": "#/definitions/mutation_put_repos_by_owner_by_repo_contents_by_path_commit",
          },
          "content": {
            "$ref": "#/definitions/mutation_put_repos_by_owner_by_repo_contents_by_path_content",
          },
        },
        "title": "createFile",
        "type": "object",
      },
      "createFileBody": {
        "$resolvedRef": "/definitions/createFileBody",
        "description": undefined,
        "nullable": false,
        "properties": {
          "committer": {
            "$ref": "#/definitions/mutationInput_put_repos_by_owner_by_repo_contents_by_path_input_committer",
          },
          "content": {
            "type": "string",
          },
          "message": {
            "type": "string",
          },
        },
        "title": "createFileBody",
        "type": "object",
      },
      "deleteFile": {
        "$resolvedRef": "/definitions/deleteFile",
        "properties": {
          "commit": {
            "$ref": "#/definitions/mutation_delete_repos_by_owner_by_repo_contents_by_path_commit",
          },
          "content": {
            "type": "string",
          },
        },
        "title": "deleteFile",
        "type": "object",
      },
      "deleteFileBody": {
        "$resolvedRef": "/definitions/deleteFileBody",
        "description": undefined,
        "nullable": false,
        "properties": {
          "committer": {
            "$ref": "#/definitions/mutationInput_delete_repos_by_owner_by_repo_contents_by_path_input_committer",
          },
          "message": {
            "type": "string",
          },
          "sha": {
            "type": "string",
          },
        },
        "title": "deleteFileBody",
        "type": "object",
      },
      "delete_gists_by_id_204_response": {
        "description": "No content.",
        "title": "delete_gists_by_id_204_response",
        "type": "null",
      },
      "delete_gists_by_id_comments_by_commentId_204_response": {
        "description": "No content.",
        "title": "delete_gists_by_id_comments_by_commentId_204_response",
        "type": "null",
      },
      "delete_gists_by_id_star_204_response": {
        "description": "Item removed.",
        "title": "delete_gists_by_id_star_204_response",
        "type": "null",
      },
      "delete_notifications_threads_by_id_subscription_204_response": {
        "description": "No Content",
        "title": "delete_notifications_threads_by_id_subscription_204_response",
        "type": "null",
      },
      "delete_orgs_by_org_members_by_username_204_response": {
        "description": "No content.",
        "title": "delete_orgs_by_org_members_by_username_204_response",
        "type": "null",
      },
      "delete_orgs_by_org_public_members_by_username_204_response": {
        "description": "Concealed.",
        "title": "delete_orgs_by_org_public_members_by_username_204_response",
        "type": "null",
      },
      "delete_repos_by_owner_by_repo_204_response": {
        "description": "Item removed.",
        "title": "delete_repos_by_owner_by_repo_204_response",
        "type": "null",
      },
      "delete_repos_by_owner_by_repo_collaborators_by_user_204_response": {
        "description": "Collaborator removed.",
        "title": "delete_repos_by_owner_by_repo_collaborators_by_user_204_response",
        "type": "null",
      },
      "delete_repos_by_owner_by_repo_comments_by_commentId_204_response": {
        "description": "No content.",
        "title": "delete_repos_by_owner_by_repo_comments_by_commentId_204_response",
        "type": "null",
      },
      "delete_repos_by_owner_by_repo_downloads_by_downloadId_204_response": {
        "description": "No content.",
        "title": "delete_repos_by_owner_by_repo_downloads_by_downloadId_204_response",
        "type": "null",
      },
      "delete_repos_by_owner_by_repo_git_refs_by_ref_204_response": {
        "description": "No Content",
        "title": "delete_repos_by_owner_by_repo_git_refs_by_ref_204_response",
        "type": "null",
      },
      "delete_repos_by_owner_by_repo_hooks_by_hookId_204_response": {
        "description": "No content.",
        "title": "delete_repos_by_owner_by_repo_hooks_by_hookId_204_response",
        "type": "null",
      },
      "delete_repos_by_owner_by_repo_issues_by_number_labels_204_response": {
        "description": "No content.",
        "title": "delete_repos_by_owner_by_repo_issues_by_number_labels_204_response",
        "type": "null",
      },
      "delete_repos_by_owner_by_repo_issues_by_number_labels_by_name_204_response": {
        "description": "Item removed.",
        "title": "delete_repos_by_owner_by_repo_issues_by_number_labels_by_name_204_response",
        "type": "null",
      },
      "delete_repos_by_owner_by_repo_issues_comments_by_commentId_204_response": {
        "description": "No content.",
        "title": "delete_repos_by_owner_by_repo_issues_comments_by_commentId_204_response",
        "type": "null",
      },
      "delete_repos_by_owner_by_repo_keys_by_keyId_204_response": {
        "description": "No content.",
        "title": "delete_repos_by_owner_by_repo_keys_by_keyId_204_response",
        "type": "null",
      },
      "delete_repos_by_owner_by_repo_labels_by_name_204_response": {
        "description": "No content.",
        "title": "delete_repos_by_owner_by_repo_labels_by_name_204_response",
        "type": "null",
      },
      "delete_repos_by_owner_by_repo_milestones_by_number_204_response": {
        "description": "No content.",
        "title": "delete_repos_by_owner_by_repo_milestones_by_number_204_response",
        "type": "null",
      },
      "delete_repos_by_owner_by_repo_pulls_comments_by_commentId_204_response": {
        "description": "No content.",
        "title": "delete_repos_by_owner_by_repo_pulls_comments_by_commentId_204_response",
        "type": "null",
      },
      "delete_repos_by_owner_by_repo_releases_assets_by_id_204_response": {
        "description": "No Content",
        "title": "delete_repos_by_owner_by_repo_releases_assets_by_id_204_response",
        "type": "null",
      },
      "delete_repos_by_owner_by_repo_releases_by_id_204_response": {
        "description": "No Content",
        "title": "delete_repos_by_owner_by_repo_releases_by_id_204_response",
        "type": "null",
      },
      "delete_repos_by_owner_by_repo_subscription_204_response": {
        "description": "No content.",
        "title": "delete_repos_by_owner_by_repo_subscription_204_response",
        "type": "null",
      },
      "delete_teams_by_teamId_204_response": {
        "description": "No content.",
        "title": "delete_teams_by_teamId_204_response",
        "type": "null",
      },
      "delete_teams_by_teamId_members_by_username_204_response": {
        "description": "Team member removed.",
        "title": "delete_teams_by_teamId_members_by_username_204_response",
        "type": "null",
      },
      "delete_teams_by_teamId_memberships_by_username_204_response": {
        "description": "Team member removed.",
        "title": "delete_teams_by_teamId_memberships_by_username_204_response",
        "type": "null",
      },
      "delete_teams_by_teamId_repos_by_owner_by_repo_204_response": {
        "description": "No content.",
        "title": "delete_teams_by_teamId_repos_by_owner_by_repo_204_response",
        "type": "null",
      },
      "delete_user_emails_204_response": {
        "description": "No content.",
        "title": "delete_user_emails_204_response",
        "type": "null",
      },
      "delete_user_following_by_username_204_response": {
        "description": "User unfollowed.",
        "title": "delete_user_following_by_username_204_response",
        "type": "null",
      },
      "delete_user_keys_by_keyId_204_response": {
        "description": "No content.",
        "title": "delete_user_keys_by_keyId_204_response",
        "type": "null",
      },
      "delete_user_starred_by_owner_by_repo_204_response": {
        "description": "Unstarred.",
        "title": "delete_user_starred_by_owner_by_repo_204_response",
        "type": "null",
      },
      "delete_user_subscriptions_by_owner_by_repo_204_response": {
        "description": "Unwatched.",
        "title": "delete_user_subscriptions_by_owner_by_repo_204_response",
        "type": "null",
      },
      "deployment": {
        "$resolvedRef": "/definitions/deployment",
        "description": undefined,
        "nullable": false,
        "properties": {
          "description": {
            "type": "string",
          },
          "payload": {
            "$ref": "#/definitions/mutationInput_post_repos_by_owner_by_repo_deployments_input_payload",
          },
          "ref": {
            "type": "string",
          },
        },
        "title": "deployment",
        "type": "object",
      },
      "deployment-resp": {
        "$resolvedRef": "/definitions/deployment-resp",
        "properties": {
          "created_at": {
            "type": "string",
          },
          "creator": {
            "$ref": "#/definitions/mutation_post_repos_by_owner_by_repo_deployments_creator",
          },
          "description": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "payload": {
            "type": "string",
          },
          "sha": {
            "type": "string",
          },
          "statuses_url": {
            "type": "string",
          },
          "updated_at": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "deployment-resp",
        "type": "object",
      },
      "deployment-statuses": {
        "$resolvedRef": "/definitions/deployment-statuses",
        "items": {
          "properties": {
            "created_at": {
              "type": "string",
            },
            "creator": {
              "$ref": "#/definitions/query_repos_by_owner_by_repo_deployments_by_id_statuses_items_creator",
            },
            "description": {
              "type": "string",
            },
            "id": {
              "type": "integer",
            },
            "payload": {
              "type": "string",
            },
            "state": {
              "type": "string",
            },
            "target_url": {
              "type": "string",
            },
            "updated_at": {
              "type": "string",
            },
            "url": {
              "type": "string",
            },
          },
          "title": "query_repos_by_owner_by_repo_deployments_by_id_statuses_items",
          "type": "object",
        },
        "title": "deployment-statuses",
        "type": "array",
      },
      "deployment-statuses-create": {
        "$resolvedRef": "/definitions/deployment-statuses-create",
        "description": undefined,
        "nullable": false,
        "properties": {
          "description": {
            "type": "string",
          },
          "state": {
            "type": "string",
          },
          "target_url": {
            "type": "string",
          },
        },
        "title": "deployment-statuses-create",
        "type": "object",
      },
      "downloads": {
        "$resolvedRef": "/definitions/downloads",
        "properties": {
          "content_type": {
            "type": "string",
          },
          "description": {
            "type": "string",
          },
          "download_count": {
            "type": "integer",
          },
          "html_url": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "name": {
            "type": "string",
          },
          "size": {
            "type": "integer",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "downloads",
        "type": "object",
      },
      "editTeam": {
        "$resolvedRef": "/definitions/editTeam",
        "description": undefined,
        "nullable": false,
        "properties": {
          "name": {
            "type": "string",
          },
          "permission": {
            "$ref": "#/definitions/mutationInput_patch_teams_by_teamId_input_permission",
          },
        },
        "required": [
          "name",
        ],
        "title": "editTeam",
        "type": "object",
      },
      "emailsPost": {
        "$resolvedRef": "/definitions/emailsPost",
        "description": undefined,
        "items": {
          "type": "string",
        },
        "nullable": false,
        "title": "emailsPost",
        "type": "array",
      },
      "emojis": {
        "$resolvedRef": "/definitions/emojis",
        "properties": {
          "+1": {
            "type": "string",
          },
          "-1": {
            "type": "string",
          },
          "100": {
            "type": "string",
          },
          "1234": {
            "type": "string",
          },
          "8ball": {
            "type": "string",
          },
          "a": {
            "type": "string",
          },
          "ab": {
            "type": "string",
          },
        },
        "title": "emojis",
        "type": "object",
      },
      "event": {
        "$resolvedRef": "/definitions/event",
        "properties": {
          "actor": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_issues_events_by_eventId_actor",
          },
          "commit_id": {
            "type": "string",
          },
          "created_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "event": {
            "type": "string",
          },
          "issue": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_issues_events_by_eventId_issue",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "event",
        "type": "object",
      },
      "events": {
        "$resolvedRef": "/definitions/events",
        "properties": {
          "actor": {
            "$ref": "#/definitions/query_events_actor",
          },
          "created_at": {
            "type": "object",
          },
          "id": {
            "type": "integer",
          },
          "org": {
            "$ref": "#/definitions/query_events_org",
          },
          "payload": {
            "$ref": "#/definitions/query_events_payload",
          },
          "public": {
            "type": "boolean",
          },
          "repo": {
            "$ref": "#/definitions/query_events_repo",
          },
          "type": {
            "type": "string",
          },
        },
        "title": "events",
        "type": "object",
      },
      "feeds": {
        "$resolvedRef": "/definitions/feeds",
        "properties": {
          "current_user_actor_url": {
            "type": "string",
          },
          "current_user_organization_url": {
            "type": "string",
          },
          "current_user_public": {
            "type": "string",
          },
          "current_user_url": {
            "type": "string",
          },
          "links": {
            "$ref": "#/definitions/query_feeds_links",
          },
          "timeline_url": {
            "type": "string",
          },
          "user_url": {
            "type": "string",
          },
        },
        "title": "feeds",
        "type": "object",
      },
      "fork": {
        "$resolvedRef": "/definitions/fork",
        "properties": {
          "clone_url": {
            "type": "string",
          },
          "created_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "description": {
            "type": "string",
          },
          "fork": {
            "type": "boolean",
          },
          "forks": {
            "type": "integer",
          },
          "forks_count": {
            "type": "integer",
          },
          "full_name": {
            "type": "string",
          },
          "git_url": {
            "type": "string",
          },
          "homepage": {
            "type": "string",
          },
          "html_url": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "language": {
            "type": "string",
          },
          "master_branch": {
            "type": "string",
          },
          "mirror_url": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
          "open_issues": {
            "type": "integer",
          },
          "open_issues_count": {
            "type": "integer",
          },
          "owner": {
            "$ref": "#/definitions/mutation_post_repos_by_owner_by_repo_forks_owner",
          },
          "private": {
            "type": "boolean",
          },
          "pushed_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "size": {
            "type": "integer",
          },
          "ssh_url": {
            "type": "string",
          },
          "svn_url": {
            "type": "string",
          },
          "updated_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "url": {
            "type": "string",
          },
          "watchers": {
            "type": "integer",
          },
          "watchers_count": {
            "type": "integer",
          },
        },
        "title": "fork",
        "type": "object",
      },
      "forkBody": {
        "$resolvedRef": "/definitions/forkBody",
        "description": undefined,
        "nullable": false,
        "properties": {
          "organization": {
            "type": "string",
          },
        },
        "title": "forkBody",
        "type": "object",
      },
      "forks": {
        "$resolvedRef": "/definitions/forks",
        "items": {
          "properties": {
            "clone_url": {
              "type": "string",
            },
            "created_at": {
              "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
              "type": "string",
            },
            "description": {
              "type": "string",
            },
            "fork": {
              "type": "boolean",
            },
            "forks": {
              "type": "integer",
            },
            "forks_count": {
              "type": "integer",
            },
            "full_name": {
              "type": "string",
            },
            "git_url": {
              "type": "string",
            },
            "homepage": {
              "type": "string",
            },
            "html_url": {
              "type": "string",
            },
            "id": {
              "type": "integer",
            },
            "language": {
              "type": "string",
            },
            "master_branch": {
              "type": "string",
            },
            "mirror_url": {
              "type": "string",
            },
            "name": {
              "type": "string",
            },
            "open_issues": {
              "type": "integer",
            },
            "open_issues_count": {
              "type": "integer",
            },
            "owner": {
              "$ref": "#/definitions/query_repos_by_owner_by_repo_forks_items_owner",
            },
            "private": {
              "type": "boolean",
            },
            "pushed_at": {
              "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
              "type": "string",
            },
            "size": {
              "type": "integer",
            },
            "ssh_url": {
              "type": "string",
            },
            "svn_url": {
              "type": "string",
            },
            "updated_at": {
              "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
              "type": "string",
            },
            "url": {
              "type": "string",
            },
            "watchers": {
              "type": "integer",
            },
            "watchers_count": {
              "type": "integer",
            },
          },
          "title": "query_repos_by_owner_by_repo_forks_items",
          "type": "object",
        },
        "title": "forks",
        "type": "array",
      },
      "gist": {
        "$resolvedRef": "/definitions/gist",
        "properties": {
          "comments": {
            "type": "integer",
          },
          "comments_url": {
            "type": "string",
          },
          "created_at": {
            "description": "Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.",
            "type": "string",
          },
          "description": {
            "type": "string",
          },
          "files": {
            "$ref": "#/definitions/query_gists_by_id_files",
          },
          "forks": {
            "items": {
              "$ref": "#/definitions/query_gists_by_id_forks_items",
            },
            "type": "array",
          },
          "git_pull_url": {
            "type": "string",
          },
          "git_push_url": {
            "type": "string",
          },
          "history": {
            "items": {
              "$ref": "#/definitions/query_gists_by_id_history_items",
            },
            "type": "array",
          },
          "html_url": {
            "type": "string",
          },
          "id": {
            "type": "string",
          },
          "public": {
            "type": "boolean",
          },
          "url": {
            "type": "string",
          },
          "user": {
            "$ref": "#/definitions/query_gists_by_id_user",
          },
        },
        "title": "gist",
        "type": "object",
      },
      "gists": {
        "$resolvedRef": "/definitions/gists",
        "items": {
          "properties": {
            "comments": {
              "type": "integer",
            },
            "comments_url": {
              "type": "string",
            },
            "created_at": {
              "type": "string",
            },
            "description": {
              "type": "string",
            },
            "files": {
              "$ref": "#/definitions/query_gists_items_files",
            },
            "git_pull_url": {
              "type": "string",
            },
            "git_push_url": {
              "type": "string",
            },
            "html_url": {
              "type": "string",
            },
            "id": {
              "type": "string",
            },
            "public": {
              "type": "boolean",
            },
            "url": {
              "type": "string",
            },
            "user": {
              "$ref": "#/definitions/query_gists_items_user",
            },
          },
          "title": "query_gists_items",
          "type": "object",
        },
        "title": "gists",
        "type": "array",
      },
      "gists_by_id_star_204_response": {
        "description": "Exists.",
        "title": "gists_by_id_star_204_response",
        "type": "null",
      },
      "gitCommit": {
        "$resolvedRef": "/definitions/gitCommit",
        "properties": {
          "author": {
            "$ref": "#/definitions/mutation_post_repos_by_owner_by_repo_git_commits_author",
          },
          "message": {
            "type": "string",
          },
          "parents": {
            "type": "string",
          },
          "tree": {
            "type": "string",
          },
        },
        "title": "gitCommit",
        "type": "object",
      },
      "gitRefPatch": {
        "$resolvedRef": "/definitions/gitRefPatch",
        "description": undefined,
        "nullable": false,
        "properties": {
          "force": {
            "type": "boolean",
          },
          "sha": {
            "type": "string",
          },
        },
        "title": "gitRefPatch",
        "type": "object",
      },
      "gitignore": {
        "$resolvedRef": "/definitions/gitignore",
        "title": "gitignore",
        "type": "string",
      },
      "gitignore-lang": {
        "$resolvedRef": "/definitions/gitignore-lang",
        "properties": {
          "name": {
            "type": "string",
          },
          "source": {
            "type": "string",
          },
        },
        "title": "gitignore-lang",
        "type": "object",
      },
      "headBranch": {
        "$resolvedRef": "/definitions/headBranch",
        "description": undefined,
        "nullable": false,
        "properties": {
          "object": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_git_refs_by_ref_object",
          },
          "ref": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "headBranch",
        "type": "object",
      },
      "hook": {
        "$resolvedRef": "/definitions/hook",
        "items": {
          "properties": {
            "active": {
              "type": "boolean",
            },
            "config": {
              "$ref": "#/definitions/query_repos_by_owner_by_repo_hooks_items_config",
            },
            "created_at": {
              "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
              "type": "string",
            },
            "events": {
              "items": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_hooks_items_events_items",
              },
              "type": "array",
            },
            "id": {
              "type": "integer",
            },
            "name": {
              "type": "string",
            },
            "updated_at": {
              "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
              "type": "string",
            },
            "url": {
              "type": "string",
            },
          },
          "title": "query_repos_by_owner_by_repo_hooks_items",
          "type": "object",
        },
        "title": "hook",
        "type": "array",
      },
      "hookBody": {
        "$resolvedRef": "/definitions/hookBody",
        "description": undefined,
        "nullable": false,
        "properties": {
          "active": {
            "type": "boolean",
          },
          "add_events": {
            "items": {
              "type": "string",
            },
            "type": "array",
          },
        },
        "title": "hookBody",
        "type": "object",
      },
      "issue": {
        "$resolvedRef": "/definitions/issue",
        "description": undefined,
        "nullable": false,
        "properties": {
          "assignee": {
            "type": "string",
          },
          "body": {
            "type": "string",
          },
          "labels": {
            "items": {
              "type": "string",
            },
            "type": "array",
          },
          "milestone": {
            "type": "number",
          },
          "title": {
            "type": "string",
          },
        },
        "title": "issue",
        "type": "object",
      },
      "issues": {
        "$resolvedRef": "/definitions/issues",
        "items": {
          "properties": {
            "assignee": {
              "$ref": "#/definitions/query_issues_items_assignee",
            },
            "body": {
              "type": "string",
            },
            "closed_at": {
              "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
              "type": "string",
            },
            "comments": {
              "type": "integer",
            },
            "created_at": {
              "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
              "type": "string",
            },
            "html_url": {
              "type": "string",
            },
            "labels": {
              "items": {
                "$ref": "#/definitions/query_issues_items_labels_items",
              },
              "type": "array",
            },
            "milestone": {
              "$ref": "#/definitions/query_issues_items_milestone",
            },
            "number": {
              "type": "integer",
            },
            "pull_request": {
              "$ref": "#/definitions/query_issues_items_pull_request",
            },
            "state": {
              "$ref": "#/definitions/query_issues_items_state",
            },
            "title": {
              "type": "string",
            },
            "updated_at": {
              "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
              "type": "string",
            },
            "url": {
              "type": "string",
            },
            "user": {
              "$ref": "#/definitions/query_issues_items_user",
            },
          },
          "title": "query_issues_items",
          "type": "object",
        },
        "title": "issues",
        "type": "array",
      },
      "issuesComment": {
        "$resolvedRef": "/definitions/issuesComment",
        "properties": {
          "body": {
            "type": "string",
          },
          "created_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "html_url": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "updated_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "url": {
            "type": "string",
          },
          "user": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_issues_comments_by_commentId_user",
          },
        },
        "title": "issuesComment",
        "type": "object",
      },
      "issuesComments": {
        "$resolvedRef": "/definitions/issuesComments",
        "items": {
          "properties": {
            "body": {
              "type": "string",
            },
            "commit_id": {
              "type": "string",
            },
            "created_at": {
              "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
              "type": "string",
            },
            "id": {
              "type": "integer",
            },
            "links": {
              "$ref": "#/definitions/query_repos_by_owner_by_repo_issues_comments_items_links",
            },
            "path": {
              "type": "string",
            },
            "position": {
              "type": "integer",
            },
            "updated_at": {
              "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
              "type": "string",
            },
            "url": {
              "type": "string",
            },
            "user": {
              "$ref": "#/definitions/query_repos_by_owner_by_repo_issues_comments_items_user",
            },
          },
          "title": "query_repos_by_owner_by_repo_issues_comments_items",
          "type": "object",
        },
        "title": "issuesComments",
        "type": "array",
      },
      "keys": {
        "$resolvedRef": "/definitions/keys",
        "items": {
          "properties": {
            "id": {
              "type": "integer",
            },
            "key": {
              "type": "string",
            },
            "title": {
              "type": "string",
            },
            "url": {
              "type": "string",
            },
          },
          "title": "query_repos_by_owner_by_repo_keys_items",
          "type": "object",
        },
        "title": "keys",
        "type": "array",
      },
      "label": {
        "$resolvedRef": "/definitions/label",
        "properties": {
          "color": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_labels_by_name_color",
          },
          "name": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "label",
        "type": "object",
      },
      "labels": {
        "$resolvedRef": "/definitions/labels",
        "items": {
          "properties": {
            "color": {
              "$ref": "#/definitions/query_repos_by_owner_by_repo_issues_by_number_labels_items_color",
            },
            "name": {
              "type": "string",
            },
            "url": {
              "type": "string",
            },
          },
          "title": "query_repos_by_owner_by_repo_issues_by_number_labels_items",
          "type": "object",
        },
        "title": "labels",
        "type": "array",
      },
      "languages": {
        "$resolvedRef": "/definitions/languages",
        "additionalProperties": {
          "type": "integer",
        },
        "title": "languages",
        "type": "object",
      },
      "markdown": {
        "$resolvedRef": "/definitions/markdown",
        "description": undefined,
        "nullable": false,
        "properties": {
          "context": {
            "type": "string",
          },
          "mode": {
            "type": "string",
          },
          "text": {
            "type": "string",
          },
        },
        "title": "markdown",
        "type": "object",
      },
      "merge": {
        "$resolvedRef": "/definitions/merge",
        "properties": {
          "merged": {
            "type": "boolean",
          },
          "message": {
            "type": "string",
          },
          "sha": {
            "type": "string",
          },
        },
        "title": "merge",
        "type": "object",
      },
      "mergePullBody": {
        "$resolvedRef": "/definitions/mergePullBody",
        "description": undefined,
        "nullable": false,
        "properties": {
          "commit_message": {
            "type": "string",
          },
        },
        "title": "mergePullBody",
        "type": "object",
      },
      "mergesBody": {
        "$resolvedRef": "/definitions/mergesBody",
        "description": undefined,
        "nullable": false,
        "properties": {
          "base": {
            "type": "string",
          },
          "commit_message": {
            "type": "string",
          },
          "head": {
            "type": "string",
          },
        },
        "title": "mergesBody",
        "type": "object",
      },
      "mergesConflict": {
        "$resolvedRef": "/definitions/mergesConflict",
        "properties": {
          "message": {
            "description": "Error message",
            "type": "string",
          },
        },
        "title": "mergesConflict",
        "type": "object",
      },
      "mergesSuccessful": {
        "$resolvedRef": "/definitions/mergesSuccessful",
        "properties": {
          "author": {
            "$ref": "#/definitions/mutation_post_repos_by_owner_by_repo_merges_oneOf_0_author",
          },
          "comments_url": {
            "type": "string",
          },
          "commit": {
            "$ref": "#/definitions/mutation_post_repos_by_owner_by_repo_merges_oneOf_0_commit",
          },
          "committer": {
            "$ref": "#/definitions/mutation_post_repos_by_owner_by_repo_merges_oneOf_0_committer",
          },
          "merged": {
            "type": "boolean",
          },
          "message": {
            "type": "string",
          },
          "parents": {
            "items": {
              "$ref": "#/definitions/mutation_post_repos_by_owner_by_repo_merges_oneOf_0_parents_items",
            },
            "type": "array",
          },
          "sha": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "mergesSuccessful",
        "type": "object",
      },
      "meta": {
        "$resolvedRef": "/definitions/meta",
        "properties": {
          "git": {
            "items": {
              "description": "An Array of IP addresses in CIDR format specifying the Git servers at GitHub.",
              "type": "string",
            },
            "type": "array",
          },
          "hooks": {
            "items": {
              "description": "An Array of IP addresses in CIDR format specifying the addresses that incoming service hooks will originate from.",
              "type": "string",
            },
            "type": "array",
          },
        },
        "title": "meta",
        "type": "object",
      },
      "milestone": {
        "$resolvedRef": "/definitions/milestone",
        "properties": {
          "closed_issues": {
            "type": "integer",
          },
          "created_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "creator": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_milestones_creator",
          },
          "description": {
            "type": "string",
          },
          "due_on": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "number": {
            "type": "integer",
          },
          "open_issues": {
            "type": "integer",
          },
          "state": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_milestones_state",
          },
          "title": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "milestone",
        "type": "object",
      },
      "milestoneUpdate": {
        "$resolvedRef": "/definitions/milestoneUpdate",
        "description": undefined,
        "nullable": false,
        "properties": {
          "description": {
            "type": "string",
          },
          "due_on": {
            "type": "string",
          },
          "state": {
            "type": "string",
          },
          "title": {
            "type": "string",
          },
        },
        "title": "milestoneUpdate",
        "type": "object",
      },
      "mutationInput_delete_gists_by_id": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "id": {
            "description": "Id of gist.",
            "in": "path",
            "name": "id",
            "nullable": false,
            "type": "integer",
          },
        },
        "title": "mutationInput_delete_gists_by_id",
        "type": "object",
      },
      "mutationInput_delete_gists_by_id_comments_by_commentId": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "commentId": {
            "description": "Id of comment.",
            "in": "path",
            "name": "commentId",
            "nullable": false,
            "type": "integer",
          },
          "id": {
            "description": "Id of gist.",
            "in": "path",
            "name": "id",
            "nullable": false,
            "type": "integer",
          },
        },
        "title": "mutationInput_delete_gists_by_id_comments_by_commentId",
        "type": "object",
      },
      "mutationInput_delete_gists_by_id_star": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "id": {
            "description": "Id of gist.",
            "in": "path",
            "name": "id",
            "nullable": false,
            "type": "integer",
          },
        },
        "title": "mutationInput_delete_gists_by_id_star",
        "type": "object",
      },
      "mutationInput_delete_notifications_threads_by_id_subscription": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "id": {
            "description": "Id of thread.",
            "in": "path",
            "name": "id",
            "nullable": false,
            "type": "integer",
          },
        },
        "title": "mutationInput_delete_notifications_threads_by_id_subscription",
        "type": "object",
      },
      "mutationInput_delete_orgs_by_org_members_by_username": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "org": {
            "description": "Name of organisation.",
            "in": "path",
            "name": "org",
            "nullable": false,
            "type": "string",
          },
          "username": {
            "description": "Name of the user.",
            "in": "path",
            "name": "username",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_delete_orgs_by_org_members_by_username",
        "type": "object",
      },
      "mutationInput_delete_orgs_by_org_public_members_by_username": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "org": {
            "description": "Name of organisation.",
            "in": "path",
            "name": "org",
            "nullable": false,
            "type": "string",
          },
          "username": {
            "description": "Name of the user.",
            "in": "path",
            "name": "username",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_delete_orgs_by_org_public_members_by_username",
        "type": "object",
      },
      "mutationInput_delete_repos_by_owner_by_repo": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_delete_repos_by_owner_by_repo",
        "type": "object",
      },
      "mutationInput_delete_repos_by_owner_by_repo_collaborators_by_user": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
          "user": {
            "description": "Login of the user.",
            "in": "path",
            "name": "user",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_delete_repos_by_owner_by_repo_collaborators_by_user",
        "type": "object",
      },
      "mutationInput_delete_repos_by_owner_by_repo_comments_by_commentId": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "commentId": {
            "description": "Id of comment.",
            "in": "path",
            "name": "commentId",
            "nullable": false,
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_delete_repos_by_owner_by_repo_comments_by_commentId",
        "type": "object",
      },
      "mutationInput_delete_repos_by_owner_by_repo_contents_by_path": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "input": {
            "$ref": "#/definitions/deleteFileBody",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "path": {
            "description": undefined,
            "in": "path",
            "name": "path",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_delete_repos_by_owner_by_repo_contents_by_path",
        "type": "object",
      },
      "mutationInput_delete_repos_by_owner_by_repo_contents_by_path_input_committer": {
        "properties": {
          "email": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
        },
        "title": "mutationInput_delete_repos_by_owner_by_repo_contents_by_path_input_committer",
        "type": "object",
      },
      "mutationInput_delete_repos_by_owner_by_repo_downloads_by_downloadId": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "downloadId": {
            "description": "Id of download.",
            "in": "path",
            "name": "downloadId",
            "nullable": false,
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_delete_repos_by_owner_by_repo_downloads_by_downloadId",
        "type": "object",
      },
      "mutationInput_delete_repos_by_owner_by_repo_git_refs_by_ref": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "ref": {
            "description": undefined,
            "in": "path",
            "name": "ref",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_delete_repos_by_owner_by_repo_git_refs_by_ref",
        "type": "object",
      },
      "mutationInput_delete_repos_by_owner_by_repo_hooks_by_hookId": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "hookId": {
            "description": "Id of hook.",
            "in": "path",
            "name": "hookId",
            "nullable": false,
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_delete_repos_by_owner_by_repo_hooks_by_hookId",
        "type": "object",
      },
      "mutationInput_delete_repos_by_owner_by_repo_issues_by_number_labels": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "number": {
            "description": "Number of issue.",
            "in": "path",
            "name": "number",
            "nullable": false,
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_delete_repos_by_owner_by_repo_issues_by_number_labels",
        "type": "object",
      },
      "mutationInput_delete_repos_by_owner_by_repo_issues_by_number_labels_by_name": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "name": {
            "description": "Name of the label.",
            "in": "path",
            "name": "name",
            "nullable": false,
            "type": "string",
          },
          "number": {
            "description": "Number of issue.",
            "in": "path",
            "name": "number",
            "nullable": false,
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_delete_repos_by_owner_by_repo_issues_by_number_labels_by_name",
        "type": "object",
      },
      "mutationInput_delete_repos_by_owner_by_repo_issues_comments_by_commentId": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "commentId": {
            "description": "ID of comment.",
            "in": "path",
            "name": "commentId",
            "nullable": false,
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_delete_repos_by_owner_by_repo_issues_comments_by_commentId",
        "type": "object",
      },
      "mutationInput_delete_repos_by_owner_by_repo_keys_by_keyId": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "keyId": {
            "description": "Id of key.",
            "in": "path",
            "name": "keyId",
            "nullable": false,
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_delete_repos_by_owner_by_repo_keys_by_keyId",
        "type": "object",
      },
      "mutationInput_delete_repos_by_owner_by_repo_labels_by_name": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "name": {
            "description": "Name of the label.",
            "in": "path",
            "name": "name",
            "nullable": false,
            "type": "string",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_delete_repos_by_owner_by_repo_labels_by_name",
        "type": "object",
      },
      "mutationInput_delete_repos_by_owner_by_repo_milestones_by_number": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "number": {
            "description": "Number of milestone.",
            "in": "path",
            "name": "number",
            "nullable": false,
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_delete_repos_by_owner_by_repo_milestones_by_number",
        "type": "object",
      },
      "mutationInput_delete_repos_by_owner_by_repo_pulls_comments_by_commentId": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "commentId": {
            "description": "Id of comment.",
            "in": "path",
            "name": "commentId",
            "nullable": false,
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_delete_repos_by_owner_by_repo_pulls_comments_by_commentId",
        "type": "object",
      },
      "mutationInput_delete_repos_by_owner_by_repo_releases_assets_by_id": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "id": {
            "description": undefined,
            "in": "path",
            "name": "id",
            "nullable": false,
            "type": "string",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_delete_repos_by_owner_by_repo_releases_assets_by_id",
        "type": "object",
      },
      "mutationInput_delete_repos_by_owner_by_repo_releases_by_id": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "id": {
            "description": undefined,
            "in": "path",
            "name": "id",
            "nullable": false,
            "type": "string",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_delete_repos_by_owner_by_repo_releases_by_id",
        "type": "object",
      },
      "mutationInput_delete_repos_by_owner_by_repo_subscription": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_delete_repos_by_owner_by_repo_subscription",
        "type": "object",
      },
      "mutationInput_delete_teams_by_teamId": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "teamId": {
            "description": "Id of team.",
            "in": "path",
            "name": "teamId",
            "nullable": false,
            "type": "integer",
          },
        },
        "title": "mutationInput_delete_teams_by_teamId",
        "type": "object",
      },
      "mutationInput_delete_teams_by_teamId_members_by_username": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "teamId": {
            "description": "Id of team.",
            "in": "path",
            "name": "teamId",
            "nullable": false,
            "type": "integer",
          },
          "username": {
            "description": "Name of a member.",
            "in": "path",
            "name": "username",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_delete_teams_by_teamId_members_by_username",
        "type": "object",
      },
      "mutationInput_delete_teams_by_teamId_memberships_by_username": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "teamId": {
            "description": "Id of team.",
            "in": "path",
            "name": "teamId",
            "nullable": false,
            "type": "integer",
          },
          "username": {
            "description": "Name of a member.",
            "in": "path",
            "name": "username",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_delete_teams_by_teamId_memberships_by_username",
        "type": "object",
      },
      "mutationInput_delete_teams_by_teamId_repos_by_owner_by_repo": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "owner": {
            "description": "Name of a repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of a repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
          "teamId": {
            "description": "Id of team.",
            "in": "path",
            "name": "teamId",
            "nullable": false,
            "type": "integer",
          },
        },
        "title": "mutationInput_delete_teams_by_teamId_repos_by_owner_by_repo",
        "type": "object",
      },
      "mutationInput_delete_user_emails": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "input": {
            "$ref": "#/definitions/user-emails",
          },
        },
        "title": "mutationInput_delete_user_emails",
        "type": "object",
      },
      "mutationInput_delete_user_following_by_username": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "username": {
            "description": "Name of user.",
            "in": "path",
            "name": "username",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_delete_user_following_by_username",
        "type": "object",
      },
      "mutationInput_delete_user_keys_by_keyId": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "keyId": {
            "description": "ID of key.",
            "in": "path",
            "name": "keyId",
            "nullable": false,
            "type": "integer",
          },
        },
        "title": "mutationInput_delete_user_keys_by_keyId",
        "type": "object",
      },
      "mutationInput_delete_user_starred_by_owner_by_repo": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "owner": {
            "description": "Name of a repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of a repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_delete_user_starred_by_owner_by_repo",
        "type": "object",
      },
      "mutationInput_delete_user_subscriptions_by_owner_by_repo": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "owner": {
            "description": "Name of the owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_delete_user_subscriptions_by_owner_by_repo",
        "type": "object",
      },
      "mutationInput_patch_gists_by_id": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "id": {
            "description": "Id of gist.",
            "in": "path",
            "name": "id",
            "nullable": false,
            "type": "integer",
          },
          "input": {
            "$ref": "#/definitions/patchGist",
          },
        },
        "title": "mutationInput_patch_gists_by_id",
        "type": "object",
      },
      "mutationInput_patch_gists_by_id_comments_by_commentId": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "commentId": {
            "description": "Id of comment.",
            "in": "path",
            "name": "commentId",
            "nullable": false,
            "type": "integer",
          },
          "id": {
            "description": "Id of gist.",
            "in": "path",
            "name": "id",
            "nullable": false,
            "type": "integer",
          },
          "input": {
            "$ref": "#/definitions/comment",
          },
        },
        "title": "mutationInput_patch_gists_by_id_comments_by_commentId",
        "type": "object",
      },
      "mutationInput_patch_gists_by_id_input_files": {
        "properties": {
          "delete_this_file.txt": {
            "type": "string",
          },
          "file1.txt": {
            "$ref": "#/definitions/mutationInput_patch_gists_by_id_input_files_file1.txt",
          },
          "new_file.txt": {
            "$ref": "#/definitions/mutationInput_patch_gists_by_id_input_files_new_file.txt",
          },
          "old_name.txt": {
            "$ref": "#/definitions/mutationInput_patch_gists_by_id_input_files_old_name.txt",
          },
        },
        "title": "mutationInput_patch_gists_by_id_input_files",
        "type": "object",
      },
      "mutationInput_patch_gists_by_id_input_files_file1.txt": {
        "properties": {
          "content": {
            "type": "string",
          },
        },
        "title": "mutationInput_patch_gists_by_id_input_files_file1.txt",
        "type": "object",
      },
      "mutationInput_patch_gists_by_id_input_files_new_file.txt": {
        "properties": {
          "content": {
            "type": "string",
          },
        },
        "title": "mutationInput_patch_gists_by_id_input_files_new_file.txt",
        "type": "object",
      },
      "mutationInput_patch_gists_by_id_input_files_old_name.txt": {
        "properties": {
          "content": {
            "type": "string",
          },
          "filename": {
            "type": "string",
          },
        },
        "title": "mutationInput_patch_gists_by_id_input_files_old_name.txt",
        "type": "object",
      },
      "mutationInput_patch_notifications_threads_by_id": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "id": {
            "description": "Id of thread.",
            "in": "path",
            "name": "id",
            "nullable": false,
            "type": "integer",
          },
        },
        "title": "mutationInput_patch_notifications_threads_by_id",
        "type": "object",
      },
      "mutationInput_patch_orgs_by_org": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "input": {
            "$ref": "#/definitions/patchOrg",
          },
          "org": {
            "description": "Name of organisation.",
            "in": "path",
            "name": "org",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_patch_orgs_by_org",
        "type": "object",
      },
      "mutationInput_patch_repos_by_owner_by_repo": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "input": {
            "$ref": "#/definitions/repoEdit",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_patch_repos_by_owner_by_repo",
        "type": "object",
      },
      "mutationInput_patch_repos_by_owner_by_repo_comments_by_commentId": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "commentId": {
            "description": "Id of comment.",
            "in": "path",
            "name": "commentId",
            "nullable": false,
            "type": "integer",
          },
          "input": {
            "$ref": "#/definitions/commentBody",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_patch_repos_by_owner_by_repo_comments_by_commentId",
        "type": "object",
      },
      "mutationInput_patch_repos_by_owner_by_repo_git_refs_by_ref": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "input": {
            "$ref": "#/definitions/gitRefPatch",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "ref": {
            "description": undefined,
            "in": "path",
            "name": "ref",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_patch_repos_by_owner_by_repo_git_refs_by_ref",
        "type": "object",
      },
      "mutationInput_patch_repos_by_owner_by_repo_hooks_by_hookId": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "hookId": {
            "description": "Id of hook.",
            "in": "path",
            "name": "hookId",
            "nullable": false,
            "type": "integer",
          },
          "input": {
            "$ref": "#/definitions/hookBody",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_patch_repos_by_owner_by_repo_hooks_by_hookId",
        "type": "object",
      },
      "mutationInput_patch_repos_by_owner_by_repo_issues_by_number": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "input": {
            "$ref": "#/definitions/issue",
          },
          "number": {
            "description": "Number of issue.",
            "in": "path",
            "name": "number",
            "nullable": false,
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_patch_repos_by_owner_by_repo_issues_by_number",
        "type": "object",
      },
      "mutationInput_patch_repos_by_owner_by_repo_issues_comments_by_commentId": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "commentId": {
            "description": "ID of comment.",
            "in": "path",
            "name": "commentId",
            "nullable": false,
            "type": "integer",
          },
          "input": {
            "$ref": "#/definitions/commentBody",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_patch_repos_by_owner_by_repo_issues_comments_by_commentId",
        "type": "object",
      },
      "mutationInput_patch_repos_by_owner_by_repo_labels_by_name": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "input": {
            "$ref": "#/definitions/emailsPost",
          },
          "name": {
            "description": "Name of the label.",
            "in": "path",
            "name": "name",
            "nullable": false,
            "type": "string",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_patch_repos_by_owner_by_repo_labels_by_name",
        "type": "object",
      },
      "mutationInput_patch_repos_by_owner_by_repo_milestones_by_number": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "input": {
            "$ref": "#/definitions/milestoneUpdate",
          },
          "number": {
            "description": "Number of milestone.",
            "in": "path",
            "name": "number",
            "nullable": false,
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_patch_repos_by_owner_by_repo_milestones_by_number",
        "type": "object",
      },
      "mutationInput_patch_repos_by_owner_by_repo_pulls_by_number": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "input": {
            "$ref": "#/definitions/pullUpdate",
          },
          "number": {
            "description": "Id of pull.",
            "in": "path",
            "name": "number",
            "nullable": false,
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_patch_repos_by_owner_by_repo_pulls_by_number",
        "type": "object",
      },
      "mutationInput_patch_repos_by_owner_by_repo_pulls_comments_by_commentId": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "commentId": {
            "description": "Id of comment.",
            "in": "path",
            "name": "commentId",
            "nullable": false,
            "type": "integer",
          },
          "input": {
            "$ref": "#/definitions/commentBody",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_patch_repos_by_owner_by_repo_pulls_comments_by_commentId",
        "type": "object",
      },
      "mutationInput_patch_repos_by_owner_by_repo_releases_assets_by_id": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "id": {
            "description": undefined,
            "in": "path",
            "name": "id",
            "nullable": false,
            "type": "string",
          },
          "input": {
            "$ref": "#/definitions/assetPatch",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_patch_repos_by_owner_by_repo_releases_assets_by_id",
        "type": "object",
      },
      "mutationInput_patch_repos_by_owner_by_repo_releases_by_id": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "id": {
            "description": undefined,
            "in": "path",
            "name": "id",
            "nullable": false,
            "type": "string",
          },
          "input": {
            "$ref": "#/definitions/release-create",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_patch_repos_by_owner_by_repo_releases_by_id",
        "type": "object",
      },
      "mutationInput_patch_teams_by_teamId": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "input": {
            "$ref": "#/definitions/editTeam",
          },
          "teamId": {
            "description": "Id of team.",
            "in": "path",
            "name": "teamId",
            "nullable": false,
            "type": "integer",
          },
        },
        "title": "mutationInput_patch_teams_by_teamId",
        "type": "object",
      },
      "mutationInput_patch_teams_by_teamId_input_permission": {
        "enum": [
          "pull",
          "push",
          "admin",
        ],
        "title": "mutationInput_patch_teams_by_teamId_input_permission",
      },
      "mutationInput_patch_user": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "input": {
            "$ref": "#/definitions/user-update",
          },
        },
        "title": "mutationInput_patch_user",
        "type": "object",
      },
      "mutationInput_post_gists": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "input": {
            "$ref": "#/definitions/postGist",
          },
        },
        "title": "mutationInput_post_gists",
        "type": "object",
      },
      "mutationInput_post_gists_by_id_comments": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "id": {
            "description": "Id of gist.",
            "in": "path",
            "name": "id",
            "nullable": false,
            "type": "integer",
          },
          "input": {
            "$ref": "#/definitions/commentBody",
          },
        },
        "title": "mutationInput_post_gists_by_id_comments",
        "type": "object",
      },
      "mutationInput_post_gists_by_id_forks": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "id": {
            "description": "Id of gist.",
            "in": "path",
            "name": "id",
            "nullable": false,
            "type": "integer",
          },
        },
        "title": "mutationInput_post_gists_by_id_forks",
        "type": "object",
      },
      "mutationInput_post_gists_input_files": {
        "properties": {
          "file1.txt": {
            "$ref": "#/definitions/mutationInput_post_gists_input_files_file1.txt",
          },
        },
        "title": "mutationInput_post_gists_input_files",
        "type": "object",
      },
      "mutationInput_post_gists_input_files_file1.txt": {
        "properties": {
          "content": {
            "type": "string",
          },
        },
        "title": "mutationInput_post_gists_input_files_file1.txt",
        "type": "object",
      },
      "mutationInput_post_markdown": {
        "properties": {
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "input": {
            "$ref": "#/definitions/markdown",
          },
        },
        "title": "mutationInput_post_markdown",
        "type": "object",
      },
      "mutationInput_post_markdown_raw": {
        "properties": {
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
        },
        "title": "mutationInput_post_markdown_raw",
        "type": "object",
      },
      "mutationInput_post_orgs_by_org_repos": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "input": {
            "$ref": "#/definitions/postRepo",
          },
          "org": {
            "description": "Name of organisation.",
            "in": "path",
            "name": "org",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_post_orgs_by_org_repos",
        "type": "object",
      },
      "mutationInput_post_orgs_by_org_teams": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "input": {
            "$ref": "#/definitions/orgTeamsPost",
          },
          "org": {
            "description": "Name of organisation.",
            "in": "path",
            "name": "org",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_post_orgs_by_org_teams",
        "type": "object",
      },
      "mutationInput_post_orgs_by_org_teams_input_permission": {
        "enum": [
          "pull",
          "push",
          "admin",
        ],
        "title": "mutationInput_post_orgs_by_org_teams_input_permission",
      },
      "mutationInput_post_repos_by_owner_by_repo_commits_by_shaCode_comments": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "input": {
            "$ref": "#/definitions/commitBody",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
          "shaCode": {
            "description": "SHA-1 code of the commit.",
            "in": "path",
            "name": "shaCode",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_post_repos_by_owner_by_repo_commits_by_shaCode_comments",
        "type": "object",
      },
      "mutationInput_post_repos_by_owner_by_repo_deployments": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "input": {
            "$ref": "#/definitions/deployment",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_post_repos_by_owner_by_repo_deployments",
        "type": "object",
      },
      "mutationInput_post_repos_by_owner_by_repo_deployments_by_id_statuses": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "id": {
            "description": "The Deployment ID to list the statuses from.",
            "in": "path",
            "name": "id",
            "nullable": false,
            "type": "integer",
          },
          "input": {
            "$ref": "#/definitions/deployment-statuses-create",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_post_repos_by_owner_by_repo_deployments_by_id_statuses",
        "type": "object",
      },
      "mutationInput_post_repos_by_owner_by_repo_deployments_input_payload": {
        "properties": {
          "deploy_user": {
            "type": "string",
          },
          "environment": {
            "type": "string",
          },
          "room_id": {
            "type": "number",
          },
        },
        "title": "mutationInput_post_repos_by_owner_by_repo_deployments_input_payload",
        "type": "object",
      },
      "mutationInput_post_repos_by_owner_by_repo_forks": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "input": {
            "$ref": "#/definitions/forkBody",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_post_repos_by_owner_by_repo_forks",
        "type": "object",
      },
      "mutationInput_post_repos_by_owner_by_repo_git_blobs": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "input": {
            "$ref": "#/definitions/blob",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_post_repos_by_owner_by_repo_git_blobs",
        "type": "object",
      },
      "mutationInput_post_repos_by_owner_by_repo_git_commits": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "input": {
            "$ref": "#/definitions/repoCommitBody",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_post_repos_by_owner_by_repo_git_commits",
        "type": "object",
      },
      "mutationInput_post_repos_by_owner_by_repo_git_commits_input_author": {
        "properties": {
          "date": {
            "type": "string",
          },
          "email": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
        },
        "title": "mutationInput_post_repos_by_owner_by_repo_git_commits_input_author",
        "type": "object",
      },
      "mutationInput_post_repos_by_owner_by_repo_git_refs": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "input": {
            "$ref": "#/definitions/refsBody",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_post_repos_by_owner_by_repo_git_refs",
        "type": "object",
      },
      "mutationInput_post_repos_by_owner_by_repo_git_tags": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "input": {
            "$ref": "#/definitions/tag",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_post_repos_by_owner_by_repo_git_tags",
        "type": "object",
      },
      "mutationInput_post_repos_by_owner_by_repo_git_trees": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "input": {
            "$ref": "#/definitions/tree",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_post_repos_by_owner_by_repo_git_trees",
        "type": "object",
      },
      "mutationInput_post_repos_by_owner_by_repo_hooks": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "input": {
            "$ref": "#/definitions/hookBody",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_post_repos_by_owner_by_repo_hooks",
        "type": "object",
      },
      "mutationInput_post_repos_by_owner_by_repo_hooks_by_hookId_tests": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "hookId": {
            "description": "Id of hook.",
            "in": "path",
            "name": "hookId",
            "nullable": false,
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_post_repos_by_owner_by_repo_hooks_by_hookId_tests",
        "type": "object",
      },
      "mutationInput_post_repos_by_owner_by_repo_issues": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "input": {
            "$ref": "#/definitions/issue",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_post_repos_by_owner_by_repo_issues",
        "type": "object",
      },
      "mutationInput_post_repos_by_owner_by_repo_issues_by_number_comments": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "input": {
            "$ref": "#/definitions/commentBody",
          },
          "number": {
            "description": "Number of issue.",
            "in": "path",
            "name": "number",
            "nullable": false,
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_post_repos_by_owner_by_repo_issues_by_number_comments",
        "type": "object",
      },
      "mutationInput_post_repos_by_owner_by_repo_issues_by_number_labels": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "input": {
            "$ref": "#/definitions/emailsPost",
          },
          "number": {
            "description": "Number of issue.",
            "in": "path",
            "name": "number",
            "nullable": false,
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_post_repos_by_owner_by_repo_issues_by_number_labels",
        "type": "object",
      },
      "mutationInput_post_repos_by_owner_by_repo_keys": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "input": {
            "$ref": "#/definitions/user-keys-post",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_post_repos_by_owner_by_repo_keys",
        "type": "object",
      },
      "mutationInput_post_repos_by_owner_by_repo_labels": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "input": {
            "$ref": "#/definitions/emailsPost",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_post_repos_by_owner_by_repo_labels",
        "type": "object",
      },
      "mutationInput_post_repos_by_owner_by_repo_merges": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "input": {
            "$ref": "#/definitions/mergesBody",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_post_repos_by_owner_by_repo_merges",
        "type": "object",
      },
      "mutationInput_post_repos_by_owner_by_repo_milestones": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "input": {
            "$ref": "#/definitions/milestoneUpdate",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_post_repos_by_owner_by_repo_milestones",
        "type": "object",
      },
      "mutationInput_post_repos_by_owner_by_repo_pulls": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "input": {
            "$ref": "#/definitions/pullsPost",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_post_repos_by_owner_by_repo_pulls",
        "type": "object",
      },
      "mutationInput_post_repos_by_owner_by_repo_pulls_by_number_comments": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "input": {
            "$ref": "#/definitions/pullsCommentPost",
          },
          "number": {
            "description": "Id of pull.",
            "in": "path",
            "name": "number",
            "nullable": false,
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_post_repos_by_owner_by_repo_pulls_by_number_comments",
        "type": "object",
      },
      "mutationInput_post_repos_by_owner_by_repo_releases": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "input": {
            "$ref": "#/definitions/release-create",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_post_repos_by_owner_by_repo_releases",
        "type": "object",
      },
      "mutationInput_post_repos_by_owner_by_repo_statuses_by_ref": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "input": {
            "$ref": "#/definitions/headBranch",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "ref": {
            "description": "Ref to list the statuses from. It can be a SHA, a branch name, or a tag name.",
            "in": "path",
            "name": "ref",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_post_repos_by_owner_by_repo_statuses_by_ref",
        "type": "object",
      },
      "mutationInput_post_user_emails": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "input": {
            "$ref": "#/definitions/emailsPost",
          },
        },
        "title": "mutationInput_post_user_emails",
        "type": "object",
      },
      "mutationInput_post_user_keys": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "input": {
            "$ref": "#/definitions/user-keys-post",
          },
        },
        "title": "mutationInput_post_user_keys",
        "type": "object",
      },
      "mutationInput_post_user_repos": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "input": {
            "$ref": "#/definitions/postRepo",
          },
        },
        "title": "mutationInput_post_user_repos",
        "type": "object",
      },
      "mutationInput_put_gists_by_id_star": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "id": {
            "description": "Id of gist.",
            "in": "path",
            "name": "id",
            "nullable": false,
            "type": "integer",
          },
        },
        "title": "mutationInput_put_gists_by_id_star",
        "type": "object",
      },
      "mutationInput_put_notifications": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "input": {
            "$ref": "#/definitions/notificationMarkRead",
          },
        },
        "title": "mutationInput_put_notifications",
        "type": "object",
      },
      "mutationInput_put_notifications_threads_by_id_subscription": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "id": {
            "description": "Id of thread.",
            "in": "path",
            "name": "id",
            "nullable": false,
            "type": "integer",
          },
          "input": {
            "$ref": "#/definitions/putSubscription",
          },
        },
        "title": "mutationInput_put_notifications_threads_by_id_subscription",
        "type": "object",
      },
      "mutationInput_put_orgs_by_org_public_members_by_username": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "org": {
            "description": "Name of organisation.",
            "in": "path",
            "name": "org",
            "nullable": false,
            "type": "string",
          },
          "username": {
            "description": "Name of the user.",
            "in": "path",
            "name": "username",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_put_orgs_by_org_public_members_by_username",
        "type": "object",
      },
      "mutationInput_put_repos_by_owner_by_repo_collaborators_by_user": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
          "user": {
            "description": "Login of the user.",
            "in": "path",
            "name": "user",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_put_repos_by_owner_by_repo_collaborators_by_user",
        "type": "object",
      },
      "mutationInput_put_repos_by_owner_by_repo_contents_by_path": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "input": {
            "$ref": "#/definitions/createFileBody",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "path": {
            "description": undefined,
            "in": "path",
            "name": "path",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_put_repos_by_owner_by_repo_contents_by_path",
        "type": "object",
      },
      "mutationInput_put_repos_by_owner_by_repo_contents_by_path_input_committer": {
        "properties": {
          "email": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
        },
        "title": "mutationInput_put_repos_by_owner_by_repo_contents_by_path_input_committer",
        "type": "object",
      },
      "mutationInput_put_repos_by_owner_by_repo_issues_by_number_labels": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "input": {
            "$ref": "#/definitions/emailsPost",
          },
          "number": {
            "description": "Number of issue.",
            "in": "path",
            "name": "number",
            "nullable": false,
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_put_repos_by_owner_by_repo_issues_by_number_labels",
        "type": "object",
      },
      "mutationInput_put_repos_by_owner_by_repo_notifications": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "input": {
            "$ref": "#/definitions/notificationMarkRead",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_put_repos_by_owner_by_repo_notifications",
        "type": "object",
      },
      "mutationInput_put_repos_by_owner_by_repo_pulls_by_number_merge": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "input": {
            "$ref": "#/definitions/mergePullBody",
          },
          "number": {
            "description": "Id of pull.",
            "in": "path",
            "name": "number",
            "nullable": false,
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_put_repos_by_owner_by_repo_pulls_by_number_merge",
        "type": "object",
      },
      "mutationInput_put_repos_by_owner_by_repo_subscription": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "input": {
            "$ref": "#/definitions/subscribitionBody",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_put_repos_by_owner_by_repo_subscription",
        "type": "object",
      },
      "mutationInput_put_teams_by_teamId_members_by_username": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "teamId": {
            "description": "Id of team.",
            "in": "path",
            "name": "teamId",
            "nullable": false,
            "type": "integer",
          },
          "username": {
            "description": "Name of a member.",
            "in": "path",
            "name": "username",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_put_teams_by_teamId_members_by_username",
        "type": "object",
      },
      "mutationInput_put_teams_by_teamId_memberships_by_username": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "teamId": {
            "description": "Id of team.",
            "in": "path",
            "name": "teamId",
            "nullable": false,
            "type": "integer",
          },
          "username": {
            "description": "Name of a member.",
            "in": "path",
            "name": "username",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_put_teams_by_teamId_memberships_by_username",
        "type": "object",
      },
      "mutationInput_put_teams_by_teamId_repos_by_org_by_repo": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "org": {
            "description": "Name of a organization.",
            "in": "path",
            "name": "org",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of a repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
          "teamId": {
            "description": "Id of team.",
            "in": "path",
            "name": "teamId",
            "nullable": false,
            "type": "integer",
          },
        },
        "title": "mutationInput_put_teams_by_teamId_repos_by_org_by_repo",
        "type": "object",
      },
      "mutationInput_put_user_following_by_username": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "username": {
            "description": "Name of user.",
            "in": "path",
            "name": "username",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_put_user_following_by_username",
        "type": "object",
      },
      "mutationInput_put_user_starred_by_owner_by_repo": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "owner": {
            "description": "Name of a repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of a repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_put_user_starred_by_owner_by_repo",
        "type": "object",
      },
      "mutationInput_put_user_subscriptions_by_owner_by_repo": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "owner": {
            "description": "Name of the owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "mutationInput_put_user_subscriptions_by_owner_by_repo",
        "type": "object",
      },
      "mutation_delete_repos_by_owner_by_repo_contents_by_path_commit": {
        "properties": {
          "author": {
            "$ref": "#/definitions/mutation_delete_repos_by_owner_by_repo_contents_by_path_commit_author",
          },
          "committer": {
            "$ref": "#/definitions/mutation_delete_repos_by_owner_by_repo_contents_by_path_commit_committer",
          },
          "html_url": {
            "type": "string",
          },
          "message": {
            "type": "string",
          },
          "parents": {
            "$ref": "#/definitions/mutation_delete_repos_by_owner_by_repo_contents_by_path_commit_parents",
          },
          "sha": {
            "type": "string",
          },
          "tree": {
            "$ref": "#/definitions/mutation_delete_repos_by_owner_by_repo_contents_by_path_commit_tree",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "mutation_delete_repos_by_owner_by_repo_contents_by_path_commit",
        "type": "object",
      },
      "mutation_delete_repos_by_owner_by_repo_contents_by_path_commit_author": {
        "properties": {
          "date": {
            "type": "string",
          },
          "email": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
        },
        "title": "mutation_delete_repos_by_owner_by_repo_contents_by_path_commit_author",
        "type": "object",
      },
      "mutation_delete_repos_by_owner_by_repo_contents_by_path_commit_committer": {
        "properties": {
          "date": {
            "type": "string",
          },
          "email": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
        },
        "title": "mutation_delete_repos_by_owner_by_repo_contents_by_path_commit_committer",
        "type": "object",
      },
      "mutation_delete_repos_by_owner_by_repo_contents_by_path_commit_parents": {
        "properties": {
          "html_url": {
            "type": "string",
          },
          "sha": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "mutation_delete_repos_by_owner_by_repo_contents_by_path_commit_parents",
        "type": "object",
      },
      "mutation_delete_repos_by_owner_by_repo_contents_by_path_commit_tree": {
        "properties": {
          "sha": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "mutation_delete_repos_by_owner_by_repo_contents_by_path_commit_tree",
        "type": "object",
      },
      "mutation_post_repos_by_owner_by_repo_deployments_creator": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "events_url": {
            "type": "string",
          },
          "followers_url": {
            "type": "string",
          },
          "following_url": {
            "type": "string",
          },
          "gists_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "html_url": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "organizations_url": {
            "type": "string",
          },
          "received_events_url": {
            "type": "string",
          },
          "repos_url": {
            "type": "string",
          },
          "site_admin": {
            "type": "boolean",
          },
          "starred_url": {
            "type": "string",
          },
          "subscriptions_url": {
            "type": "string",
          },
          "type": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "mutation_post_repos_by_owner_by_repo_deployments_creator",
        "type": "object",
      },
      "mutation_post_repos_by_owner_by_repo_forks_owner": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "mutation_post_repos_by_owner_by_repo_forks_owner",
        "type": "object",
      },
      "mutation_post_repos_by_owner_by_repo_git_commits_author": {
        "properties": {
          "date": {
            "type": "string",
          },
          "email": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
        },
        "title": "mutation_post_repos_by_owner_by_repo_git_commits_author",
        "type": "object",
      },
      "mutation_post_repos_by_owner_by_repo_git_trees_tree_items": {
        "properties": {
          "mode": {
            "$ref": "#/definitions/mutation_post_repos_by_owner_by_repo_git_trees_tree_items_mode",
          },
          "path": {
            "type": "string",
          },
          "sha": {
            "description": "SHA1 checksum ID of the object in the tree.",
            "type": "string",
          },
          "type": {
            "$ref": "#/definitions/mutation_post_repos_by_owner_by_repo_git_trees_tree_items_type",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "mutation_post_repos_by_owner_by_repo_git_trees_tree_items",
        "type": "object",
      },
      "mutation_post_repos_by_owner_by_repo_git_trees_tree_items_mode": {
        "description": "One of 100644 for file (blob), 100755 for executable (blob), 040000 for subdirectory (tree), 160000 for submodule (commit) or 120000 for a blob that specifies the path of a symlink.",
        "enum": [
          "100644",
          "100755",
          "040000",
          "160000",
          "120000",
        ],
        "title": "mutation_post_repos_by_owner_by_repo_git_trees_tree_items_mode",
        "type": "string",
      },
      "mutation_post_repos_by_owner_by_repo_git_trees_tree_items_type": {
        "enum": [
          "blob",
          "tree",
          "commit",
        ],
        "title": "mutation_post_repos_by_owner_by_repo_git_trees_tree_items_type",
        "type": "string",
      },
      "mutation_post_repos_by_owner_by_repo_merges_oneOf_0_author": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "events_url": {
            "type": "string",
          },
          "followers_url": {
            "type": "string",
          },
          "following_url": {
            "type": "string",
          },
          "gists_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "html_url": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "organizations_url": {
            "type": "string",
          },
          "received_events_url": {
            "type": "string",
          },
          "repos_url": {
            "type": "string",
          },
          "starred_url": {
            "type": "string",
          },
          "subscriptions_url": {
            "type": "string",
          },
          "type": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "mutation_post_repos_by_owner_by_repo_merges_oneOf_0_author",
        "type": "object",
      },
      "mutation_post_repos_by_owner_by_repo_merges_oneOf_0_commit": {
        "properties": {
          "author": {
            "$ref": "#/definitions/mutation_post_repos_by_owner_by_repo_merges_oneOf_0_commit_author",
          },
          "comment_count": {
            "type": "integer",
          },
          "committer": {
            "$ref": "#/definitions/mutation_post_repos_by_owner_by_repo_merges_oneOf_0_commit_committer",
          },
          "message": {
            "type": "string",
          },
          "tree": {
            "$ref": "#/definitions/mutation_post_repos_by_owner_by_repo_merges_oneOf_0_commit_tree",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "mutation_post_repos_by_owner_by_repo_merges_oneOf_0_commit",
        "type": "object",
      },
      "mutation_post_repos_by_owner_by_repo_merges_oneOf_0_commit_author": {
        "properties": {
          "date": {
            "type": "string",
          },
          "email": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
        },
        "title": "mutation_post_repos_by_owner_by_repo_merges_oneOf_0_commit_author",
        "type": "object",
      },
      "mutation_post_repos_by_owner_by_repo_merges_oneOf_0_commit_committer": {
        "properties": {
          "date": {
            "type": "string",
          },
          "email": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
        },
        "title": "mutation_post_repos_by_owner_by_repo_merges_oneOf_0_commit_committer",
        "type": "object",
      },
      "mutation_post_repos_by_owner_by_repo_merges_oneOf_0_commit_tree": {
        "properties": {
          "sha": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "mutation_post_repos_by_owner_by_repo_merges_oneOf_0_commit_tree",
        "type": "object",
      },
      "mutation_post_repos_by_owner_by_repo_merges_oneOf_0_committer": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "events_url": {
            "type": "string",
          },
          "followers_url": {
            "type": "string",
          },
          "following_url": {
            "type": "string",
          },
          "gists_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "html_url": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "organizations_url": {
            "type": "string",
          },
          "received_events_url": {
            "type": "string",
          },
          "repos_url": {
            "type": "string",
          },
          "starred_url": {
            "type": "string",
          },
          "subscriptions_url": {
            "type": "string",
          },
          "type": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "mutation_post_repos_by_owner_by_repo_merges_oneOf_0_committer",
        "type": "object",
      },
      "mutation_post_repos_by_owner_by_repo_merges_oneOf_0_parents_items": {
        "properties": {
          "sha": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "mutation_post_repos_by_owner_by_repo_merges_oneOf_0_parents_items",
        "type": "object",
      },
      "mutation_put_repos_by_owner_by_repo_contents_by_path_commit": {
        "properties": {
          "author": {
            "$ref": "#/definitions/mutation_put_repos_by_owner_by_repo_contents_by_path_commit_author",
          },
          "committer": {
            "$ref": "#/definitions/mutation_put_repos_by_owner_by_repo_contents_by_path_commit_committer",
          },
          "html_url": {
            "type": "string",
          },
          "message": {
            "type": "string",
          },
          "parents": {
            "items": {
              "$ref": "#/definitions/mutation_put_repos_by_owner_by_repo_contents_by_path_commit_parents_items",
            },
            "type": "array",
          },
          "sha": {
            "type": "string",
          },
          "tree": {
            "$ref": "#/definitions/mutation_put_repos_by_owner_by_repo_contents_by_path_commit_tree",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "mutation_put_repos_by_owner_by_repo_contents_by_path_commit",
        "type": "object",
      },
      "mutation_put_repos_by_owner_by_repo_contents_by_path_commit_author": {
        "properties": {
          "date": {
            "type": "string",
          },
          "email": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
        },
        "title": "mutation_put_repos_by_owner_by_repo_contents_by_path_commit_author",
        "type": "object",
      },
      "mutation_put_repos_by_owner_by_repo_contents_by_path_commit_committer": {
        "properties": {
          "date": {
            "type": "string",
          },
          "email": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
        },
        "title": "mutation_put_repos_by_owner_by_repo_contents_by_path_commit_committer",
        "type": "object",
      },
      "mutation_put_repos_by_owner_by_repo_contents_by_path_commit_parents_items": {
        "properties": {
          "html_url": {
            "type": "string",
          },
          "sha": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "mutation_put_repos_by_owner_by_repo_contents_by_path_commit_parents_items",
        "type": "object",
      },
      "mutation_put_repos_by_owner_by_repo_contents_by_path_commit_tree": {
        "properties": {
          "sha": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "mutation_put_repos_by_owner_by_repo_contents_by_path_commit_tree",
        "type": "object",
      },
      "mutation_put_repos_by_owner_by_repo_contents_by_path_content": {
        "properties": {
          "git_url": {
            "type": "string",
          },
          "html_url": {
            "type": "string",
          },
          "links": {
            "$ref": "#/definitions/mutation_put_repos_by_owner_by_repo_contents_by_path_content_links",
          },
          "name": {
            "type": "string",
          },
          "path": {
            "type": "string",
          },
          "sha": {
            "type": "string",
          },
          "size": {
            "type": "integer",
          },
          "type": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "mutation_put_repos_by_owner_by_repo_contents_by_path_content",
        "type": "object",
      },
      "mutation_put_repos_by_owner_by_repo_contents_by_path_content_links": {
        "properties": {
          "git": {
            "type": "string",
          },
          "html": {
            "type": "string",
          },
          "self": {
            "type": "string",
          },
        },
        "title": "mutation_put_repos_by_owner_by_repo_contents_by_path_content_links",
        "type": "object",
      },
      "mutation_put_teams_by_teamId_members_by_username_oneOf_1_errors_items": {
        "properties": {
          "code": {
            "type": "string",
          },
          "field": {
            "type": "string",
          },
          "resource": {
            "type": "string",
          },
        },
        "title": "mutation_put_teams_by_teamId_members_by_username_oneOf_1_errors_items",
        "type": "object",
      },
      "notificationMarkRead": {
        "$resolvedRef": "/definitions/notificationMarkRead",
        "description": undefined,
        "nullable": false,
        "properties": {
          "last_read_at": {
            "type": "string",
          },
        },
        "title": "notificationMarkRead",
        "type": "object",
      },
      "notifications": {
        "$resolvedRef": "/definitions/notifications",
        "properties": {
          "id": {
            "type": "integer",
          },
          "last_read_at": {
            "type": "string",
          },
          "reason": {
            "type": "string",
          },
          "repository": {
            "$ref": "#/definitions/query_notifications_repository",
          },
          "subject": {
            "$ref": "#/definitions/query_notifications_subject",
          },
          "unread": {
            "type": "boolean",
          },
          "updated_at": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "notifications",
        "type": "object",
      },
      "orgTeamsPost": {
        "$resolvedRef": "/definitions/orgTeamsPost",
        "description": undefined,
        "nullable": false,
        "properties": {
          "name": {
            "type": "string",
          },
          "permission": {
            "$ref": "#/definitions/mutationInput_post_orgs_by_org_teams_input_permission",
          },
          "repo_names": {
            "items": {
              "type": "string",
            },
            "type": "array",
          },
        },
        "required": [
          "name",
        ],
        "title": "orgTeamsPost",
        "type": "object",
      },
      "organization": {
        "$resolvedRef": "/definitions/organization",
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "blog": {
            "type": "string",
          },
          "company": {
            "type": "string",
          },
          "created_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "email": {
            "type": "string",
          },
          "followers": {
            "type": "integer",
          },
          "following": {
            "type": "integer",
          },
          "html_url": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "location": {
            "type": "string",
          },
          "login": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
          "public_gists": {
            "type": "integer",
          },
          "public_repos": {
            "type": "integer",
          },
          "type": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "organization",
        "type": "object",
      },
      "organizationAsTeamMember": {
        "$resolvedRef": "/definitions/organizationAsTeamMember",
        "properties": {
          "errors": {
            "items": {
              "$ref": "#/definitions/mutation_put_teams_by_teamId_members_by_username_oneOf_1_errors_items",
            },
            "type": "array",
          },
          "message": {
            "type": "string",
          },
        },
        "title": "organizationAsTeamMember",
        "type": "object",
      },
      "orgs_by_org_members_by_username_204_response": {
        "description": "No content. Response if requester is an organization member and user is a member",
        "title": "orgs_by_org_members_by_username_204_response",
        "type": "null",
      },
      "orgs_by_org_public_members_by_username_204_response": {
        "description": "User is a public member.",
        "title": "orgs_by_org_public_members_by_username_204_response",
        "type": "null",
      },
      "participationStats": {
        "$resolvedRef": "/definitions/participationStats",
        "properties": {
          "all": {
            "items": {
              "type": "integer",
            },
            "type": "array",
          },
          "owner": {
            "items": {
              "type": "integer",
            },
            "type": "array",
          },
        },
        "title": "participationStats",
        "type": "object",
      },
      "patchGist": {
        "$resolvedRef": "/definitions/patchGist",
        "description": undefined,
        "nullable": false,
        "properties": {
          "description": {
            "type": "string",
          },
          "files": {
            "$ref": "#/definitions/mutationInput_patch_gists_by_id_input_files",
          },
        },
        "title": "patchGist",
        "type": "object",
      },
      "patchOrg": {
        "$resolvedRef": "/definitions/patchOrg",
        "description": undefined,
        "nullable": false,
        "properties": {
          "billing_email": {
            "description": "Billing email address. This address is not publicized.",
            "type": "string",
          },
          "company": {
            "type": "string",
          },
          "email": {
            "description": "Publicly visible email address.",
            "type": "string",
          },
          "location": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
        },
        "title": "patchOrg",
        "type": "object",
      },
      "postGist": {
        "$resolvedRef": "/definitions/postGist",
        "description": undefined,
        "nullable": false,
        "properties": {
          "description": {
            "type": "string",
          },
          "files": {
            "$ref": "#/definitions/mutationInput_post_gists_input_files",
          },
          "public": {
            "type": "boolean",
          },
        },
        "title": "postGist",
        "type": "object",
      },
      "postRepo": {
        "$resolvedRef": "/definitions/postRepo",
        "description": undefined,
        "nullable": false,
        "properties": {
          "auto_init": {
            "description": "True to create an initial commit with empty README. Default is false.",
            "type": "boolean",
          },
          "description": {
            "type": "string",
          },
          "gitignore_template": {
            "description": "Desired language or platform .gitignore template to apply. Use the name of the template without the extension. For example, "Haskell" Ignored if auto_init parameter is not provided.",
            "type": "string",
          },
          "has_downloads": {
            "description": "True to enable downloads for this repository, false to disable them. Default is true.",
            "type": "boolean",
          },
          "has_issues": {
            "description": "True to enable issues for this repository, false to disable them. Default is true.",
            "type": "boolean",
          },
          "has_wiki": {
            "description": "True to enable the wiki for this repository, false to disable it. Default is true.",
            "type": "boolean",
          },
          "homepage": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
          "private": {
            "description": "True to create a private repository, false to create a public one. Creating private repositories requires a paid GitHub account.",
            "type": "boolean",
          },
          "team_id": {
            "description": "The id of the team that will be granted access to this repository. This is only valid when creating a repo in an organization.",
            "type": "integer",
          },
        },
        "required": [
          "name",
        ],
        "title": "postRepo",
        "type": "object",
      },
      "post_gists_by_id_forks_204_response": {
        "description": "Exists.",
        "title": "post_gists_by_id_forks_204_response",
        "type": "null",
      },
      "post_repos_by_owner_by_repo_hooks_by_hookId_tests_204_response": {
        "description": "Hook is triggered.",
        "title": "post_repos_by_owner_by_repo_hooks_by_hookId_tests_204_response",
        "type": "null",
      },
      "post_repos_by_owner_by_repo_merges_204_response": {
        "description": "No-op response (base already contains the head, nothing to merge)",
        "title": "post_repos_by_owner_by_repo_merges_204_response",
        "type": "null",
      },
      "post_repos_by_owner_by_repo_merges_response": {
        "$comment": "statusCodeOneOfIndexMap:{"201":0,"204":1,"404":2,"409":3}",
        "oneOf": [
          {
            "$ref": "#/definitions/mergesSuccessful",
          },
          {
            "$ref": "#/definitions/post_repos_by_owner_by_repo_merges_204_response",
          },
          {
            "$ref": "#/definitions/mergesConflict",
          },
          {
            "$ref": "#/definitions/mergesConflict",
          },
        ],
        "title": "post_repos_by_owner_by_repo_merges_response",
      },
      "pullRequest": {
        "$resolvedRef": "/definitions/pullRequest",
        "properties": {
          "additions": {
            "type": "integer",
          },
          "base": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_by_number_base",
          },
          "body": {
            "type": "string",
          },
          "changed_files": {
            "type": "integer",
          },
          "closed_at": {
            "type": "string",
          },
          "comments": {
            "type": "integer",
          },
          "commits": {
            "type": "integer",
          },
          "created_at": {
            "type": "string",
          },
          "deletions": {
            "type": "integer",
          },
          "diff_url": {
            "type": "string",
          },
          "head": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_by_number_head",
          },
          "html_url": {
            "type": "string",
          },
          "issue_url": {
            "type": "string",
          },
          "links": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_by_number_links",
          },
          "merge_commit_sha": {
            "type": "string",
          },
          "mergeable": {
            "type": "boolean",
          },
          "merged": {
            "type": "boolean",
          },
          "merged_at": {
            "type": "string",
          },
          "merged_by": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_by_number_merged_by",
          },
          "number": {
            "type": "integer",
          },
          "patch_url": {
            "type": "string",
          },
          "state": {
            "type": "string",
          },
          "title": {
            "type": "string",
          },
          "updated_at": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
          "user": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_by_number_user",
          },
        },
        "title": "pullRequest",
        "type": "object",
      },
      "pullUpdate": {
        "$resolvedRef": "/definitions/pullUpdate",
        "description": undefined,
        "nullable": false,
        "properties": {
          "body": {
            "type": "string",
          },
          "state": {
            "type": "string",
          },
          "title": {
            "type": "string",
          },
        },
        "title": "pullUpdate",
        "type": "object",
      },
      "pulls": {
        "$resolvedRef": "/definitions/pulls",
        "items": {
          "properties": {
            "base": {
              "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_items_base",
            },
            "body": {
              "type": "string",
            },
            "closed_at": {
              "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
              "type": "string",
            },
            "created_at": {
              "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
              "type": "string",
            },
            "diff_url": {
              "type": "string",
            },
            "head": {
              "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_items_head",
            },
            "html_url": {
              "type": "string",
            },
            "issue_url": {
              "type": "string",
            },
            "links": {
              "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_items_links",
            },
            "merged_at": {
              "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
              "type": "string",
            },
            "number": {
              "type": "integer",
            },
            "patch_url": {
              "type": "string",
            },
            "state": {
              "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_items_state",
            },
            "title": {
              "type": "string",
            },
            "updated_at": {
              "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
              "type": "string",
            },
            "url": {
              "type": "string",
            },
            "user": {
              "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_items_user",
            },
          },
          "title": "query_repos_by_owner_by_repo_pulls_items",
          "type": "object",
        },
        "title": "pulls",
        "type": "array",
      },
      "pullsComment": {
        "$resolvedRef": "/definitions/pullsComment",
        "properties": {
          "body": {
            "type": "string",
          },
          "commit_id": {
            "type": "string",
          },
          "created_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "links": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_comments_by_commentId_links",
          },
          "path": {
            "type": "string",
          },
          "position": {
            "type": "integer",
          },
          "updated_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "url": {
            "type": "string",
          },
          "user": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_comments_by_commentId_user",
          },
        },
        "title": "pullsComment",
        "type": "object",
      },
      "pullsCommentPost": {
        "$resolvedRef": "/definitions/pullsCommentPost",
        "description": undefined,
        "nullable": false,
        "properties": {
          "body": {
            "type": "string",
          },
          "commit_id": {
            "type": "string",
          },
          "path": {
            "type": "string",
          },
          "position": {
            "type": "number",
          },
        },
        "title": "pullsCommentPost",
        "type": "object",
      },
      "pullsPost": {
        "$resolvedRef": "/definitions/pullsPost",
        "description": undefined,
        "nullable": false,
        "properties": {
          "base": {
            "type": "string",
          },
          "body": {
            "type": "string",
          },
          "head": {
            "type": "string",
          },
          "title": {
            "type": "string",
          },
        },
        "title": "pullsPost",
        "type": "object",
      },
      "putSubscription": {
        "$resolvedRef": "/definitions/putSubscription",
        "description": undefined,
        "nullable": false,
        "properties": {
          "created_at": {
            "type": "string",
          },
          "ignored": {
            "type": "boolean",
          },
          "reason": {
            "type": "object",
          },
          "subscribed": {
            "type": "boolean",
          },
          "thread_url": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "putSubscription",
        "type": "object",
      },
      "put_gists_by_id_star_204_response": {
        "description": "Starred.",
        "title": "put_gists_by_id_star_204_response",
        "type": "null",
      },
      "put_orgs_by_org_public_members_by_username_204_response": {
        "description": "Publicized.",
        "title": "put_orgs_by_org_public_members_by_username_204_response",
        "type": "null",
      },
      "put_repos_by_owner_by_repo_collaborators_by_user_204_response": {
        "description": "Collaborator added.",
        "title": "put_repos_by_owner_by_repo_collaborators_by_user_204_response",
        "type": "null",
      },
      "put_repos_by_owner_by_repo_pulls_by_number_merge_response": {
        "$comment": "statusCodeOneOfIndexMap:{"200":0,"405":1}",
        "oneOf": [
          {
            "$ref": "#/definitions/merge",
          },
          {
            "$ref": "#/definitions/merge",
          },
        ],
        "title": "put_repos_by_owner_by_repo_pulls_by_number_merge_response",
      },
      "put_teams_by_teamId_members_by_username_204_response": {
        "description": "Team member added.",
        "title": "put_teams_by_teamId_members_by_username_204_response",
        "type": "null",
      },
      "put_teams_by_teamId_members_by_username_response": {
        "$comment": "statusCodeOneOfIndexMap:{"204":0,"422":1}",
        "oneOf": [
          {
            "$ref": "#/definitions/put_teams_by_teamId_members_by_username_204_response",
          },
          {
            "$ref": "#/definitions/organizationAsTeamMember",
          },
        ],
        "title": "put_teams_by_teamId_members_by_username_response",
      },
      "put_teams_by_teamId_memberships_by_username_response": {
        "$comment": "statusCodeOneOfIndexMap:{"200":0,"422":1}",
        "oneOf": [
          {
            "$ref": "#/definitions/teamMembership",
          },
          {
            "$ref": "#/definitions/organizationAsTeamMember",
          },
        ],
        "title": "put_teams_by_teamId_memberships_by_username_response",
      },
      "put_user_following_by_username_204_response": {
        "description": "You are now following the user.",
        "title": "put_user_following_by_username_204_response",
        "type": "null",
      },
      "put_user_starred_by_owner_by_repo_204_response": {
        "description": "Repository starred.",
        "title": "put_user_starred_by_owner_by_repo_204_response",
        "type": "null",
      },
      "put_user_subscriptions_by_owner_by_repo_204_response": {
        "description": "Repository is watched.",
        "title": "put_user_subscriptions_by_owner_by_repo_204_response",
        "type": "null",
      },
      "queryInput_emojis": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
        },
        "title": "queryInput_emojis",
        "type": "object",
      },
      "queryInput_events": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
        },
        "title": "queryInput_events",
        "type": "object",
      },
      "queryInput_feeds": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
        },
        "title": "queryInput_feeds",
        "type": "object",
      },
      "queryInput_gists": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "since": {
            "description": "Timestamp in ISO 8601 format YYYY-MM-DDTHH:MM:SSZ.
Only gists updated at or after this time are returned.",
            "in": "query",
            "name": "since",
            "type": "string",
          },
        },
        "title": "queryInput_gists",
        "type": "object",
      },
      "queryInput_gists_by_id": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "id": {
            "description": "Id of gist.",
            "in": "path",
            "name": "id",
            "nullable": false,
            "type": "integer",
          },
        },
        "title": "queryInput_gists_by_id",
        "type": "object",
      },
      "queryInput_gists_by_id_comments": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "id": {
            "description": "Id of gist.",
            "in": "path",
            "name": "id",
            "nullable": false,
            "type": "integer",
          },
        },
        "title": "queryInput_gists_by_id_comments",
        "type": "object",
      },
      "queryInput_gists_by_id_comments_by_commentId": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "commentId": {
            "description": "Id of comment.",
            "in": "path",
            "name": "commentId",
            "nullable": false,
            "type": "integer",
          },
          "id": {
            "description": "Id of gist.",
            "in": "path",
            "name": "id",
            "nullable": false,
            "type": "integer",
          },
        },
        "title": "queryInput_gists_by_id_comments_by_commentId",
        "type": "object",
      },
      "queryInput_gists_by_id_star": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "id": {
            "description": "Id of gist.",
            "in": "path",
            "name": "id",
            "nullable": false,
            "type": "integer",
          },
        },
        "title": "queryInput_gists_by_id_star",
        "type": "object",
      },
      "queryInput_gists_public": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "since": {
            "description": "Timestamp in ISO 8601 format YYYY-MM-DDTHH:MM:SSZ.
Only gists updated at or after this time are returned.",
            "in": "query",
            "name": "since",
            "type": "string",
          },
        },
        "title": "queryInput_gists_public",
        "type": "object",
      },
      "queryInput_gists_starred": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "since": {
            "description": "Timestamp in ISO 8601 format YYYY-MM-DDTHH:MM:SSZ.
Only gists updated at or after this time are returned.",
            "in": "query",
            "name": "since",
            "type": "string",
          },
        },
        "title": "queryInput_gists_starred",
        "type": "object",
      },
      "queryInput_gitignore_templates": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
        },
        "title": "queryInput_gitignore_templates",
        "type": "object",
      },
      "queryInput_gitignore_templates_by_language": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "language": {
            "description": undefined,
            "in": "path",
            "name": "language",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_gitignore_templates_by_language",
        "type": "object",
      },
      "queryInput_issues": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "direction": {
            "$ref": "#/definitions/queryInput_issues_direction",
          },
          "filter": {
            "$ref": "#/definitions/queryInput_issues_filter",
          },
          "labels": {
            "description": "String list of comma separated Label names. Example - bug,ui,@high.",
            "in": "query",
            "name": "labels",
            "nullable": false,
            "type": "string",
          },
          "since": {
            "description": "Optional string of a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.
Only issues updated at or after this time are returned.",
            "in": "query",
            "name": "since",
            "type": "string",
          },
          "sort": {
            "$ref": "#/definitions/queryInput_issues_sort",
          },
          "state": {
            "$ref": "#/definitions/queryInput_issues_state",
          },
        },
        "title": "queryInput_issues",
        "type": "object",
      },
      "queryInput_issues_direction": {
        "default": "desc",
        "description": undefined,
        "enum": [
          "asc",
          "desc",
        ],
        "in": "query",
        "name": "direction",
        "nullable": false,
        "title": "queryInput_issues_direction",
        "type": "string",
      },
      "queryInput_issues_filter": {
        "default": "all",
        "description": "Issues assigned to you / created by you / mentioning you / you're
subscribed to updates for / All issues the authenticated user can see",
        "enum": [
          "assigned",
          "created",
          "mentioned",
          "subscribed",
          "all",
        ],
        "in": "query",
        "name": "filter",
        "nullable": false,
        "title": "queryInput_issues_filter",
        "type": "string",
      },
      "queryInput_issues_sort": {
        "default": "created",
        "description": undefined,
        "enum": [
          "created",
          "updated",
          "comments",
        ],
        "in": "query",
        "name": "sort",
        "nullable": false,
        "title": "queryInput_issues_sort",
        "type": "string",
      },
      "queryInput_issues_state": {
        "default": "open",
        "description": undefined,
        "enum": [
          "open",
          "closed",
        ],
        "in": "query",
        "name": "state",
        "nullable": false,
        "title": "queryInput_issues_state",
        "type": "string",
      },
      "queryInput_legacy_issues_search_by_owner_by_repository_by_state_by_keyword": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "keyword": {
            "description": "The search term.",
            "in": "path",
            "name": "keyword",
            "nullable": false,
            "type": "string",
          },
          "owner": {
            "description": undefined,
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repository": {
            "description": undefined,
            "in": "path",
            "name": "repository",
            "nullable": false,
            "type": "string",
          },
          "state": {
            "$ref": "#/definitions/queryInput_legacy_issues_search_by_owner_by_repository_by_state_by_keyword_state",
          },
        },
        "title": "queryInput_legacy_issues_search_by_owner_by_repository_by_state_by_keyword",
        "type": "object",
      },
      "queryInput_legacy_issues_search_by_owner_by_repository_by_state_by_keyword_state": {
        "description": "Indicates the state of the issues to return. Can be either open or closed.",
        "enum": [
          "open",
          "closed",
        ],
        "in": "path",
        "name": "state",
        "nullable": false,
        "title": "queryInput_legacy_issues_search_by_owner_by_repository_by_state_by_keyword_state",
        "type": "string",
      },
      "queryInput_legacy_repos_search_by_keyword": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "keyword": {
            "description": "The search term",
            "in": "path",
            "name": "keyword",
            "nullable": false,
            "type": "string",
          },
          "language": {
            "description": "Filter results by language",
            "in": "query",
            "name": "language",
            "type": "string",
          },
          "order": {
            "$ref": "#/definitions/queryInput_legacy_repos_search_by_keyword_order",
          },
          "sort": {
            "$ref": "#/definitions/queryInput_legacy_repos_search_by_keyword_sort",
          },
          "start_page": {
            "description": "The page number to fetch",
            "in": "query",
            "name": "start_page",
            "type": "string",
          },
        },
        "title": "queryInput_legacy_repos_search_by_keyword",
        "type": "object",
      },
      "queryInput_legacy_repos_search_by_keyword_order": {
        "default": "desc",
        "description": "The sort field. if sort param is provided. Can be either asc or desc.",
        "enum": [
          "desc",
          "asc",
        ],
        "in": "query",
        "name": "order",
        "title": "queryInput_legacy_repos_search_by_keyword_order",
        "type": "string",
      },
      "queryInput_legacy_repos_search_by_keyword_sort": {
        "description": "The sort field. One of stars, forks, or updated. Default: results are sorted by best match.",
        "enum": [
          "updated",
          "stars",
          "forks",
        ],
        "in": "query",
        "name": "sort",
        "title": "queryInput_legacy_repos_search_by_keyword_sort",
        "type": "string",
      },
      "queryInput_legacy_user_email_by_email": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "email": {
            "description": "The email address",
            "in": "path",
            "name": "email",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_legacy_user_email_by_email",
        "type": "object",
      },
      "queryInput_legacy_user_search_by_keyword": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "keyword": {
            "description": "The search term",
            "in": "path",
            "name": "keyword",
            "nullable": false,
            "type": "string",
          },
          "order": {
            "$ref": "#/definitions/queryInput_legacy_user_search_by_keyword_order",
          },
          "sort": {
            "$ref": "#/definitions/queryInput_legacy_user_search_by_keyword_sort",
          },
          "start_page": {
            "description": "The page number to fetch",
            "in": "query",
            "name": "start_page",
            "type": "string",
          },
        },
        "title": "queryInput_legacy_user_search_by_keyword",
        "type": "object",
      },
      "queryInput_legacy_user_search_by_keyword_order": {
        "default": "desc",
        "description": "The sort field. if sort param is provided. Can be either asc or desc.",
        "enum": [
          "desc",
          "asc",
        ],
        "in": "query",
        "name": "order",
        "title": "queryInput_legacy_user_search_by_keyword_order",
        "type": "string",
      },
      "queryInput_legacy_user_search_by_keyword_sort": {
        "description": "The sort field. One of stars, forks, or updated. Default: results are sorted by best match.",
        "enum": [
          "updated",
          "stars",
          "forks",
        ],
        "in": "query",
        "name": "sort",
        "title": "queryInput_legacy_user_search_by_keyword_sort",
        "type": "string",
      },
      "queryInput_meta": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
        },
        "title": "queryInput_meta",
        "type": "object",
      },
      "queryInput_networks_by_owner_by_repo_events": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "owner": {
            "description": "Name of the owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_networks_by_owner_by_repo_events",
        "type": "object",
      },
      "queryInput_notifications": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "all": {
            "description": "True to show notifications marked as read.",
            "in": "query",
            "name": "all",
            "type": "boolean",
          },
          "participating": {
            "description": "True to show only notifications in which the user is directly participating
or mentioned.",
            "in": "query",
            "name": "participating",
            "type": "boolean",
          },
          "since": {
            "description": "The time should be passed in as UTC in the ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.
Example: "2012-10-09T23:39:01Z".",
            "in": "query",
            "name": "since",
            "type": "string",
          },
        },
        "title": "queryInput_notifications",
        "type": "object",
      },
      "queryInput_notifications_threads_by_id": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "id": {
            "description": "Id of thread.",
            "in": "path",
            "name": "id",
            "nullable": false,
            "type": "integer",
          },
        },
        "title": "queryInput_notifications_threads_by_id",
        "type": "object",
      },
      "queryInput_notifications_threads_by_id_subscription": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "id": {
            "description": "Id of thread.",
            "in": "path",
            "name": "id",
            "nullable": false,
            "type": "integer",
          },
        },
        "title": "queryInput_notifications_threads_by_id_subscription",
        "type": "object",
      },
      "queryInput_orgs_by_org": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "org": {
            "description": "Name of organisation.",
            "in": "path",
            "name": "org",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_orgs_by_org",
        "type": "object",
      },
      "queryInput_orgs_by_org_events": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "org": {
            "description": "Name of organisation.",
            "in": "path",
            "name": "org",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_orgs_by_org_events",
        "type": "object",
      },
      "queryInput_orgs_by_org_issues": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "direction": {
            "$ref": "#/definitions/queryInput_orgs_by_org_issues_direction",
          },
          "filter": {
            "$ref": "#/definitions/queryInput_orgs_by_org_issues_filter",
          },
          "labels": {
            "description": "String list of comma separated Label names. Example - bug,ui,@high.",
            "in": "query",
            "name": "labels",
            "nullable": false,
            "type": "string",
          },
          "org": {
            "description": "Name of organisation.",
            "in": "path",
            "name": "org",
            "nullable": false,
            "type": "string",
          },
          "since": {
            "description": "Optional string of a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.
Only issues updated at or after this time are returned.",
            "in": "query",
            "name": "since",
            "type": "string",
          },
          "sort": {
            "$ref": "#/definitions/queryInput_orgs_by_org_issues_sort",
          },
          "state": {
            "$ref": "#/definitions/queryInput_orgs_by_org_issues_state",
          },
        },
        "title": "queryInput_orgs_by_org_issues",
        "type": "object",
      },
      "queryInput_orgs_by_org_issues_direction": {
        "default": "desc",
        "description": undefined,
        "enum": [
          "asc",
          "desc",
        ],
        "in": "query",
        "name": "direction",
        "nullable": false,
        "title": "queryInput_orgs_by_org_issues_direction",
        "type": "string",
      },
      "queryInput_orgs_by_org_issues_filter": {
        "default": "all",
        "description": "Issues assigned to you / created by you / mentioning you / you're
subscribed to updates for / All issues the authenticated user can see",
        "enum": [
          "assigned",
          "created",
          "mentioned",
          "subscribed",
          "all",
        ],
        "in": "query",
        "name": "filter",
        "nullable": false,
        "title": "queryInput_orgs_by_org_issues_filter",
        "type": "string",
      },
      "queryInput_orgs_by_org_issues_sort": {
        "default": "created",
        "description": undefined,
        "enum": [
          "created",
          "updated",
          "comments",
        ],
        "in": "query",
        "name": "sort",
        "nullable": false,
        "title": "queryInput_orgs_by_org_issues_sort",
        "type": "string",
      },
      "queryInput_orgs_by_org_issues_state": {
        "default": "open",
        "description": undefined,
        "enum": [
          "open",
          "closed",
        ],
        "in": "query",
        "name": "state",
        "nullable": false,
        "title": "queryInput_orgs_by_org_issues_state",
        "type": "string",
      },
      "queryInput_orgs_by_org_members": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "org": {
            "description": "Name of organisation.",
            "in": "path",
            "name": "org",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_orgs_by_org_members",
        "type": "object",
      },
      "queryInput_orgs_by_org_members_by_username": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "org": {
            "description": "Name of organisation.",
            "in": "path",
            "name": "org",
            "nullable": false,
            "type": "string",
          },
          "username": {
            "description": "Name of the user.",
            "in": "path",
            "name": "username",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_orgs_by_org_members_by_username",
        "type": "object",
      },
      "queryInput_orgs_by_org_public_members": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "org": {
            "description": "Name of organisation.",
            "in": "path",
            "name": "org",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_orgs_by_org_public_members",
        "type": "object",
      },
      "queryInput_orgs_by_org_public_members_by_username": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "org": {
            "description": "Name of organisation.",
            "in": "path",
            "name": "org",
            "nullable": false,
            "type": "string",
          },
          "username": {
            "description": "Name of the user.",
            "in": "path",
            "name": "username",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_orgs_by_org_public_members_by_username",
        "type": "object",
      },
      "queryInput_orgs_by_org_repos": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "org": {
            "description": "Name of organisation.",
            "in": "path",
            "name": "org",
            "nullable": false,
            "type": "string",
          },
          "type": {
            "$ref": "#/definitions/queryInput_orgs_by_org_repos_type",
          },
        },
        "title": "queryInput_orgs_by_org_repos",
        "type": "object",
      },
      "queryInput_orgs_by_org_repos_type": {
        "default": "all",
        "description": undefined,
        "enum": [
          "all",
          "public",
          "private",
          "forks",
          "sources",
          "member",
        ],
        "in": "query",
        "name": "type",
        "title": "queryInput_orgs_by_org_repos_type",
        "type": "string",
      },
      "queryInput_orgs_by_org_teams": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "org": {
            "description": "Name of organisation.",
            "in": "path",
            "name": "org",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_orgs_by_org_teams",
        "type": "object",
      },
      "queryInput_rate_limit": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
        },
        "title": "queryInput_rate_limit",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_assignees": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_assignees",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_assignees_by_assignee": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "assignee": {
            "description": "Login of the assignee.",
            "in": "path",
            "name": "assignee",
            "nullable": false,
            "type": "string",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_assignees_by_assignee",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_branches": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_branches",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_branches_by_branch": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "branch": {
            "description": "Name of the branch.",
            "in": "path",
            "name": "branch",
            "nullable": false,
            "type": "string",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_branches_by_branch",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_by_archive_format_by_path": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "archive_format": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_by_archive_format_by_path_archive_format",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "path": {
            "description": "Valid Git reference, defaults to 'master'.",
            "in": "path",
            "name": "path",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_by_archive_format_by_path",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_by_archive_format_by_path_archive_format": {
        "description": undefined,
        "enum": [
          "tarball",
          "zipball",
        ],
        "in": "path",
        "name": "archive_format",
        "nullable": false,
        "title": "queryInput_repos_by_owner_by_repo_by_archive_format_by_path_archive_format",
        "type": "string",
      },
      "queryInput_repos_by_owner_by_repo_collaborators": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_collaborators",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_collaborators_by_user": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
          "user": {
            "description": "Login of the user.",
            "in": "path",
            "name": "user",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_collaborators_by_user",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_comments": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_comments",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_comments_by_commentId": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "commentId": {
            "description": "Id of comment.",
            "in": "path",
            "name": "commentId",
            "nullable": false,
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_comments_by_commentId",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_commits": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "author": {
            "description": "GitHub login, name, or email by which to filter by commit author.",
            "in": "query",
            "name": "author",
            "type": "string",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "path": {
            "description": "Only commits containing this file path will be returned.",
            "in": "query",
            "name": "path",
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
          "sha": {
            "description": "Sha or branch to start listing commits from.",
            "in": "query",
            "name": "sha",
            "type": "string",
          },
          "since": {
            "description": "The time should be passed in as UTC in the ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.
Example: "2012-10-09T23:39:01Z".",
            "in": "query",
            "name": "since",
            "type": "string",
          },
          "until": {
            "description": "ISO 8601 Date - Only commits before this date will be returned.",
            "in": "query",
            "name": "until",
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_commits",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_commits_by_ref_status": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "ref": {
            "description": undefined,
            "in": "path",
            "name": "ref",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_commits_by_ref_status",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_commits_by_shaCode": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
          "shaCode": {
            "description": "SHA-1 code of the commit.",
            "in": "path",
            "name": "shaCode",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_commits_by_shaCode",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_commits_by_shaCode_comments": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
          "shaCode": {
            "description": "SHA-1 code of the commit.",
            "in": "path",
            "name": "shaCode",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_commits_by_shaCode_comments",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_compare_by_baseId___by_headId": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "baseId": {
            "description": undefined,
            "in": "path",
            "name": "baseId",
            "nullable": false,
            "type": "string",
          },
          "headId": {
            "description": undefined,
            "in": "path",
            "name": "headId",
            "nullable": false,
            "type": "string",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_compare_by_baseId___by_headId",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_contents_by_path": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "path": {
            "description": "The content path.",
            "in": "query",
            "name": "path",
            "type": "string",
          },
          "ref": {
            "description": "The String name of the Commit/Branch/Tag. Defaults to 'master'.",
            "in": "query",
            "name": "ref",
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_contents_by_path",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_contributors": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "anon": {
            "description": "Set to 1 or true to include anonymous contributors in results.",
            "in": "query",
            "name": "anon",
            "nullable": false,
            "type": "string",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_contributors",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_deployments": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_deployments",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_deployments_by_id_statuses": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "id": {
            "description": "The Deployment ID to list the statuses from.",
            "in": "path",
            "name": "id",
            "nullable": false,
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_deployments_by_id_statuses",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_downloads": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_downloads",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_downloads_by_downloadId": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "downloadId": {
            "description": "Id of download.",
            "in": "path",
            "name": "downloadId",
            "nullable": false,
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_downloads_by_downloadId",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_events": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_events",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_forks": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
          "sort": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_forks_sort",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_forks",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_forks_sort": {
        "default": "newes",
        "description": undefined,
        "enum": [
          "newes",
          "oldes",
          "watchers",
        ],
        "in": "query",
        "name": "sort",
        "title": "queryInput_repos_by_owner_by_repo_forks_sort",
        "type": "string",
      },
      "queryInput_repos_by_owner_by_repo_git_blobs_by_shaCode": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
          "shaCode": {
            "description": "SHA-1 code.",
            "in": "path",
            "name": "shaCode",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_git_blobs_by_shaCode",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_git_commits_by_shaCode": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
          "shaCode": {
            "description": "SHA-1 code.",
            "in": "path",
            "name": "shaCode",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_git_commits_by_shaCode",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_git_refs": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_git_refs",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_git_refs_by_ref": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "ref": {
            "description": undefined,
            "in": "path",
            "name": "ref",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_git_refs_by_ref",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_git_tags_by_shaCode": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
          "shaCode": {
            "description": undefined,
            "in": "path",
            "name": "shaCode",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_git_tags_by_shaCode",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_git_trees_by_shaCode": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "recursive": {
            "description": "Get a Tree Recursively. (0 or 1)",
            "in": "query",
            "name": "recursive",
            "type": "integer",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
          "shaCode": {
            "description": "Tree SHA.",
            "in": "path",
            "name": "shaCode",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_git_trees_by_shaCode",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_hooks": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_hooks",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_hooks_by_hookId": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "hookId": {
            "description": "Id of hook.",
            "in": "path",
            "name": "hookId",
            "nullable": false,
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_hooks_by_hookId",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_issues": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "direction": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_issues_direction",
          },
          "filter": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_issues_filter",
          },
          "labels": {
            "description": "String list of comma separated Label names. Example - bug,ui,@high.",
            "in": "query",
            "name": "labels",
            "nullable": false,
            "type": "string",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
          "since": {
            "description": "Optional string of a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.
Only issues updated at or after this time are returned.",
            "in": "query",
            "name": "since",
            "type": "string",
          },
          "sort": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_issues_sort",
          },
          "state": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_issues_state",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_issues",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_issues_by_number": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "number": {
            "description": "Number of issue.",
            "in": "path",
            "name": "number",
            "nullable": false,
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_issues_by_number",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_issues_by_number_comments": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "number": {
            "description": "Number of issue.",
            "in": "path",
            "name": "number",
            "nullable": false,
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_issues_by_number_comments",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_issues_by_number_events": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "number": {
            "description": "Number of issue.",
            "in": "path",
            "name": "number",
            "nullable": false,
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_issues_by_number_events",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_issues_by_number_labels": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "number": {
            "description": "Number of issue.",
            "in": "path",
            "name": "number",
            "nullable": false,
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_issues_by_number_labels",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_issues_comments": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "direction": {
            "description": "Ignored without 'sort' parameter.",
            "in": "query",
            "name": "direction",
            "type": "string",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
          "since": {
            "description": "The time should be passed in as UTC in the ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.
Example: "2012-10-09T23:39:01Z".",
            "in": "query",
            "name": "since",
            "type": "string",
          },
          "sort": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_issues_comments_sort",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_issues_comments",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_issues_comments_by_commentId": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "commentId": {
            "description": "ID of comment.",
            "in": "path",
            "name": "commentId",
            "nullable": false,
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_issues_comments_by_commentId",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_issues_comments_sort": {
        "description": "",
        "enum": [
          "created",
          "updated",
        ],
        "in": "query",
        "name": "sort",
        "title": "queryInput_repos_by_owner_by_repo_issues_comments_sort",
        "type": "string",
      },
      "queryInput_repos_by_owner_by_repo_issues_direction": {
        "default": "desc",
        "description": undefined,
        "enum": [
          "asc",
          "desc",
        ],
        "in": "query",
        "name": "direction",
        "nullable": false,
        "title": "queryInput_repos_by_owner_by_repo_issues_direction",
        "type": "string",
      },
      "queryInput_repos_by_owner_by_repo_issues_events": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_issues_events",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_issues_events_by_eventId": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "eventId": {
            "description": "Id of the event.",
            "in": "path",
            "name": "eventId",
            "nullable": false,
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_issues_events_by_eventId",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_issues_filter": {
        "default": "all",
        "description": "Issues assigned to you / created by you / mentioning you / you're
subscribed to updates for / All issues the authenticated user can see",
        "enum": [
          "assigned",
          "created",
          "mentioned",
          "subscribed",
          "all",
        ],
        "in": "query",
        "name": "filter",
        "nullable": false,
        "title": "queryInput_repos_by_owner_by_repo_issues_filter",
        "type": "string",
      },
      "queryInput_repos_by_owner_by_repo_issues_sort": {
        "default": "created",
        "description": undefined,
        "enum": [
          "created",
          "updated",
          "comments",
        ],
        "in": "query",
        "name": "sort",
        "nullable": false,
        "title": "queryInput_repos_by_owner_by_repo_issues_sort",
        "type": "string",
      },
      "queryInput_repos_by_owner_by_repo_issues_state": {
        "default": "open",
        "description": undefined,
        "enum": [
          "open",
          "closed",
        ],
        "in": "query",
        "name": "state",
        "nullable": false,
        "title": "queryInput_repos_by_owner_by_repo_issues_state",
        "type": "string",
      },
      "queryInput_repos_by_owner_by_repo_keys": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_keys",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_keys_by_keyId": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "keyId": {
            "description": "Id of key.",
            "in": "path",
            "name": "keyId",
            "nullable": false,
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_keys_by_keyId",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_labels": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_labels",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_labels_by_name": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "name": {
            "description": "Name of the label.",
            "in": "path",
            "name": "name",
            "nullable": false,
            "type": "string",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_labels_by_name",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_languages": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_languages",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_milestones": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "direction": {
            "description": "Ignored without 'sort' parameter.",
            "in": "query",
            "name": "direction",
            "type": "string",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
          "sort": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_milestones_sort",
          },
          "state": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_milestones_state",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_milestones",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_milestones_by_number": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "number": {
            "description": "Number of milestone.",
            "in": "path",
            "name": "number",
            "nullable": false,
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_milestones_by_number",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_milestones_by_number_labels": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "number": {
            "description": "Number of milestone.",
            "in": "path",
            "name": "number",
            "nullable": false,
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_milestones_by_number_labels",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_milestones_sort": {
        "default": "due_date",
        "description": "",
        "enum": [
          "due_date",
          "completeness",
        ],
        "in": "query",
        "name": "sort",
        "title": "queryInput_repos_by_owner_by_repo_milestones_sort",
        "type": "string",
      },
      "queryInput_repos_by_owner_by_repo_milestones_state": {
        "default": "open",
        "description": "String to filter by state.",
        "enum": [
          "open",
          "closed",
        ],
        "in": "query",
        "name": "state",
        "title": "queryInput_repos_by_owner_by_repo_milestones_state",
        "type": "string",
      },
      "queryInput_repos_by_owner_by_repo_notifications": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "all": {
            "description": "True to show notifications marked as read.",
            "in": "query",
            "name": "all",
            "type": "boolean",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "participating": {
            "description": "True to show only notifications in which the user is directly participating
or mentioned.",
            "in": "query",
            "name": "participating",
            "type": "boolean",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
          "since": {
            "description": "The time should be passed in as UTC in the ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.
Example: "2012-10-09T23:39:01Z".",
            "in": "query",
            "name": "since",
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_notifications",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_pulls": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "base": {
            "description": "Filter pulls by base branch name. Example - gh-pages.",
            "in": "query",
            "name": "base",
            "type": "string",
          },
          "head": {
            "description": "Filter pulls by head user and branch name in the format of 'user:ref-name'.
Example: github:new-script-format.",
            "in": "query",
            "name": "head",
            "type": "string",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
          "state": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_pulls_state",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_pulls",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_pulls_by_number": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "number": {
            "description": "Id of pull.",
            "in": "path",
            "name": "number",
            "nullable": false,
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_pulls_by_number",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_pulls_by_number_comments": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "number": {
            "description": "Id of pull.",
            "in": "path",
            "name": "number",
            "nullable": false,
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_pulls_by_number_comments",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_pulls_by_number_commits": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "number": {
            "description": "Id of pull.",
            "in": "path",
            "name": "number",
            "nullable": false,
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_pulls_by_number_commits",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_pulls_by_number_files": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "number": {
            "description": "Id of pull.",
            "in": "path",
            "name": "number",
            "nullable": false,
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_pulls_by_number_files",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_pulls_by_number_merge": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "number": {
            "description": "Id of pull.",
            "in": "path",
            "name": "number",
            "nullable": false,
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_pulls_by_number_merge",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_pulls_comments": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "direction": {
            "description": "Ignored without 'sort' parameter.",
            "in": "query",
            "name": "direction",
            "type": "string",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
          "since": {
            "description": "The time should be passed in as UTC in the ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.
Example: "2012-10-09T23:39:01Z".",
            "in": "query",
            "name": "since",
            "type": "string",
          },
          "sort": {
            "$ref": "#/definitions/queryInput_repos_by_owner_by_repo_pulls_comments_sort",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_pulls_comments",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_pulls_comments_by_commentId": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "commentId": {
            "description": "Id of comment.",
            "in": "path",
            "name": "commentId",
            "nullable": false,
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_pulls_comments_by_commentId",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_pulls_comments_sort": {
        "description": "",
        "enum": [
          "created",
          "updated",
        ],
        "in": "query",
        "name": "sort",
        "title": "queryInput_repos_by_owner_by_repo_pulls_comments_sort",
        "type": "string",
      },
      "queryInput_repos_by_owner_by_repo_pulls_state": {
        "default": "open",
        "description": "String to filter by state.",
        "enum": [
          "open",
          "closed",
        ],
        "in": "query",
        "name": "state",
        "title": "queryInput_repos_by_owner_by_repo_pulls_state",
        "type": "string",
      },
      "queryInput_repos_by_owner_by_repo_readme": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "ref": {
            "description": "The String name of the Commit/Branch/Tag. Defaults to master.",
            "in": "query",
            "name": "ref",
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_readme",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_releases": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_releases",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_releases_assets_by_id": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "id": {
            "description": undefined,
            "in": "path",
            "name": "id",
            "nullable": false,
            "type": "string",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_releases_assets_by_id",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_releases_by_id": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "id": {
            "description": undefined,
            "in": "path",
            "name": "id",
            "nullable": false,
            "type": "string",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_releases_by_id",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_releases_by_id_assets": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "id": {
            "description": undefined,
            "in": "path",
            "name": "id",
            "nullable": false,
            "type": "string",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_releases_by_id_assets",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_stargazers": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_stargazers",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_stats_code_frequency": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_stats_code_frequency",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_stats_commit_activity": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_stats_commit_activity",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_stats_contributors": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_stats_contributors",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_stats_participation": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_stats_participation",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_stats_punch_card": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_stats_punch_card",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_statuses_by_ref": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "ref": {
            "description": "Ref to list the statuses from. It can be a SHA, a branch name, or a tag name.",
            "in": "path",
            "name": "ref",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_statuses_by_ref",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_subscribers": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_subscribers",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_subscription": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_subscription",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_tags": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_tags",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_teams": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_teams",
        "type": "object",
      },
      "queryInput_repos_by_owner_by_repo_watchers": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "owner": {
            "description": "Name of repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_repos_by_owner_by_repo_watchers",
        "type": "object",
      },
      "queryInput_repositories": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "since": {
            "description": "The time should be passed in as UTC in the ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.
Example: "2012-10-09T23:39:01Z".",
            "in": "query",
            "name": "since",
            "type": "string",
          },
        },
        "title": "queryInput_repositories",
        "type": "object",
      },
      "queryInput_search_code": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "order": {
            "$ref": "#/definitions/queryInput_search_code_order",
          },
          "q": {
            "description": "The search terms. This can be any combination of the supported code
search parameters:
'Search In' Qualifies which fields are searched. With this qualifier
you can restrict the search to just the file contents, the file path,
or both.
'Languages' Searches code based on the language it's written in.
'Forks' Filters repositories based on the number of forks, and/or
whether code from forked repositories should be included in the results
at all.
'Size' Finds files that match a certain size (in bytes).
'Path' Specifies the path that the resulting file must be at.
'Extension' Matches files with a certain extension.
'Users' or 'Repositories' Limits searches to a specific user or repository.",
            "in": "query",
            "name": "q",
            "nullable": false,
            "type": "string",
          },
          "sort": {
            "$ref": "#/definitions/queryInput_search_code_sort",
          },
        },
        "title": "queryInput_search_code",
        "type": "object",
      },
      "queryInput_search_code_order": {
        "default": "desc",
        "description": "The sort field. if sort param is provided. Can be either asc or desc.",
        "enum": [
          "desc",
          "asc",
        ],
        "in": "query",
        "name": "order",
        "title": "queryInput_search_code_order",
        "type": "string",
      },
      "queryInput_search_code_sort": {
        "description": "Can only be 'indexed', which indicates how recently a file has been indexed
by the GitHub search infrastructure. If not provided, results are sorted
by best match.",
        "enum": [
          "indexed",
        ],
        "in": "query",
        "name": "sort",
        "title": "queryInput_search_code_sort",
        "type": "string",
      },
      "queryInput_search_issues": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "order": {
            "$ref": "#/definitions/queryInput_search_issues_order",
          },
          "q": {
            "description": "The q search term can also contain any combination of the supported issue search qualifiers:",
            "in": "query",
            "name": "q",
            "nullable": false,
            "type": "string",
          },
          "sort": {
            "$ref": "#/definitions/queryInput_search_issues_sort",
          },
        },
        "title": "queryInput_search_issues",
        "type": "object",
      },
      "queryInput_search_issues_order": {
        "default": "desc",
        "description": "The sort field. if sort param is provided. Can be either asc or desc.",
        "enum": [
          "desc",
          "asc",
        ],
        "in": "query",
        "name": "order",
        "title": "queryInput_search_issues_order",
        "type": "string",
      },
      "queryInput_search_issues_sort": {
        "description": "The sort field. Can be comments, created, or updated. Default: results are sorted by best match.",
        "enum": [
          "updated",
          "created",
          "comments",
        ],
        "in": "query",
        "name": "sort",
        "title": "queryInput_search_issues_sort",
        "type": "string",
      },
      "queryInput_search_repositories": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "order": {
            "$ref": "#/definitions/queryInput_search_repositories_order",
          },
          "q": {
            "description": "The search terms. This can be any combination of the supported repository
search parameters:
'Search In' Qualifies which fields are searched. With this qualifier you
can restrict the search to just the repository name, description, readme,
or any combination of these.
'Size' Finds repositories that match a certain size (in kilobytes).
'Forks' Filters repositories based on the number of forks, and/or whether
forked repositories should be included in the results at all.
'Created' and 'Last Updated' Filters repositories based on times of
creation, or when they were last updated.
'Users or Repositories' Limits searches to a specific user or repository.
'Languages' Searches repositories based on the language they are written in.
'Stars' Searches repositories based on the number of stars.",
            "in": "query",
            "name": "q",
            "nullable": false,
            "type": "string",
          },
          "sort": {
            "$ref": "#/definitions/queryInput_search_repositories_sort",
          },
        },
        "title": "queryInput_search_repositories",
        "type": "object",
      },
      "queryInput_search_repositories_order": {
        "default": "desc",
        "description": "The sort field. if sort param is provided. Can be either asc or desc.",
        "enum": [
          "desc",
          "asc",
        ],
        "in": "query",
        "name": "order",
        "title": "queryInput_search_repositories_order",
        "type": "string",
      },
      "queryInput_search_repositories_sort": {
        "description": "If not provided, results are sorted by best match.",
        "enum": [
          "stars",
          "forks",
          "updated",
        ],
        "in": "query",
        "name": "sort",
        "title": "queryInput_search_repositories_sort",
        "type": "string",
      },
      "queryInput_search_users": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "order": {
            "$ref": "#/definitions/queryInput_search_users_order",
          },
          "q": {
            "description": "The search terms. This can be any combination of the supported user
search parameters:
'Search In' Qualifies which fields are searched. With this qualifier you
can restrict the search to just the username, public email, full name,
location, or any combination of these.
'Repository count' Filters users based on the number of repositories they
have.
'Location' Filter users by the location indicated in their profile.
'Language' Search for users that have repositories that match a certain
language.
'Created' Filter users based on when they joined.
'Followers' Filter users based on the number of followers they have.",
            "in": "query",
            "name": "q",
            "nullable": false,
            "type": "string",
          },
          "sort": {
            "$ref": "#/definitions/queryInput_search_users_sort",
          },
        },
        "title": "queryInput_search_users",
        "type": "object",
      },
      "queryInput_search_users_order": {
        "default": "desc",
        "description": "The sort field. if sort param is provided. Can be either asc or desc.",
        "enum": [
          "desc",
          "asc",
        ],
        "in": "query",
        "name": "order",
        "title": "queryInput_search_users_order",
        "type": "string",
      },
      "queryInput_search_users_sort": {
        "description": "If not provided, results are sorted by best match.",
        "enum": [
          "followers",
          "repositories",
          "joined",
        ],
        "in": "query",
        "name": "sort",
        "title": "queryInput_search_users_sort",
        "type": "string",
      },
      "queryInput_teams_by_teamId": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "teamId": {
            "description": "Id of team.",
            "in": "path",
            "name": "teamId",
            "nullable": false,
            "type": "integer",
          },
        },
        "title": "queryInput_teams_by_teamId",
        "type": "object",
      },
      "queryInput_teams_by_teamId_members": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "teamId": {
            "description": "Id of team.",
            "in": "path",
            "name": "teamId",
            "nullable": false,
            "type": "integer",
          },
        },
        "title": "queryInput_teams_by_teamId_members",
        "type": "object",
      },
      "queryInput_teams_by_teamId_members_by_username": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "teamId": {
            "description": "Id of team.",
            "in": "path",
            "name": "teamId",
            "nullable": false,
            "type": "integer",
          },
          "username": {
            "description": "Name of a member.",
            "in": "path",
            "name": "username",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_teams_by_teamId_members_by_username",
        "type": "object",
      },
      "queryInput_teams_by_teamId_memberships_by_username": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "teamId": {
            "description": "Id of team.",
            "in": "path",
            "name": "teamId",
            "nullable": false,
            "type": "integer",
          },
          "username": {
            "description": "Name of a member.",
            "in": "path",
            "name": "username",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_teams_by_teamId_memberships_by_username",
        "type": "object",
      },
      "queryInput_teams_by_teamId_repos": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "teamId": {
            "description": "Id of team.",
            "in": "path",
            "name": "teamId",
            "nullable": false,
            "type": "integer",
          },
        },
        "title": "queryInput_teams_by_teamId_repos",
        "type": "object",
      },
      "queryInput_teams_by_teamId_repos_by_owner_by_repo": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "owner": {
            "description": "Name of a repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of a repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
          "teamId": {
            "description": "Id of team.",
            "in": "path",
            "name": "teamId",
            "nullable": false,
            "type": "integer",
          },
        },
        "title": "queryInput_teams_by_teamId_repos_by_owner_by_repo",
        "type": "object",
      },
      "queryInput_user": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
        },
        "title": "queryInput_user",
        "type": "object",
      },
      "queryInput_user_emails": {
        "properties": {
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
        },
        "title": "queryInput_user_emails",
        "type": "object",
      },
      "queryInput_user_followers": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
        },
        "title": "queryInput_user_followers",
        "type": "object",
      },
      "queryInput_user_following": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
        },
        "title": "queryInput_user_following",
        "type": "object",
      },
      "queryInput_user_following_by_username": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "username": {
            "description": "Name of user.",
            "in": "path",
            "name": "username",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_user_following_by_username",
        "type": "object",
      },
      "queryInput_user_issues": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "direction": {
            "$ref": "#/definitions/queryInput_user_issues_direction",
          },
          "filter": {
            "$ref": "#/definitions/queryInput_user_issues_filter",
          },
          "labels": {
            "description": "String list of comma separated Label names. Example - bug,ui,@high.",
            "in": "query",
            "name": "labels",
            "nullable": false,
            "type": "string",
          },
          "since": {
            "description": "Optional string of a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.
Only issues updated at or after this time are returned.",
            "in": "query",
            "name": "since",
            "type": "string",
          },
          "sort": {
            "$ref": "#/definitions/queryInput_user_issues_sort",
          },
          "state": {
            "$ref": "#/definitions/queryInput_user_issues_state",
          },
        },
        "title": "queryInput_user_issues",
        "type": "object",
      },
      "queryInput_user_issues_direction": {
        "default": "desc",
        "description": undefined,
        "enum": [
          "asc",
          "desc",
        ],
        "in": "query",
        "name": "direction",
        "nullable": false,
        "title": "queryInput_user_issues_direction",
        "type": "string",
      },
      "queryInput_user_issues_filter": {
        "default": "all",
        "description": "Issues assigned to you / created by you / mentioning you / you're
subscribed to updates for / All issues the authenticated user can see",
        "enum": [
          "assigned",
          "created",
          "mentioned",
          "subscribed",
          "all",
        ],
        "in": "query",
        "name": "filter",
        "nullable": false,
        "title": "queryInput_user_issues_filter",
        "type": "string",
      },
      "queryInput_user_issues_sort": {
        "default": "created",
        "description": undefined,
        "enum": [
          "created",
          "updated",
          "comments",
        ],
        "in": "query",
        "name": "sort",
        "nullable": false,
        "title": "queryInput_user_issues_sort",
        "type": "string",
      },
      "queryInput_user_issues_state": {
        "default": "open",
        "description": undefined,
        "enum": [
          "open",
          "closed",
        ],
        "in": "query",
        "name": "state",
        "nullable": false,
        "title": "queryInput_user_issues_state",
        "type": "string",
      },
      "queryInput_user_keys": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
        },
        "title": "queryInput_user_keys",
        "type": "object",
      },
      "queryInput_user_keys_by_keyId": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "keyId": {
            "description": "ID of key.",
            "in": "path",
            "name": "keyId",
            "nullable": false,
            "type": "integer",
          },
        },
        "title": "queryInput_user_keys_by_keyId",
        "type": "object",
      },
      "queryInput_user_orgs": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
        },
        "title": "queryInput_user_orgs",
        "type": "object",
      },
      "queryInput_user_repos": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "type": {
            "$ref": "#/definitions/queryInput_user_repos_type",
          },
        },
        "title": "queryInput_user_repos",
        "type": "object",
      },
      "queryInput_user_repos_type": {
        "default": "all",
        "description": undefined,
        "enum": [
          "all",
          "public",
          "private",
          "forks",
          "sources",
          "member",
        ],
        "in": "query",
        "name": "type",
        "title": "queryInput_user_repos_type",
        "type": "string",
      },
      "queryInput_user_starred": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "direction": {
            "description": "Ignored without 'sort' parameter.",
            "in": "query",
            "name": "direction",
            "type": "string",
          },
          "sort": {
            "$ref": "#/definitions/queryInput_user_starred_sort",
          },
        },
        "title": "queryInput_user_starred",
        "type": "object",
      },
      "queryInput_user_starred_by_owner_by_repo": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "owner": {
            "description": "Name of a repository owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of a repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_user_starred_by_owner_by_repo",
        "type": "object",
      },
      "queryInput_user_starred_sort": {
        "default": "created",
        "description": "",
        "enum": [
          "created",
          "updated",
        ],
        "in": "query",
        "name": "sort",
        "title": "queryInput_user_starred_sort",
        "type": "string",
      },
      "queryInput_user_subscriptions": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
        },
        "title": "queryInput_user_subscriptions",
        "type": "object",
      },
      "queryInput_user_subscriptions_by_owner_by_repo": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "owner": {
            "description": "Name of the owner.",
            "in": "path",
            "name": "owner",
            "nullable": false,
            "type": "string",
          },
          "repo": {
            "description": "Name of repository.",
            "in": "path",
            "name": "repo",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_user_subscriptions_by_owner_by_repo",
        "type": "object",
      },
      "queryInput_user_teams": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
        },
        "title": "queryInput_user_teams",
        "type": "object",
      },
      "queryInput_users": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "since": {
            "description": "The integer ID of the last User that you've seen.",
            "in": "query",
            "name": "since",
            "type": "integer",
          },
        },
        "title": "queryInput_users",
        "type": "object",
      },
      "queryInput_users_by_username": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "username": {
            "description": "Name of user.",
            "in": "path",
            "name": "username",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_users_by_username",
        "type": "object",
      },
      "queryInput_users_by_username_events": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "username": {
            "description": "Name of user.",
            "in": "path",
            "name": "username",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_users_by_username_events",
        "type": "object",
      },
      "queryInput_users_by_username_events_orgs_by_org": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "org": {
            "description": undefined,
            "in": "path",
            "name": "org",
            "nullable": false,
            "type": "string",
          },
          "username": {
            "description": "Name of user.",
            "in": "path",
            "name": "username",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_users_by_username_events_orgs_by_org",
        "type": "object",
      },
      "queryInput_users_by_username_followers": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "username": {
            "description": "Name of user.",
            "in": "path",
            "name": "username",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_users_by_username_followers",
        "type": "object",
      },
      "queryInput_users_by_username_following_by_targetUser": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "targetUser": {
            "description": "Name of user.",
            "in": "path",
            "name": "targetUser",
            "nullable": false,
            "type": "string",
          },
          "username": {
            "description": "Name of user.",
            "in": "path",
            "name": "username",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_users_by_username_following_by_targetUser",
        "type": "object",
      },
      "queryInput_users_by_username_gists": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "since": {
            "description": "The time should be passed in as UTC in the ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.
Example: "2012-10-09T23:39:01Z".",
            "in": "query",
            "name": "since",
            "type": "string",
          },
          "username": {
            "description": "Name of user.",
            "in": "path",
            "name": "username",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_users_by_username_gists",
        "type": "object",
      },
      "queryInput_users_by_username_keys": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "username": {
            "description": "Name of user.",
            "in": "path",
            "name": "username",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_users_by_username_keys",
        "type": "object",
      },
      "queryInput_users_by_username_orgs": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "username": {
            "description": "Name of user.",
            "in": "path",
            "name": "username",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_users_by_username_orgs",
        "type": "object",
      },
      "queryInput_users_by_username_received_events": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "username": {
            "description": "Name of user.",
            "in": "path",
            "name": "username",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_users_by_username_received_events",
        "type": "object",
      },
      "queryInput_users_by_username_received_events_public": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "username": {
            "description": "Name of user.",
            "in": "path",
            "name": "username",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_users_by_username_received_events_public",
        "type": "object",
      },
      "queryInput_users_by_username_repos": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "type": {
            "$ref": "#/definitions/queryInput_users_by_username_repos_type",
          },
          "username": {
            "description": "Name of user.",
            "in": "path",
            "name": "username",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_users_by_username_repos",
        "type": "object",
      },
      "queryInput_users_by_username_repos_type": {
        "default": "all",
        "description": undefined,
        "enum": [
          "all",
          "public",
          "private",
          "forks",
          "sources",
          "member",
        ],
        "in": "query",
        "name": "type",
        "title": "queryInput_users_by_username_repos_type",
        "type": "string",
      },
      "queryInput_users_by_username_starred": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "username": {
            "description": "Name of user.",
            "in": "path",
            "name": "username",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_users_by_username_starred",
        "type": "object",
      },
      "queryInput_users_by_username_subscriptions": {
        "properties": {
          "Accept": {
            "description": "Is used to set specified media type.",
            "in": "header",
            "name": "Accept",
            "type": "string",
          },
          "X_GitHub_Media_Type": {
            "description": "You can check the current version of media type in responses.",
            "in": "header",
            "name": "X-GitHub-Media-Type",
            "type": "string",
          },
          "X_GitHub_Request_Id": {
            "description": undefined,
            "in": "header",
            "name": "X-GitHub-Request-Id",
            "type": "integer",
          },
          "X_RateLimit_Limit": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Limit",
            "type": "integer",
          },
          "X_RateLimit_Remaining": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Remaining",
            "type": "integer",
          },
          "X_RateLimit_Reset": {
            "description": undefined,
            "in": "header",
            "name": "X-RateLimit-Reset",
            "type": "integer",
          },
          "username": {
            "description": "Name of user.",
            "in": "path",
            "name": "username",
            "nullable": false,
            "type": "string",
          },
        },
        "title": "queryInput_users_by_username_subscriptions",
        "type": "object",
      },
      "query_events_actor": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_events_actor",
        "type": "object",
      },
      "query_events_org": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_events_org",
        "type": "object",
      },
      "query_events_payload": {
        "additionalProperties": true,
        "title": "query_events_payload",
        "type": "object",
      },
      "query_events_repo": {
        "properties": {
          "id": {
            "type": "integer",
          },
          "name": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_events_repo",
        "type": "object",
      },
      "query_feeds_links": {
        "properties": {
          "current_user": {
            "$ref": "#/definitions/query_feeds_links_current_user",
          },
          "current_user_actor": {
            "$ref": "#/definitions/query_feeds_links_current_user_actor",
          },
          "current_user_organization": {
            "$ref": "#/definitions/query_feeds_links_current_user_organization",
          },
          "current_user_public": {
            "$ref": "#/definitions/query_feeds_links_current_user_public",
          },
          "timeline": {
            "$ref": "#/definitions/query_feeds_links_timeline",
          },
          "user": {
            "$ref": "#/definitions/query_feeds_links_user",
          },
        },
        "title": "query_feeds_links",
        "type": "object",
      },
      "query_feeds_links_current_user": {
        "properties": {
          "href": {
            "type": "string",
          },
          "type": {
            "type": "string",
          },
        },
        "title": "query_feeds_links_current_user",
        "type": "object",
      },
      "query_feeds_links_current_user_actor": {
        "properties": {
          "href": {
            "type": "string",
          },
          "type": {
            "type": "string",
          },
        },
        "title": "query_feeds_links_current_user_actor",
        "type": "object",
      },
      "query_feeds_links_current_user_organization": {
        "properties": {
          "href": {
            "type": "string",
          },
          "type": {
            "type": "string",
          },
        },
        "title": "query_feeds_links_current_user_organization",
        "type": "object",
      },
      "query_feeds_links_current_user_public": {
        "properties": {
          "href": {
            "type": "string",
          },
          "type": {
            "type": "string",
          },
        },
        "title": "query_feeds_links_current_user_public",
        "type": "object",
      },
      "query_feeds_links_timeline": {
        "properties": {
          "href": {
            "type": "string",
          },
          "type": {
            "type": "string",
          },
        },
        "title": "query_feeds_links_timeline",
        "type": "object",
      },
      "query_feeds_links_user": {
        "properties": {
          "href": {
            "type": "string",
          },
          "type": {
            "type": "string",
          },
        },
        "title": "query_feeds_links_user",
        "type": "object",
      },
      "query_gists_by_id_comments_items": {
        "properties": {
          "body": {
            "type": "string",
          },
          "created_at": {
            "description": "ISO 8601.",
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "url": {
            "type": "string",
          },
          "user": {
            "$ref": "#/definitions/query_gists_by_id_comments_items_user",
          },
        },
        "title": "query_gists_by_id_comments_items",
        "type": "object",
      },
      "query_gists_by_id_comments_items_user": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_gists_by_id_comments_items_user",
        "type": "object",
      },
      "query_gists_by_id_files": {
        "properties": {
          "ring.erl": {
            "$ref": "#/definitions/query_gists_by_id_files_ring.erl",
          },
        },
        "title": "query_gists_by_id_files",
        "type": "object",
      },
      "query_gists_by_id_files_ring.erl": {
        "properties": {
          "filename": {
            "type": "string",
          },
          "raw_url": {
            "type": "string",
          },
          "size": {
            "type": "integer",
          },
        },
        "title": "query_gists_by_id_files_ring.erl",
        "type": "object",
      },
      "query_gists_by_id_forks_items": {
        "properties": {
          "created_at": {
            "description": "Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.",
            "type": "string",
          },
          "url": {
            "type": "string",
          },
          "user": {
            "$ref": "#/definitions/query_gists_by_id_forks_items_user",
          },
        },
        "title": "query_gists_by_id_forks_items",
        "type": "object",
      },
      "query_gists_by_id_forks_items_user": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_gists_by_id_forks_items_user",
        "type": "object",
      },
      "query_gists_by_id_history_items": {
        "properties": {
          "change_status": {
            "$ref": "#/definitions/query_gists_by_id_history_items_change_status",
          },
          "committed_at": {
            "description": "Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.",
            "type": "string",
          },
          "url": {
            "type": "string",
          },
          "user": {
            "$ref": "#/definitions/query_gists_by_id_history_items_user",
          },
          "version": {
            "type": "string",
          },
        },
        "title": "query_gists_by_id_history_items",
        "type": "object",
      },
      "query_gists_by_id_history_items_change_status": {
        "properties": {
          "additions": {
            "type": "integer",
          },
          "deletions": {
            "type": "integer",
          },
          "total": {
            "type": "integer",
          },
        },
        "title": "query_gists_by_id_history_items_change_status",
        "type": "object",
      },
      "query_gists_by_id_history_items_user": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_gists_by_id_history_items_user",
        "type": "object",
      },
      "query_gists_by_id_user": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_gists_by_id_user",
        "type": "object",
      },
      "query_gists_items": {
        "properties": {
          "comments": {
            "type": "integer",
          },
          "comments_url": {
            "type": "string",
          },
          "created_at": {
            "type": "string",
          },
          "description": {
            "type": "string",
          },
          "files": {
            "$ref": "#/definitions/query_gists_items_files",
          },
          "git_pull_url": {
            "type": "string",
          },
          "git_push_url": {
            "type": "string",
          },
          "html_url": {
            "type": "string",
          },
          "id": {
            "type": "string",
          },
          "public": {
            "type": "boolean",
          },
          "url": {
            "type": "string",
          },
          "user": {
            "$ref": "#/definitions/query_gists_items_user",
          },
        },
        "title": "query_gists_items",
        "type": "object",
      },
      "query_gists_items_files": {
        "properties": {
          "ring.erl": {
            "$ref": "#/definitions/query_gists_items_files_ring.erl",
          },
        },
        "title": "query_gists_items_files",
        "type": "object",
      },
      "query_gists_items_files_ring.erl": {
        "properties": {
          "filename": {
            "type": "string",
          },
          "raw_url": {
            "type": "string",
          },
          "size": {
            "type": "integer",
          },
        },
        "title": "query_gists_items_files_ring.erl",
        "type": "object",
      },
      "query_gists_items_user": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_gists_items_user",
        "type": "object",
      },
      "query_issues_items": {
        "properties": {
          "assignee": {
            "$ref": "#/definitions/query_issues_items_assignee",
          },
          "body": {
            "type": "string",
          },
          "closed_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "comments": {
            "type": "integer",
          },
          "created_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "html_url": {
            "type": "string",
          },
          "labels": {
            "items": {
              "$ref": "#/definitions/query_issues_items_labels_items",
            },
            "type": "array",
          },
          "milestone": {
            "$ref": "#/definitions/query_issues_items_milestone",
          },
          "number": {
            "type": "integer",
          },
          "pull_request": {
            "$ref": "#/definitions/query_issues_items_pull_request",
          },
          "state": {
            "$ref": "#/definitions/query_issues_items_state",
          },
          "title": {
            "type": "string",
          },
          "updated_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "url": {
            "type": "string",
          },
          "user": {
            "$ref": "#/definitions/query_issues_items_user",
          },
        },
        "title": "query_issues_items",
        "type": "object",
      },
      "query_issues_items_assignee": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_issues_items_assignee",
        "type": "object",
      },
      "query_issues_items_labels_items": {
        "properties": {
          "color": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_issues_items_labels_items",
        "type": "object",
      },
      "query_issues_items_milestone": {
        "properties": {
          "closed_issues": {
            "type": "integer",
          },
          "created_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "creator": {
            "$ref": "#/definitions/query_issues_items_milestone_creator",
          },
          "description": {
            "type": "string",
          },
          "due_on": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "number": {
            "type": "integer",
          },
          "open_issues": {
            "type": "integer",
          },
          "state": {
            "$ref": "#/definitions/query_issues_items_milestone_state",
          },
          "title": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_issues_items_milestone",
        "type": "object",
      },
      "query_issues_items_milestone_creator": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_issues_items_milestone_creator",
        "type": "object",
      },
      "query_issues_items_milestone_state": {
        "enum": [
          "open",
          "closed",
        ],
        "title": "query_issues_items_milestone_state",
      },
      "query_issues_items_pull_request": {
        "properties": {
          "diff_url": {
            "type": "string",
          },
          "html_url": {
            "type": "string",
          },
          "patch_url": {
            "type": "string",
          },
        },
        "title": "query_issues_items_pull_request",
        "type": "object",
      },
      "query_issues_items_state": {
        "enum": [
          "open",
          "closed",
        ],
        "title": "query_issues_items_state",
      },
      "query_issues_items_user": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_issues_items_user",
        "type": "object",
      },
      "query_legacy_issues_search_by_owner_by_repository_by_state_by_keyword_issues_items": {
        "properties": {
          "body": {
            "type": "string",
          },
          "comments": {
            "type": "integer",
          },
          "created_at": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "html_url": {
            "type": "string",
          },
          "labels": {
            "items": {
              "type": "string",
            },
            "type": "array",
          },
          "number": {
            "type": "integer",
          },
          "position": {
            "type": "integer",
          },
          "state": {
            "type": "string",
          },
          "title": {
            "type": "string",
          },
          "updated_at": {
            "type": "string",
          },
          "user": {
            "type": "string",
          },
          "votes": {
            "type": "integer",
          },
        },
        "title": "query_legacy_issues_search_by_owner_by_repository_by_state_by_keyword_issues_items",
        "type": "object",
      },
      "query_legacy_repos_search_by_keyword_repositories_items": {
        "properties": {
          "created": {
            "type": "string",
          },
          "created_at": {
            "type": "string",
          },
          "description": {
            "type": "string",
          },
          "followers": {
            "type": "integer",
          },
          "fork": {
            "type": "boolean",
          },
          "forks": {
            "type": "integer",
          },
          "has_downloads": {
            "type": "boolean",
          },
          "has_issues": {
            "type": "boolean",
          },
          "has_wiki": {
            "type": "boolean",
          },
          "homepage": {
            "type": "string",
          },
          "language": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
          "open_issues": {
            "type": "integer",
          },
          "owner": {
            "type": "string",
          },
          "private": {
            "type": "boolean",
          },
          "pushed": {
            "type": "string",
          },
          "pushed_at": {
            "type": "string",
          },
          "score": {
            "type": "number",
          },
          "size": {
            "type": "integer",
          },
          "type": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
          "username": {
            "type": "string",
          },
          "watchers": {
            "type": "integer",
          },
        },
        "title": "query_legacy_repos_search_by_keyword_repositories_items",
        "type": "object",
      },
      "query_legacy_user_email_by_email_user": {
        "properties": {
          "blog": {
            "type": "string",
          },
          "company": {
            "type": "string",
          },
          "created": {
            "type": "string",
          },
          "created_at": {
            "type": "string",
          },
          "email": {
            "type": "string",
          },
          "followers_count": {
            "type": "integer",
          },
          "following_count": {
            "type": "integer",
          },
          "gravatar_id": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "location": {
            "type": "string",
          },
          "login": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
          "public_gist_count": {
            "type": "integer",
          },
          "public_repo_count": {
            "type": "integer",
          },
          "type": {
            "type": "string",
          },
        },
        "title": "query_legacy_user_email_by_email_user",
        "type": "object",
      },
      "query_legacy_user_search_by_keyword_users_items": {
        "properties": {
          "created": {
            "type": "string",
          },
          "created_at": {
            "type": "string",
          },
          "followers": {
            "type": "integer",
          },
          "followers_count": {
            "type": "integer",
          },
          "fullname": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "id": {
            "type": "string",
          },
          "language": {
            "type": "string",
          },
          "location": {
            "type": "string",
          },
          "login": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
          "public_repo_count": {
            "type": "integer",
          },
          "repos": {
            "type": "integer",
          },
          "score": {
            "type": "number",
          },
          "type": {
            "type": "string",
          },
          "username": {
            "type": "string",
          },
        },
        "title": "query_legacy_user_search_by_keyword_users_items",
        "type": "object",
      },
      "query_notifications_repository": {
        "properties": {
          "description": {
            "type": "string",
          },
          "fork": {
            "type": "boolean",
          },
          "full_name": {
            "type": "string",
          },
          "html_url": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "name": {
            "type": "string",
          },
          "owner": {
            "$ref": "#/definitions/query_notifications_repository_owner",
          },
          "private": {
            "type": "boolean",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_notifications_repository",
        "type": "object",
      },
      "query_notifications_repository_owner": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_notifications_repository_owner",
        "type": "object",
      },
      "query_notifications_subject": {
        "properties": {
          "latest_comment_url": {
            "type": "string",
          },
          "title": {
            "type": "string",
          },
          "type": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_notifications_subject",
        "type": "object",
      },
      "query_orgs_by_org_members_items": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_orgs_by_org_members_items",
        "type": "object",
      },
      "query_orgs_by_org_repos_items": {
        "properties": {
          "clone_url": {
            "type": "string",
          },
          "created_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "description": {
            "type": "string",
          },
          "fork": {
            "type": "boolean",
          },
          "forks": {
            "type": "integer",
          },
          "forks_count": {
            "type": "integer",
          },
          "full_name": {
            "type": "string",
          },
          "git_url": {
            "type": "string",
          },
          "homepage": {
            "type": "string",
          },
          "html_url": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "language": {
            "type": "string",
          },
          "master_branch": {
            "type": "string",
          },
          "mirror_url": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
          "open_issues": {
            "type": "integer",
          },
          "open_issues_count": {
            "type": "integer",
          },
          "owner": {
            "$ref": "#/definitions/query_orgs_by_org_repos_items_owner",
          },
          "private": {
            "type": "boolean",
          },
          "pushed_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "size": {
            "type": "integer",
          },
          "ssh_url": {
            "type": "string",
          },
          "svn_url": {
            "type": "string",
          },
          "updated_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "url": {
            "type": "string",
          },
          "watchers": {
            "type": "integer",
          },
          "watchers_count": {
            "type": "integer",
          },
        },
        "title": "query_orgs_by_org_repos_items",
        "type": "object",
      },
      "query_orgs_by_org_repos_items_owner": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_orgs_by_org_repos_items_owner",
        "type": "object",
      },
      "query_orgs_by_org_teams_items": {
        "properties": {
          "id": {
            "type": "integer",
          },
          "name": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_orgs_by_org_teams_items",
        "type": "object",
      },
      "query_rate_limit_rate": {
        "properties": {
          "limit": {
            "type": "integer",
          },
          "remaining": {
            "type": "integer",
          },
          "reset": {
            "type": "integer",
          },
        },
        "title": "query_rate_limit_rate",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_assignees_items": {
        "properties": {
          "avatar_url": {
            "type": "integer",
          },
          "gravatar_id": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_assignees_items",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_branches_by_branch_commit": {
        "properties": {
          "author": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_branches_by_branch_commit_author",
          },
          "commit": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_branches_by_branch_commit_commit",
          },
          "committer": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_branches_by_branch_commit_committer",
          },
          "parents": {
            "items": {
              "$ref": "#/definitions/query_repos_by_owner_by_repo_branches_by_branch_commit_parents_items",
            },
            "type": "array",
          },
          "sha": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_branches_by_branch_commit",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_branches_by_branch_commit_author": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_branches_by_branch_commit_author",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_branches_by_branch_commit_commit": {
        "properties": {
          "author": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_branches_by_branch_commit_commit_author",
          },
          "committer": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_branches_by_branch_commit_commit_committer",
          },
          "message": {
            "type": "string",
          },
          "tree": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_branches_by_branch_commit_commit_tree",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_branches_by_branch_commit_commit",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_branches_by_branch_commit_commit_author": {
        "properties": {
          "date": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "email": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_branches_by_branch_commit_commit_author",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_branches_by_branch_commit_commit_committer": {
        "properties": {
          "date": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "email": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_branches_by_branch_commit_commit_committer",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_branches_by_branch_commit_commit_tree": {
        "properties": {
          "sha": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_branches_by_branch_commit_commit_tree",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_branches_by_branch_commit_committer": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_branches_by_branch_commit_committer",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_branches_by_branch_commit_parents_items": {
        "properties": {
          "sha": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_branches_by_branch_commit_parents_items",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_branches_by_branch_links": {
        "properties": {
          "html": {
            "type": "string",
          },
          "self": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_branches_by_branch_links",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_branches_items": {
        "properties": {
          "commit": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_branches_items_commit",
          },
          "name": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_branches_items",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_branches_items_commit": {
        "properties": {
          "sha": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_branches_items_commit",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_by_archive_format_by_path_oneOf_4": {
        "additionalProperties": true,
        "title": "query_repos_by_owner_by_repo_by_archive_format_by_path_oneOf_4",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_comments_by_commentId_user": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_comments_by_commentId_user",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_comments_items": {
        "properties": {
          "body": {
            "type": "string",
          },
          "commit_id": {
            "type": "string",
          },
          "created_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "html_url": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "line": {
            "type": "integer",
          },
          "path": {
            "type": "string",
          },
          "position": {
            "type": "integer",
          },
          "updated_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "url": {
            "type": "string",
          },
          "user": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_comments_items_user",
          },
        },
        "title": "query_repos_by_owner_by_repo_comments_items",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_comments_items_user": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_comments_items_user",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_commits_by_ref_status_items": {
        "properties": {
          "commit_url": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
          "repository_url": {
            "type": "string",
          },
          "sha": {
            "type": "string",
          },
          "state": {
            "type": "string",
          },
          "statuses": {
            "items": {
              "$ref": "#/definitions/query_repos_by_owner_by_repo_commits_by_ref_status_items_statuses_items",
            },
            "type": "array",
          },
        },
        "title": "query_repos_by_owner_by_repo_commits_by_ref_status_items",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_commits_by_ref_status_items_statuses_items": {
        "properties": {
          "context": {
            "type": "string",
          },
          "created_at": {
            "type": "string",
          },
          "description": {
            "type": "string",
          },
          "id": {
            "type": "number",
          },
          "state": {
            "type": "string",
          },
          "target_url": {
            "type": "string",
          },
          "updated_at": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_commits_by_ref_status_items_statuses_items",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_commits_by_shaCode_author": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_commits_by_shaCode_author",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_commits_by_shaCode_commit": {
        "properties": {
          "author": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_commits_by_shaCode_commit_author",
          },
          "committer": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_commits_by_shaCode_commit_committer",
          },
          "message": {
            "type": "string",
          },
          "tree": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_commits_by_shaCode_commit_tree",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_commits_by_shaCode_commit",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_commits_by_shaCode_commit_author": {
        "properties": {
          "date": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "email": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_commits_by_shaCode_commit_author",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_commits_by_shaCode_commit_committer": {
        "properties": {
          "date": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "email": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_commits_by_shaCode_commit_committer",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_commits_by_shaCode_commit_tree": {
        "properties": {
          "sha": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_commits_by_shaCode_commit_tree",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_commits_by_shaCode_committer": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_commits_by_shaCode_committer",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_commits_by_shaCode_files_items": {
        "properties": {
          "additions": {
            "type": "integer",
          },
          "blob_url": {
            "type": "string",
          },
          "changes": {
            "type": "integer",
          },
          "deletions": {
            "type": "integer",
          },
          "filename": {
            "type": "string",
          },
          "patch": {
            "type": "string",
          },
          "raw_url": {
            "type": "string",
          },
          "status": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_commits_by_shaCode_files_items",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_commits_by_shaCode_parents_items": {
        "properties": {
          "sha": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_commits_by_shaCode_parents_items",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_commits_by_shaCode_stats": {
        "properties": {
          "additions": {
            "type": "integer",
          },
          "deletions": {
            "type": "integer",
          },
          "total": {
            "type": "integer",
          },
        },
        "title": "query_repos_by_owner_by_repo_commits_by_shaCode_stats",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_commits_items": {
        "properties": {
          "author": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_commits_items_author",
          },
          "commit": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_commits_items_commit",
          },
          "committer": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_commits_items_committer",
          },
          "parents": {
            "items": {
              "$ref": "#/definitions/query_repos_by_owner_by_repo_commits_items_parents_items",
            },
            "type": "array",
          },
          "sha": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_commits_items",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_commits_items_author": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_commits_items_author",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_commits_items_commit": {
        "properties": {
          "author": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_commits_items_commit_author",
          },
          "committer": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_commits_items_commit_committer",
          },
          "message": {
            "type": "string",
          },
          "tree": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_commits_items_commit_tree",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_commits_items_commit",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_commits_items_commit_author": {
        "properties": {
          "date": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "email": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_commits_items_commit_author",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_commits_items_commit_committer": {
        "properties": {
          "date": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "email": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_commits_items_commit_committer",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_commits_items_commit_tree": {
        "properties": {
          "sha": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_commits_items_commit_tree",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_commits_items_committer": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_commits_items_committer",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_commits_items_parents_items": {
        "properties": {
          "sha": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_commits_items_parents_items",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_compare_by_baseId___by_headId_base_commit": {
        "properties": {
          "author": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_compare_by_baseId___by_headId_base_commit_author",
          },
          "commit": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_compare_by_baseId___by_headId_base_commit_commit",
          },
          "committer": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_compare_by_baseId___by_headId_base_commit_committer",
          },
          "parents": {
            "items": {
              "$ref": "#/definitions/query_repos_by_owner_by_repo_compare_by_baseId___by_headId_base_commit_parents_items",
            },
            "type": "array",
          },
          "sha": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_compare_by_baseId___by_headId_base_commit",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_compare_by_baseId___by_headId_base_commit_author": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "events_url": {
            "type": "string",
          },
          "followers_url": {
            "type": "string",
          },
          "following_url": {
            "type": "string",
          },
          "gists_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "html_url": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "organizations_url": {
            "type": "string",
          },
          "received_events_url": {
            "type": "string",
          },
          "repos_url": {
            "type": "string",
          },
          "site_admin": {
            "type": "boolean",
          },
          "starred_url": {
            "type": "string",
          },
          "subscriptions_url": {
            "type": "string",
          },
          "type": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_compare_by_baseId___by_headId_base_commit_author",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_compare_by_baseId___by_headId_base_commit_commit": {
        "properties": {
          "author": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_compare_by_baseId___by_headId_base_commit_commit_author",
          },
          "committer": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_compare_by_baseId___by_headId_base_commit_commit_committer",
          },
          "message": {
            "type": "string",
          },
          "tree": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_compare_by_baseId___by_headId_base_commit_commit_tree",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_compare_by_baseId___by_headId_base_commit_commit",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_compare_by_baseId___by_headId_base_commit_commit_author": {
        "properties": {
          "date": {
            "type": "string",
          },
          "email": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_compare_by_baseId___by_headId_base_commit_commit_author",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_compare_by_baseId___by_headId_base_commit_commit_committer": {
        "properties": {
          "date": {
            "type": "string",
          },
          "email": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_compare_by_baseId___by_headId_base_commit_commit_committer",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_compare_by_baseId___by_headId_base_commit_commit_tree": {
        "properties": {
          "sha": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_compare_by_baseId___by_headId_base_commit_commit_tree",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_compare_by_baseId___by_headId_base_commit_committer": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "events_url": {
            "type": "string",
          },
          "followers_url": {
            "type": "string",
          },
          "following_url": {
            "type": "string",
          },
          "gists_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "html_url": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "organizations_url": {
            "type": "string",
          },
          "received_events_url": {
            "type": "string",
          },
          "repos_url": {
            "type": "string",
          },
          "site_admin": {
            "type": "boolean",
          },
          "starred_url": {
            "type": "string",
          },
          "subscriptions_url": {
            "type": "string",
          },
          "type": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_compare_by_baseId___by_headId_base_commit_committer",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_compare_by_baseId___by_headId_base_commit_parents_items": {
        "properties": {
          "sha": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_compare_by_baseId___by_headId_base_commit_parents_items",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_compare_by_baseId___by_headId_commits_items": {
        "properties": {
          "author": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_compare_by_baseId___by_headId_commits_items_author",
          },
          "commit": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_compare_by_baseId___by_headId_commits_items_commit",
          },
          "committer": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_compare_by_baseId___by_headId_commits_items_committer",
          },
          "parents": {
            "items": {
              "$ref": "#/definitions/query_repos_by_owner_by_repo_compare_by_baseId___by_headId_commits_items_parents_items",
            },
            "type": "array",
          },
          "sha": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_compare_by_baseId___by_headId_commits_items",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_compare_by_baseId___by_headId_commits_items_author": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "events_url": {
            "type": "string",
          },
          "followers_url": {
            "type": "string",
          },
          "following_url": {
            "type": "string",
          },
          "gists_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "html_url": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "organizations_url": {
            "type": "string",
          },
          "received_events_url": {
            "type": "string",
          },
          "repos_url": {
            "type": "string",
          },
          "site_admin": {
            "type": "boolean",
          },
          "starred_url": {
            "type": "string",
          },
          "subscriptions_url": {
            "type": "string",
          },
          "type": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_compare_by_baseId___by_headId_commits_items_author",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_compare_by_baseId___by_headId_commits_items_commit": {
        "properties": {
          "author": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_compare_by_baseId___by_headId_commits_items_commit_author",
          },
          "committer": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_compare_by_baseId___by_headId_commits_items_commit_committer",
          },
          "message": {
            "type": "string",
          },
          "tree": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_compare_by_baseId___by_headId_commits_items_commit_tree",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_compare_by_baseId___by_headId_commits_items_commit",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_compare_by_baseId___by_headId_commits_items_commit_author": {
        "properties": {
          "date": {
            "type": "string",
          },
          "email": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_compare_by_baseId___by_headId_commits_items_commit_author",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_compare_by_baseId___by_headId_commits_items_commit_committer": {
        "properties": {
          "date": {
            "type": "string",
          },
          "email": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_compare_by_baseId___by_headId_commits_items_commit_committer",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_compare_by_baseId___by_headId_commits_items_commit_tree": {
        "properties": {
          "sha": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_compare_by_baseId___by_headId_commits_items_commit_tree",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_compare_by_baseId___by_headId_commits_items_committer": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "events_url": {
            "type": "string",
          },
          "followers_url": {
            "type": "string",
          },
          "following_url": {
            "type": "string",
          },
          "gists_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "html_url": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "organizations_url": {
            "type": "string",
          },
          "received_events_url": {
            "type": "string",
          },
          "repos_url": {
            "type": "string",
          },
          "site_admin": {
            "type": "boolean",
          },
          "starred_url": {
            "type": "string",
          },
          "subscriptions_url": {
            "type": "string",
          },
          "type": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_compare_by_baseId___by_headId_commits_items_committer",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_compare_by_baseId___by_headId_commits_items_parents_items": {
        "properties": {
          "sha": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_compare_by_baseId___by_headId_commits_items_parents_items",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_compare_by_baseId___by_headId_files_items": {
        "properties": {
          "additions": {
            "type": "integer",
          },
          "blob_url": {
            "type": "string",
          },
          "changes": {
            "type": "integer",
          },
          "contents_url": {
            "type": "string",
          },
          "deletions": {
            "type": "integer",
          },
          "filename": {
            "type": "string",
          },
          "patch": {
            "type": "string",
          },
          "raw_url": {
            "type": "string",
          },
          "sha": {
            "type": "string",
          },
          "status": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_compare_by_baseId___by_headId_files_items",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_contents_by_path_links": {
        "properties": {
          "git": {
            "type": "string",
          },
          "html": {
            "type": "string",
          },
          "self": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_contents_by_path_links",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_contributors_items": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "contributions": {
            "type": "integer",
          },
          "gravatar_id": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_contributors_items",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_deployments_by_id_statuses_items": {
        "properties": {
          "created_at": {
            "type": "string",
          },
          "creator": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_deployments_by_id_statuses_items_creator",
          },
          "description": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "payload": {
            "type": "string",
          },
          "state": {
            "type": "string",
          },
          "target_url": {
            "type": "string",
          },
          "updated_at": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_deployments_by_id_statuses_items",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_deployments_by_id_statuses_items_creator": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "events_url": {
            "type": "string",
          },
          "followers_url": {
            "type": "string",
          },
          "following_url": {
            "type": "string",
          },
          "gists_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "html_url": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "organizations_url": {
            "type": "string",
          },
          "received_events_url": {
            "type": "string",
          },
          "repos_url": {
            "type": "string",
          },
          "site_admin": {
            "type": "boolean",
          },
          "starred_url": {
            "type": "string",
          },
          "subscriptions_url": {
            "type": "string",
          },
          "type": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_deployments_by_id_statuses_items_creator",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_deployments_items": {
        "properties": {
          "created_at": {
            "type": "string",
          },
          "creator": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_deployments_items_creator",
          },
          "description": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "payload": {
            "type": "string",
          },
          "sha": {
            "type": "string",
          },
          "statuses_url": {
            "type": "string",
          },
          "updated_at": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_deployments_items",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_deployments_items_creator": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "events_url": {
            "type": "string",
          },
          "followers_url": {
            "type": "string",
          },
          "following_url": {
            "type": "string",
          },
          "gists_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "html_url": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "organizations_url": {
            "type": "string",
          },
          "received_events_url": {
            "type": "string",
          },
          "repos_url": {
            "type": "string",
          },
          "site_admin": {
            "type": "boolean",
          },
          "starred_url": {
            "type": "string",
          },
          "subscriptions_url": {
            "type": "string",
          },
          "type": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_deployments_items_creator",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_forks_items": {
        "properties": {
          "clone_url": {
            "type": "string",
          },
          "created_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "description": {
            "type": "string",
          },
          "fork": {
            "type": "boolean",
          },
          "forks": {
            "type": "integer",
          },
          "forks_count": {
            "type": "integer",
          },
          "full_name": {
            "type": "string",
          },
          "git_url": {
            "type": "string",
          },
          "homepage": {
            "type": "string",
          },
          "html_url": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "language": {
            "type": "string",
          },
          "master_branch": {
            "type": "string",
          },
          "mirror_url": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
          "open_issues": {
            "type": "integer",
          },
          "open_issues_count": {
            "type": "integer",
          },
          "owner": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_forks_items_owner",
          },
          "private": {
            "type": "boolean",
          },
          "pushed_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "size": {
            "type": "integer",
          },
          "ssh_url": {
            "type": "string",
          },
          "svn_url": {
            "type": "string",
          },
          "updated_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "url": {
            "type": "string",
          },
          "watchers": {
            "type": "integer",
          },
          "watchers_count": {
            "type": "integer",
          },
        },
        "title": "query_repos_by_owner_by_repo_forks_items",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_forks_items_owner": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_forks_items_owner",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_git_blobs_by_shaCode_encoding": {
        "enum": [
          "utf-8",
          "base64",
        ],
        "title": "query_repos_by_owner_by_repo_git_blobs_by_shaCode_encoding",
      },
      "query_repos_by_owner_by_repo_git_commits_by_shaCode_author": {
        "properties": {
          "date": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "email": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_git_commits_by_shaCode_author",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_git_commits_by_shaCode_committer": {
        "properties": {
          "date": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "email": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_git_commits_by_shaCode_committer",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_git_commits_by_shaCode_parents_items": {
        "properties": {
          "sha": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_git_commits_by_shaCode_parents_items",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_git_commits_by_shaCode_tree": {
        "properties": {
          "sha": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_git_commits_by_shaCode_tree",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_git_refs_by_ref_object": {
        "properties": {
          "sha": {
            "type": "string",
          },
          "type": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_git_refs_by_ref_object",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_git_refs_items": {
        "properties": {
          "object": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_git_refs_items_object",
          },
          "ref": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_git_refs_items",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_git_refs_items_object": {
        "properties": {
          "sha": {
            "type": "string",
          },
          "type": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_git_refs_items_object",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_git_tags_by_shaCode_object": {
        "properties": {
          "sha": {
            "type": "string",
          },
          "type": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_git_tags_by_shaCode_object",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_git_tags_by_shaCode_tagger": {
        "properties": {
          "date": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "email": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_git_tags_by_shaCode_tagger",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_git_trees_by_shaCode_tree_items": {
        "properties": {
          "mode": {
            "type": "string",
          },
          "path": {
            "type": "string",
          },
          "sha": {
            "type": "string",
          },
          "size": {
            "type": "integer",
          },
          "type": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_git_trees_by_shaCode_tree_items",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_hooks_items": {
        "properties": {
          "active": {
            "type": "boolean",
          },
          "config": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_hooks_items_config",
          },
          "created_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "events": {
            "items": {
              "$ref": "#/definitions/query_repos_by_owner_by_repo_hooks_items_events_items",
            },
            "type": "array",
          },
          "id": {
            "type": "integer",
          },
          "name": {
            "type": "string",
          },
          "updated_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_hooks_items",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_hooks_items_config": {
        "properties": {
          "content_type": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_hooks_items_config",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_hooks_items_events_items": {
        "enum": [
          "push",
          "issues",
          "issue_comment",
          "commit_comment",
          "pull_request",
          "pull_request_review_comment",
          "gollum",
          "watch",
          "download",
          "fork",
          "fork_apply",
          "member",
          "public",
          "team_add",
          "status",
        ],
        "title": "query_repos_by_owner_by_repo_hooks_items_events_items",
      },
      "query_repos_by_owner_by_repo_issues_by_number_labels_items": {
        "properties": {
          "color": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_issues_by_number_labels_items_color",
          },
          "name": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_issues_by_number_labels_items",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_issues_by_number_labels_items_color": {
        "maxLength": 6,
        "minLength": 6,
        "title": "query_repos_by_owner_by_repo_issues_by_number_labels_items_color",
        "type": "string",
      },
      "query_repos_by_owner_by_repo_issues_comments_by_commentId_user": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_issues_comments_by_commentId_user",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_issues_comments_items": {
        "properties": {
          "body": {
            "type": "string",
          },
          "commit_id": {
            "type": "string",
          },
          "created_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "links": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_issues_comments_items_links",
          },
          "path": {
            "type": "string",
          },
          "position": {
            "type": "integer",
          },
          "updated_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "url": {
            "type": "string",
          },
          "user": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_issues_comments_items_user",
          },
        },
        "title": "query_repos_by_owner_by_repo_issues_comments_items",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_issues_comments_items_links": {
        "properties": {
          "html": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_issues_comments_items_links_html",
          },
          "pull_request": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_issues_comments_items_links_pull_request",
          },
          "self": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_issues_comments_items_links_self",
          },
        },
        "title": "query_repos_by_owner_by_repo_issues_comments_items_links",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_issues_comments_items_links_html": {
        "properties": {
          "href": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_issues_comments_items_links_html",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_issues_comments_items_links_pull_request": {
        "properties": {
          "href": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_issues_comments_items_links_pull_request",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_issues_comments_items_links_self": {
        "properties": {
          "href": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_issues_comments_items_links_self",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_issues_comments_items_user": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_issues_comments_items_user",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_issues_events_by_eventId_actor": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_issues_events_by_eventId_actor",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_issues_events_by_eventId_issue": {
        "properties": {
          "assignee": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_issues_events_by_eventId_issue_assignee",
          },
          "body": {
            "type": "string",
          },
          "closed_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "comments": {
            "type": "integer",
          },
          "created_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "html_url": {
            "type": "string",
          },
          "labels": {
            "items": {
              "$ref": "#/definitions/query_repos_by_owner_by_repo_issues_events_by_eventId_issue_labels_items",
            },
            "type": "array",
          },
          "milestone": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_issues_events_by_eventId_issue_milestone",
          },
          "number": {
            "type": "integer",
          },
          "pull_request": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_issues_events_by_eventId_issue_pull_request",
          },
          "state": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_issues_events_by_eventId_issue_state",
          },
          "title": {
            "type": "string",
          },
          "updated_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "url": {
            "type": "string",
          },
          "user": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_issues_events_by_eventId_issue_user",
          },
        },
        "title": "query_repos_by_owner_by_repo_issues_events_by_eventId_issue",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_issues_events_by_eventId_issue_assignee": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_issues_events_by_eventId_issue_assignee",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_issues_events_by_eventId_issue_labels_items": {
        "properties": {
          "color": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_issues_events_by_eventId_issue_labels_items",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_issues_events_by_eventId_issue_milestone": {
        "properties": {
          "closed_issues": {
            "type": "integer",
          },
          "created_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "creator": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_issues_events_by_eventId_issue_milestone_creator",
          },
          "description": {
            "type": "string",
          },
          "due_on": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "number": {
            "type": "integer",
          },
          "open_issues": {
            "type": "integer",
          },
          "state": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_issues_events_by_eventId_issue_milestone_state",
          },
          "title": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_issues_events_by_eventId_issue_milestone",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_issues_events_by_eventId_issue_milestone_creator": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_issues_events_by_eventId_issue_milestone_creator",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_issues_events_by_eventId_issue_milestone_state": {
        "enum": [
          "open",
          "closed",
        ],
        "title": "query_repos_by_owner_by_repo_issues_events_by_eventId_issue_milestone_state",
      },
      "query_repos_by_owner_by_repo_issues_events_by_eventId_issue_pull_request": {
        "properties": {
          "diff_url": {
            "type": "string",
          },
          "html_url": {
            "type": "string",
          },
          "patch_url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_issues_events_by_eventId_issue_pull_request",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_issues_events_by_eventId_issue_state": {
        "enum": [
          "open",
          "closed",
        ],
        "title": "query_repos_by_owner_by_repo_issues_events_by_eventId_issue_state",
      },
      "query_repos_by_owner_by_repo_issues_events_by_eventId_issue_user": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_issues_events_by_eventId_issue_user",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_keys_items": {
        "properties": {
          "id": {
            "type": "integer",
          },
          "key": {
            "type": "string",
          },
          "title": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_keys_items",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_labels_by_name_color": {
        "maxLength": 6,
        "minLength": 6,
        "title": "query_repos_by_owner_by_repo_labels_by_name_color",
        "type": "string",
      },
      "query_repos_by_owner_by_repo_milestones_creator": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_milestones_creator",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_milestones_state": {
        "enum": [
          "open",
          "closed",
        ],
        "title": "query_repos_by_owner_by_repo_milestones_state",
      },
      "query_repos_by_owner_by_repo_organization": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "type": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_organization",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_owner": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_owner",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_parent": {
        "description": "Is present when the repo is a fork. Parent is the repo this repo was forked from.",
        "properties": {
          "clone_url": {
            "type": "string",
          },
          "created_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "description": {
            "type": "string",
          },
          "fork": {
            "type": "boolean",
          },
          "forks": {
            "type": "integer",
          },
          "forks_count": {
            "type": "integer",
          },
          "full_name": {
            "type": "string",
          },
          "git_url": {
            "type": "string",
          },
          "homepage": {
            "type": "string",
          },
          "html_url": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "language": {
            "type": "string",
          },
          "master_branch": {
            "type": "string",
          },
          "mirror_url": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
          "open_issues": {
            "type": "integer",
          },
          "open_issues_count": {
            "type": "integer",
          },
          "owner": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_parent_owner",
          },
          "private": {
            "type": "boolean",
          },
          "pushed_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "size": {
            "type": "integer",
          },
          "ssh_url": {
            "type": "string",
          },
          "svn_url": {
            "type": "string",
          },
          "updated_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "url": {
            "type": "string",
          },
          "watchers": {
            "type": "integer",
          },
          "watchers_count": {
            "type": "integer",
          },
        },
        "title": "query_repos_by_owner_by_repo_parent",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_parent_owner": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_parent_owner",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_pulls_by_number_base": {
        "properties": {
          "label": {
            "type": "string",
          },
          "ref": {
            "type": "string",
          },
          "repo": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_by_number_base_repo",
          },
          "sha": {
            "type": "string",
          },
          "user": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_by_number_base_user",
          },
        },
        "title": "query_repos_by_owner_by_repo_pulls_by_number_base",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_pulls_by_number_base_repo": {
        "properties": {
          "clone_url": {
            "type": "string",
          },
          "created_at": {
            "type": "string",
          },
          "description": {
            "type": "string",
          },
          "fork": {
            "type": "boolean",
          },
          "forks": {
            "type": "integer",
          },
          "forks_count": {
            "type": "integer",
          },
          "full_name": {
            "type": "string",
          },
          "git_url": {
            "type": "string",
          },
          "homepage": {
            "type": "string",
          },
          "html_url": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "language": {
            "type": "null",
          },
          "master_branch": {
            "type": "string",
          },
          "mirror_url": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
          "open_issues": {
            "type": "integer",
          },
          "open_issues_count": {
            "type": "integer",
          },
          "owner": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_by_number_base_repo_owner",
          },
          "private": {
            "type": "boolean",
          },
          "pushed_at": {
            "type": "string",
          },
          "size": {
            "type": "integer",
          },
          "ssh_url": {
            "type": "string",
          },
          "svn_url": {
            "type": "string",
          },
          "updated_at": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
          "watchers": {
            "type": "integer",
          },
          "watchers_count": {
            "type": "integer",
          },
        },
        "title": "query_repos_by_owner_by_repo_pulls_by_number_base_repo",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_pulls_by_number_base_repo_owner": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_pulls_by_number_base_repo_owner",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_pulls_by_number_base_user": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_pulls_by_number_base_user",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_pulls_by_number_head": {
        "properties": {
          "label": {
            "type": "string",
          },
          "ref": {
            "type": "string",
          },
          "repo": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_by_number_head_repo",
          },
          "sha": {
            "type": "string",
          },
          "user": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_by_number_head_user",
          },
        },
        "title": "query_repos_by_owner_by_repo_pulls_by_number_head",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_pulls_by_number_head_repo": {
        "properties": {
          "clone_url": {
            "type": "string",
          },
          "created_at": {
            "type": "string",
          },
          "description": {
            "type": "string",
          },
          "fork": {
            "type": "boolean",
          },
          "forks": {
            "type": "integer",
          },
          "forks_count": {
            "type": "integer",
          },
          "full_name": {
            "type": "string",
          },
          "git_url": {
            "type": "string",
          },
          "homepage": {
            "type": "string",
          },
          "html_url": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "language": {
            "type": "null",
          },
          "master_branch": {
            "type": "string",
          },
          "mirror_url": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
          "open_issues": {
            "type": "integer",
          },
          "open_issues_count": {
            "type": "integer",
          },
          "owner": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_by_number_head_repo_owner",
          },
          "private": {
            "type": "boolean",
          },
          "pushed_at": {
            "type": "string",
          },
          "size": {
            "type": "integer",
          },
          "ssh_url": {
            "type": "string",
          },
          "svn_url": {
            "type": "string",
          },
          "updated_at": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
          "watchers": {
            "type": "integer",
          },
          "watchers_count": {
            "type": "integer",
          },
        },
        "title": "query_repos_by_owner_by_repo_pulls_by_number_head_repo",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_pulls_by_number_head_repo_owner": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_pulls_by_number_head_repo_owner",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_pulls_by_number_head_user": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_pulls_by_number_head_user",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_pulls_by_number_links": {
        "properties": {
          "comments": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_by_number_links_comments",
          },
          "html": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_by_number_links_html",
          },
          "review_comments": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_by_number_links_review_comments",
          },
          "self": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_by_number_links_self",
          },
        },
        "title": "query_repos_by_owner_by_repo_pulls_by_number_links",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_pulls_by_number_links_comments": {
        "properties": {
          "href": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_pulls_by_number_links_comments",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_pulls_by_number_links_html": {
        "properties": {
          "href": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_pulls_by_number_links_html",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_pulls_by_number_links_review_comments": {
        "properties": {
          "href": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_pulls_by_number_links_review_comments",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_pulls_by_number_links_self": {
        "properties": {
          "href": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_pulls_by_number_links_self",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_pulls_by_number_merged_by": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_pulls_by_number_merged_by",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_pulls_by_number_user": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_pulls_by_number_user",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_pulls_comments_by_commentId_links": {
        "properties": {
          "html": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_comments_by_commentId_links_html",
          },
          "pull_request": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_comments_by_commentId_links_pull_request",
          },
          "self": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_comments_by_commentId_links_self",
          },
        },
        "title": "query_repos_by_owner_by_repo_pulls_comments_by_commentId_links",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_pulls_comments_by_commentId_links_html": {
        "properties": {
          "href": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_pulls_comments_by_commentId_links_html",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_pulls_comments_by_commentId_links_pull_request": {
        "properties": {
          "href": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_pulls_comments_by_commentId_links_pull_request",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_pulls_comments_by_commentId_links_self": {
        "properties": {
          "href": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_pulls_comments_by_commentId_links_self",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_pulls_comments_by_commentId_user": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_pulls_comments_by_commentId_user",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_pulls_items": {
        "properties": {
          "base": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_items_base",
          },
          "body": {
            "type": "string",
          },
          "closed_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "created_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "diff_url": {
            "type": "string",
          },
          "head": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_items_head",
          },
          "html_url": {
            "type": "string",
          },
          "issue_url": {
            "type": "string",
          },
          "links": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_items_links",
          },
          "merged_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "number": {
            "type": "integer",
          },
          "patch_url": {
            "type": "string",
          },
          "state": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_items_state",
          },
          "title": {
            "type": "string",
          },
          "updated_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "url": {
            "type": "string",
          },
          "user": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_items_user",
          },
        },
        "title": "query_repos_by_owner_by_repo_pulls_items",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_pulls_items_base": {
        "properties": {
          "label": {
            "type": "string",
          },
          "ref": {
            "type": "string",
          },
          "repo": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_items_base_repo",
          },
          "sha": {
            "type": "string",
          },
          "user": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_items_base_user",
          },
        },
        "title": "query_repos_by_owner_by_repo_pulls_items_base",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_pulls_items_base_repo": {
        "properties": {
          "clone_url": {
            "type": "string",
          },
          "created_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "description": {
            "type": "string",
          },
          "fork": {
            "type": "boolean",
          },
          "forks": {
            "type": "integer",
          },
          "forks_count": {
            "type": "integer",
          },
          "full_name": {
            "type": "string",
          },
          "git_url": {
            "type": "string",
          },
          "homepage": {
            "type": "string",
          },
          "html_url": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "language": {
            "type": "string",
          },
          "master_branch": {
            "type": "string",
          },
          "mirror_url": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
          "open_issues": {
            "type": "integer",
          },
          "open_issues_count": {
            "type": "integer",
          },
          "owner": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_items_base_repo_owner",
          },
          "private": {
            "type": "boolean",
          },
          "pushed_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "size": {
            "type": "integer",
          },
          "ssh_url": {
            "type": "string",
          },
          "svn_url": {
            "type": "string",
          },
          "updated_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "url": {
            "type": "string",
          },
          "watchers": {
            "type": "integer",
          },
          "watchers_count": {
            "type": "integer",
          },
        },
        "title": "query_repos_by_owner_by_repo_pulls_items_base_repo",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_pulls_items_base_repo_owner": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_pulls_items_base_repo_owner",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_pulls_items_base_user": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_pulls_items_base_user",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_pulls_items_head": {
        "properties": {
          "label": {
            "type": "string",
          },
          "ref": {
            "type": "string",
          },
          "repo": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_items_head_repo",
          },
          "sha": {
            "type": "string",
          },
          "user": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_items_head_user",
          },
        },
        "title": "query_repos_by_owner_by_repo_pulls_items_head",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_pulls_items_head_repo": {
        "properties": {
          "clone_url": {
            "type": "string",
          },
          "created_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "description": {
            "type": "string",
          },
          "fork": {
            "type": "boolean",
          },
          "forks": {
            "type": "integer",
          },
          "forks_count": {
            "type": "integer",
          },
          "full_name": {
            "type": "string",
          },
          "git_url": {
            "type": "string",
          },
          "homepage": {
            "type": "string",
          },
          "html_url": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "language": {
            "type": "string",
          },
          "master_branch": {
            "type": "string",
          },
          "mirror_url": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
          "open_issues": {
            "type": "integer",
          },
          "open_issues_count": {
            "type": "integer",
          },
          "owner": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_items_head_repo_owner",
          },
          "private": {
            "type": "boolean",
          },
          "pushed_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "size": {
            "type": "integer",
          },
          "ssh_url": {
            "type": "string",
          },
          "svn_url": {
            "type": "string",
          },
          "updated_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "url": {
            "type": "string",
          },
          "watchers": {
            "type": "integer",
          },
          "watchers_count": {
            "type": "integer",
          },
        },
        "title": "query_repos_by_owner_by_repo_pulls_items_head_repo",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_pulls_items_head_repo_owner": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_pulls_items_head_repo_owner",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_pulls_items_head_user": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_pulls_items_head_user",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_pulls_items_links": {
        "properties": {
          "comments": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_items_links_comments",
          },
          "html": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_items_links_html",
          },
          "review_comments": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_items_links_review_comments",
          },
          "self": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_pulls_items_links_self",
          },
        },
        "title": "query_repos_by_owner_by_repo_pulls_items_links",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_pulls_items_links_comments": {
        "properties": {
          "href": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_pulls_items_links_comments",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_pulls_items_links_html": {
        "properties": {
          "href": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_pulls_items_links_html",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_pulls_items_links_review_comments": {
        "properties": {
          "href": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_pulls_items_links_review_comments",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_pulls_items_links_self": {
        "properties": {
          "href": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_pulls_items_links_self",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_pulls_items_state": {
        "enum": [
          "open",
          "closed",
        ],
        "title": "query_repos_by_owner_by_repo_pulls_items_state",
      },
      "query_repos_by_owner_by_repo_pulls_items_user": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_pulls_items_user",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_releases_assets_by_id_uploader": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "events_url": {
            "type": "string",
          },
          "followers_url": {
            "type": "string",
          },
          "following_url": {
            "type": "string",
          },
          "gists_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "html_url": {
            "type": "string",
          },
          "id": {
            "type": "number",
          },
          "login": {
            "type": "string",
          },
          "organizations_url": {
            "type": "string",
          },
          "received_events_url": {
            "type": "string",
          },
          "repos_url": {
            "type": "string",
          },
          "site_admin": {
            "type": "boolean",
          },
          "starred_url": {
            "type": "string",
          },
          "subscriptions_url": {
            "type": "string",
          },
          "type": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_releases_assets_by_id_uploader",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_releases_by_id_assets_items": {
        "properties": {
          "content_type": {
            "type": "string",
          },
          "created_at": {
            "type": "string",
          },
          "download_count": {
            "type": "integer",
          },
          "id": {
            "type": "integer",
          },
          "label": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
          "size": {
            "type": "integer",
          },
          "state": {
            "type": "string",
          },
          "updated_at": {
            "type": "string",
          },
          "uploader": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_releases_by_id_assets_items_uploader",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_releases_by_id_assets_items",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_releases_by_id_assets_items2": {
        "properties": {
          "content_type": {
            "type": "string",
          },
          "created_at": {
            "type": "string",
          },
          "download_count": {
            "type": "number",
          },
          "id": {
            "type": "number",
          },
          "label": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
          "size": {
            "type": "number",
          },
          "state": {
            "type": "string",
          },
          "updated_at": {
            "type": "string",
          },
          "uploader": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_releases_by_id_assets_items_uploader2",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_releases_by_id_assets_items",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_releases_by_id_assets_items_uploader": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "events_url": {
            "type": "string",
          },
          "followers_url": {
            "type": "string",
          },
          "following_url": {
            "type": "string",
          },
          "gists_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "html_url": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "organizations_url": {
            "type": "string",
          },
          "received_events_url": {
            "type": "string",
          },
          "repos_url": {
            "type": "string",
          },
          "site_admin": {
            "type": "boolean",
          },
          "starred_url": {
            "type": "string",
          },
          "subscriptions_url": {
            "type": "string",
          },
          "type": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_releases_by_id_assets_items_uploader",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_releases_by_id_assets_items_uploader2": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "events_url": {
            "type": "string",
          },
          "followers_url": {
            "type": "string",
          },
          "following_url": {
            "type": "string",
          },
          "gists_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "html_url": {
            "type": "string",
          },
          "id": {
            "type": "number",
          },
          "login": {
            "type": "string",
          },
          "organizations_url": {
            "type": "string",
          },
          "received_events_url": {
            "type": "string",
          },
          "repos_url": {
            "type": "string",
          },
          "site_admin": {
            "type": "boolean",
          },
          "starred_url": {
            "type": "string",
          },
          "subscriptions_url": {
            "type": "string",
          },
          "type": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_releases_by_id_assets_items_uploader",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_releases_by_id_author": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "events_url": {
            "type": "string",
          },
          "followers_url": {
            "type": "string",
          },
          "following_url": {
            "type": "string",
          },
          "gists_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "html_url": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "organizations_url": {
            "type": "string",
          },
          "received_events_url": {
            "type": "string",
          },
          "repos_url": {
            "type": "string",
          },
          "site_admin": {
            "type": "boolean",
          },
          "starred_url": {
            "type": "string",
          },
          "subscriptions_url": {
            "type": "string",
          },
          "type": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_releases_by_id_author",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_releases_items": {
        "properties": {
          "assets": {
            "items": {
              "$ref": "#/definitions/query_repos_by_owner_by_repo_releases_items_assets_items",
            },
            "type": "array",
          },
          "assets_url": {
            "type": "string",
          },
          "author": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_releases_items_author",
          },
          "body": {
            "type": "string",
          },
          "created_at": {
            "type": "string",
          },
          "draft": {
            "type": "boolean",
          },
          "html_url": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "name": {
            "type": "string",
          },
          "prerelease": {
            "type": "boolean",
          },
          "published_at": {
            "type": "string",
          },
          "tag_name": {
            "type": "string",
          },
          "tarball_url": {
            "type": "string",
          },
          "target_commitish": {
            "type": "string",
          },
          "upload_url": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
          "zipball_url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_releases_items",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_releases_items_assets_items": {
        "properties": {
          "content_type": {
            "type": "string",
          },
          "created_at": {
            "type": "string",
          },
          "download_count": {
            "type": "integer",
          },
          "id": {
            "type": "integer",
          },
          "label": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
          "size": {
            "type": "integer",
          },
          "state": {
            "type": "string",
          },
          "updated_at": {
            "type": "string",
          },
          "uploader": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_releases_items_assets_items_uploader",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_releases_items_assets_items",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_releases_items_assets_items_uploader": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "events_url": {
            "type": "string",
          },
          "followers_url": {
            "type": "string",
          },
          "following_url": {
            "type": "string",
          },
          "gists_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "html_url": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "organizations_url": {
            "type": "string",
          },
          "received_events_url": {
            "type": "string",
          },
          "repos_url": {
            "type": "string",
          },
          "site_admin": {
            "type": "boolean",
          },
          "starred_url": {
            "type": "string",
          },
          "subscriptions_url": {
            "type": "string",
          },
          "type": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_releases_items_assets_items_uploader",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_releases_items_author": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "events_url": {
            "type": "string",
          },
          "followers_url": {
            "type": "string",
          },
          "following_url": {
            "type": "string",
          },
          "gists_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "html_url": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "organizations_url": {
            "type": "string",
          },
          "received_events_url": {
            "type": "string",
          },
          "repos_url": {
            "type": "string",
          },
          "site_admin": {
            "type": "boolean",
          },
          "starred_url": {
            "type": "string",
          },
          "subscriptions_url": {
            "type": "string",
          },
          "type": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_releases_items_author",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_source": {
        "description": "Is present when the repo is a fork. Source is the ultimate source for the network.",
        "properties": {
          "clone_url": {
            "type": "string",
          },
          "created_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "description": {
            "type": "string",
          },
          "fork": {
            "type": "boolean",
          },
          "forks": {
            "type": "integer",
          },
          "forks_count": {
            "type": "integer",
          },
          "full_name": {
            "type": "string",
          },
          "git_url": {
            "type": "string",
          },
          "homepage": {
            "type": "string",
          },
          "html_url": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "language": {
            "type": "string",
          },
          "master_branch": {
            "type": "string",
          },
          "mirror_url": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
          "open_issues": {
            "type": "integer",
          },
          "open_issues_count": {
            "type": "integer",
          },
          "owner": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_source_owner",
          },
          "private": {
            "type": "boolean",
          },
          "pushed_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "size": {
            "type": "integer",
          },
          "ssh_url": {
            "type": "string",
          },
          "svn_url": {
            "type": "string",
          },
          "updated_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "url": {
            "type": "string",
          },
          "watchers": {
            "type": "integer",
          },
          "watchers_count": {
            "type": "integer",
          },
        },
        "title": "query_repos_by_owner_by_repo_source",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_source_owner": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_source_owner",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_stats_commit_activity_items": {
        "properties": {
          "days": {
            "items": {
              "type": "integer",
            },
            "type": "array",
          },
          "total": {
            "type": "integer",
          },
          "week": {
            "type": "integer",
          },
        },
        "title": "query_repos_by_owner_by_repo_stats_commit_activity_items",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_stats_contributors_items": {
        "properties": {
          "author": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_stats_contributors_items_author",
          },
          "total": {
            "description": "The Total number of commits authored by the contributor.",
            "type": "integer",
          },
          "weeks": {
            "items": {
              "$ref": "#/definitions/query_repos_by_owner_by_repo_stats_contributors_items_weeks_items",
            },
            "type": "array",
          },
        },
        "title": "query_repos_by_owner_by_repo_stats_contributors_items",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_stats_contributors_items_author": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_stats_contributors_items_author",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_stats_contributors_items_weeks_items": {
        "properties": {
          "a": {
            "description": "Number of additions.",
            "type": "integer",
          },
          "c": {
            "description": "Number of commits.",
            "type": "integer",
          },
          "d": {
            "description": "Number of deletions.",
            "type": "integer",
          },
          "w": {
            "description": "Start of the week.",
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_stats_contributors_items_weeks_items",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_statuses_by_ref_items": {
        "properties": {
          "created_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "creator": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_statuses_by_ref_items_creator",
          },
          "description": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "state": {
            "type": "string",
          },
          "target_url": {
            "type": "string",
          },
          "updated_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_statuses_by_ref_items",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_statuses_by_ref_items_creator": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_statuses_by_ref_items_creator",
        "type": "object",
      },
      "query_repos_by_owner_by_repo_tags_tagger": {
        "properties": {
          "date": {
            "description": "Timestamp of when this object was tagged.",
            "type": "string",
          },
          "email": {
            "description": "String of the email of the author of the tag.",
            "type": "string",
          },
          "name": {
            "description": "String of the name of the author of the tag.",
            "type": "string",
          },
        },
        "title": "query_repos_by_owner_by_repo_tags_tagger",
        "type": "object",
      },
      "query_repositories_items": {
        "properties": {
          "description": {
            "type": "string",
          },
          "fork": {
            "type": "boolean",
          },
          "full_name": {
            "type": "string",
          },
          "html_url": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "name": {
            "type": "string",
          },
          "owner": {
            "$ref": "#/definitions/query_repositories_items_owner",
          },
          "private": {
            "type": "boolean",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repositories_items",
        "type": "object",
      },
      "query_repositories_items_owner": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_repositories_items_owner",
        "type": "object",
      },
      "query_search_code_items_items": {
        "properties": {
          "git_url": {
            "type": "string",
          },
          "html_url": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
          "path": {
            "type": "string",
          },
          "repository": {
            "$ref": "#/definitions/query_search_code_items_items_repository",
          },
          "score": {
            "type": "number",
          },
          "sha": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_search_code_items_items",
        "type": "object",
      },
      "query_search_code_items_items_repository": {
        "properties": {
          "archive_url": {
            "type": "string",
          },
          "assignees_url": {
            "type": "string",
          },
          "blobs_url": {
            "type": "string",
          },
          "branches_url": {
            "type": "string",
          },
          "collaborators_url": {
            "type": "string",
          },
          "comments_url": {
            "type": "string",
          },
          "commits_url": {
            "type": "string",
          },
          "compare_url": {
            "type": "string",
          },
          "contents_url": {
            "type": "string",
          },
          "contributors_url": {
            "type": "string",
          },
          "description": {
            "type": "string",
          },
          "downloads_url": {
            "type": "string",
          },
          "events_url": {
            "type": "string",
          },
          "fork": {
            "type": "boolean",
          },
          "forks_url": {
            "type": "string",
          },
          "full_name": {
            "type": "string",
          },
          "git_commits_url": {
            "type": "string",
          },
          "git_refs_url": {
            "type": "string",
          },
          "git_tags_url": {
            "type": "string",
          },
          "hooks_url": {
            "type": "string",
          },
          "html_url": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "issue_comment_url": {
            "type": "string",
          },
          "issue_events_url": {
            "type": "string",
          },
          "issues_url": {
            "type": "string",
          },
          "keys_url": {
            "type": "string",
          },
          "labels_url": {
            "type": "string",
          },
          "languages_url": {
            "type": "string",
          },
          "merges_url": {
            "type": "string",
          },
          "milestones_url": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
          "notifications_url": {
            "type": "string",
          },
          "owner": {
            "$ref": "#/definitions/query_search_code_items_items_repository_owner",
          },
          "private": {
            "type": "boolean",
          },
          "pulls_url": {
            "type": "string",
          },
          "stargazers_url": {
            "type": "string",
          },
          "statuses_url": {
            "type": "string",
          },
          "subscribers_url": {
            "type": "string",
          },
          "subscription_url": {
            "type": "string",
          },
          "tags_url": {
            "type": "string",
          },
          "teams_url": {
            "type": "string",
          },
          "trees_url": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_search_code_items_items_repository",
        "type": "object",
      },
      "query_search_code_items_items_repository_owner": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "events_url": {
            "type": "string",
          },
          "followers_url": {
            "type": "string",
          },
          "following_url": {
            "type": "string",
          },
          "gists_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "html_url": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "organizations_url": {
            "type": "string",
          },
          "received_events_url": {
            "type": "string",
          },
          "repos_url": {
            "type": "string",
          },
          "starred_url": {
            "type": "string",
          },
          "subscriptions_url": {
            "type": "string",
          },
          "type": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_search_code_items_items_repository_owner",
        "type": "object",
      },
      "query_search_issues_items_items": {
        "properties": {
          "assignee": {
            "type": "null",
          },
          "body": {
            "type": "string",
          },
          "closed_at": {
            "type": "null",
          },
          "comments": {
            "type": "integer",
          },
          "comments_url": {
            "type": "string",
          },
          "created_at": {
            "type": "string",
          },
          "events_url": {
            "type": "string",
          },
          "html_url": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "labels": {
            "items": {
              "$ref": "#/definitions/query_search_issues_items_items_labels_items",
            },
            "type": "array",
          },
          "labels_url": {
            "type": "string",
          },
          "milestone": {
            "type": "null",
          },
          "number": {
            "type": "integer",
          },
          "pull_request": {
            "$ref": "#/definitions/query_search_issues_items_items_pull_request",
          },
          "score": {
            "type": "number",
          },
          "state": {
            "type": "string",
          },
          "title": {
            "type": "string",
          },
          "updated_at": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
          "user": {
            "$ref": "#/definitions/query_search_issues_items_items_user",
          },
        },
        "title": "query_search_issues_items_items",
        "type": "object",
      },
      "query_search_issues_items_items_labels_items": {
        "properties": {
          "color": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_search_issues_items_items_labels_items",
        "type": "object",
      },
      "query_search_issues_items_items_pull_request": {
        "properties": {
          "diff_url": {
            "type": "null",
          },
          "html_url": {
            "type": "null",
          },
          "patch_url": {
            "type": "null",
          },
        },
        "title": "query_search_issues_items_items_pull_request",
        "type": "object",
      },
      "query_search_issues_items_items_user": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "events_url": {
            "type": "string",
          },
          "followers_url": {
            "type": "string",
          },
          "following_url": {
            "type": "string",
          },
          "gists_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "html_url": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "organizations_url": {
            "type": "string",
          },
          "received_events_url": {
            "type": "string",
          },
          "repos_url": {
            "type": "string",
          },
          "starred_url": {
            "type": "string",
          },
          "subscriptions_url": {
            "type": "string",
          },
          "type": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_search_issues_items_items_user",
        "type": "object",
      },
      "query_search_repositories_items_items": {
        "properties": {
          "created_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "default_branch": {
            "type": "string",
          },
          "description": {
            "type": "string",
          },
          "fork": {
            "type": "boolean",
          },
          "forks": {
            "type": "integer",
          },
          "forks_count": {
            "type": "integer",
          },
          "full_name": {
            "type": "string",
          },
          "homepage": {
            "type": "string",
          },
          "html_url": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "language": {
            "type": "string",
          },
          "master_branch": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
          "open_issues": {
            "type": "integer",
          },
          "open_issues_count": {
            "type": "integer",
          },
          "owner": {
            "$ref": "#/definitions/query_search_repositories_items_items_owner",
          },
          "private": {
            "type": "boolean",
          },
          "pushed_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "score": {
            "type": "number",
          },
          "size": {
            "type": "integer",
          },
          "updated_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "url": {
            "type": "string",
          },
          "watchers": {
            "type": "integer",
          },
          "watchers_count": {
            "type": "integer",
          },
        },
        "title": "query_search_repositories_items_items",
        "type": "object",
      },
      "query_search_repositories_items_items_owner": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "received_events_url": {
            "type": "string",
          },
          "type": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_search_repositories_items_items_owner",
        "type": "object",
      },
      "query_search_users_items_items": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "followers_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "html_url": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "organizations_url": {
            "type": "string",
          },
          "received_events_url": {
            "type": "string",
          },
          "repos_url": {
            "type": "string",
          },
          "score": {
            "type": "number",
          },
          "subscriptions_url": {
            "type": "string",
          },
          "type": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_search_users_items_items",
        "type": "object",
      },
      "query_teams_by_teamId_repos_items": {
        "properties": {
          "clone_url": {
            "type": "string",
          },
          "created_at": {
            "type": "string",
          },
          "description": {
            "type": "string",
          },
          "fork": {
            "type": "boolean",
          },
          "forks": {
            "type": "integer",
          },
          "forks_count": {
            "type": "integer",
          },
          "full_name": {
            "type": "string",
          },
          "git_url": {
            "type": "string",
          },
          "homepage": {
            "type": "string",
          },
          "html_url": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "language": {
            "type": "null",
          },
          "master_branch": {
            "type": "string",
          },
          "mirror_url": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
          "open_issues": {
            "type": "integer",
          },
          "open_issues_count": {
            "type": "integer",
          },
          "owner": {
            "$ref": "#/definitions/query_teams_by_teamId_repos_items_owner",
          },
          "private": {
            "type": "boolean",
          },
          "pushed_at": {
            "type": "string",
          },
          "size": {
            "type": "integer",
          },
          "ssh_url": {
            "type": "string",
          },
          "svn_url": {
            "type": "string",
          },
          "updated_at": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
          "watchers": {
            "type": "integer",
          },
          "watchers_count": {
            "type": "integer",
          },
        },
        "title": "query_teams_by_teamId_repos_items",
        "type": "object",
      },
      "query_teams_by_teamId_repos_items_owner": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_teams_by_teamId_repos_items_owner",
        "type": "object",
      },
      "query_user_plan": {
        "properties": {
          "collaborators": {
            "type": "integer",
          },
          "name": {
            "type": "string",
          },
          "private_repos": {
            "type": "integer",
          },
          "space": {
            "type": "integer",
          },
        },
        "title": "query_user_plan",
        "type": "object",
      },
      "query_user_subscriptions_items": {
        "properties": {
          "clone_url": {
            "type": "string",
          },
          "created_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "description": {
            "type": "string",
          },
          "fork": {
            "type": "boolean",
          },
          "forks": {
            "type": "integer",
          },
          "forks_count": {
            "type": "integer",
          },
          "full_name": {
            "type": "string",
          },
          "git_url": {
            "type": "string",
          },
          "homepage": {
            "type": "string",
          },
          "html_url": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "language": {
            "type": "string",
          },
          "master_branch": {
            "type": "integer",
          },
          "mirror_url": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
          "open_issues": {
            "type": "integer",
          },
          "open_issues_count": {
            "type": "integer",
          },
          "owner": {
            "$ref": "#/definitions/query_user_subscriptions_items_owner",
          },
          "private": {
            "type": "boolean",
          },
          "pushed_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "size": {
            "type": "integer",
          },
          "ssh_url": {
            "type": "string",
          },
          "svn_url": {
            "type": "string",
          },
          "updated_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "url": {
            "type": "string",
          },
          "watchers": {
            "type": "integer",
          },
          "watchers_count": {
            "type": "integer",
          },
        },
        "title": "query_user_subscriptions_items",
        "type": "object",
      },
      "query_user_subscriptions_items_owner": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "gravatar_id": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_user_subscriptions_items_owner",
        "type": "object",
      },
      "query_user_teams_items": {
        "properties": {
          "id": {
            "type": "integer",
          },
          "members_count": {
            "type": "integer",
          },
          "name": {
            "type": "string",
          },
          "organization": {
            "$ref": "#/definitions/query_user_teams_items_organization",
          },
          "permission": {
            "type": "string",
          },
          "repos_count": {
            "type": "integer",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_user_teams_items",
        "type": "object",
      },
      "query_user_teams_items_organization": {
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "login": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "query_user_teams_items_organization",
        "type": "object",
      },
      "rate_limit": {
        "$resolvedRef": "/definitions/rate_limit",
        "properties": {
          "rate": {
            "$ref": "#/definitions/query_rate_limit_rate",
          },
        },
        "title": "rate_limit",
        "type": "object",
      },
      "ref": {
        "$resolvedRef": "/definitions/ref",
        "items": {
          "properties": {
            "created_at": {
              "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
              "type": "string",
            },
            "creator": {
              "$ref": "#/definitions/query_repos_by_owner_by_repo_statuses_by_ref_items_creator",
            },
            "description": {
              "type": "string",
            },
            "id": {
              "type": "integer",
            },
            "state": {
              "type": "string",
            },
            "target_url": {
              "type": "string",
            },
            "updated_at": {
              "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
              "type": "string",
            },
            "url": {
              "type": "string",
            },
          },
          "title": "query_repos_by_owner_by_repo_statuses_by_ref_items",
          "type": "object",
        },
        "title": "ref",
        "type": "array",
      },
      "refStatus": {
        "$resolvedRef": "/definitions/refStatus",
        "items": {
          "properties": {
            "commit_url": {
              "type": "string",
            },
            "name": {
              "type": "string",
            },
            "repository_url": {
              "type": "string",
            },
            "sha": {
              "type": "string",
            },
            "state": {
              "type": "string",
            },
            "statuses": {
              "items": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_commits_by_ref_status_items_statuses_items",
              },
              "type": "array",
            },
          },
          "title": "query_repos_by_owner_by_repo_commits_by_ref_status_items",
          "type": "object",
        },
        "title": "refStatus",
        "type": "array",
      },
      "refs": {
        "$resolvedRef": "/definitions/refs",
        "items": {
          "properties": {
            "object": {
              "$ref": "#/definitions/query_repos_by_owner_by_repo_git_refs_items_object",
            },
            "ref": {
              "type": "string",
            },
            "url": {
              "type": "string",
            },
          },
          "title": "query_repos_by_owner_by_repo_git_refs_items",
          "type": "object",
        },
        "title": "refs",
        "type": "array",
      },
      "refsBody": {
        "$resolvedRef": "/definitions/refsBody",
        "description": undefined,
        "nullable": false,
        "properties": {
          "ref": {
            "type": "string",
          },
          "sha": {
            "type": "string",
          },
        },
        "title": "refsBody",
        "type": "object",
      },
      "release": {
        "$resolvedRef": "/definitions/release",
        "properties": {
          "assets": {
            "items": {
              "$ref": "#/definitions/query_repos_by_owner_by_repo_releases_by_id_assets_items",
            },
            "type": "array",
          },
          "assets_url": {
            "type": "string",
          },
          "author": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_releases_by_id_author",
          },
          "body": {
            "type": "string",
          },
          "created_at": {
            "type": "string",
          },
          "draft": {
            "type": "boolean",
          },
          "html_url": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "name": {
            "type": "string",
          },
          "prerelease": {
            "type": "boolean",
          },
          "published_at": {
            "type": "string",
          },
          "tag_name": {
            "type": "string",
          },
          "tarball_url": {
            "type": "string",
          },
          "target_commitish": {
            "type": "string",
          },
          "upload_url": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
          "zipball_url": {
            "type": "string",
          },
        },
        "title": "release",
        "type": "object",
      },
      "release-create": {
        "$resolvedRef": "/definitions/release-create",
        "description": undefined,
        "nullable": false,
        "properties": {
          "body": {
            "type": "string",
          },
          "draft": {
            "type": "boolean",
          },
          "name": {
            "type": "string",
          },
          "prerelease": {
            "type": "boolean",
          },
          "tag_name": {
            "type": "string",
          },
          "target_commitish": {
            "type": "string",
          },
        },
        "title": "release-create",
        "type": "object",
      },
      "releases": {
        "$resolvedRef": "/definitions/releases",
        "items": {
          "properties": {
            "assets": {
              "items": {
                "$ref": "#/definitions/query_repos_by_owner_by_repo_releases_items_assets_items",
              },
              "type": "array",
            },
            "assets_url": {
              "type": "string",
            },
            "author": {
              "$ref": "#/definitions/query_repos_by_owner_by_repo_releases_items_author",
            },
            "body": {
              "type": "string",
            },
            "created_at": {
              "type": "string",
            },
            "draft": {
              "type": "boolean",
            },
            "html_url": {
              "type": "string",
            },
            "id": {
              "type": "integer",
            },
            "name": {
              "type": "string",
            },
            "prerelease": {
              "type": "boolean",
            },
            "published_at": {
              "type": "string",
            },
            "tag_name": {
              "type": "string",
            },
            "tarball_url": {
              "type": "string",
            },
            "target_commitish": {
              "type": "string",
            },
            "upload_url": {
              "type": "string",
            },
            "url": {
              "type": "string",
            },
            "zipball_url": {
              "type": "string",
            },
          },
          "title": "query_repos_by_owner_by_repo_releases_items",
          "type": "object",
        },
        "title": "releases",
        "type": "array",
      },
      "repo": {
        "$resolvedRef": "/definitions/repo",
        "properties": {
          "clone_url": {
            "type": "string",
          },
          "created_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "description": {
            "type": "string",
          },
          "fork": {
            "type": "boolean",
          },
          "forks": {
            "type": "integer",
          },
          "forks_count": {
            "type": "integer",
          },
          "full_name": {
            "type": "string",
          },
          "git_url": {
            "type": "string",
          },
          "has_downloads": {
            "type": "boolean",
          },
          "has_issues": {
            "type": "boolean",
          },
          "has_wiki": {
            "type": "boolean",
          },
          "homepage": {
            "type": "string",
          },
          "html_url": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "language": {
            "type": "string",
          },
          "master_branch": {
            "type": "string",
          },
          "mirror_url": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
          "open_issues": {
            "type": "integer",
          },
          "open_issues_count": {
            "type": "integer",
          },
          "organization": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_organization",
          },
          "owner": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_owner",
          },
          "parent": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_parent",
          },
          "private": {
            "type": "boolean",
          },
          "pushed_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "size": {
            "type": "integer",
          },
          "source": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_source",
          },
          "ssh_url": {
            "type": "string",
          },
          "svn_url": {
            "type": "string",
          },
          "updated_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "url": {
            "type": "string",
          },
          "watchers": {
            "type": "integer",
          },
          "watchers_count": {
            "type": "integer",
          },
        },
        "title": "repo",
        "type": "object",
      },
      "repo-deployments": {
        "$resolvedRef": "/definitions/repo-deployments",
        "items": {
          "properties": {
            "created_at": {
              "type": "string",
            },
            "creator": {
              "$ref": "#/definitions/query_repos_by_owner_by_repo_deployments_items_creator",
            },
            "description": {
              "type": "string",
            },
            "id": {
              "type": "integer",
            },
            "payload": {
              "type": "string",
            },
            "sha": {
              "type": "string",
            },
            "statuses_url": {
              "type": "string",
            },
            "updated_at": {
              "type": "string",
            },
            "url": {
              "type": "string",
            },
          },
          "title": "query_repos_by_owner_by_repo_deployments_items",
          "type": "object",
        },
        "title": "repo-deployments",
        "type": "array",
      },
      "repoComments": {
        "$resolvedRef": "/definitions/repoComments",
        "items": {
          "properties": {
            "body": {
              "type": "string",
            },
            "commit_id": {
              "type": "string",
            },
            "created_at": {
              "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
              "type": "string",
            },
            "html_url": {
              "type": "string",
            },
            "id": {
              "type": "integer",
            },
            "line": {
              "type": "integer",
            },
            "path": {
              "type": "string",
            },
            "position": {
              "type": "integer",
            },
            "updated_at": {
              "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
              "type": "string",
            },
            "url": {
              "type": "string",
            },
            "user": {
              "$ref": "#/definitions/query_repos_by_owner_by_repo_comments_items_user",
            },
          },
          "title": "query_repos_by_owner_by_repo_comments_items",
          "type": "object",
        },
        "title": "repoComments",
        "type": "array",
      },
      "repoCommit": {
        "$resolvedRef": "/definitions/repoCommit",
        "properties": {
          "author": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_git_commits_by_shaCode_author",
          },
          "committer": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_git_commits_by_shaCode_committer",
          },
          "message": {
            "type": "string",
          },
          "parents": {
            "items": {
              "$ref": "#/definitions/query_repos_by_owner_by_repo_git_commits_by_shaCode_parents_items",
            },
            "type": "array",
          },
          "sha": {
            "type": "string",
          },
          "tree": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_git_commits_by_shaCode_tree",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "repoCommit",
        "type": "object",
      },
      "repoCommitBody": {
        "$resolvedRef": "/definitions/repoCommitBody",
        "description": undefined,
        "nullable": false,
        "properties": {
          "author": {
            "$ref": "#/definitions/mutationInput_post_repos_by_owner_by_repo_git_commits_input_author",
          },
          "message": {
            "type": "string",
          },
          "parents": {
            "items": {
              "type": "string",
            },
            "type": "array",
          },
          "tree": {
            "type": "string",
          },
        },
        "required": [
          "message",
          "parents",
          "tree",
        ],
        "title": "repoCommitBody",
        "type": "object",
      },
      "repoEdit": {
        "$resolvedRef": "/definitions/repoEdit",
        "description": undefined,
        "nullable": false,
        "properties": {
          "description": {
            "type": "string",
          },
          "has_downloads": {
            "type": "boolean",
          },
          "has_issues": {
            "type": "boolean",
          },
          "has_wiki": {
            "type": "boolean",
          },
          "homepage": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
          "private": {
            "type": "boolean",
          },
        },
        "title": "repoEdit",
        "type": "object",
      },
      "repos": {
        "$resolvedRef": "/definitions/repos",
        "items": {
          "properties": {
            "clone_url": {
              "type": "string",
            },
            "created_at": {
              "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
              "type": "string",
            },
            "description": {
              "type": "string",
            },
            "fork": {
              "type": "boolean",
            },
            "forks": {
              "type": "integer",
            },
            "forks_count": {
              "type": "integer",
            },
            "full_name": {
              "type": "string",
            },
            "git_url": {
              "type": "string",
            },
            "homepage": {
              "type": "string",
            },
            "html_url": {
              "type": "string",
            },
            "id": {
              "type": "integer",
            },
            "language": {
              "type": "string",
            },
            "master_branch": {
              "type": "string",
            },
            "mirror_url": {
              "type": "string",
            },
            "name": {
              "type": "string",
            },
            "open_issues": {
              "type": "integer",
            },
            "open_issues_count": {
              "type": "integer",
            },
            "owner": {
              "$ref": "#/definitions/query_orgs_by_org_repos_items_owner",
            },
            "private": {
              "type": "boolean",
            },
            "pushed_at": {
              "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
              "type": "string",
            },
            "size": {
              "type": "integer",
            },
            "ssh_url": {
              "type": "string",
            },
            "svn_url": {
              "type": "string",
            },
            "updated_at": {
              "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
              "type": "string",
            },
            "url": {
              "type": "string",
            },
            "watchers": {
              "type": "integer",
            },
            "watchers_count": {
              "type": "integer",
            },
          },
          "title": "query_orgs_by_org_repos_items",
          "type": "object",
        },
        "title": "repos",
        "type": "array",
      },
      "repos_by_owner_by_repo_assignees_by_assignee_204_response": {
        "description": "User is an assignee.",
        "title": "repos_by_owner_by_repo_assignees_by_assignee_204_response",
        "type": "null",
      },
      "repos_by_owner_by_repo_collaborators_by_user_204_response": {
        "description": "User is a collaborator.",
        "title": "repos_by_owner_by_repo_collaborators_by_user_204_response",
        "type": "null",
      },
      "repos_by_owner_by_repo_pulls_by_number_merge_204_response": {
        "description": "Pull request has been merged.",
        "title": "repos_by_owner_by_repo_pulls_by_number_merge_204_response",
        "type": "null",
      },
      "repositories": {
        "$resolvedRef": "/definitions/repositories",
        "items": {
          "properties": {
            "description": {
              "type": "string",
            },
            "fork": {
              "type": "boolean",
            },
            "full_name": {
              "type": "string",
            },
            "html_url": {
              "type": "string",
            },
            "id": {
              "type": "integer",
            },
            "name": {
              "type": "string",
            },
            "owner": {
              "$ref": "#/definitions/query_repositories_items_owner",
            },
            "private": {
              "type": "boolean",
            },
            "url": {
              "type": "string",
            },
          },
          "title": "query_repositories_items",
          "type": "object",
        },
        "title": "repositories",
        "type": "array",
      },
      "search-code": {
        "$resolvedRef": "/definitions/search-code",
        "properties": {
          "items": {
            "items": {
              "$ref": "#/definitions/query_search_code_items_items",
            },
            "type": "array",
          },
          "total_count": {
            "type": "integer",
          },
        },
        "title": "search-code",
        "type": "object",
      },
      "search-issues": {
        "$resolvedRef": "/definitions/search-issues",
        "properties": {
          "items": {
            "items": {
              "$ref": "#/definitions/query_search_issues_items_items",
            },
            "type": "array",
          },
          "total_count": {
            "type": "integer",
          },
        },
        "title": "search-issues",
        "type": "object",
      },
      "search-issues-by-keyword": {
        "$resolvedRef": "/definitions/search-issues-by-keyword",
        "properties": {
          "issues": {
            "items": {
              "$ref": "#/definitions/query_legacy_issues_search_by_owner_by_repository_by_state_by_keyword_issues_items",
            },
            "type": "array",
          },
        },
        "title": "search-issues-by-keyword",
        "type": "object",
      },
      "search-repositories": {
        "$resolvedRef": "/definitions/search-repositories",
        "properties": {
          "items": {
            "items": {
              "$ref": "#/definitions/query_search_repositories_items_items",
            },
            "type": "array",
          },
          "total_count": {
            "type": "integer",
          },
        },
        "title": "search-repositories",
        "type": "object",
      },
      "search-repositories-by-keyword": {
        "$resolvedRef": "/definitions/search-repositories-by-keyword",
        "properties": {
          "repositories": {
            "items": {
              "$ref": "#/definitions/query_legacy_repos_search_by_keyword_repositories_items",
            },
            "type": "array",
          },
        },
        "title": "search-repositories-by-keyword",
        "type": "object",
      },
      "search-user-by-email": {
        "$resolvedRef": "/definitions/search-user-by-email",
        "properties": {
          "user": {
            "$ref": "#/definitions/query_legacy_user_email_by_email_user",
          },
        },
        "title": "search-user-by-email",
        "type": "object",
      },
      "search-users": {
        "$resolvedRef": "/definitions/search-users",
        "properties": {
          "items": {
            "items": {
              "$ref": "#/definitions/query_search_users_items_items",
            },
            "type": "array",
          },
          "total_count": {
            "type": "integer",
          },
        },
        "title": "search-users",
        "type": "object",
      },
      "search-users-by-keyword": {
        "$resolvedRef": "/definitions/search-users-by-keyword",
        "properties": {
          "users": {
            "items": {
              "$ref": "#/definitions/query_legacy_user_search_by_keyword_users_items",
            },
            "type": "array",
          },
        },
        "title": "search-users-by-keyword",
        "type": "object",
      },
      "subscribition": {
        "$resolvedRef": "/definitions/subscribition",
        "properties": {
          "created_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "ignored": {
            "type": "boolean",
          },
          "reason": {
            "type": "string",
          },
          "repository_url": {
            "type": "string",
          },
          "subscribed": {
            "type": "boolean",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "subscribition",
        "type": "object",
      },
      "subscribitionBody": {
        "$resolvedRef": "/definitions/subscribitionBody",
        "description": undefined,
        "nullable": false,
        "properties": {
          "ignored": {
            "type": "boolean",
          },
          "subscribed": {
            "type": "boolean",
          },
        },
        "title": "subscribitionBody",
        "type": "object",
      },
      "subscription": {
        "$resolvedRef": "/definitions/subscription",
        "properties": {
          "created_at": {
            "type": "string",
          },
          "ignored": {
            "type": "boolean",
          },
          "reason": {
            "type": "boolean",
          },
          "subscribed": {
            "type": "boolean",
          },
          "thread_url": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "subscription",
        "type": "object",
      },
      "tag": {
        "$resolvedRef": "/definitions/tag",
        "description": undefined,
        "nullable": false,
        "properties": {
          "message": {
            "type": "string",
          },
          "object": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_git_tags_by_shaCode_object",
          },
          "sha": {
            "type": "string",
          },
          "tag": {
            "type": "string",
          },
          "tagger": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_git_tags_by_shaCode_tagger",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "tag",
        "type": "object",
      },
      "tags": {
        "$resolvedRef": "/definitions/tags",
        "properties": {
          "message": {
            "description": "String of the tag message.",
            "type": "string",
          },
          "object": {
            "description": "String of the SHA of the git object this is tagging.",
            "type": "string",
          },
          "tag": {
            "type": "string",
          },
          "tagger": {
            "$ref": "#/definitions/query_repos_by_owner_by_repo_tags_tagger",
          },
          "type": {
            "description": "String of the type of the object we’re tagging. Normally this is a commit but it can also be a tree or a blob.",
            "type": "string",
          },
        },
        "required": [
          "tag",
          "message",
          "object",
          "type",
          "tagger",
        ],
        "title": "tags",
        "type": "object",
      },
      "team": {
        "$resolvedRef": "/definitions/team",
        "properties": {
          "id": {
            "type": "integer",
          },
          "members_count": {
            "type": "integer",
          },
          "name": {
            "type": "string",
          },
          "permission": {
            "type": "string",
          },
          "repos_count": {
            "type": "integer",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "team",
        "type": "object",
      },
      "teamMembership": {
        "$resolvedRef": "/definitions/teamMembership",
        "properties": {
          "state": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "teamMembership",
        "type": "object",
      },
      "teamRepos": {
        "$resolvedRef": "/definitions/teamRepos",
        "items": {
          "properties": {
            "clone_url": {
              "type": "string",
            },
            "created_at": {
              "type": "string",
            },
            "description": {
              "type": "string",
            },
            "fork": {
              "type": "boolean",
            },
            "forks": {
              "type": "integer",
            },
            "forks_count": {
              "type": "integer",
            },
            "full_name": {
              "type": "string",
            },
            "git_url": {
              "type": "string",
            },
            "homepage": {
              "type": "string",
            },
            "html_url": {
              "type": "string",
            },
            "id": {
              "type": "integer",
            },
            "language": {
              "type": "null",
            },
            "master_branch": {
              "type": "string",
            },
            "mirror_url": {
              "type": "string",
            },
            "name": {
              "type": "string",
            },
            "open_issues": {
              "type": "integer",
            },
            "open_issues_count": {
              "type": "integer",
            },
            "owner": {
              "$ref": "#/definitions/query_teams_by_teamId_repos_items_owner",
            },
            "private": {
              "type": "boolean",
            },
            "pushed_at": {
              "type": "string",
            },
            "size": {
              "type": "integer",
            },
            "ssh_url": {
              "type": "string",
            },
            "svn_url": {
              "type": "string",
            },
            "updated_at": {
              "type": "string",
            },
            "url": {
              "type": "string",
            },
            "watchers": {
              "type": "integer",
            },
            "watchers_count": {
              "type": "integer",
            },
          },
          "title": "query_teams_by_teamId_repos_items",
          "type": "object",
        },
        "title": "teamRepos",
        "type": "array",
      },
      "teams": {
        "$resolvedRef": "/definitions/teams",
        "items": {
          "properties": {
            "id": {
              "type": "integer",
            },
            "name": {
              "type": "string",
            },
            "url": {
              "type": "string",
            },
          },
          "title": "query_orgs_by_org_teams_items",
          "type": "object",
        },
        "title": "teams",
        "type": "array",
      },
      "teams-list": {
        "$resolvedRef": "/definitions/teams-list",
        "items": {
          "properties": {
            "id": {
              "type": "integer",
            },
            "members_count": {
              "type": "integer",
            },
            "name": {
              "type": "string",
            },
            "organization": {
              "$ref": "#/definitions/query_user_teams_items_organization",
            },
            "permission": {
              "type": "string",
            },
            "repos_count": {
              "type": "integer",
            },
            "url": {
              "type": "string",
            },
          },
          "title": "query_user_teams_items",
          "type": "object",
        },
        "title": "teams-list",
        "type": "array",
      },
      "teams_by_teamId_members_by_username_204_response": {
        "description": "User is a member.",
        "title": "teams_by_teamId_members_by_username_204_response",
        "type": "null",
      },
      "tree": {
        "$resolvedRef": "/definitions/tree",
        "description": undefined,
        "nullable": false,
        "properties": {
          "sha": {
            "type": "string",
          },
          "tree": {
            "items": {
              "$ref": "#/definitions/query_repos_by_owner_by_repo_git_trees_by_shaCode_tree_items",
            },
            "type": "array",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "tree",
        "type": "object",
      },
      "trees": {
        "$resolvedRef": "/definitions/trees",
        "properties": {
          "base_tree": {
            "type": "string",
          },
          "sha": {
            "description": "SHA1 checksum ID of the object in the tree.",
            "type": "string",
          },
          "tree": {
            "items": {
              "$ref": "#/definitions/mutation_post_repos_by_owner_by_repo_git_trees_tree_items",
            },
            "type": "array",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "trees",
        "type": "object",
      },
      "user": {
        "$resolvedRef": "/definitions/user",
        "properties": {
          "avatar_url": {
            "type": "string",
          },
          "bio": {
            "type": "string",
          },
          "blog": {
            "type": "string",
          },
          "collaborators": {
            "type": "integer",
          },
          "company": {
            "type": "string",
          },
          "created_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string",
          },
          "disk_usage": {
            "type": "integer",
          },
          "email": {
            "type": "string",
          },
          "followers": {
            "type": "integer",
          },
          "following": {
            "type": "integer",
          },
          "gravatar_id": {
            "type": "string",
          },
          "hireable": {
            "type": "boolean",
          },
          "html_url": {
            "type": "string",
          },
          "id": {
            "type": "integer",
          },
          "location": {
            "type": "string",
          },
          "login": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
          "owned_private_repos": {
            "type": "integer",
          },
          "plan": {
            "$ref": "#/definitions/query_user_plan",
          },
          "private_gists": {
            "type": "integer",
          },
          "public_gists": {
            "type": "integer",
          },
          "public_repos": {
            "type": "integer",
          },
          "total_private_repos": {
            "type": "integer",
          },
          "type": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "user",
        "type": "object",
      },
      "user-emails": {
        "$resolvedRef": "/definitions/user-emails",
        "description": undefined,
        "items": {
          "type": "string",
        },
        "nullable": false,
        "title": "user-emails",
        "type": "array",
      },
      "user-keys-keyId": {
        "$resolvedRef": "/definitions/user-keys-keyId",
        "properties": {
          "id": {
            "type": "integer",
          },
          "key": {
            "type": "string",
          },
          "title": {
            "type": "string",
          },
          "url": {
            "type": "string",
          },
        },
        "title": "user-keys-keyId",
        "type": "object",
      },
      "user-keys-post": {
        "$resolvedRef": "/definitions/user-keys-post",
        "description": undefined,
        "nullable": false,
        "properties": {
          "key": {
            "type": "string",
          },
          "title": {
            "type": "string",
          },
        },
        "title": "user-keys-post",
        "type": "object",
      },
      "user-update": {
        "$resolvedRef": "/definitions/user-update",
        "description": undefined,
        "nullable": false,
        "properties": {
          "bio": {
            "type": "string",
          },
          "blog": {
            "type": "string",
          },
          "company": {
            "type": "string",
          },
          "email": {
            "type": "string",
          },
          "hireable": {
            "type": "boolean",
          },
          "location": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
        },
        "title": "user-update",
        "type": "object",
      },
      "user-userId-subscribitions": {
        "$resolvedRef": "/definitions/user-userId-subscribitions",
        "items": {
          "properties": {
            "clone_url": {
              "type": "string",
            },
            "created_at": {
              "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
              "type": "string",
            },
            "description": {
              "type": "string",
            },
            "fork": {
              "type": "boolean",
            },
            "forks": {
              "type": "integer",
            },
            "forks_count": {
              "type": "integer",
            },
            "full_name": {
              "type": "string",
            },
            "git_url": {
              "type": "string",
            },
            "homepage": {
              "type": "string",
            },
            "html_url": {
              "type": "string",
            },
            "id": {
              "type": "integer",
            },
            "language": {
              "type": "string",
            },
            "master_branch": {
              "type": "integer",
            },
            "mirror_url": {
              "type": "string",
            },
            "name": {
              "type": "string",
            },
            "open_issues": {
              "type": "integer",
            },
            "open_issues_count": {
              "type": "integer",
            },
            "owner": {
              "$ref": "#/definitions/query_user_subscriptions_items_owner",
            },
            "private": {
              "type": "boolean",
            },
            "pushed_at": {
              "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
              "type": "string",
            },
            "size": {
              "type": "integer",
            },
            "ssh_url": {
              "type": "string",
            },
            "svn_url": {
              "type": "string",
            },
            "updated_at": {
              "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
              "type": "string",
            },
            "url": {
              "type": "string",
            },
            "watchers": {
              "type": "integer",
            },
            "watchers_count": {
              "type": "integer",
            },
          },
          "title": "query_user_subscriptions_items",
          "type": "object",
        },
        "title": "user-userId-subscribitions",
        "type": "array",
      },
      "user_following_by_username_204_response": {
        "description": "Response if you are following this user.",
        "title": "user_following_by_username_204_response",
        "type": "null",
      },
      "user_starred_by_owner_by_repo_204_response": {
        "description": "This repository is starred by you.",
        "title": "user_starred_by_owner_by_repo_204_response",
        "type": "null",
      },
      "user_subscriptions_by_owner_by_repo_204_response": {
        "description": "Repository is watched by you.",
        "title": "user_subscriptions_by_owner_by_repo_204_response",
        "type": "null",
      },
      "users": {
        "$resolvedRef": "/definitions/users",
        "items": {
          "properties": {
            "avatar_url": {
              "type": "string",
            },
            "gravatar_id": {
              "type": "string",
            },
            "id": {
              "type": "integer",
            },
            "login": {
              "type": "string",
            },
            "url": {
              "type": "string",
            },
          },
          "title": "query_orgs_by_org_members_items",
          "type": "object",
        },
        "title": "users",
        "type": "array",
      },
      "users_by_username_following_by_targetUser_204_response": {
        "description": "Response if user follows target user.",
        "title": "users_by_username_following_by_targetUser_204_response",
        "type": "null",
      },
    },
  },
}
`;

exports[`OpenAPI Loader: Github should generate the correct schema 1`] = `
"schema {
  query: Query
  mutation: Mutation
}

directive @oneOf on INPUT_OBJECT | FIELD_DEFINITION

type Query {
  "Lists all the emojis available to use on GitHub."
  emojis(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
  ): emojis
  "List public events."
  events(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
  ): events
  "List Feeds.\\nGitHub provides several timeline resources in Atom format. The Feeds API\\n lists all the feeds available to the authenticating user.\\n"
  feeds(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
  ): feeds
  "List the authenticated user's gists or if called anonymously, this will\\nreturn all public gists.\\n"
  gists(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Timestamp in ISO 8601 format YYYY-MM-DDTHH:MM:SSZ.\\nOnly gists updated at or after this time are returned."
    since: String
  ): [query_gists_items]
  "List all public gists."
  gists_public(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Timestamp in ISO 8601 format YYYY-MM-DDTHH:MM:SSZ.\\nOnly gists updated at or after this time are returned."
    since: String
  ): [query_gists_items]
  "List the authenticated user's starred gists."
  gists_starred(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Timestamp in ISO 8601 format YYYY-MM-DDTHH:MM:SSZ.\\nOnly gists updated at or after this time are returned."
    since: String
  ): [query_gists_items]
  "Get a single gist."
  gists_by_id(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Id of gist."
    id: Int!
  ): gist
  "List comments on a gist."
  gists_by_id_comments(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Id of gist."
    id: Int!
  ): [query_gists_by_id_comments_items]
  "Get a single comment."
  gists_by_id_comments_by_commentId(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Id of gist."
    id: Int!
    "Id of comment."
    commentId: Int!
  ): comment!
  "Check if a gist is starred."
  gists_by_id_star(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Id of gist."
    id: Int!
  ): Void
  "Listing available templates.\\nList all templates available to pass as an option when creating a repository.\\n"
  gitignore_templates(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
  ): String
  "Get a single template."
  gitignore_templates_by_language(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    language: String!
  ): gitignore_lang
  "List issues.\\nList all issues across all the authenticated user's visible repositories.\\n"
  issues(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    filter: queryInput_issues_filter! = all
    state: queryInput_issues_state! = open
    "String list of comma separated Label names. Example - bug,ui,@high."
    labels: String!
    sort: queryInput_issues_sort! = created
    direction: queryInput_issues_direction! = desc
    "Optional string of a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.\\nOnly issues updated at or after this time are returned."
    since: String
  ): [query_issues_items]
  "Find issues by state and keyword."
  legacy_issues_search_by_owner_by_repository_by_state_by_keyword(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    owner: String!
    repository: String!
    state: queryInput_legacy_issues_search_by_owner_by_repository_by_state_by_keyword_state!
    "The search term."
    keyword: String!
  ): search_issues_by_keyword
  "Find repositories by keyword. Note, this legacy method does not follow the v3 pagination pattern. This method returns up to 100 results per page and pages can be fetched using the start_page parameter."
  legacy_repos_search_by_keyword(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "The search term"
    keyword: String!
    order: queryInput_legacy_repos_search_by_keyword_order = desc
    "Filter results by language"
    language: String
    "The page number to fetch"
    start_page: String
    sort: queryInput_legacy_repos_search_by_keyword_sort
  ): search_repositories_by_keyword
  "This API call is added for compatibility reasons only."
  legacy_user_email_by_email(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "The email address"
    email: String!
  ): search_user_by_email
  "Find users by keyword."
  legacy_user_search_by_keyword(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "The search term"
    keyword: String!
    order: queryInput_legacy_user_search_by_keyword_order = desc
    "The page number to fetch"
    start_page: String
    sort: queryInput_legacy_user_search_by_keyword_sort
  ): search_users_by_keyword
  "This gives some information about GitHub.com, the service."
  meta(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
  ): meta
  "List public events for a network of repositories."
  networks_by_owner_by_repo_events(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of the owner."
    owner: String!
    "Name of repository."
    repo: String!
  ): events
  "List your notifications.\\nList all notifications for the current user, grouped by repository.\\n"
  notifications(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "True to show notifications marked as read."
    all: Boolean
    "True to show only notifications in which the user is directly participating\\nor mentioned."
    participating: Boolean
    "The time should be passed in as UTC in the ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.\\nExample: \\"2012-10-09T23:39:01Z\\"."
    since: String
  ): notifications
  "View a single thread."
  notifications_threads_by_id(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Id of thread."
    id: Int!
  ): notifications
  "Get a Thread Subscription."
  notifications_threads_by_id_subscription(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Id of thread."
    id: Int!
  ): subscription
  "Get an Organization."
  orgs_by_org(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of organisation."
    org: String!
  ): organization
  "List public events for an organization."
  orgs_by_org_events(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of organisation."
    org: String!
  ): events
  "List issues.\\nList all issues for a given organization for the authenticated user.\\n"
  orgs_by_org_issues(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of organisation."
    org: String!
    filter: queryInput_orgs_by_org_issues_filter! = all
    state: queryInput_orgs_by_org_issues_state! = open
    "String list of comma separated Label names. Example - bug,ui,@high."
    labels: String!
    sort: queryInput_orgs_by_org_issues_sort! = created
    direction: queryInput_orgs_by_org_issues_direction! = desc
    "Optional string of a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.\\nOnly issues updated at or after this time are returned."
    since: String
  ): [query_issues_items]
  "Members list.\\nList all users who are members of an organization. A member is a user tha\\nbelongs to at least 1 team in the organization. If the authenticated user\\nis also an owner of this organization then both concealed and public members\\nwill be returned. If the requester is not an owner of the organization the\\nquery will be redirected to the public members list.\\n"
  orgs_by_org_members(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of organisation."
    org: String!
  ): [query_orgs_by_org_members_items]
  "Check if a user is, publicly or privately, a member of the organization."
  orgs_by_org_members_by_username(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of organisation."
    org: String!
    "Name of the user."
    username: String!
  ): Void
  "Public members list.\\nMembers of an organization can choose to have their membership publicized\\nor not.\\n"
  orgs_by_org_public_members(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of organisation."
    org: String!
  ): [query_orgs_by_org_members_items]
  "Check public membership."
  orgs_by_org_public_members_by_username(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of organisation."
    org: String!
    "Name of the user."
    username: String!
  ): Void
  "List repositories for the specified org."
  orgs_by_org_repos(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of organisation."
    org: String!
    type: queryInput_orgs_by_org_repos_type = all
  ): [query_orgs_by_org_repos_items]
  "List teams."
  orgs_by_org_teams(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of organisation."
    org: String!
  ): [query_orgs_by_org_teams_items]
  "Get your current rate limit status\\nNote: Accessing this endpoint does not count against your rate limit.\\n"
  rate_limit(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
  ): rate_limit
  "Get repository."
  repos_by_owner_by_repo(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
  ): repo
  "List assignees.\\nThis call lists all the available assignees (owner + collaborators) to which\\nissues may be assigned.\\n"
  repos_by_owner_by_repo_assignees(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
  ): [query_repos_by_owner_by_repo_assignees_items]
  "Check assignee.\\nYou may also check to see if a particular user is an assignee for a repository.\\n"
  repos_by_owner_by_repo_assignees_by_assignee(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "Login of the assignee."
    assignee: String!
  ): Void
  "Get list of branches"
  repos_by_owner_by_repo_branches(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
  ): [query_repos_by_owner_by_repo_branches_items]
  "Get Branch"
  repos_by_owner_by_repo_branches_by_branch(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "Name of the branch."
    branch: String!
  ): branch
  "List.\\nWhen authenticating as an organization owner of an organization-owned\\nrepository, all organization owners are included in the list of\\ncollaborators. Otherwise, only users with access to the repository are\\nreturned in the collaborators list.\\n"
  repos_by_owner_by_repo_collaborators(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
  ): [query_orgs_by_org_members_items]
  "Check if user is a collaborator"
  repos_by_owner_by_repo_collaborators_by_user(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "Login of the user."
    user: String!
  ): Void
  "List commit comments for a repository.\\nComments are ordered by ascending ID.\\n"
  repos_by_owner_by_repo_comments(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
  ): [query_repos_by_owner_by_repo_comments_items]
  "Get a single commit comment."
  repos_by_owner_by_repo_comments_by_commentId(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "Id of comment."
    commentId: Int!
  ): commitComments
  "List commits on a repository."
  repos_by_owner_by_repo_commits(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "The time should be passed in as UTC in the ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.\\nExample: \\"2012-10-09T23:39:01Z\\"."
    since: String
    "Sha or branch to start listing commits from."
    sha: String
    "Only commits containing this file path will be returned."
    path: String
    "GitHub login, name, or email by which to filter by commit author."
    author: String
    "ISO 8601 Date - Only commits before this date will be returned."
    until: String
  ): [query_repos_by_owner_by_repo_commits_items]
  "Get the combined Status for a specific Ref\\nThe Combined status endpoint is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the blog post for full details.\\nTo access this endpoint during the preview period, you must provide a custom media type in the Accept header:\\napplication/vnd.github.she-hulk-preview+json\\n"
  repos_by_owner_by_repo_commits_by_ref_status(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    ref: String!
  ): [query_repos_by_owner_by_repo_commits_by_ref_status_items]
  "Get a single commit."
  repos_by_owner_by_repo_commits_by_shaCode(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "SHA-1 code of the commit."
    shaCode: String!
  ): commit
  "List comments for a single commitList comments for a single commit."
  repos_by_owner_by_repo_commits_by_shaCode_comments(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "SHA-1 code of the commit."
    shaCode: String!
  ): [query_repos_by_owner_by_repo_comments_items]
  "Compare two commits"
  repos_by_owner_by_repo_compare_by_baseId___by_headId(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    baseId: String!
    headId: String!
  ): compare_commits
  "Get contents.\\nThis method returns the contents of a file or directory in a repository.\\nFiles and symlinks support a custom media type for getting the raw content.\\nDirectories and submodules do not support custom media types.\\nNote: This API supports files up to 1 megabyte in size.\\nHere can be many outcomes. For details see \\"http://developer.github.com/v3/repos/contents/\\"\\n"
  repos_by_owner_by_repo_contents_by_path(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "The content path."
    path: String
    "The String name of the Commit/Branch/Tag. Defaults to 'master'."
    ref: String
  ): contents_path
  "Get list of contributors."
  repos_by_owner_by_repo_contributors(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "Set to 1 or true to include anonymous contributors in results."
    anon: String!
  ): [query_repos_by_owner_by_repo_contributors_items]
  "Users with pull access can view deployments for a repository"
  repos_by_owner_by_repo_deployments(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
  ): [query_repos_by_owner_by_repo_deployments_items]
  "Users with pull access can view deployment statuses for a deployment"
  repos_by_owner_by_repo_deployments_by_id_statuses(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "The Deployment ID to list the statuses from."
    id: Int!
  ): [query_repos_by_owner_by_repo_deployments_by_id_statuses_items]
  "Deprecated. List downloads for a repository."
  repos_by_owner_by_repo_downloads(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
  ): downloads
  "Deprecated. Get a single download."
  repos_by_owner_by_repo_downloads_by_downloadId(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "Id of download."
    downloadId: Int!
  ): downloads
  "Get list of repository events."
  repos_by_owner_by_repo_events(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
  ): events
  "List forks."
  repos_by_owner_by_repo_forks(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    sort: queryInput_repos_by_owner_by_repo_forks_sort = newes
  ): [query_repos_by_owner_by_repo_forks_items]
  "Get a Blob.\\nSince blobs can be any arbitrary binary data, the input and responses for\\nthe blob API takes an encoding parameter that can be either utf-8 or\\nbase64. If your data cannot be losslessly sent as a UTF-8 string, you can\\nbase64 encode it.\\n"
  repos_by_owner_by_repo_git_blobs_by_shaCode(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "SHA-1 code."
    shaCode: String!
  ): blob!
  "Get a Commit."
  repos_by_owner_by_repo_git_commits_by_shaCode(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "SHA-1 code."
    shaCode: String!
  ): repoCommit
  "Get all References"
  repos_by_owner_by_repo_git_refs(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
  ): [query_repos_by_owner_by_repo_git_refs_items]
  "Get a Reference"
  repos_by_owner_by_repo_git_refs_by_ref(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    ref: String!
  ): headBranch!
  "Get a Tag."
  repos_by_owner_by_repo_git_tags_by_shaCode(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    shaCode: String!
  ): tag!
  "Get a Tree."
  repos_by_owner_by_repo_git_trees_by_shaCode(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "Tree SHA."
    shaCode: String!
    "Get a Tree Recursively. (0 or 1)"
    recursive: Int
  ): tree!
  "Get list of hooks."
  repos_by_owner_by_repo_hooks(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
  ): [query_repos_by_owner_by_repo_hooks_items]
  "Get single hook."
  repos_by_owner_by_repo_hooks_by_hookId(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "Id of hook."
    hookId: Int!
  ): [query_repos_by_owner_by_repo_hooks_items]
  "List issues for a repository."
  repos_by_owner_by_repo_issues(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    filter: queryInput_repos_by_owner_by_repo_issues_filter! = all
    state: queryInput_repos_by_owner_by_repo_issues_state! = open
    "String list of comma separated Label names. Example - bug,ui,@high."
    labels: String!
    sort: queryInput_repos_by_owner_by_repo_issues_sort! = created
    direction: queryInput_repos_by_owner_by_repo_issues_direction! = desc
    "Optional string of a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.\\nOnly issues updated at or after this time are returned."
    since: String
  ): [query_issues_items]
  "List comments in a repository."
  repos_by_owner_by_repo_issues_comments(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "Ignored without 'sort' parameter."
    direction: String
    sort: queryInput_repos_by_owner_by_repo_issues_comments_sort
    "The time should be passed in as UTC in the ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.\\nExample: \\"2012-10-09T23:39:01Z\\"."
    since: String
  ): [query_repos_by_owner_by_repo_issues_comments_items]
  "Get a single comment."
  repos_by_owner_by_repo_issues_comments_by_commentId(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "ID of comment."
    commentId: Int!
  ): issuesComment
  "List issue events for a repository."
  repos_by_owner_by_repo_issues_events(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
  ): events
  "Get a single event."
  repos_by_owner_by_repo_issues_events_by_eventId(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "Id of the event."
    eventId: Int!
  ): event
  "Get a single issue"
  repos_by_owner_by_repo_issues_by_number(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "Number of issue."
    number: Int!
  ): issue!
  "List comments on an issue."
  repos_by_owner_by_repo_issues_by_number_comments(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "Number of issue."
    number: Int!
  ): [query_repos_by_owner_by_repo_issues_comments_items]
  "List events for an issue."
  repos_by_owner_by_repo_issues_by_number_events(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "Number of issue."
    number: Int!
  ): events
  "List labels on an issue."
  repos_by_owner_by_repo_issues_by_number_labels(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "Number of issue."
    number: Int!
  ): [query_repos_by_owner_by_repo_issues_by_number_labels_items]
  "Get list of keys."
  repos_by_owner_by_repo_keys(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
  ): [query_repos_by_owner_by_repo_keys_items]
  "Get a key"
  repos_by_owner_by_repo_keys_by_keyId(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "Id of key."
    keyId: Int!
  ): user_keys_keyId
  "List all labels for this repository."
  repos_by_owner_by_repo_labels(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
  ): [query_repos_by_owner_by_repo_issues_by_number_labels_items]
  "Get a single label."
  repos_by_owner_by_repo_labels_by_name(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "Name of the label."
    name: String!
  ): label
  "List languages.\\nList languages for the specified repository. The value on the right of a\\nlanguage is the number of bytes of code written in that language.\\n"
  repos_by_owner_by_repo_languages(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
  ): JSON
  "List milestones for a repository."
  repos_by_owner_by_repo_milestones(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    state: queryInput_repos_by_owner_by_repo_milestones_state = open
    "Ignored without 'sort' parameter."
    direction: String
    sort: queryInput_repos_by_owner_by_repo_milestones_sort = due_date
  ): milestone
  "Get a single milestone."
  repos_by_owner_by_repo_milestones_by_number(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "Number of milestone."
    number: Int!
  ): milestone
  "Get labels for every issue in a milestone."
  repos_by_owner_by_repo_milestones_by_number_labels(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "Number of milestone."
    number: Int!
  ): [query_repos_by_owner_by_repo_issues_by_number_labels_items]
  "List your notifications in a repository\\nList all notifications for the current user.\\n"
  repos_by_owner_by_repo_notifications(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "True to show notifications marked as read."
    all: Boolean
    "True to show only notifications in which the user is directly participating\\nor mentioned."
    participating: Boolean
    "The time should be passed in as UTC in the ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.\\nExample: \\"2012-10-09T23:39:01Z\\"."
    since: String
  ): notifications
  "List pull requests."
  repos_by_owner_by_repo_pulls(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    state: queryInput_repos_by_owner_by_repo_pulls_state = open
    "Filter pulls by head user and branch name in the format of 'user:ref-name'.\\nExample: github:new-script-format."
    head: String
    "Filter pulls by base branch name. Example - gh-pages."
    base: String
  ): [query_repos_by_owner_by_repo_pulls_items]
  "List comments in a repository.\\nBy default, Review Comments are ordered by ascending ID.\\n"
  repos_by_owner_by_repo_pulls_comments(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "Ignored without 'sort' parameter."
    direction: String
    sort: queryInput_repos_by_owner_by_repo_pulls_comments_sort
    "The time should be passed in as UTC in the ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.\\nExample: \\"2012-10-09T23:39:01Z\\"."
    since: String
  ): [query_repos_by_owner_by_repo_issues_comments_items]
  "Get a single comment."
  repos_by_owner_by_repo_pulls_comments_by_commentId(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "Id of comment."
    commentId: Int!
  ): pullsComment
  "Get a single pull request."
  repos_by_owner_by_repo_pulls_by_number(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "Id of pull."
    number: Int!
  ): pullRequest
  "List comments on a pull request."
  repos_by_owner_by_repo_pulls_by_number_comments(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "Id of pull."
    number: Int!
  ): pullsComment
  "List commits on a pull request."
  repos_by_owner_by_repo_pulls_by_number_commits(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "Id of pull."
    number: Int!
  ): [query_repos_by_owner_by_repo_commits_items]
  "List pull requests files."
  repos_by_owner_by_repo_pulls_by_number_files(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "Id of pull."
    number: Int!
  ): [query_repos_by_owner_by_repo_pulls_items]
  "Get if a pull request has been merged."
  repos_by_owner_by_repo_pulls_by_number_merge(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "Id of pull."
    number: Int!
  ): Void
  "Get the README.\\nThis method returns the preferred README for a repository.\\n"
  repos_by_owner_by_repo_readme(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "The String name of the Commit/Branch/Tag. Defaults to master."
    ref: String
  ): contents_path
  "Users with push access to the repository will receive all releases (i.e., published releases and draft releases). Users with pull access will receive published releases only"
  repos_by_owner_by_repo_releases(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
  ): [query_repos_by_owner_by_repo_releases_items]
  "Get a single release asset"
  repos_by_owner_by_repo_releases_assets_by_id(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    id: String!
  ): asset
  "Get a single release"
  repos_by_owner_by_repo_releases_by_id(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    id: String!
  ): release
  "List assets for a release"
  repos_by_owner_by_repo_releases_by_id_assets(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    id: String!
  ): [query_repos_by_owner_by_repo_releases_by_id_assets_items2]
  "List Stargazers."
  repos_by_owner_by_repo_stargazers(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
  ): [query_orgs_by_org_members_items]
  "Get the number of additions and deletions per week.\\nReturns a weekly aggregate of the number of additions and deletions pushed\\nto a repository.\\n"
  repos_by_owner_by_repo_stats_code_frequency(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
  ): [Int]
  "Get the last year of commit activity data.\\nReturns the last year of commit activity grouped by week. The days array\\nis a group of commits per day, starting on Sunday.\\n"
  repos_by_owner_by_repo_stats_commit_activity(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
  ): [query_repos_by_owner_by_repo_stats_commit_activity_items]
  "Get contributors list with additions, deletions, and commit counts."
  repos_by_owner_by_repo_stats_contributors(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
  ): [query_repos_by_owner_by_repo_stats_contributors_items]
  "Get the weekly commit count for the repo owner and everyone else."
  repos_by_owner_by_repo_stats_participation(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
  ): participationStats
  "Get the number of commits per hour in each day.\\nEach array contains the day number, hour number, and number of commits\\n0-6 Sunday - Saturday\\n0-23 Hour of day\\nNumber of commits\\n\\nFor example, [2, 14, 25] indicates that there were 25 total commits, during\\nthe 2.00pm hour on Tuesdays. All times are based on the time zone of\\nindividual commits.\\n"
  repos_by_owner_by_repo_stats_punch_card(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
  ): [Int]
  "List Statuses for a specific Ref."
  repos_by_owner_by_repo_statuses_by_ref(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "Ref to list the statuses from. It can be a SHA, a branch name, or a tag name."
    ref: String!
  ): [query_repos_by_owner_by_repo_statuses_by_ref_items]
  "List watchers."
  repos_by_owner_by_repo_subscribers(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
  ): [query_orgs_by_org_members_items]
  "Get a Repository Subscription."
  repos_by_owner_by_repo_subscription(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
  ): subscribition
  "Get list of tags."
  repos_by_owner_by_repo_tags(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
  ): tags
  "Get list of teams"
  repos_by_owner_by_repo_teams(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
  ): [query_orgs_by_org_teams_items]
  "List Stargazers. New implementation."
  repos_by_owner_by_repo_watchers(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
  ): [query_orgs_by_org_members_items]
  "Get archive link.\\nThis method will return a 302 to a URL to download a tarball or zipball\\narchive for a repository. Please make sure your HTTP framework is\\nconfigured to follow redirects or you will need to use the Location header\\nto make a second GET request.\\nNote: For private repositories, these links are temporary and expire quickly.\\n"
  repos_by_owner_by_repo_by_archive_format_by_path(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    archive_format: queryInput_repos_by_owner_by_repo_by_archive_format_by_path_archive_format!
    "Valid Git reference, defaults to 'master'."
    path: String!
  ): JSON
  "List all public repositories.\\nThis provides a dump of every public repository, in the order that they\\nwere created.\\nNote: Pagination is powered exclusively by the since parameter. is the\\nLink header to get the URL for the next page of repositories.\\n"
  repositories(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "The time should be passed in as UTC in the ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.\\nExample: \\"2012-10-09T23:39:01Z\\"."
    since: String
  ): [query_repositories_items]
  "Search code."
  search_code(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    order: queryInput_search_code_order = desc
    "The search terms. This can be any combination of the supported code\\nsearch parameters:\\n'Search In' Qualifies which fields are searched. With this qualifier\\nyou can restrict the search to just the file contents, the file path,\\nor both.\\n'Languages' Searches code based on the language it's written in.\\n'Forks' Filters repositories based on the number of forks, and/or\\nwhether code from forked repositories should be included in the results\\nat all.\\n'Size' Finds files that match a certain size (in bytes).\\n'Path' Specifies the path that the resulting file must be at.\\n'Extension' Matches files with a certain extension.\\n'Users' or 'Repositories' Limits searches to a specific user or repository."
    q: String!
    sort: queryInput_search_code_sort
  ): search_code
  "Find issues by state and keyword. (This method returns up to 100 results per page.)"
  search_issues(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    order: queryInput_search_issues_order = desc
    "The q search term can also contain any combination of the supported issue search qualifiers:"
    q: String!
    sort: queryInput_search_issues_sort
  ): search_issues
  "Search repositories."
  search_repositories(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    order: queryInput_search_repositories_order = desc
    "The search terms. This can be any combination of the supported repository\\nsearch parameters:\\n'Search In' Qualifies which fields are searched. With this qualifier you\\ncan restrict the search to just the repository name, description, readme,\\nor any combination of these.\\n'Size' Finds repositories that match a certain size (in kilobytes).\\n'Forks' Filters repositories based on the number of forks, and/or whether\\nforked repositories should be included in the results at all.\\n'Created' and 'Last Updated' Filters repositories based on times of\\ncreation, or when they were last updated.\\n'Users or Repositories' Limits searches to a specific user or repository.\\n'Languages' Searches repositories based on the language they are written in.\\n'Stars' Searches repositories based on the number of stars."
    q: String!
    sort: queryInput_search_repositories_sort
  ): search_repositories
  "Search users."
  search_users(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    order: queryInput_search_users_order = desc
    "The search terms. This can be any combination of the supported user\\nsearch parameters:\\n'Search In' Qualifies which fields are searched. With this qualifier you\\ncan restrict the search to just the username, public email, full name,\\nlocation, or any combination of these.\\n'Repository count' Filters users based on the number of repositories they\\nhave.\\n'Location' Filter users by the location indicated in their profile.\\n'Language' Search for users that have repositories that match a certain\\nlanguage.\\n'Created' Filter users based on when they joined.\\n'Followers' Filter users based on the number of followers they have."
    q: String!
    sort: queryInput_search_users_sort
  ): search_users
  "Get team."
  teams_by_teamId(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Id of team."
    teamId: Int!
  ): team
  "List team members.\\nIn order to list members in a team, the authenticated user must be a member\\nof the team.\\n"
  teams_by_teamId_members(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Id of team."
    teamId: Int!
  ): [query_orgs_by_org_members_items]
  "The \\"Get team member\\" API is deprecated and is scheduled for removal in the next major version of the API. We recommend using the Get team membership API instead. It allows you to get both active and pending memberships.\\n\\nGet team member.\\nIn order to get if a user is a member of a team, the authenticated user mus\\nbe a member of the team.\\n"
  teams_by_teamId_members_by_username(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Id of team."
    teamId: Int!
    "Name of a member."
    username: String!
  ): Void
  "Get team membership.\\nIn order to get a user's membership with a team, the authenticated user must be a member of the team or an owner of the team's organization.\\n"
  teams_by_teamId_memberships_by_username(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Id of team."
    teamId: Int!
    "Name of a member."
    username: String!
  ): teamMembership
  "List team repos"
  teams_by_teamId_repos(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Id of team."
    teamId: Int!
  ): [query_teams_by_teamId_repos_items]
  "Check if a team manages a repository"
  teams_by_teamId_repos_by_owner_by_repo(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Id of team."
    teamId: Int!
    "Name of a repository owner."
    owner: String!
    "Name of a repository."
    repo: String!
  ): JSON
  "Get the authenticated user."
  user(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
  ): user
  "List email addresses for a user.\\nIn the final version of the API, this method will return an array of hashes\\nwith extended information for each email address indicating if the address\\nhas been verified and if it's primary email address for GitHub.\\nUntil API v3 is finalized, use the application/vnd.github.v3 media type to\\nget other response format.\\n"
  user_emails(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
  ): [String]!
  "List the authenticated user's followers"
  user_followers(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
  ): [query_orgs_by_org_members_items]
  "List who the authenticated user is following."
  user_following(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
  ): [query_orgs_by_org_members_items]
  "Check if you are following a user."
  user_following_by_username(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of user."
    username: String!
  ): Void
  "List issues.\\nList all issues across owned and member repositories for the authenticated\\nuser.\\n"
  user_issues(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    filter: queryInput_user_issues_filter! = all
    state: queryInput_user_issues_state! = open
    "String list of comma separated Label names. Example - bug,ui,@high."
    labels: String!
    sort: queryInput_user_issues_sort! = created
    direction: queryInput_user_issues_direction! = desc
    "Optional string of a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.\\nOnly issues updated at or after this time are returned."
    since: String
  ): [query_issues_items]
  "List your public keys.\\nLists the current user's keys. Management of public keys via the API requires\\nthat you are authenticated through basic auth, or OAuth with the 'user', 'write:public_key' scopes.\\n"
  user_keys(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
  ): String
  "Get a single public key."
  user_keys_by_keyId(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "ID of key."
    keyId: Int!
  ): user_keys_keyId
  "List public and private organizations for the authenticated user."
  user_orgs(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
  ): String
  "List repositories for the authenticated user. Note that this does not include\\nrepositories owned by organizations which the user can access. You can lis\\nuser organizations and list organization repositories separately.\\n"
  user_repos(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    type: queryInput_user_repos_type = all
  ): [query_orgs_by_org_repos_items]
  "List repositories being starred by the authenticated user."
  user_starred(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Ignored without 'sort' parameter."
    direction: String
    sort: queryInput_user_starred_sort = created
  ): String
  "Check if you are starring a repository."
  user_starred_by_owner_by_repo(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of a repository owner."
    owner: String!
    "Name of a repository."
    repo: String!
  ): Void
  "List repositories being watched by the authenticated user."
  user_subscriptions(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
  ): [query_user_subscriptions_items]
  "Check if you are watching a repository."
  user_subscriptions_by_owner_by_repo(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of the owner."
    owner: String!
    "Name of repository."
    repo: String!
  ): Void
  "List all of the teams across all of the organizations to which the authenticated user belongs. This method requires user or repo scope when authenticating via OAuth."
  user_teams(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
  ): [query_user_teams_items]
  "Get all users.\\nThis provides a dump of every user, in the order that they signed up for GitHub.\\nNote: Pagination is powered exclusively by the since parameter. Use the Link\\nheader to get the URL for the next page of users.\\n"
  users(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "The integer ID of the last User that you've seen."
    since: Int
  ): [query_orgs_by_org_members_items]
  "Get a single user."
  users_by_username(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of user."
    username: String!
  ): [query_orgs_by_org_members_items]
  "If you are authenticated as the given user, you will see your private events. Otherwise, you'll only see public events."
  users_by_username_events(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of user."
    username: String!
  ): JSON
  "This is the user's organization dashboard. You must be authenticated as the user to view this."
  users_by_username_events_orgs_by_org(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of user."
    username: String!
    org: String!
  ): JSON
  "List a user's followers"
  users_by_username_followers(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of user."
    username: String!
  ): [query_orgs_by_org_members_items]
  "Check if one user follows another."
  users_by_username_following_by_targetUser(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of user."
    username: String!
    "Name of user."
    targetUser: String!
  ): Void
  "List a users gists."
  users_by_username_gists(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of user."
    username: String!
    "The time should be passed in as UTC in the ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.\\nExample: \\"2012-10-09T23:39:01Z\\"."
    since: String
  ): [query_gists_items]
  "List public keys for a user.\\nLists the verified public keys for a user. This is accessible by anyone.\\n"
  users_by_username_keys(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of user."
    username: String!
  ): String
  "List all public organizations for a user."
  users_by_username_orgs(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of user."
    username: String!
  ): String
  "These are events that you'll only see public events."
  users_by_username_received_events(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of user."
    username: String!
  ): JSON
  "List public events that a user has received"
  users_by_username_received_events_public(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of user."
    username: String!
  ): JSON
  "List public repositories for the specified user."
  users_by_username_repos(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of user."
    username: String!
    type: queryInput_users_by_username_repos_type = all
  ): [query_orgs_by_org_repos_items]
  "List repositories being starred by a user."
  users_by_username_starred(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of user."
    username: String!
  ): JSON
  "List repositories being watched by a user."
  users_by_username_subscriptions(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of user."
    username: String!
  ): JSON
}

type emojis {
  _100: String
  _1234: String
  _0PLUS_1: String
  NEGATIVE_1: String
  _8ball: String
  a: String
  ab: String
}

type events {
  actor: query_events_actor
  created_at: JSON
  id: Int
  org: query_events_org
  payload: JSON
  public: Boolean
  repo: query_events_repo
  type: String
}

type query_events_actor {
  avatar_url: String
  gravatar_id: String
  id: Int
  login: String
  url: String
}

"The \`JSON\` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf)."
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type query_events_org {
  avatar_url: String
  gravatar_id: String
  id: Int
  login: String
  url: String
}

type query_events_repo {
  id: Int
  name: String
  url: String
}

type feeds {
  links: query_feeds_links
  current_user_actor_url: String
  current_user_organization_url: String
  current_user_public: String
  current_user_url: String
  timeline_url: String
  user_url: String
}

type query_feeds_links {
  current_user: query_feeds_links_current_user
  current_user_actor: query_feeds_links_current_user_actor
  current_user_organization: query_feeds_links_current_user_organization
  current_user_public: query_feeds_links_current_user_public
  timeline: query_feeds_links_timeline
  user: query_feeds_links_user
}

type query_feeds_links_current_user {
  href: String
  type: String
}

type query_feeds_links_current_user_actor {
  href: String
  type: String
}

type query_feeds_links_current_user_organization {
  href: String
  type: String
}

type query_feeds_links_current_user_public {
  href: String
  type: String
}

type query_feeds_links_timeline {
  href: String
  type: String
}

type query_feeds_links_user {
  href: String
  type: String
}

type query_gists_items {
  comments: Int
  comments_url: String
  created_at: String
  description: String
  files: query_gists_items_files
  git_pull_url: String
  git_push_url: String
  html_url: String
  id: String
  public: Boolean
  url: String
  user: query_gists_items_user
}

type query_gists_items_files {
  ring_erl: query_gists_items_files_ring_erl
}

type query_gists_items_files_ring_erl {
  filename: String
  raw_url: String
  size: Int
}

type query_gists_items_user {
  avatar_url: String
  gravatar_id: String
  id: Int
  login: String
  url: String
}

type gist {
  comments: Int
  comments_url: String
  "Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ."
  created_at: String
  description: String
  files: query_gists_by_id_files
  forks: [query_gists_by_id_forks_items]
  git_pull_url: String
  git_push_url: String
  history: [query_gists_by_id_history_items]
  html_url: String
  id: String
  public: Boolean
  url: String
  user: query_gists_by_id_user
}

type query_gists_by_id_files {
  ring_erl: query_gists_by_id_files_ring_erl
}

type query_gists_by_id_files_ring_erl {
  filename: String
  raw_url: String
  size: Int
}

type query_gists_by_id_forks_items {
  "Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ."
  created_at: String
  url: String
  user: query_gists_by_id_forks_items_user
}

type query_gists_by_id_forks_items_user {
  avatar_url: String
  gravatar_id: String
  id: Int
  login: String
  url: String
}

type query_gists_by_id_history_items {
  change_status: query_gists_by_id_history_items_change_status
  "Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ."
  committed_at: String
  url: String
  user: query_gists_by_id_history_items_user
  version: String
}

type query_gists_by_id_history_items_change_status {
  additions: Int
  deletions: Int
  total: Int
}

type query_gists_by_id_history_items_user {
  avatar_url: String
  gravatar_id: String
  id: Int
  login: String
  url: String
}

type query_gists_by_id_user {
  avatar_url: String
  gravatar_id: String
  id: Int
  login: String
  url: String
}

type query_gists_by_id_comments_items {
  body: String
  "ISO 8601."
  created_at: String
  id: Int
  url: String
  user: query_gists_by_id_comments_items_user
}

type query_gists_by_id_comments_items_user {
  avatar_url: String
  gravatar_id: String
  id: Int
  login: String
  url: String
}

type comment {
  body: String
}

"Represents empty values"
scalar Void

type gitignore_lang {
  name: String
  source: String
}

type query_issues_items {
  assignee: query_issues_items_assignee
  body: String
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  closed_at: String
  comments: Int
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  created_at: String
  html_url: String
  labels: [query_issues_items_labels_items]
  milestone: query_issues_items_milestone
  number: Int
  pull_request: query_issues_items_pull_request
  state: query_issues_items_state
  title: String
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  updated_at: String
  url: String
  user: query_issues_items_user
}

type query_issues_items_assignee {
  avatar_url: String
  gravatar_id: String
  id: Int
  login: String
  url: String
}

type query_issues_items_labels_items {
  color: String
  name: String
  url: String
}

type query_issues_items_milestone {
  closed_issues: Int
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  created_at: String
  creator: query_issues_items_milestone_creator
  description: String
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  due_on: String
  number: Int
  open_issues: Int
  state: query_issues_items_milestone_state
  title: String
  url: String
}

type query_issues_items_milestone_creator {
  avatar_url: String
  gravatar_id: String
  id: Int
  login: String
  url: String
}

enum query_issues_items_milestone_state {
  open
  closed
}

type query_issues_items_pull_request {
  diff_url: String
  html_url: String
  patch_url: String
}

enum query_issues_items_state {
  open
  closed
}

type query_issues_items_user {
  avatar_url: String
  gravatar_id: String
  id: Int
  login: String
  url: String
}

"Issues assigned to you / created by you / mentioning you / you're\\nsubscribed to updates for / All issues the authenticated user can see"
enum queryInput_issues_filter {
  assigned
  created
  mentioned
  subscribed
  all
}

enum queryInput_issues_state {
  open
  closed
}

enum queryInput_issues_sort {
  created
  updated
  comments
}

enum queryInput_issues_direction {
  asc
  desc
}

type search_issues_by_keyword {
  issues: [query_legacy_issues_search_by_owner_by_repository_by_state_by_keyword_issues_items]
}

type query_legacy_issues_search_by_owner_by_repository_by_state_by_keyword_issues_items {
  body: String
  comments: Int
  created_at: String
  gravatar_id: String
  html_url: String
  labels: [String]
  number: Int
  position: Int
  state: String
  title: String
  updated_at: String
  user: String
  votes: Int
}

"Indicates the state of the issues to return. Can be either open or closed."
enum queryInput_legacy_issues_search_by_owner_by_repository_by_state_by_keyword_state {
  open
  closed
}

type search_repositories_by_keyword {
  repositories: [query_legacy_repos_search_by_keyword_repositories_items]
}

type query_legacy_repos_search_by_keyword_repositories_items {
  created: String
  created_at: String
  description: String
  followers: Int
  fork: Boolean
  forks: Int
  has_downloads: Boolean
  has_issues: Boolean
  has_wiki: Boolean
  homepage: String
  language: String
  name: String
  open_issues: Int
  owner: String
  private: Boolean
  pushed: String
  pushed_at: String
  score: Float
  size: Int
  type: String
  url: String
  username: String
  watchers: Int
}

"The sort field. if sort param is provided. Can be either asc or desc."
enum queryInput_legacy_repos_search_by_keyword_order {
  desc
  asc
}

"The sort field. One of stars, forks, or updated. Default: results are sorted by best match."
enum queryInput_legacy_repos_search_by_keyword_sort {
  updated
  stars
  forks
}

type search_user_by_email {
  user: query_legacy_user_email_by_email_user
}

type query_legacy_user_email_by_email_user {
  blog: String
  company: String
  created: String
  created_at: String
  email: String
  followers_count: Int
  following_count: Int
  gravatar_id: String
  id: Int
  location: String
  login: String
  name: String
  public_gist_count: Int
  public_repo_count: Int
  type: String
}

type search_users_by_keyword {
  users: [query_legacy_user_search_by_keyword_users_items]
}

type query_legacy_user_search_by_keyword_users_items {
  created: String
  created_at: String
  followers: Int
  followers_count: Int
  fullname: String
  gravatar_id: String
  id: String
  language: String
  location: String
  login: String
  name: String
  public_repo_count: Int
  repos: Int
  score: Float
  type: String
  username: String
}

"The sort field. if sort param is provided. Can be either asc or desc."
enum queryInput_legacy_user_search_by_keyword_order {
  desc
  asc
}

"The sort field. One of stars, forks, or updated. Default: results are sorted by best match."
enum queryInput_legacy_user_search_by_keyword_sort {
  updated
  stars
  forks
}

type meta {
  git: [String]
  hooks: [String]
}

type notifications {
  id: Int
  last_read_at: String
  reason: String
  repository: query_notifications_repository
  subject: query_notifications_subject
  unread: Boolean
  updated_at: String
  url: String
}

type query_notifications_repository {
  description: String
  fork: Boolean
  full_name: String
  html_url: String
  id: Int
  name: String
  owner: query_notifications_repository_owner
  private: Boolean
  url: String
}

type query_notifications_repository_owner {
  avatar_url: String
  gravatar_id: String
  id: Int
  login: String
  url: String
}

type query_notifications_subject {
  latest_comment_url: String
  title: String
  type: String
  url: String
}

type subscription {
  created_at: String
  ignored: Boolean
  reason: Boolean
  subscribed: Boolean
  thread_url: String
  url: String
}

type organization {
  avatar_url: String
  blog: String
  company: String
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  created_at: String
  email: String
  followers: Int
  following: Int
  html_url: String
  id: Int
  location: String
  login: String
  name: String
  public_gists: Int
  public_repos: Int
  type: String
  url: String
}

"Issues assigned to you / created by you / mentioning you / you're\\nsubscribed to updates for / All issues the authenticated user can see"
enum queryInput_orgs_by_org_issues_filter {
  assigned
  created
  mentioned
  subscribed
  all
}

enum queryInput_orgs_by_org_issues_state {
  open
  closed
}

enum queryInput_orgs_by_org_issues_sort {
  created
  updated
  comments
}

enum queryInput_orgs_by_org_issues_direction {
  asc
  desc
}

type query_orgs_by_org_members_items {
  avatar_url: String
  gravatar_id: String
  id: Int
  login: String
  url: String
}

type query_orgs_by_org_repos_items {
  clone_url: String
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  created_at: String
  description: String
  fork: Boolean
  forks: Int
  forks_count: Int
  full_name: String
  git_url: String
  homepage: String
  html_url: String
  id: Int
  language: String
  master_branch: String
  mirror_url: String
  name: String
  open_issues: Int
  open_issues_count: Int
  owner: query_orgs_by_org_repos_items_owner
  private: Boolean
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  pushed_at: String
  size: Int
  ssh_url: String
  svn_url: String
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  updated_at: String
  url: String
  watchers: Int
  watchers_count: Int
}

type query_orgs_by_org_repos_items_owner {
  avatar_url: String
  gravatar_id: String
  id: Int
  login: String
  url: String
}

enum queryInput_orgs_by_org_repos_type {
  all
  public
  private
  forks
  sources
  member
}

type query_orgs_by_org_teams_items {
  id: Int
  name: String
  url: String
}

type rate_limit {
  rate: query_rate_limit_rate
}

type query_rate_limit_rate {
  limit: Int
  remaining: Int
  reset: Int
}

type repo {
  clone_url: String
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  created_at: String
  description: String
  fork: Boolean
  forks: Int
  forks_count: Int
  full_name: String
  git_url: String
  has_downloads: Boolean
  has_issues: Boolean
  has_wiki: Boolean
  homepage: String
  html_url: String
  id: Int
  language: String
  master_branch: String
  mirror_url: String
  name: String
  open_issues: Int
  open_issues_count: Int
  organization: query_repos_by_owner_by_repo_organization
  owner: query_repos_by_owner_by_repo_owner
  parent: query_repos_by_owner_by_repo_parent
  private: Boolean
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  pushed_at: String
  size: Int
  source: query_repos_by_owner_by_repo_source
  ssh_url: String
  svn_url: String
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  updated_at: String
  url: String
  watchers: Int
  watchers_count: Int
}

type query_repos_by_owner_by_repo_organization {
  avatar_url: String
  gravatar_id: String
  id: Int
  login: String
  type: String
  url: String
}

type query_repos_by_owner_by_repo_owner {
  avatar_url: String
  gravatar_id: String
  id: Int
  login: String
  url: String
}

"Is present when the repo is a fork. Parent is the repo this repo was forked from."
type query_repos_by_owner_by_repo_parent {
  clone_url: String
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  created_at: String
  description: String
  fork: Boolean
  forks: Int
  forks_count: Int
  full_name: String
  git_url: String
  homepage: String
  html_url: String
  id: Int
  language: String
  master_branch: String
  mirror_url: String
  name: String
  open_issues: Int
  open_issues_count: Int
  owner: query_repos_by_owner_by_repo_parent_owner
  private: Boolean
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  pushed_at: String
  size: Int
  ssh_url: String
  svn_url: String
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  updated_at: String
  url: String
  watchers: Int
  watchers_count: Int
}

type query_repos_by_owner_by_repo_parent_owner {
  avatar_url: String
  gravatar_id: String
  id: Int
  login: String
  url: String
}

"Is present when the repo is a fork. Source is the ultimate source for the network."
type query_repos_by_owner_by_repo_source {
  clone_url: String
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  created_at: String
  description: String
  fork: Boolean
  forks: Int
  forks_count: Int
  full_name: String
  git_url: String
  homepage: String
  html_url: String
  id: Int
  language: String
  master_branch: String
  mirror_url: String
  name: String
  open_issues: Int
  open_issues_count: Int
  owner: query_repos_by_owner_by_repo_source_owner
  private: Boolean
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  pushed_at: String
  size: Int
  ssh_url: String
  svn_url: String
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  updated_at: String
  url: String
  watchers: Int
  watchers_count: Int
}

type query_repos_by_owner_by_repo_source_owner {
  avatar_url: String
  gravatar_id: String
  id: Int
  login: String
  url: String
}

type query_repos_by_owner_by_repo_assignees_items {
  avatar_url: Int
  gravatar_id: String
  id: Int
  login: String
  url: String
}

type query_repos_by_owner_by_repo_branches_items {
  commit: query_repos_by_owner_by_repo_branches_items_commit
  name: String
}

type query_repos_by_owner_by_repo_branches_items_commit {
  sha: String
  url: String
}

type branch {
  links: query_repos_by_owner_by_repo_branches_by_branch_links
  commit: query_repos_by_owner_by_repo_branches_by_branch_commit
  name: String
}

type query_repos_by_owner_by_repo_branches_by_branch_links {
  html: String
  self: String
}

type query_repos_by_owner_by_repo_branches_by_branch_commit {
  author: query_repos_by_owner_by_repo_branches_by_branch_commit_author
  commit: query_repos_by_owner_by_repo_branches_by_branch_commit_commit
  committer: query_repos_by_owner_by_repo_branches_by_branch_commit_committer
  parents: [query_repos_by_owner_by_repo_branches_by_branch_commit_parents_items]
  sha: String
  url: String
}

type query_repos_by_owner_by_repo_branches_by_branch_commit_author {
  avatar_url: String
  gravatar_id: String
  id: Int
  login: String
  url: String
}

type query_repos_by_owner_by_repo_branches_by_branch_commit_commit {
  author: query_repos_by_owner_by_repo_branches_by_branch_commit_commit_author
  committer: query_repos_by_owner_by_repo_branches_by_branch_commit_commit_committer
  message: String
  tree: query_repos_by_owner_by_repo_branches_by_branch_commit_commit_tree
  url: String
}

type query_repos_by_owner_by_repo_branches_by_branch_commit_commit_author {
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  date: String
  email: String
  name: String
}

type query_repos_by_owner_by_repo_branches_by_branch_commit_commit_committer {
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  date: String
  email: String
  name: String
}

type query_repos_by_owner_by_repo_branches_by_branch_commit_commit_tree {
  sha: String
  url: String
}

type query_repos_by_owner_by_repo_branches_by_branch_commit_committer {
  avatar_url: String
  gravatar_id: String
  id: Int
  login: String
  url: String
}

type query_repos_by_owner_by_repo_branches_by_branch_commit_parents_items {
  sha: String
  url: String
}

type query_repos_by_owner_by_repo_comments_items {
  body: String
  commit_id: String
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  created_at: String
  html_url: String
  id: Int
  line: Int
  path: String
  position: Int
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  updated_at: String
  url: String
  user: query_repos_by_owner_by_repo_comments_items_user
}

type query_repos_by_owner_by_repo_comments_items_user {
  avatar_url: String
  gravatar_id: String
  id: Int
  login: String
  url: String
}

type commitComments {
  body: String
  commit_id: String
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  created_at: String
  html_url: String
  id: Int
  line: Int
  path: String
  position: Int
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  updated_at: String
  url: String
  user: query_repos_by_owner_by_repo_comments_by_commentId_user
}

type query_repos_by_owner_by_repo_comments_by_commentId_user {
  avatar_url: String
  gravatar_id: String
  id: Int
  login: String
  url: String
}

type query_repos_by_owner_by_repo_commits_items {
  author: query_repos_by_owner_by_repo_commits_items_author
  commit: query_repos_by_owner_by_repo_commits_items_commit
  committer: query_repos_by_owner_by_repo_commits_items_committer
  parents: [query_repos_by_owner_by_repo_commits_items_parents_items]
  sha: String
  url: String
}

type query_repos_by_owner_by_repo_commits_items_author {
  avatar_url: String
  gravatar_id: String
  id: Int
  login: String
  url: String
}

type query_repos_by_owner_by_repo_commits_items_commit {
  author: query_repos_by_owner_by_repo_commits_items_commit_author
  committer: query_repos_by_owner_by_repo_commits_items_commit_committer
  message: String
  tree: query_repos_by_owner_by_repo_commits_items_commit_tree
  url: String
}

type query_repos_by_owner_by_repo_commits_items_commit_author {
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  date: String
  email: String
  name: String
}

type query_repos_by_owner_by_repo_commits_items_commit_committer {
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  date: String
  email: String
  name: String
}

type query_repos_by_owner_by_repo_commits_items_commit_tree {
  sha: String
  url: String
}

type query_repos_by_owner_by_repo_commits_items_committer {
  avatar_url: String
  gravatar_id: String
  id: Int
  login: String
  url: String
}

type query_repos_by_owner_by_repo_commits_items_parents_items {
  sha: String
  url: String
}

type query_repos_by_owner_by_repo_commits_by_ref_status_items {
  commit_url: String
  name: String
  repository_url: String
  sha: String
  state: String
  statuses: [query_repos_by_owner_by_repo_commits_by_ref_status_items_statuses_items]
}

type query_repos_by_owner_by_repo_commits_by_ref_status_items_statuses_items {
  context: String
  created_at: String
  description: String
  id: Float
  state: String
  target_url: String
  updated_at: String
  url: String
}

type commit {
  author: query_repos_by_owner_by_repo_commits_by_shaCode_author
  commit: query_repos_by_owner_by_repo_commits_by_shaCode_commit
  committer: query_repos_by_owner_by_repo_commits_by_shaCode_committer
  files: [query_repos_by_owner_by_repo_commits_by_shaCode_files_items]
  parents: [query_repos_by_owner_by_repo_commits_by_shaCode_parents_items]
  sha: String
  stats: query_repos_by_owner_by_repo_commits_by_shaCode_stats
  url: String
}

type query_repos_by_owner_by_repo_commits_by_shaCode_author {
  avatar_url: String
  gravatar_id: String
  id: Int
  login: String
  url: String
}

type query_repos_by_owner_by_repo_commits_by_shaCode_commit {
  author: query_repos_by_owner_by_repo_commits_by_shaCode_commit_author
  committer: query_repos_by_owner_by_repo_commits_by_shaCode_commit_committer
  message: String
  tree: query_repos_by_owner_by_repo_commits_by_shaCode_commit_tree
  url: String
}

type query_repos_by_owner_by_repo_commits_by_shaCode_commit_author {
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  date: String
  email: String
  name: String
}

type query_repos_by_owner_by_repo_commits_by_shaCode_commit_committer {
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  date: String
  email: String
  name: String
}

type query_repos_by_owner_by_repo_commits_by_shaCode_commit_tree {
  sha: String
  url: String
}

type query_repos_by_owner_by_repo_commits_by_shaCode_committer {
  avatar_url: String
  gravatar_id: String
  id: Int
  login: String
  url: String
}

type query_repos_by_owner_by_repo_commits_by_shaCode_files_items {
  additions: Int
  blob_url: String
  changes: Int
  deletions: Int
  filename: String
  patch: String
  raw_url: String
  status: String
}

type query_repos_by_owner_by_repo_commits_by_shaCode_parents_items {
  sha: String
  url: String
}

type query_repos_by_owner_by_repo_commits_by_shaCode_stats {
  additions: Int
  deletions: Int
  total: Int
}

type compare_commits {
  ahead_by: Int
  base_commit: query_repos_by_owner_by_repo_compare_by_baseId___by_headId_base_commit
  behind_by: Int
  commits: [query_repos_by_owner_by_repo_compare_by_baseId___by_headId_commits_items]
  diff_url: String
  files: [query_repos_by_owner_by_repo_compare_by_baseId___by_headId_files_items]
  html_url: String
  patch_url: String
  permalink_url: String
  status: String
  total_commits: Int
  url: String
}

type query_repos_by_owner_by_repo_compare_by_baseId___by_headId_base_commit {
  author: query_repos_by_owner_by_repo_compare_by_baseId___by_headId_base_commit_author
  commit: query_repos_by_owner_by_repo_compare_by_baseId___by_headId_base_commit_commit
  committer: query_repos_by_owner_by_repo_compare_by_baseId___by_headId_base_commit_committer
  parents: [query_repos_by_owner_by_repo_compare_by_baseId___by_headId_base_commit_parents_items]
  sha: String
  url: String
}

type query_repos_by_owner_by_repo_compare_by_baseId___by_headId_base_commit_author {
  avatar_url: String
  events_url: String
  followers_url: String
  following_url: String
  gists_url: String
  gravatar_id: String
  html_url: String
  id: Int
  login: String
  organizations_url: String
  received_events_url: String
  repos_url: String
  site_admin: Boolean
  starred_url: String
  subscriptions_url: String
  type: String
  url: String
}

type query_repos_by_owner_by_repo_compare_by_baseId___by_headId_base_commit_commit {
  author: query_repos_by_owner_by_repo_compare_by_baseId___by_headId_base_commit_commit_author
  committer: query_repos_by_owner_by_repo_compare_by_baseId___by_headId_base_commit_commit_committer
  message: String
  tree: query_repos_by_owner_by_repo_compare_by_baseId___by_headId_base_commit_commit_tree
  url: String
}

type query_repos_by_owner_by_repo_compare_by_baseId___by_headId_base_commit_commit_author {
  date: String
  email: String
  name: String
}

type query_repos_by_owner_by_repo_compare_by_baseId___by_headId_base_commit_commit_committer {
  date: String
  email: String
  name: String
}

type query_repos_by_owner_by_repo_compare_by_baseId___by_headId_base_commit_commit_tree {
  sha: String
  url: String
}

type query_repos_by_owner_by_repo_compare_by_baseId___by_headId_base_commit_committer {
  avatar_url: String
  events_url: String
  followers_url: String
  following_url: String
  gists_url: String
  gravatar_id: String
  html_url: String
  id: Int
  login: String
  organizations_url: String
  received_events_url: String
  repos_url: String
  site_admin: Boolean
  starred_url: String
  subscriptions_url: String
  type: String
  url: String
}

type query_repos_by_owner_by_repo_compare_by_baseId___by_headId_base_commit_parents_items {
  sha: String
  url: String
}

type query_repos_by_owner_by_repo_compare_by_baseId___by_headId_commits_items {
  author: query_repos_by_owner_by_repo_compare_by_baseId___by_headId_commits_items_author
  commit: query_repos_by_owner_by_repo_compare_by_baseId___by_headId_commits_items_commit
  committer: query_repos_by_owner_by_repo_compare_by_baseId___by_headId_commits_items_committer
  parents: [query_repos_by_owner_by_repo_compare_by_baseId___by_headId_commits_items_parents_items]
  sha: String
  url: String
}

type query_repos_by_owner_by_repo_compare_by_baseId___by_headId_commits_items_author {
  avatar_url: String
  events_url: String
  followers_url: String
  following_url: String
  gists_url: String
  gravatar_id: String
  html_url: String
  id: Int
  login: String
  organizations_url: String
  received_events_url: String
  repos_url: String
  site_admin: Boolean
  starred_url: String
  subscriptions_url: String
  type: String
  url: String
}

type query_repos_by_owner_by_repo_compare_by_baseId___by_headId_commits_items_commit {
  author: query_repos_by_owner_by_repo_compare_by_baseId___by_headId_commits_items_commit_author
  committer: query_repos_by_owner_by_repo_compare_by_baseId___by_headId_commits_items_commit_committer
  message: String
  tree: query_repos_by_owner_by_repo_compare_by_baseId___by_headId_commits_items_commit_tree
  url: String
}

type query_repos_by_owner_by_repo_compare_by_baseId___by_headId_commits_items_commit_author {
  date: String
  email: String
  name: String
}

type query_repos_by_owner_by_repo_compare_by_baseId___by_headId_commits_items_commit_committer {
  date: String
  email: String
  name: String
}

type query_repos_by_owner_by_repo_compare_by_baseId___by_headId_commits_items_commit_tree {
  sha: String
  url: String
}

type query_repos_by_owner_by_repo_compare_by_baseId___by_headId_commits_items_committer {
  avatar_url: String
  events_url: String
  followers_url: String
  following_url: String
  gists_url: String
  gravatar_id: String
  html_url: String
  id: Int
  login: String
  organizations_url: String
  received_events_url: String
  repos_url: String
  site_admin: Boolean
  starred_url: String
  subscriptions_url: String
  type: String
  url: String
}

type query_repos_by_owner_by_repo_compare_by_baseId___by_headId_commits_items_parents_items {
  sha: String
  url: String
}

type query_repos_by_owner_by_repo_compare_by_baseId___by_headId_files_items {
  additions: Int
  blob_url: String
  changes: Int
  contents_url: String
  deletions: Int
  filename: String
  patch: String
  raw_url: String
  sha: String
  status: String
}

type contents_path {
  links: query_repos_by_owner_by_repo_contents_by_path_links
  content: String
  encoding: String
  git_url: String
  html_url: String
  name: String
  path: String
  sha: String
  size: Int
  type: String
  url: String
}

type query_repos_by_owner_by_repo_contents_by_path_links {
  git: String
  html: String
  self: String
}

type query_repos_by_owner_by_repo_contributors_items {
  avatar_url: String
  contributions: Int
  gravatar_id: String
  id: Int
  login: String
  url: String
}

type query_repos_by_owner_by_repo_deployments_items {
  created_at: String
  creator: query_repos_by_owner_by_repo_deployments_items_creator
  description: String
  id: Int
  payload: String
  sha: String
  statuses_url: String
  updated_at: String
  url: String
}

type query_repos_by_owner_by_repo_deployments_items_creator {
  avatar_url: String
  events_url: String
  followers_url: String
  following_url: String
  gists_url: String
  gravatar_id: String
  html_url: String
  id: Int
  login: String
  organizations_url: String
  received_events_url: String
  repos_url: String
  site_admin: Boolean
  starred_url: String
  subscriptions_url: String
  type: String
  url: String
}

type query_repos_by_owner_by_repo_deployments_by_id_statuses_items {
  created_at: String
  creator: query_repos_by_owner_by_repo_deployments_by_id_statuses_items_creator
  description: String
  id: Int
  payload: String
  state: String
  target_url: String
  updated_at: String
  url: String
}

type query_repos_by_owner_by_repo_deployments_by_id_statuses_items_creator {
  avatar_url: String
  events_url: String
  followers_url: String
  following_url: String
  gists_url: String
  gravatar_id: String
  html_url: String
  id: Int
  login: String
  organizations_url: String
  received_events_url: String
  repos_url: String
  site_admin: Boolean
  starred_url: String
  subscriptions_url: String
  type: String
  url: String
}

type downloads {
  content_type: String
  description: String
  download_count: Int
  html_url: String
  id: Int
  name: String
  size: Int
  url: String
}

type query_repos_by_owner_by_repo_forks_items {
  clone_url: String
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  created_at: String
  description: String
  fork: Boolean
  forks: Int
  forks_count: Int
  full_name: String
  git_url: String
  homepage: String
  html_url: String
  id: Int
  language: String
  master_branch: String
  mirror_url: String
  name: String
  open_issues: Int
  open_issues_count: Int
  owner: query_repos_by_owner_by_repo_forks_items_owner
  private: Boolean
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  pushed_at: String
  size: Int
  ssh_url: String
  svn_url: String
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  updated_at: String
  url: String
  watchers: Int
  watchers_count: Int
}

type query_repos_by_owner_by_repo_forks_items_owner {
  avatar_url: String
  gravatar_id: String
  id: Int
  login: String
  url: String
}

enum queryInput_repos_by_owner_by_repo_forks_sort {
  newes
  oldes
  watchers
}

type blob {
  content: String
  encoding: query_repos_by_owner_by_repo_git_blobs_by_shaCode_encoding
  sha: String
  size: Int
}

enum query_repos_by_owner_by_repo_git_blobs_by_shaCode_encoding {
  utf_8
  base64
}

type repoCommit {
  author: query_repos_by_owner_by_repo_git_commits_by_shaCode_author
  committer: query_repos_by_owner_by_repo_git_commits_by_shaCode_committer
  message: String
  parents: [query_repos_by_owner_by_repo_git_commits_by_shaCode_parents_items]
  sha: String
  tree: query_repos_by_owner_by_repo_git_commits_by_shaCode_tree
  url: String
}

type query_repos_by_owner_by_repo_git_commits_by_shaCode_author {
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  date: String
  email: String
  name: String
}

type query_repos_by_owner_by_repo_git_commits_by_shaCode_committer {
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  date: String
  email: String
  name: String
}

type query_repos_by_owner_by_repo_git_commits_by_shaCode_parents_items {
  sha: String
  url: String
}

type query_repos_by_owner_by_repo_git_commits_by_shaCode_tree {
  sha: String
  url: String
}

type query_repos_by_owner_by_repo_git_refs_items {
  object: query_repos_by_owner_by_repo_git_refs_items_object
  ref: String
  url: String
}

type query_repos_by_owner_by_repo_git_refs_items_object {
  sha: String
  type: String
  url: String
}

type headBranch {
  object: query_repos_by_owner_by_repo_git_refs_by_ref_object
  ref: String
  url: String
}

type query_repos_by_owner_by_repo_git_refs_by_ref_object {
  sha: String
  type: String
  url: String
}

type tag {
  message: String
  object: query_repos_by_owner_by_repo_git_tags_by_shaCode_object
  sha: String
  tag: String
  tagger: query_repos_by_owner_by_repo_git_tags_by_shaCode_tagger
  url: String
}

type query_repos_by_owner_by_repo_git_tags_by_shaCode_object {
  sha: String
  type: String
  url: String
}

type query_repos_by_owner_by_repo_git_tags_by_shaCode_tagger {
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  date: String
  email: String
  name: String
}

type tree {
  sha: String
  tree: [query_repos_by_owner_by_repo_git_trees_by_shaCode_tree_items]
  url: String
}

type query_repos_by_owner_by_repo_git_trees_by_shaCode_tree_items {
  mode: String
  path: String
  sha: String
  size: Int
  type: String
  url: String
}

type query_repos_by_owner_by_repo_hooks_items {
  active: Boolean
  config: query_repos_by_owner_by_repo_hooks_items_config
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  created_at: String
  events: [query_repos_by_owner_by_repo_hooks_items_events_items]
  id: Int
  name: String
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  updated_at: String
  url: String
}

type query_repos_by_owner_by_repo_hooks_items_config {
  content_type: String
  url: String
}

enum query_repos_by_owner_by_repo_hooks_items_events_items {
  push
  issues
  issue_comment
  commit_comment
  pull_request
  pull_request_review_comment
  gollum
  watch
  download
  fork
  fork_apply
  member
  public
  team_add
  status
}

"Issues assigned to you / created by you / mentioning you / you're\\nsubscribed to updates for / All issues the authenticated user can see"
enum queryInput_repos_by_owner_by_repo_issues_filter {
  assigned
  created
  mentioned
  subscribed
  all
}

enum queryInput_repos_by_owner_by_repo_issues_state {
  open
  closed
}

enum queryInput_repos_by_owner_by_repo_issues_sort {
  created
  updated
  comments
}

enum queryInput_repos_by_owner_by_repo_issues_direction {
  asc
  desc
}

type query_repos_by_owner_by_repo_issues_comments_items {
  links: query_repos_by_owner_by_repo_issues_comments_items_links
  body: String
  commit_id: String
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  created_at: String
  id: Int
  path: String
  position: Int
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  updated_at: String
  url: String
  user: query_repos_by_owner_by_repo_issues_comments_items_user
}

type query_repos_by_owner_by_repo_issues_comments_items_links {
  html: query_repos_by_owner_by_repo_issues_comments_items_links_html
  pull_request: query_repos_by_owner_by_repo_issues_comments_items_links_pull_request
  self: query_repos_by_owner_by_repo_issues_comments_items_links_self
}

type query_repos_by_owner_by_repo_issues_comments_items_links_html {
  href: String
}

type query_repos_by_owner_by_repo_issues_comments_items_links_pull_request {
  href: String
}

type query_repos_by_owner_by_repo_issues_comments_items_links_self {
  href: String
}

type query_repos_by_owner_by_repo_issues_comments_items_user {
  avatar_url: String
  gravatar_id: String
  id: Int
  login: String
  url: String
}

enum queryInput_repos_by_owner_by_repo_issues_comments_sort {
  created
  updated
}

type issuesComment {
  body: String
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  created_at: String
  html_url: String
  id: Int
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  updated_at: String
  url: String
  user: query_repos_by_owner_by_repo_issues_comments_by_commentId_user
}

type query_repos_by_owner_by_repo_issues_comments_by_commentId_user {
  avatar_url: String
  gravatar_id: String
  id: Int
  login: String
  url: String
}

type event {
  actor: query_repos_by_owner_by_repo_issues_events_by_eventId_actor
  commit_id: String
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  created_at: String
  event: String
  issue: query_repos_by_owner_by_repo_issues_events_by_eventId_issue
  url: String
}

type query_repos_by_owner_by_repo_issues_events_by_eventId_actor {
  avatar_url: String
  gravatar_id: String
  id: Int
  login: String
  url: String
}

type query_repos_by_owner_by_repo_issues_events_by_eventId_issue {
  assignee: query_repos_by_owner_by_repo_issues_events_by_eventId_issue_assignee
  body: String
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  closed_at: String
  comments: Int
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  created_at: String
  html_url: String
  labels: [query_repos_by_owner_by_repo_issues_events_by_eventId_issue_labels_items]
  milestone: query_repos_by_owner_by_repo_issues_events_by_eventId_issue_milestone
  number: Int
  pull_request: query_repos_by_owner_by_repo_issues_events_by_eventId_issue_pull_request
  state: query_repos_by_owner_by_repo_issues_events_by_eventId_issue_state
  title: String
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  updated_at: String
  url: String
  user: query_repos_by_owner_by_repo_issues_events_by_eventId_issue_user
}

type query_repos_by_owner_by_repo_issues_events_by_eventId_issue_assignee {
  avatar_url: String
  gravatar_id: String
  id: Int
  login: String
  url: String
}

type query_repos_by_owner_by_repo_issues_events_by_eventId_issue_labels_items {
  color: String
  name: String
  url: String
}

type query_repos_by_owner_by_repo_issues_events_by_eventId_issue_milestone {
  closed_issues: Int
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  created_at: String
  creator: query_repos_by_owner_by_repo_issues_events_by_eventId_issue_milestone_creator
  description: String
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  due_on: String
  number: Int
  open_issues: Int
  state: query_repos_by_owner_by_repo_issues_events_by_eventId_issue_milestone_state
  title: String
  url: String
}

type query_repos_by_owner_by_repo_issues_events_by_eventId_issue_milestone_creator {
  avatar_url: String
  gravatar_id: String
  id: Int
  login: String
  url: String
}

enum query_repos_by_owner_by_repo_issues_events_by_eventId_issue_milestone_state {
  open
  closed
}

type query_repos_by_owner_by_repo_issues_events_by_eventId_issue_pull_request {
  diff_url: String
  html_url: String
  patch_url: String
}

enum query_repos_by_owner_by_repo_issues_events_by_eventId_issue_state {
  open
  closed
}

type query_repos_by_owner_by_repo_issues_events_by_eventId_issue_user {
  avatar_url: String
  gravatar_id: String
  id: Int
  login: String
  url: String
}

type issue {
  assignee: String
  body: String
  labels: [String]
  milestone: Float
  title: String
}

type query_repos_by_owner_by_repo_issues_by_number_labels_items {
  color: query_repos_by_owner_by_repo_issues_by_number_labels_items_color
  name: String
  url: String
}

scalar query_repos_by_owner_by_repo_issues_by_number_labels_items_color

type query_repos_by_owner_by_repo_keys_items {
  id: Int
  key: String
  title: String
  url: String
}

type user_keys_keyId {
  id: Int
  key: String
  title: String
  url: String
}

type label {
  color: query_repos_by_owner_by_repo_labels_by_name_color
  name: String
  url: String
}

scalar query_repos_by_owner_by_repo_labels_by_name_color

type milestone {
  closed_issues: Int
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  created_at: String
  creator: query_repos_by_owner_by_repo_milestones_creator
  description: String
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  due_on: String
  number: Int
  open_issues: Int
  state: query_repos_by_owner_by_repo_milestones_state
  title: String
  url: String
}

type query_repos_by_owner_by_repo_milestones_creator {
  avatar_url: String
  gravatar_id: String
  id: Int
  login: String
  url: String
}

enum query_repos_by_owner_by_repo_milestones_state {
  open
  closed
}

"String to filter by state."
enum queryInput_repos_by_owner_by_repo_milestones_state {
  open
  closed
}

enum queryInput_repos_by_owner_by_repo_milestones_sort {
  due_date
  completeness
}

type query_repos_by_owner_by_repo_pulls_items {
  links: query_repos_by_owner_by_repo_pulls_items_links
  base: query_repos_by_owner_by_repo_pulls_items_base
  body: String
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  closed_at: String
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  created_at: String
  diff_url: String
  head: query_repos_by_owner_by_repo_pulls_items_head
  html_url: String
  issue_url: String
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  merged_at: String
  number: Int
  patch_url: String
  state: query_repos_by_owner_by_repo_pulls_items_state
  title: String
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  updated_at: String
  url: String
  user: query_repos_by_owner_by_repo_pulls_items_user
}

type query_repos_by_owner_by_repo_pulls_items_links {
  comments: query_repos_by_owner_by_repo_pulls_items_links_comments
  html: query_repos_by_owner_by_repo_pulls_items_links_html
  review_comments: query_repos_by_owner_by_repo_pulls_items_links_review_comments
  self: query_repos_by_owner_by_repo_pulls_items_links_self
}

type query_repos_by_owner_by_repo_pulls_items_links_comments {
  href: String
}

type query_repos_by_owner_by_repo_pulls_items_links_html {
  href: String
}

type query_repos_by_owner_by_repo_pulls_items_links_review_comments {
  href: String
}

type query_repos_by_owner_by_repo_pulls_items_links_self {
  href: String
}

type query_repos_by_owner_by_repo_pulls_items_base {
  label: String
  ref: String
  repo: query_repos_by_owner_by_repo_pulls_items_base_repo
  sha: String
  user: query_repos_by_owner_by_repo_pulls_items_base_user
}

type query_repos_by_owner_by_repo_pulls_items_base_repo {
  clone_url: String
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  created_at: String
  description: String
  fork: Boolean
  forks: Int
  forks_count: Int
  full_name: String
  git_url: String
  homepage: String
  html_url: String
  id: Int
  language: String
  master_branch: String
  mirror_url: String
  name: String
  open_issues: Int
  open_issues_count: Int
  owner: query_repos_by_owner_by_repo_pulls_items_base_repo_owner
  private: Boolean
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  pushed_at: String
  size: Int
  ssh_url: String
  svn_url: String
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  updated_at: String
  url: String
  watchers: Int
  watchers_count: Int
}

type query_repos_by_owner_by_repo_pulls_items_base_repo_owner {
  avatar_url: String
  gravatar_id: String
  id: Int
  login: String
  url: String
}

type query_repos_by_owner_by_repo_pulls_items_base_user {
  avatar_url: String
  gravatar_id: String
  id: Int
  login: String
  url: String
}

type query_repos_by_owner_by_repo_pulls_items_head {
  label: String
  ref: String
  repo: query_repos_by_owner_by_repo_pulls_items_head_repo
  sha: String
  user: query_repos_by_owner_by_repo_pulls_items_head_user
}

type query_repos_by_owner_by_repo_pulls_items_head_repo {
  clone_url: String
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  created_at: String
  description: String
  fork: Boolean
  forks: Int
  forks_count: Int
  full_name: String
  git_url: String
  homepage: String
  html_url: String
  id: Int
  language: String
  master_branch: String
  mirror_url: String
  name: String
  open_issues: Int
  open_issues_count: Int
  owner: query_repos_by_owner_by_repo_pulls_items_head_repo_owner
  private: Boolean
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  pushed_at: String
  size: Int
  ssh_url: String
  svn_url: String
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  updated_at: String
  url: String
  watchers: Int
  watchers_count: Int
}

type query_repos_by_owner_by_repo_pulls_items_head_repo_owner {
  avatar_url: String
  gravatar_id: String
  id: Int
  login: String
  url: String
}

type query_repos_by_owner_by_repo_pulls_items_head_user {
  avatar_url: String
  gravatar_id: String
  id: Int
  login: String
  url: String
}

enum query_repos_by_owner_by_repo_pulls_items_state {
  open
  closed
}

type query_repos_by_owner_by_repo_pulls_items_user {
  avatar_url: String
  gravatar_id: String
  id: Int
  login: String
  url: String
}

"String to filter by state."
enum queryInput_repos_by_owner_by_repo_pulls_state {
  open
  closed
}

enum queryInput_repos_by_owner_by_repo_pulls_comments_sort {
  created
  updated
}

type pullsComment {
  links: query_repos_by_owner_by_repo_pulls_comments_by_commentId_links
  body: String
  commit_id: String
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  created_at: String
  id: Int
  path: String
  position: Int
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  updated_at: String
  url: String
  user: query_repos_by_owner_by_repo_pulls_comments_by_commentId_user
}

type query_repos_by_owner_by_repo_pulls_comments_by_commentId_links {
  html: query_repos_by_owner_by_repo_pulls_comments_by_commentId_links_html
  pull_request: query_repos_by_owner_by_repo_pulls_comments_by_commentId_links_pull_request
  self: query_repos_by_owner_by_repo_pulls_comments_by_commentId_links_self
}

type query_repos_by_owner_by_repo_pulls_comments_by_commentId_links_html {
  href: String
}

type query_repos_by_owner_by_repo_pulls_comments_by_commentId_links_pull_request {
  href: String
}

type query_repos_by_owner_by_repo_pulls_comments_by_commentId_links_self {
  href: String
}

type query_repos_by_owner_by_repo_pulls_comments_by_commentId_user {
  avatar_url: String
  gravatar_id: String
  id: Int
  login: String
  url: String
}

type pullRequest {
  links: query_repos_by_owner_by_repo_pulls_by_number_links
  additions: Int
  base: query_repos_by_owner_by_repo_pulls_by_number_base
  body: String
  changed_files: Int
  closed_at: String
  comments: Int
  commits: Int
  created_at: String
  deletions: Int
  diff_url: String
  head: query_repos_by_owner_by_repo_pulls_by_number_head
  html_url: String
  issue_url: String
  merge_commit_sha: String
  mergeable: Boolean
  merged: Boolean
  merged_at: String
  merged_by: query_repos_by_owner_by_repo_pulls_by_number_merged_by
  number: Int
  patch_url: String
  state: String
  title: String
  updated_at: String
  url: String
  user: query_repos_by_owner_by_repo_pulls_by_number_user
}

type query_repos_by_owner_by_repo_pulls_by_number_links {
  comments: query_repos_by_owner_by_repo_pulls_by_number_links_comments
  html: query_repos_by_owner_by_repo_pulls_by_number_links_html
  review_comments: query_repos_by_owner_by_repo_pulls_by_number_links_review_comments
  self: query_repos_by_owner_by_repo_pulls_by_number_links_self
}

type query_repos_by_owner_by_repo_pulls_by_number_links_comments {
  href: String
}

type query_repos_by_owner_by_repo_pulls_by_number_links_html {
  href: String
}

type query_repos_by_owner_by_repo_pulls_by_number_links_review_comments {
  href: String
}

type query_repos_by_owner_by_repo_pulls_by_number_links_self {
  href: String
}

type query_repos_by_owner_by_repo_pulls_by_number_base {
  label: String
  ref: String
  repo: query_repos_by_owner_by_repo_pulls_by_number_base_repo
  sha: String
  user: query_repos_by_owner_by_repo_pulls_by_number_base_user
}

type query_repos_by_owner_by_repo_pulls_by_number_base_repo {
  clone_url: String
  created_at: String
  description: String
  fork: Boolean
  forks: Int
  forks_count: Int
  full_name: String
  git_url: String
  homepage: String
  html_url: String
  id: Int
  language: Void
  master_branch: String
  mirror_url: String
  name: String
  open_issues: Int
  open_issues_count: Int
  owner: query_repos_by_owner_by_repo_pulls_by_number_base_repo_owner
  private: Boolean
  pushed_at: String
  size: Int
  ssh_url: String
  svn_url: String
  updated_at: String
  url: String
  watchers: Int
  watchers_count: Int
}

type query_repos_by_owner_by_repo_pulls_by_number_base_repo_owner {
  avatar_url: String
  gravatar_id: String
  id: Int
  login: String
  url: String
}

type query_repos_by_owner_by_repo_pulls_by_number_base_user {
  avatar_url: String
  gravatar_id: String
  id: Int
  login: String
  url: String
}

type query_repos_by_owner_by_repo_pulls_by_number_head {
  label: String
  ref: String
  repo: query_repos_by_owner_by_repo_pulls_by_number_head_repo
  sha: String
  user: query_repos_by_owner_by_repo_pulls_by_number_head_user
}

type query_repos_by_owner_by_repo_pulls_by_number_head_repo {
  clone_url: String
  created_at: String
  description: String
  fork: Boolean
  forks: Int
  forks_count: Int
  full_name: String
  git_url: String
  homepage: String
  html_url: String
  id: Int
  language: Void
  master_branch: String
  mirror_url: String
  name: String
  open_issues: Int
  open_issues_count: Int
  owner: query_repos_by_owner_by_repo_pulls_by_number_head_repo_owner
  private: Boolean
  pushed_at: String
  size: Int
  ssh_url: String
  svn_url: String
  updated_at: String
  url: String
  watchers: Int
  watchers_count: Int
}

type query_repos_by_owner_by_repo_pulls_by_number_head_repo_owner {
  avatar_url: String
  gravatar_id: String
  id: Int
  login: String
  url: String
}

type query_repos_by_owner_by_repo_pulls_by_number_head_user {
  avatar_url: String
  gravatar_id: String
  id: Int
  login: String
  url: String
}

type query_repos_by_owner_by_repo_pulls_by_number_merged_by {
  avatar_url: String
  gravatar_id: String
  id: Int
  login: String
  url: String
}

type query_repos_by_owner_by_repo_pulls_by_number_user {
  avatar_url: String
  gravatar_id: String
  id: Int
  login: String
  url: String
}

type query_repos_by_owner_by_repo_releases_items {
  assets: [query_repos_by_owner_by_repo_releases_items_assets_items]
  assets_url: String
  author: query_repos_by_owner_by_repo_releases_items_author
  body: String
  created_at: String
  draft: Boolean
  html_url: String
  id: Int
  name: String
  prerelease: Boolean
  published_at: String
  tag_name: String
  tarball_url: String
  target_commitish: String
  upload_url: String
  url: String
  zipball_url: String
}

type query_repos_by_owner_by_repo_releases_items_assets_items {
  content_type: String
  created_at: String
  download_count: Int
  id: Int
  label: String
  name: String
  size: Int
  state: String
  updated_at: String
  uploader: query_repos_by_owner_by_repo_releases_items_assets_items_uploader
  url: String
}

type query_repos_by_owner_by_repo_releases_items_assets_items_uploader {
  avatar_url: String
  events_url: String
  followers_url: String
  following_url: String
  gists_url: String
  gravatar_id: String
  html_url: String
  id: Int
  login: String
  organizations_url: String
  received_events_url: String
  repos_url: String
  site_admin: Boolean
  starred_url: String
  subscriptions_url: String
  type: String
  url: String
}

type query_repos_by_owner_by_repo_releases_items_author {
  avatar_url: String
  events_url: String
  followers_url: String
  following_url: String
  gists_url: String
  gravatar_id: String
  html_url: String
  id: Int
  login: String
  organizations_url: String
  received_events_url: String
  repos_url: String
  site_admin: Boolean
  starred_url: String
  subscriptions_url: String
  type: String
  url: String
}

type asset {
  content_type: String
  created_at: String
  download_count: Float
  id: Float
  label: String
  name: String
  size: Float
  state: String
  updated_at: String
  uploader: query_repos_by_owner_by_repo_releases_assets_by_id_uploader
  url: String
}

type query_repos_by_owner_by_repo_releases_assets_by_id_uploader {
  avatar_url: String
  events_url: String
  followers_url: String
  following_url: String
  gists_url: String
  gravatar_id: String
  html_url: String
  id: Float
  login: String
  organizations_url: String
  received_events_url: String
  repos_url: String
  site_admin: Boolean
  starred_url: String
  subscriptions_url: String
  type: String
  url: String
}

type release {
  assets: [query_repos_by_owner_by_repo_releases_by_id_assets_items]
  assets_url: String
  author: query_repos_by_owner_by_repo_releases_by_id_author
  body: String
  created_at: String
  draft: Boolean
  html_url: String
  id: Int
  name: String
  prerelease: Boolean
  published_at: String
  tag_name: String
  tarball_url: String
  target_commitish: String
  upload_url: String
  url: String
  zipball_url: String
}

type query_repos_by_owner_by_repo_releases_by_id_assets_items {
  content_type: String
  created_at: String
  download_count: Int
  id: Int
  label: String
  name: String
  size: Int
  state: String
  updated_at: String
  uploader: query_repos_by_owner_by_repo_releases_by_id_assets_items_uploader
  url: String
}

type query_repos_by_owner_by_repo_releases_by_id_assets_items_uploader {
  avatar_url: String
  events_url: String
  followers_url: String
  following_url: String
  gists_url: String
  gravatar_id: String
  html_url: String
  id: Int
  login: String
  organizations_url: String
  received_events_url: String
  repos_url: String
  site_admin: Boolean
  starred_url: String
  subscriptions_url: String
  type: String
  url: String
}

type query_repos_by_owner_by_repo_releases_by_id_author {
  avatar_url: String
  events_url: String
  followers_url: String
  following_url: String
  gists_url: String
  gravatar_id: String
  html_url: String
  id: Int
  login: String
  organizations_url: String
  received_events_url: String
  repos_url: String
  site_admin: Boolean
  starred_url: String
  subscriptions_url: String
  type: String
  url: String
}

type query_repos_by_owner_by_repo_releases_by_id_assets_items2 {
  content_type: String
  created_at: String
  download_count: Float
  id: Float
  label: String
  name: String
  size: Float
  state: String
  updated_at: String
  uploader: query_repos_by_owner_by_repo_releases_by_id_assets_items_uploader2
  url: String
}

type query_repos_by_owner_by_repo_releases_by_id_assets_items_uploader2 {
  avatar_url: String
  events_url: String
  followers_url: String
  following_url: String
  gists_url: String
  gravatar_id: String
  html_url: String
  id: Float
  login: String
  organizations_url: String
  received_events_url: String
  repos_url: String
  site_admin: Boolean
  starred_url: String
  subscriptions_url: String
  type: String
  url: String
}

type query_repos_by_owner_by_repo_stats_commit_activity_items {
  days: [Int]
  total: Int
  week: Int
}

type query_repos_by_owner_by_repo_stats_contributors_items {
  author: query_repos_by_owner_by_repo_stats_contributors_items_author
  "The Total number of commits authored by the contributor."
  total: Int
  weeks: [query_repos_by_owner_by_repo_stats_contributors_items_weeks_items]
}

type query_repos_by_owner_by_repo_stats_contributors_items_author {
  avatar_url: String
  gravatar_id: String
  id: Int
  login: String
  url: String
}

type query_repos_by_owner_by_repo_stats_contributors_items_weeks_items {
  "Number of additions."
  a: Int
  "Number of commits."
  c: Int
  "Number of deletions."
  d: Int
  "Start of the week."
  w: String
}

type participationStats {
  all: [Int]
  owner: [Int]
}

type query_repos_by_owner_by_repo_statuses_by_ref_items {
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  created_at: String
  creator: query_repos_by_owner_by_repo_statuses_by_ref_items_creator
  description: String
  id: Int
  state: String
  target_url: String
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  updated_at: String
  url: String
}

type query_repos_by_owner_by_repo_statuses_by_ref_items_creator {
  avatar_url: String
  gravatar_id: String
  id: Int
  login: String
  url: String
}

type subscribition {
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  created_at: String
  ignored: Boolean
  reason: String
  repository_url: String
  subscribed: Boolean
  url: String
}

type tags {
  "String of the tag message."
  message: String!
  "String of the SHA of the git object this is tagging."
  object: String!
  tag: String!
  tagger: query_repos_by_owner_by_repo_tags_tagger!
  "String of the type of the object we’re tagging. Normally this is a commit but it can also be a tree or a blob."
  type: String!
}

type query_repos_by_owner_by_repo_tags_tagger {
  "Timestamp of when this object was tagged."
  date: String
  "String of the email of the author of the tag."
  email: String
  "String of the name of the author of the tag."
  name: String
}

enum queryInput_repos_by_owner_by_repo_by_archive_format_by_path_archive_format {
  tarball
  zipball
}

type query_repositories_items {
  description: String
  fork: Boolean
  full_name: String
  html_url: String
  id: Int
  name: String
  owner: query_repositories_items_owner
  private: Boolean
  url: String
}

type query_repositories_items_owner {
  avatar_url: String
  gravatar_id: String
  id: Int
  login: String
  url: String
}

type search_code {
  items: [query_search_code_items_items]
  total_count: Int
}

type query_search_code_items_items {
  git_url: String
  html_url: String
  name: String
  path: String
  repository: query_search_code_items_items_repository
  score: Float
  sha: String
  url: String
}

type query_search_code_items_items_repository {
  archive_url: String
  assignees_url: String
  blobs_url: String
  branches_url: String
  collaborators_url: String
  comments_url: String
  commits_url: String
  compare_url: String
  contents_url: String
  contributors_url: String
  description: String
  downloads_url: String
  events_url: String
  fork: Boolean
  forks_url: String
  full_name: String
  git_commits_url: String
  git_refs_url: String
  git_tags_url: String
  hooks_url: String
  html_url: String
  id: Int
  issue_comment_url: String
  issue_events_url: String
  issues_url: String
  keys_url: String
  labels_url: String
  languages_url: String
  merges_url: String
  milestones_url: String
  name: String
  notifications_url: String
  owner: query_search_code_items_items_repository_owner
  private: Boolean
  pulls_url: String
  stargazers_url: String
  statuses_url: String
  subscribers_url: String
  subscription_url: String
  tags_url: String
  teams_url: String
  trees_url: String
  url: String
}

type query_search_code_items_items_repository_owner {
  avatar_url: String
  events_url: String
  followers_url: String
  following_url: String
  gists_url: String
  gravatar_id: String
  html_url: String
  id: Int
  login: String
  organizations_url: String
  received_events_url: String
  repos_url: String
  starred_url: String
  subscriptions_url: String
  type: String
  url: String
}

"The sort field. if sort param is provided. Can be either asc or desc."
enum queryInput_search_code_order {
  desc
  asc
}

"Can only be 'indexed', which indicates how recently a file has been indexed\\nby the GitHub search infrastructure. If not provided, results are sorted\\nby best match."
enum queryInput_search_code_sort {
  indexed
}

type search_issues {
  items: [query_search_issues_items_items]
  total_count: Int
}

type query_search_issues_items_items {
  assignee: Void
  body: String
  closed_at: Void
  comments: Int
  comments_url: String
  created_at: String
  events_url: String
  html_url: String
  id: Int
  labels: [query_search_issues_items_items_labels_items]
  labels_url: String
  milestone: Void
  number: Int
  pull_request: query_search_issues_items_items_pull_request
  score: Float
  state: String
  title: String
  updated_at: String
  url: String
  user: query_search_issues_items_items_user
}

type query_search_issues_items_items_labels_items {
  color: String
  name: String
  url: String
}

type query_search_issues_items_items_pull_request {
  diff_url: Void
  html_url: Void
  patch_url: Void
}

type query_search_issues_items_items_user {
  avatar_url: String
  events_url: String
  followers_url: String
  following_url: String
  gists_url: String
  gravatar_id: String
  html_url: String
  id: Int
  login: String
  organizations_url: String
  received_events_url: String
  repos_url: String
  starred_url: String
  subscriptions_url: String
  type: String
  url: String
}

"The sort field. if sort param is provided. Can be either asc or desc."
enum queryInput_search_issues_order {
  desc
  asc
}

"The sort field. Can be comments, created, or updated. Default: results are sorted by best match."
enum queryInput_search_issues_sort {
  updated
  created
  comments
}

type search_repositories {
  items: [query_search_repositories_items_items]
  total_count: Int
}

type query_search_repositories_items_items {
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  created_at: String
  default_branch: String
  description: String
  fork: Boolean
  forks: Int
  forks_count: Int
  full_name: String
  homepage: String
  html_url: String
  id: Int
  language: String
  master_branch: String
  name: String
  open_issues: Int
  open_issues_count: Int
  owner: query_search_repositories_items_items_owner
  private: Boolean
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  pushed_at: String
  score: Float
  size: Int
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  updated_at: String
  url: String
  watchers: Int
  watchers_count: Int
}

type query_search_repositories_items_items_owner {
  avatar_url: String
  gravatar_id: String
  id: Int
  login: String
  received_events_url: String
  type: String
  url: String
}

"The sort field. if sort param is provided. Can be either asc or desc."
enum queryInput_search_repositories_order {
  desc
  asc
}

"If not provided, results are sorted by best match."
enum queryInput_search_repositories_sort {
  stars
  forks
  updated
}

type search_users {
  items: [query_search_users_items_items]
  total_count: Int
}

type query_search_users_items_items {
  avatar_url: String
  followers_url: String
  gravatar_id: String
  html_url: String
  id: Int
  login: String
  organizations_url: String
  received_events_url: String
  repos_url: String
  score: Float
  subscriptions_url: String
  type: String
  url: String
}

"The sort field. if sort param is provided. Can be either asc or desc."
enum queryInput_search_users_order {
  desc
  asc
}

"If not provided, results are sorted by best match."
enum queryInput_search_users_sort {
  followers
  repositories
  joined
}

type team {
  id: Int
  members_count: Int
  name: String
  permission: String
  repos_count: Int
  url: String
}

type teamMembership {
  state: String
  url: String
}

type query_teams_by_teamId_repos_items {
  clone_url: String
  created_at: String
  description: String
  fork: Boolean
  forks: Int
  forks_count: Int
  full_name: String
  git_url: String
  homepage: String
  html_url: String
  id: Int
  language: Void
  master_branch: String
  mirror_url: String
  name: String
  open_issues: Int
  open_issues_count: Int
  owner: query_teams_by_teamId_repos_items_owner
  private: Boolean
  pushed_at: String
  size: Int
  ssh_url: String
  svn_url: String
  updated_at: String
  url: String
  watchers: Int
  watchers_count: Int
}

type query_teams_by_teamId_repos_items_owner {
  avatar_url: String
  gravatar_id: String
  id: Int
  login: String
  url: String
}

type user {
  avatar_url: String
  bio: String
  blog: String
  collaborators: Int
  company: String
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  created_at: String
  disk_usage: Int
  email: String
  followers: Int
  following: Int
  gravatar_id: String
  hireable: Boolean
  html_url: String
  id: Int
  location: String
  login: String
  name: String
  owned_private_repos: Int
  plan: query_user_plan
  private_gists: Int
  public_gists: Int
  public_repos: Int
  total_private_repos: Int
  type: String
  url: String
}

type query_user_plan {
  collaborators: Int
  name: String
  private_repos: Int
  space: Int
}

"Issues assigned to you / created by you / mentioning you / you're\\nsubscribed to updates for / All issues the authenticated user can see"
enum queryInput_user_issues_filter {
  assigned
  created
  mentioned
  subscribed
  all
}

enum queryInput_user_issues_state {
  open
  closed
}

enum queryInput_user_issues_sort {
  created
  updated
  comments
}

enum queryInput_user_issues_direction {
  asc
  desc
}

enum queryInput_user_repos_type {
  all
  public
  private
  forks
  sources
  member
}

enum queryInput_user_starred_sort {
  created
  updated
}

type query_user_subscriptions_items {
  clone_url: String
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  created_at: String
  description: String
  fork: Boolean
  forks: Int
  forks_count: Int
  full_name: String
  git_url: String
  homepage: String
  html_url: String
  id: Int
  language: String
  master_branch: Int
  mirror_url: String
  name: String
  open_issues: Int
  open_issues_count: Int
  owner: query_user_subscriptions_items_owner
  private: Boolean
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  pushed_at: String
  size: Int
  ssh_url: String
  svn_url: String
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  updated_at: String
  url: String
  watchers: Int
  watchers_count: Int
}

type query_user_subscriptions_items_owner {
  avatar_url: String
  gravatar_id: String
  id: Int
  login: String
  url: String
}

type query_user_teams_items {
  id: Int
  members_count: Int
  name: String
  organization: query_user_teams_items_organization
  permission: String
  repos_count: Int
  url: String
}

type query_user_teams_items_organization {
  avatar_url: String
  id: Int
  login: String
  url: String
}

enum queryInput_users_by_username_repos_type {
  all
  public
  private
  forks
  sources
  member
}

type Mutation {
  "Create a gist."
  post_gists(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    input: postGist_Input!
  ): gist
  "Delete a gist."
  delete_gists_by_id(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Id of gist."
    id: Int!
  ): Void
  "Edit a gist."
  patch_gists_by_id(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Id of gist."
    id: Int!
    input: patchGist_Input!
  ): gist
  "Create a commen"
  post_gists_by_id_comments(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Id of gist."
    id: Int!
    input: commentBody_Input!
  ): comment!
  "Delete a comment."
  delete_gists_by_id_comments_by_commentId(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Id of gist."
    id: Int!
    "Id of comment."
    commentId: Int!
  ): Void
  "Edit a comment."
  patch_gists_by_id_comments_by_commentId(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Id of gist."
    id: Int!
    "Id of comment."
    commentId: Int!
    input: comment_Input!
  ): comment!
  "Fork a gist."
  post_gists_by_id_forks(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Id of gist."
    id: Int!
  ): Void
  "Unstar a gist."
  delete_gists_by_id_star(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Id of gist."
    id: Int!
  ): Void
  "Star a gist."
  put_gists_by_id_star(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Id of gist."
    id: Int!
  ): Void
  "Render an arbitrary Markdown document"
  post_markdown(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    input: markdown_Input!
  ): JSON
  "Render a Markdown document in raw mode"
  post_markdown_raw(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
  ): JSON
  "Mark as read.\\nMarking a notification as \\"read\\" removes it from the default view on GitHub.com.\\n"
  put_notifications(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    input: notificationMarkRead_Input!
  ): JSON
  "Mark a thread as read"
  patch_notifications_threads_by_id(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Id of thread."
    id: Int!
  ): JSON
  "Delete a Thread Subscription."
  delete_notifications_threads_by_id_subscription(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Id of thread."
    id: Int!
  ): Void
  "Set a Thread Subscription.\\nThis lets you subscribe to a thread, or ignore it. Subscribing to a thread\\nis unnecessary if the user is already subscribed to the repository. Ignoring\\na thread will mute all future notifications (until you comment or get @mentioned).\\n"
  put_notifications_threads_by_id_subscription(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Id of thread."
    id: Int!
    input: putSubscription_Input!
  ): subscription
  "Edit an Organization."
  patch_orgs_by_org(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of organisation."
    org: String!
    input: patchOrg_Input!
  ): organization
  "Remove a member.\\nRemoving a user from this list will remove them from all teams and they\\nwill no longer have any access to the organization's repositories.\\n"
  delete_orgs_by_org_members_by_username(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of organisation."
    org: String!
    "Name of the user."
    username: String!
  ): Void
  "Conceal a user's membership."
  delete_orgs_by_org_public_members_by_username(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of organisation."
    org: String!
    "Name of the user."
    username: String!
  ): Void
  "Publicize a user's membership."
  put_orgs_by_org_public_members_by_username(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of organisation."
    org: String!
    "Name of the user."
    username: String!
  ): Void
  "Create a new repository for the authenticated user. OAuth users must supply\\nrepo scope.\\n"
  post_orgs_by_org_repos(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of organisation."
    org: String!
    input: postRepo_Input!
  ): [query_orgs_by_org_repos_items]
  "Create team.\\nIn order to create a team, the authenticated user must be an owner of organization.\\n"
  post_orgs_by_org_teams(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of organisation."
    org: String!
    input: orgTeamsPost_Input!
  ): team
  "Delete a Repository.\\nDeleting a repository requires admin access. If OAuth is used, the delete_repo\\nscope is required.\\n"
  delete_repos_by_owner_by_repo(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
  ): Void
  "Edit repository."
  patch_repos_by_owner_by_repo(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    input: repoEdit_Input!
  ): repo
  "Remove collaborator."
  delete_repos_by_owner_by_repo_collaborators_by_user(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "Login of the user."
    user: String!
  ): Void
  "Add collaborator."
  put_repos_by_owner_by_repo_collaborators_by_user(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "Login of the user."
    user: String!
  ): Void
  "Delete a commit comment"
  delete_repos_by_owner_by_repo_comments_by_commentId(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "Id of comment."
    commentId: Int!
  ): Void
  "Update a commit comment."
  patch_repos_by_owner_by_repo_comments_by_commentId(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "Id of comment."
    commentId: Int!
    input: commentBody_Input!
  ): commitComments
  "Create a commit comment."
  post_repos_by_owner_by_repo_commits_by_shaCode_comments(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "SHA-1 code of the commit."
    shaCode: String!
    input: commitBody_Input!
  ): commitComments
  "Delete a file.\\nThis method deletes a file in a repository.\\n"
  delete_repos_by_owner_by_repo_contents_by_path(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    path: String!
    input: deleteFileBody_Input!
  ): deleteFile
  "Create a file."
  put_repos_by_owner_by_repo_contents_by_path(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    path: String!
    input: createFileBody_Input!
  ): createFile
  "Users with push access can create a deployment for a given ref"
  post_repos_by_owner_by_repo_deployments(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    input: deployment_Input!
  ): deployment_resp
  "Create a Deployment Status\\nUsers with push access can create deployment statuses for a given deployment:\\n"
  post_repos_by_owner_by_repo_deployments_by_id_statuses(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "The Deployment ID to list the statuses from."
    id: Int!
    input: deployment_statuses_create_Input!
  ): JSON
  "Deprecated. Delete a download."
  delete_repos_by_owner_by_repo_downloads_by_downloadId(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "Id of download."
    downloadId: Int!
  ): Void
  "Create a fork.\\nForking a Repository happens asynchronously. Therefore, you may have to wai\\na short period before accessing the git objects. If this takes longer than 5\\nminutes, be sure to contact Support.\\n"
  post_repos_by_owner_by_repo_forks(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    input: forkBody_Input!
  ): fork
  "Create a Blob."
  post_repos_by_owner_by_repo_git_blobs(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    input: blob_Input!
  ): blobs
  "Create a Commit."
  post_repos_by_owner_by_repo_git_commits(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    input: repoCommitBody_Input!
  ): gitCommit
  "Create a Reference"
  post_repos_by_owner_by_repo_git_refs(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    input: refsBody_Input!
  ): headBranch!
  "Delete a Reference\\nExample: Deleting a branch: DELETE /repos/octocat/Hello-World/git/refs/heads/feature-a \\nExample: Deleting a tag:        DELETE /repos/octocat/Hello-World/git/refs/tags/v1.0\\n"
  delete_repos_by_owner_by_repo_git_refs_by_ref(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    ref: String!
  ): Void
  "Update a Reference"
  patch_repos_by_owner_by_repo_git_refs_by_ref(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    ref: String!
    input: gitRefPatch_Input!
  ): headBranch!
  "Create a Tag Object.\\nNote that creating a tag object does not create the reference that makes a\\ntag in Git. If you want to create an annotated tag in Git, you have to do\\nthis call to create the tag object, and then create the refs/tags/[tag]\\nreference. If you want to create a lightweight tag, you only have to create\\nthe tag reference - this call would be unnecessary.\\n"
  post_repos_by_owner_by_repo_git_tags(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    input: tag_Input!
  ): tags
  "Create a Tree.\\nThe tree creation API will take nested entries as well. If both a tree and\\na nested path modifying that tree are specified, it will overwrite the\\ncontents of that tree with the new path contents and write a new tree out.\\n"
  post_repos_by_owner_by_repo_git_trees(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    input: tree_Input!
  ): trees
  "Create a hook."
  post_repos_by_owner_by_repo_hooks(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    input: hookBody_Input!
  ): [query_repos_by_owner_by_repo_hooks_items]
  "Delete a hook."
  delete_repos_by_owner_by_repo_hooks_by_hookId(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "Id of hook."
    hookId: Int!
  ): Void
  "Edit a hook."
  patch_repos_by_owner_by_repo_hooks_by_hookId(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "Id of hook."
    hookId: Int!
    input: hookBody_Input!
  ): [query_repos_by_owner_by_repo_hooks_items]
  "Test a push hook.\\nThis will trigger the hook with the latest push to the current repository\\nif the hook is subscribed to push events. If the hook is not subscribed\\nto push events, the server will respond with 204 but no test POST will\\nbe generated.\\nNote: Previously /repos/:owner/:repo/hooks/:id/tes\\n"
  post_repos_by_owner_by_repo_hooks_by_hookId_tests(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "Id of hook."
    hookId: Int!
  ): Void
  "Create an issue.\\nAny user with pull access to a repository can create an issue.\\n"
  post_repos_by_owner_by_repo_issues(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    input: issue_Input!
  ): issue!
  "Delete a comment."
  delete_repos_by_owner_by_repo_issues_comments_by_commentId(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "ID of comment."
    commentId: Int!
  ): Void
  "Edit a comment."
  patch_repos_by_owner_by_repo_issues_comments_by_commentId(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "ID of comment."
    commentId: Int!
    input: commentBody_Input!
  ): issuesComment
  "Edit an issue.\\nIssue owners and users with push access can edit an issue.\\n"
  patch_repos_by_owner_by_repo_issues_by_number(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "Number of issue."
    number: Int!
    input: issue_Input!
  ): issue!
  "Create a comment."
  post_repos_by_owner_by_repo_issues_by_number_comments(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "Number of issue."
    number: Int!
    input: commentBody_Input!
  ): issuesComment
  "Remove all labels from an issue."
  delete_repos_by_owner_by_repo_issues_by_number_labels(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "Number of issue."
    number: Int!
  ): Void
  "Add labels to an issue."
  post_repos_by_owner_by_repo_issues_by_number_labels(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "Number of issue."
    number: Int!
    input: [String]!
  ): label
  "Replace all labels for an issue.\\nSending an empty array ([]) will remove all Labels from the Issue.\\n"
  put_repos_by_owner_by_repo_issues_by_number_labels(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "Number of issue."
    number: Int!
    input: [String]!
  ): label
  "Remove a label from an issue."
  delete_repos_by_owner_by_repo_issues_by_number_labels_by_name(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "Number of issue."
    number: Int!
    "Name of the label."
    name: String!
  ): Void
  "Create a key."
  post_repos_by_owner_by_repo_keys(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    input: user_keys_post_Input!
  ): user_keys_keyId
  "Delete a key."
  delete_repos_by_owner_by_repo_keys_by_keyId(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "Id of key."
    keyId: Int!
  ): Void
  "Create a label."
  post_repos_by_owner_by_repo_labels(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    input: [String]!
  ): label
  "Delete a label."
  delete_repos_by_owner_by_repo_labels_by_name(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "Name of the label."
    name: String!
  ): Void
  "Update a label."
  patch_repos_by_owner_by_repo_labels_by_name(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "Name of the label."
    name: String!
    input: [String]!
  ): label
  "Perform a merge."
  post_repos_by_owner_by_repo_merges(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    input: mergesBody_Input!
  ): post_repos_by_owner_by_repo_merges_response
  "Create a milestone."
  post_repos_by_owner_by_repo_milestones(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    input: milestoneUpdate_Input!
  ): milestone
  "Delete a milestone."
  delete_repos_by_owner_by_repo_milestones_by_number(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "Number of milestone."
    number: Int!
  ): Void
  "Update a milestone."
  patch_repos_by_owner_by_repo_milestones_by_number(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "Number of milestone."
    number: Int!
    input: milestoneUpdate_Input!
  ): milestone
  "Mark notifications as read in a repository.\\nMarking all notifications in a repository as \\"read\\" removes them from the\\ndefault view on GitHub.com.\\n"
  put_repos_by_owner_by_repo_notifications(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    input: notificationMarkRead_Input!
  ): JSON
  "Create a pull request."
  post_repos_by_owner_by_repo_pulls(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    input: pullsPost_Input!
  ): [query_repos_by_owner_by_repo_pulls_items]
  "Delete a comment."
  delete_repos_by_owner_by_repo_pulls_comments_by_commentId(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "Id of comment."
    commentId: Int!
  ): Void
  "Edit a comment."
  patch_repos_by_owner_by_repo_pulls_comments_by_commentId(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "Id of comment."
    commentId: Int!
    input: commentBody_Input!
  ): pullsComment
  "Update a pull request."
  patch_repos_by_owner_by_repo_pulls_by_number(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "Id of pull."
    number: Int!
    input: pullUpdate_Input!
  ): repo
  "Create a comment.\\n  #TODO Alternative input ( http://developer.github.com/v3/pulls/comments/ )\\n  description: |\\n    Alternative Input.\\n    Instead of passing commit_id, path, and position you can reply to an\\n    existing Pull Request Comment like this:\\n\\n        body\\n           Required string\\n        in_reply_to\\n           Required number - Comment id to reply to.\\n"
  post_repos_by_owner_by_repo_pulls_by_number_comments(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "Id of pull."
    number: Int!
    input: pullsCommentPost_Input!
  ): pullsComment
  "Merge a pull request (Merge Button's)"
  put_repos_by_owner_by_repo_pulls_by_number_merge(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "Id of pull."
    number: Int!
    input: mergePullBody_Input!
  ): merge
  "Create a release\\nUsers with push access to the repository can create a release.\\n"
  post_repos_by_owner_by_repo_releases(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    input: release_create_Input!
  ): release
  "Delete a release asset"
  delete_repos_by_owner_by_repo_releases_assets_by_id(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    id: String!
  ): Void
  "Edit a release asset\\nUsers with push access to the repository can edit a release asset.\\n"
  patch_repos_by_owner_by_repo_releases_assets_by_id(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    id: String!
    input: assetPatch_Input!
  ): asset
  "Users with push access to the repository can delete a release."
  delete_repos_by_owner_by_repo_releases_by_id(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    id: String!
  ): Void
  "Users with push access to the repository can edit a release"
  patch_repos_by_owner_by_repo_releases_by_id(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    id: String!
    input: release_create_Input!
  ): release
  "Create a Status."
  post_repos_by_owner_by_repo_statuses_by_ref(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    "Ref to list the statuses from. It can be a SHA, a branch name, or a tag name."
    ref: String!
    input: headBranch_Input!
  ): [query_repos_by_owner_by_repo_statuses_by_ref_items]
  "Delete a Repository Subscription."
  delete_repos_by_owner_by_repo_subscription(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
  ): Void
  "Set a Repository Subscription"
  put_repos_by_owner_by_repo_subscription(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of repository owner."
    owner: String!
    "Name of repository."
    repo: String!
    input: subscribitionBody_Input!
  ): subscribition
  "Delete team.\\nIn order to delete a team, the authenticated user must be an owner of the\\norg that the team is associated with.\\n"
  delete_teams_by_teamId(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Id of team."
    teamId: Int!
  ): Void
  "Edit team.\\nIn order to edit a team, the authenticated user must be an owner of the org\\nthat the team is associated with.\\n"
  patch_teams_by_teamId(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Id of team."
    teamId: Int!
    input: editTeam_Input!
  ): team
  "The \\"Remove team member\\" API is deprecated and is scheduled for removal in the next major version of the API. We recommend using the Remove team membership API instead. It allows you to remove both active and pending memberships.\\n\\nRemove team member.\\nIn order to remove a user from a team, the authenticated user must have 'admin'\\npermissions to the team or be an owner of the org that the team is associated\\nwith.\\nNOTE This does not delete the user, it just remove them from the team.\\n"
  delete_teams_by_teamId_members_by_username(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Id of team."
    teamId: Int!
    "Name of a member."
    username: String!
  ): Void
  "The API (described below) is deprecated and is scheduled for removal in the next major version of the API. We recommend using the Add team membership API instead. It allows you to invite new organization members to your teams.\\n\\nAdd team member.\\nIn order to add a user to a team, the authenticated user must have 'admin'\\npermissions to the team or be an owner of the org that the team is associated\\nwith.\\n"
  put_teams_by_teamId_members_by_username(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Id of team."
    teamId: Int!
    "Name of a member."
    username: String!
  ): put_teams_by_teamId_members_by_username_response
  "Remove team membership.\\nIn order to remove a membership between a user and a team, the authenticated user must have 'admin' permissions to the team or be an owner of the organization that the team is associated with. NOTE: This does not delete the user, it just removes their membership from the team.\\n"
  delete_teams_by_teamId_memberships_by_username(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Id of team."
    teamId: Int!
    "Name of a member."
    username: String!
  ): Void
  "Add team membership.\\nIn order to add a membership between a user and a team, the authenticated user must have 'admin' permissions to the team or be an owner of the organization that the team is associated with.\\n\\nIf the user is already a part of the team's organization (meaning they're on at least one other team in the organization), this endpoint will add the user to the team.\\n\\nIf the user is completely unaffiliated with the team's organization (meaning they're on none of the organization's teams), this endpoint will send an invitation to the user via email. This newly-created membership will be in the 'pending' state until the user accepts the invitation, at which point the membership will transition to the 'active' state and the user will be added as a member of the team.\\n"
  put_teams_by_teamId_memberships_by_username(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Id of team."
    teamId: Int!
    "Name of a member."
    username: String!
  ): put_teams_by_teamId_memberships_by_username_response
  "In order to add a repository to a team, the authenticated user must be an owner of the org that the team is associated with. Also, the repository must be owned by the organization, or a direct fork of a repository owned by the organization."
  put_teams_by_teamId_repos_by_org_by_repo(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Id of team."
    teamId: Int!
    "Name of a organization."
    org: String!
    "Name of a repository."
    repo: String!
  ): JSON
  "In order to remove a repository from a team, the authenticated user must be an owner of the org that the team is associated with. NOTE: This does not delete the repository, it just removes it from the team."
  delete_teams_by_teamId_repos_by_owner_by_repo(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Id of team."
    teamId: Int!
    "Name of a repository owner."
    owner: String!
    "Name of a repository."
    repo: String!
  ): Void
  "Update the authenticated user."
  patch_user(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    input: user_update_Input!
  ): user
  "Delete email address(es).\\nYou can include a single email address or an array of addresses.\\n"
  delete_user_emails(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    input: [String]!
  ): Void
  "Add email address(es).\\nYou can post a single email address or an array of addresses.\\n"
  post_user_emails(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    input: [String]!
  ): JSON
  "Unfollow a user.\\nUnfollowing a user requires the user to be logged in and authenticated with\\nbasic auth or OAuth with the user:follow scope.\\n"
  delete_user_following_by_username(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of user."
    username: String!
  ): Void
  "Follow a user.\\nFollowing a user requires the user to be logged in and authenticated with\\nbasic auth or OAuth with the user:follow scope.\\n"
  put_user_following_by_username(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of user."
    username: String!
  ): Void
  "Create a public key."
  post_user_keys(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    input: user_keys_post_Input!
  ): user_keys_keyId
  "Delete a public key. Removes a public key. Requires that you are authenticated via Basic Auth or via OAuth with at least admin:public_key scope."
  delete_user_keys_by_keyId(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "ID of key."
    keyId: Int!
  ): Void
  "Create a new repository for the authenticated user. OAuth users must supply\\nrepo scope.\\n"
  post_user_repos(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    input: postRepo_Input!
  ): [query_orgs_by_org_repos_items]
  "Unstar a repository"
  delete_user_starred_by_owner_by_repo(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of a repository owner."
    owner: String!
    "Name of a repository."
    repo: String!
  ): Void
  "Star a repository."
  put_user_starred_by_owner_by_repo(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of a repository owner."
    owner: String!
    "Name of a repository."
    repo: String!
  ): Void
  "Stop watching a repository"
  delete_user_subscriptions_by_owner_by_repo(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of the owner."
    owner: String!
    "Name of repository."
    repo: String!
  ): Void
  "Watch a repository."
  put_user_subscriptions_by_owner_by_repo(
    "You can check the current version of media type in responses."
    X_GitHub_Media_Type: String
    "Is used to set specified media type."
    Accept: String
    X_RateLimit_Limit: Int
    X_RateLimit_Remaining: Int
    X_RateLimit_Reset: Int
    X_GitHub_Request_Id: Int
    "Name of the owner."
    owner: String!
    "Name of repository."
    repo: String!
  ): Void
}

input postGist_Input {
  description: String
  files: mutationInput_post_gists_input_files_Input
  public: Boolean
}

input mutationInput_post_gists_input_files_Input {
  file1_txt: mutationInput_post_gists_input_files_file1_txt_Input
}

input mutationInput_post_gists_input_files_file1_txt_Input {
  content: String
}

input patchGist_Input {
  description: String
  files: mutationInput_patch_gists_by_id_input_files_Input
}

input mutationInput_patch_gists_by_id_input_files_Input {
  delete_this_file_txt: String
  file1_txt: mutationInput_patch_gists_by_id_input_files_file1_txt_Input
  new_file_txt: mutationInput_patch_gists_by_id_input_files_new_file_txt_Input
  old_name_txt: mutationInput_patch_gists_by_id_input_files_old_name_txt_Input
}

input mutationInput_patch_gists_by_id_input_files_file1_txt_Input {
  content: String
}

input mutationInput_patch_gists_by_id_input_files_new_file_txt_Input {
  content: String
}

input mutationInput_patch_gists_by_id_input_files_old_name_txt_Input {
  content: String
  filename: String
}

input commentBody_Input {
  body: String!
}

input comment_Input {
  body: String
}

input markdown_Input {
  context: String
  mode: String
  text: String
}

input notificationMarkRead_Input {
  last_read_at: String
}

input putSubscription_Input {
  created_at: String
  ignored: Boolean
  reason: JSON
  subscribed: Boolean
  thread_url: String
  url: String
}

input patchOrg_Input {
  "Billing email address. This address is not publicized."
  billing_email: String
  company: String
  "Publicly visible email address."
  email: String
  location: String
  name: String
}

input postRepo_Input {
  "True to create an initial commit with empty README. Default is false."
  auto_init: Boolean
  description: String
  "Desired language or platform .gitignore template to apply. Use the name of the template without the extension. For example, \\"Haskell\\" Ignored if auto_init parameter is not provided."
  gitignore_template: String
  "True to enable downloads for this repository, false to disable them. Default is true."
  has_downloads: Boolean
  "True to enable issues for this repository, false to disable them. Default is true."
  has_issues: Boolean
  "True to enable the wiki for this repository, false to disable it. Default is true."
  has_wiki: Boolean
  homepage: String
  name: String!
  "True to create a private repository, false to create a public one. Creating private repositories requires a paid GitHub account."
  private: Boolean
  "The id of the team that will be granted access to this repository. This is only valid when creating a repo in an organization."
  team_id: Int
}

input orgTeamsPost_Input {
  name: String!
  permission: mutationInput_post_orgs_by_org_teams_input_permission
  repo_names: [String]
}

enum mutationInput_post_orgs_by_org_teams_input_permission {
  pull
  push
  admin
}

input repoEdit_Input {
  description: String
  has_downloads: Boolean
  has_issues: Boolean
  has_wiki: Boolean
  homepage: String
  name: String
  private: Boolean
}

input commitBody_Input {
  body: String!
  "Deprecated - Use position parameter instead."
  line: String
  "Line number in the file to comment on. Defaults to null."
  number: String
  "Relative path of the file to comment on."
  path: String
  "Line index in the diff to comment on."
  position: Int
  "SHA of the commit to comment on."
  sha: String!
}

type deleteFile {
  commit: mutation_delete_repos_by_owner_by_repo_contents_by_path_commit
  content: String
}

type mutation_delete_repos_by_owner_by_repo_contents_by_path_commit {
  author: mutation_delete_repos_by_owner_by_repo_contents_by_path_commit_author
  committer: mutation_delete_repos_by_owner_by_repo_contents_by_path_commit_committer
  html_url: String
  message: String
  parents: mutation_delete_repos_by_owner_by_repo_contents_by_path_commit_parents
  sha: String
  tree: mutation_delete_repos_by_owner_by_repo_contents_by_path_commit_tree
  url: String
}

type mutation_delete_repos_by_owner_by_repo_contents_by_path_commit_author {
  date: String
  email: String
  name: String
}

type mutation_delete_repos_by_owner_by_repo_contents_by_path_commit_committer {
  date: String
  email: String
  name: String
}

type mutation_delete_repos_by_owner_by_repo_contents_by_path_commit_parents {
  html_url: String
  sha: String
  url: String
}

type mutation_delete_repos_by_owner_by_repo_contents_by_path_commit_tree {
  sha: String
  url: String
}

input deleteFileBody_Input {
  committer: mutationInput_delete_repos_by_owner_by_repo_contents_by_path_input_committer_Input
  message: String
  sha: String
}

input mutationInput_delete_repos_by_owner_by_repo_contents_by_path_input_committer_Input {
  email: String
  name: String
}

type createFile {
  commit: mutation_put_repos_by_owner_by_repo_contents_by_path_commit
  content: mutation_put_repos_by_owner_by_repo_contents_by_path_content
}

type mutation_put_repos_by_owner_by_repo_contents_by_path_commit {
  author: mutation_put_repos_by_owner_by_repo_contents_by_path_commit_author
  committer: mutation_put_repos_by_owner_by_repo_contents_by_path_commit_committer
  html_url: String
  message: String
  parents: [mutation_put_repos_by_owner_by_repo_contents_by_path_commit_parents_items]
  sha: String
  tree: mutation_put_repos_by_owner_by_repo_contents_by_path_commit_tree
  url: String
}

type mutation_put_repos_by_owner_by_repo_contents_by_path_commit_author {
  date: String
  email: String
  name: String
}

type mutation_put_repos_by_owner_by_repo_contents_by_path_commit_committer {
  date: String
  email: String
  name: String
}

type mutation_put_repos_by_owner_by_repo_contents_by_path_commit_parents_items {
  html_url: String
  sha: String
  url: String
}

type mutation_put_repos_by_owner_by_repo_contents_by_path_commit_tree {
  sha: String
  url: String
}

type mutation_put_repos_by_owner_by_repo_contents_by_path_content {
  links: mutation_put_repos_by_owner_by_repo_contents_by_path_content_links
  git_url: String
  html_url: String
  name: String
  path: String
  sha: String
  size: Int
  type: String
  url: String
}

type mutation_put_repos_by_owner_by_repo_contents_by_path_content_links {
  git: String
  html: String
  self: String
}

input createFileBody_Input {
  committer: mutationInput_put_repos_by_owner_by_repo_contents_by_path_input_committer_Input
  content: String
  message: String
}

input mutationInput_put_repos_by_owner_by_repo_contents_by_path_input_committer_Input {
  email: String
  name: String
}

type deployment_resp {
  created_at: String
  creator: mutation_post_repos_by_owner_by_repo_deployments_creator
  description: String
  id: Int
  payload: String
  sha: String
  statuses_url: String
  updated_at: String
  url: String
}

type mutation_post_repos_by_owner_by_repo_deployments_creator {
  avatar_url: String
  events_url: String
  followers_url: String
  following_url: String
  gists_url: String
  gravatar_id: String
  html_url: String
  id: Int
  login: String
  organizations_url: String
  received_events_url: String
  repos_url: String
  site_admin: Boolean
  starred_url: String
  subscriptions_url: String
  type: String
  url: String
}

input deployment_Input {
  description: String
  payload: mutationInput_post_repos_by_owner_by_repo_deployments_input_payload_Input
  ref: String
}

input mutationInput_post_repos_by_owner_by_repo_deployments_input_payload_Input {
  deploy_user: String
  environment: String
  room_id: Float
}

input deployment_statuses_create_Input {
  description: String
  state: String
  target_url: String
}

type fork {
  clone_url: String
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  created_at: String
  description: String
  fork: Boolean
  forks: Int
  forks_count: Int
  full_name: String
  git_url: String
  homepage: String
  html_url: String
  id: Int
  language: String
  master_branch: String
  mirror_url: String
  name: String
  open_issues: Int
  open_issues_count: Int
  owner: mutation_post_repos_by_owner_by_repo_forks_owner
  private: Boolean
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  pushed_at: String
  size: Int
  ssh_url: String
  svn_url: String
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  updated_at: String
  url: String
  watchers: Int
  watchers_count: Int
}

type mutation_post_repos_by_owner_by_repo_forks_owner {
  avatar_url: String
  gravatar_id: String
  id: Int
  login: String
  url: String
}

input forkBody_Input {
  organization: String
}

type blobs {
  sha: String
}

input blob_Input {
  content: String
  encoding: query_repos_by_owner_by_repo_git_blobs_by_shaCode_encoding
  sha: String
  size: Int
}

type gitCommit {
  author: mutation_post_repos_by_owner_by_repo_git_commits_author
  message: String
  parents: String
  tree: String
}

type mutation_post_repos_by_owner_by_repo_git_commits_author {
  date: String
  email: String
  name: String
}

input repoCommitBody_Input {
  author: mutationInput_post_repos_by_owner_by_repo_git_commits_input_author_Input
  message: String!
  parents: [String]!
  tree: String!
}

input mutationInput_post_repos_by_owner_by_repo_git_commits_input_author_Input {
  date: String
  email: String
  name: String
}

input refsBody_Input {
  ref: String
  sha: String
}

input gitRefPatch_Input {
  force: Boolean
  sha: String
}

input tag_Input {
  message: String
  object: query_repos_by_owner_by_repo_git_tags_by_shaCode_object_Input
  sha: String
  tag: String
  tagger: query_repos_by_owner_by_repo_git_tags_by_shaCode_tagger_Input
  url: String
}

input query_repos_by_owner_by_repo_git_tags_by_shaCode_object_Input {
  sha: String
  type: String
  url: String
}

input query_repos_by_owner_by_repo_git_tags_by_shaCode_tagger_Input {
  "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
  date: String
  email: String
  name: String
}

type trees {
  base_tree: String
  "SHA1 checksum ID of the object in the tree."
  sha: String
  tree: [mutation_post_repos_by_owner_by_repo_git_trees_tree_items]
  url: String
}

type mutation_post_repos_by_owner_by_repo_git_trees_tree_items {
  mode: mutation_post_repos_by_owner_by_repo_git_trees_tree_items_mode
  path: String
  "SHA1 checksum ID of the object in the tree."
  sha: String
  type: mutation_post_repos_by_owner_by_repo_git_trees_tree_items_type
  url: String
}

"One of 100644 for file (blob), 100755 for executable (blob), 040000 for subdirectory (tree), 160000 for submodule (commit) or 120000 for a blob that specifies the path of a symlink."
enum mutation_post_repos_by_owner_by_repo_git_trees_tree_items_mode {
  _100644
  _100755
  _040000
  _160000
  _120000
}

enum mutation_post_repos_by_owner_by_repo_git_trees_tree_items_type {
  blob
  tree
  commit
}

input tree_Input {
  sha: String
  tree: [query_repos_by_owner_by_repo_git_trees_by_shaCode_tree_items_Input]
  url: String
}

input query_repos_by_owner_by_repo_git_trees_by_shaCode_tree_items_Input {
  mode: String
  path: String
  sha: String
  size: Int
  type: String
  url: String
}

input hookBody_Input {
  active: Boolean
  add_events: [String]
}

input issue_Input {
  assignee: String
  body: String
  labels: [String]
  milestone: Float
  title: String
}

input user_keys_post_Input {
  key: String
  title: String
}

union post_repos_by_owner_by_repo_merges_response = mergesSuccessful | Void_container | mergesConflict

type mergesSuccessful {
  author: mutation_post_repos_by_owner_by_repo_merges_oneOf_0_author
  comments_url: String
  commit: mutation_post_repos_by_owner_by_repo_merges_oneOf_0_commit
  committer: mutation_post_repos_by_owner_by_repo_merges_oneOf_0_committer
  merged: Boolean
  message: String
  parents: [mutation_post_repos_by_owner_by_repo_merges_oneOf_0_parents_items]
  sha: String
  url: String
}

type mutation_post_repos_by_owner_by_repo_merges_oneOf_0_author {
  avatar_url: String
  events_url: String
  followers_url: String
  following_url: String
  gists_url: String
  gravatar_id: String
  html_url: String
  id: Int
  login: String
  organizations_url: String
  received_events_url: String
  repos_url: String
  starred_url: String
  subscriptions_url: String
  type: String
  url: String
}

type mutation_post_repos_by_owner_by_repo_merges_oneOf_0_commit {
  author: mutation_post_repos_by_owner_by_repo_merges_oneOf_0_commit_author
  comment_count: Int
  committer: mutation_post_repos_by_owner_by_repo_merges_oneOf_0_commit_committer
  message: String
  tree: mutation_post_repos_by_owner_by_repo_merges_oneOf_0_commit_tree
  url: String
}

type mutation_post_repos_by_owner_by_repo_merges_oneOf_0_commit_author {
  date: String
  email: String
  name: String
}

type mutation_post_repos_by_owner_by_repo_merges_oneOf_0_commit_committer {
  date: String
  email: String
  name: String
}

type mutation_post_repos_by_owner_by_repo_merges_oneOf_0_commit_tree {
  sha: String
  url: String
}

type mutation_post_repos_by_owner_by_repo_merges_oneOf_0_committer {
  avatar_url: String
  events_url: String
  followers_url: String
  following_url: String
  gists_url: String
  gravatar_id: String
  html_url: String
  id: Int
  login: String
  organizations_url: String
  received_events_url: String
  repos_url: String
  starred_url: String
  subscriptions_url: String
  type: String
  url: String
}

type mutation_post_repos_by_owner_by_repo_merges_oneOf_0_parents_items {
  sha: String
  url: String
}

type Void_container {
  Void: Void
}

type mergesConflict {
  "Error message"
  message: String
}

input mergesBody_Input {
  base: String
  commit_message: String
  head: String
}

input milestoneUpdate_Input {
  description: String
  due_on: String
  state: String
  title: String
}

input pullsPost_Input {
  base: String
  body: String
  head: String
  title: String
}

input pullUpdate_Input {
  body: String
  state: String
  title: String
}

input pullsCommentPost_Input {
  body: String
  commit_id: String
  path: String
  position: Float
}

type merge {
  merged: Boolean
  message: String
  sha: String
}

input mergePullBody_Input {
  commit_message: String
}

input release_create_Input {
  body: String
  draft: Boolean
  name: String
  prerelease: Boolean
  tag_name: String
  target_commitish: String
}

input assetPatch_Input {
  label: String
  name: String!
}

input headBranch_Input {
  object: query_repos_by_owner_by_repo_git_refs_by_ref_object_Input
  ref: String
  url: String
}

input query_repos_by_owner_by_repo_git_refs_by_ref_object_Input {
  sha: String
  type: String
  url: String
}

input subscribitionBody_Input {
  ignored: Boolean
  subscribed: Boolean
}

input editTeam_Input {
  name: String!
  permission: mutationInput_patch_teams_by_teamId_input_permission
}

enum mutationInput_patch_teams_by_teamId_input_permission {
  pull
  push
  admin
}

union put_teams_by_teamId_members_by_username_response = Void_container | organizationAsTeamMember

type organizationAsTeamMember {
  errors: [mutation_put_teams_by_teamId_members_by_username_oneOf_1_errors_items]
  message: String
}

type mutation_put_teams_by_teamId_members_by_username_oneOf_1_errors_items {
  code: String
  field: String
  resource: String
}

union put_teams_by_teamId_memberships_by_username_response = teamMembership | organizationAsTeamMember

input user_update_Input {
  bio: String
  blog: String
  company: String
  email: String
  hireable: Boolean
  location: String
  name: String
}"
`;
