// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OpenAPI Loader: Testing the naming convention should generate the schema correctly 1`] = `
"schema {
  query: Query
}

directive @enum(value: String) on ENUM_VALUE

directive @globalOptions(sourceName: String, endpoint: String, operationHeaders: ObjMap, queryStringOptions: ObjMap, queryParams: ObjMap) on OBJECT

directive @httpOperation(path: String, operationSpecificHeaders: ObjMap, httpMethod: HTTPMethod, isBinary: Boolean, requestBaseBody: ObjMap, queryParamArgMap: ObjMap, queryStringOptionsByParam: ObjMap) on FIELD_DEFINITION

directive @linkResolver(linkResolverMap: ObjMap) on FIELD_DEFINITION

directive @link(defaultRootType: String, defaultField: String) on FIELD_DEFINITION

type Query @globalOptions(sourceName: "example_api", endpoint: "http://localhost:3000/api") {
  "Basic simpleNames option test"
  o_d_d___n_a_m_e: o_d_d___n_a_m_e_200_response @httpOperation(path: "/o_d_d___n_a_m_e", operationSpecificHeaders: "{\\"accept\\":\\"application/json\\"}", httpMethod: GET) @linkResolver(linkResolverMap: "{\\"w_e_i_r_d___n_a_m_e___l_i_n_k\\":{\\"targetTypeName\\":\\"Query\\",\\"targetFieldName\\":\\"w_e_i_r_d___n_a_m_e\\"},\\"w_e_i_r_d___n_a_m_e2___l_i_n_k\\":{\\"linkObjArgs\\":{\\"f_u_n_k_y___p_a_r_a_m_e_t_e_r\\":\\"Charles\\"},\\"targetTypeName\\":\\"Query\\",\\"targetFieldName\\":\\"w_e_i_r_d___n_a_m_e2_by_f_u_n_k_y___p_a_r_a_m_e_t_e_r\\"},\\"w_e_i_r_d___n_a_m_e3___l_i_n_k\\":{\\"targetTypeName\\":\\"Query\\",\\"targetFieldName\\":\\"w_e_i_r_d___n_a_m_e3_by_f_u_n_k_y___p_a_r_a_m_e_t_e_r\\"}}")
  "Basic simpleNames option test with GraphQL unsafe values"
  w_e_i_r_d___n_a_m_e: w_e_i_r_d___n_a_m_e_200_response @httpOperation(path: "/w-e-i-r-d___n-a-m-e", operationSpecificHeaders: "{\\"accept\\":\\"application/json\\"}", httpMethod: GET)
  "Basic simpleNames option test with links with hard-coded parameters"
  w_e_i_r_d___n_a_m_e2_by_f_u_n_k_y___p_a_r_a_m_e_t_e_r(f_u_n_k_y___p_a_r_a_m_e_t_e_r: String!): w_e_i_r_d___n_a_m_e2_by_f_u_n_k_y___p_a_r_a_m_e_t_e_r_200_response @httpOperation(path: "/w-e-i-r-d___n-a-m-e2/{args.f_u_n_k_y___p_a_r_a_m_e_t_e_r}", operationSpecificHeaders: "{\\"accept\\":\\"application/json\\"}", httpMethod: GET)
  "Basic simpleNames option test with links with exposed parameters"
  w_e_i_r_d___n_a_m_e3_by_f_u_n_k_y___p_a_r_a_m_e_t_e_r(f_u_n_k_y___p_a_r_a_m_e_t_e_r: String!): w_e_i_r_d___n_a_m_e3_by_f_u_n_k_y___p_a_r_a_m_e_t_e_r_200_response @httpOperation(path: "/w-e-i-r-d___n-a-m-e3/{args.f_u_n_k_y___p_a_r_a_m_e_t_e_r}", operationSpecificHeaders: "{\\"accept\\":\\"application/json\\"}", httpMethod: GET)
  "Basic simpleEnumValues option test"
  getEnum: getEnum_200_response @httpOperation(path: "/getEnum", operationSpecificHeaders: "{\\"accept\\":\\"application/json\\"}", httpMethod: GET)
  "Basic simpleEnumValues option test on numerical enum"
  getNumericalEnum: getNumericalEnum_200_response @httpOperation(path: "/getNumericalEnum", operationSpecificHeaders: "{\\"accept\\":\\"application/json\\"}", httpMethod: GET)
  "Basic simpleEnumValues option test on object enum"
  getObjectEnum: getObjectEnum_200_response @httpOperation(path: "/getObjectEnum", operationSpecificHeaders: "{\\"accept\\":\\"application/json\\"}", httpMethod: GET)
}

type o_d_d___n_a_m_e_200_response {
  data: String
  "Basic link"
  w_e_i_r_d___n_a_m_e___l_i_n_k: w_e_i_r_d___n_a_m_e_200_response @link(defaultRootType: "Query", defaultField: "o_d_d___n_a_m_e")
  "Hardcoded link parameter"
  w_e_i_r_d___n_a_m_e2___l_i_n_k: w_e_i_r_d___n_a_m_e2_by_f_u_n_k_y___p_a_r_a_m_e_t_e_r_200_response @link(defaultRootType: "Query", defaultField: "o_d_d___n_a_m_e")
  "Exposed link parameter"
  w_e_i_r_d___n_a_m_e3___l_i_n_k(f_u_n_k_y___p_a_r_a_m_e_t_e_r: String!): w_e_i_r_d___n_a_m_e3_by_f_u_n_k_y___p_a_r_a_m_e_t_e_r_200_response @link(defaultRootType: "Query", defaultField: "o_d_d___n_a_m_e")
}

type w_e_i_r_d___n_a_m_e_200_response {
  data: String
}

type w_e_i_r_d___n_a_m_e2_by_f_u_n_k_y___p_a_r_a_m_e_t_e_r_200_response {
  data: String
}

type w_e_i_r_d___n_a_m_e3_by_f_u_n_k_y___p_a_r_a_m_e_t_e_r_200_response {
  data: String
}

type getEnum_200_response {
  data: query_getEnum_data
}

enum query_getEnum_data {
  r_e_d @enum(value: "\\"r-e-d\\"")
  a_m_b_e_r @enum(value: "\\"a-m-b-e-r\\"")
  g_r_e_e_n @enum(value: "\\"g-r-e-e-n\\"")
}

type getNumericalEnum_200_response {
  data: query_getNumericalEnum_data
}

enum query_getNumericalEnum_data {
  _1 @enum(value: "1")
  _2 @enum(value: "2")
  _3 @enum(value: "3")
  _4 @enum(value: "4")
  _5 @enum(value: "5")
}

type getObjectEnum_200_response {
  data: query_getObjectEnum_data
}

enum query_getObjectEnum_data {
  _LEFT_SQUARE_BRACE_object_Object_RIGHT_SQUARE_BRACE_ @enum(value: "{\\"goodbye\\":\\"world\\"}")
}

scalar ObjMap

enum HTTPMethod {
  GET
  HEAD
  POST
  PUT
  DELETE
  CONNECT
  OPTIONS
  TRACE
  PATCH
}"
`;
