// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Basket should generate the correct schema 1`] = `
"schema {
  query: Query
  mutation: Mutation
}

directive @oneOf on OBJECT | INTERFACE | INPUT_OBJECT

directive @statusCodeTypeName(typeName: String, statusCode: ID) repeatable on UNION

directive @regexp(pattern: String) on SCALAR

directive @typescript(type: String) on SCALAR | ENUM

directive @globalOptions(sourceName: String, endpoint: String, operationHeaders: ObjMap, queryStringOptions: ObjMap, queryParams: ObjMap) on OBJECT

directive @httpOperation(path: String, operationSpecificHeaders: ObjMap, httpMethod: HTTPMethod, isBinary: Boolean, requestBaseBody: ObjMap, queryParamArgMap: ObjMap, queryStringOptionsByParam: ObjMap) on FIELD_DEFINITION

type Query @globalOptions(sourceName: "basket") {
  customers_by_customerId(
    "Authentication Token"
    x_auth_token: String!
  ): CustomerAttributes @httpOperation(path: "/customers/{customerId}", operationSpecificHeaders: "{\\"x-auth-token\\":\\"{args.x_auth_token}\\",\\"accept\\":\\"application/json\\"}", httpMethod: GET)
  Locations: [LocationModel] @httpOperation(path: "/Locations", operationSpecificHeaders: "{\\"accept\\":\\"application/json,application/custom-thingy.v3+json\\"}", httpMethod: GET)
  Cards: [CardModel] @httpOperation(path: "/Cards", operationSpecificHeaders: "{\\"accept\\":\\"application/json,application/custom.v3+json\\"}", httpMethod: GET)
}

type CustomerAttributes {
  attributes: [Attribute]!
}

type Attribute {
  name: String!
  more: JSON
}

"The \`JSON\` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf)."
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type LocationModel {
  email: query_Locations_oneOf_0_items_email
  parents: [LocationModel]
}

scalar query_Locations_oneOf_0_items_email @regexp(pattern: "^(?(\\")(\\".+?(?<!\\\\\\\\)\\"@)|(([0-9a-zA-Z]((\\\\.(?!\\\\.))|[-!#\\\\$%&'\\\\*\\\\+/=\\\\?\\\\^\`\\\\{\\\\}\\\\|~\\\\w])*)(?<=[0-9a-zA-Z\\\\-_])@))(?(\\\\[)(\\\\[(\\\\d{1,3}\\\\.){3}\\\\d{1,3}\\\\])|(([0-9a-zA-Z][-\\\\w]*[0-9a-zA-Z]*\\\\.)+[a-zA-Z0-9][\\\\-a-zA-Z0-9]{0,22}[a-zA-Z0-9]))$") @typescript(type: "string")

type CardModel {
  id: String
}

type Mutation {
  post_basket(input: String): [post_basket_response] @httpOperation(path: "/basket", operationSpecificHeaders: "{\\"Content-Type\\":\\"application/json\\",\\"accept\\":\\"application/json\\"}", httpMethod: POST)
}

union post_basket_response @statusCodeTypeName(statusCode: 200, typeName: "BasketResponse") @statusCodeTypeName(statusCode: 400, typeName: "ApiError") = BasketResponse | ApiError

type BasketResponse {
  products: [mutation_post_basket_oneOf_0_products_items]
}

union mutation_post_basket_oneOf_0_products_items = ApiProduct | ApiReservedProduct

type ApiProduct {
  co2EmissionInGramsPerPassenger: Int
  eligibleForVouchers: Boolean
}

type ApiReservedProduct {
  co2EmissionInGramsPerPassenger: Int
  reservationExpiresAt: String
}

type ApiError {
  code: String!
}

scalar ObjMap

enum HTTPMethod {
  GET
  HEAD
  POST
  PUT
  DELETE
  CONNECT
  OPTIONS
  TRACE
  PATCH
}"
`;
