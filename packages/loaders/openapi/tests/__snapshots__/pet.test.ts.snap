// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Pet should generate the correct schema: schema 1`] = `
"schema @transport(subgraph: "Pet", kind: "rest", location: "http://example.com") {
  query: Query
}

directive @discriminator(subgraph: String, field: String, mapping: ObjMap) on INTERFACE | UNION

directive @httpOperation(subgraph: String, path: String, operationSpecificHeaders: [[String]], httpMethod: HTTPMethod, isBinary: Boolean, requestBaseBody: ObjMap, queryParamArgMap: ObjMap, queryStringOptionsByParam: ObjMap, jsonApiFields: Boolean, queryStringOptions: ObjMap) on FIELD_DEFINITION

directive @transport(subgraph: String, kind: String, location: String, headers: [[String]], queryStringOptions: ObjMap, queryParams: [[String]]) repeatable on SCHEMA

type Dog implements Pet {
  dog_exclusive: String
  name: String!
  petType: String
}

interface Pet @discriminator(subgraph: "Pet", field: "petType", mapping: "{\\"Dog\\":\\"Dog\\",\\"Cat\\":\\"Cat\\"}") {
  name: String!
  petType: String
}

type Cat implements Pet {
  cat_exclusive: String
  name: String!
  petType: String
}

type Query {
  pets_by_id(id: String!): Pet @httpOperation(subgraph: "Pet", path: "/pets/{args.id}", operationSpecificHeaders: [["accept", "application/json"]], httpMethod: GET)
}

scalar ObjMap

enum HTTPMethod {
  GET
  HEAD
  POST
  PUT
  DELETE
  CONNECT
  OPTIONS
  TRACE
  PATCH
}"
`;
