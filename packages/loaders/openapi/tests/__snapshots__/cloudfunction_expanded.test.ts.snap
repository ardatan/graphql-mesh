// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Cloudfunction should generate correct schema: cloudfunction-schema 1`] = `
"schema @transport(subgraph: "test", kind: "rest", location: "https://openwhisk.ng.bluemix.net/api/v1/namespaces/_/actions", headers: [["Authorization", "Basic {args.usernamePassword|base64}"]]) {
  query: Query
  mutation: Mutation
}

directive @httpOperation(subgraph: String, path: String, operationSpecificHeaders: [[String]], httpMethod: HTTPMethod, isBinary: Boolean, requestBaseBody: ObjMap, queryParamArgMap: ObjMap, queryStringOptionsByParam: ObjMap, jsonApiFields: Boolean) on FIELD_DEFINITION

directive @transport(subgraph: String, kind: String, location: String, headers: [[String]], queryStringOptions: ObjMap, queryParams: [[String]]) on SCHEMA

type Query {
  dummy: String
}

type Mutation {
  """Description of the action"""
  post_test_action_2(usernamePassword: String, blocking: Boolean = true, result: Boolean = true, input: Payload_Input): Response @httpOperation(subgraph: "test", path: "/test-action-2", operationSpecificHeaders: [["Content-Type", "application/vnd.experimental+json"], ["accept", "application/json"]], httpMethod: POST, queryParamArgMap: "{\\"blocking\\":\\"blocking\\",\\"result\\":\\"result\\"}")
}

type Response {
  payload: String!
  age: Float!
  valid: Boolean!
}

input Payload_Input {
  age: Float!
}

enum HTTPMethod {
  GET
  HEAD
  POST
  PUT
  DELETE
  CONNECT
  OPTIONS
  TRACE
  PATCH
}

scalar ObjMap"
`;
