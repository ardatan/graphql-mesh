{
  "openapi": "3.0.0",
  "info": {
    "title": "Example API combined",
    "description": "An API to test converting Open API Specs 3.0 to GraphQL",
    "version": "1.0.0",
    "termsOfService": "http://example.com/terms/",
    "contact": {
      "name": "Erik Wittern",
      "url": "http://www.example.com/support"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "externalDocs": {
    "url": "http://example.com/docs",
    "description": "Some more natural language description."
  },
  "tags": [
    {
      "name": "test",
      "description": "Indicates this API is for testing"
    }
  ],
  "servers": [
    {
      "url": "http://localhost:{port}/{basePath}",
      "description": "The location of the local test server.",
      "variables": {
        "port": {
          "default": "3004"
        },
        "basePath": {
          "default": "api"
        }
      }
    }
  ],
  "paths": {
    "/cars": {
      "get": {
        "operationId": "getAllCars",
        "description": "Returns information about all employee cars",
        "responses": {
          "200": {
            "description": "Everyone's cars",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/car"
                      },
                      {
                        "$ref": "#/components/schemas/hasTags"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "car": {
        "type": "object",
        "description": "A car",
        "properties": {
          "model": {
            "type": "string",
            "description": "The model of the car."
          },
          "color": {
            "type": "string",
            "description": "The color of the car."
          },
          "features": {
            "properties": {}
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          },
          "kind": {
            "type": "string",
            "enum": ["SEDAN", "SUV", "MINIVAN", "LIMOSINE", "RACE_CAR"]
          },
          "rating": {
            "type": "number",
            "enum": [100, 101, 200],
            "description": "The rating of the car."
          }
        }
      },
      "hasTags": {
        "type": "object",
        "description": "A thing with tags",
        "properties": {
          "tags": {
            "$ref": "#/components/schemas/tags"
          }
        }
      },
      "tags": {
        "type": "object",
        "title": "Tags",
        "description": "Arbitrary (string) tags describing an entity.",
        "additionalProperties": {
          "type": "string"
        }
      }
    }
  },
  "security": []
}
