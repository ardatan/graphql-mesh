// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Example 1 should generate the schema correctly 1`] = `
"type Query {
  TodoService_TodoService_BasicHttpBinding_ITodoService_GetTodos(GetTodos: JSON = ""): TodoService_GetTodosResponse
}

type TodoService_GetTodosResponse {
  GetTodosResult: tns_ArrayOfTodoMessage!
}

type tns_ArrayOfTodoMessage {
  TodoMessage: [tns_TodoMessage]!
}

type tns_TodoMessage {
  Author: tns_Name!
  Description: String!
}

type tns_Name {
  First: String!
  Last: String!
  Middle: String!
}

"""
The \`JSON\` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type Mutation {
  TodoService_TodoService_BasicHttpBinding_ITodoService_UpdateFileClass(UpdateFileClass: TodoService_UpdateFileClass_Input): JSON
  TodoService_TodoService_BasicHttpBinding_ITodoService_AddUpdateClass(AddUpdateClass: TodoService_AddUpdateClass_Input): TodoService_AddUpdateClassResponse
  TodoService_TodoService_BasicHttpBinding_ITodoService_AddTodo(AddTodo: TodoService_AddTodo_Input): TodoService_AddTodoResponse
  TodoService_TodoService_BasicHttpBinding_ITodoService_FaultAddTodo(FaultAddTodo: TodoService_FaultAddTodo_Input): TodoService_FaultAddTodoResponse
  TodoService_TodoService_BasicHttpBinding_ITodoService_FailGetTodo(FailGetTodo: JSON = ""): TodoService_FailGetTodoResponse
}

input TodoService_UpdateFileClass_Input {
  cls: tns_FileClass_Input
}

input tns_FileClass_Input {
  Mode: String
  ClassIntID: BigInt
  CreatedBy: String
  CreatedDtTm: DateTime
  FirmIntID: String
  LastUpdatedBy: String
  LastUpdatedDtTm: DateTime
  Name: String
  PeriodType: String
  Retention: Int
  Timestamp: Byte
}

"""
The \`BigInt\` scalar type represents non-fractional signed whole numeric values.
"""
scalar BigInt

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the \`date-time\` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

"""The \`Byte\` scalar type represents byte value as a Buffer"""
scalar Byte

type TodoService_AddUpdateClassResponse {
  AddUpdateClassResult: Boolean!
}

input TodoService_AddUpdateClass_Input {
  updateClass: tns_UpdateClass_Input
}

input tns_UpdateClass_Input {
  ClassIndId: String
}

type TodoService_AddTodoResponse {
  AddTodoResult: Boolean!
}

input TodoService_AddTodo_Input {
  todo: tns_TodoMessage_Input
}

input tns_TodoMessage_Input {
  Author: tns_Name_Input
  Description: String
}

input tns_Name_Input {
  First: String
  Last: String
  Middle: String
}

type TodoService_FaultAddTodoResponse {
  FaultAddTodoResult: String!
}

input TodoService_FaultAddTodo_Input {
  text: String
}

type TodoService_FailGetTodoResponse {
  FailGetTodoResult: String!
}"
`;
