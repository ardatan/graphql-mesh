name: Release
on:
  push:
    branches:
      - master
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Master
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Configure Git Credentials
        run: |
          git config --global user.email "theguild-bot@users.noreply.github.com"
          git config --global user.name "theguild-bot"
          echo "machine github.com login theguild-bot password ${{secrets.GH_API_TOKEN}}" > ~/.netrc
      - name: Add origin remote and refetch master
        run: |
          git remote rm origin
          git remote add origin "https://github.com/${{github.repository}}"
          git fetch
          git checkout master
          git reset --hard
      - name: Use Node
        uses: actions/setup-node@v2
        with:
          node-version: '15.x'
      - name: Setup NPM credentials
        run: echo "//registry.npmjs.org/:_authToken=$NODE_AUTH_TOKEN" >> ~/.npmrc
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
      - name: Cache Yarn
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-15-node-modules-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-15-node-modules-${{ hashFiles('yarn.lock') }}
            ${{ runner.os }}-15-node-modules-
      - name: Install Dependencies using Yarn
        run: yarn install && git checkout yarn.lock && yarn patch-package
      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@master
        with:
          publish: yarn release
          commit: 'chore(release): update monorepo packages versions'
          title: 'Upcoming Release Changes'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Set up QEMU
        if: steps.changesets.outputs.published == 'true'
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        if: steps.changesets.outputs.published == 'true'
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        if: steps.changesets.outputs.published == 'true'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build & Publish Docker Image
        if: steps.changesets.outputs.published == 'true'
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            theguild/graphql-mesh:latest
            theguild/graphql-mesh:${{ github.sha }}
          context: ./packages/container
          file: ./packages/container/Dockerfile
