name: release

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  stable:
    permissions:
      contents: read
      id-token: write
      pull-requests: write
    if: github.ref == 'refs/heads/master'
    uses: the-guild-org/shared-config/.github/workflows/release-stable.yml@main
    with:
      releaseScript: release
      versionScript: 'changeset-version'
      nodeVersion: 18
      packageManagerVersion: modern
    secrets:
      githubToken: ${{ secrets.GUILD_BOT_TOKEN }}
      npmToken: ${{ secrets.NODE_AUTH_TOKEN }}

  # NOTE: this job DOES NOT run on triggering commit, it instead checks out and runs on the latest tag
  ghcr:
    runs-on: ubuntu-latest
    # TODO: uncomment once working
    # needs: [stable]
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
      - name: get latest version tag
        id: latest-version-tag
        run: |
          echo "serve-cli=$(git tag -l --sort=-creatordate "@graphql-mesh/serve-cli@*" | head -n 1)" >> "$GITHUB_OUTPUT"
      - name: assert latest version tag
        if: steps.latest-version-tag.outputs.serve-cli == ''
        run: |
          echo "::error::Latest version tag cannot be empty."
          exit 1
      - name: checkout latest version tag
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.latest-version-tag.outputs.serve-cli }}
      - name: set up docker buildx
        uses: docker/setup-buildx-action@v3
      - name: log in to ghcr
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: set up env
        uses: the-guild-org/shared-config/setup@main
        with:
          nodeVersion: 18
          packageManagerVersion: modern
      - name: prepare
        run: yarn prebuild
      - name: bundle
        run: yarn bundle
      - name: shared tags
        run: |
          export REF_NAME="$(echo "${{ github.head_ref || github.ref_name }}" | sed 's/\//_/g')"
          export SHORT_REF="$(git rev-parse --short HEAD)"
          echo TAGS="latest,$REF_NAME,$SHORT_REF" >> $GITHUB_ENV
      - name: mesh-serve tags
        uses: actions/github-script@v7
        id: mesh-serve-tags
        with:
          result-encoding: string
          script: |
            const { TAGS } = process.env;
            const { version } = require('./packages/serve-cli/package.json');
            const [major, minor] = String(version).split('.');
            return `${major},${major}.${minor},${version},${TAGS}`;
      - name: bake and push
        uses: docker/bake-action@v5
        env:
          MESH_SERVE_TAGS: ${{ steps.mesh-serve-tags.outputs.result }}
        with:
          set: |
            *.cache-from=type=gha
            *.cache-to=type=gha,mode=max
          push: true
