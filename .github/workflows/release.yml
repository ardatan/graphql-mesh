name: Release
on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Master
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Add origin remote and refetch master
        run: |
          git remote rm origin
          git remote add origin "https://github.com/${{github.repository}}"
          git fetch
          git checkout master
          git reset --hard
      - name: Use Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: yarn

      - name: Cache Node Modules
        uses: actions/cache@v3
        id: node-modules-cache-release
        with:
          path: '**/node_modules'
          key: ${{runner.os}}-18-node-modules-${{hashFiles('yarn.lock')}}
          restore-keys: |
            ${{runner.os}}-18-node-modules-

      - name: Install Dependencies using Yarn
        run: yarn install --ignore-engines --frozen-lockfile --immutable
        if: steps.node-modules-cache-release.outputs.cache-hit != 'true'

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: dotansimha/changesets-action@262e957f99be29087d2b13afa32a5d579bf1d080
        with:
          publish: 'yarn release'
          commit: 'chore(release): update monorepo packages versions'
          title: 'Upcoming Release Changes'
          createGithubReleases: aggregate
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
      - name: Set up QEMU
        if: steps.changesets.outputs.published == 'true'
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        if: steps.changesets.outputs.published == 'true'
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        if: steps.changesets.outputs.published == 'true'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build & Publish Docker Image
        if: steps.changesets.outputs.published == 'true'
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: |
            theguild/graphql-mesh:latest
            theguild/graphql-mesh:${{ github.sha }}
          context: ./packages/container
          file: ./packages/container/Dockerfile
