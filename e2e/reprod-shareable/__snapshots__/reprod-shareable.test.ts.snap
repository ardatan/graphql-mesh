// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`composes 1`] = `
"schema
    @link(url: "https://specs.apollo.dev/link/v1.0")
    @link(url: "https://specs.apollo.dev/join/v0.3", for: EXECUTION)
    
    
    
    
    
    
    @link(url: "https://the-guild.dev/graphql/mesh/spec/v1.0", import: ["@source"]) 
  {
    query: Query
    
    
  }

  
    directive @join__enumValue(graph: join__Graph!) repeatable on ENUM_VALUE

    directive @join__graph(name: String!, url: String!) on ENUM_VALUE

    
      directive @join__field(
        graph: join__Graph
        requires: join__FieldSet
        provides: join__FieldSet
        type: String
        external: Boolean
        override: String
        usedOverridden: Boolean
        
        
      ) repeatable on FIELD_DEFINITION | INPUT_FIELD_DEFINITION
    
    

    directive @join__implements(
      graph: join__Graph!
      interface: String!
    ) repeatable on OBJECT | INTERFACE

    directive @join__type(
      graph: join__Graph!
      key: join__FieldSet
      extension: Boolean! = false
      resolvable: Boolean! = true
      isInterfaceObject: Boolean! = false
    ) repeatable on OBJECT | INTERFACE | UNION | ENUM | INPUT_OBJECT | SCALAR

    directive @join__unionMember(
      graph: join__Graph!
      member: String!
    ) repeatable on UNION

    scalar join__FieldSet
    
  
  
  directive @link(
    url: String
    as: String
    for: link__Purpose
    import: [link__Import]
  ) repeatable on SCHEMA

  scalar link__Import

  enum link__Purpose {
    """
    \`SECURITY\` features provide metadata necessary to securely resolve fields.
    """
    SECURITY

    """
    \`EXECUTION\` features provide metadata necessary for operation execution.
    """
    EXECUTION
  }

  
  
  
  
  
  
  
enum join__Graph {
  A @join__graph(name: "A", url: "http://xxx") 
  B @join__graph(name: "B", url: "http://yyy") 
}

directive @source(name: String!, type: String, subgraph: String!)  repeatable on SCALAR | OBJECT | FIELD_DEFINITION | ARGUMENT_DEFINITION | INTERFACE | UNION | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION

scalar TransportOptions @join__type(graph: A)  @join__type(graph: B) 

type Post @join__type(graph: A)  @join__type(graph: B)  {
  id: ID!
  date: String!
  title: String! @join__field(graph: A) 
  description: String! @join__field(graph: B) 
}

type Query @join__type(graph: A)  @join__type(graph: B)  {
  posts(postsInput: PostsInput) : [Post]
  bla: String! @join__field(graph: B) 
}

input PostsInput @join__type(graph: A)  @join__type(graph: B)  {
  id: ID
  date: String
}
"
`;
