// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should compose the appropriate schema 1`] = `
"schema @transport(subgraph: "API", kind: "rest", location: "http://0.0.0.0:<api_port>", headers: "{\\"Content-Type\\":\\"application/json\\"}") {
  query: Query
  mutation: Mutation
  subscription: Subscription
}

directive @example(subgraph: String, value: ObjMap) repeatable on FIELD_DEFINITION | OBJECT | INPUT_OBJECT | ENUM | SCALAR

directive @httpOperation(subgraph: String, path: String, operationSpecificHeaders: ObjMap, httpMethod: HTTPMethod, isBinary: Boolean, requestBaseBody: ObjMap, queryParamArgMap: ObjMap, queryStringOptionsByParam: ObjMap, jsonApiFields: Boolean) on FIELD_DEFINITION

directive @pubsubOperation(subgraph: String, pubsubTopic: String) on FIELD_DEFINITION

directive @transport(subgraph: String, kind: String, location: String, headers: ObjMap, queryStringOptions: ObjMap, queryParams: ObjMap) on OBJECT

directive @live on QUERY

type Query {
  todos: [query_todos_items] @httpOperation(subgraph: "API", path: "/todos", httpMethod: GET) @source(name: "todos", type: "[query_todos_items]", subgraph: "API")
}

type query_todos_items @source(name: "query_todos_items", subgraph: "API") {
  id: Int @source(name: "id", type: "Int", subgraph: "API")
  name: String @source(name: "name", type: "String", subgraph: "API")
  content: String @source(name: "content", type: "String", subgraph: "API")
}

type Mutation {
  addTodo(input: mutationInput_addTodo_input_Input @source(name: "input", type: "mutationInput_addTodo_input_Input", subgraph: "API")): mutation_addTodo @httpOperation(subgraph: "API", path: "/todo", httpMethod: POST) @source(name: "addTodo", type: "mutation_addTodo", subgraph: "API")
}

type mutation_addTodo @example(subgraph: "API", value: "\\"{\\\\\\"id\\\\\\":0,\\\\\\"name\\\\\\":\\\\\\"TodoName\\\\\\",\\\\\\"content\\\\\\":\\\\\\"TodoContent\\\\\\"}\\"") @source(name: "mutation_addTodo", subgraph: "API") {
  id: Int @source(name: "id", type: "Int", subgraph: "API")
  name: String @source(name: "name", type: "String", subgraph: "API")
  content: String @source(name: "content", type: "String", subgraph: "API")
}

input mutationInput_addTodo_input_Input @example(subgraph: "API", value: "\\"{\\\\\\"name\\\\\\":\\\\\\"TodoName\\\\\\",\\\\\\"content\\\\\\":\\\\\\"TodoContent\\\\\\"}\\"") @source(name: "mutationInput_addTodo_input_Input", subgraph: "API") {
  name: String @source(name: "name", type: "String", subgraph: "API")
  content: String @source(name: "content", type: "String", subgraph: "API")
}

type Subscription {
  """PubSub Topic: webhook:post:/webhooks/todo_added"""
  todoAdded: subscription_todoAdded @pubsubOperation(subgraph: "API", pubsubTopic: "webhook:post:/webhooks/todo_added") @source(name: "todoAdded", type: "subscription_todoAdded", subgraph: "API")
}

type subscription_todoAdded @example(subgraph: "API", value: "\\"{\\\\\\"id\\\\\\":0,\\\\\\"name\\\\\\":\\\\\\"TodoName\\\\\\",\\\\\\"content\\\\\\":\\\\\\"TodoContent\\\\\\"}\\"") @source(name: "subscription_todoAdded", subgraph: "API") {
  id: Int @source(name: "id", type: "Int", subgraph: "API")
  name: String @source(name: "name", type: "String", subgraph: "API")
  content: String @source(name: "content", type: "String", subgraph: "API")
}

scalar ObjMap @source(name: "ObjMap", subgraph: "API") @source(name: "ObjMap", subgraph: "API")

enum HTTPMethod @source(name: "HTTPMethod", subgraph: "API") {
  GET @source(name: "GET", subgraph: "API")
  HEAD @source(name: "HEAD", subgraph: "API")
  POST @source(name: "POST", subgraph: "API")
  PUT @source(name: "PUT", subgraph: "API")
  DELETE @source(name: "DELETE", subgraph: "API")
  CONNECT @source(name: "CONNECT", subgraph: "API")
  OPTIONS @source(name: "OPTIONS", subgraph: "API")
  TRACE @source(name: "TRACE", subgraph: "API")
  PATCH @source(name: "PATCH", subgraph: "API")
}
"
`;
