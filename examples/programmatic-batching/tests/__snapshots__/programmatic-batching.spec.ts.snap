// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Batching Example should generate correct schema 1`] = `
"schema {
  query: Query
  mutation: Mutation
}

directive @httpOperation(httpMethod: HTTPMethod, isBinary: Boolean, jsonApiFields: Boolean, operationSpecificHeaders: [[String]], path: String, queryParamArgMap: ObjMap, queryStringOptions: ObjMap, queryStringOptionsByParam: ObjMap, requestBaseBody: ObjMap, subgraph: String) on FIELD_DEFINITION

directive @transport(headers: [[String]], kind: String, location: String, queryParams: [[String]], queryStringOptions: ObjMap, subgraph: String) repeatable on SCHEMA

enum HTTPMethod {
  CONNECT
  DELETE
  GET
  HEAD
  OPTIONS
  PATCH
  POST
  PUT
  TRACE
}

type Mutation {
  usersByIds(input: UsersByIdRequest_Input): UsersByIdResponse @httpOperation(subgraph: "ExampleAPI", path: "/users_by_ids", operationSpecificHeaders: [["Content-Type", "application/json"], ["accept", "application/json"]], httpMethod: POST)
}

scalar ObjMap

type Query {
  dummy: String
  user(id: Float!): User
}

type User {
  id: Float!
  name: String!
}

input UsersByIdRequest_Input {
  ids: [Float]!
}

type UsersByIdResponse {
  results: [User]!
}"
`;

exports[`Batching Example should give correct response for the batched example query: example-query-result 1`] = `
{
  "data": {
    "jane": {
      "id": 2,
      "name": "Jane Doe",
    },
    "john": {
      "id": 1,
      "name": "John Doe",
    },
  },
}
`;
