// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Jira should generate correct schema: jira-schema 1`] = `
"directive @oneOf on FIELD_DEFINITION | INPUT_OBJECT

input ActorInputBean_Input {
  \\"\\"\\"
  The name of the group to add as a default actor. This parameter cannot be used with the \`groupId\` parameter. As a group's name can change,use of \`groupId\` is recommended. This parameter accepts a comma-separated list. For example, \`\\"group\\":[\\"project-admin\\", \\"jira-developers\\"]\`.
  \\"\\"\\"
  group: [String]

  \\"\\"\\"
  The ID of the group to add as a default actor. This parameter cannot be used with the \`group\` parameter This parameter accepts a comma-separated list. For example, \`\\"groupId\\":[\\"77f6ab39-e755-4570-a6ae-2d7a8df0bcb8\\", \\"0c011f85-69ed-49c4-a801-3b18d0f771bc\\"]\`.
  \\"\\"\\"
  groupId: [String]

  \\"\\"\\"
  The account IDs of the users to add as default actors. This parameter accepts a comma-separated list. For example, \`\\"user\\":[\\"5b10a2844c20165700ede21g\\", \\"5b109f2e9729b51b54dc274d\\"]\`.
  \\"\\"\\"
  user: [String]
}

input ActorsMap_Input {
  \\"\\"\\"
  The name of the group to add. This parameter cannot be used with the \`groupId\` parameter. As a group's name can change, use of \`groupId\` is recommended.
  \\"\\"\\"
  group: [String]

  \\"\\"\\"
  The ID of the group to add. This parameter cannot be used with the \`group\` parameter.
  \\"\\"\\"
  groupId: [String]

  \\"\\"\\"The user account ID of the user to add.\\"\\"\\"
  user: [String]
}

input AddFieldBean_Input {
  \\"\\"\\"The ID of the field to add.\\"\\"\\"
  fieldId: String!
}

scalar AddGroupBean_Input

union AddonPropertiesResource_deleteAddonProperty_delete_response = OperationMessage | Void_container

union AddonPropertiesResource_getAddonProperties_get_response = OperationMessage | PropertyKeys

union AddonPropertiesResource_getAddonProperty_get_response = EntityProperty | OperationMessage

union AddonPropertiesResource_putAddonProperty_put_response = OperationMessage

\\"\\"\\"Announcement banner configuration.\\"\\"\\"
type AnnouncementBannerConfiguration {
  \\"\\"\\"
  Hash of the banner data. The client detects updates by comparing hash IDs.
  \\"\\"\\"
  hashId: String

  \\"\\"\\"
  Flag indicating if the announcement banner can be dismissed by the user.
  \\"\\"\\"
  isDismissible: Boolean

  \\"\\"\\"Flag indicating if the announcement banner is enabled or not.\\"\\"\\"
  isEnabled: Boolean

  \\"\\"\\"The text on the announcement banner.\\"\\"\\"
  message: String
  visibility: query_getBanner_oneOf_0_visibility
}

\\"\\"\\"Configuration of the announcement banner.\\"\\"\\"
input AnnouncementBannerConfigurationUpdate_Input {
  \\"\\"\\"
  Flag indicating if the announcement banner can be dismissed by the user.
  \\"\\"\\"
  isDismissible: Boolean

  \\"\\"\\"Flag indicating if the announcement banner is enabled or not.\\"\\"\\"
  isEnabled: Boolean

  \\"\\"\\"The text on the announcement banner.\\"\\"\\"
  message: String

  \\"\\"\\"Visibility of the announcement banner. Can be public or private.\\"\\"\\"
  visibility: String
}

scalar Any

\\"\\"\\"The application the linked item is in.\\"\\"\\"
type Application {
  additionalProperties: JSON

  \\"\\"\\"
  The name of the application. Used in conjunction with the (remote) object icon title to display a tooltip for the link's icon. The tooltip takes the format \\"\\\\[application name\\\\] icon title\\". Blank items are excluded from the tooltip title. If both items are blank, the icon tooltop displays as \\"Web Link\\". Grouping and sorting of links may place links without an application name last.
  \\"\\"\\"
  name: String

  \\"\\"\\"
  The name-spaced type of the application, used by registered rendering apps.
  \\"\\"\\"
  type: String
}

\\"\\"\\"Details of an application property.\\"\\"\\"
type ApplicationProperty {
  \\"\\"\\"The allowed values, if applicable.\\"\\"\\"
  allowedValues: [String]

  \\"\\"\\"The default value of the application property.\\"\\"\\"
  defaultValue: String

  \\"\\"\\"The description of the application property.\\"\\"\\"
  desc: String
  example: String

  \\"\\"\\"The ID of the application property. The ID and key are the same.\\"\\"\\"
  id: String

  \\"\\"\\"The key of the application property. The ID and key are the same.\\"\\"\\"
  key: String

  \\"\\"\\"The name of the application property.\\"\\"\\"
  name: String

  \\"\\"\\"The data type of the application property.\\"\\"\\"
  type: String

  \\"\\"\\"The new value.\\"\\"\\"
  value: String
}

\\"\\"\\"Details of an application role.\\"\\"\\"
type ApplicationRole {
  \\"\\"\\"
  The groups that are granted default access for this application role. As a group's name can change, use of \`defaultGroupsDetails\` is recommended to identify a groups.
  \\"\\"\\"
  defaultGroups: [String]

  \\"\\"\\"The groups that are granted default access for this application role.\\"\\"\\"
  defaultGroupsDetails: [GroupName]

  \\"\\"\\"Deprecated.\\"\\"\\"
  defined: Boolean

  \\"\\"\\"The groups associated with the application role.\\"\\"\\"
  groupDetails: [GroupName]

  \\"\\"\\"
  The groups associated with the application role. As a group's name can change, use of \`groupDetails\` is recommended to identify a groups.
  \\"\\"\\"
  groups: [String]
  hasUnlimitedSeats: Boolean

  \\"\\"\\"The key of the application role.\\"\\"\\"
  key: String

  \\"\\"\\"The display name of the application role.\\"\\"\\"
  name: String

  \\"\\"\\"The maximum count of users on your license.\\"\\"\\"
  numberOfSeats: Int

  \\"\\"\\"
  Indicates if the application role belongs to Jira platform (\`jira-core\`).
  \\"\\"\\"
  platform: Boolean

  \\"\\"\\"The count of users remaining on your license.\\"\\"\\"
  remainingSeats: Int

  \\"\\"\\"
  Determines whether this application role should be selected by default on user creation.
  \\"\\"\\"
  selectedByDefault: Boolean

  \\"\\"\\"The number of users counting against your license.\\"\\"\\"
  userCount: Int

  \\"\\"\\"
  The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license.
  \\"\\"\\"
  userCountDescription: String
}

\\"\\"\\"Details of an application role.\\"\\"\\"
input ApplicationRole_Input {
  \\"\\"\\"
  The groups that are granted default access for this application role. As a group's name can change, use of \`defaultGroupsDetails\` is recommended to identify a groups.
  \\"\\"\\"
  defaultGroups: [String]

  \\"\\"\\"The groups that are granted default access for this application role.\\"\\"\\"
  defaultGroupsDetails: [GroupName_Input]

  \\"\\"\\"Deprecated.\\"\\"\\"
  defined: Boolean

  \\"\\"\\"The groups associated with the application role.\\"\\"\\"
  groupDetails: [GroupName_Input]

  \\"\\"\\"
  The groups associated with the application role. As a group's name can change, use of \`groupDetails\` is recommended to identify a groups.
  \\"\\"\\"
  groups: [String]
  hasUnlimitedSeats: Boolean

  \\"\\"\\"The key of the application role.\\"\\"\\"
  key: String

  \\"\\"\\"The display name of the application role.\\"\\"\\"
  name: String

  \\"\\"\\"The maximum count of users on your license.\\"\\"\\"
  numberOfSeats: Int

  \\"\\"\\"
  Indicates if the application role belongs to Jira platform (\`jira-core\`).
  \\"\\"\\"
  platform: Boolean

  \\"\\"\\"The count of users remaining on your license.\\"\\"\\"
  remainingSeats: Int

  \\"\\"\\"
  Determines whether this application role should be selected by default on user creation.
  \\"\\"\\"
  selectedByDefault: Boolean

  \\"\\"\\"The number of users counting against your license.\\"\\"\\"
  userCount: Int

  \\"\\"\\"
  The [type of users](https://confluence.atlassian.com/x/lRW3Ng) being counted against your license.
  \\"\\"\\"
  userCountDescription: String
}

\\"\\"\\"Details of a field configuration to issue type mappings.\\"\\"\\"
input AssociateFieldConfigurationsWithIssueTypesRequest_Input {
  \\"\\"\\"Field configuration to issue type mappings.\\"\\"\\"
  mappings: [FieldConfigurationToIssueTypeMapping_Input]!
}

\\"\\"\\"Details of an item associated with the changed record.\\"\\"\\"
type AssociatedItemBean {
  \\"\\"\\"The ID of the associated record.\\"\\"\\"
  id: String

  \\"\\"\\"The name of the associated record.\\"\\"\\"
  name: String

  \\"\\"\\"The ID of the associated parent record.\\"\\"\\"
  parentId: String

  \\"\\"\\"The name of the associated parent record.\\"\\"\\"
  parentName: String

  \\"\\"\\"The type of the associated record.\\"\\"\\"
  typeName: String
}

\\"\\"\\"Details about an attachment.\\"\\"\\"
type Attachment {
  additionalProperties: JSON
  author: UserDetails9

  \\"\\"\\"The content of the attachment.\\"\\"\\"
  content: String

  \\"\\"\\"The datetime the attachment was created.\\"\\"\\"
  created: DateTime

  \\"\\"\\"The file name of the attachment.\\"\\"\\"
  filename: String

  \\"\\"\\"The ID of the attachment.\\"\\"\\"
  id: String

  \\"\\"\\"The MIME type of the attachment.\\"\\"\\"
  mimeType: String

  \\"\\"\\"The URL of the attachment details response.\\"\\"\\"
  self: String

  \\"\\"\\"The size of the attachment.\\"\\"\\"
  size: BigInt

  \\"\\"\\"The URL of a thumbnail representing the attachment.\\"\\"\\"
  thumbnail: String
}

type AttachmentArchiveEntry {
  abbreviatedName: String
  entryIndex: BigInt
  mediaType: String
  name: String
  size: BigInt
}

type AttachmentArchiveImpl {
  \\"\\"\\"The list of the items included in the archive.\\"\\"\\"
  entries: [AttachmentArchiveEntry]

  \\"\\"\\"The number of items in the archive.\\"\\"\\"
  totalEntryCount: Int
}

\\"\\"\\"Metadata for an item in an attachment archive.\\"\\"\\"
type AttachmentArchiveItemReadable {
  \\"\\"\\"The position of the item within the archive.\\"\\"\\"
  index: BigInt

  \\"\\"\\"The label for the archive item.\\"\\"\\"
  label: String

  \\"\\"\\"The MIME type of the archive item.\\"\\"\\"
  mediaType: String

  \\"\\"\\"The path of the archive item.\\"\\"\\"
  path: String

  \\"\\"\\"The size of the archive item.\\"\\"\\"
  size: String
}

\\"\\"\\"Metadata for an archive (for example a zip) and its contents.\\"\\"\\"
type AttachmentArchiveMetadataReadable {
  \\"\\"\\"The list of the items included in the archive.\\"\\"\\"
  entries: [AttachmentArchiveItemReadable]

  \\"\\"\\"The ID of the attachment.\\"\\"\\"
  id: BigInt

  \\"\\"\\"The MIME type of the attachment.\\"\\"\\"
  mediaType: String

  \\"\\"\\"The name of the archive file.\\"\\"\\"
  name: String

  \\"\\"\\"The number of items included in the archive.\\"\\"\\"
  totalEntryCount: BigInt
}

\\"\\"\\"Metadata for an issue attachment.\\"\\"\\"
type AttachmentMetadata {
  author: User

  \\"\\"\\"The URL of the attachment.\\"\\"\\"
  content: String

  \\"\\"\\"The datetime the attachment was created.\\"\\"\\"
  created: DateTime

  \\"\\"\\"The name of the attachment file.\\"\\"\\"
  filename: String

  \\"\\"\\"The ID of the attachment.\\"\\"\\"
  id: BigInt

  \\"\\"\\"The MIME type of the attachment.\\"\\"\\"
  mimeType: String
  properties: query_getAttachment_additionalProperties

  \\"\\"\\"The URL of the attachment metadata details.\\"\\"\\"
  self: URL

  \\"\\"\\"The size of the attachment.\\"\\"\\"
  size: BigInt

  \\"\\"\\"The URL of a thumbnail representing the attachment.\\"\\"\\"
  thumbnail: String
}

\\"\\"\\"Details of the instance's attachment settings.\\"\\"\\"
type AttachmentSettings {
  \\"\\"\\"Whether the ability to add attachments is enabled.\\"\\"\\"
  enabled: Boolean

  \\"\\"\\"The maximum size of attachments permitted, in bytes.\\"\\"\\"
  uploadLimit: BigInt
}

\\"\\"\\"An audit record.\\"\\"\\"
type AuditRecordBean {
  \\"\\"\\"The list of items associated with the changed record.\\"\\"\\"
  associatedItems: [AssociatedItemBean]

  \\"\\"\\"
  Deprecated, use \`authorAccountId\` instead. The key of the user who created the audit record.
  \\"\\"\\"
  authorKey: String

  \\"\\"\\"
  The category of the audit record. For a list of these categories, see the help article [Auditing in Jira applications](https://confluence.atlassian.com/x/noXKM).
  \\"\\"\\"
  category: String

  \\"\\"\\"The list of values changed in the record event.\\"\\"\\"
  changedValues: [ChangedValueBean]

  \\"\\"\\"The date and time on which the audit record was created.\\"\\"\\"
  created: DateTime

  \\"\\"\\"The description of the audit record.\\"\\"\\"
  description: String

  \\"\\"\\"The event the audit record originated from.\\"\\"\\"
  eventSource: String

  \\"\\"\\"The ID of the audit record.\\"\\"\\"
  id: BigInt
  objectItem: AssociatedItemBean

  \\"\\"\\"
  The URL of the computer where the creation of the audit record was initiated.
  \\"\\"\\"
  remoteAddress: String

  \\"\\"\\"The summary of the audit record.\\"\\"\\"
  summary: String
}

\\"\\"\\"Container for a list of audit records.\\"\\"\\"
type AuditRecords {
  \\"\\"\\"
  The requested or default limit on the number of audit items to be returned.
  \\"\\"\\"
  limit: Int

  \\"\\"\\"The number of audit items skipped before the first item in this list.\\"\\"\\"
  offset: Int

  \\"\\"\\"The list of audit items.\\"\\"\\"
  records: [AuditRecordBean]

  \\"\\"\\"The total number of audit items returned.\\"\\"\\"
  total: BigInt
}

\\"\\"\\"A field auto-complete suggestion.\\"\\"\\"
type AutoCompleteSuggestion {
  \\"\\"\\"
  The display name of a suggested item. If \`fieldValue\` or \`predicateValue\` are provided, the matching text is highlighted with the HTML bold tag.
  \\"\\"\\"
  displayName: String

  \\"\\"\\"The value of a suggested item.\\"\\"\\"
  value: String
}

\\"\\"\\"The results from a JQL query.\\"\\"\\"
type AutoCompleteSuggestions {
  \\"\\"\\"The list of suggested item.\\"\\"\\"
  results: [AutoCompleteSuggestion]
}

\\"\\"\\"The details of the available dashboard gadget.\\"\\"\\"
type AvailableDashboardGadget {
  \\"\\"\\"The module key of the gadget type.\\"\\"\\"
  moduleKey: String

  \\"\\"\\"The title of the gadget.\\"\\"\\"
  title: String!

  \\"\\"\\"The URI of the gadget type.\\"\\"\\"
  uri: String
}

\\"\\"\\"The list of available gadgets.\\"\\"\\"
type AvailableDashboardGadgetsResponse {
  \\"\\"\\"The list of available gadgets.\\"\\"\\"
  gadgets: [AvailableDashboardGadget]!
}

\\"\\"\\"Details of an avatar.\\"\\"\\"
type Avatar {
  additionalProperties: JSON

  \\"\\"\\"The file name of the avatar icon. Returned for system avatars.\\"\\"\\"
  fileName: String

  \\"\\"\\"The ID of the avatar.\\"\\"\\"
  id: String!

  \\"\\"\\"Whether the avatar can be deleted.\\"\\"\\"
  isDeletable: Boolean

  \\"\\"\\"
  Whether the avatar is used in Jira. For example, shown as a project's avatar.
  \\"\\"\\"
  isSelected: Boolean

  \\"\\"\\"Whether the avatar is a system avatar.\\"\\"\\"
  isSystemAvatar: Boolean

  \\"\\"\\"
  The owner of the avatar. For a system avatar the owner is null (and nothing is returned). For non-system avatars this is the appropriate identifier, such as the ID for a project or the account ID for a user.
  \\"\\"\\"
  owner: String
  urls: query_getAllSystemAvatars_system_items_urls
}

\\"\\"\\"The avatars of the user.\\"\\"\\"
type AvatarUrlsBean {
  \\"\\"\\"The URL of the item's 16x16 pixel avatar.\\"\\"\\"
  _16x16: URL

  \\"\\"\\"The URL of the item's 24x24 pixel avatar.\\"\\"\\"
  _24x24: URL

  \\"\\"\\"The URL of the item's 32x32 pixel avatar.\\"\\"\\"
  _32x32: URL

  \\"\\"\\"The URL of the item's 48x48 pixel avatar.\\"\\"\\"
  _48x48: URL
}

\\"\\"\\"The URLs of the project's avatars.\\"\\"\\"
type AvatarUrlsBean2 {
  \\"\\"\\"The URL of the item's 16x16 pixel avatar.\\"\\"\\"
  _16x16: URL

  \\"\\"\\"The URL of the item's 24x24 pixel avatar.\\"\\"\\"
  _24x24: URL

  \\"\\"\\"The URL of the item's 32x32 pixel avatar.\\"\\"\\"
  _32x32: URL

  \\"\\"\\"The URL of the item's 48x48 pixel avatar.\\"\\"\\"
  _48x48: URL
}

\\"\\"\\"
List of the project's avatars, returning the avatar size and associated URL.
\\"\\"\\"
type AvatarUrlsBean3 {
  \\"\\"\\"The URL of the item's 16x16 pixel avatar.\\"\\"\\"
  _16x16: URL

  \\"\\"\\"The URL of the item's 24x24 pixel avatar.\\"\\"\\"
  _24x24: URL

  \\"\\"\\"The URL of the item's 32x32 pixel avatar.\\"\\"\\"
  _32x32: URL

  \\"\\"\\"The URL of the item's 48x48 pixel avatar.\\"\\"\\"
  _48x48: URL
}

\\"\\"\\"The avatars of the user.\\"\\"\\"
input AvatarUrlsBean_Input {
  \\"\\"\\"The URL of the item's 16x16 pixel avatar.\\"\\"\\"
  _16x16: URL

  \\"\\"\\"The URL of the item's 24x24 pixel avatar.\\"\\"\\"
  _24x24: URL

  \\"\\"\\"The URL of the item's 32x32 pixel avatar.\\"\\"\\"
  _32x32: URL

  \\"\\"\\"The URL of the item's 48x48 pixel avatar.\\"\\"\\"
  _48x48: URL
}

\\"\\"\\"The URLs of the project's avatars.\\"\\"\\"
input AvatarUrlsBean_Input2 {
  \\"\\"\\"The URL of the item's 16x16 pixel avatar.\\"\\"\\"
  _16x16: URL

  \\"\\"\\"The URL of the item's 24x24 pixel avatar.\\"\\"\\"
  _24x24: URL

  \\"\\"\\"The URL of the item's 32x32 pixel avatar.\\"\\"\\"
  _32x32: URL

  \\"\\"\\"The URL of the item's 48x48 pixel avatar.\\"\\"\\"
  _48x48: URL
}

\\"\\"\\"Details of an avatar.\\"\\"\\"
scalar Avatar_Input

\\"\\"\\"Details about system and custom avatars.\\"\\"\\"
type Avatars {
  \\"\\"\\"Custom avatars list.\\"\\"\\"
  custom: [Avatar]

  \\"\\"\\"System avatars list.\\"\\"\\"
  system: [Avatar]
}

\\"\\"\\"
The \`BigInt\` scalar type represents non-fractional signed whole numeric values.
\\"\\"\\"
scalar BigInt

\\"\\"\\"Details of the options to create for a custom field.\\"\\"\\"
input BulkCustomFieldOptionCreateRequest_Input {
  \\"\\"\\"Details of options to create.\\"\\"\\"
  options: [CustomFieldOptionCreate_Input]
}

\\"\\"\\"Details of the options to update for a custom field.\\"\\"\\"
input BulkCustomFieldOptionUpdateRequest_Input {
  \\"\\"\\"Details of the options to update.\\"\\"\\"
  options: [CustomFieldOptionUpdate_Input]
}

\\"\\"\\"A container for the watch status of a list of issues.\\"\\"\\"
type BulkIssueIsWatching {
  issuesIsWatching: mutation_getIsWatchingIssueBulk_issuesIsWatching
}

\\"\\"\\"Bulk issue property update request details.\\"\\"\\"
input BulkIssuePropertyUpdateRequest_Input {
  \\"\\"\\"
  EXPERIMENTAL. The Jira expression to calculate the value of the property. The value of the expression must be an object that can be converted to JSON, such as a number, boolean, string, list, or map. The context variables available to the expression are \`issue\` and \`user\`. Issues for which the expression returns a value whose JSON representation is longer than 32768 characters are ignored.
  \\"\\"\\"
  expression: String
  filter: IssueFilterForBulkPropertySet_Input
  value: mutationInput_bulkSetIssueProperty_value_Input
}

type BulkOperationErrorResult {
  elementErrors: ErrorCollection
  failedElementNumber: Int
  status: Int
}

\\"\\"\\"Details of global and project permissions granted to the user.\\"\\"\\"
type BulkPermissionGrants {
  \\"\\"\\"List of permissions granted to the user.\\"\\"\\"
  globalPermissions: [String]!

  \\"\\"\\"
  List of project permissions and the projects and issues those permissions provide access to.
  \\"\\"\\"
  projectPermissions: [BulkProjectPermissionGrants]!
}

\\"\\"\\"
Details of global permissions to look up and project permissions with associated projects and issues to look up.
\\"\\"\\"
input BulkPermissionsRequestBean_Input {
  \\"\\"\\"The account ID of a user.\\"\\"\\"
  accountId: String

  \\"\\"\\"Global permissions to look up.\\"\\"\\"
  globalPermissions: [String]

  \\"\\"\\"Project permissions with associated projects and issues to look up.\\"\\"\\"
  projectPermissions: [BulkProjectPermissions_Input]
}

\\"\\"\\"
List of project permissions and the projects and issues those permissions grant access to.
\\"\\"\\"
type BulkProjectPermissionGrants {
  \\"\\"\\"IDs of the issues the user has the permission for.\\"\\"\\"
  issues: [BigInt]!

  \\"\\"\\"A project permission,\\"\\"\\"
  permission: String!

  \\"\\"\\"IDs of the projects the user has the permission for.\\"\\"\\"
  projects: [BigInt]!
}

\\"\\"\\"
Details of project permissions and associated issues and projects to look up.
\\"\\"\\"
input BulkProjectPermissions_Input {
  \\"\\"\\"List of issue IDs.\\"\\"\\"
  issues: [BigInt]

  \\"\\"\\"List of project permissions.\\"\\"\\"
  permissions: [String]!

  \\"\\"\\"List of project IDs.\\"\\"\\"
  projects: [BigInt]
}

\\"\\"\\"A change item.\\"\\"\\"
type ChangeDetails {
  \\"\\"\\"The name of the field changed.\\"\\"\\"
  field: String

  \\"\\"\\"The ID of the field changed.\\"\\"\\"
  fieldId: String

  \\"\\"\\"The type of the field changed.\\"\\"\\"
  fieldtype: String

  \\"\\"\\"The details of the original value.\\"\\"\\"
  from: String

  \\"\\"\\"The details of the original value as a string.\\"\\"\\"
  fromString: String

  \\"\\"\\"The details of the new value.\\"\\"\\"
  to: String

  \\"\\"\\"The details of the new value as a string.\\"\\"\\"
  toString: String
}

\\"\\"\\"The account ID of the new owner.\\"\\"\\"
input ChangeFilterOwner_Input {
  \\"\\"\\"The account ID of the new owner.\\"\\"\\"
  accountId: String!
}

\\"\\"\\"Details of names changed in the record event.\\"\\"\\"
type ChangedValueBean {
  \\"\\"\\"The value of the field before the change.\\"\\"\\"
  changedFrom: String

  \\"\\"\\"The value of the field after the change.\\"\\"\\"
  changedTo: String

  \\"\\"\\"The name of the field changed.\\"\\"\\"
  fieldName: String
}

\\"\\"\\"Details of a changed worklog.\\"\\"\\"
type ChangedWorklog {
  \\"\\"\\"Details of properties associated with the change.\\"\\"\\"
  properties: [EntityProperty]

  \\"\\"\\"The datetime of the change.\\"\\"\\"
  updatedTime: BigInt

  \\"\\"\\"The ID of the worklog.\\"\\"\\"
  worklogId: BigInt
}

\\"\\"\\"List of changed worklogs.\\"\\"\\"
type ChangedWorklogs {
  lastPage: Boolean

  \\"\\"\\"The URL of the next list of changed worklogs.\\"\\"\\"
  nextPage: URL

  \\"\\"\\"The URL of this changed worklogs list.\\"\\"\\"
  self: URL

  \\"\\"\\"The datetime of the first worklog item in the list.\\"\\"\\"
  since: BigInt

  \\"\\"\\"The datetime of the last worklog item in the list.\\"\\"\\"
  until: BigInt

  \\"\\"\\"Changed worklog list.\\"\\"\\"
  values: [ChangedWorklog]
}

\\"\\"\\"A changelog.\\"\\"\\"
type Changelog {
  author: UserDetails2

  \\"\\"\\"The date on which the change took place.\\"\\"\\"
  created: DateTime
  historyMetadata: HistoryMetadata

  \\"\\"\\"The ID of the changelog.\\"\\"\\"
  id: String

  \\"\\"\\"The list of items changed.\\"\\"\\"
  items: [ChangeDetails]
}

\\"\\"\\"Details of an issue navigator column item.\\"\\"\\"
type ColumnItem {
  \\"\\"\\"The issue navigator column label.\\"\\"\\"
  label: String

  \\"\\"\\"The issue navigator column value.\\"\\"\\"
  value: String
}

\\"\\"\\"A comment.\\"\\"\\"
type Comment {
  additionalProperties: JSON
  author: UserDetails3
  body: query_getComments_comments_items_body

  \\"\\"\\"The date and time at which the comment was created.\\"\\"\\"
  created: DateTime

  \\"\\"\\"The ID of the comment.\\"\\"\\"
  id: String

  \\"\\"\\"
  Whether the comment was added from an email sent by a person who is not part of the issue. See [Allow external emails to be added as comments on issues](https://support.atlassian.com/jira-service-management-cloud/docs/allow-external-emails-to-be-added-as-comments-on-issues/)for information on setting up this feature.
  \\"\\"\\"
  jsdAuthorCanSeeRequest: Boolean

  \\"\\"\\"
  Whether the comment is visible in Jira Service Desk. Defaults to true when comments are created in the Jira Cloud Platform. This includes when the site doesn't use Jira Service Desk or the project isn't a Jira Service Desk project and, therefore, there is no Jira Service Desk for the issue to be visible on. To create a comment with its visibility in Jira Service Desk set to false, use the Jira Service Desk REST API [Create request comment](https://developer.atlassian.com/cloud/jira/service-desk/rest/#api-rest-servicedeskapi-request-issueIdOrKey-comment-post) operation.
  \\"\\"\\"
  jsdPublic: Boolean

  \\"\\"\\"A list of comment properties. Optional on create and update.\\"\\"\\"
  properties: [EntityProperty]

  \\"\\"\\"The rendered version of the comment.\\"\\"\\"
  renderedBody: String

  \\"\\"\\"The URL of the comment.\\"\\"\\"
  self: String
  updateAuthor: UserDetails4

  \\"\\"\\"The date and time at which the comment was updated last.\\"\\"\\"
  updated: DateTime
  visibility: Visibility
}

\\"\\"\\"A comment.\\"\\"\\"
scalar Comment_Input

\\"\\"\\"Count of issues assigned to a component.\\"\\"\\"
type ComponentIssuesCount {
  \\"\\"\\"The count of issues assigned to a component.\\"\\"\\"
  issueCount: BigInt

  \\"\\"\\"The URL for this count of issues for a component.\\"\\"\\"
  self: URL
}

\\"\\"\\"Details about a component with a count of the issues it contains.\\"\\"\\"
type ComponentWithIssueCount {
  assignee: User13
  assigneeType: query_getProjectComponentsPaginated_values_items_assigneeType

  \\"\\"\\"The description for the component.\\"\\"\\"
  description: String

  \\"\\"\\"The unique identifier for the component.\\"\\"\\"
  id: String

  \\"\\"\\"
  Whether a user is associated with \`assigneeType\`. For example, if the \`assigneeType\` is set to \`COMPONENT_LEAD\` but the component lead is not set, then \`false\` is returned.
  \\"\\"\\"
  isAssigneeTypeValid: Boolean

  \\"\\"\\"Count of issues for the component.\\"\\"\\"
  issueCount: BigInt
  lead: User14

  \\"\\"\\"The name for the component.\\"\\"\\"
  name: String

  \\"\\"\\"The key of the project to which the component is assigned.\\"\\"\\"
  project: String

  \\"\\"\\"Not used.\\"\\"\\"
  projectId: BigInt
  realAssignee: User12
  realAssigneeType: query_getComponent_realAssigneeType

  \\"\\"\\"The URL for this count of the issues contained in the component.\\"\\"\\"
  self: URL
}

\\"\\"\\"Details about the configuration of Jira.\\"\\"\\"
type Configuration {
  \\"\\"\\"Whether the ability to add attachments to issues is enabled.\\"\\"\\"
  attachmentsEnabled: Boolean

  \\"\\"\\"Whether the ability to link issues is enabled.\\"\\"\\"
  issueLinkingEnabled: Boolean

  \\"\\"\\"Whether the ability to create subtasks for issues is enabled.\\"\\"\\"
  subTasksEnabled: Boolean
  timeTrackingConfiguration: TimeTrackingConfiguration

  \\"\\"\\"
  Whether the ability to track time is enabled. This property is deprecated.
  \\"\\"\\"
  timeTrackingEnabled: Boolean

  \\"\\"\\"
  Whether the ability to create unassigned issues is enabled. See [Configuring Jira application options](https://confluence.atlassian.com/x/uYXKM) for details.
  \\"\\"\\"
  unassignedIssuesAllowed: Boolean

  \\"\\"\\"
  Whether the ability for users to vote on issues is enabled. See [Configuring Jira application options](https://confluence.atlassian.com/x/uYXKM) for details.
  \\"\\"\\"
  votingEnabled: Boolean

  \\"\\"\\"
  Whether the ability for users to watch issues is enabled. See [Configuring Jira application options](https://confluence.atlassian.com/x/uYXKM) for details.
  \\"\\"\\"
  watchingEnabled: Boolean
}

\\"\\"\\"A list of custom field details.\\"\\"\\"
input ConnectCustomFieldValue_Input {
  _type: mutationInput_AppIssueFieldValueUpdateResource_updateIssueFields_put_updateValueList_items__type!

  \\"\\"\\"The custom field ID.\\"\\"\\"
  fieldID: Int!

  \\"\\"\\"The issue ID.\\"\\"\\"
  issueID: Int!

  \\"\\"\\"
  The value of number type custom field when \`_type\` is \`NumberIssueField\`.
  \\"\\"\\"
  number: Float

  \\"\\"\\"
  The value of single select and multiselect custom field type when \`_type\` is \`SingleSelectIssueField\` or \`MultiSelectIssueField\`.
  \\"\\"\\"
  optionID: String

  \\"\\"\\"
  The value of richText type custom field when \`_type\` is \`RichTextIssueField\`.
  \\"\\"\\"
  richText: String

  \\"\\"\\"
  The value of string type custom field when \`_type\` is \`StringIssueField\`.
  \\"\\"\\"
  string: String

  \\"\\"\\"
  The value of of text custom field type when \`_type\` is \`TextIssueField\`.
  \\"\\"\\"
  text: String
}

\\"\\"\\"Details of updates for a custom field.\\"\\"\\"
input ConnectCustomFieldValues_Input {
  \\"\\"\\"The list of custom field update details.\\"\\"\\"
  updateValueList: [ConnectCustomFieldValue_Input]
}

\\"\\"\\"
A [Connect module](https://developer.atlassian.com/cloud/jira/platform/about-jira-modules/) in the same format as in the
[app descriptor](https://developer.atlassian.com/cloud/jira/platform/app-descriptor/).
\\"\\"\\"
type ConnectModule {
  description: description
  extractions: [extractions_items]
  key: String
  name: description
  type: String
}

\\"\\"\\"
A [Connect module](https://developer.atlassian.com/cloud/jira/platform/about-jira-modules/) in the same format as in the
[app descriptor](https://developer.atlassian.com/cloud/jira/platform/app-descriptor/).
\\"\\"\\"
input ConnectModule_Input {
  description: description_Input
  extractions: [extractions_items_Input]
  key: String
  name: description_Input
  type: String
}

type ConnectModules {
  \\"\\"\\"
  A list of app modules in the same format as the \`modules\` property in the
  [app descriptor](https://developer.atlassian.com/cloud/jira/platform/app-descriptor/).
  \\"\\"\\"
  modules: [ConnectModule]!
}

input ConnectModules_Input {
  \\"\\"\\"
  A list of app modules in the same format as the \`modules\` property in the
  [app descriptor](https://developer.atlassian.com/cloud/jira/platform/app-descriptor/).
  \\"\\"\\"
  modules: [ConnectModule_Input]!
}

\\"\\"\\"A workflow transition rule.\\"\\"\\"
type ConnectWorkflowTransitionRule {
  configuration: RuleConfiguration!

  \\"\\"\\"The ID of the transition rule.\\"\\"\\"
  id: String!

  \\"\\"\\"The key of the rule, as defined in the Connect app descriptor.\\"\\"\\"
  key: String!
  transition: WorkflowTransition
}

\\"\\"\\"A workflow transition rule.\\"\\"\\"
input ConnectWorkflowTransitionRule_Input {
  configuration: RuleConfiguration_Input!

  \\"\\"\\"The ID of the transition rule.\\"\\"\\"
  id: String!

  \\"\\"\\"The key of the rule, as defined in the Connect app descriptor.\\"\\"\\"
  key: String!
  transition: WorkflowTransition_Input
}

\\"\\"\\"The list of features on a project.\\"\\"\\"
type ContainerForProjectFeatures {
  \\"\\"\\"The project features.\\"\\"\\"
  features: [ProjectFeature]
}

\\"\\"\\"
Container for a list of registered webhooks. Webhook details are returned in the same order as the request.
\\"\\"\\"
type ContainerForRegisteredWebhooks {
  \\"\\"\\"A list of registered webhooks.\\"\\"\\"
  webhookRegistrationResult: [RegisteredWebhook]
}

\\"\\"\\"Container for a list of webhook IDs.\\"\\"\\"
input ContainerForWebhookIDs_Input {
  \\"\\"\\"A list of webhook IDs.\\"\\"\\"
  webhookIds: [BigInt]!
}

\\"\\"\\"
A container for a list of workflow schemes together with the projects they are associated with.
\\"\\"\\"
type ContainerOfWorkflowSchemeAssociations {
  \\"\\"\\"
  A list of workflow schemes together with projects they are associated with.
  \\"\\"\\"
  values: [WorkflowSchemeAssociations]!
}

\\"\\"\\"A context.\\"\\"\\"
type Context {
  \\"\\"\\"The ID of the context.\\"\\"\\"
  id: BigInt

  \\"\\"\\"The name of the context.\\"\\"\\"
  name: String
  scope: Scope4
}

\\"\\"\\"
The project and issue type mapping with a matching custom field context.
\\"\\"\\"
type ContextForProjectAndIssueType {
  \\"\\"\\"The ID of the custom field context.\\"\\"\\"
  contextId: String!

  \\"\\"\\"The ID of the issue type.\\"\\"\\"
  issueTypeId: String!

  \\"\\"\\"The ID of the project.\\"\\"\\"
  projectId: String!
}

\\"\\"\\"Details of the contextual configuration for a custom field.\\"\\"\\"
type ContextualConfiguration {
  configuration: query_getCustomFieldConfiguration_values_items_configuration

  \\"\\"\\"The ID of the field context the configuration is associated with.\\"\\"\\"
  fieldContextId: String!

  \\"\\"\\"The ID of the configuration.\\"\\"\\"
  id: String!
  schema: query_getCustomFieldConfiguration_values_items_schema
}

\\"\\"\\"Details of the contextual configuration for a custom field.\\"\\"\\"
input ContextualConfiguration_Input {
  configuration: query_getCustomFieldConfiguration_values_items_configuration_Input

  \\"\\"\\"The ID of the field context the configuration is associated with.\\"\\"\\"
  fieldContextId: String!

  \\"\\"\\"The ID of the configuration.\\"\\"\\"
  id: String!
  schema: query_getCustomFieldConfiguration_values_items_schema_Input
}

\\"\\"\\"The converted JQL queries.\\"\\"\\"
type ConvertedJQLQueries {
  \\"\\"\\"
  List of queries containing user information that could not be mapped to an existing user
  \\"\\"\\"
  queriesWithUnknownUsers: [JQLQueryWithUnknownUsers]

  \\"\\"\\"
  The list of converted query strings with account IDs in place of user identifiers.
  \\"\\"\\"
  queryStrings: [String]
}

\\"\\"\\"The details of a created custom field context.\\"\\"\\"
type CreateCustomFieldContext {
  \\"\\"\\"The description of the context.\\"\\"\\"
  description: String

  \\"\\"\\"The ID of the context.\\"\\"\\"
  id: String

  \\"\\"\\"
  The list of issue types IDs for the context. If the list is empty, the context refers to all issue types.
  \\"\\"\\"
  issueTypeIds: [String]

  \\"\\"\\"The name of the context.\\"\\"\\"
  name: String!

  \\"\\"\\"
  The list of project IDs associated with the context. If the list is empty, the context is global.
  \\"\\"\\"
  projectIds: [String]
}

\\"\\"\\"The details of a created custom field context.\\"\\"\\"
input CreateCustomFieldContext_Input {
  \\"\\"\\"The description of the context.\\"\\"\\"
  description: String

  \\"\\"\\"The ID of the context.\\"\\"\\"
  id: String

  \\"\\"\\"
  The list of issue types IDs for the context. If the list is empty, the context refers to all issue types.
  \\"\\"\\"
  issueTypeIds: [String]

  \\"\\"\\"The name of the context.\\"\\"\\"
  name: String!

  \\"\\"\\"
  The list of project IDs associated with the context. If the list is empty, the context is global.
  \\"\\"\\"
  projectIds: [String]
}

\\"\\"\\"Details of an issue priority.\\"\\"\\"
scalar CreatePriorityDetails_Input

\\"\\"\\"Details about the project.\\"\\"\\"
input CreateProjectDetails_Input {
  assigneeType: mutationInput_createProject_assigneeType

  \\"\\"\\"An integer value for the project's avatar.\\"\\"\\"
  avatarId: BigInt

  \\"\\"\\"
  The ID of the project's category. A complete list of category IDs is found using the [Get all project categories](#api-rest-api-3-projectCategory-get) operation.
  \\"\\"\\"
  categoryId: BigInt

  \\"\\"\\"A brief description of the project.\\"\\"\\"
  description: String

  \\"\\"\\"
  The ID of the field configuration scheme for the project. Use the [Get all field configuration schemes](#api-rest-api-3-fieldconfigurationscheme-get) operation to get a list of field configuration scheme IDs. If you specify the field configuration scheme you cannot specify the project template key.
  \\"\\"\\"
  fieldConfigurationScheme: BigInt

  \\"\\"\\"
  The ID of the issue security scheme for the project, which enables you to control who can and cannot view issues. Use the [Get issue security schemes](#api-rest-api-3-issuesecurityschemes-get) resource to get all issue security scheme IDs.
  \\"\\"\\"
  issueSecurityScheme: BigInt

  \\"\\"\\"
  The ID of the issue type scheme for the project. Use the [Get all issue type schemes](#api-rest-api-3-issuetypescheme-get) operation to get a list of issue type scheme IDs. If you specify the issue type scheme you cannot specify the project template key.
  \\"\\"\\"
  issueTypeScheme: BigInt

  \\"\\"\\"
  The ID of the issue type screen scheme for the project. Use the [Get all issue type screen schemes](#api-rest-api-3-issuetypescreenscheme-get) operation to get a list of issue type screen scheme IDs. If you specify the issue type screen scheme you cannot specify the project template key.
  \\"\\"\\"
  issueTypeScreenScheme: BigInt

  \\"\\"\\"
  Project keys must be unique and start with an uppercase letter followed by one or more uppercase alphanumeric characters. The maximum length is 10 characters.
  \\"\\"\\"
  key: String!

  \\"\\"\\"
  This parameter is deprecated because of privacy changes. Use \`leadAccountId\` instead. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details. The user name of the project lead. Either \`lead\` or \`leadAccountId\` must be set when creating a project. Cannot be provided with \`leadAccountId\`.
  \\"\\"\\"
  lead: String

  \\"\\"\\"
  The account ID of the project lead. Either \`lead\` or \`leadAccountId\` must be set when creating a project. Cannot be provided with \`lead\`.
  \\"\\"\\"
  leadAccountId: mutationInput_createProject_leadAccountId

  \\"\\"\\"The name of the project.\\"\\"\\"
  name: String!

  \\"\\"\\"
  The ID of the notification scheme for the project. Use the [Get notification schemes](#api-rest-api-3-notificationscheme-get) resource to get a list of notification scheme IDs.
  \\"\\"\\"
  notificationScheme: BigInt

  \\"\\"\\"
  The ID of the permission scheme for the project. Use the [Get all permission schemes](#api-rest-api-3-permissionscheme-get) resource to see a list of all permission scheme IDs.
  \\"\\"\\"
  permissionScheme: BigInt
  projectTemplateKey: mutationInput_createProject_projectTemplateKey
  projectTypeKey: mutationInput_createProject_projectTypeKey

  \\"\\"\\"
  A link to information about this project, such as project documentation
  \\"\\"\\"
  url: String

  \\"\\"\\"
  The ID of the workflow scheme for the project. Use the [Get all workflow schemes](#api-rest-api-3-workflowscheme-get) operation to get a list of workflow scheme IDs. If you specify the workflow scheme you cannot specify the project template key.
  \\"\\"\\"
  workflowScheme: BigInt
}

\\"\\"\\"The details of a UI modification.\\"\\"\\"
input CreateUiModificationDetails_Input {
  \\"\\"\\"
  List of contexts of the UI modification. The maximum number of contexts is 1000.
  \\"\\"\\"
  contexts: [UiModificationContextDetails_Input]

  \\"\\"\\"
  The data of the UI modification. The maximum size of the data is 50000 characters.
  \\"\\"\\"
  data: String

  \\"\\"\\"
  The description of the UI modification. The maximum length is 255 characters.
  \\"\\"\\"
  description: String

  \\"\\"\\"The name of the UI modification. The maximum length is 255 characters.\\"\\"\\"
  name: String!
}

input CreateUpdateRoleRequestBean_Input {
  \\"\\"\\"
  A description of the project role. Required when fully updating a project role. Optional when creating or partially updating a project role.
  \\"\\"\\"
  description: String

  \\"\\"\\"
  The name of the project role. Must be unique. Cannot begin or end with whitespace. The maximum length is 255 characters. Required when creating a project role. Optional when partially updating a project role.
  \\"\\"\\"
  name: String
}

\\"\\"\\"A workflow transition condition.\\"\\"\\"
input CreateWorkflowCondition_Input {
  conditions: [CreateWorkflowCondition_Input]
  configuration: query_getWorkflowsPaginated_oneOf_0_values_items_transitions_items_rules_validators_items_configuration_Input
  operator: query_getWorkflowsPaginated_oneOf_0_values_items_transitions_items_rules_conditionsTree_oneOf_1_operator

  \\"\\"\\"The type of the transition rule.\\"\\"\\"
  type: String
}

\\"\\"\\"A workflow transition condition.\\"\\"\\"
input CreateWorkflowCondition_Input2 {
  \\"\\"\\"The list of workflow conditions.\\"\\"\\"
  conditions: [CreateWorkflowCondition_Input]
  configuration: query_getWorkflowsPaginated_oneOf_0_values_items_transitions_items_rules_validators_items_configuration_Input
  operator: query_getWorkflowsPaginated_oneOf_0_values_items_transitions_items_rules_conditionsTree_oneOf_1_operator

  \\"\\"\\"The type of the transition rule.\\"\\"\\"
  type: String
}

\\"\\"\\"The details of a workflow.\\"\\"\\"
input CreateWorkflowDetails_Input {
  \\"\\"\\"
  The description of the workflow. The maximum length is 1000 characters.
  \\"\\"\\"
  description: String

  \\"\\"\\"
  The name of the workflow. The name must be unique. The maximum length is 255 characters. Characters can be separated by a whitespace but the name cannot start or end with a whitespace.
  \\"\\"\\"
  name: String!

  \\"\\"\\"
  The statuses of the workflow. Any status that does not include a transition is added to the workflow without a transition.
  \\"\\"\\"
  statuses: [CreateWorkflowStatusDetails_Input]!

  \\"\\"\\"
  The transitions of the workflow. For the request to be valid, these transitions must:
  
   *  include one *initial* transition.
   *  not use the same name for a *global* and *directed* transition.
   *  have a unique name for each *global* transition.
   *  have a unique 'to' status for each *global* transition.
   *  have unique names for each transition from a status.
   *  not have a 'from' status on *initial* and *global* transitions.
   *  have a 'from' status on *directed* transitions.
  
  All the transition statuses must be included in \`statuses\`.
  \\"\\"\\"
  transitions: [CreateWorkflowTransitionDetails_Input]!
}

\\"\\"\\"The details of a transition status.\\"\\"\\"
input CreateWorkflowStatusDetails_Input {
  \\"\\"\\"The ID of the status.\\"\\"\\"
  id: String!
  properties: mutationInput_createWorkflow_statuses_items_Input
}

\\"\\"\\"The details of a workflow transition.\\"\\"\\"
input CreateWorkflowTransitionDetails_Input {
  \\"\\"\\"
  The description of the transition. The maximum length is 1000 characters.
  \\"\\"\\"
  description: String

  \\"\\"\\"The statuses the transition can start from.\\"\\"\\"
  from: [String]

  \\"\\"\\"The name of the transition. The maximum length is 60 characters.\\"\\"\\"
  name: String!
  properties: mutationInput_createWorkflow_transitions_items_Input
  rules: CreateWorkflowTransitionRulesDetails_Input
  screen: CreateWorkflowTransitionScreenDetails_Input

  \\"\\"\\"The status the transition goes to.\\"\\"\\"
  to: String!
  type: query_getWorkflowsPaginated_oneOf_0_values_items_transitions_items_type!
}

\\"\\"\\"A workflow transition rule.\\"\\"\\"
input CreateWorkflowTransitionRule_Input {
  configuration: query_getWorkflowsPaginated_oneOf_0_values_items_transitions_items_rules_validators_items_configuration_Input

  \\"\\"\\"The type of the transition rule.\\"\\"\\"
  type: String!
}

\\"\\"\\"The details of a workflow transition rules.\\"\\"\\"
input CreateWorkflowTransitionRulesDetails_Input {
  conditions: CreateWorkflowCondition_Input2

  \\"\\"\\"
  The workflow post functions.
  
  **Note:** The default post functions are always added to the *initial* transition, as in:
  
      \\"postFunctions\\": [
          {
              \\"type\\": \\"IssueCreateFunction\\"
          },
          {
              \\"type\\": \\"IssueReindexFunction\\"
          },
          {
              \\"type\\": \\"FireIssueEventFunction\\",
              \\"configuration\\": {
                  \\"event\\": {
                      \\"id\\": \\"1\\",
                      \\"name\\": \\"issue_created\\"
                  }
              }
          }
      ]
  
  **Note:** The default post functions are always added to the *global* and *directed* transitions, as in:
  
      \\"postFunctions\\": [
          {
              \\"type\\": \\"UpdateIssueStatusFunction\\"
          },
          {
              \\"type\\": \\"CreateCommentFunction\\"
          },
          {
              \\"type\\": \\"GenerateChangeHistoryFunction\\"
          },
          {
              \\"type\\": \\"IssueReindexFunction\\"
          },
          {
              \\"type\\": \\"FireIssueEventFunction\\",
              \\"configuration\\": {
                  \\"event\\": {
                      \\"id\\": \\"13\\",
                      \\"name\\": \\"issue_generic\\"
                  }
              }
          }
      ]
  \\"\\"\\"
  postFunctions: [CreateWorkflowTransitionRule_Input]

  \\"\\"\\"
  The workflow validators.
  
  **Note:** The default permission validator is always added to the *initial* transition, as in:
  
      \\"validators\\": [
          {
              \\"type\\": \\"PermissionValidator\\",
              \\"configuration\\": {
                  \\"permissionKey\\": \\"CREATE_ISSUES\\"
              }
          }
      ]
  \\"\\"\\"
  validators: [CreateWorkflowTransitionRule_Input]
}

\\"\\"\\"The details of a transition screen.\\"\\"\\"
input CreateWorkflowTransitionScreenDetails_Input {
  \\"\\"\\"The ID of the screen.\\"\\"\\"
  id: String!
}

\\"\\"\\"Details about a created issue or subtask.\\"\\"\\"
type CreatedIssue {
  \\"\\"\\"The ID of the created issue or subtask.\\"\\"\\"
  id: String

  \\"\\"\\"The key of the created issue or subtask.\\"\\"\\"
  key: String

  \\"\\"\\"The URL of the created issue or subtask.\\"\\"\\"
  self: String
  transition: NestedResponse
}

\\"\\"\\"
Details about the issues created and the errors for requests that failed.
\\"\\"\\"
type CreatedIssues {
  \\"\\"\\"Error details for failed issue creation requests.\\"\\"\\"
  errors: [BulkOperationErrorResult]

  \\"\\"\\"Details of the issues created.\\"\\"\\"
  issues: [CreatedIssue]
}

input CustomContextVariable_Input {
  \\"\\"\\"Type of custom context variable.\\"\\"\\"
  type: String!
}

\\"\\"\\"Details of configurations for a custom field.\\"\\"\\"
input CustomFieldConfigurations_Input {
  \\"\\"\\"The list of custom field configuration details.\\"\\"\\"
  configurations: [ContextualConfiguration_Input]!
}

\\"\\"\\"The details of a custom field context.\\"\\"\\"
type CustomFieldContext {
  \\"\\"\\"The description of the context.\\"\\"\\"
  description: String!

  \\"\\"\\"The ID of the context.\\"\\"\\"
  id: String!

  \\"\\"\\"Whether the context apply to all issue types.\\"\\"\\"
  isAnyIssueType: Boolean!

  \\"\\"\\"Whether the context is global.\\"\\"\\"
  isGlobalContext: Boolean!

  \\"\\"\\"The name of the context.\\"\\"\\"
  name: String!
}

union CustomFieldContextDefaultValue = CustomFieldContextDefaultValueCascadingOption | CustomFieldContextDefaultValueDate | CustomFieldContextDefaultValueDateTime | CustomFieldContextDefaultValueFloat | CustomFieldContextDefaultValueForgeDateTimeField | CustomFieldContextDefaultValueForgeGroupField | CustomFieldContextDefaultValueForgeMultiGroupField | CustomFieldContextDefaultValueForgeMultiStringField | CustomFieldContextDefaultValueForgeMultiUserField | CustomFieldContextDefaultValueForgeNumberField | CustomFieldContextDefaultValueForgeObjectField | CustomFieldContextDefaultValueForgeStringField | CustomFieldContextDefaultValueForgeUserField | CustomFieldContextDefaultValueLabels | CustomFieldContextDefaultValueMultiUserPicker | CustomFieldContextDefaultValueMultipleGroupPicker | CustomFieldContextDefaultValueMultipleOption | CustomFieldContextDefaultValueMultipleVersionPicker | CustomFieldContextDefaultValueProject | CustomFieldContextDefaultValueReadOnly | CustomFieldContextDefaultValueSingleGroupPicker | CustomFieldContextDefaultValueSingleOption | CustomFieldContextDefaultValueSingleVersionPicker | CustomFieldContextDefaultValueTextArea | CustomFieldContextDefaultValueTextField | CustomFieldContextDefaultValueURL | CustomFieldContextSingleUserPickerDefaults

\\"\\"\\"The default value for a cascading select custom field.\\"\\"\\"
type CustomFieldContextDefaultValueCascadingOption {
  \\"\\"\\"The ID of the default cascading option.\\"\\"\\"
  cascadingOptionId: String

  \\"\\"\\"The ID of the context.\\"\\"\\"
  contextId: String!

  \\"\\"\\"The ID of the default option.\\"\\"\\"
  optionId: String!
  type: String!
}

\\"\\"\\"The default value for a cascading select custom field.\\"\\"\\"
input CustomFieldContextDefaultValueCascadingOption_Input {
  \\"\\"\\"The ID of the default cascading option.\\"\\"\\"
  cascadingOptionId: String

  \\"\\"\\"The ID of the context.\\"\\"\\"
  contextId: String!

  \\"\\"\\"The ID of the default option.\\"\\"\\"
  optionId: String!
  type: String!
}

\\"\\"\\"The default value for a Date custom field.\\"\\"\\"
type CustomFieldContextDefaultValueDate {
  \\"\\"\\"The default date in ISO format. Ignored if \`useCurrent\` is true.\\"\\"\\"
  date: String
  type: String!

  \\"\\"\\"Whether to use the current date.\\"\\"\\"
  useCurrent: Boolean
}

\\"\\"\\"The default value for a date time custom field.\\"\\"\\"
type CustomFieldContextDefaultValueDateTime {
  \\"\\"\\"The default date-time in ISO format. Ignored if \`useCurrent\` is true.\\"\\"\\"
  dateTime: String
  type: String!

  \\"\\"\\"Whether to use the current date.\\"\\"\\"
  useCurrent: Boolean
}

\\"\\"\\"The default value for a date time custom field.\\"\\"\\"
input CustomFieldContextDefaultValueDateTime_Input {
  \\"\\"\\"The default date-time in ISO format. Ignored if \`useCurrent\` is true.\\"\\"\\"
  dateTime: String
  type: String!

  \\"\\"\\"Whether to use the current date.\\"\\"\\"
  useCurrent: Boolean
}

\\"\\"\\"The default value for a Date custom field.\\"\\"\\"
input CustomFieldContextDefaultValueDate_Input {
  \\"\\"\\"The default date in ISO format. Ignored if \`useCurrent\` is true.\\"\\"\\"
  date: String
  type: String!

  \\"\\"\\"Whether to use the current date.\\"\\"\\"
  useCurrent: Boolean
}

\\"\\"\\"Default value for a float (number) custom field.\\"\\"\\"
type CustomFieldContextDefaultValueFloat {
  \\"\\"\\"The default floating-point number.\\"\\"\\"
  number: Float!
  type: String!
}

\\"\\"\\"Default value for a float (number) custom field.\\"\\"\\"
input CustomFieldContextDefaultValueFloat_Input {
  \\"\\"\\"The default floating-point number.\\"\\"\\"
  number: Float!
  type: String!
}

\\"\\"\\"The default value for a Forge date time custom field.\\"\\"\\"
type CustomFieldContextDefaultValueForgeDateTimeField {
  \\"\\"\\"The default date-time in ISO format. Ignored if \`useCurrent\` is true.\\"\\"\\"
  dateTime: String

  \\"\\"\\"Whether to use the current date.\\"\\"\\"
  useCurrent: Boolean
}

\\"\\"\\"The default value for a Forge date time custom field.\\"\\"\\"
input CustomFieldContextDefaultValueForgeDateTimeField_Input {
  \\"\\"\\"The default date-time in ISO format. Ignored if \`useCurrent\` is true.\\"\\"\\"
  dateTime: String

  \\"\\"\\"Whether to use the current date.\\"\\"\\"
  useCurrent: Boolean
}

\\"\\"\\"The default value for a Forge group custom field.\\"\\"\\"
type CustomFieldContextDefaultValueForgeGroupField {
  \\"\\"\\"The ID of the context.\\"\\"\\"
  contextId: String!

  \\"\\"\\"The ID of the the default group.\\"\\"\\"
  groupId: String!
}

\\"\\"\\"The default value for a Forge group custom field.\\"\\"\\"
input CustomFieldContextDefaultValueForgeGroupField_Input {
  \\"\\"\\"The ID of the context.\\"\\"\\"
  contextId: String!

  \\"\\"\\"The ID of the the default group.\\"\\"\\"
  groupId: String!
}

\\"\\"\\"The default value for a Forge collection of groups custom field.\\"\\"\\"
type CustomFieldContextDefaultValueForgeMultiGroupField {
  \\"\\"\\"The ID of the context.\\"\\"\\"
  contextId: String!

  \\"\\"\\"The IDs of the default groups.\\"\\"\\"
  groupIds: [String]!
}

\\"\\"\\"The default value for a Forge collection of groups custom field.\\"\\"\\"
input CustomFieldContextDefaultValueForgeMultiGroupField_Input {
  \\"\\"\\"The ID of the context.\\"\\"\\"
  contextId: String!

  \\"\\"\\"The IDs of the default groups.\\"\\"\\"
  groupIds: [String]!
}

\\"\\"\\"The default text for a Forge collection of strings custom field.\\"\\"\\"
type CustomFieldContextDefaultValueForgeMultiStringField {
  type: String!

  \\"\\"\\"
  List of string values. The maximum length for a value is 254 characters.
  \\"\\"\\"
  values: [String]
}

\\"\\"\\"The default text for a Forge collection of strings custom field.\\"\\"\\"
input CustomFieldContextDefaultValueForgeMultiStringField_Input {
  type: String!

  \\"\\"\\"
  List of string values. The maximum length for a value is 254 characters.
  \\"\\"\\"
  values: [String]
}

\\"\\"\\"Defaults for a Forge collection of users custom field.\\"\\"\\"
type CustomFieldContextDefaultValueForgeMultiUserField {
  \\"\\"\\"The IDs of the default users.\\"\\"\\"
  accountIds: [String]!

  \\"\\"\\"The ID of the context.\\"\\"\\"
  contextId: String!
}

\\"\\"\\"Defaults for a Forge collection of users custom field.\\"\\"\\"
input CustomFieldContextDefaultValueForgeMultiUserField_Input {
  \\"\\"\\"The IDs of the default users.\\"\\"\\"
  accountIds: [String]!

  \\"\\"\\"The ID of the context.\\"\\"\\"
  contextId: String!
}

\\"\\"\\"Default value for a Forge number custom field.\\"\\"\\"
type CustomFieldContextDefaultValueForgeNumberField {
  \\"\\"\\"The default floating-point number.\\"\\"\\"
  number: Float!
}

\\"\\"\\"Default value for a Forge number custom field.\\"\\"\\"
input CustomFieldContextDefaultValueForgeNumberField_Input {
  \\"\\"\\"The default floating-point number.\\"\\"\\"
  number: Float!
}

\\"\\"\\"The default value for a Forge object custom field.\\"\\"\\"
type CustomFieldContextDefaultValueForgeObjectField {
  object: query_getDefaultValues_oneOf_0_values_items_oneOf_20_object
  type: String!
}

\\"\\"\\"The default value for a Forge object custom field.\\"\\"\\"
input CustomFieldContextDefaultValueForgeObjectField_Input {
  object: query_getDefaultValues_oneOf_0_values_items_oneOf_20_object_Input
  type: String!
}

\\"\\"\\"The default text for a Forge string custom field.\\"\\"\\"
type CustomFieldContextDefaultValueForgeStringField {
  \\"\\"\\"The default text. The maximum length is 254 characters.\\"\\"\\"
  text: String
}

\\"\\"\\"The default text for a Forge string custom field.\\"\\"\\"
input CustomFieldContextDefaultValueForgeStringField_Input {
  \\"\\"\\"The default text. The maximum length is 254 characters.\\"\\"\\"
  text: String
}

\\"\\"\\"Defaults for a Forge user custom field.\\"\\"\\"
type CustomFieldContextDefaultValueForgeUserField {
  \\"\\"\\"The ID of the default user.\\"\\"\\"
  accountId: String!

  \\"\\"\\"The ID of the context.\\"\\"\\"
  contextId: String!
  userFilter: UserFilter!
}

\\"\\"\\"Defaults for a Forge user custom field.\\"\\"\\"
input CustomFieldContextDefaultValueForgeUserField_Input {
  \\"\\"\\"The ID of the default user.\\"\\"\\"
  accountId: String!

  \\"\\"\\"The ID of the context.\\"\\"\\"
  contextId: String!
  userFilter: UserFilter_Input!
}

\\"\\"\\"Default value for a labels custom field.\\"\\"\\"
type CustomFieldContextDefaultValueLabels {
  \\"\\"\\"The default labels value.\\"\\"\\"
  labels: [String]!
  type: String!
}

\\"\\"\\"Default value for a labels custom field.\\"\\"\\"
input CustomFieldContextDefaultValueLabels_Input {
  \\"\\"\\"The default labels value.\\"\\"\\"
  labels: [String]!
  type: String!
}

\\"\\"\\"The default value for a User Picker (multiple) custom field.\\"\\"\\"
type CustomFieldContextDefaultValueMultiUserPicker {
  \\"\\"\\"The IDs of the default users.\\"\\"\\"
  accountIds: [String]!

  \\"\\"\\"The ID of the context.\\"\\"\\"
  contextId: String!
  type: String!
}

\\"\\"\\"The default value for a User Picker (multiple) custom field.\\"\\"\\"
input CustomFieldContextDefaultValueMultiUserPicker_Input {
  \\"\\"\\"The IDs of the default users.\\"\\"\\"
  accountIds: [String]!

  \\"\\"\\"The ID of the context.\\"\\"\\"
  contextId: String!
  type: String!
}

\\"\\"\\"The default value for a multiple group picker custom field.\\"\\"\\"
type CustomFieldContextDefaultValueMultipleGroupPicker {
  \\"\\"\\"The ID of the context.\\"\\"\\"
  contextId: String!

  \\"\\"\\"The IDs of the default groups.\\"\\"\\"
  groupIds: [String]!
  type: String!
}

\\"\\"\\"The default value for a multiple group picker custom field.\\"\\"\\"
input CustomFieldContextDefaultValueMultipleGroupPicker_Input {
  \\"\\"\\"The ID of the context.\\"\\"\\"
  contextId: String!

  \\"\\"\\"The IDs of the default groups.\\"\\"\\"
  groupIds: [String]!
  type: String!
}

\\"\\"\\"The default value for a multi-select custom field.\\"\\"\\"
type CustomFieldContextDefaultValueMultipleOption {
  \\"\\"\\"The ID of the context.\\"\\"\\"
  contextId: String!

  \\"\\"\\"The list of IDs of the default options.\\"\\"\\"
  optionIds: [String]!
  type: String!
}

\\"\\"\\"The default value for a multi-select custom field.\\"\\"\\"
input CustomFieldContextDefaultValueMultipleOption_Input {
  \\"\\"\\"The ID of the context.\\"\\"\\"
  contextId: String!

  \\"\\"\\"The list of IDs of the default options.\\"\\"\\"
  optionIds: [String]!
  type: String!
}

\\"\\"\\"The default value for a multiple version picker custom field.\\"\\"\\"
type CustomFieldContextDefaultValueMultipleVersionPicker {
  type: String!

  \\"\\"\\"The IDs of the default versions.\\"\\"\\"
  versionIds: [String]!

  \\"\\"\\"
  The order the pickable versions are displayed in. If not provided, the released-first order is used. Available version orders are \`\\"releasedFirst\\"\` and \`\\"unreleasedFirst\\"\`.
  \\"\\"\\"
  versionOrder: String
}

\\"\\"\\"The default value for a multiple version picker custom field.\\"\\"\\"
input CustomFieldContextDefaultValueMultipleVersionPicker_Input {
  type: String!

  \\"\\"\\"The IDs of the default versions.\\"\\"\\"
  versionIds: [String]!

  \\"\\"\\"
  The order the pickable versions are displayed in. If not provided, the released-first order is used. Available version orders are \`\\"releasedFirst\\"\` and \`\\"unreleasedFirst\\"\`.
  \\"\\"\\"
  versionOrder: String
}

\\"\\"\\"The default value for a project custom field.\\"\\"\\"
type CustomFieldContextDefaultValueProject {
  \\"\\"\\"The ID of the context.\\"\\"\\"
  contextId: String!

  \\"\\"\\"The ID of the default project.\\"\\"\\"
  projectId: String!
  type: String!
}

\\"\\"\\"The default value for a project custom field.\\"\\"\\"
input CustomFieldContextDefaultValueProject_Input {
  \\"\\"\\"The ID of the context.\\"\\"\\"
  contextId: String!

  \\"\\"\\"The ID of the default project.\\"\\"\\"
  projectId: String!
  type: String!
}

\\"\\"\\"The default text for a read only custom field.\\"\\"\\"
type CustomFieldContextDefaultValueReadOnly {
  \\"\\"\\"The default text. The maximum length is 255 characters.\\"\\"\\"
  text: String
  type: String!
}

\\"\\"\\"The default text for a read only custom field.\\"\\"\\"
input CustomFieldContextDefaultValueReadOnly_Input {
  \\"\\"\\"The default text. The maximum length is 255 characters.\\"\\"\\"
  text: String
  type: String!
}

\\"\\"\\"The default value for a group picker custom field.\\"\\"\\"
type CustomFieldContextDefaultValueSingleGroupPicker {
  \\"\\"\\"The ID of the context.\\"\\"\\"
  contextId: String!

  \\"\\"\\"The ID of the the default group.\\"\\"\\"
  groupId: String!
  type: String!
}

\\"\\"\\"The default value for a group picker custom field.\\"\\"\\"
input CustomFieldContextDefaultValueSingleGroupPicker_Input {
  \\"\\"\\"The ID of the context.\\"\\"\\"
  contextId: String!

  \\"\\"\\"The ID of the the default group.\\"\\"\\"
  groupId: String!
  type: String!
}

\\"\\"\\"The default value for a single select custom field.\\"\\"\\"
type CustomFieldContextDefaultValueSingleOption {
  \\"\\"\\"The ID of the context.\\"\\"\\"
  contextId: String!

  \\"\\"\\"The ID of the default option.\\"\\"\\"
  optionId: String!
  type: String!
}

\\"\\"\\"The default value for a single select custom field.\\"\\"\\"
input CustomFieldContextDefaultValueSingleOption_Input {
  \\"\\"\\"The ID of the context.\\"\\"\\"
  contextId: String!

  \\"\\"\\"The ID of the default option.\\"\\"\\"
  optionId: String!
  type: String!
}

\\"\\"\\"The default value for a version picker custom field.\\"\\"\\"
type CustomFieldContextDefaultValueSingleVersionPicker {
  type: String!

  \\"\\"\\"The ID of the default version.\\"\\"\\"
  versionId: String!

  \\"\\"\\"
  The order the pickable versions are displayed in. If not provided, the released-first order is used. Available version orders are \`\\"releasedFirst\\"\` and \`\\"unreleasedFirst\\"\`.
  \\"\\"\\"
  versionOrder: String
}

\\"\\"\\"The default value for a version picker custom field.\\"\\"\\"
input CustomFieldContextDefaultValueSingleVersionPicker_Input {
  type: String!

  \\"\\"\\"The ID of the default version.\\"\\"\\"
  versionId: String!

  \\"\\"\\"
  The order the pickable versions are displayed in. If not provided, the released-first order is used. Available version orders are \`\\"releasedFirst\\"\` and \`\\"unreleasedFirst\\"\`.
  \\"\\"\\"
  versionOrder: String
}

\\"\\"\\"The default text for a text area custom field.\\"\\"\\"
type CustomFieldContextDefaultValueTextArea {
  \\"\\"\\"The default text. The maximum length is 32767 characters.\\"\\"\\"
  text: String
  type: String!
}

\\"\\"\\"The default text for a text area custom field.\\"\\"\\"
input CustomFieldContextDefaultValueTextArea_Input {
  \\"\\"\\"The default text. The maximum length is 32767 characters.\\"\\"\\"
  text: String
  type: String!
}

\\"\\"\\"The default text for a text custom field.\\"\\"\\"
type CustomFieldContextDefaultValueTextField {
  \\"\\"\\"The default text. The maximum length is 254 characters.\\"\\"\\"
  text: String
  type: String!
}

\\"\\"\\"The default text for a text custom field.\\"\\"\\"
input CustomFieldContextDefaultValueTextField_Input {
  \\"\\"\\"The default text. The maximum length is 254 characters.\\"\\"\\"
  text: String
  type: String!
}

\\"\\"\\"The default value for a URL custom field.\\"\\"\\"
type CustomFieldContextDefaultValueURL {
  \\"\\"\\"The ID of the context.\\"\\"\\"
  contextId: String!
  type: String!

  \\"\\"\\"The default URL.\\"\\"\\"
  url: String!
}

\\"\\"\\"The default value for a URL custom field.\\"\\"\\"
input CustomFieldContextDefaultValueURL_Input {
  \\"\\"\\"The ID of the context.\\"\\"\\"
  contextId: String!
  type: String!

  \\"\\"\\"The default URL.\\"\\"\\"
  url: String!
}

\\"\\"\\"Default values to update.\\"\\"\\"
input CustomFieldContextDefaultValueUpdate_Input {
  defaultValues: [CustomFieldContextDefaultValue_Input]
}

input CustomFieldContextDefaultValue_Input {
  CustomFieldContextDefaultValueCascadingOption_Input: CustomFieldContextDefaultValueCascadingOption_Input
  CustomFieldContextDefaultValueDateTime_Input: CustomFieldContextDefaultValueDateTime_Input
  CustomFieldContextDefaultValueDate_Input: CustomFieldContextDefaultValueDate_Input
  CustomFieldContextDefaultValueFloat_Input: CustomFieldContextDefaultValueFloat_Input
  CustomFieldContextDefaultValueForgeDateTimeField_Input: CustomFieldContextDefaultValueForgeDateTimeField_Input
  CustomFieldContextDefaultValueForgeGroupField_Input: CustomFieldContextDefaultValueForgeGroupField_Input
  CustomFieldContextDefaultValueForgeMultiGroupField_Input: CustomFieldContextDefaultValueForgeMultiGroupField_Input
  CustomFieldContextDefaultValueForgeMultiStringField_Input: CustomFieldContextDefaultValueForgeMultiStringField_Input
  CustomFieldContextDefaultValueForgeMultiUserField_Input: CustomFieldContextDefaultValueForgeMultiUserField_Input
  CustomFieldContextDefaultValueForgeNumberField_Input: CustomFieldContextDefaultValueForgeNumberField_Input
  CustomFieldContextDefaultValueForgeObjectField_Input: CustomFieldContextDefaultValueForgeObjectField_Input
  CustomFieldContextDefaultValueForgeStringField_Input: CustomFieldContextDefaultValueForgeStringField_Input
  CustomFieldContextDefaultValueForgeUserField_Input: CustomFieldContextDefaultValueForgeUserField_Input
  CustomFieldContextDefaultValueLabels_Input: CustomFieldContextDefaultValueLabels_Input
  CustomFieldContextDefaultValueMultiUserPicker_Input: CustomFieldContextDefaultValueMultiUserPicker_Input
  CustomFieldContextDefaultValueMultipleGroupPicker_Input: CustomFieldContextDefaultValueMultipleGroupPicker_Input
  CustomFieldContextDefaultValueMultipleOption_Input: CustomFieldContextDefaultValueMultipleOption_Input
  CustomFieldContextDefaultValueMultipleVersionPicker_Input: CustomFieldContextDefaultValueMultipleVersionPicker_Input
  CustomFieldContextDefaultValueProject_Input: CustomFieldContextDefaultValueProject_Input
  CustomFieldContextDefaultValueReadOnly_Input: CustomFieldContextDefaultValueReadOnly_Input
  CustomFieldContextDefaultValueSingleGroupPicker_Input: CustomFieldContextDefaultValueSingleGroupPicker_Input
  CustomFieldContextDefaultValueSingleOption_Input: CustomFieldContextDefaultValueSingleOption_Input
  CustomFieldContextDefaultValueSingleVersionPicker_Input: CustomFieldContextDefaultValueSingleVersionPicker_Input
  CustomFieldContextDefaultValueTextArea_Input: CustomFieldContextDefaultValueTextArea_Input
  CustomFieldContextDefaultValueTextField_Input: CustomFieldContextDefaultValueTextField_Input
  CustomFieldContextDefaultValueURL_Input: CustomFieldContextDefaultValueURL_Input
  CustomFieldContextSingleUserPickerDefaults_Input: CustomFieldContextSingleUserPickerDefaults_Input
}

\\"\\"\\"Details of the custom field options for a context.\\"\\"\\"
type CustomFieldContextOption {
  \\"\\"\\"Whether the option is disabled.\\"\\"\\"
  disabled: Boolean!

  \\"\\"\\"The ID of the custom field option.\\"\\"\\"
  id: String!

  \\"\\"\\"
  For cascading options, the ID of the custom field option containing the cascading option.
  \\"\\"\\"
  optionId: String

  \\"\\"\\"The value of the custom field option.\\"\\"\\"
  value: String!
}

\\"\\"\\"Details of a context to project association.\\"\\"\\"
type CustomFieldContextProjectMapping {
  \\"\\"\\"The ID of the context.\\"\\"\\"
  contextId: String!

  \\"\\"\\"Whether context is global.\\"\\"\\"
  isGlobalContext: Boolean

  \\"\\"\\"The ID of the project.\\"\\"\\"
  projectId: String
}

\\"\\"\\"Defaults for a User Picker (single) custom field.\\"\\"\\"
type CustomFieldContextSingleUserPickerDefaults {
  \\"\\"\\"The ID of the default user.\\"\\"\\"
  accountId: String!

  \\"\\"\\"The ID of the context.\\"\\"\\"
  contextId: String!
  type: String!
  userFilter: UserFilter!
}

\\"\\"\\"Defaults for a User Picker (single) custom field.\\"\\"\\"
input CustomFieldContextSingleUserPickerDefaults_Input {
  \\"\\"\\"The ID of the default user.\\"\\"\\"
  accountId: String!

  \\"\\"\\"The ID of the context.\\"\\"\\"
  contextId: String!
  type: String!
  userFilter: UserFilter_Input!
}

\\"\\"\\"Details of a custom field context.\\"\\"\\"
input CustomFieldContextUpdateDetails_Input {
  \\"\\"\\"
  The description of the custom field context. The maximum length is 255 characters.
  \\"\\"\\"
  description: String

  \\"\\"\\"
  The name of the custom field context. The name must be unique. The maximum length is 255 characters.
  \\"\\"\\"
  name: String
}

\\"\\"\\"A list of custom field options for a context.\\"\\"\\"
type CustomFieldCreatedContextOptionsList {
  \\"\\"\\"The created custom field options.\\"\\"\\"
  options: [CustomFieldContextOption]
}

input CustomFieldDefinitionJsonBean_Input {
  \\"\\"\\"The description of the custom field, which is displayed in Jira.\\"\\"\\"
  description: String

  \\"\\"\\"
  The name of the custom field, which is displayed in Jira. This is not the unique identifier.
  \\"\\"\\"
  name: String!
  searcherKey: mutationInput_createCustomField_searcherKey

  \\"\\"\\"
  The type of the custom field. These built-in custom field types are available:
  
   *  \`cascadingselect\`: Enables values to be selected from two levels of select lists (value: \`com.atlassian.jira.plugin.system.customfieldtypes:cascadingselect\`)
   *  \`datepicker\`: Stores a date using a picker control (value: \`com.atlassian.jira.plugin.system.customfieldtypes:datepicker\`)
   *  \`datetime\`: Stores a date with a time component (value: \`com.atlassian.jira.plugin.system.customfieldtypes:datetime\`)
   *  \`float\`: Stores and validates a numeric (floating point) input (value: \`com.atlassian.jira.plugin.system.customfieldtypes:float\`)
   *  \`grouppicker\`: Stores a user group using a picker control (value: \`com.atlassian.jira.plugin.system.customfieldtypes:grouppicker\`)
   *  \`importid\`: A read-only field that stores the ID the issue had in the system it was imported from (value: \`com.atlassian.jira.plugin.system.customfieldtypes:importid\`)
   *  \`labels\`: Stores labels (value: \`com.atlassian.jira.plugin.system.customfieldtypes:labels\`)
   *  \`multicheckboxes\`: Stores multiple values using checkboxes (value: \`\`)
   *  \`multigrouppicker\`: Stores multiple user groups using a picker control (value: \`\`)
   *  \`multiselect\`: Stores multiple values using a select list (value: \`com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes\`)
   *  \`multiuserpicker\`: Stores multiple users using a picker control (value: \`com.atlassian.jira.plugin.system.customfieldtypes:multigrouppicker\`)
   *  \`multiversion\`: Stores multiple versions from the versions available in a project using a picker control (value: \`com.atlassian.jira.plugin.system.customfieldtypes:multiversion\`)
   *  \`project\`: Stores a project from a list of projects that the user is permitted to view (value: \`com.atlassian.jira.plugin.system.customfieldtypes:project\`)
   *  \`radiobuttons\`: Stores a value using radio buttons (value: \`com.atlassian.jira.plugin.system.customfieldtypes:radiobuttons\`)
   *  \`readonlyfield\`: Stores a read-only text value, which can only be populated via the API (value: \`com.atlassian.jira.plugin.system.customfieldtypes:readonlyfield\`)
   *  \`select\`: Stores a value from a configurable list of options (value: \`com.atlassian.jira.plugin.system.customfieldtypes:select\`)
   *  \`textarea\`: Stores a long text string using a multiline text area (value: \`com.atlassian.jira.plugin.system.customfieldtypes:textarea\`)
   *  \`textfield\`: Stores a text string using a single-line text box (value: \`com.atlassian.jira.plugin.system.customfieldtypes:textfield\`)
   *  \`url\`: Stores a URL (value: \`com.atlassian.jira.plugin.system.customfieldtypes:url\`)
   *  \`userpicker\`: Stores a user using a picker control (value: \`com.atlassian.jira.plugin.system.customfieldtypes:userpicker\`)
   *  \`version\`: Stores a version using a picker control (value: \`com.atlassian.jira.plugin.system.customfieldtypes:version\`)
  
  To create a field based on a [Forge custom field type](https://developer.atlassian.com/platform/forge/manifest-reference/modules/#jira-custom-field-type--beta-), use the ID of the Forge custom field type as the value. For example, \`ari:cloud:ecosystem::extension/e62f20a2-4b61-4dbe-bfb9-9a88b5e3ac84/548c5df1-24aa-4f7c-bbbb-3038d947cb05/static/my-cf-type-key\`.
  \\"\\"\\"
  type: String!
}

\\"\\"\\"Details of a custom option for a field.\\"\\"\\"
type CustomFieldOption {
  \\"\\"\\"The URL of these custom field option details.\\"\\"\\"
  self: URL

  \\"\\"\\"The value of the custom field option.\\"\\"\\"
  value: String
}

\\"\\"\\"Details of a custom field option to create.\\"\\"\\"
input CustomFieldOptionCreate_Input {
  \\"\\"\\"Whether the option is disabled.\\"\\"\\"
  disabled: Boolean

  \\"\\"\\"
  For cascading options, the ID of the custom field object containing the cascading option.
  \\"\\"\\"
  optionId: String

  \\"\\"\\"The value of the custom field option.\\"\\"\\"
  value: String!
}

\\"\\"\\"Details of a custom field option for a context.\\"\\"\\"
type CustomFieldOptionUpdate {
  \\"\\"\\"Whether the option is disabled.\\"\\"\\"
  disabled: Boolean

  \\"\\"\\"The ID of the custom field option.\\"\\"\\"
  id: String!

  \\"\\"\\"The value of the custom field option.\\"\\"\\"
  value: String
}

\\"\\"\\"Details of a custom field option for a context.\\"\\"\\"
input CustomFieldOptionUpdate_Input {
  \\"\\"\\"Whether the option is disabled.\\"\\"\\"
  disabled: Boolean

  \\"\\"\\"The ID of the custom field option.\\"\\"\\"
  id: String!

  \\"\\"\\"The value of the custom field option.\\"\\"\\"
  value: String
}

\\"\\"\\"Details about the replacement for a deleted version.\\"\\"\\"
input CustomFieldReplacement_Input {
  \\"\\"\\"The ID of the custom field in which to replace the version number.\\"\\"\\"
  customFieldId: BigInt

  \\"\\"\\"The version number to use as a replacement for the deleted version.\\"\\"\\"
  moveTo: BigInt
}

\\"\\"\\"A list of custom field options for a context.\\"\\"\\"
type CustomFieldUpdatedContextOptionsList {
  \\"\\"\\"The updated custom field options.\\"\\"\\"
  options: [CustomFieldOptionUpdate]
}

\\"\\"\\"Details of updates for a custom field.\\"\\"\\"
input CustomFieldValueUpdateDetails_Input {
  \\"\\"\\"The list of custom field update details.\\"\\"\\"
  updates: [CustomFieldValueUpdate_Input]
}

\\"\\"\\"A list of issue IDs and the value to update a custom field to.\\"\\"\\"
input CustomFieldValueUpdate_Input {
  \\"\\"\\"The list of issue IDs.\\"\\"\\"
  issueIds: [BigInt]!
  value: mutationInput_updateMultipleCustomFieldValues_updates_items_value_Input!
}

\\"\\"\\"Details of a dashboard.\\"\\"\\"
type Dashboard {
  \\"\\"\\"The automatic refresh interval for the dashboard in milliseconds.\\"\\"\\"
  automaticRefreshMs: Int
  description: String

  \\"\\"\\"The details of any edit share permissions for the dashboard.\\"\\"\\"
  editPermissions: [SharePermission]

  \\"\\"\\"The ID of the dashboard.\\"\\"\\"
  id: String

  \\"\\"\\"Whether the dashboard is selected as a favorite by the user.\\"\\"\\"
  isFavourite: Boolean

  \\"\\"\\"Whether the current user has permission to edit the dashboard.\\"\\"\\"
  isWritable: Boolean

  \\"\\"\\"The name of the dashboard.\\"\\"\\"
  name: String
  owner: UserBean

  \\"\\"\\"The number of users who have this dashboard as a favorite.\\"\\"\\"
  popularity: BigInt

  \\"\\"\\"The rank of this dashboard.\\"\\"\\"
  rank: Int

  \\"\\"\\"The URL of these dashboard details.\\"\\"\\"
  self: URL

  \\"\\"\\"The details of any view share permissions for the dashboard.\\"\\"\\"
  sharePermissions: [SharePermission]

  \\"\\"\\"The URL of the dashboard.\\"\\"\\"
  view: String
}

\\"\\"\\"Details of a dashboard.\\"\\"\\"
input DashboardDetails_Input {
  \\"\\"\\"The description of the dashboard.\\"\\"\\"
  description: String

  \\"\\"\\"The edit permissions for the dashboard.\\"\\"\\"
  editPermissions: [SharePermission_Input]!

  \\"\\"\\"The name of the dashboard.\\"\\"\\"
  name: String!

  \\"\\"\\"The share permissions for the dashboard.\\"\\"\\"
  sharePermissions: [SharePermission_Input]!
}

\\"\\"\\"Details of a gadget.\\"\\"\\"
type DashboardGadget {
  color: query_getAllGadgets_oneOf_0_gadgets_items_color!

  \\"\\"\\"The ID of the gadget instance.\\"\\"\\"
  id: BigInt!

  \\"\\"\\"The module key of the gadget type.\\"\\"\\"
  moduleKey: String
  position: DashboardGadgetPosition!

  \\"\\"\\"The title of the gadget.\\"\\"\\"
  title: String!

  \\"\\"\\"The URI of the gadget type.\\"\\"\\"
  uri: String
}

\\"\\"\\"Details of a gadget position.\\"\\"\\"
type DashboardGadgetPosition {
  The_column_position_of_the_gadget_: Int!
  The_row_position_of_the_gadget_: Int!
}

\\"\\"\\"Details of a gadget position.\\"\\"\\"
input DashboardGadgetPosition_Input2 {
  The_column_position_of_the_gadget_: Int!
  The_row_position_of_the_gadget_: Int!
}

\\"\\"\\"Details of a gadget position.\\"\\"\\"
input DashboardGadgetPosition_Input3 {
  The_column_position_of_the_gadget_: Int!
  The_row_position_of_the_gadget_: Int!
}

\\"\\"\\"The list of gadgets on the dashboard.\\"\\"\\"
type DashboardGadgetResponse {
  \\"\\"\\"The list of gadgets.\\"\\"\\"
  gadgets: [DashboardGadget]!
}

\\"\\"\\"Details of the settings for a dashboard gadget.\\"\\"\\"
input DashboardGadgetSettings_Input {
  \\"\\"\\"
  The color of the gadget. Should be one of \`blue\`, \`red\`, \`yellow\`, \`green\`, \`cyan\`, \`purple\`, \`gray\`, or \`white\`.
  \\"\\"\\"
  color: String

  \\"\\"\\"
  Whether to ignore the validation of module key and URI. For example, when a gadget is created that is a part of an application that isn't installed.
  \\"\\"\\"
  ignoreUriAndModuleKeyValidation: Boolean

  \\"\\"\\"The module key of the gadget type. Can't be provided with \`uri\`.\\"\\"\\"
  moduleKey: String
  position: DashboardGadgetPosition_Input2

  \\"\\"\\"The title of the gadget.\\"\\"\\"
  title: String

  \\"\\"\\"The URI of the gadget type. Can't be provided with \`moduleKey\`.\\"\\"\\"
  uri: String
}

\\"\\"\\"The details of the gadget to update.\\"\\"\\"
input DashboardGadgetUpdateRequest_Input {
  \\"\\"\\"
  The color of the gadget. Should be one of \`blue\`, \`red\`, \`yellow\`, \`green\`, \`cyan\`, \`purple\`, \`gray\`, or \`white\`.
  \\"\\"\\"
  color: String
  position: DashboardGadgetPosition_Input3

  \\"\\"\\"The title of the gadget.\\"\\"\\"
  title: String
}

\\"\\"\\"Represents date values\\"\\"\\"
scalar Date

\\"\\"\\"
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the \`date-time\` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
\\"\\"\\"
scalar DateTime

\\"\\"\\"
Details of the scope of the default sharing for new filters and dashboards.
\\"\\"\\"
type DefaultShareScope {
  scope: query_getDefaultShareScope_scope!
}

\\"\\"\\"
Details of the scope of the default sharing for new filters and dashboards.
\\"\\"\\"
input DefaultShareScope_Input {
  scope: query_getDefaultShareScope_scope!
}

\\"\\"\\"Details about the default workflow.\\"\\"\\"
type DefaultWorkflow {
  \\"\\"\\"
  Whether a draft workflow scheme is created or updated when updating an active workflow scheme. The draft is updated with the new default workflow. Defaults to \`false\`.
  \\"\\"\\"
  updateDraftIfNeeded: Boolean

  \\"\\"\\"The name of the workflow to set as the default workflow.\\"\\"\\"
  workflow: String!
}

\\"\\"\\"Details about the default workflow.\\"\\"\\"
input DefaultWorkflow_Input {
  \\"\\"\\"
  Whether a draft workflow scheme is created or updated when updating an active workflow scheme. The draft is updated with the new default workflow. Defaults to \`false\`.
  \\"\\"\\"
  updateDraftIfNeeded: Boolean

  \\"\\"\\"The name of the workflow to set as the default workflow.\\"\\"\\"
  workflow: String!
}

input DeleteAndReplaceVersionBean_Input {
  \\"\\"\\"
  An array of custom field IDs (\`customFieldId\`) and version IDs (\`moveTo\`) to update when the fields contain the deleted version.
  \\"\\"\\"
  customFieldReplacementList: [CustomFieldReplacement_Input]

  \\"\\"\\"
  The ID of the version to update \`affectedVersion\` to when the field contains the deleted version.
  \\"\\"\\"
  moveAffectedIssuesTo: BigInt

  \\"\\"\\"
  The ID of the version to update \`fixVersion\` to when the field contains the deleted version.
  \\"\\"\\"
  moveFixIssuesTo: BigInt
}

\\"\\"\\"Details about a workflow.\\"\\"\\"
type DeprecatedWorkflow {
  default: Boolean

  \\"\\"\\"The description of the workflow.\\"\\"\\"
  description: String

  \\"\\"\\"The datetime the workflow was last modified.\\"\\"\\"
  lastModifiedDate: String

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  lastModifiedUser: String

  \\"\\"\\"The account ID of the user that last modified the workflow.\\"\\"\\"
  lastModifiedUserAccountId: String

  \\"\\"\\"The name of the workflow.\\"\\"\\"
  name: String
  scope: Scope8

  \\"\\"\\"The number of steps included in the workflow.\\"\\"\\"
  steps: Int
}

union DynamicModulesResource_getModules_get_response = ConnectModules | ErrorMessage

union DynamicModulesResource_registerModules_post_response = ErrorMessage

union DynamicModulesResource_removeModules_delete_response = ErrorMessage | Void_container

\\"\\"\\"
An entity property, for more information see [Entity properties](https://developer.atlassian.com/cloud/jira/platform/jira-entity-properties/).
\\"\\"\\"
type EntityProperty {
  \\"\\"\\"The key of the property. Required on create and update.\\"\\"\\"
  key: String
  value: query_getCommentProperty_value
}

input EntityPropertyDetails_Input {
  \\"\\"\\"The entity property ID.\\"\\"\\"
  entityId: Float!

  \\"\\"\\"The entity property key.\\"\\"\\"
  key: String!

  \\"\\"\\"The new value of the entity property.\\"\\"\\"
  value: String!
}

\\"\\"\\"Error messages from an operation.\\"\\"\\"
type ErrorCollection {
  \\"\\"\\"
  The list of error messages produced by this operation. For example, \\"input parameter 'key' must be provided\\"
  \\"\\"\\"
  errorMessages: [String]
  errors: query_getBanner_oneOf_1_errors
  status: Int
}

\\"\\"\\"Error messages from an operation.\\"\\"\\"
type ErrorCollection2 {
  \\"\\"\\"
  The list of error messages produced by this operation. For example, \\"input parameter 'key' must be provided\\"
  \\"\\"\\"
  errorMessages: [String]
  errors: query_getBanner_oneOf_1_errors
  status: Int
}

type ErrorMessage {
  \\"\\"\\"The error message.\\"\\"\\"
  message: String!
}

\\"\\"\\"Details about a notification associated with an event.\\"\\"\\"
type EventNotification {
  \\"\\"\\"The email address.\\"\\"\\"
  emailAddress: String

  \\"\\"\\"
  Expand options that include additional event notification details in the response.
  \\"\\"\\"
  expand: String
  field: FieldDetails2
  group: GroupName4

  \\"\\"\\"The ID of the notification.\\"\\"\\"
  id: BigInt
  notificationType: query_getNotificationSchemes_values_items_notificationSchemeEvents_items_notifications_items_notificationType

  \\"\\"\\"
  As a group's name can change, use of \`recipient\` is recommended. The identifier associated with the \`notificationType\` value that defines the receiver of the notification, where the receiver isn't implied by \`notificationType\` value. So, when \`notificationType\` is:
  
   *  \`User\` The \`parameter\` is the user account ID.
   *  \`Group\` The \`parameter\` is the group name.
   *  \`ProjectRole\` The \`parameter\` is the project role ID.
   *  \`UserCustomField\` The \`parameter\` is the ID of the custom field.
   *  \`GroupCustomField\` The \`parameter\` is the ID of the custom field.
  \\"\\"\\"
  parameter: String
  projectRole: ProjectRole2

  \\"\\"\\"
  The identifier associated with the \`notificationType\` value that defines the receiver of the notification, where the receiver isn't implied by the \`notificationType\` value. So, when \`notificationType\` is:
  
   *  \`User\`, \`recipient\` is the user account ID.
   *  \`Group\`, \`recipient\` is the group ID.
   *  \`ProjectRole\`, \`recipient\` is the project role ID.
   *  \`UserCustomField\`, \`recipient\` is the ID of the custom field.
   *  \`GroupCustomField\`, \`recipient\` is the ID of the custom field.
  \\"\\"\\"
  recipient: String
  user: UserDetails8
}

\\"\\"\\"Details about a failed webhook.\\"\\"\\"
type FailedWebhook {
  \\"\\"\\"The webhook body.\\"\\"\\"
  body: String

  \\"\\"\\"
  The time the webhook was added to the list of failed webhooks (that is, the time of the last failed retry).
  \\"\\"\\"
  failureTime: BigInt!

  \\"\\"\\"
  The webhook ID, as sent in the \`X-Atlassian-Webhook-Identifier\` header with the webhook.
  \\"\\"\\"
  id: String!

  \\"\\"\\"The original webhook destination.\\"\\"\\"
  url: String!
}

\\"\\"\\"A page of failed webhooks.\\"\\"\\"
type FailedWebhooks {
  \\"\\"\\"
  The maximum number of items on the page. If the list of values is shorter than this number, then there are no more pages.
  \\"\\"\\"
  maxResults: Int!

  \\"\\"\\"
  The URL to the next page of results. Present only if the request returned at least one result.The next page may be empty at the time of receiving the response, but new failed webhooks may appear in time. You can save the URL to the next page and query for new results periodically (for example, every hour).
  \\"\\"\\"
  next: URL

  \\"\\"\\"The list of webhooks.\\"\\"\\"
  values: [FailedWebhook]!
}

\\"\\"\\"Details of a field.\\"\\"\\"
type Field {
  \\"\\"\\"Number of contexts where the field is used.\\"\\"\\"
  contextsCount: BigInt

  \\"\\"\\"The description of the field.\\"\\"\\"
  description: String

  \\"\\"\\"The ID of the field.\\"\\"\\"
  id: String!

  \\"\\"\\"Whether the field is locked.\\"\\"\\"
  isLocked: Boolean

  \\"\\"\\"Whether the field is shown on screen or not.\\"\\"\\"
  isUnscreenable: Boolean

  \\"\\"\\"The key of the field.\\"\\"\\"
  key: String
  lastUsed: FieldLastUsed

  \\"\\"\\"The name of the field.\\"\\"\\"
  name: String!
  schema: JsonTypeBean2!

  \\"\\"\\"Number of screens where the field is used.\\"\\"\\"
  screensCount: BigInt

  \\"\\"\\"The searcher key of the field. Returned for custom fields.\\"\\"\\"
  searcherKey: String
}

\\"\\"\\"Details of a field configuration.\\"\\"\\"
type FieldConfiguration {
  \\"\\"\\"The description of the field configuration.\\"\\"\\"
  description: String!

  \\"\\"\\"The ID of the field configuration.\\"\\"\\"
  id: BigInt!

  \\"\\"\\"Whether the field configuration is the default.\\"\\"\\"
  isDefault: Boolean

  \\"\\"\\"The name of the field configuration.\\"\\"\\"
  name: String!
}

\\"\\"\\"Details of a field configuration.\\"\\"\\"
type FieldConfigurationDetails {
  \\"\\"\\"The description of the field configuration.\\"\\"\\"
  description: query_getAllFieldConfigurations_values_items_description

  \\"\\"\\"The name of the field configuration. Must be unique.\\"\\"\\"
  name: query_getAllFieldConfigurations_values_items_name!
}

\\"\\"\\"Details of a field configuration.\\"\\"\\"
input FieldConfigurationDetails_Input {
  \\"\\"\\"The description of the field configuration.\\"\\"\\"
  description: query_getAllFieldConfigurations_values_items_description

  \\"\\"\\"The name of the field configuration. Must be unique.\\"\\"\\"
  name: query_getAllFieldConfigurations_values_items_name!
}

\\"\\"\\"The field configuration for an issue type.\\"\\"\\"
type FieldConfigurationIssueTypeItem {
  \\"\\"\\"The ID of the field configuration.\\"\\"\\"
  fieldConfigurationId: String!

  \\"\\"\\"The ID of the field configuration scheme.\\"\\"\\"
  fieldConfigurationSchemeId: String!

  \\"\\"\\"
  The ID of the issue type or *default*. When set to *default* this field configuration issue type item applies to all issue types without a field configuration.
  \\"\\"\\"
  issueTypeId: String!
}

\\"\\"\\"A field within a field configuration.\\"\\"\\"
type FieldConfigurationItem {
  \\"\\"\\"The description of the field within the field configuration.\\"\\"\\"
  description: String

  \\"\\"\\"The ID of the field within the field configuration.\\"\\"\\"
  id: String!

  \\"\\"\\"Whether the field is hidden in the field configuration.\\"\\"\\"
  isHidden: Boolean

  \\"\\"\\"Whether the field is required in the field configuration.\\"\\"\\"
  isRequired: Boolean

  \\"\\"\\"The renderer type for the field within the field configuration.\\"\\"\\"
  renderer: String
}

\\"\\"\\"A field within a field configuration.\\"\\"\\"
input FieldConfigurationItem_Input {
  \\"\\"\\"The description of the field within the field configuration.\\"\\"\\"
  description: String

  \\"\\"\\"The ID of the field within the field configuration.\\"\\"\\"
  id: String!

  \\"\\"\\"Whether the field is hidden in the field configuration.\\"\\"\\"
  isHidden: Boolean

  \\"\\"\\"Whether the field is required in the field configuration.\\"\\"\\"
  isRequired: Boolean

  \\"\\"\\"The renderer type for the field within the field configuration.\\"\\"\\"
  renderer: String
}

\\"\\"\\"Details of field configuration items.\\"\\"\\"
input FieldConfigurationItemsDetails_Input {
  \\"\\"\\"Details of fields in a field configuration.\\"\\"\\"
  fieldConfigurationItems: [FieldConfigurationItem_Input]!
}

\\"\\"\\"Details of a field configuration scheme.\\"\\"\\"
type FieldConfigurationScheme {
  \\"\\"\\"The description of the field configuration scheme.\\"\\"\\"
  description: String

  \\"\\"\\"The ID of the field configuration scheme.\\"\\"\\"
  id: String!

  \\"\\"\\"The name of the field configuration scheme.\\"\\"\\"
  name: String!
}

\\"\\"\\"Associated field configuration scheme and project.\\"\\"\\"
input FieldConfigurationSchemeProjectAssociation_Input {
  \\"\\"\\"
  The ID of the field configuration scheme. If the field configuration scheme ID is \`null\`, the operation assigns the default field configuration scheme.
  \\"\\"\\"
  fieldConfigurationSchemeId: String

  \\"\\"\\"The ID of the project.\\"\\"\\"
  projectId: String!
}

\\"\\"\\"Project list with assigned field configuration schema.\\"\\"\\"
type FieldConfigurationSchemeProjects {
  fieldConfigurationScheme: FieldConfigurationScheme

  \\"\\"\\"The IDs of projects using the field configuration scheme.\\"\\"\\"
  projectIds: [String]!
}

\\"\\"\\"The field configuration to issue type mapping.\\"\\"\\"
input FieldConfigurationToIssueTypeMapping_Input {
  \\"\\"\\"The ID of the field configuration.\\"\\"\\"
  fieldConfigurationId: String!

  \\"\\"\\"
  The ID of the issue type or *default*. When set to *default* this field configuration issue type item applies to all issue types without a field configuration. An issue type can be included only once in a request.
  \\"\\"\\"
  issueTypeId: String!
}

\\"\\"\\"Details about a field.\\"\\"\\"
type FieldDetails {
  \\"\\"\\"
  The names that can be used to reference the field in an advanced search. For more information, see [Advanced searching - fields reference](https://confluence.atlassian.com/x/gwORLQ).
  \\"\\"\\"
  clauseNames: [String]

  \\"\\"\\"Whether the field is a custom field.\\"\\"\\"
  custom: Boolean

  \\"\\"\\"The ID of the field.\\"\\"\\"
  id: String

  \\"\\"\\"The key of the field.\\"\\"\\"
  key: String

  \\"\\"\\"The name of the field.\\"\\"\\"
  name: String

  \\"\\"\\"Whether the field can be used as a column on the issue navigator.\\"\\"\\"
  navigable: Boolean

  \\"\\"\\"Whether the content of the field can be used to order lists.\\"\\"\\"
  orderable: Boolean
  schema: JsonTypeBean
  scope: Scope3

  \\"\\"\\"Whether the content of the field can be searched.\\"\\"\\"
  searchable: Boolean
}

\\"\\"\\"Details about a field.\\"\\"\\"
type FieldDetails2 {
  \\"\\"\\"
  The names that can be used to reference the field in an advanced search. For more information, see [Advanced searching - fields reference](https://confluence.atlassian.com/x/gwORLQ).
  \\"\\"\\"
  clauseNames: [String]

  \\"\\"\\"Whether the field is a custom field.\\"\\"\\"
  custom: Boolean

  \\"\\"\\"The ID of the field.\\"\\"\\"
  id: String

  \\"\\"\\"The key of the field.\\"\\"\\"
  key: String

  \\"\\"\\"The name of the field.\\"\\"\\"
  name: String

  \\"\\"\\"Whether the field can be used as a column on the issue navigator.\\"\\"\\"
  navigable: Boolean

  \\"\\"\\"Whether the content of the field can be used to order lists.\\"\\"\\"
  orderable: Boolean
  schema: JsonTypeBean
  scope: Scope3

  \\"\\"\\"Whether the content of the field can be searched.\\"\\"\\"
  searchable: Boolean
}

\\"\\"\\"Information about the most recent use of a field.\\"\\"\\"
type FieldLastUsed {
  type: query_getFieldsPaginated_oneOf_0_values_items_lastUsed_type

  \\"\\"\\"The date when the value of the field last changed.\\"\\"\\"
  value: DateTime
}

\\"\\"\\"The metadata describing an issue field.\\"\\"\\"
type FieldMetadata {
  \\"\\"\\"The list of values allowed in the field.\\"\\"\\"
  allowedValues: [query_getAttachment_additionalProperties]

  \\"\\"\\"The URL that can be used to automatically complete the field.\\"\\"\\"
  autoCompleteUrl: String
  configuration: query_getAttachment_additionalProperties
  defaultValue: query_getCreateIssueMeta_projects_items_issuetypes_items_fields_additionalProperties_defaultValue

  \\"\\"\\"Whether the field has a default value.\\"\\"\\"
  hasDefaultValue: Boolean

  \\"\\"\\"The key of the field.\\"\\"\\"
  key: String!

  \\"\\"\\"The name of the field.\\"\\"\\"
  name: String!

  \\"\\"\\"The list of operations that can be performed on the field.\\"\\"\\"
  operations: [String]!

  \\"\\"\\"Whether the field is required.\\"\\"\\"
  required: Boolean!
  schema: JsonTypeBean3!
}

\\"\\"\\"Details of a field that can be used in advanced searches.\\"\\"\\"
type FieldReferenceData {
  auto: query_getAutoComplete_visibleFieldNames_items_auto

  \\"\\"\\"If the item is a custom field, the ID of the custom field.\\"\\"\\"
  cfid: String

  \\"\\"\\"
  The display name contains the following:
  
   *  for system fields, the field name. For example, \`Summary\`.
   *  for collapsed custom fields, the field name followed by a hyphen and then the field name and field type. For example, \`Component - Component[Dropdown]\`.
   *  for other custom fields, the field name followed by a hyphen and then the custom field ID. For example, \`Component - cf[10061]\`.
  \\"\\"\\"
  displayName: String

  \\"\\"\\"The valid search operators for the field.\\"\\"\\"
  operators: [String]
  orderable: query_getAutoComplete_visibleFieldNames_items_orderable
  searchable: query_getAutoComplete_visibleFieldNames_items_searchable

  \\"\\"\\"The data types of items in the field.\\"\\"\\"
  types: [String]

  \\"\\"\\"The field identifier.\\"\\"\\"
  value: String
}

\\"\\"\\"Key fields from the linked issue.\\"\\"\\"
type Fields {
  assignee: UserDetails7
  issueType: IssueTypeDetails2
  issuetype: IssueTypeDetails
  priority: Priority
  status: StatusDetails2

  \\"\\"\\"The summary description of the linked issue.\\"\\"\\"
  summary: String
  timetracking: TimeTrackingDetails
}

\\"\\"\\"Key fields from the linked issue.\\"\\"\\"
input Fields_Input {
  assignee: UserDetails_Input7
  issueType: IssueTypeDetails_Input2
  issuetype: IssueTypeDetails_Input
  priority: Priority_Input
  status: StatusDetails_Input2

  \\"\\"\\"The summary description of the linked issue.\\"\\"\\"
  summary: String
  timetracking: TimeTrackingDetails_Input
}

\\"\\"\\"Details about a filter.\\"\\"\\"
type Filter {
  \\"\\"\\"A description of the filter.\\"\\"\\"
  description: String

  \\"\\"\\"The groups and projects that can edit the filter.\\"\\"\\"
  editPermissions: [SharePermission]

  \\"\\"\\"Whether the filter is selected as a favorite.\\"\\"\\"
  favourite: Boolean

  \\"\\"\\"
  The count of how many users have selected this filter as a favorite, including the filter owner.
  \\"\\"\\"
  favouritedCount: BigInt

  \\"\\"\\"The unique identifier for the filter.\\"\\"\\"
  id: String

  \\"\\"\\"
  The JQL query for the filter. For example, *project = SSP AND issuetype = Bug*.
  \\"\\"\\"
  jql: String

  \\"\\"\\"The name of the filter. Must be unique.\\"\\"\\"
  name: String!
  owner: User8

  \\"\\"\\"
  A URL to view the filter results in Jira, using the [Search for issues using JQL](#api-rest-api-3-filter-search-get) operation with the filter's JQL string to return the filter results. For example, *https://your-domain.atlassian.net/rest/api/3/search?jql=project+%3D+SSP+AND+issuetype+%3D+Bug*.
  \\"\\"\\"
  searchUrl: URL

  \\"\\"\\"The URL of the filter.\\"\\"\\"
  self: URL

  \\"\\"\\"The groups and projects that the filter is shared with.\\"\\"\\"
  sharePermissions: [SharePermission]
  sharedUsers: UserList
  subscriptions: FilterSubscriptionsList

  \\"\\"\\"
  A URL to view the filter results in Jira, using the ID of the filter. For example, *https://your-domain.atlassian.net/issues/?filter=10100*.
  \\"\\"\\"
  viewUrl: URL
}

\\"\\"\\"Details of a filter.\\"\\"\\"
type FilterDetails {
  \\"\\"\\"The description of the filter.\\"\\"\\"
  description: String

  \\"\\"\\"
  The groups and projects that can edit the filter. This can be specified when updating a filter, but not when creating a filter.
  \\"\\"\\"
  editPermissions: [SharePermission]

  \\"\\"\\"Expand options that include additional filter details in the response.\\"\\"\\"
  expand: String

  \\"\\"\\"
  Whether the filter is selected as a favorite by any users, not including the filter owner.
  \\"\\"\\"
  favourite: Boolean

  \\"\\"\\"
  The count of how many users have selected this filter as a favorite, including the filter owner.
  \\"\\"\\"
  favouritedCount: BigInt

  \\"\\"\\"The unique identifier for the filter.\\"\\"\\"
  id: String

  \\"\\"\\"
  The JQL query for the filter. For example, *project = SSP AND issuetype = Bug*.
  \\"\\"\\"
  jql: String

  \\"\\"\\"The name of the filter.\\"\\"\\"
  name: String!
  owner: User11

  \\"\\"\\"
  A URL to view the filter results in Jira, using the [Search for issues using JQL](#api-rest-api-3-filter-search-get) operation with the filter's JQL string to return the filter results. For example, *https://your-domain.atlassian.net/rest/api/3/search?jql=project+%3D+SSP+AND+issuetype+%3D+Bug*.
  \\"\\"\\"
  searchUrl: URL

  \\"\\"\\"The URL of the filter.\\"\\"\\"
  self: URL

  \\"\\"\\"
  The groups and projects that the filter is shared with. This can be specified when updating a filter, but not when creating a filter.
  \\"\\"\\"
  sharePermissions: [SharePermission]

  \\"\\"\\"The users that are subscribed to the filter.\\"\\"\\"
  subscriptions: [FilterSubscription]

  \\"\\"\\"
  A URL to view the filter results in Jira, using the ID of the filter. For example, *https://your-domain.atlassian.net/issues/?filter=10100*.
  \\"\\"\\"
  viewUrl: URL
}

\\"\\"\\"Details of a user or group subscribing to a filter.\\"\\"\\"
type FilterSubscription {
  group: GroupName3

  \\"\\"\\"The ID of the filter subscription.\\"\\"\\"
  id: BigInt
  user: User10
}

\\"\\"\\"Details of a user or group subscribing to a filter.\\"\\"\\"
input FilterSubscription_Input {
  group: GroupName_Input3

  \\"\\"\\"The ID of the filter subscription.\\"\\"\\"
  id: BigInt
  user: User_Input10
}

\\"\\"\\"A paginated list of subscriptions to a filter.\\"\\"\\"
type FilterSubscriptionsList {
  \\"\\"\\"The index of the last item returned on the page.\\"\\"\\"
  end_index: Int

  \\"\\"\\"The list of items.\\"\\"\\"
  items: [FilterSubscription]

  \\"\\"\\"The maximum number of results that could be on the page.\\"\\"\\"
  max_results: Int

  \\"\\"\\"The number of items on the page.\\"\\"\\"
  size: Int

  \\"\\"\\"The index of the first item returned on the page.\\"\\"\\"
  start_index: Int
}

\\"\\"\\"A paginated list of subscriptions to a filter.\\"\\"\\"
input FilterSubscriptionsList_Input {
  \\"\\"\\"The index of the last item returned on the page.\\"\\"\\"
  end_index: Int

  \\"\\"\\"The list of items.\\"\\"\\"
  items: [FilterSubscription_Input]

  \\"\\"\\"The maximum number of results that could be on the page.\\"\\"\\"
  max_results: Int

  \\"\\"\\"The number of items on the page.\\"\\"\\"
  size: Int

  \\"\\"\\"The index of the first item returned on the page.\\"\\"\\"
  start_index: Int
}

\\"\\"\\"Details about a filter.\\"\\"\\"
input Filter_Input {
  \\"\\"\\"A description of the filter.\\"\\"\\"
  description: String

  \\"\\"\\"The groups and projects that can edit the filter.\\"\\"\\"
  editPermissions: [SharePermission_Input]

  \\"\\"\\"Whether the filter is selected as a favorite.\\"\\"\\"
  favourite: Boolean

  \\"\\"\\"
  The count of how many users have selected this filter as a favorite, including the filter owner.
  \\"\\"\\"
  favouritedCount: BigInt

  \\"\\"\\"The unique identifier for the filter.\\"\\"\\"
  id: String

  \\"\\"\\"
  The JQL query for the filter. For example, *project = SSP AND issuetype = Bug*.
  \\"\\"\\"
  jql: String

  \\"\\"\\"The name of the filter. Must be unique.\\"\\"\\"
  name: String!
  owner: User_Input8

  \\"\\"\\"
  A URL to view the filter results in Jira, using the [Search for issues using JQL](#api-rest-api-3-filter-search-get) operation with the filter's JQL string to return the filter results. For example, *https://your-domain.atlassian.net/rest/api/3/search?jql=project+%3D+SSP+AND+issuetype+%3D+Bug*.
  \\"\\"\\"
  searchUrl: URL

  \\"\\"\\"The URL of the filter.\\"\\"\\"
  self: URL

  \\"\\"\\"The groups and projects that the filter is shared with.\\"\\"\\"
  sharePermissions: [SharePermission_Input]
  sharedUsers: UserList_Input
  subscriptions: FilterSubscriptionsList_Input

  \\"\\"\\"
  A URL to view the filter results in Jira, using the ID of the filter. For example, *https://your-domain.atlassian.net/issues/?filter=10100*.
  \\"\\"\\"
  viewUrl: URL
}

\\"\\"\\"A group found in a search.\\"\\"\\"
type FoundGroup {
  \\"\\"\\"
  The ID of the group, which uniquely identifies the group across all Atlassian products. For example, *952d12c3-5b5b-4d04-bb32-44d383afc4b2*.
  \\"\\"\\"
  groupId: String

  \\"\\"\\"
  The group name with the matched query string highlighted with the HTML bold tag.
  \\"\\"\\"
  html: String
  labels: [GroupLabel]

  \\"\\"\\"
  The name of the group. The name of a group is mutable, to reliably identify a group use \`\`groupId\`.\`
  \\"\\"\\"
  name: String
}

\\"\\"\\"
The list of groups found in a search, including header text (Showing X of Y matching groups) and total of matched groups.
\\"\\"\\"
type FoundGroups {
  groups: [FoundGroup]

  \\"\\"\\"
  Header text indicating the number of groups in the response and the total number of groups found in the search.
  \\"\\"\\"
  header: String

  \\"\\"\\"The total number of groups found in the search.\\"\\"\\"
  total: Int
}

\\"\\"\\"
The list of users found in a search, including header text (Showing X of Y matching users) and total of matched users.
\\"\\"\\"
type FoundUsers {
  \\"\\"\\"
  Header text indicating the number of users in the response and the total number of users found in the search.
  \\"\\"\\"
  header: String

  \\"\\"\\"The total number of users found in the search.\\"\\"\\"
  total: Int
  users: [UserPickerUser]
}

\\"\\"\\"List of users and groups found in a search.\\"\\"\\"
type FoundUsersAndGroups {
  groups: FoundGroups
  users: FoundUsers
}

\\"\\"\\"Details of functions that can be used in advanced searches.\\"\\"\\"
type FunctionReferenceData {
  \\"\\"\\"The display name of the function.\\"\\"\\"
  displayName: String
  isList: query_getAutoComplete_visibleFunctionNames_items_isList

  \\"\\"\\"The data types returned by the function.\\"\\"\\"
  types: [String]

  \\"\\"\\"The function identifier.\\"\\"\\"
  value: String
}

\\"\\"\\"
Defines the behavior of the option within the global context. If this property is set, even if set to an empty object, then the option is available in all projects.
\\"\\"\\"
type GlobalScopeBean {
  \\"\\"\\"
  Defines the behavior of the option in the global context.If notSelectable is set, the option cannot be set as the field's value. This is useful for archiving an option that has previously been selected but shouldn't be used anymore.If defaultValue is set, the option is selected by default.
  \\"\\"\\"
  attributes: [query_getAllIssueFieldOptions_values_items_config_scope_allOf_0_projects2_items_attributes_items]
}

\\"\\"\\"
Defines the behavior of the option within the global context. If this property is set, even if set to an empty object, then the option is available in all projects.
\\"\\"\\"
input GlobalScopeBean_Input {
  \\"\\"\\"
  Defines the behavior of the option in the global context.If notSelectable is set, the option cannot be set as the field's value. This is useful for archiving an option that has previously been selected but shouldn't be used anymore.If defaultValue is set, the option is selected by default.
  \\"\\"\\"
  attributes: [query_getAllIssueFieldOptions_values_items_config_scope_allOf_0_projects2_items_attributes_items]
}

type Group {
  \\"\\"\\"Expand options that include additional group details in the response.\\"\\"\\"
  expand: String

  \\"\\"\\"
  The ID of the group, which uniquely identifies the group across all Atlassian products. For example, *952d12c3-5b5b-4d04-bb32-44d383afc4b2*.
  \\"\\"\\"
  groupId: String

  \\"\\"\\"The name of group.\\"\\"\\"
  name: String

  \\"\\"\\"The URL for these group details.\\"\\"\\"
  self: URL
  users: PagedListUserDetailsApplicationUser
}

\\"\\"\\"Details about a group.\\"\\"\\"
type GroupDetails {
  \\"\\"\\"
  The ID of the group, which uniquely identifies the group across all Atlassian products. For example, *952d12c3-5b5b-4d04-bb32-44d383afc4b2*.
  \\"\\"\\"
  groupId: String

  \\"\\"\\"The name of the group.\\"\\"\\"
  name: String
}

\\"\\"\\"A group label.\\"\\"\\"
type GroupLabel {
  \\"\\"\\"The group label name.\\"\\"\\"
  text: String

  \\"\\"\\"The title of the group label.\\"\\"\\"
  title: String
  type: query_findGroups_groups_items_labels_items_type
}

\\"\\"\\"Details about a group.\\"\\"\\"
type GroupName {
  \\"\\"\\"
  The ID of the group, which uniquely identifies the group across all Atlassian products. For example, *952d12c3-5b5b-4d04-bb32-44d383afc4b2*.
  \\"\\"\\"
  groupId: String

  \\"\\"\\"The name of group.\\"\\"\\"
  name: String

  \\"\\"\\"The URL for these group details.\\"\\"\\"
  self: URL
}

\\"\\"\\"Details about a group.\\"\\"\\"
type GroupName2 {
  \\"\\"\\"
  The ID of the group, which uniquely identifies the group across all Atlassian products. For example, *952d12c3-5b5b-4d04-bb32-44d383afc4b2*.
  \\"\\"\\"
  groupId: String

  \\"\\"\\"The name of group.\\"\\"\\"
  name: String

  \\"\\"\\"The URL for these group details.\\"\\"\\"
  self: URL
}

\\"\\"\\"Details about a group.\\"\\"\\"
type GroupName3 {
  \\"\\"\\"
  The ID of the group, which uniquely identifies the group across all Atlassian products. For example, *952d12c3-5b5b-4d04-bb32-44d383afc4b2*.
  \\"\\"\\"
  groupId: String

  \\"\\"\\"The name of group.\\"\\"\\"
  name: String

  \\"\\"\\"The URL for these group details.\\"\\"\\"
  self: URL
}

\\"\\"\\"Details about a group.\\"\\"\\"
type GroupName4 {
  \\"\\"\\"
  The ID of the group, which uniquely identifies the group across all Atlassian products. For example, *952d12c3-5b5b-4d04-bb32-44d383afc4b2*.
  \\"\\"\\"
  groupId: String

  \\"\\"\\"The name of group.\\"\\"\\"
  name: String

  \\"\\"\\"The URL for these group details.\\"\\"\\"
  self: URL
}

\\"\\"\\"Details about a group.\\"\\"\\"
input GroupName_Input {
  \\"\\"\\"
  The ID of the group, which uniquely identifies the group across all Atlassian products. For example, *952d12c3-5b5b-4d04-bb32-44d383afc4b2*.
  \\"\\"\\"
  groupId: String

  \\"\\"\\"The name of group.\\"\\"\\"
  name: String

  \\"\\"\\"The URL for these group details.\\"\\"\\"
  self: URL
}

\\"\\"\\"Details about a group.\\"\\"\\"
input GroupName_Input2 {
  \\"\\"\\"
  The ID of the group, which uniquely identifies the group across all Atlassian products. For example, *952d12c3-5b5b-4d04-bb32-44d383afc4b2*.
  \\"\\"\\"
  groupId: String

  \\"\\"\\"The name of group.\\"\\"\\"
  name: String

  \\"\\"\\"The URL for these group details.\\"\\"\\"
  self: URL
}

\\"\\"\\"Details about a group.\\"\\"\\"
input GroupName_Input3 {
  \\"\\"\\"
  The ID of the group, which uniquely identifies the group across all Atlassian products. For example, *952d12c3-5b5b-4d04-bb32-44d383afc4b2*.
  \\"\\"\\"
  groupId: String

  \\"\\"\\"The name of group.\\"\\"\\"
  name: String

  \\"\\"\\"The URL for these group details.\\"\\"\\"
  self: URL
}

\\"\\"\\"Jira instance health check results. Deprecated and no longer returned.\\"\\"\\"
type HealthCheckResult {
  \\"\\"\\"The description of the Jira health check item.\\"\\"\\"
  description: String

  \\"\\"\\"The name of the Jira health check item.\\"\\"\\"
  name: String

  \\"\\"\\"Whether the Jira health check item passed or failed.\\"\\"\\"
  passed: Boolean
}

\\"\\"\\"The project issue type hierarchy.\\"\\"\\"
type Hierarchy {
  \\"\\"\\"
  The ID of the base level. This property is deprecated, see [Change notice: Removing hierarchy level IDs from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/).
  \\"\\"\\"
  baseLevelId: BigInt

  \\"\\"\\"Details about the hierarchy level.\\"\\"\\"
  levels: [SimplifiedHierarchyLevel]
}

\\"\\"\\"The project issue type hierarchy.\\"\\"\\"
input Hierarchy_Input {
  \\"\\"\\"
  The ID of the base level. This property is deprecated, see [Change notice: Removing hierarchy level IDs from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/).
  \\"\\"\\"
  baseLevelId: BigInt

  \\"\\"\\"Details about the hierarchy level.\\"\\"\\"
  levels: [SimplifiedHierarchyLevel_Input]
}

\\"\\"\\"Details of issue history metadata.\\"\\"\\"
type HistoryMetadata {
  \\"\\"\\"The activity described in the history record.\\"\\"\\"
  activityDescription: String

  \\"\\"\\"The key of the activity described in the history record.\\"\\"\\"
  activityDescriptionKey: String
  actor: HistoryMetadataParticipant
  additionalProperties: JSON
  cause: HistoryMetadataParticipant3

  \\"\\"\\"The description of the history record.\\"\\"\\"
  description: String

  \\"\\"\\"The description key of the history record.\\"\\"\\"
  descriptionKey: String

  \\"\\"\\"The description of the email address associated the history record.\\"\\"\\"
  emailDescription: String

  \\"\\"\\"
  The description key of the email address associated the history record.
  \\"\\"\\"
  emailDescriptionKey: String
  extraData: query_getIssue_changelog_allOf_0_histories_items_historyMetadata_allOf_0_extraData
  generator: HistoryMetadataParticipant2

  \\"\\"\\"The type of the history record.\\"\\"\\"
  type: String
}

\\"\\"\\"
Details of user or system associated with a issue history metadata item.
\\"\\"\\"
type HistoryMetadataParticipant {
  additionalProperties: JSON

  \\"\\"\\"
  The URL to an avatar for the user or system associated with a history record.
  \\"\\"\\"
  avatarUrl: String

  \\"\\"\\"
  The display name of the user or system associated with a history record.
  \\"\\"\\"
  displayName: String

  \\"\\"\\"
  The key of the display name of the user or system associated with a history record.
  \\"\\"\\"
  displayNameKey: String

  \\"\\"\\"The ID of the user or system associated with a history record.\\"\\"\\"
  id: String

  \\"\\"\\"The type of the user or system associated with a history record.\\"\\"\\"
  type: String

  \\"\\"\\"The URL of the user or system associated with a history record.\\"\\"\\"
  url: String
}

\\"\\"\\"
Details of user or system associated with a issue history metadata item.
\\"\\"\\"
type HistoryMetadataParticipant2 {
  additionalProperties: JSON

  \\"\\"\\"
  The URL to an avatar for the user or system associated with a history record.
  \\"\\"\\"
  avatarUrl: String

  \\"\\"\\"
  The display name of the user or system associated with a history record.
  \\"\\"\\"
  displayName: String

  \\"\\"\\"
  The key of the display name of the user or system associated with a history record.
  \\"\\"\\"
  displayNameKey: String

  \\"\\"\\"The ID of the user or system associated with a history record.\\"\\"\\"
  id: String

  \\"\\"\\"The type of the user or system associated with a history record.\\"\\"\\"
  type: String

  \\"\\"\\"The URL of the user or system associated with a history record.\\"\\"\\"
  url: String
}

\\"\\"\\"
Details of user or system associated with a issue history metadata item.
\\"\\"\\"
type HistoryMetadataParticipant3 {
  additionalProperties: JSON

  \\"\\"\\"
  The URL to an avatar for the user or system associated with a history record.
  \\"\\"\\"
  avatarUrl: String

  \\"\\"\\"
  The display name of the user or system associated with a history record.
  \\"\\"\\"
  displayName: String

  \\"\\"\\"
  The key of the display name of the user or system associated with a history record.
  \\"\\"\\"
  displayNameKey: String

  \\"\\"\\"The ID of the user or system associated with a history record.\\"\\"\\"
  id: String

  \\"\\"\\"The type of the user or system associated with a history record.\\"\\"\\"
  type: String

  \\"\\"\\"The URL of the user or system associated with a history record.\\"\\"\\"
  url: String
}

\\"\\"\\"
An icon. If no icon is defined:

 *  for a status icon, no status icon displays in Jira.
 *  for the remote object icon, the default link icon displays in Jira.
\\"\\"\\"
type Icon {
  additionalProperties: JSON

  \\"\\"\\"
  The URL of the tooltip, used only for a status icon. If not set, the status icon in Jira is not clickable.
  \\"\\"\\"
  link: String

  \\"\\"\\"
  The title of the icon. This is used as follows:
  
   *  For a status icon it is used as a tooltip on the icon. If not set, the status icon doesn't display a tooltip in Jira.
   *  For the remote object icon it is used in conjunction with the application name to display a tooltip for the link's icon. The tooltip takes the format \\"\\\\[application name\\\\] icon title\\". Blank itemsare excluded from the tooltip title. If both items are blank, the icon tooltop displays as \\"Web Link\\".
  \\"\\"\\"
  title: String

  \\"\\"\\"The URL of an icon that displays at 16x16 pixel in Jira.\\"\\"\\"
  url16x16: String
}

\\"\\"\\"
An icon. If no icon is defined:

 *  for a status icon, no status icon displays in Jira.
 *  for the remote object icon, the default link icon displays in Jira.
\\"\\"\\"
type Icon2 {
  additionalProperties: JSON

  \\"\\"\\"
  The URL of the tooltip, used only for a status icon. If not set, the status icon in Jira is not clickable.
  \\"\\"\\"
  link: String

  \\"\\"\\"
  The title of the icon. This is used as follows:
  
   *  For a status icon it is used as a tooltip on the icon. If not set, the status icon doesn't display a tooltip in Jira.
   *  For the remote object icon it is used in conjunction with the application name to display a tooltip for the link's icon. The tooltip takes the format \\"\\\\[application name\\\\] icon title\\". Blank itemsare excluded from the tooltip title. If both items are blank, the icon tooltop displays as \\"Web Link\\".
  \\"\\"\\"
  title: String

  \\"\\"\\"The URL of an icon that displays at 16x16 pixel in Jira.\\"\\"\\"
  url16x16: String
}

input IdBean_Input {
  \\"\\"\\"
  The ID of the permission scheme to associate with the project. Use the [Get all permission schemes](#api-rest-api-3-permissionscheme-get) resource to get a list of permission scheme IDs.
  \\"\\"\\"
  id: BigInt!
}

\\"\\"\\"
The issue that is available under the \`issue\` variable when evaluating the expression.
\\"\\"\\"
input IdOrKeyBean_Input {
  \\"\\"\\"The ID of the referenced item.\\"\\"\\"
  id: BigInt

  \\"\\"\\"The key of the referenced item.\\"\\"\\"
  key: String
}

\\"\\"\\"
The project that is available under the \`project\` variable when evaluating the expression.
\\"\\"\\"
input IdOrKeyBean_Input2 {
  \\"\\"\\"The ID of the referenced item.\\"\\"\\"
  id: BigInt

  \\"\\"\\"The key of the referenced item.\\"\\"\\"
  key: String
}

type IncludedFields {
  actuallyIncluded: [String]
  excluded: [String]
  included: [String]
}

\\"\\"\\"Details about an issue.\\"\\"\\"
type IssueBean {
  changelog: PageOfChangelogs
  editmeta: IssueUpdateMetadata

  \\"\\"\\"Expand options that include additional issue details in the response.\\"\\"\\"
  expand: String
  fields: query_getAllIssueFieldOptions_values_items_additionalProperties
  fieldsToInclude: IncludedFields

  \\"\\"\\"The ID of the issue.\\"\\"\\"
  id: String

  \\"\\"\\"The key of the issue.\\"\\"\\"
  key: String
  names: query_getIssue_names
  operations: Operations
  properties: query_getAttachment_additionalProperties
  renderedFields: query_getAttachment_additionalProperties
  schema: JsonTypeBean2

  \\"\\"\\"The URL of the issue details.\\"\\"\\"
  self: URL

  \\"\\"\\"The transitions that can be performed on the issue.\\"\\"\\"
  transitions: [IssueTransition]
  versionedRepresentations: query_getAttachment_additionalProperties
}

\\"\\"\\"A list of changelog IDs.\\"\\"\\"
input IssueChangelogIds_Input {
  \\"\\"\\"The list of changelog IDs.\\"\\"\\"
  changelogIds: [BigInt]!
}

input IssueCommentListRequestBean_Input {
  \\"\\"\\"The list of comment IDs. A maximum of 1000 IDs can be specified.\\"\\"\\"
  ids: [BigInt]!
}

\\"\\"\\"The wrapper for the issue creation metadata for a list of projects.\\"\\"\\"
type IssueCreateMetadata {
  \\"\\"\\"
  Expand options that include additional project details in the response.
  \\"\\"\\"
  expand: String

  \\"\\"\\"List of projects and their issue creation metadata.\\"\\"\\"
  projects: [ProjectIssueCreateMetadata]
}

\\"\\"\\"
An issue ID with entity property values. See [Entity properties](https://developer.atlassian.com/cloud/jira/platform/jira-entity-properties/) for more information.
\\"\\"\\"
input IssueEntityPropertiesForMultiUpdate_Input {
  \\"\\"\\"The ID of the issue.\\"\\"\\"
  issueID: BigInt
  properties: JsonNode_Input
}

\\"\\"\\"
Lists of issues and entity properties. See [Entity properties](https://developer.atlassian.com/cloud/jira/platform/jira-entity-properties/) for more information.
\\"\\"\\"
input IssueEntityProperties_Input {
  \\"\\"\\"A list of entity property IDs.\\"\\"\\"
  entitiesIds: [BigInt]
  properties: JsonNode_Input
}

\\"\\"\\"Details about an issue event.\\"\\"\\"
type IssueEvent {
  \\"\\"\\"The ID of the event.\\"\\"\\"
  id: BigInt

  \\"\\"\\"The name of the event.\\"\\"\\"
  name: String
}

\\"\\"\\"Details of the options for a select list issue field.\\"\\"\\"
type IssueFieldOption {
  config: IssueFieldOptionConfiguration

  \\"\\"\\"
  The unique identifier for the option. This is only unique within the select field's set of options.
  \\"\\"\\"
  id: BigInt!
  properties: query_getAllIssueFieldOptions_values_items_additionalProperties

  \\"\\"\\"The option's name, which is displayed in Jira.\\"\\"\\"
  value: String!
}

\\"\\"\\"Details of the projects the option is available in.\\"\\"\\"
type IssueFieldOptionConfiguration {
  \\"\\"\\"DEPRECATED\\"\\"\\"
  attributes: [query_getAllIssueFieldOptions_values_items_config_scope_allOf_0_projects2_items_attributes_items]
  scope: IssueFieldOptionScopeBean
}

\\"\\"\\"Details of the projects the option is available in.\\"\\"\\"
input IssueFieldOptionConfiguration_Input {
  \\"\\"\\"DEPRECATED\\"\\"\\"
  attributes: [query_getAllIssueFieldOptions_values_items_config_scope_allOf_0_projects2_items_attributes_items]
  scope: IssueFieldOptionScopeBean_Input
}

scalar IssueFieldOptionCreateBean_Input

\\"\\"\\"
Defines the projects that the option is available in. If the scope is not defined, then the option is available in all projects.
\\"\\"\\"
type IssueFieldOptionScopeBean {
  global: GlobalScopeBean

  \\"\\"\\"DEPRECATED\\"\\"\\"
  projects: [BigInt]

  \\"\\"\\"
  Defines the projects in which the option is available and the behavior of the option within each project. Specify one object per project. The behavior of the option in a project context overrides the behavior in the global context.
  \\"\\"\\"
  projects2: [ProjectScopeBean]
}

\\"\\"\\"
Defines the projects that the option is available in. If the scope is not defined, then the option is available in all projects.
\\"\\"\\"
input IssueFieldOptionScopeBean_Input {
  global: GlobalScopeBean_Input

  \\"\\"\\"DEPRECATED\\"\\"\\"
  projects: [BigInt]

  \\"\\"\\"
  Defines the projects in which the option is available and the behavior of the option within each project. Specify one object per project. The behavior of the option in a project context overrides the behavior in the global context.
  \\"\\"\\"
  projects2: [ProjectScopeBean_Input]
}

\\"\\"\\"Details of the options for a select list issue field.\\"\\"\\"
input IssueFieldOption_Input {
  config: IssueFieldOptionConfiguration_Input

  \\"\\"\\"
  The unique identifier for the option. This is only unique within the select field's set of options.
  \\"\\"\\"
  id: BigInt!
  properties: query_getAllIssueFieldOptions_values_items_additionalProperties_Input

  \\"\\"\\"The option's name, which is displayed in Jira.\\"\\"\\"
  value: String!
}

\\"\\"\\"Bulk operation filter details.\\"\\"\\"
input IssueFilterForBulkPropertyDelete_Input {
  currentValue: mutationInput_bulkSetIssueProperty_filter_allOf_0_currentValue_Input

  \\"\\"\\"List of issues to perform the bulk delete operation on.\\"\\"\\"
  entityIds: [BigInt]
}

\\"\\"\\"Bulk operation filter details.\\"\\"\\"
input IssueFilterForBulkPropertySet_Input {
  currentValue: mutationInput_bulkSetIssueProperty_filter_allOf_0_currentValue_Input

  \\"\\"\\"List of issues to perform the bulk operation on.\\"\\"\\"
  entityIds: [BigInt]

  \\"\\"\\"
  Whether the bulk operation occurs only when the property is present on or absent from an issue.
  \\"\\"\\"
  hasProperty: Boolean
}

\\"\\"\\"Details of a link between issues.\\"\\"\\"
type IssueLink {
  \\"\\"\\"The ID of the issue link.\\"\\"\\"
  id: String
  inwardIssue: LinkedIssue!
  outwardIssue: LinkedIssue2!

  \\"\\"\\"The URL of the issue link.\\"\\"\\"
  self: URL
  type: IssueLinkType!
}

\\"\\"\\"
This object is used as follows:

 *  In the [ issueLink](#api-rest-api-3-issueLink-post) resource it defines and reports on the type of link between the issues. Find a list of issue link types with [Get issue link types](#api-rest-api-3-issueLinkType-get).
 *  In the [ issueLinkType](#api-rest-api-3-issueLinkType-post) resource it defines and reports on issue link types.
\\"\\"\\"
type IssueLinkType {
  \\"\\"\\"
  The ID of the issue link type and is used as follows:
  
   *  In the [ issueLink](#api-rest-api-3-issueLink-post) resource it is the type of issue link. Required on create when \`name\` isn't provided. Otherwise, read only.
   *  In the [ issueLinkType](#api-rest-api-3-issueLinkType-post) resource it is read only.
  \\"\\"\\"
  id: String

  \\"\\"\\"
  The description of the issue link type inward link and is used as follows:
  
   *  In the [ issueLink](#api-rest-api-3-issueLink-post) resource it is read only.
   *  In the [ issueLinkType](#api-rest-api-3-issueLinkType-post) resource it is required on create and optional on update. Otherwise, read only.
  \\"\\"\\"
  inward: String

  \\"\\"\\"
  The name of the issue link type and is used as follows:
  
   *  In the [ issueLink](#api-rest-api-3-issueLink-post) resource it is the type of issue link. Required on create when \`id\` isn't provided. Otherwise, read only.
   *  In the [ issueLinkType](#api-rest-api-3-issueLinkType-post) resource it is required on create and optional on update. Otherwise, read only.
  \\"\\"\\"
  name: String

  \\"\\"\\"
  The description of the issue link type outward link and is used as follows:
  
   *  In the [ issueLink](#api-rest-api-3-issueLink-post) resource it is read only.
   *  In the [ issueLinkType](#api-rest-api-3-issueLinkType-post) resource it is required on create and optional on update. Otherwise, read only.
  \\"\\"\\"
  outward: String

  \\"\\"\\"The URL of the issue link type. Read only.\\"\\"\\"
  self: URL
}

\\"\\"\\"
This object is used as follows:

 *  In the [ issueLink](#api-rest-api-3-issueLink-post) resource it defines and reports on the type of link between the issues. Find a list of issue link types with [Get issue link types](#api-rest-api-3-issueLinkType-get).
 *  In the [ issueLinkType](#api-rest-api-3-issueLinkType-post) resource it defines and reports on issue link types.
\\"\\"\\"
type IssueLinkType2 {
  \\"\\"\\"
  The ID of the issue link type and is used as follows:
  
   *  In the [ issueLink](#api-rest-api-3-issueLink-post) resource it is the type of issue link. Required on create when \`name\` isn't provided. Otherwise, read only.
   *  In the [ issueLinkType](#api-rest-api-3-issueLinkType-post) resource it is read only.
  \\"\\"\\"
  id: String

  \\"\\"\\"
  The description of the issue link type inward link and is used as follows:
  
   *  In the [ issueLink](#api-rest-api-3-issueLink-post) resource it is read only.
   *  In the [ issueLinkType](#api-rest-api-3-issueLinkType-post) resource it is required on create and optional on update. Otherwise, read only.
  \\"\\"\\"
  inward: String

  \\"\\"\\"
  The name of the issue link type and is used as follows:
  
   *  In the [ issueLink](#api-rest-api-3-issueLink-post) resource it is the type of issue link. Required on create when \`id\` isn't provided. Otherwise, read only.
   *  In the [ issueLinkType](#api-rest-api-3-issueLinkType-post) resource it is required on create and optional on update. Otherwise, read only.
  \\"\\"\\"
  name: String

  \\"\\"\\"
  The description of the issue link type outward link and is used as follows:
  
   *  In the [ issueLink](#api-rest-api-3-issueLink-post) resource it is read only.
   *  In the [ issueLinkType](#api-rest-api-3-issueLinkType-post) resource it is required on create and optional on update. Otherwise, read only.
  \\"\\"\\"
  outward: String

  \\"\\"\\"The URL of the issue link type. Read only.\\"\\"\\"
  self: URL
}

\\"\\"\\"
This object is used as follows:

 *  In the [ issueLink](#api-rest-api-3-issueLink-post) resource it defines and reports on the type of link between the issues. Find a list of issue link types with [Get issue link types](#api-rest-api-3-issueLinkType-get).
 *  In the [ issueLinkType](#api-rest-api-3-issueLinkType-post) resource it defines and reports on issue link types.
\\"\\"\\"
input IssueLinkType_Input2 {
  \\"\\"\\"
  The ID of the issue link type and is used as follows:
  
   *  In the [ issueLink](#api-rest-api-3-issueLink-post) resource it is the type of issue link. Required on create when \`name\` isn't provided. Otherwise, read only.
   *  In the [ issueLinkType](#api-rest-api-3-issueLinkType-post) resource it is read only.
  \\"\\"\\"
  id: String

  \\"\\"\\"
  The description of the issue link type inward link and is used as follows:
  
   *  In the [ issueLink](#api-rest-api-3-issueLink-post) resource it is read only.
   *  In the [ issueLinkType](#api-rest-api-3-issueLinkType-post) resource it is required on create and optional on update. Otherwise, read only.
  \\"\\"\\"
  inward: String

  \\"\\"\\"
  The name of the issue link type and is used as follows:
  
   *  In the [ issueLink](#api-rest-api-3-issueLink-post) resource it is the type of issue link. Required on create when \`id\` isn't provided. Otherwise, read only.
   *  In the [ issueLinkType](#api-rest-api-3-issueLinkType-post) resource it is required on create and optional on update. Otherwise, read only.
  \\"\\"\\"
  name: String

  \\"\\"\\"
  The description of the issue link type outward link and is used as follows:
  
   *  In the [ issueLink](#api-rest-api-3-issueLink-post) resource it is read only.
   *  In the [ issueLinkType](#api-rest-api-3-issueLinkType-post) resource it is required on create and optional on update. Otherwise, read only.
  \\"\\"\\"
  outward: String

  \\"\\"\\"The URL of the issue link type. Read only.\\"\\"\\"
  self: URL
}

\\"\\"\\"A list of issue link type beans.\\"\\"\\"
type IssueLinkTypes {
  \\"\\"\\"The issue link type bean.\\"\\"\\"
  issueLinkTypes: [IssueLinkType2]
}

\\"\\"\\"A list of issue IDs.\\"\\"\\"
input IssueList_Input {
  \\"\\"\\"The list of issue IDs.\\"\\"\\"
  issueIds: [String]!
}

\\"\\"\\"
A list of matched issues or errors for each JQL query, in the order the JQL queries were passed.
\\"\\"\\"
type IssueMatches {
  matches: [IssueMatchesForJQL]!
}

\\"\\"\\"
A list of the issues matched to a JQL query or details of errors encountered during matching.
\\"\\"\\"
type IssueMatchesForJQL {
  \\"\\"\\"A list of errors.\\"\\"\\"
  errors: [String]!

  \\"\\"\\"A list of issue IDs.\\"\\"\\"
  matchedIssues: [BigInt]!
}

\\"\\"\\"A list of issues suggested for use in auto-completion.\\"\\"\\"
type IssuePickerSuggestions {
  \\"\\"\\"
  A list of issues for an issue type suggested for use in auto-completion.
  \\"\\"\\"
  sections: [IssuePickerSuggestionsIssueType]
}

\\"\\"\\"A type of issue suggested for use in auto-completion.\\"\\"\\"
type IssuePickerSuggestionsIssueType {
  \\"\\"\\"The ID of the type of issues suggested for use in auto-completion.\\"\\"\\"
  id: String

  \\"\\"\\"A list of issues suggested for use in auto-completion.\\"\\"\\"
  issues: [SuggestedIssue]

  \\"\\"\\"The label of the type of issues suggested for use in auto-completion.\\"\\"\\"
  label: String

  \\"\\"\\"
  If no issue suggestions are found, returns a message indicating no suggestions were found,
  \\"\\"\\"
  msg: String

  \\"\\"\\"
  If issue suggestions are found, returns a message indicating the number of issues suggestions found and returned.
  \\"\\"\\"
  sub: String
}

\\"\\"\\"Issue security level member.\\"\\"\\"
type IssueSecurityLevelMember {
  holder: PermissionHolder!

  \\"\\"\\"The ID of the issue security level member.\\"\\"\\"
  id: BigInt!

  \\"\\"\\"The ID of the issue security level.\\"\\"\\"
  issueSecurityLevelId: BigInt!
}

\\"\\"\\"Details of an issue transition.\\"\\"\\"
type IssueTransition {
  additionalProperties: JSON

  \\"\\"\\"
  Expand options that include additional transition details in the response.
  \\"\\"\\"
  expand: String
  fields: FieldMetadata

  \\"\\"\\"Whether there is a screen associated with the issue transition.\\"\\"\\"
  hasScreen: Boolean

  \\"\\"\\"
  The ID of the issue transition. Required when specifying a transition to undertake.
  \\"\\"\\"
  id: String

  \\"\\"\\"Whether the transition is available to be performed.\\"\\"\\"
  isAvailable: Boolean

  \\"\\"\\"
  Whether the issue has to meet criteria before the issue transition is applied.
  \\"\\"\\"
  isConditional: Boolean

  \\"\\"\\"
  Whether the issue transition is global, that is, the transition is applied to issues regardless of their status.
  \\"\\"\\"
  isGlobal: Boolean

  \\"\\"\\"Whether this is the initial issue transition for the workflow.\\"\\"\\"
  isInitial: Boolean
  looped: Boolean

  \\"\\"\\"The name of the issue transition.\\"\\"\\"
  name: String
  to: StatusDetails
}

input IssueTypeCreateBean_Input {
  \\"\\"\\"The description of the issue type.\\"\\"\\"
  description: String

  \\"\\"\\"
  The hierarchy level of the issue type. Use:
  
   *  \`-1\` for Subtask.
   *  \`0\` for Base.
  
  Defaults to \`0\`.
  \\"\\"\\"
  hierarchyLevel: Int

  \\"\\"\\"
  The unique name for the issue type. The maximum length is 60 characters.
  \\"\\"\\"
  name: String!
  type: mutationInput_createIssueType_type
}

\\"\\"\\"Details about an issue type.\\"\\"\\"
type IssueTypeDetails {
  \\"\\"\\"The ID of the issue type's avatar.\\"\\"\\"
  avatarId: BigInt

  \\"\\"\\"The description of the issue type.\\"\\"\\"
  description: String

  \\"\\"\\"Unique ID for next-gen projects.\\"\\"\\"
  entityId: String

  \\"\\"\\"Hierarchy level of the issue type.\\"\\"\\"
  hierarchyLevel: Int

  \\"\\"\\"The URL of the issue type's avatar.\\"\\"\\"
  iconUrl: String

  \\"\\"\\"The ID of the issue type.\\"\\"\\"
  id: String

  \\"\\"\\"The name of the issue type.\\"\\"\\"
  name: String
  scope: Scope

  \\"\\"\\"The URL of these issue type details.\\"\\"\\"
  self: String

  \\"\\"\\"Whether this issue type is used to create subtasks.\\"\\"\\"
  subtask: Boolean
}

\\"\\"\\"Details about an issue type.\\"\\"\\"
type IssueTypeDetails2 {
  \\"\\"\\"The ID of the issue type's avatar.\\"\\"\\"
  avatarId: BigInt

  \\"\\"\\"The description of the issue type.\\"\\"\\"
  description: String

  \\"\\"\\"Unique ID for next-gen projects.\\"\\"\\"
  entityId: String

  \\"\\"\\"Hierarchy level of the issue type.\\"\\"\\"
  hierarchyLevel: Int

  \\"\\"\\"The URL of the issue type's avatar.\\"\\"\\"
  iconUrl: String

  \\"\\"\\"The ID of the issue type.\\"\\"\\"
  id: String

  \\"\\"\\"The name of the issue type.\\"\\"\\"
  name: String
  scope: Scope

  \\"\\"\\"The URL of these issue type details.\\"\\"\\"
  self: String

  \\"\\"\\"Whether this issue type is used to create subtasks.\\"\\"\\"
  subtask: Boolean
}

\\"\\"\\"Details about an issue type.\\"\\"\\"
input IssueTypeDetails_Input {
  \\"\\"\\"The ID of the issue type's avatar.\\"\\"\\"
  avatarId: BigInt

  \\"\\"\\"The description of the issue type.\\"\\"\\"
  description: String

  \\"\\"\\"Unique ID for next-gen projects.\\"\\"\\"
  entityId: String

  \\"\\"\\"Hierarchy level of the issue type.\\"\\"\\"
  hierarchyLevel: Int

  \\"\\"\\"The URL of the issue type's avatar.\\"\\"\\"
  iconUrl: String

  \\"\\"\\"The ID of the issue type.\\"\\"\\"
  id: String

  \\"\\"\\"The name of the issue type.\\"\\"\\"
  name: String
  scope: Scope_Input

  \\"\\"\\"The URL of these issue type details.\\"\\"\\"
  self: String

  \\"\\"\\"Whether this issue type is used to create subtasks.\\"\\"\\"
  subtask: Boolean
}

\\"\\"\\"Details about an issue type.\\"\\"\\"
input IssueTypeDetails_Input2 {
  \\"\\"\\"The ID of the issue type's avatar.\\"\\"\\"
  avatarId: BigInt

  \\"\\"\\"The description of the issue type.\\"\\"\\"
  description: String

  \\"\\"\\"Unique ID for next-gen projects.\\"\\"\\"
  entityId: String

  \\"\\"\\"Hierarchy level of the issue type.\\"\\"\\"
  hierarchyLevel: Int

  \\"\\"\\"The URL of the issue type's avatar.\\"\\"\\"
  iconUrl: String

  \\"\\"\\"The ID of the issue type.\\"\\"\\"
  id: String

  \\"\\"\\"The name of the issue type.\\"\\"\\"
  name: String
  scope: Scope_Input

  \\"\\"\\"The URL of these issue type details.\\"\\"\\"
  self: String

  \\"\\"\\"Whether this issue type is used to create subtasks.\\"\\"\\"
  subtask: Boolean
}

\\"\\"\\"
The list of issue type IDs to be removed from the field configuration scheme.
\\"\\"\\"
input IssueTypeIdsToRemove_Input {
  \\"\\"\\"
  The list of issue type IDs. Must contain unique values not longer than 255 characters and not be empty. Maximum of 100 IDs.
  \\"\\"\\"
  issueTypeIds: [String]!
}

\\"\\"\\"The list of issue type IDs.\\"\\"\\"
input IssueTypeIds_Input {
  \\"\\"\\"The list of issue type IDs.\\"\\"\\"
  issueTypeIds: [String]!
}

\\"\\"\\"Details of an issue type.\\"\\"\\"
type IssueTypeInfo {
  \\"\\"\\"The avatar of the issue type.\\"\\"\\"
  avatarId: BigInt

  \\"\\"\\"The ID of the issue type.\\"\\"\\"
  id: BigInt

  \\"\\"\\"The name of the issue type.\\"\\"\\"
  name: String
}

\\"\\"\\"Details of the issue creation metadata for an issue type.\\"\\"\\"
type IssueTypeIssueCreateMetadata {
  \\"\\"\\"The ID of the issue type's avatar.\\"\\"\\"
  avatarId: BigInt

  \\"\\"\\"The description of the issue type.\\"\\"\\"
  description: String

  \\"\\"\\"Unique ID for next-gen projects.\\"\\"\\"
  entityId: String

  \\"\\"\\"
  Expand options that include additional issue type metadata details in the response.
  \\"\\"\\"
  expand: String
  fields: FieldMetadata

  \\"\\"\\"Hierarchy level of the issue type.\\"\\"\\"
  hierarchyLevel: Int

  \\"\\"\\"The URL of the issue type's avatar.\\"\\"\\"
  iconUrl: String

  \\"\\"\\"The ID of the issue type.\\"\\"\\"
  id: String

  \\"\\"\\"The name of the issue type.\\"\\"\\"
  name: String
  scope: Scope

  \\"\\"\\"The URL of these issue type details.\\"\\"\\"
  self: String

  \\"\\"\\"Whether this issue type is used to create subtasks.\\"\\"\\"
  subtask: Boolean
}

\\"\\"\\"Details of an issue type scheme.\\"\\"\\"
type IssueTypeScheme {
  \\"\\"\\"The ID of the default issue type of the issue type scheme.\\"\\"\\"
  defaultIssueTypeId: String

  \\"\\"\\"The description of the issue type scheme.\\"\\"\\"
  description: String

  \\"\\"\\"The ID of the issue type scheme.\\"\\"\\"
  id: String!

  \\"\\"\\"Whether the issue type scheme is the default.\\"\\"\\"
  isDefault: Boolean

  \\"\\"\\"The name of the issue type scheme.\\"\\"\\"
  name: String!
}

\\"\\"\\"Details of an issue type scheme.\\"\\"\\"
type IssueTypeScheme2 {
  \\"\\"\\"The ID of the default issue type of the issue type scheme.\\"\\"\\"
  defaultIssueTypeId: String

  \\"\\"\\"The description of the issue type scheme.\\"\\"\\"
  description: String

  \\"\\"\\"The ID of the issue type scheme.\\"\\"\\"
  id: String!

  \\"\\"\\"Whether the issue type scheme is the default.\\"\\"\\"
  isDefault: Boolean

  \\"\\"\\"The name of the issue type scheme.\\"\\"\\"
  name: String!
}

\\"\\"\\"Details of an issue type scheme and its associated issue types.\\"\\"\\"
input IssueTypeSchemeDetails_Input {
  \\"\\"\\"
  The ID of the default issue type of the issue type scheme. This ID must be included in \`issueTypeIds\`.
  \\"\\"\\"
  defaultIssueTypeId: String

  \\"\\"\\"
  The description of the issue type scheme. The maximum length is 4000 characters.
  \\"\\"\\"
  description: String

  \\"\\"\\"
  The list of issue types IDs of the issue type scheme. At least one standard issue type ID is required.
  \\"\\"\\"
  issueTypeIds: [String]!

  \\"\\"\\"
  The name of the issue type scheme. The name must be unique. The maximum length is 255 characters.
  \\"\\"\\"
  name: String!
}

\\"\\"\\"The ID of an issue type scheme.\\"\\"\\"
type IssueTypeSchemeID {
  \\"\\"\\"The ID of the issue type scheme.\\"\\"\\"
  issueTypeSchemeId: String!
}

\\"\\"\\"Issue type scheme item.\\"\\"\\"
type IssueTypeSchemeMapping {
  \\"\\"\\"The ID of the issue type.\\"\\"\\"
  issueTypeId: String!

  \\"\\"\\"The ID of the issue type scheme.\\"\\"\\"
  issueTypeSchemeId: String!
}

\\"\\"\\"Details of the association between an issue type scheme and project.\\"\\"\\"
input IssueTypeSchemeProjectAssociation_Input {
  \\"\\"\\"The ID of the issue type scheme.\\"\\"\\"
  issueTypeSchemeId: String!

  \\"\\"\\"The ID of the project.\\"\\"\\"
  projectId: String!
}

\\"\\"\\"Issue type scheme with a list of the projects that use it.\\"\\"\\"
type IssueTypeSchemeProjects {
  issueTypeScheme: IssueTypeScheme2!

  \\"\\"\\"The IDs of the projects using the issue type scheme.\\"\\"\\"
  projectIds: [String]!
}

\\"\\"\\"
Details of the name, description, and default issue type for an issue type scheme.
\\"\\"\\"
input IssueTypeSchemeUpdateDetails_Input {
  \\"\\"\\"The ID of the default issue type of the issue type scheme.\\"\\"\\"
  defaultIssueTypeId: String

  \\"\\"\\"
  The description of the issue type scheme. The maximum length is 4000 characters.
  \\"\\"\\"
  description: String

  \\"\\"\\"
  The name of the issue type scheme. The name must be unique. The maximum length is 255 characters.
  \\"\\"\\"
  name: String
}

\\"\\"\\"Details of an issue type screen scheme.\\"\\"\\"
type IssueTypeScreenScheme {
  \\"\\"\\"The description of the issue type screen scheme.\\"\\"\\"
  description: String

  \\"\\"\\"The ID of the issue type screen scheme.\\"\\"\\"
  id: String!

  \\"\\"\\"The name of the issue type screen scheme.\\"\\"\\"
  name: String!
}

\\"\\"\\"Details of an issue type screen scheme.\\"\\"\\"
type IssueTypeScreenScheme2 {
  \\"\\"\\"The description of the issue type screen scheme.\\"\\"\\"
  description: String

  \\"\\"\\"The ID of the issue type screen scheme.\\"\\"\\"
  id: String!

  \\"\\"\\"The name of the issue type screen scheme.\\"\\"\\"
  name: String!
}

\\"\\"\\"The details of an issue type screen scheme.\\"\\"\\"
input IssueTypeScreenSchemeDetails_Input {
  \\"\\"\\"
  The description of the issue type screen scheme. The maximum length is 255 characters.
  \\"\\"\\"
  description: String

  \\"\\"\\"
  The IDs of the screen schemes for the issue type IDs and *default*. A *default* entry is required to create an issue type screen scheme, it defines the mapping for all issue types without a screen scheme.
  \\"\\"\\"
  issueTypeMappings: [IssueTypeScreenSchemeMapping_Input]!

  \\"\\"\\"
  The name of the issue type screen scheme. The name must be unique. The maximum length is 255 characters.
  \\"\\"\\"
  name: String!
}

\\"\\"\\"The ID of an issue type screen scheme.\\"\\"\\"
type IssueTypeScreenSchemeId {
  \\"\\"\\"The ID of the issue type screen scheme.\\"\\"\\"
  id: String!
}

\\"\\"\\"The screen scheme for an issue type.\\"\\"\\"
type IssueTypeScreenSchemeItem {
  \\"\\"\\"
  The ID of the issue type or *default*. Only issue types used in classic projects are accepted. When creating an issue screen scheme, an entry for *default* must be provided and defines the mapping for all issue types without a screen scheme. Otherwise, a *default* entry can't be provided.
  \\"\\"\\"
  issueTypeId: String!

  \\"\\"\\"The ID of the issue type screen scheme.\\"\\"\\"
  issueTypeScreenSchemeId: String!

  \\"\\"\\"The ID of the screen scheme.\\"\\"\\"
  screenSchemeId: String!
}

\\"\\"\\"A list of issue type screen scheme mappings.\\"\\"\\"
input IssueTypeScreenSchemeMappingDetails_Input {
  \\"\\"\\"
  The list of issue type to screen scheme mappings. A *default* entry cannot be specified because a default entry is added when an issue type screen scheme is created.
  \\"\\"\\"
  issueTypeMappings: [IssueTypeScreenSchemeMapping_Input]!
}

\\"\\"\\"The IDs of the screen schemes for the issue type IDs.\\"\\"\\"
input IssueTypeScreenSchemeMapping_Input {
  \\"\\"\\"
  The ID of the issue type or *default*. Only issue types used in classic projects are accepted. An entry for *default* must be provided and defines the mapping for all issue types without a screen scheme.
  \\"\\"\\"
  issueTypeId: String!

  \\"\\"\\"
  The ID of the screen scheme. Only screen schemes used in classic projects are accepted.
  \\"\\"\\"
  screenSchemeId: String!
}

\\"\\"\\"Associated issue type screen scheme and project.\\"\\"\\"
input IssueTypeScreenSchemeProjectAssociation_Input {
  \\"\\"\\"The ID of the issue type screen scheme.\\"\\"\\"
  issueTypeScreenSchemeId: String

  \\"\\"\\"The ID of the project.\\"\\"\\"
  projectId: String
}

\\"\\"\\"Details of an issue type screen scheme.\\"\\"\\"
input IssueTypeScreenSchemeUpdateDetails_Input {
  \\"\\"\\"
  The description of the issue type screen scheme. The maximum length is 255 characters.
  \\"\\"\\"
  description: String

  \\"\\"\\"
  The name of the issue type screen scheme. The name must be unique. The maximum length is 255 characters.
  \\"\\"\\"
  name: String
}

\\"\\"\\"Issue type screen scheme with a list of the projects that use it.\\"\\"\\"
type IssueTypeScreenSchemesProjects {
  issueTypeScreenScheme: IssueTypeScreenScheme2!

  \\"\\"\\"The IDs of the projects using the issue type screen scheme.\\"\\"\\"
  projectIds: [String]!
}

\\"\\"\\"Mapping of an issue type to a context.\\"\\"\\"
type IssueTypeToContextMapping {
  \\"\\"\\"The ID of the context.\\"\\"\\"
  contextId: String!

  \\"\\"\\"Whether the context is mapped to any issue type.\\"\\"\\"
  isAnyIssueType: Boolean

  \\"\\"\\"The ID of the issue type.\\"\\"\\"
  issueTypeId: String
}

input IssueTypeUpdateBean_Input {
  \\"\\"\\"The ID of an issue type avatar.\\"\\"\\"
  avatarId: BigInt

  \\"\\"\\"The description of the issue type.\\"\\"\\"
  description: String

  \\"\\"\\"
  The unique name for the issue type. The maximum length is 60 characters.
  \\"\\"\\"
  name: String
}

\\"\\"\\"Status details for an issue type.\\"\\"\\"
type IssueTypeWithStatus {
  \\"\\"\\"The ID of the issue type.\\"\\"\\"
  id: String!

  \\"\\"\\"The name of the issue type.\\"\\"\\"
  name: String!

  \\"\\"\\"The URL of the issue type's status details.\\"\\"\\"
  self: String!

  \\"\\"\\"List of status details for the issue type.\\"\\"\\"
  statuses: [StatusDetails3]!

  \\"\\"\\"Whether this issue type represents subtasks.\\"\\"\\"
  subtask: Boolean!
}

\\"\\"\\"Details about the mapping between an issue type and a workflow.\\"\\"\\"
type IssueTypeWorkflowMapping {
  \\"\\"\\"
  The ID of the issue type. Not required if updating the issue type-workflow mapping.
  \\"\\"\\"
  issueType: String

  \\"\\"\\"
  Set to true to create or update the draft of a workflow scheme and update the mapping in the draft, when the workflow scheme cannot be edited. Defaults to \`false\`. Only applicable when updating the workflow-issue types mapping.
  \\"\\"\\"
  updateDraftIfNeeded: Boolean

  \\"\\"\\"The name of the workflow.\\"\\"\\"
  workflow: String
}

\\"\\"\\"Details about the mapping between an issue type and a workflow.\\"\\"\\"
input IssueTypeWorkflowMapping_Input {
  \\"\\"\\"
  The ID of the issue type. Not required if updating the issue type-workflow mapping.
  \\"\\"\\"
  issueType: String

  \\"\\"\\"
  Set to true to create or update the draft of a workflow scheme and update the mapping in the draft, when the workflow scheme cannot be edited. Defaults to \`false\`. Only applicable when updating the workflow-issue types mapping.
  \\"\\"\\"
  updateDraftIfNeeded: Boolean

  \\"\\"\\"The name of the workflow.\\"\\"\\"
  workflow: String
}

\\"\\"\\"Details about the mapping between issue types and a workflow.\\"\\"\\"
type IssueTypesWorkflowMapping {
  \\"\\"\\"Whether the workflow is the default workflow for the workflow scheme.\\"\\"\\"
  defaultMapping: Boolean

  \\"\\"\\"The list of issue type IDs.\\"\\"\\"
  issueTypes: [String]

  \\"\\"\\"
  Whether a draft workflow scheme is created or updated when updating an active workflow scheme. The draft is updated with the new workflow-issue types mapping. Defaults to \`false\`.
  \\"\\"\\"
  updateDraftIfNeeded: Boolean

  \\"\\"\\"
  The name of the workflow. Optional if updating the workflow-issue types mapping.
  \\"\\"\\"
  workflow: String
}

\\"\\"\\"Details about the mapping between issue types and a workflow.\\"\\"\\"
input IssueTypesWorkflowMapping_Input {
  \\"\\"\\"Whether the workflow is the default workflow for the workflow scheme.\\"\\"\\"
  defaultMapping: Boolean

  \\"\\"\\"The list of issue type IDs.\\"\\"\\"
  issueTypes: [String]

  \\"\\"\\"
  Whether a draft workflow scheme is created or updated when updating an active workflow scheme. The draft is updated with the new workflow-issue types mapping. Defaults to \`false\`.
  \\"\\"\\"
  updateDraftIfNeeded: Boolean

  \\"\\"\\"
  The name of the workflow. Optional if updating the workflow-issue types mapping.
  \\"\\"\\"
  workflow: String
}

\\"\\"\\"Details of an issue update request.\\"\\"\\"
scalar IssueUpdateDetails_Input

\\"\\"\\"A list of editable field details.\\"\\"\\"
type IssueUpdateMetadata {
  fields: FieldMetadata
}

\\"\\"\\"A list of editable field details.\\"\\"\\"
type IssueUpdateMetadata2 {
  fields: FieldMetadata
}

\\"\\"\\"List of issues and JQL queries.\\"\\"\\"
input IssuesAndJQLQueries_Input {
  \\"\\"\\"A list of issue IDs.\\"\\"\\"
  issueIds: [BigInt]!

  \\"\\"\\"A list of JQL queries.\\"\\"\\"
  jqls: [String]!
}

\\"\\"\\"
The description of the page of issues loaded by the provided JQL query.
\\"\\"\\"
type IssuesJqlMetaDataBean {
  \\"\\"\\"The number of issues that were loaded in this evaluation.\\"\\"\\"
  count: Int!

  \\"\\"\\"The maximum number of issues that could be loaded in this evaluation.\\"\\"\\"
  maxResults: Int!

  \\"\\"\\"The index of the first issue.\\"\\"\\"
  startAt: BigInt!

  \\"\\"\\"The total number of issues the JQL returned.\\"\\"\\"
  totalCount: BigInt!

  \\"\\"\\"
  Any warnings related to the JQL query. Present only if the validation mode was set to \`warn\`.
  \\"\\"\\"
  validationWarnings: [String]
}

\\"\\"\\"Meta data describing the \`issues\` context variable.\\"\\"\\"
type IssuesMetaBean {
  jql: IssuesJqlMetaDataBean
}

scalar IssuesUpdateBean_Input

\\"\\"\\"The JQL queries to be converted.\\"\\"\\"
input JQLPersonalDataMigrationRequest_Input {
  \\"\\"\\"A list of queries with user identifiers. Maximum of 100 queries.\\"\\"\\"
  queryStrings: [String]
}

\\"\\"\\"JQL queries that contained users that could not be found\\"\\"\\"
type JQLQueryWithUnknownUsers {
  \\"\\"\\"
  The converted query, with accountIDs instead of user identifiers, or 'unknown' for users that could not be found
  \\"\\"\\"
  convertedQuery: String

  \\"\\"\\"The original query, for reference\\"\\"\\"
  originalQuery: String
}

\\"\\"\\"Lists of JQL reference data.\\"\\"\\"
type JQLReferenceData {
  \\"\\"\\"List of JQL query reserved words.\\"\\"\\"
  jqlReservedWords: [String]

  \\"\\"\\"List of fields usable in JQL queries.\\"\\"\\"
  visibleFieldNames: [FieldReferenceData]

  \\"\\"\\"List of functions usable in JQL queries.\\"\\"\\"
  visibleFunctionNames: [FunctionReferenceData]
}

\\"\\"\\"
The \`JSON\` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
\\"\\"\\"
scalar JSON @specifiedBy(url: \\"http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf\\")

\\"\\"\\"
The JQL specifying the issues available in the evaluated Jira expression under the \`issues\` context variable.
\\"\\"\\"
input JexpIssues_Input {
  jql: JexpJqlIssues_Input
}

\\"\\"\\"
The JQL specifying the issues available in the evaluated Jira expression under the \`issues\` context variable. Not all issues returned by the JQL query are loaded, only those described by the \`startAt\` and \`maxResults\` properties. To determine whether it is necessary to iterate to ensure all the issues returned by the JQL query are evaluated, inspect \`meta.issues.jql.count\` in the response.
\\"\\"\\"
input JexpJqlIssues_Input {
  \\"\\"\\"
  The maximum number of issues to return from the JQL query. Inspect \`meta.issues.jql.maxResults\` in the response to ensure the maximum value has not been exceeded.
  \\"\\"\\"
  maxResults: Int

  \\"\\"\\"The JQL query.\\"\\"\\"
  query: String

  \\"\\"\\"The index of the first issue to return from the JQL query.\\"\\"\\"
  startAt: BigInt
  validation: mutationInput_evaluateJiraExpression_context_allOf_0_issues_allOf_0_jql_allOf_0_validation
}

\\"\\"\\"Details about the analysed Jira expression.\\"\\"\\"
type JiraExpressionAnalysis {
  complexity: JiraExpressionComplexity

  \\"\\"\\"A list of validation errors. Not included if the expression is valid.\\"\\"\\"
  errors: [JiraExpressionValidationError]

  \\"\\"\\"The analysed expression.\\"\\"\\"
  expression: String!

  \\"\\"\\"EXPERIMENTAL. The inferred type of the expression.\\"\\"\\"
  type: String

  \\"\\"\\"
  Whether the expression is valid and the interpreter will evaluate it. Note that the expression may fail at runtime (for example, if it executes too many expensive operations).
  \\"\\"\\"
  valid: Boolean!
}

\\"\\"\\"Details about the complexity of the analysed Jira expression.\\"\\"\\"
type JiraExpressionComplexity {
  \\"\\"\\"
  Information that can be used to determine how many [expensive operations](https://developer.atlassian.com/cloud/jira/platform/jira-expressions/#expensive-operations) the evaluation of the expression will perform. This information may be a formula or number. For example:
  
   *  \`issues.map(i => i.comments)\` performs as many expensive operations as there are issues on the issues list. So this parameter returns \`N\`, where \`N\` is the size of issue list.
   *  \`new Issue(10010).comments\` gets comments for one issue, so its complexity is \`2\` (\`1\` to retrieve issue 10010 from the database plus \`1\` to get its comments).
  \\"\\"\\"
  expensiveOperations: String!
  variables: mutation_analyseExpression_oneOf_0_results_items_complexity_variables
}

\\"\\"\\"The context in which the Jira expression is evaluated.\\"\\"\\"
input JiraExpressionEvalContextBean_Input {
  \\"\\"\\"
  The ID of the board that is available under the \`board\` variable when evaluating the expression.
  \\"\\"\\"
  board: BigInt

  \\"\\"\\"
  Custom context variables and their types. These variable types are available for use in a custom context:
  
   *  \`user\`: A [user](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#user) specified as an Atlassian account ID.
   *  \`issue\`: An [issue](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#issue) specified by ID or key. All the fields of the issue object are available in the Jira expression.
   *  \`json\`: A JSON object containing custom content.
   *  \`list\`: A JSON list of \`user\`, \`issue\`, or \`json\` variable types.
  \\"\\"\\"
  custom: [CustomContextVariable_Input]

  \\"\\"\\"
  The ID of the customer request that is available under the \`customerRequest\` variable when evaluating the expression. This is the same as the ID of the underlying Jira issue, but the customer request context variable will have a different type.
  \\"\\"\\"
  customerRequest: BigInt
  issue: IdOrKeyBean_Input
  issues: JexpIssues_Input
  project: IdOrKeyBean_Input2

  \\"\\"\\"
  The ID of the service desk that is available under the \`serviceDesk\` variable when evaluating the expression.
  \\"\\"\\"
  serviceDesk: BigInt

  \\"\\"\\"
  The ID of the sprint that is available under the \`sprint\` variable when evaluating the expression.
  \\"\\"\\"
  sprint: BigInt
}

input JiraExpressionEvalRequestBean_Input {
  context: JiraExpressionEvalContextBean_Input

  \\"\\"\\"The Jira expression to evaluate.\\"\\"\\"
  expression: String!
}

\\"\\"\\"
Contains various characteristics of the performed expression evaluation.
\\"\\"\\"
type JiraExpressionEvaluationMetaDataBean {
  complexity: JiraExpressionsComplexityBean
  issues: IssuesMetaBean
}

\\"\\"\\"Details of Jira expressions for analysis.\\"\\"\\"
input JiraExpressionForAnalysis_Input {
  contextVariables: mutationInput_analyseExpression_contextVariables_Input

  \\"\\"\\"The list of Jira expressions to analyse.\\"\\"\\"
  expressions: [String]!
}

\\"\\"\\"The result of evaluating a Jira expression.\\"\\"\\"
type JiraExpressionResult {
  meta: JiraExpressionEvaluationMetaDataBean
  value: mutation_evaluateJiraExpression_oneOf_0_value!
}

\\"\\"\\"
Details about syntax and type errors. The error details apply to the entire expression, unless the object includes:

 *  \`line\` and \`column\`
 *  \`expression\`
\\"\\"\\"
type JiraExpressionValidationError {
  \\"\\"\\"The text column in which the error occurred.\\"\\"\\"
  column: Int

  \\"\\"\\"The part of the expression in which the error occurred.\\"\\"\\"
  expression: String

  \\"\\"\\"The text line in which the error occurred.\\"\\"\\"
  line: Int

  \\"\\"\\"Details about the error.\\"\\"\\"
  message: String!
  type: mutation_analyseExpression_oneOf_0_results_items_errors_items_type!
}

\\"\\"\\"Details about the analysed Jira expression.\\"\\"\\"
type JiraExpressionsAnalysis {
  \\"\\"\\"The results of Jira expressions analysis.\\"\\"\\"
  results: [JiraExpressionAnalysis]!
}

\\"\\"\\"
Contains information about the expression complexity. For example, the number of steps it took to evaluate the expression.
\\"\\"\\"
type JiraExpressionsComplexityBean {
  beans: JiraExpressionsComplexityValueBean3!
  expensiveOperations: JiraExpressionsComplexityValueBean2!
  primitiveValues: JiraExpressionsComplexityValueBean4!
  steps: JiraExpressionsComplexityValueBean!
}

\\"\\"\\"
The number of steps it took to evaluate the expression, where a step is a high-level operation performed by the expression. A step is an operation such as arithmetic, accessing a property, accessing a context variable, or calling a function.
\\"\\"\\"
type JiraExpressionsComplexityValueBean {
  \\"\\"\\"
  The maximum allowed complexity. The evaluation will fail if this value is exceeded.
  \\"\\"\\"
  limit: Int!

  \\"\\"\\"The complexity value of the current expression.\\"\\"\\"
  value: Int!
}

\\"\\"\\"
The number of expensive operations executed while evaluating the expression. Expensive operations are those that load additional data, such as entity properties, comments, or custom fields.
\\"\\"\\"
type JiraExpressionsComplexityValueBean2 {
  \\"\\"\\"
  The maximum allowed complexity. The evaluation will fail if this value is exceeded.
  \\"\\"\\"
  limit: Int!

  \\"\\"\\"The complexity value of the current expression.\\"\\"\\"
  value: Int!
}

\\"\\"\\"The number of Jira REST API beans returned in the response.\\"\\"\\"
type JiraExpressionsComplexityValueBean3 {
  \\"\\"\\"
  The maximum allowed complexity. The evaluation will fail if this value is exceeded.
  \\"\\"\\"
  limit: Int!

  \\"\\"\\"The complexity value of the current expression.\\"\\"\\"
  value: Int!
}

\\"\\"\\"The number of primitive values returned in the response.\\"\\"\\"
type JiraExpressionsComplexityValueBean4 {
  \\"\\"\\"
  The maximum allowed complexity. The evaluation will fail if this value is exceeded.
  \\"\\"\\"
  limit: Int!

  \\"\\"\\"The complexity value of the current expression.\\"\\"\\"
  value: Int!
}

\\"\\"\\"Details of a status.\\"\\"\\"
type JiraStatus {
  \\"\\"\\"The description of the status.\\"\\"\\"
  description: String

  \\"\\"\\"The ID of the status.\\"\\"\\"
  id: String

  \\"\\"\\"The name of the status.\\"\\"\\"
  name: String
  scope: StatusScope
  statusCategory: query_getStatusesById_items_statusCategory

  \\"\\"\\"
  Projects and issue types where the status is used. Only available if the \`usages\` expand is requested.
  \\"\\"\\"
  usages: [ProjectIssueTypes]
}

\\"\\"\\"A list of JQL queries to parse.\\"\\"\\"
input JqlQueriesToParse_Input {
  \\"\\"\\"A list of queries to parse.\\"\\"\\"
  queries: [mutationInput_parseJqlQueries_queries_items]!
}

\\"\\"\\"The list of JQL queries to sanitize for the given account IDs.\\"\\"\\"
input JqlQueriesToSanitize_Input {
  \\"\\"\\"
  The list of JQL queries to sanitize. Must contain unique values. Maximum of 20 queries.
  \\"\\"\\"
  queries: [JqlQueryToSanitize_Input]!
}

\\"\\"\\"A parsed JQL query.\\"\\"\\"
type JqlQuery {
  orderBy: JqlQueryOrderByClause
  where: JqlQueryClause
}

\\"\\"\\"A JQL query clause.\\"\\"\\"
type JqlQueryClause {
  \\"\\"\\"The list of nested clauses.\\"\\"\\"
  clauses: [JSON]!
  field: JqlQueryField!
  operand: JqlQueryClauseOperand!
  operator: mutation_parseJqlQueries_oneOf_0_queries_items_structure_allOf_0_where_anyOf_3_operator!

  \\"\\"\\"The list of time predicates.\\"\\"\\"
  predicates: [JqlQueryClauseTimePredicate]!
}

\\"\\"\\"Details of an operand in a JQL clause.\\"\\"\\"
type JqlQueryClauseOperand {
  \\"\\"\\"The list of function arguments.\\"\\"\\"
  arguments: [String]!

  \\"\\"\\"The name of the function.\\"\\"\\"
  function: String!
  keyword: mutation_parseJqlQueries_oneOf_0_queries_items_structure_allOf_0_where_anyOf_1_operand_anyOf_0_values_items_anyOf_2_keyword!

  \\"\\"\\"The operand value.\\"\\"\\"
  value: String!

  \\"\\"\\"The list of operand values.\\"\\"\\"
  values: [JqlQueryUnitaryOperand]!
}

\\"\\"\\"A time predicate for a temporal JQL clause.\\"\\"\\"
type JqlQueryClauseTimePredicate {
  operand: JqlQueryClauseOperand!
  operator: mutation_parseJqlQueries_oneOf_0_queries_items_structure_allOf_0_where_anyOf_2_predicates_items_operator!
}

\\"\\"\\"
A field used in a JQL query. See [Advanced searching - fields reference](https://confluence.atlassian.com/x/dAiiLQ) for more information about fields in JQL queries.
\\"\\"\\"
type JqlQueryField {
  \\"\\"\\"The name of the field.\\"\\"\\"
  name: String!

  \\"\\"\\"
  When the field refers to a value in an entity property, details of the entity property value.
  \\"\\"\\"
  property: [JqlQueryFieldEntityProperty]
}

\\"\\"\\"Details of an entity property.\\"\\"\\"
type JqlQueryFieldEntityProperty {
  \\"\\"\\"The object on which the property is set.\\"\\"\\"
  entity: String!

  \\"\\"\\"The key of the property.\\"\\"\\"
  key: String!

  \\"\\"\\"The path in the property value to query.\\"\\"\\"
  path: String!
  type: mutation_parseJqlQueries_oneOf_0_queries_items_structure_allOf_0_where_anyOf_1_field_property_items_type
}

\\"\\"\\"Details of the order-by JQL clause.\\"\\"\\"
type JqlQueryOrderByClause {
  \\"\\"\\"The list of order-by clause fields and their ordering directives.\\"\\"\\"
  fields: [JqlQueryOrderByClauseElement]!
}

\\"\\"\\"An element of the order-by JQL clause.\\"\\"\\"
type JqlQueryOrderByClauseElement {
  direction: mutation_parseJqlQueries_oneOf_0_queries_items_structure_allOf_0_orderBy_fields_items_direction
  field: JqlQueryField!
}

\\"\\"\\"
The JQL query to sanitize for the account ID. If the account ID is null, sanitizing is performed for an anonymous user.
\\"\\"\\"
input JqlQueryToSanitize_Input {
  \\"\\"\\"
  The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.
  \\"\\"\\"
  accountId: mutationInput_sanitiseJqlQueries_queries_items_accountId

  \\"\\"\\"The query to sanitize.\\"\\"\\"
  query: String!
}

\\"\\"\\"An operand that can be part of a list operand.\\"\\"\\"
type JqlQueryUnitaryOperand {
  \\"\\"\\"The list of function arguments.\\"\\"\\"
  arguments: [String]!

  \\"\\"\\"The name of the function.\\"\\"\\"
  function: String!
  keyword: mutation_parseJqlQueries_oneOf_0_queries_items_structure_allOf_0_where_anyOf_1_operand_anyOf_0_values_items_anyOf_2_keyword!

  \\"\\"\\"The operand value.\\"\\"\\"
  value: String!
}

input JsonNode_Input {
  array: Boolean
  bigDecimal: Boolean
  bigInteger: Boolean
  bigIntegerValue: Int
  binary: Boolean
  binaryValue: [String]
  boolean: Boolean
  booleanValue: Boolean
  containerNode: Boolean
  decimalValue: Float
  double: Boolean
  doubleValue: Float
  elements: query_getContextsForField_oneOf_1_errors_Input
  fieldNames: query_getContextsForField_oneOf_1_errors_Input
  fields: query_getContextsForField_oneOf_1_errors_Input
  floatingPointNumber: Boolean
  int: Boolean
  intValue: Int
  integralNumber: Boolean
  long: Boolean
  longValue: BigInt
  missingNode: Boolean
  null: Boolean
  number: Boolean
  numberType: mutationInput_bulkSetIssuesPropertiesList_additionalProperties_numberType
  numberValue: Float
  object: Boolean
  pojo: Boolean
  textValue: String
  textual: Boolean
  valueAsBoolean: Boolean
  valueAsDouble: Float
  valueAsInt: Int
  valueAsLong: BigInt
  valueAsText: String
  valueNode: Boolean
}

\\"\\"\\"The schema of a field.\\"\\"\\"
type JsonTypeBean {
  configuration: query_getAttachment_additionalProperties

  \\"\\"\\"If the field is a custom field, the URI of the field.\\"\\"\\"
  custom: String

  \\"\\"\\"If the field is a custom field, the custom ID of the field.\\"\\"\\"
  customId: BigInt

  \\"\\"\\"
  When the data type is an array, the name of the field items within the array.
  \\"\\"\\"
  items: String

  \\"\\"\\"If the field is a system field, the name of the field.\\"\\"\\"
  system: String

  \\"\\"\\"The data type of the field.\\"\\"\\"
  type: String!
}

\\"\\"\\"The schema of a field.\\"\\"\\"
type JsonTypeBean2 {
  configuration: query_getAttachment_additionalProperties

  \\"\\"\\"If the field is a custom field, the URI of the field.\\"\\"\\"
  custom: String

  \\"\\"\\"If the field is a custom field, the custom ID of the field.\\"\\"\\"
  customId: BigInt

  \\"\\"\\"
  When the data type is an array, the name of the field items within the array.
  \\"\\"\\"
  items: String

  \\"\\"\\"If the field is a system field, the name of the field.\\"\\"\\"
  system: String

  \\"\\"\\"The data type of the field.\\"\\"\\"
  type: String!
}

\\"\\"\\"The schema of a field.\\"\\"\\"
type JsonTypeBean3 {
  configuration: query_getAttachment_additionalProperties

  \\"\\"\\"If the field is a custom field, the URI of the field.\\"\\"\\"
  custom: String

  \\"\\"\\"If the field is a custom field, the custom ID of the field.\\"\\"\\"
  customId: BigInt

  \\"\\"\\"
  When the data type is an array, the name of the field items within the array.
  \\"\\"\\"
  items: String

  \\"\\"\\"If the field is a system field, the name of the field.\\"\\"\\"
  system: String

  \\"\\"\\"The data type of the field.\\"\\"\\"
  type: String!
}

\\"\\"\\"Details about a license for the Jira instance.\\"\\"\\"
type License {
  \\"\\"\\"The applications under this license.\\"\\"\\"
  applications: [LicensedApplication]!
}

\\"\\"\\"Details about a licensed Jira application.\\"\\"\\"
type LicensedApplication {
  \\"\\"\\"The ID of the application.\\"\\"\\"
  id: String!
  plan: query_getLicense_applications_items_plan!
}

\\"\\"\\"Details a link group, which defines issue operations.\\"\\"\\"
type LinkGroup {
  groups: [JSON]
  header: SimpleLink
  id: String
  links: [SimpleLink]
  styleClass: String
  weight: Int
}

input LinkIssueRequestJsonBean_Input {
  comment: Comment_Input
  inwardIssue: LinkedIssue_Input3!
  outwardIssue: LinkedIssue_Input3!
  type: IssueLinkType_Input2!
}

\\"\\"\\"The ID or key of a linked issue.\\"\\"\\"
type LinkedIssue {
  fields: Fields

  \\"\\"\\"The ID of an issue. Required if \`key\` isn't provided.\\"\\"\\"
  id: String

  \\"\\"\\"The key of an issue. Required if \`id\` isn't provided.\\"\\"\\"
  key: String

  \\"\\"\\"The URL of the issue.\\"\\"\\"
  self: URL
}

\\"\\"\\"The ID or key of a linked issue.\\"\\"\\"
type LinkedIssue2 {
  fields: Fields

  \\"\\"\\"The ID of an issue. Required if \`key\` isn't provided.\\"\\"\\"
  id: String

  \\"\\"\\"The key of an issue. Required if \`id\` isn't provided.\\"\\"\\"
  key: String

  \\"\\"\\"The URL of the issue.\\"\\"\\"
  self: URL
}

\\"\\"\\"The ID or key of a linked issue.\\"\\"\\"
input LinkedIssue_Input3 {
  fields: Fields_Input

  \\"\\"\\"The ID of an issue. Required if \`key\` isn't provided.\\"\\"\\"
  id: String

  \\"\\"\\"The key of an issue. Required if \`id\` isn't provided.\\"\\"\\"
  key: String

  \\"\\"\\"The URL of the issue.\\"\\"\\"
  self: URL
}

scalar ListWrapperCallbackApplicationRole

scalar ListWrapperCallbackApplicationRole_Input

scalar ListWrapperCallbackGroupName

scalar ListWrapperCallbackGroupName_Input

\\"\\"\\"Details of a locale.\\"\\"\\"
type Locale {
  \\"\\"\\"
  The locale code. The Java the locale format is used: a two character language code (ISO 639), an underscore, and two letter country code (ISO 3166). For example, en\\\\_US represents a locale of English (United States). Required on create.
  \\"\\"\\"
  locale: String
}

\\"\\"\\"Details of a locale.\\"\\"\\"
input Locale_Input {
  \\"\\"\\"
  The locale code. The Java the locale format is used: a two character language code (ISO 639), an underscore, and two letter country code (ISO 3166). For example, en\\\\_US represents a locale of English (United States). Required on create.
  \\"\\"\\"
  locale: String
}

input MoveFieldBean_Input {
  \\"\\"\\"
  The ID of the screen tab field after which to place the moved screen tab field. Required if \`position\` isn't provided.
  \\"\\"\\"
  after: URL
  position: mutationInput_moveScreenTabField_position
}

\\"\\"\\"
A list of issues and their respective properties to set or update. See [Entity properties](https://developer.atlassian.com/cloud/jira/platform/jira-entity-properties/) for more information.
\\"\\"\\"
input MultiIssueEntityProperties_Input {
  \\"\\"\\"A list of issue IDs and their respective properties.\\"\\"\\"
  issues: [IssueEntityPropertiesForMultiUpdate_Input]
}

\\"\\"\\"List of updates for a custom fields.\\"\\"\\"
input MultipleCustomFieldValuesUpdateDetails_Input {
  updates: [MultipleCustomFieldValuesUpdate_Input]
}

\\"\\"\\"A custom field and its new value with a list of issue to update.\\"\\"\\"
input MultipleCustomFieldValuesUpdate_Input {
  \\"\\"\\"The ID or key of the custom field. For example, \`customfield_10010\`.\\"\\"\\"
  customField: String!

  \\"\\"\\"The list of issue IDs.\\"\\"\\"
  issueIds: [BigInt]!
  value: mutationInput_updateMultipleCustomFieldValues_updates_items_value_Input!
}

type Mutation {
  \\"\\"\\"
  Deletes an app's property.
  
  **[Permissions](#permissions) required:** Only a Connect app whose key matches \`addonKey\` can make this request.
  \\"\\"\\"
  AddonPropertiesResource_deleteAddonProperty_delete(addonKey: String!, propertyKey: String!): AddonPropertiesResource_deleteAddonProperty_delete_response

  \\"\\"\\"
  Sets the value of an app's property. Use this resource to store custom data for your app.
  
  The value of the request body must be a [valid](http://tools.ietf.org/html/rfc4627), non-empty JSON blob. The maximum length is 32768 characters.
  
  **[Permissions](#permissions) required:** Only a Connect app whose key matches \`addonKey\` can make this request.
  \\"\\"\\"
  AddonPropertiesResource_putAddonProperty_put(addonKey: String!, propertyKey: String!): AddonPropertiesResource_putAddonProperty_put_response

  \\"\\"\\"
  Updates the value of a custom field added by Connect apps on one or more issues.
  The values of up to 200 custom fields can be updated.
  
  **[Permissions](#permissions) required:** Only Connect apps can make this request.
  \\"\\"\\"
  AppIssueFieldValueUpdateResource_updateIssueFields_put(Atlassian_Transfer_Id: String!, input: ConnectCustomFieldValues_Input): Any

  \\"\\"\\"
  Registers a list of modules.
  
  **[Permissions](#permissions) required:** Only Connect apps can make this request.
  \\"\\"\\"
  DynamicModulesResource_registerModules_post(input: ConnectModules_Input!): DynamicModulesResource_registerModules_post_response

  \\"\\"\\"
  Remove all or a list of modules registered by the calling app.
  
  **[Permissions](#permissions) required:** Only Connect apps can make this request.
  \\"\\"\\"
  DynamicModulesResource_removeModules_delete(moduleKey: ID): DynamicModulesResource_removeModules_delete_response

  \\"\\"\\"
  Updates the values of multiple entity properties for an object, up to 50 updates per request. This operation is for use by Connect apps during app migration.
  \\"\\"\\"
  MigrationResource_updateEntityPropertiesValue_put(Atlassian_Transfer_Id: String!, entityType: String!, input: [EntityPropertyDetails_Input]!): Any

  \\"\\"\\"
  Returns configurations for workflow transition rules migrated from server to cloud and owned by the calling Connect app.
  \\"\\"\\"
  MigrationResource_workflowRuleSearch_post(Atlassian_Transfer_Id: String!, input: WorkflowRulesSearch_Input!): WorkflowRulesSearchDetails

  \\"\\"\\"
  Adds actors to a project role for the project.
  
  To replace all actors for the project, use [Set actors for project role](#api-rest-api-3-project-projectIdOrKey-role-id-put).
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project or *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  addActorUsers(id: Int!, input: ActorsMap_Input, projectIdOrKey: String!): ProjectRole3

  \\"\\"\\"
  Adds one or more attachments to an issue. Attachments are posted as multipart/form-data ([RFC 1867](https://www.ietf.org/rfc/rfc1867.txt)).
  
  Note that:
  
   *  The request must have a \`X-Atlassian-Token: no-check\` header, if not it is blocked. See [Special headers](#special-request-headers) for more information.
   *  The name of the multipart/form-data parameter that contains the attachments must be \`file\`.
  
  The following examples upload a file called *myfile.txt* to the issue *TEST-123*:
  
  #### curl ####
  
      curl --location --request POST 'https://your-domain.atlassian.net/rest/api/3/issue/TEST-123/attachments'
       -u 'email@example.com:<api_token>'
       -H 'X-Atlassian-Token: no-check'
       --form 'file=@\\"myfile.txt\\"'
  
  #### Node.js ####
  
      // This code sample uses the 'node-fetch' and 'form-data' libraries:
       // https://www.npmjs.com/package/node-fetch
       // https://www.npmjs.com/package/form-data
       const fetch = require('node-fetch');
       const FormData = require('form-data');
       const fs = require('fs');
      
       const filePath = 'myfile.txt';
       const form = new FormData();
       const stats = fs.statSync(filePath);
       const fileSizeInBytes = stats.size;
       const fileStream = fs.createReadStream(filePath);
      
       form.append('file', fileStream, {knownLength: fileSizeInBytes});
      
       fetch('https://your-domain.atlassian.net/rest/api/3/issue/TEST-123/attachments', {
           method: 'POST',
           body: form,
           headers: {
               'Authorization': \`Basic \${Buffer.from(
                   'email@example.com:'
               ).toString('base64')}\`,
               'Accept': 'application/json',
               'X-Atlassian-Token': 'no-check'
           }
       })
           .then(response => {
               console.log(
                   \`Response: \${response.status} \${response.statusText}\`
               );
               return response.text();
           })
           .then(text => console.log(text))
           .catch(err => console.error(err));
  
  #### Java ####
  
      // This code sample uses the  'Unirest' library:
       // http://unirest.io/java.html
       HttpResponse response = Unirest.post(\\"https://your-domain.atlassian.net/rest/api/2/issue/{issueIdOrKey}/attachments\\")
               .basicAuth(\\"email@example.com\\", \\"\\")
               .header(\\"Accept\\", \\"application/json\\")
               .header(\\"X-Atlassian-Token\\", \\"no-check\\")
               .field(\\"file\\", new File(\\"myfile.txt\\"))
               .asJson();
      
               System.out.println(response.getBody());
  
  #### Python ####
  
      # This code sample uses the 'requests' library:
       # http://docs.python-requests.org
       import requests
       from requests.auth import HTTPBasicAuth
       import json
      
       url = \\"https://your-domain.atlassian.net/rest/api/2/issue/{issueIdOrKey}/attachments\\"
      
       auth = HTTPBasicAuth(\\"email@example.com\\", \\"\\")
      
       headers = {
          \\"Accept\\": \\"application/json\\",
          \\"X-Atlassian-Token\\": \\"no-check\\"
       }
      
       response = requests.request(
          \\"POST\\",
          url,
          headers = headers,
          auth = auth,
          files = {
               \\"file\\": (\\"myfile.txt\\", open(\\"myfile.txt\\",\\"rb\\"), \\"application-type\\")
          }
       )
      
       print(json.dumps(json.loads(response.text), sort_keys=True, indent=4, separators=(\\",\\", \\": \\")))
  
  #### PHP ####
  
      // This code sample uses the 'Unirest' library:
       // http://unirest.io/php.html
       Unirest\\\\Request::auth('email@example.com', '');
      
       $headers = array(
         'Accept' => 'application/json',
         'X-Atlassian-Token' => 'no-check'
       );
      
       $parameters = array(
         'file' => File::add('myfile.txt')
       );
      
       $response = Unirest\\\\Request::post(
         'https://your-domain.atlassian.net/rest/api/2/issue/{issueIdOrKey}/attachments',
         $headers,
         $parameters
       );
      
       var_dump($response)
  
  #### Forge ####
  
      // This sample uses Atlassian Forge and the \`form-data\` library.
       // https://developer.atlassian.com/platform/forge/
       // https://www.npmjs.com/package/form-data
       import api from \\"@forge/api\\";
       import FormData from \\"form-data\\";
      
       const form = new FormData();
       form.append('file', fileStream, {knownLength: fileSizeInBytes});
      
       const response = await api.asApp().requestJira('/rest/api/2/issue/{issueIdOrKey}/attachments', {
           method: 'POST',
           body: form,
           headers: {
               'Accept': 'application/json',
               'X-Atlassian-Token': 'no-check'
           }
       });
      
       console.log(\`Response: \${response.status} \${response.statusText}\`);
       console.log(await response.json());
  
  Tip: Use a client library. Many client libraries have classes for handling multipart POST operations. For example, in Java, the Apache HTTP Components library provides a [MultiPartEntity](http://hc.apache.org/httpcomponents-client-ga/httpmime/apidocs/org/apache/http/entity/mime/MultipartEntity.html) class for multipart POST operations.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** 
  
   *  *Browse Projects* and *Create attachments* [ project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
  \\"\\"\\"
  addAttachment(input: String, issueIdOrKey: String!): [Attachment]

  \\"\\"\\"
  Adds a comment to an issue.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:**
  
   *  *Browse projects* and *Add comments* [ project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue containing the comment is in.
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
  \\"\\"\\"
  addComment(expand: String, input: Comment_Input, issueIdOrKey: String!): Comment

  \\"\\"\\"
  Adds a field to the default tab of the default screen.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  addFieldToDefaultScreen(fieldId: String!): Any

  \\"\\"\\"
  Adds a gadget to a dashboard.
  
  **[Permissions](#permissions) required:** None.
  \\"\\"\\"
  addGadget(dashboardId: Int!, input: DashboardGadgetSettings_Input): addGadget_response

  \\"\\"\\"
  Adds issue types to a custom field context, appending the issue types to the issue types list.
  
  A custom field context without any issue types applies to all issue types. Adding issue types to such a custom field context would result in it applying to only the listed issue types.
  
  If any of the issue types exists in the custom field context, the operation fails and no issue types are added.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  addIssueTypesToContext(contextId: Int!, fieldId: String!, input: IssueTypeIds_Input!): addIssueTypesToContext_response

  \\"\\"\\"
  Adds issue types to an issue type scheme.
  
  The added issue types are appended to the issue types list.
  
  If any of the issue types exist in the issue type scheme, the operation fails and no issue types are added.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  addIssueTypesToIssueTypeScheme(input: IssueTypeIds_Input!, issueTypeSchemeId: Int!): addIssueTypesToIssueTypeScheme_response

  \\"\\"\\"
  Adds [default actors](#api-rest-api-3-resolution-get) to a role. You may add groups or users, but you cannot add groups and users in the same request.
  
  Changing a project role's default actors does not affect project role members for projects already created.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  addProjectRoleActorsToRole(id: Int!, input: ActorInputBean_Input): ProjectRole3

  \\"\\"\\"
  Creates a tab for a screen.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  addScreenTab(input: ScreenableTab_Input2!, screenId: Int!): ScreenableTab2

  \\"\\"\\"
  Adds a field to a screen tab.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  addScreenTabField(input: AddFieldBean_Input!, screenId: Int!, tabId: Int!): ScreenableField

  \\"\\"\\"
  Add a share permissions to a filter. If you add a global share permission (one for all logged-in users or the public) it will overwrite all share permissions for the filter.
  
  Be aware that this operation uses different objects for updating share permissions compared to [Update filter](#api-rest-api-3-filter-id-put).
  
  **[Permissions](#permissions) required:** *Share dashboards and filters* [global permission](https://confluence.atlassian.com/x/x4dKLg) and the user must own the filter.
  \\"\\"\\"
  addSharePermission(id: Int!, input: SharePermissionInputBean_Input!): [SharePermission]

  \\"\\"\\"
  Adds a user to a group.
  
  **[Permissions](#permissions) required:** Site administration (that is, member of the *site-admin* [group](https://confluence.atlassian.com/x/24xjL)).
  \\"\\"\\"
  addUserToGroup(groupId: String, groupname: String, input: UpdateUserToGroupBean_Input): Group

  \\"\\"\\"
  Adds the user's vote to an issue. This is the equivalent of the user clicking *Vote* on an issue in Jira.
  
  This operation requires the **Allow users to vote on issues** option to be *ON*. This option is set in General configuration for Jira. See [Configuring Jira application options](https://confluence.atlassian.com/x/uYXKM) for details.
  
  **[Permissions](#permissions) required:**
  
   *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
  \\"\\"\\"
  addVote(issueIdOrKey: String!): Any

  \\"\\"\\"
  Adds a user as a watcher of an issue by passing the account ID of the user. For example, \`\\"5b10ac8d82e05b22cc7d4ef5\\"\`. If no user is specified the calling user is added.
  
  This operation requires the **Allow users to watch issues** option to be *ON*. This option is set in General configuration for Jira. See [Configuring Jira application options](https://confluence.atlassian.com/x/uYXKM) for details.
  
  **[Permissions](#permissions) required:**
  
   *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
   *  To add users other than themselves to the watchlist, *Manage watcher list* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
  \\"\\"\\"
  addWatcher(input: String, issueIdOrKey: String!): Any

  \\"\\"\\"
  Adds a worklog to an issue.
  
  Time tracking must be enabled in Jira, otherwise this operation returns an error. For more information, see [Configuring time tracking](https://confluence.atlassian.com/x/qoXKM).
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:**
  
   *  *Browse projects* and *Work on issues* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
  \\"\\"\\"
  addWorklog(adjustEstimate: String, expand: String, input: Worklog_Input, issueIdOrKey: String!, newEstimate: String, notifyUsers: Boolean, overrideEditableFlag: Boolean, reduceBy: String): Worklog

  \\"\\"\\"
  Analyses and validates Jira expressions.
  
  As an experimental feature, this operation can also attempt to type-check the expressions.
  
  Learn more about Jira expressions in the [documentation](https://developer.atlassian.com/cloud/jira/platform/jira-expressions/).
  
  **[Permissions](#permissions) required**: None.
  \\"\\"\\"
  analyseExpression(check: String, input: JiraExpressionForAnalysis_Input!): analyseExpression_response

  \\"\\"\\"
  Appends issue type to screen scheme mappings to an issue type screen scheme.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  appendMappingsForIssueTypeScreenScheme(input: IssueTypeScreenSchemeMappingDetails_Input!, issueTypeScreenSchemeId: String!): appendMappingsForIssueTypeScreenScheme_response

  \\"\\"\\"
  Archives a project. You can't delete a project if it's archived. To delete an archived project, restore the project and then delete it. To restore a project, use the Jira UI.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  archiveProject(projectIdOrKey: String!): Any

  \\"\\"\\"
  Assigns a field configuration scheme to a project. If the field configuration scheme ID is \`null\`, the operation assigns the default field configuration scheme.
  
  Field configuration schemes can only be assigned to classic projects.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  assignFieldConfigurationSchemeToProject(input: FieldConfigurationSchemeProjectAssociation_Input!): assignFieldConfigurationSchemeToProject_response

  \\"\\"\\"
  Assigns an issue to a user. Use this operation when the calling user does not have the *Edit Issues* permission but has the *Assign issue* permission for the project that the issue is in.
  
  If \`name\` or \`accountId\` is set to:
  
   *  \`\\"-1\\"\`, the issue is assigned to the default assignee for the project.
   *  \`null\`, the issue is set to unassigned.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:**
  
   *  *Browse Projects* and *Assign Issues* [ project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
  \\"\\"\\"
  assignIssue(input: User_Input9, issueIdOrKey: String!): Any

  \\"\\"\\"
  Assigns an issue type scheme to a project.
  
  If any issues in the project are assigned issue types not present in the new scheme, the operation will fail. To complete the assignment those issues must be updated to use issue types in the new scheme.
  
  Issue type schemes can only be assigned to classic projects.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  assignIssueTypeSchemeToProject(input: IssueTypeSchemeProjectAssociation_Input!): assignIssueTypeSchemeToProject_response

  \\"\\"\\"
  Assigns an issue type screen scheme to a project.
  
  Issue type screen schemes can only be assigned to classic projects.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  assignIssueTypeScreenSchemeToProject(input: IssueTypeScreenSchemeProjectAssociation_Input): assignIssueTypeScreenSchemeToProject_response

  \\"\\"\\"
  Assigns a permission scheme with a project. See [Managing project permissions](https://confluence.atlassian.com/x/yodKLg) for more information about permission schemes.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)
  \\"\\"\\"
  assignPermissionScheme(expand: String, input: IdBean_Input!, projectKeyOrId: String!): PermissionScheme

  \\"\\"\\"
  Assigns a custom field context to projects.
  
  If any project in the request is assigned to any context of the custom field, the operation fails.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  assignProjectsToCustomFieldContext(contextId: Int!, fieldId: String!, input: ProjectIds_Input!): assignProjectsToCustomFieldContext_response

  \\"\\"\\"
  Assigns a workflow scheme to a project. This operation is performed only when there are no issues in the project.
  
  Workflow schemes can only be assigned to classic projects.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  assignSchemeToProject(input: WorkflowSchemeProjectAssociation_Input!): assignSchemeToProject_response

  \\"\\"\\"
  Deletes a property value from multiple issues. The issues to be updated can be specified by filter criteria.
  
  The criteria the filter used to identify eligible issues are:
  
   *  \`entityIds\` Only issues from this list are eligible.
   *  \`currentValue\` Only issues with the property set to this value are eligible.
  
  If both criteria is specified, they are joined with the logical *AND*: only issues that satisfy both criteria are considered eligible.
  
  If no filter criteria are specified, all the issues visible to the user and where the user has the EDIT\\\\_ISSUES permission for the issue are considered eligible.
  
  This operation is:
  
   *  transactional, either the property is deleted from all eligible issues or, when errors occur, no properties are deleted.
   *  [asynchronous](#async). Follow the \`location\` link in the response to determine the status of the task and use [Get task](#api-rest-api-3-task-taskId-get) to obtain subsequent updates.
  
  **[Permissions](#permissions) required:**
  
   *  *Browse projects* [ project permission](https://confluence.atlassian.com/x/yodKLg) for each project containing issues.
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
   *  *Edit issues* [project permission](https://confluence.atlassian.com/x/yodKLg) for each issue.
  \\"\\"\\"
  bulkDeleteIssueProperty(input: IssueFilterForBulkPropertyDelete_Input, propertyKey: String!): bulkDeleteIssueProperty_response

  \\"\\"\\"
  Sets or updates entity property values on issues. Up to 10 entity properties can be specified for each issue and up to 100 issues included in the request.
  
  The value of the request body must be a [valid](http://tools.ietf.org/html/rfc4627), non-empty JSON.
  
  This operation is:
  
   *  [asynchronous](#async). Follow the \`location\` link in the response to determine the status of the task and use [Get task](#api-rest-api-3-task-taskId-get) to obtain subsequent updates.
   *  non-transactional. Updating some entities may fail. Such information will available in the task result.
  
  **[Permissions](#permissions) required:**
  
   *  *Browse projects* and *Edit issues* [project permissions](https://confluence.atlassian.com/x/yodKLg) for the project containing the issue.
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
  \\"\\"\\"
  bulkSetIssuePropertiesByIssue(input: MultiIssueEntityProperties_Input): bulkSetIssuePropertiesByIssue_response

  \\"\\"\\"
  Sets a property value on multiple issues.
  
  The value set can be a constant or determined by a [Jira expression](https://developer.atlassian.com/cloud/jira/platform/jira-expressions/). Expressions must be computable with constant complexity when applied to a set of issues. Expressions must also comply with the [restrictions](https://developer.atlassian.com/cloud/jira/platform/jira-expressions/#restrictions) that apply to all Jira expressions.
  
  The issues to be updated can be specified by a filter.
  
  The filter identifies issues eligible for update using these criteria:
  
   *  \`entityIds\` Only issues from this list are eligible.
   *  \`currentValue\` Only issues with the property set to this value are eligible.
   *  \`hasProperty\`:
      
       *  If *true*, only issues with the property are eligible.
       *  If *false*, only issues without the property are eligible.
  
  If more than one criteria is specified, they are joined with the logical *AND*: only issues that satisfy all criteria are eligible.
  
  If an invalid combination of criteria is provided, an error is returned. For example, specifying a \`currentValue\` and \`hasProperty\` as *false* would not match any issues (because without the property the property cannot have a value).
  
  The filter is optional. Without the filter all the issues visible to the user and where the user has the EDIT\\\\_ISSUES permission for the issue are considered eligible.
  
  This operation is:
  
   *  transactional, either all eligible issues are updated or, when errors occur, none are updated.
   *  [asynchronous](#async). Follow the \`location\` link in the response to determine the status of the task and use [Get task](#api-rest-api-3-task-taskId-get) to obtain subsequent updates.
  
  **[Permissions](#permissions) required:**
  
   *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for each project containing issues.
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
   *  *Edit issues* [project permission](https://confluence.atlassian.com/x/yodKLg) for each issue.
  \\"\\"\\"
  bulkSetIssueProperty(input: BulkIssuePropertyUpdateRequest_Input, propertyKey: String!): bulkSetIssueProperty_response

  \\"\\"\\"
  Sets or updates a list of entity property values on issues. A list of up to 10 entity properties can be specified along with up to 10,000 issues on which to set or update that list of entity properties.
  
  The value of the request body must be a [valid](http://tools.ietf.org/html/rfc4627), non-empty JSON. The maximum length of single issue property value is 32768 characters. This operation can be accessed anonymously.
  
  This operation is:
  
   *  transactional, either all properties are updated in all eligible issues or, when errors occur, no properties are updated.
   *  [asynchronous](#async). Follow the \`location\` link in the response to determine the status of the task and use [Get task](#api-rest-api-3-task-taskId-get) to obtain subsequent updates.
  
  **[Permissions](#permissions) required:**
  
   *  *Browse projects* and *Edit issues* [project permissions](https://confluence.atlassian.com/x/yodKLg) for the project containing the issue.
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
  \\"\\"\\"
  bulkSetIssuesPropertiesList(input: IssueEntityProperties_Input): bulkSetIssuesPropertiesList_response

  \\"\\"\\"
  Cancels a task.
  
  **[Permissions](#permissions) required:** either of:
  
   *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
   *  Creator of the task.
  \\"\\"\\"
  cancelTask(taskId: String!): [cancelTask_response]

  \\"\\"\\"
  Changes the owner of the filter.
  
  **[Permissions](#permissions) required:** Permission to access Jira. However, the user must own the filter or have the *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  changeFilterOwner(id: Int!, input: ChangeFilterOwner_Input!): Any

  \\"\\"\\"
  Copies a dashboard. Any values provided in the \`dashboard\` parameter replace those in the copied dashboard.
  
  **[Permissions](#permissions) required:** None
  
  The dashboard to be copied must be owned by or shared with the user.
  \\"\\"\\"
  copyDashboard(id: String!, input: DashboardDetails_Input!): copyDashboard_response

  \\"\\"\\"
  Creates a component. Use components to provide containers for issues within a project.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project in which the component is created or *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  createComponent(input: ProjectComponent_Input): ProjectComponent

  \\"\\"\\"
  Creates a custom field.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  createCustomField(input: CustomFieldDefinitionJsonBean_Input!): FieldDetails

  \\"\\"\\"
  Creates a custom field context.
  
  If \`projectIds\` is empty, a global context is created. A global context is one that applies to all project. If \`issueTypeIds\` is empty, the context applies to all issue types.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  createCustomFieldContext(fieldId: String!, input: CreateCustomFieldContext_Input!): createCustomFieldContext_response

  \\"\\"\\"
  Creates options and, where the custom select field is of the type Select List (cascading), cascading options for a custom select field. The options are added to a context of the field.
  
  The maximum number of options that can be created per request is 1000 and each field can have a maximum of 10000 options.
  
  This operation works for custom field options created in Jira or the operations from this resource. **To work with issue field select list options created for Connect apps use the [Issue custom field options (apps)](#api-group-issue-custom-field-options--apps-) operations.**
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  createCustomFieldOption(contextId: Int!, fieldId: String!, input: BulkCustomFieldOptionCreateRequest_Input): createCustomFieldOption_response

  \\"\\"\\"
  Creates a dashboard.
  
  **[Permissions](#permissions) required:** None.
  \\"\\"\\"
  createDashboard(input: DashboardDetails_Input!): createDashboard_response

  \\"\\"\\"
  Creates a field configuration. The field configuration is created with the same field properties as the default configuration, with all the fields being optional.
  
  This operation can only create configurations for use in company-managed (classic) projects.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  createFieldConfiguration(input: FieldConfigurationDetails_Input!): FieldConfiguration

  \\"\\"\\"
  Creates a field configuration scheme.
  
  This operation can only create field configuration schemes used in company-managed (classic) projects.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  createFieldConfigurationScheme(input: UpdateFieldConfigurationSchemeDetails_Input!): createFieldConfigurationScheme_response

  \\"\\"\\"
  Creates a filter. The filter is shared according to the [default share scope](#api-rest-api-3-filter-post). The filter is not selected as a favorite.
  
  **[Permissions](#permissions) required:** Permission to access Jira.
  \\"\\"\\"
  createFilter(expand: String, input: Filter_Input!, overrideSharePermissions: Boolean): Filter

  \\"\\"\\"
  Creates a group.
  
  **[Permissions](#permissions) required:** Site administration (that is, member of the *site-admin* [group](https://confluence.atlassian.com/x/24xjL)).
  \\"\\"\\"
  createGroup(input: AddGroupBean_Input): Group

  \\"\\"\\"
  Creates an issue or, where the option to create subtasks is enabled in Jira, a subtask. A transition may be applied, to move the issue or subtask to a workflow step other than the default start step, and issue properties set.
  
  The content of the issue or subtask is defined using \`update\` and \`fields\`. The fields that can be set in the issue or subtask are determined using the [ Get create issue metadata](#api-rest-api-3-issue-createmeta-get). These are the same fields that appear on the issue's create screen. Note that the \`description\`, \`environment\`, and any \`textarea\` type custom fields (multi-line text fields) take Atlassian Document Format content. Single line custom fields (\`textfield\`) accept a string and don't handle Atlassian Document Format content.
  
  Creating a subtask differs from creating an issue as follows:
  
   *  \`issueType\` must be set to a subtask issue type (use [ Get create issue metadata](#api-rest-api-3-issue-createmeta-get) to find subtask issue types).
   *  \`parent\` must contain the ID or key of the parent issue.
  
  In a next-gen project any issue may be made a child providing that the parent and child are members of the same project.
  
  **[Permissions](#permissions) required:** *Browse projects* and *Create issues* [project permissions](https://confluence.atlassian.com/x/yodKLg) for the project in which the issue or subtask is created.
  \\"\\"\\"
  createIssue(input: IssueUpdateDetails_Input, updateHistory: Boolean): createIssue_response

  \\"\\"\\"
  Creates an option for a select list issue field.
  
  Note that this operation **only works for issue field select list options added by Connect apps**, it cannot be used with issue field select list options created in Jira or using operations from the [Issue custom field options](#api-group-Issue-custom-field-options) resource.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg). Jira permissions are not required for the app providing the field.
  \\"\\"\\"
  createIssueFieldOption(fieldKey: String!, input: IssueFieldOptionCreateBean_Input): IssueFieldOption

  \\"\\"\\"
  Creates an issue link type. Use this operation to create descriptions of the reasons why issues are linked. The issue link type consists of a name and descriptions for a link's inward and outward relationships.
  
  To use this operation, the site must have [issue linking](https://confluence.atlassian.com/x/yoXKM) enabled.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  createIssueLinkType(input: IssueLinkType_Input2): IssueLinkType2

  \\"\\"\\"
  Creates an issue type and adds it to the default issue type scheme.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  createIssueType(input: IssueTypeCreateBean_Input!): IssueTypeDetails

  \\"\\"\\"
  Loads an avatar for the issue type.
  
  Specify the avatar's local file location in the body of the request. Also, include the following headers:
  
   *  \`X-Atlassian-Token: no-check\` To prevent XSRF protection blocking the request, for more information see [Special Headers](#special-request-headers).
   *  \`Content-Type: image/image type\` Valid image types are JPEG, GIF, or PNG.
  
  For example:  
  \`curl --request POST \\\\ --user email@example.com:<api_token> \\\\ --header 'X-Atlassian-Token: no-check' \\\\ --header 'Content-Type: image/< image_type>' \\\\ --data-binary \\"<@/path/to/file/with/your/avatar>\\" \\\\ --url 'https://your-domain.atlassian.net/rest/api/3/issuetype/{issueTypeId}'This\`
  
  The avatar is cropped to a square. If no crop parameters are specified, the square originates at the top left of the image. The length of the square's sides is set to the smaller of the height or width of the image.
  
  The cropped image is then used to create avatars of 16x16, 24x24, 32x32, and 48x48 in size.
  
  After creating the avatar, use [ Update issue type](#api-rest-api-3-issuetype-id-put) to set it as the issue type's displayed avatar.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  createIssueTypeAvatar(id: String!, size: Int!, x: Int, y: Int): Avatar

  \\"\\"\\"
  Creates an issue type scheme.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  createIssueTypeScheme(input: IssueTypeSchemeDetails_Input!): createIssueTypeScheme_response

  \\"\\"\\"
  Creates an issue type screen scheme.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  createIssueTypeScreenScheme(input: IssueTypeScreenSchemeDetails_Input!): createIssueTypeScreenScheme_response

  \\"\\"\\"
  Creates upto **50** issues and, where the option to create subtasks is enabled in Jira, subtasks. Transitions may be applied, to move the issues or subtasks to a workflow step other than the default start step, and issue properties set.
  
  The content of each issue or subtask is defined using \`update\` and \`fields\`. The fields that can be set in the issue or subtask are determined using the [ Get create issue metadata](#api-rest-api-3-issue-createmeta-get). These are the same fields that appear on the issues' create screens. Note that the \`description\`, \`environment\`, and any \`textarea\` type custom fields (multi-line text fields) take Atlassian Document Format content. Single line custom fields (\`textfield\`) accept a string and don't handle Atlassian Document Format content.
  
  Creating a subtask differs from creating an issue as follows:
  
   *  \`issueType\` must be set to a subtask issue type (use [ Get create issue metadata](#api-rest-api-3-issue-createmeta-get) to find subtask issue types).
   *  \`parent\` the must contain the ID or key of the parent issue.
  
  **[Permissions](#permissions) required:** *Browse projects* and *Create issues* [project permissions](https://confluence.atlassian.com/x/yodKLg) for the project in which each issue or subtask is created.
  \\"\\"\\"
  createIssues(input: IssuesUpdateBean_Input): createIssues_response

  \\"\\"\\"
  Creates or updates a remote issue link for an issue.
  
  If a \`globalId\` is provided and a remote issue link with that global ID is found it is updated. Any fields without values in the request are set to null. Otherwise, the remote issue link is created.
  
  This operation requires [issue linking to be active](https://confluence.atlassian.com/x/yoXKM).
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:**
  
   *  *Browse projects* and *Link issues* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
  \\"\\"\\"
  createOrUpdateRemoteIssueLink(input: RemoteIssueLinkRequest_Input, issueIdOrKey: String!): createOrUpdateRemoteIssueLink_response

  \\"\\"\\"
  Creates a permission grant in a permission scheme.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  createPermissionGrant(expand: String, input: PermissionGrant_Input, schemeId: Int!): PermissionGrant

  \\"\\"\\"
  Creates a new permission scheme. You can create a permission scheme with or without defining a set of permission grants.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  createPermissionScheme(expand: String, input: PermissionScheme_Input): PermissionScheme

  \\"\\"\\"
  Creates an issue priority.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  createPriority(input: CreatePriorityDetails_Input): createPriority_response

  \\"\\"\\"
  Creates a project based on a project type template, as shown in the following table:
  
  | Project Type Key | Project Template Key |  
  |--|--|  
  | \`business\` | \`com.atlassian.jira-core-project-templates:jira-core-simplified-content-management\`, \`com.atlassian.jira-core-project-templates:jira-core-simplified-document-approval\`, \`com.atlassian.jira-core-project-templates:jira-core-simplified-lead-tracking\`, \`com.atlassian.jira-core-project-templates:jira-core-simplified-process-control\`, \`com.atlassian.jira-core-project-templates:jira-core-simplified-procurement\`, \`com.atlassian.jira-core-project-templates:jira-core-simplified-project-management\`, \`com.atlassian.jira-core-project-templates:jira-core-simplified-recruitment\`, \`com.atlassian.jira-core-project-templates:jira-core-simplified-task-tracking\` |  
  | \`service_desk\` | \`com.atlassian.servicedesk:simplified-it-service-management\`, \`com.atlassian.servicedesk:simplified-general-service-desk\`, \`com.atlassian.servicedesk:simplified-internal-service-desk\`, \`com.atlassian.servicedesk:simplified-external-service-desk\`, \`com.atlassian.servicedesk:simplified-hr-service-desk\`, \`com.atlassian.servicedesk:simplified-facilities-service-desk\`, \`com.atlassian.servicedesk:simplified-legal-service-desk\` |  
  | \`software\` | \`com.pyxis.greenhopper.jira:gh-simplified-agility-kanban\`, \`com.pyxis.greenhopper.jira:gh-simplified-agility-scrum\`, \`com.pyxis.greenhopper.jira:gh-simplified-basic\`, \`com.pyxis.greenhopper.jira:gh-simplified-kanban-classic\`, \`com.pyxis.greenhopper.jira:gh-simplified-scrum-classic\` |  
  The project types are available according to the installed Jira features as follows:
  
   *  Jira Core, the default, enables \`business\` projects.
   *  Jira Service Management enables \`service_desk\` projects.
   *  Jira Software enables \`software\` projects.
  
  To determine which features are installed, go to **Jira settings** > **Apps** > **Manage apps** and review the System Apps list. To add Jira Software or Jira Service Management into a JIRA instance, use **Jira settings** > **Apps** > **Finding new apps**. For more information, see [ Managing add-ons](https://confluence.atlassian.com/x/S31NLg).
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  createProject(input: CreateProjectDetails_Input!): ProjectIdentifiers

  \\"\\"\\"
  Loads an avatar for a project.
  
  Specify the avatar's local file location in the body of the request. Also, include the following headers:
  
   *  \`X-Atlassian-Token: no-check\` To prevent XSRF protection blocking the request, for more information see [Special Headers](#special-request-headers).
   *  \`Content-Type: image/image type\` Valid image types are JPEG, GIF, or PNG.
  
  For example:  
  \`curl --request POST \`
  
  \`--user email@example.com:<api_token> \`
  
  \`--header 'X-Atlassian-Token: no-check' \`
  
  \`--header 'Content-Type: image/< image_type>' \`
  
  \`--data-binary \\"<@/path/to/file/with/your/avatar>\\" \`
  
  \`--url 'https://your-domain.atlassian.net/rest/api/3/project/{projectIdOrKey}/avatar2'\`
  
  The avatar is cropped to a square. If no crop parameters are specified, the square originates at the top left of the image. The length of the square's sides is set to the smaller of the height or width of the image.
  
  The cropped image is then used to create avatars of 16x16, 24x24, 32x32, and 48x48 in size.
  
  After creating the avatar use [Set project avatar](#api-rest-api-3-project-projectIdOrKey-avatar-put) to set it as the project's displayed avatar.
  
  **[Permissions](#permissions) required:** *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg).
  \\"\\"\\"
  createProjectAvatar(projectIdOrKey: String!, size: Int, x: Int, y: Int): Avatar

  \\"\\"\\"
  Creates a project category.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  createProjectCategory(input: ProjectCategory_Input2): ProjectCategory2

  \\"\\"\\"
  Creates a new project role with no [default actors](#api-rest-api-3-resolution-get). You can use the [Add default actors to project role](#api-rest-api-3-role-id-actors-post) operation to add default actors to the project role after creating it.
  
  *Note that although a new project role is available to all projects upon creation, any default actors that are associated with the project role are not added to projects that existed prior to the role being created.*<
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  createProjectRole(input: CreateUpdateRoleRequestBean_Input): ProjectRole3

  \\"\\"\\"
  Creates a screen with a default field tab.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  createScreen(input: ScreenDetails_Input!): createScreen_response

  \\"\\"\\"
  Creates a screen scheme.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  createScreenScheme(input: ScreenSchemeDetails_Input!): createScreenScheme_response

  \\"\\"\\"
  Creates statuses for a global or project scope.
  
  **[Permissions](#permissions) required:**
  
   *  *Administer projects* [project permission.](https://confluence.atlassian.com/x/yodKLg)
   *  *Administer Jira* [project permission.](https://confluence.atlassian.com/x/yodKLg)
  \\"\\"\\"
  createStatuses(input: StatusCreateRequest_Input!): [createStatuses_response]

  \\"\\"\\"
  Creates a UI modification. UI modification can only be created by Forge apps.
  
  Each app can define up to 100 UI modifications. Each UI modification can define up to 1000 contexts.
  
  **[Permissions](#permissions) required:**
  
   *  *None* if the UI modification is created without contexts.
   *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for one or more projects, if the UI modification is created with contexts.
  \\"\\"\\"
  createUiModification(input: CreateUiModificationDetails_Input!): UiModificationIdentifiers

  \\"\\"\\"
  Creates a user. This resource is retained for legacy compatibility. As soon as a more suitable alternative is available this resource will be deprecated.
  
  If the user exists and has access to Jira, the operation returns a 201 status. If the user exists but does not have access to Jira, the operation returns a 400 status.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  createUser(input: NewUserDetails_Input): User9

  \\"\\"\\"
  Creates a project version.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) or *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project the version is added to.
  \\"\\"\\"
  createVersion(input: Version_Input): Version

  \\"\\"\\"
  Creates a workflow. You can define transition rules using the shapes detailed in the following sections. If no transitional rules are specified the default system transition rules are used.
  
  #### Conditions ####
  
  Conditions enable workflow rules that govern whether a transition can execute.
  
  ##### Always false condition #####
  
  A condition that always fails.
  
      {
         \\"type\\": \\"AlwaysFalseCondition\\"
       }
  
  ##### Block transition until approval #####
  
  A condition that blocks issue transition if there is a pending approval.
  
      {
         \\"type\\": \\"BlockInProgressApprovalCondition\\"
       }
  
  ##### Compare number custom field condition #####
  
  A condition that allows transition if a comparison between a number custom field and a value is true.
  
      {
         \\"type\\": \\"CompareNumberCFCondition\\",
         \\"configuration\\": {
           \\"comparator\\": \\"=\\",
           \\"fieldId\\": \\"customfield_10029\\",
           \\"fieldValue\\": 2
         }
       }
  
   *  \`comparator\` One of the supported comparator: \`=\`, \`>\`, and \`<\`.
   *  \`fieldId\` The custom numeric field ID. Allowed field types:
      
       *  \`com.atlassian.jira.plugin.system.customfieldtypes:float\`
       *  \`com.pyxis.greenhopper.jira:jsw-story-points\`
   *  \`fieldValue\` The value for comparison.
  
  ##### Hide from user condition #####
  
  A condition that hides a transition from users. The transition can only be triggered from a workflow function or REST API operation.
  
      {
         \\"type\\": \\"RemoteOnlyCondition\\"
       }
  
  ##### Only assignee condition #####
  
  A condition that allows only the assignee to execute a transition.
  
      {
         \\"type\\": \\"AllowOnlyAssignee\\"
       }
  
  ##### Only Bamboo notifications workflow condition #####
  
  A condition that makes the transition available only to Bamboo build notifications.
  
      {
         \\"type\\": \\"OnlyBambooNotificationsCondition\\"
       }
  
  ##### Only reporter condition #####
  
  A condition that allows only the reporter to execute a transition.
  
      {
         \\"type\\": \\"AllowOnlyReporter\\"
       }
  
  ##### Permission condition #####
  
  A condition that allows only users with a permission to execute a transition.
  
      {
         \\"type\\": \\"PermissionCondition\\",
         \\"configuration\\": {
             \\"permissionKey\\": \\"BROWSE_PROJECTS\\"
         }
       }
  
   *  \`permissionKey\` The permission required to perform the transition. Allowed values: [built-in](https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-permission-schemes/#built-in-permissions) or app defined permissions.
  
  ##### Previous status condition #####
  
  A condition that allows a transition based on whether an issue has or has not transitioned through a status.
  
      {
         \\"type\\": \\"PreviousStatusCondition\\",
         \\"configuration\\": {
           \\"ignoreLoopTransitions\\": true,
           \\"includeCurrentStatus\\": true,
           \\"mostRecentStatusOnly\\": true,
           \\"reverseCondition\\": true,
           \\"previousStatus\\": {
             \\"id\\": \\"5\\"
           }
         }
       }
  
  By default this condition allows the transition if the status, as defined by its ID in the \`previousStatus\` object, matches any previous issue status, unless:
  
   *  \`ignoreLoopTransitions\` is \`true\`, then loop transitions (from and to the same status) are ignored.
   *  \`includeCurrentStatus\` is \`true\`, then the current issue status is also checked.
   *  \`mostRecentStatusOnly\` is \`true\`, then only the issue's preceding status (the one immediately before the current status) is checked.
   *  \`reverseCondition\` is \`true\`, then the status must not be present.
  
  ##### Separation of duties condition #####
  
  A condition that prevents a user to perform the transition, if the user has already performed a transition on the issue.
  
      {
         \\"type\\": \\"SeparationOfDutiesCondition\\",
         \\"configuration\\": {
           \\"fromStatus\\": {
             \\"id\\": \\"5\\"
           },
           \\"toStatus\\": {
             \\"id\\": \\"6\\"
           }
         }
       }
  
   *  \`fromStatus\` OPTIONAL. An object containing the ID of the source status of the transition that is blocked. If omitted any transition to \`toStatus\` is blocked.
   *  \`toStatus\` An object containing the ID of the target status of the transition that is blocked.
  
  ##### Subtask blocking condition #####
  
  A condition that blocks transition on a parent issue if any of its subtasks are in any of one or more statuses.
  
      {
         \\"type\\": \\"SubTaskBlockingCondition\\",
         \\"configuration\\": {
           \\"statuses\\": [
             {
               \\"id\\": \\"1\\"
             },
             {
               \\"id\\": \\"3\\"
             }
           ]
         }
       }
  
   *  \`statuses\` A list of objects containing status IDs.
  
  ##### User is in any group condition #####
  
  A condition that allows users belonging to any group from a list of groups to execute a transition.
  
      {
         \\"type\\": \\"UserInAnyGroupCondition\\",
         \\"configuration\\": {
           \\"groups\\": [
             \\"administrators\\",
             \\"atlassian-addons-admin\\"
           ]
         }
       }
  
   *  \`groups\` A list of group names.
  
  ##### User is in any project role condition #####
  
  A condition that allows only users with at least one project roles from a list of project roles to execute a transition.
  
      {
         \\"type\\": \\"InAnyProjectRoleCondition\\",
         \\"configuration\\": {
           \\"projectRoles\\": [
             {
               \\"id\\": \\"10002\\"
             },
             {
               \\"id\\": \\"10003\\"
             },
             {
               \\"id\\": \\"10012\\"
             },
             {
               \\"id\\": \\"10013\\"
             }
           ]
         }
       }
  
   *  \`projectRoles\` A list of objects containing project role IDs.
  
  ##### User is in custom field condition #####
  
  A condition that allows only users listed in a given custom field to execute the transition.
  
      {
         \\"type\\": \\"UserIsInCustomFieldCondition\\",
         \\"configuration\\": {
           \\"allowUserInField\\": false,
           \\"fieldId\\": \\"customfield_10010\\"
         }
       }
  
   *  \`allowUserInField\` If \`true\` only a user who is listed in \`fieldId\` can perform the transition, otherwise, only a user who is not listed in \`fieldId\` can perform the transition.
   *  \`fieldId\` The ID of the field containing the list of users.
  
  ##### User is in group condition #####
  
  A condition that allows users belonging to a group to execute a transition.
  
      {
         \\"type\\": \\"UserInGroupCondition\\",
         \\"configuration\\": {
           \\"group\\": \\"administrators\\"
         }
       }
  
   *  \`group\` The name of the group.
  
  ##### User is in group custom field condition #####
  
  A condition that allows users belonging to a group specified in a custom field to execute a transition.
  
      {
         \\"type\\": \\"InGroupCFCondition\\",
         \\"configuration\\": {
           \\"fieldId\\": \\"customfield_10012\\"
         }
       }
  
   *  \`fieldId\` The ID of the field. Allowed field types:
      
       *  \`com.atlassian.jira.plugin.system.customfieldtypes:multigrouppicker\`
       *  \`com.atlassian.jira.plugin.system.customfieldtypes:grouppicker\`
       *  \`com.atlassian.jira.plugin.system.customfieldtypes:select\`
       *  \`com.atlassian.jira.plugin.system.customfieldtypes:multiselect\`
       *  \`com.atlassian.jira.plugin.system.customfieldtypes:radiobuttons\`
       *  \`com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes\`
       *  \`com.pyxis.greenhopper.jira:gh-epic-status\`
  
  ##### User is in project role condition #####
  
  A condition that allows users with a project role to execute a transition.
  
      {
         \\"type\\": \\"InProjectRoleCondition\\",
         \\"configuration\\": {
           \\"projectRole\\": {
             \\"id\\": \\"10002\\"
           }
         }
       }
  
   *  \`projectRole\` An object containing the ID of a project role.
  
  ##### Value field condition #####
  
  A conditions that allows a transition to execute if the value of a field is equal to a constant value or simply set.
  
      {
         \\"type\\": \\"ValueFieldCondition\\",
         \\"configuration\\": {
           \\"fieldId\\": \\"assignee\\",
           \\"fieldValue\\": \\"qm:6e1ecee6-8e64-4db6-8c85-916bb3275f51:54b56885-2bd2-4381-8239-78263442520f\\",
           \\"comparisonType\\": \\"NUMBER\\",
           \\"comparator\\": \\"=\\"
         }
       }
  
   *  \`fieldId\` The ID of a field used in the comparison.
   *  \`fieldValue\` The expected value of the field.
   *  \`comparisonType\` The type of the comparison. Allowed values: \`STRING\`, \`NUMBER\`, \`DATE\`, \`DATE_WITHOUT_TIME\`, or \`OPTIONID\`.
   *  \`comparator\` One of the supported comparator: \`>\`, \`>=\`, \`=\`, \`<=\`, \`<\`, \`!=\`.
  
  **Notes:**
  
   *  If you choose the comparison type \`STRING\`, only \`=\` and \`!=\` are valid options.
   *  You may leave \`fieldValue\` empty when comparison type is \`!=\` to indicate that a value is required in the field.
   *  For date fields without time format values as \`yyyy-MM-dd\`, and for those with time as \`yyyy-MM-dd HH:mm\`. For example, for July 16 2021 use \`2021-07-16\`, for 8:05 AM use \`2021-07-16 08:05\`, and for 4 PM: \`2021-07-16 16:00\`.
  
  #### Validators ####
  
  Validators check that any input made to the transition is valid before the transition is performed.
  
  ##### Date field validator #####
  
  A validator that compares two dates.
  
      {
         \\"type\\": \\"DateFieldValidator\\",
         \\"configuration\\": {
             \\"comparator\\": \\">\\",
             \\"date1\\": \\"updated\\",
             \\"date2\\": \\"created\\",
             \\"expression\\": \\"1d\\",
             \\"includeTime\\": true
           }
       }
  
   *  \`comparator\` One of the supported comparator: \`>\`, \`>=\`, \`=\`, \`<=\`, \`<\`, or \`!=\`.
   *  \`date1\` The date field to validate. Allowed field types:
      
       *  \`com.atlassian.jira.plugin.system.customfieldtypes:datepicker\`
       *  \`com.atlassian.jira.plugin.system.customfieldtypes:datetime\`
       *  \`com.atlassian.jpo:jpo-custom-field-baseline-end\`
       *  \`com.atlassian.jpo:jpo-custom-field-baseline-start\`
       *  \`duedate\`
       *  \`created\`
       *  \`updated\`
       *  \`resolutiondate\`
   *  \`date2\` The second date field. Required, if \`expression\` is not passed. Allowed field types:
      
       *  \`com.atlassian.jira.plugin.system.customfieldtypes:datepicker\`
       *  \`com.atlassian.jira.plugin.system.customfieldtypes:datetime\`
       *  \`com.atlassian.jpo:jpo-custom-field-baseline-end\`
       *  \`com.atlassian.jpo:jpo-custom-field-baseline-start\`
       *  \`duedate\`
       *  \`created\`
       *  \`updated\`
       *  \`resolutiondate\`
   *  \`expression\` An expression specifying an offset. Required, if \`date2\` is not passed. Offsets are built with a number, with \`-\` as prefix for the past, and one of these time units: \`d\` for day, \`w\` for week, \`m\` for month, or \`y\` for year. For example, -2d means two days into the past and 1w means one week into the future. The \`now\` keyword enables a comparison with the current date.
   *  \`includeTime\` If \`true\`, then the time part of the data is included for the comparison. If the field doesn't have a time part, 00:00:00 is used.
  
  ##### Windows date validator #####
  
  A validator that checks that a date falls on or after a reference date and before or on the reference date plus a number of days.
  
      {
         \\"type\\": \\"WindowsDateValidator\\",
         \\"configuration\\": {
             \\"date1\\": \\"customfield_10009\\",
             \\"date2\\": \\"created\\",
             \\"windowsDays\\": 5
           }
       }
  
   *  \`date1\` The date field to validate. Allowed field types:
      
       *  \`com.atlassian.jira.plugin.system.customfieldtypes:datepicker\`
       *  \`com.atlassian.jira.plugin.system.customfieldtypes:datetime\`
       *  \`com.atlassian.jpo:jpo-custom-field-baseline-end\`
       *  \`com.atlassian.jpo:jpo-custom-field-baseline-start\`
       *  \`duedate\`
       *  \`created\`
       *  \`updated\`
       *  \`resolutiondate\`
   *  \`date2\` The reference date. Allowed field types:
      
       *  \`com.atlassian.jira.plugin.system.customfieldtypes:datepicker\`
       *  \`com.atlassian.jira.plugin.system.customfieldtypes:datetime\`
       *  \`com.atlassian.jpo:jpo-custom-field-baseline-end\`
       *  \`com.atlassian.jpo:jpo-custom-field-baseline-start\`
       *  \`duedate\`
       *  \`created\`
       *  \`updated\`
       *  \`resolutiondate\`
   *  \`windowsDays\` A positive integer indicating a number of days.
  
  ##### Field required validator #####
  
  A validator that checks fields are not empty. By default, if a field is not included in the current context it's ignored and not validated.
  
      {
           \\"type\\": \\"FieldRequiredValidator\\",
           \\"configuration\\": {
               \\"ignoreContext\\": true,
               \\"errorMessage\\": \\"Hey\\",
               \\"fieldIds\\": [
                   \\"versions\\",
                   \\"customfield_10037\\",
                   \\"customfield_10003\\"
               ]
           }
       }
  
   *  \`ignoreContext\` If \`true\`, then the context is ignored and all the fields are validated.
   *  \`errorMessage\` OPTIONAL. The error message displayed when one or more fields are empty. A default error message is shown if an error message is not provided.
   *  \`fieldIds\` The list of fields to validate.
  
  ##### Field changed validator #####
  
  A validator that checks that a field value is changed. However, this validation can be ignored for users from a list of groups.
  
      {
           \\"type\\": \\"FieldChangedValidator\\",
           \\"configuration\\": {
               \\"fieldId\\": \\"comment\\",
               \\"errorMessage\\": \\"Hey\\",
               \\"exemptedGroups\\": [
                   \\"administrators\\",
                   \\"atlassian-addons-admin\\"
               ]
           }
       }
  
   *  \`fieldId\` The ID of a field.
   *  \`errorMessage\` OPTIONAL. The error message displayed if the field is not changed. A default error message is shown if the error message is not provided.
   *  \`exemptedGroups\` OPTIONAL. The list of groups.
  
  ##### Field has single value validator #####
  
  A validator that checks that a multi-select field has only one value. Optionally, the validation can ignore values copied from subtasks.
  
      {
           \\"type\\": \\"FieldHasSingleValueValidator\\",
           \\"configuration\\": {
               \\"fieldId\\": \\"attachment,
               \\"excludeSubtasks\\": true
           }
       }
  
   *  \`fieldId\` The ID of a field.
   *  \`excludeSubtasks\` If \`true\`, then values copied from subtasks are ignored.
  
  ##### Parent status validator #####
  
  A validator that checks the status of the parent issue of a subtask. Ìf the issue is not a subtask, no validation is performed.
  
      {
           \\"type\\": \\"ParentStatusValidator\\",
           \\"configuration\\": {
               \\"parentStatuses\\": [
                   {
                     \\"id\\":\\"1\\"
                   },
                   {
                     \\"id\\":\\"2\\"
                   }
               ]
           }
       }
  
   *  \`parentStatus\` The list of required parent issue statuses.
  
  ##### Permission validator #####
  
  A validator that checks the user has a permission.
  
      {
         \\"type\\": \\"PermissionValidator\\",
         \\"configuration\\": {
             \\"permissionKey\\": \\"ADMINISTER_PROJECTS\\"
         }
       }
  
   *  \`permissionKey\` The permission required to perform the transition. Allowed values: [built-in](https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-permission-schemes/#built-in-permissions) or app defined permissions.
  
  ##### Previous status validator #####
  
  A validator that checks if the issue has held a status.
  
      {
         \\"type\\": \\"PreviousStatusValidator\\",
         \\"configuration\\": {
             \\"mostRecentStatusOnly\\": false,
             \\"previousStatus\\": {
                 \\"id\\": \\"15\\"
             }
         }
       }
  
   *  \`mostRecentStatusOnly\` If \`true\`, then only the issue's preceding status (the one immediately before the current status) is checked.
   *  \`previousStatus\` An object containing the ID of an issue status.
  
  ##### Regular expression validator #####
  
  A validator that checks the content of a field against a regular expression.
  
      {
         \\"type\\": \\"RegexpFieldValidator\\",
         \\"configuration\\": {
             \\"regExp\\": \\"[0-9]\\",
             \\"fieldId\\": \\"customfield_10029\\"
         }
       }
  
   *  \`regExp\`A regular expression.
   *  \`fieldId\` The ID of a field. Allowed field types:
      
       *  \`com.atlassian.jira.plugin.system.customfieldtypes:select\`
       *  \`com.atlassian.jira.plugin.system.customfieldtypes:multiselect\`
       *  \`com.atlassian.jira.plugin.system.customfieldtypes:radiobuttons\`
       *  \`com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes\`
       *  \`com.atlassian.jira.plugin.system.customfieldtypes:textarea\`
       *  \`com.atlassian.jira.plugin.system.customfieldtypes:textfield\`
       *  \`com.atlassian.jira.plugin.system.customfieldtypes:url\`
       *  \`com.atlassian.jira.plugin.system.customfieldtypes:float\`
       *  \`com.pyxis.greenhopper.jira:jsw-story-points\`
       *  \`com.pyxis.greenhopper.jira:gh-epic-status\`
       *  \`description\`
       *  \`summary\`
  
  ##### User permission validator #####
  
  A validator that checks if a user has a permission. Obsolete. You may encounter this validator when getting transition rules and can pass it when updating or creating rules, for example, when you want to duplicate the rules from a workflow on a new workflow.
  
      {
           \\"type\\": \\"UserPermissionValidator\\",
           \\"configuration\\": {
               \\"permissionKey\\": \\"BROWSE_PROJECTS\\",
               \\"nullAllowed\\": false,
               \\"username\\": \\"TestUser\\"
           }
       }
  
   *  \`permissionKey\` The permission to be validated. Allowed values: [built-in](https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-permission-schemes/#built-in-permissions) or app defined permissions.
   *  \`nullAllowed\` If \`true\`, allows the transition when \`username\` is empty.
   *  \`username\` The username to validate against the \`permissionKey\`.
  
  #### Post functions ####
  
  Post functions carry out any additional processing required after a Jira workflow transition is executed.
  
  ##### Fire issue event function #####
  
  A post function that fires an event that is processed by the listeners.
  
      {
         \\"type\\": \\"FireIssueEventFunction\\",
         \\"configuration\\": {
           \\"event\\": {
             \\"id\\":\\"1\\"
           }
         }
       }
  
  **Note:** If provided, this post function overrides the default \`FireIssueEventFunction\`. Can be included once in a transition.
  
   *  \`event\` An object containing the ID of the issue event.
  
  ##### Update issue status #####
  
  A post function that sets issue status to the linked status of the destination workflow status.
  
      {
         \\"type\\": \\"UpdateIssueStatusFunction\\"
       }
  
  **Note:** This post function is a default function in global and directed transitions. It can only be added to the initial transition and can only be added once.
  
  ##### Create comment #####
  
  A post function that adds a comment entered during the transition to an issue.
  
      {
         \\"type\\": \\"CreateCommentFunction\\"
       }
  
  **Note:** This post function is a default function in global and directed transitions. It can only be added to the initial transition and can only be added once.
  
  ##### Store issue #####
  
  A post function that stores updates to an issue.
  
      {
         \\"type\\": \\"IssueStoreFunction\\"
       }
  
  **Note:** This post function can only be added to the initial transition and can only be added once.
  
  ##### Assign to current user function #####
  
  A post function that assigns the issue to the current user if the current user has the \`ASSIGNABLE_USER\` permission.
  
      {
           \\"type\\": \\"AssignToCurrentUserFunction\\"
       }
  
  **Note:** This post function can be included once in a transition.
  
  ##### Assign to lead function #####
  
  A post function that assigns the issue to the project or component lead developer.
  
      {
           \\"type\\": \\"AssignToLeadFunction\\"
       }
  
  **Note:** This post function can be included once in a transition.
  
  ##### Assign to reporter function #####
  
  A post function that assigns the issue to the reporter.
  
      {
           \\"type\\": \\"AssignToReporterFunction\\"
       }
  
  **Note:** This post function can be included once in a transition.
  
  ##### Clear field value function #####
  
  A post function that clears the value from a field.
  
      {
         \\"type\\": \\"ClearFieldValuePostFunction\\",
         \\"configuration\\": {
           \\"fieldId\\": \\"assignee\\"
         }
       }
  
   *  \`fieldId\` The ID of the field.
  
  ##### Copy value from other field function #####
  
  A post function that copies the value of one field to another, either within an issue or from parent to subtask.
  
      {
         \\"type\\": \\"CopyValueFromOtherFieldPostFunction\\",
         \\"configuration\\": {
           \\"sourceFieldId\\": \\"assignee\\",
           \\"destinationFieldId\\": \\"creator\\",
           \\"copyType\\": \\"same\\"
         }
       }
  
   *  \`sourceFieldId\` The ID of the source field.
   *  \`destinationFieldId\` The ID of the destination field.
   *  \`copyType\` Use \`same\` to copy the value from a field inside the issue, or \`parent\` to copy the value from the parent issue.
  
  ##### Create Crucible review workflow function #####
  
  A post function that creates a Crucible review for all unreviewed code for the issue.
  
      {
           \\"type\\": \\"CreateCrucibleReviewWorkflowFunction\\"
       }
  
  **Note:** This post function can be included once in a transition.
  
  ##### Set issue security level based on user's project role function #####
  
  A post function that sets the issue's security level if the current user has a project role.
  
      {
         \\"type\\": \\"SetIssueSecurityFromRoleFunction\\",
         \\"configuration\\": {
           \\"projectRole\\": {
               \\"id\\":\\"10002\\"
           },
           \\"issueSecurityLevel\\": {
               \\"id\\":\\"10000\\"
           }
         }
       }
  
   *  \`projectRole\` An object containing the ID of the project role.
   *  \`issueSecurityLevel\` OPTIONAL. The object containing the ID of the security level. If not passed, then the security level is set to \`none\`.
  
  ##### Trigger a webhook function #####
  
  A post function that triggers a webhook.
  
      {
         \\"type\\": \\"TriggerWebhookFunction\\",
         \\"configuration\\": {
           \\"webhook\\": {
             \\"id\\": \\"1\\"
           }
         }
       }
  
   *  \`webhook\` An object containing the ID of the webhook listener to trigger.
  
  ##### Update issue custom field function #####
  
  A post function that updates the content of an issue custom field.
  
      {
         \\"type\\": \\"UpdateIssueCustomFieldPostFunction\\",
         \\"configuration\\": {
           \\"mode\\": \\"append\\",
           \\"fieldId\\": \\"customfield_10003\\",
           \\"fieldValue\\": \\"yikes\\"
         }
       }
  
   *  \`mode\` Use \`replace\` to override the field content with \`fieldValue\` or \`append\` to add \`fieldValue\` to the end of the field content.
   *  \`fieldId\` The ID of the field.
   *  \`fieldValue\` The update content.
  
  ##### Update issue field function #####
  
  A post function that updates a simple issue field.
  
      {
         \\"type\\": \\"UpdateIssueFieldFunction\\",
         \\"configuration\\": {
           \\"fieldId\\": \\"assignee\\",
           \\"fieldValue\\": \\"5f0c277e70b8a90025a00776\\"
         }
       }
  
   *  \`fieldId\` The ID of the field. Allowed field types:
      
       *  \`assignee\`
       *  \`description\`
       *  \`environment\`
       *  \`priority\`
       *  \`resolution\`
       *  \`summary\`
       *  \`timeoriginalestimate\`
       *  \`timeestimate\`
       *  \`timespent\`
   *  \`fieldValue\` The update value.
   *  If the \`fieldId\` is \`assignee\`, the \`fieldValue\` should be one of these values:
      
       *  an account ID.
       *  \`automatic\`.
       *  a blank string, which sets the value to \`unassigned\`.
  
  #### Connect rules ####
  
  Connect rules are conditions, validators, and post functions of a transition that are registered by Connect apps. To create a rule registered by the app, the app must be enabled and the rule's module must exist.
  
      {
         \\"type\\": \\"appKey__moduleKey\\",
         \\"configuration\\": {
           \\"value\\":\\"{\\\\\\"isValid\\\\\\":\\\\\\"true\\\\\\"}\\"
         }
       }
  
   *  \`type\` A Connect rule key in a form of \`appKey__moduleKey\`.
   *  \`value\` The stringified JSON configuration of a Connect rule.
  
  #### Forge rules ####
  
  Forge transition rules are not yet supported.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  createWorkflow(input: CreateWorkflowDetails_Input!): createWorkflow_response

  \\"\\"\\"
  Creates a workflow scheme.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  createWorkflowScheme(input: WorkflowScheme_Input): WorkflowScheme

  \\"\\"\\"
  Create a draft workflow scheme from an active workflow scheme, by copying the active workflow scheme. Note that an active workflow scheme can only have one draft workflow scheme.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  createWorkflowSchemeDraftFromParent(id: Int!): WorkflowScheme

  \\"\\"\\"
  Adds a property to a workflow transition. Transition properties are used to change the behavior of a transition. For more information, see [Transition properties](https://confluence.atlassian.com/x/zIhKLg#Advancedworkflowconfiguration-transitionproperties) and [Workflow properties](https://confluence.atlassian.com/x/JYlKLg).
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  createWorkflowTransitionProperty(input: WorkflowTransitionProperty_Input, key: String!, transitionId: Int!, workflowMode: String, workflowName: String!): WorkflowTransitionProperty

  \\"\\"\\"
  Deletes actors from a project role for the project.
  
  To remove default actors from the project role, use [Delete default actors from project role](#api-rest-api-3-role-id-actors-delete).
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project or *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  deleteActor(group: String, groupId: String, id: Int!, projectIdOrKey: String!, user: String): Void

  \\"\\"\\"
  Deletes a project version.
  
  Alternative versions can be provided to update issues that use the deleted version in \`fixVersion\`, \`affectedVersion\`, or any version picker custom fields. If alternatives are not provided, occurrences of \`fixVersion\`, \`affectedVersion\`, and any version picker custom field, that contain the deleted version, are cleared. Any replacement version must be in the same project as the version being deleted and cannot be the version being deleted.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) or *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that contains the version.
  \\"\\"\\"
  deleteAndReplaceVersion(id: String!, input: DeleteAndReplaceVersionBean_Input): Any

  \\"\\"\\"
  Deletes an avatar from a project or issue type.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  deleteAvatar(id: Int!, owningObjectId: String!, type: String!): Void

  \\"\\"\\"
  Deletes a comment.
  
  **[Permissions](#permissions) required:**
  
   *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue containing the comment is in.
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
   *  *Delete all comments*[ project permission](https://confluence.atlassian.com/x/yodKLg) to delete any comment or *Delete own comments* to delete comment created by the user,
   *  If the comment has visibility restrictions, the user belongs to the group or has the role visibility is restricted to.
  \\"\\"\\"
  deleteComment(id: String!, issueIdOrKey: String!): Void

  \\"\\"\\"
  Deletes a comment property.
  
  **[Permissions](#permissions) required:** either of:
  
   *  *Edit All Comments* [project permission](https://confluence.atlassian.com/x/yodKLg) to delete a property from any comment.
   *  *Edit Own Comments* [project permission](https://confluence.atlassian.com/x/yodKLg) to delete a property from a comment created by the user.
  
  Also, when the visibility of a comment is restricted to a role or group the user must be a member of that role or group.
  \\"\\"\\"
  deleteCommentProperty(commentId: String!, propertyKey: String!): Void

  \\"\\"\\"
  Deletes a component.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing the component or *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  deleteComponent(id: String!, moveIssuesTo: String): Void

  \\"\\"\\"
  Deletes a custom field. The custom field is deleted whether it is in the trash or not. See [Edit or delete a custom field](https://confluence.atlassian.com/x/Z44fOw) for more information on trashing and deleting custom fields.
  
  This operation is [asynchronous](#async). Follow the \`location\` link in the response to determine the status of the task and use [Get task](#api-rest-api-3-task-taskId-get) to obtain subsequent updates.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  deleteCustomField(id: String!): deleteCustomField_response

  \\"\\"\\"
  Deletes a [ custom field context](https://confluence.atlassian.com/adminjiracloud/what-are-custom-field-contexts-991923859.html).
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  deleteCustomFieldContext(contextId: Int!, fieldId: String!): deleteCustomFieldContext_response

  \\"\\"\\"
  Deletes a custom field option.
  
  Options with cascading options cannot be deleted without deleting the cascading options first.
  
  This operation works for custom field options created in Jira or the operations from this resource. **To work with issue field select list options created for Connect apps use the [Issue custom field options (apps)](#api-group-issue-custom-field-options--apps-) operations.**
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  deleteCustomFieldOption(contextId: Int!, fieldId: String!, optionId: Int!): deleteCustomFieldOption_response

  \\"\\"\\"
  Deletes a dashboard.
  
  **[Permissions](#permissions) required:** None
  
  The dashboard to be deleted must be owned by the user.
  \\"\\"\\"
  deleteDashboard(id: String!): deleteDashboard_response

  \\"\\"\\"
  Deletes a dashboard item property.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** The user must be the owner of the dashboard. Note, users with the *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) are considered owners of the System dashboard.
  \\"\\"\\"
  deleteDashboardItemProperty(dashboardId: String!, itemId: String!, propertyKey: String!): Void

  \\"\\"\\"
  Resets the default workflow for a workflow scheme. That is, the default workflow is set to Jira's system workflow (the *jira* workflow).
  
  Note that active workflow schemes cannot be edited. If the workflow scheme is active, set \`updateDraftIfNeeded\` to \`true\` and a draft workflow scheme is created or updated with the default workflow reset. The draft workflow scheme can be published in Jira.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  deleteDefaultWorkflow(id: Int!, updateDraftIfNeeded: Boolean): WorkflowScheme

  \\"\\"\\"
  Resets the default workflow for a workflow scheme's draft. That is, the default workflow is set to Jira's system workflow (the *jira* workflow).
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  deleteDraftDefaultWorkflow(id: Int!): WorkflowScheme

  \\"\\"\\"
  Deletes the workflow-issue type mapping for a workflow in a workflow scheme's draft.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  deleteDraftWorkflowMapping(id: Int!, workflowName: String!): Any

  \\"\\"\\"
  Removes a filter as a favorite for the user. Note that this operation only removes filters visible to the user from the user's favorites list. For example, if the user favorites a public filter that is subsequently made private (and is therefore no longer visible on their favorites list) they cannot remove it from their favorites list.
  
  **[Permissions](#permissions) required:** Permission to access Jira.
  \\"\\"\\"
  deleteFavouriteForFilter(expand: String, id: Int!): Filter

  \\"\\"\\"
  Deletes a field configuration.
  
  This operation can only delete configurations used in company-managed (classic) projects.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  deleteFieldConfiguration(id: Int!): Any

  \\"\\"\\"
  Deletes a field configuration scheme.
  
  This operation can only delete field configuration schemes used in company-managed (classic) projects.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  deleteFieldConfigurationScheme(id: Int!): Any

  \\"\\"\\"
  Delete a filter.
  
  **[Permissions](#permissions) required:** Permission to access Jira, however filters can only be deleted by the creator of the filter or a user with *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  deleteFilter(id: Int!): Void

  \\"\\"\\"
  Deletes a workflow.
  
  The workflow cannot be deleted if it is:
  
   *  an active workflow.
   *  a system workflow.
   *  associated with any workflow scheme.
   *  associated with any draft workflow scheme.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  deleteInactiveWorkflow(entityId: String!): deleteInactiveWorkflow_response

  \\"\\"\\"
  Deletes an issue.
  
  An issue cannot be deleted if it has one or more subtasks. To delete an issue with subtasks, set \`deleteSubtasks\`. This causes the issue's subtasks to be deleted with the issue.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:**
  
   *  *Browse projects* and *Delete issues* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing the issue.
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
  \\"\\"\\"
  deleteIssue(deleteSubtasks: String, issueIdOrKey: String!): Void

  \\"\\"\\"
  Deletes an option from a select list issue field.
  
  Note that this operation **only works for issue field select list options added by Connect apps**, it cannot be used with issue field select list options created in Jira or using operations from the [Issue custom field options](#api-group-Issue-custom-field-options) resource.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg). Jira permissions are not required for the app providing the field.
  \\"\\"\\"
  deleteIssueFieldOption(fieldKey: String!, optionId: Int!): Any

  \\"\\"\\"
  Deletes an issue link.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:**
  
   *  Browse project [project permission](https://confluence.atlassian.com/x/yodKLg) for all the projects containing the issues in the link.
   *  *Link issues* [project permission](https://confluence.atlassian.com/x/yodKLg) for at least one of the projects containing issues in the link.
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, permission to view both of the issues.
  \\"\\"\\"
  deleteIssueLink(linkId: String!): Void

  \\"\\"\\"
  Deletes an issue link type.
  
  To use this operation, the site must have [issue linking](https://confluence.atlassian.com/x/yoXKM) enabled.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  deleteIssueLinkType(issueLinkTypeId: String!): Void

  \\"\\"\\"
  Deletes an issue's property.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:**
  
   *  *Browse projects* and *Edit issues* [project permissions](https://confluence.atlassian.com/x/yodKLg) for the project containing the issue.
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
  \\"\\"\\"
  deleteIssueProperty(issueIdOrKey: String!, propertyKey: String!): Void

  \\"\\"\\"
  Deletes the issue type. If the issue type is in use, all uses are updated with the alternative issue type (\`alternativeIssueTypeId\`). A list of alternative issue types are obtained from the [Get alternative issue types](#api-rest-api-3-issuetype-id-alternatives-get) resource.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  deleteIssueType(alternativeIssueTypeId: String, id: String!): Void

  \\"\\"\\"
  Deletes the [issue type property](https://developer.atlassian.com/cloud/jira/platform/storing-data-without-a-database/#a-id-jira-entity-properties-a-jira-entity-properties).
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  deleteIssueTypeProperty(issueTypeId: String!, propertyKey: String!): Void

  \\"\\"\\"
  Deletes an issue type scheme.
  
  Only issue type schemes used in classic projects can be deleted.
  
  Any projects assigned to the scheme are reassigned to the default issue type scheme.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  deleteIssueTypeScheme(issueTypeSchemeId: Int!): deleteIssueTypeScheme_response

  \\"\\"\\"
  Deletes an issue type screen scheme.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  deleteIssueTypeScreenScheme(issueTypeScreenSchemeId: String!): deleteIssueTypeScreenScheme_response

  \\"\\"\\"
  Deprecated, use [ Update a user profile](https://developer.atlassian.com/cloud/admin/user-management/rest/#api-users-account-id-manage-profile-patch) from the user management REST API instead.
  
  Deletes the locale of the user, which restores the default setting.
  
  **[Permissions](#permissions) required:** Permission to access Jira.
  \\"\\"\\"
  deleteLocale: Any

  \\"\\"\\"
  Deletes a permission scheme.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  deletePermissionScheme(schemeId: Int!): Void

  \\"\\"\\"
  Deletes a permission grant from a permission scheme. See [About permission schemes and grants](../api-group-permission-schemes/#about-permission-schemes-and-grants) for more details.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  deletePermissionSchemeEntity(permissionId: Int!, schemeId: Int!): Void

  \\"\\"\\"
  Deletes a project.
  
  You can't delete a project if it's archived. To delete an archived project, restore the project and then delete it. To restore a project, use the Jira UI.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  deleteProject(enableUndo: Boolean, projectIdOrKey: String!): Void

  \\"\\"\\"
  Deletes a project asynchronously.
  
  This operation is:
  
   *  transactional, that is, if part of the delete fails the project is not deleted.
   *  [asynchronous](#async). Follow the \`location\` link in the response to determine the status of the task and use [Get task](#api-rest-api-3-task-taskId-get) to obtain subsequent updates.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  deleteProjectAsynchronously(projectIdOrKey: String!): TaskProgressBeanObject

  \\"\\"\\"
  Deletes a custom avatar from a project. Note that system avatars cannot be deleted.
  
  **[Permissions](#permissions) required:** *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg).
  \\"\\"\\"
  deleteProjectAvatar(id: Int!, projectIdOrKey: String!): Void

  \\"\\"\\"
  Deletes the [property](https://developer.atlassian.com/cloud/jira/platform/storing-data-without-a-database/#a-id-jira-entity-properties-a-jira-entity-properties) from a project.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) or *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing the property.
  \\"\\"\\"
  deleteProjectProperty(projectIdOrKey: String!, propertyKey: String!): Void

  \\"\\"\\"
  Deletes a project role. You must specify a replacement project role if you wish to delete a project role that is in use.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  deleteProjectRole(id: Int!, swap: Int): Void

  \\"\\"\\"
  Deletes the [default actors](#api-rest-api-3-resolution-get) from a project role. You may delete a group or user, but you cannot delete a group and a user in the same request.
  
  Changing a project role's default actors does not affect project role members for projects already created.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  deleteProjectRoleActorsFromRole(group: String, groupId: String, id: Int!, user: String): ProjectRole3

  \\"\\"\\"
  Deletes the remote issue link from the issue using the link's global ID. Where the global ID includes reserved URL characters these must be escaped in the request. For example, pass \`system=http://www.mycompany.com/support&id=1\` as \`system%3Dhttp%3A%2F%2Fwww.mycompany.com%2Fsupport%26id%3D1\`.
  
  This operation requires [issue linking to be active](https://confluence.atlassian.com/x/yoXKM).
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:**
  
   *  *Browse projects* and *Link issues* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is implemented, issue-level security permission to view the issue.
  \\"\\"\\"
  deleteRemoteIssueLinkByGlobalId(globalId: String!, issueIdOrKey: String!): Void

  \\"\\"\\"
  Deletes a remote issue link from an issue.
  
  This operation requires [issue linking to be active](https://confluence.atlassian.com/x/yoXKM).
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:**
  
   *  *Browse projects*, *Edit issues*, and *Link issues* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
  \\"\\"\\"
  deleteRemoteIssueLinkById(issueIdOrKey: String!, linkId: String!): Void

  \\"\\"\\"
  Deletes a screen. A screen cannot be deleted if it is used in a screen scheme, workflow, or workflow draft.
  
  Only screens used in classic projects can be deleted.
  \\"\\"\\"
  deleteScreen(screenId: Int!): deleteScreen_response

  \\"\\"\\"
  Deletes a screen scheme. A screen scheme cannot be deleted if it is used in an issue type screen scheme.
  
  Only screens schemes used in classic projects can be deleted.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  deleteScreenScheme(screenSchemeId: String!): deleteScreenScheme_response

  \\"\\"\\"
  Deletes a screen tab.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  deleteScreenTab(screenId: Int!, tabId: Int!): Void

  \\"\\"\\"
  Deletes a share permission from a filter.
  
  **[Permissions](#permissions) required:** Permission to access Jira and the user must own the filter.
  \\"\\"\\"
  deleteSharePermission(id: Int!, permissionId: Int!): Void

  \\"\\"\\"
  Deletes statuses by ID.
  
  **[Permissions](#permissions) required:**
  
   *  *Administer projects* [project permission.](https://confluence.atlassian.com/x/yodKLg)
   *  *Administer Jira* [project permission.](https://confluence.atlassian.com/x/yodKLg)
  \\"\\"\\"
  deleteStatusesById(id: ID): updateStatuses_400_response

  \\"\\"\\"
  Deletes a UI modification. All the contexts that belong to the UI modification are deleted too. UI modification can only be deleted by Forge apps.
  
  **[Permissions](#permissions) required:** None.
  \\"\\"\\"
  deleteUiModification(uiModificationId: String!): Any

  \\"\\"\\"
  Deletes a property from a user.
  
  Note: This operation does not access the [user properties](https://confluence.atlassian.com/x/8YxjL) created and maintained in Jira.
  
  **[Permissions](#permissions) required:**
  
   *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg), to delete a property from any user.
   *  Access to Jira, to delete a property from the calling user's record.
  \\"\\"\\"
  deleteUserProperty(accountId: String, propertyKey: String!, userKey: String, username: String): Void

  \\"\\"\\"
  Deletes a project version.
  
  Deprecated, use [ Delete and replace version](#api-rest-api-3-version-id-removeAndSwap-post) that supports swapping version values in custom fields, in addition to the swapping for \`fixVersion\` and \`affectedVersion\` provided in this resource.
  
  Alternative versions can be provided to update issues that use the deleted version in \`fixVersion\` or \`affectedVersion\`. If alternatives are not provided, occurrences of \`fixVersion\` and \`affectedVersion\` that contain the deleted version are cleared.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) or *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that contains the version.
  \\"\\"\\"
  deleteVersion(id: String!, moveAffectedIssuesTo: String, moveFixIssuesTo: String): Void

  \\"\\"\\"
  Removes webhooks by ID. Only webhooks registered by the calling app are removed. If webhooks created by other apps are specified, they are ignored.
  
  **[Permissions](#permissions) required:** Only [Connect](https://developer.atlassian.com/cloud/jira/platform/#connect-apps) and [OAuth 2.0](https://developer.atlassian.com/cloud/jira/platform/oauth-2-3lo-apps) apps can use this operation.
  \\"\\"\\"
  deleteWebhookById(input: ContainerForWebhookIDs_Input!): deleteWebhookById_response

  \\"\\"\\"
  Deletes the workflow-issue type mapping for a workflow in a workflow scheme.
  
  Note that active workflow schemes cannot be edited. If the workflow scheme is active, set \`updateDraftIfNeeded\` to \`true\` and a draft workflow scheme is created or updated with the workflow-issue type mapping deleted. The draft workflow scheme can be published in Jira.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  deleteWorkflowMapping(id: Int!, updateDraftIfNeeded: Boolean, workflowName: String!): Any

  \\"\\"\\"
  Deletes a workflow scheme. Note that a workflow scheme cannot be deleted if it is active (that is, being used by at least one project).
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  deleteWorkflowScheme(id: Int!): Any

  \\"\\"\\"
  Deletes a draft workflow scheme.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  deleteWorkflowSchemeDraft(id: Int!): Void

  \\"\\"\\"
  Deletes the issue type-workflow mapping for an issue type in a workflow scheme's draft.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  deleteWorkflowSchemeDraftIssueType(id: Int!, issueType: String!): WorkflowScheme

  \\"\\"\\"
  Deletes the issue type-workflow mapping for an issue type in a workflow scheme.
  
  Note that active workflow schemes cannot be edited. If the workflow scheme is active, set \`updateDraftIfNeeded\` to \`true\` and a draft workflow scheme is created or updated with the issue type-workflow mapping deleted. The draft workflow scheme can be published in Jira.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  deleteWorkflowSchemeIssueType(id: Int!, issueType: String!, updateDraftIfNeeded: Boolean): WorkflowScheme

  \\"\\"\\"
  Deletes a property from a workflow transition. Transition properties are used to change the behavior of a transition. For more information, see [Transition properties](https://confluence.atlassian.com/x/zIhKLg#Advancedworkflowconfiguration-transitionproperties) and [Workflow properties](https://confluence.atlassian.com/x/JYlKLg).
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  deleteWorkflowTransitionProperty(key: String!, transitionId: Int!, workflowMode: String, workflowName: String!): Any

  \\"\\"\\"
  Deletes workflow transition rules from one or more workflows. These rule types are supported:
  
   *  [post functions](https://developer.atlassian.com/cloud/jira/platform/modules/workflow-post-function/)
   *  [conditions](https://developer.atlassian.com/cloud/jira/platform/modules/workflow-condition/)
   *  [validators](https://developer.atlassian.com/cloud/jira/platform/modules/workflow-validator/)
  
  Only rules created by the calling Connect app can be deleted.
  
  **[Permissions](#permissions) required:** Only Connect apps can use this operation.
  \\"\\"\\"
  deleteWorkflowTransitionRuleConfigurations(input: WorkflowsWithTransitionRulesDetails_Input!): deleteWorkflowTransitionRuleConfigurations_response

  \\"\\"\\"
  Deletes a worklog from an issue.
  
  Time tracking must be enabled in Jira, otherwise this operation returns an error. For more information, see [Configuring time tracking](https://confluence.atlassian.com/x/qoXKM).
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:**
  
   *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
   *  *Delete all worklogs*[ project permission](https://confluence.atlassian.com/x/yodKLg) to delete any worklog or *Delete own worklogs* to delete worklogs created by the user,
   *  If the worklog has visibility restrictions, belongs to the group or has the role visibility is restricted to.
  \\"\\"\\"
  deleteWorklog(adjustEstimate: String, id: String!, increaseBy: String, issueIdOrKey: String!, newEstimate: String, notifyUsers: Boolean, overrideEditableFlag: Boolean): Void

  \\"\\"\\"
  Deletes a worklog property.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:**
  
   *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
   *  If the worklog has visibility restrictions, belongs to the group or has the role visibility is restricted to.
  \\"\\"\\"
  deleteWorklogProperty(issueIdOrKey: String!, propertyKey: String!, worklogId: String!): Void

  \\"\\"\\"
  Performs an issue transition and, if the transition has a screen, updates the fields from the transition screen.
  
  sortByCategory To update the fields on the transition screen, specify the fields in the \`fields\` or \`update\` parameters in the request body. Get details about the fields using [ Get transitions](#api-rest-api-3-issue-issueIdOrKey-transitions-get) with the \`transitions.fields\` expand.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:**
  
   *  *Browse projects* and *Transition issues* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
  \\"\\"\\"
  doTransition(input: IssueUpdateDetails_Input, issueIdOrKey: String!): Any

  \\"\\"\\"
  Edits an issue. A transition may be applied and issue properties updated as part of the edit.
  
  The edits to the issue's fields are defined using \`update\` and \`fields\`. The fields that can be edited are determined using [ Get edit issue metadata](#api-rest-api-3-issue-issueIdOrKey-editmeta-get).
  
  The parent field may be set by key or ID. For standard issue types, the parent may be removed by setting \`update.parent.set.none\` to *true*. Note that the \`description\`, \`environment\`, and any \`textarea\` type custom fields (multi-line text fields) take Atlassian Document Format content. Single line custom fields (\`textfield\`) accept a string and don't handle Atlassian Document Format content.
  
  Connect apps having an app user with *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg), and Forge apps acting on behalf of users with *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg), can override the screen security configuration using \`overrideScreenSecurity\` and \`overrideEditableFlag\`.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:**
  
   *  *Browse projects* and *Edit issues* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
  \\"\\"\\"
  editIssue(input: IssueUpdateDetails_Input, issueIdOrKey: String!, notifyUsers: Boolean, overrideEditableFlag: Boolean, overrideScreenSecurity: Boolean): Any

  \\"\\"\\"
  Evaluates a Jira expression and returns its value.
  
  This resource can be used to test Jira expressions that you plan to use elsewhere, or to fetch data in a flexible way. Consult the [Jira expressions documentation](https://developer.atlassian.com/cloud/jira/platform/jira-expressions/) for more details.
  
  #### Context variables ####
  
  The following context variables are available to Jira expressions evaluated by this resource. Their presence depends on various factors; usually you need to manually request them in the context object sent in the payload, but some of them are added automatically under certain conditions.
  
   *  \`user\` ([User](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#user)): The current user. Always available and equal to \`null\` if the request is anonymous.
   *  \`app\` ([App](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#app)): The [Connect app](https://developer.atlassian.com/cloud/jira/platform/index/#connect-apps) that made the request. Available only for authenticated requests made by Connect Apps (read more here: [Authentication for Connect apps](https://developer.atlassian.com/cloud/jira/platform/security-for-connect-apps/)).
   *  \`issue\` ([Issue](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#issue)): The current issue. Available only when the issue is provided in the request context object.
   *  \`issues\` ([List](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#list) of [Issues](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#issue)): A collection of issues matching a JQL query. Available only when JQL is provided in the request context object.
   *  \`project\` ([Project](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#project)): The current project. Available only when the project is provided in the request context object.
   *  \`sprint\` ([Sprint](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#sprint)): The current sprint. Available only when the sprint is provided in the request context object.
   *  \`board\` ([Board](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#board)): The current board. Available only when the board is provided in the request context object.
   *  \`serviceDesk\` ([ServiceDesk](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#servicedesk)): The current service desk. Available only when the service desk is provided in the request context object.
   *  \`customerRequest\` ([CustomerRequest](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#customerrequest)): The current customer request. Available only when the customer request is provided in the request context object.
  
  Also, custom context variables can be passed in the request with their types. Those variables can be accessed by key in the Jira expression. These variable types are available for use in a custom context:
  
   *  \`user\`: A [user](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#user) specified as an Atlassian account ID.
   *  \`issue\`: An [issue](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#issue) specified by ID or key. All the fields of the issue object are available in the Jira expression.
   *  \`json\`: A JSON object containing custom content.
   *  \`list\`: A JSON list of \`user\`, \`issue\`, or \`json\` variable types.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required**: None. However, an expression may return different results for different users depending on their permissions. For example, different users may see different comments on the same issue.  
  Permission to access Jira Software is required to access Jira Software context variables (\`board\` and \`sprint\`) or fields (for example, \`issue.sprint\`).
  \\"\\"\\"
  evaluateJiraExpression(expand: String, input: JiraExpressionEvalRequestBean_Input!): evaluateJiraExpression_response

  \\"\\"\\"
  Updates the project role's name and description. You must include both a name and a description in the request.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  fullyUpdateProjectRole(id: Int!, input: CreateUpdateRoleRequestBean_Input): ProjectRole3

  \\"\\"\\"
  Returns reference data for JQL searches. This is a downloadable version of the documentation provided in [Advanced searching - fields reference](https://confluence.atlassian.com/x/gwORLQ) and [Advanced searching - functions reference](https://confluence.atlassian.com/x/hgORLQ), along with a list of JQL-reserved words. Use this information to assist with the programmatic creation of JQL queries or the validation of queries built in a custom query builder.
  
  This operation can filter the custom fields returned by project. Invalid project IDs in \`projectIds\` are ignored. System fields are always returned.
  
  It can also return the collapsed field for custom fields. Collapsed fields enable searches to be performed across all fields with the same name and of the same field type. For example, the collapsed field \`Component - Component[Dropdown]\` enables dropdown fields \`Component - cf[10061]\` and \`Component - cf[10062]\` to be searched simultaneously.
  
  **[Permissions](#permissions) required:** None.
  \\"\\"\\"
  getAutoCompletePost(input: SearchAutoCompleteFilter_Input): JQLReferenceData

  \\"\\"\\"
  Returns:
  
   *  for a list of global permissions, the global permissions granted to a user.
   *  for a list of project permissions and lists of projects and issues, for each project permission a list of the projects and issues a user can access or manipulate.
  
  If no account ID is provided, the operation returns details for the logged in user.
  
  Note that:
  
   *  Invalid project and issue IDs are ignored.
   *  A maximum of 1000 projects and 1000 issues can be checked.
   *  Null values in \`globalPermissions\`, \`projectPermissions\`, \`projectPermissions.projects\`, and \`projectPermissions.issues\` are ignored.
   *  Empty strings in \`projectPermissions.permissions\` are ignored.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) to check the permissions for other users, otherwise none. However, Connect apps can make a call from the app server to the product to obtain permission details for any user, without admin permission. This Connect app ability doesn't apply to calls made using AP.request() in a browser.
  \\"\\"\\"
  getBulkPermissions(input: BulkPermissionsRequestBean_Input): getBulkPermissions_response

  \\"\\"\\"
  Returns changelogs for an issue specified by a list of changelog IDs.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:**
  
   *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
  \\"\\"\\"
  getChangeLogsByIds(input: IssueChangelogIds_Input!, issueIdOrKey: String!): PageOfChangelogs2

  \\"\\"\\"
  Returns a [paginated](#pagination) list of comments specified by a list of comment IDs.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** Comments are returned where the user:
  
   *  has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing the comment.
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
   *  If the comment has visibility restrictions, belongs to the group or has the role visibility is restricted to.
  \\"\\"\\"
  getCommentsByIds(expand: String, input: IssueCommentListRequestBean_Input!): PageBeanComment

  \\"\\"\\"
  Returns a [paginated](#pagination) list of project and issue type mappings and, for each mapping, the ID of a [custom field context](https://confluence.atlassian.com/x/k44fOw) that applies to the project and issue type.
  
  If there is no custom field context assigned to the project then, if present, the custom field context that applies to all projects is returned if it also applies to the issue type or all issue types. If a custom field context is not found, the returned custom field context ID is \`null\`.
  
  Duplicate project and issue type mappings cannot be provided in the request.
  
  The order of the returned values is the same as provided in the request.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getCustomFieldContextsForProjectsAndIssueTypes(fieldId: String!, input: ProjectIssueTypeMappings_Input!, maxResults: Int, startAt: Int): getCustomFieldContextsForProjectsAndIssueTypes_response

  \\"\\"\\"
  Returns, for the user, details of the watched status of issues from a list. If an issue ID is invalid, the returned watched status is \`false\`.
  
  This operation requires the **Allow users to watch issues** option to be *ON*. This option is set in General configuration for Jira. See [Configuring Jira application options](https://confluence.atlassian.com/x/uYXKM) for details.
  
  **[Permissions](#permissions) required:**
  
   *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
  \\"\\"\\"
  getIsWatchingIssueBulk(input: IssueList_Input!): BulkIssueIsWatching

  \\"\\"\\"
  Returns all the projects where the user is granted a list of project permissions.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** None.
  \\"\\"\\"
  getPermittedProjects(input: PermissionsKeysBean_Input!): PermittedProjects

  \\"\\"\\"
  Returns worklog details for a list of worklog IDs.
  
  The returned list of worklogs is limited to 1000 items.
  
  **[Permissions](#permissions) required:** Permission to access Jira, however, worklogs are only returned where either of the following is true:
  
   *  the worklog is set as *Viewable by All Users*.
   *  the user is a member of a project role or group with permission to view the worklog.
  \\"\\"\\"
  getWorklogsForIds(expand: String, input: WorklogIdsRequestBean_Input!): [Worklog]

  \\"\\"\\"
  Creates a link between two issues. Use this operation to indicate a relationship between two issues and optionally add a comment to the from (outward) issue. To use this resource the site must have [Issue Linking](https://confluence.atlassian.com/x/yoXKM) enabled.
  
  This resource returns nothing on the creation of an issue link. To obtain the ID of the issue link, use \`https://your-domain.atlassian.net/rest/api/3/issue/[linked issue key]?fields=issuelinks\`.
  
  If the link request duplicates a link, the response indicates that the issue link was created. If the request included a comment, the comment is added.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:**
  
   *  *Browse project* [project permission](https://confluence.atlassian.com/x/yodKLg) for all the projects containing the issues to be linked,
   *  *Link issues* [project permission](https://confluence.atlassian.com/x/yodKLg) on the project containing the from (outward) issue,
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
   *  If the comment has visibility restrictions, belongs to the group or has the role visibility is restricted to.
  \\"\\"\\"
  linkIssues(input: LinkIssueRequestJsonBean_Input!): Any

  \\"\\"\\"
  Checks whether one or more issues would be returned by one or more JQL queries.
  
  **[Permissions](#permissions) required:** None, however, issues are only matched against JQL queries where the user has:
  
   *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
  \\"\\"\\"
  matchIssues(input: IssuesAndJQLQueries_Input!): IssueMatches

  \\"\\"\\"
  Merges two project versions. The merge is completed by deleting the version specified in \`id\` and replacing any occurrences of its ID in \`fixVersion\` with the version ID specified in \`moveIssuesTo\`.
  
  Consider using [ Delete and replace version](#api-rest-api-3-version-id-removeAndSwap-post) instead. This resource supports swapping version values in \`fixVersion\`, \`affectedVersion\`, and custom fields.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) or *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that contains the version.
  \\"\\"\\"
  mergeVersions(id: String!, moveIssuesTo: String!): Any

  \\"\\"\\"
  Converts one or more JQL queries with user identifiers (username or user key) to equivalent JQL queries with account IDs.
  
  You may wish to use this operation if your system stores JQL queries and you want to make them GDPR-compliant. For more information about GDPR-related changes, see the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/).
  
  **[Permissions](#permissions) required:** Permission to access Jira.
  \\"\\"\\"
  migrateQueries(input: JQLPersonalDataMigrationRequest_Input): ConvertedJQLQueries

  \\"\\"\\"
  Moves a screen tab.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  moveScreenTab(pos: Int!, screenId: Int!, tabId: Int!): Any

  \\"\\"\\"
  Moves a screen tab field.
  
  If \`after\` and \`position\` are provided in the request, \`position\` is ignored.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  moveScreenTabField(id: String!, input: MoveFieldBean_Input, screenId: Int!, tabId: Int!): Any

  \\"\\"\\"
  Modifies the version's sequence within the project, which affects the display order of the versions in Jira.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** *Browse projects* project permission for the project that contains the version.
  \\"\\"\\"
  moveVersion(id: String!, input: VersionMoveBean_Input): Version

  \\"\\"\\"
  Creates an email notification for an issue and adds it to the mail queue.
  
  **[Permissions](#permissions) required:**
  
   *  *Browse Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
  \\"\\"\\"
  notify(input: Notification_Input, issueIdOrKey: String!): Any

  \\"\\"\\"
  Parses and validates JQL queries.
  
  Validation is performed in context of the current user.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** None.
  \\"\\"\\"
  parseJqlQueries(input: JqlQueriesToParse_Input!, validation: String): parseJqlQueries_response

  \\"\\"\\"
  Updates either the project role's name or its description.
  
  You cannot update both the name and description at the same time using this operation. If you send a request with a name and a description only the name is updated.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  partialUpdateProjectRole(id: Int!, input: CreateUpdateRoleRequestBean_Input): ProjectRole3

  \\"\\"\\"
  Publishes a draft workflow scheme.
  
  Where the draft workflow includes new workflow statuses for an issue type, mappings are provided to update issues with the original workflow status to the new workflow status.
  
  This operation is [asynchronous](#async). Follow the \`location\` link in the response to determine the status of the task and use [Get task](#api-rest-api-3-task-taskId-get) to obtain updates.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  publishDraftWorkflowScheme(id: Int!, input: PublishDraftWorkflowScheme_Input, validateOnly: Boolean): publishDraftWorkflowScheme_response

  \\"\\"\\"
  Extends the life of webhook. Webhooks registered through the REST API expire after 30 days. Call this operation to keep them alive.
  
  Unrecognized webhook IDs (those that are not found or belong to other apps) are ignored.
  
  **[Permissions](#permissions) required:** Only [Connect](https://developer.atlassian.com/cloud/jira/platform/#connect-apps) and [OAuth 2.0](https://developer.atlassian.com/cloud/jira/platform/oauth-2-3lo-apps) apps can use this operation.
  \\"\\"\\"
  refreshWebhooks(input: ContainerForWebhookIDs_Input!): refreshWebhooks_response

  \\"\\"\\"
  Registers webhooks.
  
  **[Permissions](#permissions) required:** Only [Connect](https://developer.atlassian.com/cloud/jira/platform/#connect-apps) and [OAuth 2.0](https://developer.atlassian.com/cloud/jira/platform/oauth-2-3lo-apps) apps can use this operation.
  \\"\\"\\"
  registerDynamicWebhooks(input: WebhookRegistrationDetails_Input!): registerDynamicWebhooks_response

  \\"\\"\\"
  Deletes an attachment from an issue.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** For the project holding the issue containing the attachment:
  
   *  *Delete own attachments* [project permission](https://confluence.atlassian.com/x/yodKLg) to delete an attachment created by the calling user.
   *  *Delete all attachments* [project permission](https://confluence.atlassian.com/x/yodKLg) to delete an attachment created by any user.
  \\"\\"\\"
  removeAttachment(id: String!): Void

  \\"\\"\\"
  Removes a custom field context from projects.
  
  A custom field context without any projects applies to all projects. Removing all projects from a custom field context would result in it applying to all projects.
  
  If any project in the request is not assigned to the context, or the operation would result in two global contexts for the field, the operation fails.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  removeCustomFieldContextFromProjects(contextId: Int!, fieldId: String!, input: ProjectIds_Input!): removeCustomFieldContextFromProjects_response

  \\"\\"\\"
  Removes a dashboard gadget from a dashboard.
  
  When a gadget is removed from a dashboard, other gadgets in the same column are moved up to fill the emptied position.
  
  **[Permissions](#permissions) required:** None.
  \\"\\"\\"
  removeGadget(dashboardId: Int!, gadgetId: Int!): ErrorCollection

  \\"\\"\\"
  Deletes a group.
  
  **[Permissions](#permissions) required:** Site administration (that is, member of the *site-admin* strategic [group](https://confluence.atlassian.com/x/24xjL)).
  \\"\\"\\"
  removeGroup(groupId: String, groupname: String, swapGroup: String, swapGroupId: String): Any

  \\"\\"\\"
  Removes an issue type from an issue type scheme.
  
  This operation cannot remove:
  
   *  any issue type used by issues.
   *  any issue types from the default issue type scheme.
   *  the last standard issue type from an issue type scheme.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  removeIssueTypeFromIssueTypeScheme(issueTypeId: Int!, issueTypeSchemeId: Int!): removeIssueTypeFromIssueTypeScheme_response

  \\"\\"\\"
  Removes issue types from a custom field context.
  
  A custom field context without any issue types applies to all issue types.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  removeIssueTypesFromContext(contextId: Int!, fieldId: String!, input: IssueTypeIds_Input!): removeIssueTypesFromContext_response

  \\"\\"\\"
  Removes issue types from the field configuration scheme.
  
  This operation can only modify field configuration schemes used in company-managed (classic) projects.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  removeIssueTypesFromGlobalFieldConfigurationScheme(id: Int!, input: IssueTypeIdsToRemove_Input!): removeIssueTypesFromGlobalFieldConfigurationScheme_response

  \\"\\"\\"
  Removes issue type to screen scheme mappings from an issue type screen scheme.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  removeMappingsFromIssueTypeScreenScheme(input: IssueTypeIds_Input!, issueTypeScreenSchemeId: String!): removeMappingsFromIssueTypeScreenScheme_response

  \\"\\"\\"
  Deletes a preference of the user, which restores the default value of system defined settings.
  
  Note that these keys are deprecated:
  
   *  *jira.user.locale* The locale of the user. By default, not set. The user takes the instance locale.
   *  *jira.user.timezone* The time zone of the user. By default, not set. The user takes the instance timezone.
  
  Use [ Update a user profile](https://developer.atlassian.com/cloud/admin/user-management/rest/#api-users-account-id-manage-profile-patch) from the user management REST API to manage timezone and locale instead.
  
  **[Permissions](#permissions) required:** Permission to access Jira.
  \\"\\"\\"
  removePreference(key: String!): Void

  \\"\\"\\"
  Deletes a project category.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  removeProjectCategory(id: Int!): Void

  \\"\\"\\"
  Removes a field from a screen tab.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  removeScreenTabField(id: String!, screenId: Int!, tabId: Int!): Void

  \\"\\"\\"
  Deletes a user. If the operation completes successfully then the user is removed from Jira's user base. This operation does not delete the user's Atlassian account.
  
  **[Permissions](#permissions) required:** Site administration (that is, membership of the *site-admin* [group](https://confluence.atlassian.com/x/24xjL)).
  \\"\\"\\"
  removeUser(accountId: String!, key: String, username: String): Void

  \\"\\"\\"
  Removes a user from a group.
  
  **[Permissions](#permissions) required:** Site administration (that is, member of the *site-admin* [group](https://confluence.atlassian.com/x/24xjL)).
  \\"\\"\\"
  removeUserFromGroup(accountId: String!, groupId: String, groupname: String, username: String): Any

  \\"\\"\\"
  Deletes a user's vote from an issue. This is the equivalent of the user clicking *Unvote* on an issue in Jira.
  
  This operation requires the **Allow users to vote on issues** option to be *ON*. This option is set in General configuration for Jira. See [Configuring Jira application options](https://confluence.atlassian.com/x/uYXKM) for details.
  
  **[Permissions](#permissions) required:**
  
   *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
  \\"\\"\\"
  removeVote(issueIdOrKey: String!): Void

  \\"\\"\\"
  Deletes a user as a watcher of an issue.
  
  This operation requires the **Allow users to watch issues** option to be *ON*. This option is set in General configuration for Jira. See [Configuring Jira application options](https://confluence.atlassian.com/x/uYXKM) for details.
  
  **[Permissions](#permissions) required:**
  
   *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
   *  To remove users other than themselves from the watchlist, *Manage watcher list* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
  \\"\\"\\"
  removeWatcher(accountId: String, issueIdOrKey: String!, username: String): Void

  \\"\\"\\"
  Updates the name of a screen tab.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  renameScreenTab(input: ScreenableTab_Input2!, screenId: Int!, tabId: Int!): ScreenableTab2

  \\"\\"\\"
  Changes the order of custom field options or cascading options in a context.
  
  This operation works for custom field options created in Jira or the operations from this resource. **To work with issue field select list options created for Connect apps use the [Issue custom field options (apps)](#api-group-issue-custom-field-options--apps-) operations.**
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  reorderCustomFieldOptions(contextId: Int!, fieldId: String!, input: OrderOfCustomFieldOptions_Input!): reorderCustomFieldOptions_response

  \\"\\"\\"
  Changes the order of issue types in an issue type scheme.
  
  The request body parameters must meet the following requirements:
  
   *  all of the issue types must belong to the issue type scheme.
   *  either \`after\` or \`position\` must be provided.
   *  the issue type in \`after\` must not be in the issue type list.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  reorderIssueTypesInIssueTypeScheme(input: OrderOfIssueTypes_Input!, issueTypeSchemeId: Int!): reorderIssueTypesInIssueTypeScheme_response

  \\"\\"\\"
  Deselects an issue-field select-list option from all issues where it is selected. A different option can be selected to replace the deselected option. The update can also be limited to a smaller set of issues by using a JQL query.
  
  Connect and Forge app users with *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) can override the screen security configuration using \`overrideScreenSecurity\` and \`overrideEditableFlag\`.
  
  This is an [asynchronous operation](#async). The response object contains a link to the long-running task.
  
  Note that this operation **only works for issue field select list options added by Connect apps**, it cannot be used with issue field select list options created in Jira or using operations from the [Issue custom field options](#api-group-Issue-custom-field-options) resource.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg). Jira permissions are not required for the app providing the field.
  \\"\\"\\"
  replaceIssueFieldOption(fieldKey: String!, jql: String, optionId: Int!, overrideEditableFlag: Boolean, overrideScreenSecurity: Boolean, replaceWith: Int): replaceIssueFieldOption_response

  \\"\\"\\"
  Reset the user's column configuration for the filter to the default.
  
  **[Permissions](#permissions) required:** Permission to access Jira, however, columns are only reset for:
  
   *  filters owned by the user.
   *  filters shared with a group that the user is a member of.
   *  filters shared with a private project that the user has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for.
   *  filters shared with a public project.
   *  filters shared with the public.
  \\"\\"\\"
  resetColumns(id: Int!): Void

  \\"\\"\\"
  Resets the default [ issue table columns](https://confluence.atlassian.com/x/XYdKLg) for the user to the system default. If \`accountId\` is not passed, the calling user's default columns are reset.
  
  **[Permissions](#permissions) required:**
  
   *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg), to set the columns on any user.
   *  Permission to access Jira, to set the calling user's columns.
  \\"\\"\\"
  resetUserColumns(accountId: String, username: String): Void

  \\"\\"\\"
  Restores a project from the Jira recycle bin.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  restore(projectIdOrKey: String!): Project2

  \\"\\"\\"
  Restores a custom field from trash. See [Edit or delete a custom field](https://confluence.atlassian.com/x/Z44fOw) for more information on trashing and deleting custom fields.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  restoreCustomField(id: String!): restoreCustomField_response

  \\"\\"\\"
  Sanitizes one or more JQL queries by converting readable details into IDs where a user doesn't have permission to view the entity.
  
  For example, if the query contains the clause *project = 'Secret project'*, and a user does not have browse permission for the project \\"Secret project\\", the sanitized query replaces the clause with *project = 12345\\"* (where 12345 is the ID of the project). If a user has the required permission, the clause is not sanitized. If the account ID is null, sanitizing is performed for an anonymous user.
  
  Note that sanitization doesn't make the queries GDPR-compliant, because it doesn't remove user identifiers (username or user key). If you need to make queries GDPR-compliant, use [Convert user identifiers to account IDs in JQL queries](https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-jql/#api-rest-api-3-jql-sanitize-post).
  
  Before sanitization each JQL query is parsed. The queries are returned in the same order that they were passed.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  sanitiseJqlQueries(input: JqlQueriesToSanitize_Input!): sanitiseJqlQueries_response

  \\"\\"\\"
  Searches for issues using [JQL](https://confluence.atlassian.com/x/egORLQ).
  
  There is a [GET](#api-rest-api-3-search-get) version of this resource that can be used for smaller JQL query expressions.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** Issues are included in the response where the user has:
  
   *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing the issue.
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
  \\"\\"\\"
  searchForIssuesUsingJqlPost(input: SearchRequestBean_Input): SearchResults

  \\"\\"\\"
  Selects a time tracking provider.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  selectTimeTrackingImplementation(input: TimeTrackingProvider_Input!): Any

  \\"\\"\\"
  Sets the actors for a project role for a project, replacing all existing actors.
  
  To add actors to the project without overwriting the existing list, use [Add actors to project role](#api-rest-api-3-project-projectIdOrKey-role-id-post).
  
  **[Permissions](#permissions) required:** *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project or *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  setActors(id: Int!, input: ProjectRoleActorsUpdateBean_Input, projectIdOrKey: String!): ProjectRole3

  \\"\\"\\"
  Changes the value of an application property. For example, you can change the value of the \`jira.clone.prefix\` from its default value of *CLONE -* to *Clone -* if you prefer sentence case capitalization. Editable properties are described below along with their default values.
  
  #### Advanced settings ####
  
  The advanced settings below are also accessible in [Jira](https://confluence.atlassian.com/x/vYXKM).
  
  | Key | Description | Default value |  
  | -- | -- | -- |  
  | \`jira.clone.prefix\` | The string of text prefixed to the title of a cloned issue. | \`CLONE -\` |  
  | \`jira.date.picker.java.format\` | The date format for the Java (server-side) generated dates. This must be the same as the \`jira.date.picker.javascript.format\` format setting. | \`d/MMM/yy\` |  
  | \`jira.date.picker.javascript.format\` | The date format for the JavaScript (client-side) generated dates. This must be the same as the \`jira.date.picker.java.format\` format setting. | \`%e/%b/%y\` |  
  | \`jira.date.time.picker.java.format\` | The date format for the Java (server-side) generated date times. This must be the same as the \`jira.date.time.picker.javascript.format\` format setting. | \`dd/MMM/yy h:mm a\` |  
  | \`jira.date.time.picker.javascript.format\` | The date format for the JavaScript (client-side) generated date times. This must be the same as the \`jira.date.time.picker.java.format\` format setting. | \`%e/%b/%y %I:%M %p\` |  
  | \`jira.issue.actions.order\` | The default order of actions (such as *Comments* or *Change history*) displayed on the issue view. | \`asc\` |  
  | \`jira.table.cols.subtasks\` | The columns to show while viewing subtask issues in a table. For example, a list of subtasks on an issue. | \`issuetype, status, assignee, progress\` |  
  | \`jira.view.issue.links.sort.order\` | The sort order of the list of issue links on the issue view. | \`type, status, priority\` |  
  | \`jira.comment.collapsing.minimum.hidden\` | The minimum number of comments required for comment collapsing to occur. A value of \`0\` disables comment collapsing. | \`4\` |  
  | \`jira.newsletter.tip.delay.days\` | The number of days before a prompt to sign up to the Jira Insiders newsletter is shown. A value of \`-1\` disables this feature. | \`7\` |  
  
  
  #### Look and feel ####
  
  The settings listed below adjust the [look and feel](https://confluence.atlassian.com/x/VwCLLg).
  
  | Key | Description | Default value |  
  | -- | -- | -- |  
  | \`jira.lf.date.time\` | The [ time format](https://docs.oracle.com/javase/6/docs/api/index.html?java/text/SimpleDateFormat.html). | \`h:mm a\` |  
  | \`jira.lf.date.day\` | The [ day format](https://docs.oracle.com/javase/6/docs/api/index.html?java/text/SimpleDateFormat.html). | \`EEEE h:mm a\` |  
  | \`jira.lf.date.complete\` | The [ date and time format](https://docs.oracle.com/javase/6/docs/api/index.html?java/text/SimpleDateFormat.html). | \`dd/MMM/yy h:mm a\` |  
  | \`jira.lf.date.dmy\` | The [ date format](https://docs.oracle.com/javase/6/docs/api/index.html?java/text/SimpleDateFormat.html). | \`dd/MMM/yy\` |  
  | \`jira.date.time.picker.use.iso8061\` | When enabled, sets Monday as the first day of the week in the date picker, as specified by the ISO8601 standard. | \`false\` |  
  | \`jira.lf.logo.url\` | The URL of the logo image file. | \`/images/icon-jira-logo.png\` |  
  | \`jira.lf.logo.show.application.title\` | Controls the visibility of the application title on the sidebar. | \`false\` |  
  | \`jira.lf.favicon.url\` | The URL of the favicon. | \`/favicon.ico\` |  
  | \`jira.lf.favicon.hires.url\` | The URL of the high-resolution favicon. | \`/images/64jira.png\` |  
  | \`jira.lf.navigation.bgcolour\` | The background color of the sidebar. | \`#0747A6\` |  
  | \`jira.lf.navigation.highlightcolour\` | The color of the text and logo of the sidebar. | \`#DEEBFF\` |  
  | \`jira.lf.hero.button.base.bg.colour\` | The background color of the hero button. | \`#3b7fc4\` |  
  | \`jira.title\` | The text for the application title. The application title can also be set in *General settings*. | \`Jira\` |  
  | \`jira.option.globalsharing\` | Whether filters and dashboards can be shared with anyone signed into Jira. | \`true\` |  
  | \`xflow.product.suggestions.enabled\` | Whether to expose product suggestions for other Atlassian products within Jira. | \`true\` |  
  
  
  #### Other settings ####
  
  | Key | Description | Default value |  
  | -- | -- | -- |  
  | \`jira.issuenav.criteria.autoupdate\` | Whether instant updates to search criteria is active. | \`true\` |  
  
  
  *Note: Be careful when changing [application properties and advanced settings](https://confluence.atlassian.com/x/vYXKM).*
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  setApplicationProperty(id: String!, input: SimpleApplicationPropertyBean_Input): ApplicationProperty

  \\"\\"\\"
  Updates the announcement banner configuration.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  setBanner(input: AnnouncementBannerConfigurationUpdate_Input): setBanner_response

  \\"\\"\\"
  Sets the columns for a filter. Only navigable fields can be set as columns. Use [Get fields](#api-rest-api-3-field-get) to get the list fields in Jira. A navigable field has \`navigable\` set to \`true\`.
  
  The parameters for this resource are expressed as HTML form data. For example, in curl:
  
  \`curl -X PUT -d columns=summary -d columns=description https://your-domain.atlassian.net/rest/api/3/filter/10000/columns\`
  
  **[Permissions](#permissions) required:** Permission to access Jira, however, columns are only set for:
  
   *  filters owned by the user.
   *  filters shared with a group that the user is a member of.
   *  filters shared with a private project that the user has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for.
   *  filters shared with a public project.
   *  filters shared with the public.
  \\"\\"\\"
  setColumns(id: Int!, input: String): Any

  \\"\\"\\"
  Creates or updates the value of a property for a comment. Use this resource to store custom data against a comment.
  
  The value of the request body must be a [valid](http://tools.ietf.org/html/rfc4627), non-empty JSON blob. The maximum length is 32768 characters.
  
  **[Permissions](#permissions) required:** either of:
  
   *  *Edit All Comments* [project permission](https://confluence.atlassian.com/x/yodKLg) to create or update the value of a property on any comment.
   *  *Edit Own Comments* [project permission](https://confluence.atlassian.com/x/yodKLg) to create or update the value of a property on a comment created by the user.
  
  Also, when the visibility of a comment is restricted to a role or group the user must be a member of that role or group.
  \\"\\"\\"
  setCommentProperty(commentId: String!, propertyKey: String!): Any

  \\"\\"\\"
  Sets the value of a dashboard item property. Use this resource in apps to store custom data against a dashboard item.
  
  A dashboard item enables an app to add user-specific information to a user dashboard. Dashboard items are exposed to users as gadgets that users can add to their dashboards. For more information on how users do this, see [Adding and customizing gadgets](https://confluence.atlassian.com/x/7AeiLQ).
  
  When an app creates a dashboard item it registers a callback to receive the dashboard item ID. The callback fires whenever the item is rendered or, where the item is configurable, the user edits the item. The app then uses this resource to store the item's content or configuration details. For more information on working with dashboard items, see [ Building a dashboard item for a JIRA Connect add-on](https://developer.atlassian.com/server/jira/platform/guide-building-a-dashboard-item-for-a-jira-connect-add-on-33746254/) and the [Dashboard Item](https://developer.atlassian.com/cloud/jira/platform/modules/dashboard-item/) documentation.
  
  There is no resource to set or get dashboard items.
  
  The value of the request body must be a [valid](http://tools.ietf.org/html/rfc4627), non-empty JSON blob. The maximum length is 32768 characters.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** The user must be the owner of the dashboard. Note, users with the *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) are considered owners of the System dashboard.
  \\"\\"\\"
  setDashboardItemProperty(dashboardId: String!, itemId: String!, propertyKey: String!): setDashboardItemProperty_400_response

  \\"\\"\\"
  Sets the default sharing for new filters and dashboards for a user.
  
  **[Permissions](#permissions) required:** Permission to access Jira.
  \\"\\"\\"
  setDefaultShareScope(input: DefaultShareScope_Input!): DefaultShareScope

  \\"\\"\\"
  Sets default for contexts of a custom field. Default are defined using these objects:
  
   *  \`CustomFieldContextDefaultValueDate\` (type \`datepicker\`) for date fields.
   *  \`CustomFieldContextDefaultValueDateTime\` (type \`datetimepicker\`) for date-time fields.
   *  \`CustomFieldContextDefaultValueSingleOption\` (type \`option.single\`) for single choice select lists and radio buttons.
   *  \`CustomFieldContextDefaultValueMultipleOption\` (type \`option.multiple\`) for multiple choice select lists and checkboxes.
   *  \`CustomFieldContextDefaultValueCascadingOption\` (type \`option.cascading\`) for cascading select lists.
   *  \`CustomFieldContextSingleUserPickerDefaults\` (type \`single.user.select\`) for single users.
   *  \`CustomFieldContextDefaultValueMultiUserPicker\` (type \`multi.user.select\`) for user lists.
   *  \`CustomFieldContextDefaultValueSingleGroupPicker\` (type \`grouppicker.single\`) for single choice group pickers.
   *  \`CustomFieldContextDefaultValueMultipleGroupPicker\` (type \`grouppicker.multiple\`) for multiple choice group pickers.
   *  \`CustomFieldContextDefaultValueURL\` (type \`url\`) for URLs.
   *  \`CustomFieldContextDefaultValueProject\` (type \`project\`) for project pickers.
   *  \`CustomFieldContextDefaultValueFloat\` (type \`float\`) for floats (floating-point numbers).
   *  \`CustomFieldContextDefaultValueLabels\` (type \`labels\`) for labels.
   *  \`CustomFieldContextDefaultValueTextField\` (type \`textfield\`) for text fields.
   *  \`CustomFieldContextDefaultValueTextArea\` (type \`textarea\`) for text area fields.
   *  \`CustomFieldContextDefaultValueReadOnly\` (type \`readonly\`) for read only (text) fields.
   *  \`CustomFieldContextDefaultValueMultipleVersion\` (type \`version.multiple\`) for single choice version pickers.
   *  \`CustomFieldContextDefaultValueSingleVersion\` (type \`version.single\`) for multiple choice version pickers.
  
  Forge custom fields [types](https://developer.atlassian.com/platform/forge/manifest-reference/modules/jira-custom-field-type/#data-types) are also supported, returning:
  
   *  \`CustomFieldContextDefaultValueForgeStringFieldBean\` (type \`forge.string\`) for Forge string fields.
   *  \`CustomFieldContextDefaultValueForgeMultiStringFieldBean\` (type \`forge.string.list\`) for Forge string collection fields.
   *  \`CustomFieldContextDefaultValueForgeObjectFieldBean\` (type \`forge.object\`) for Forge object fields.
   *  \`CustomFieldContextDefaultValueForgeDateTimeFieldBean\` (type \`forge.datetime\`) for Forge date-time fields.
   *  \`CustomFieldContextDefaultValueForgeGroupFieldBean\` (type \`forge.group\`) for Forge group fields.
   *  \`CustomFieldContextDefaultValueForgeMultiGroupFieldBean\` (type \`forge.group.list\`) for Forge group collection fields.
   *  \`CustomFieldContextDefaultValueForgeNumberFieldBean\` (type \`forge.number\`) for Forge number fields.
   *  \`CustomFieldContextDefaultValueForgeUserFieldBean\` (type \`forge.user\`) for Forge user fields.
   *  \`CustomFieldContextDefaultValueForgeMultiUserFieldBean\` (type \`forge.user.list\`) for Forge user collection fields.
  
  Only one type of default object can be included in a request. To remove a default for a context, set the default parameter to \`null\`.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  setDefaultValues(fieldId: String!, input: CustomFieldContextDefaultValueUpdate_Input): setDefaultValues_response

  \\"\\"\\"
  Add a filter as a favorite for the user.
  
  **[Permissions](#permissions) required:** Permission to access Jira, however, the user can only favorite:
  
   *  filters owned by the user.
   *  filters shared with a group that the user is a member of.
   *  filters shared with a private project that the user has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for.
   *  filters shared with a public project.
   *  filters shared with the public.
  \\"\\"\\"
  setFavouriteForFilter(expand: String, id: Int!): Filter

  \\"\\"\\"
  Assigns issue types to field configurations on field configuration scheme.
  
  This operation can only modify field configuration schemes used in company-managed (classic) projects.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  setFieldConfigurationSchemeMapping(id: Int!, input: AssociateFieldConfigurationsWithIssueTypesRequest_Input!): Any

  \\"\\"\\"
  Sets the default issue navigator columns.
  
  The \`columns\` parameter accepts a navigable field value and is expressed as HTML form data. To specify multiple columns, pass multiple \`columns\` parameters. For example, in curl:
  
  \`curl -X PUT -d columns=summary -d columns=description https://your-domain.atlassian.net/rest/api/3/settings/columns\`
  
  If no column details are sent, then all default columns are removed.
  
  A navigable field is one that can be used as a column on the issue navigator. Find details of navigable issue columns using [Get fields](#api-rest-api-3-field-get).
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  setIssueNavigatorDefaultColumns(input: String): Any

  \\"\\"\\"
  Sets the value of an issue's property. Use this resource to store custom data against an issue.
  
  The value of the request body must be a [valid](http://tools.ietf.org/html/rfc4627), non-empty JSON blob. The maximum length is 32768 characters.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:**
  
   *  *Browse projects* and *Edit issues* [project permissions](https://confluence.atlassian.com/x/yodKLg) for the project containing the issue.
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
  \\"\\"\\"
  setIssueProperty(issueIdOrKey: String!, propertyKey: String!): Any

  \\"\\"\\"
  Creates or updates the value of the [issue type property](https://developer.atlassian.com/cloud/jira/platform/storing-data-without-a-database/#a-id-jira-entity-properties-a-jira-entity-properties). Use this resource to store and update data against an issue type.
  
  The value of the request body must be a [valid](http://tools.ietf.org/html/rfc4627), non-empty JSON blob. The maximum length is 32768 characters.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  setIssueTypeProperty(issueTypeId: String!, propertyKey: String!): Any

  \\"\\"\\"
  Deprecated, use [ Update a user profile](https://developer.atlassian.com/cloud/admin/user-management/rest/#api-users-account-id-manage-profile-patch) from the user management REST API instead.
  
  Sets the locale of the user. The locale must be one supported by the instance of Jira.
  
  **[Permissions](#permissions) required:** Permission to access Jira.
  \\"\\"\\"
  setLocale(input: Locale_Input): Any

  \\"\\"\\"
  Creates a preference for the user or updates a preference's value by sending a plain text string. For example, \`false\`. An arbitrary preference can be created with the value containing up to 255 characters. In addition, the following keys define system preferences that can be set or created:
  
   *  *user.notifications.mimetype* The mime type used in notifications sent to the user. Defaults to \`html\`.
   *  *user.notify.own.changes* Whether the user gets notified of their own changes. Defaults to \`false\`.
   *  *user.default.share.private* Whether new [ filters](https://confluence.atlassian.com/x/eQiiLQ) are set to private. Defaults to \`true\`.
   *  *user.keyboard.shortcuts.disabled* Whether keyboard shortcuts are disabled. Defaults to \`false\`.
   *  *user.autowatch.disabled* Whether the user automatically watches issues they create or add a comment to. By default, not set: the user takes the instance autowatch setting.
  
  Note that these keys are deprecated:
  
   *  *jira.user.locale* The locale of the user. By default, not set. The user takes the instance locale.
   *  *jira.user.timezone* The time zone of the user. By default, not set. The user takes the instance timezone.
  
  Use [ Update a user profile](https://developer.atlassian.com/cloud/admin/user-management/rest/#api-users-account-id-manage-profile-patch) from the user management REST API to manage timezone and locale instead.
  
  **[Permissions](#permissions) required:** Permission to access Jira.
  \\"\\"\\"
  setPreference(input: String, key: String!): Any

  \\"\\"\\"
  Sets the value of the [project property](https://developer.atlassian.com/cloud/jira/platform/storing-data-without-a-database/#a-id-jira-entity-properties-a-jira-entity-properties). You can use project properties to store custom data against the project.
  
  The value of the request body must be a [valid](http://tools.ietf.org/html/rfc4627), non-empty JSON blob. The maximum length is 32768 characters.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) or *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project in which the property is created.
  \\"\\"\\"
  setProjectProperty(projectIdOrKey: String!, propertyKey: String!): Any

  \\"\\"\\"
  Sets the time tracking settings.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  setSharedTimeTrackingConfiguration(input: TimeTrackingConfiguration_Input2!): TimeTrackingConfiguration2

  \\"\\"\\"
  Sets the default [ issue table columns](https://confluence.atlassian.com/x/XYdKLg) for the user. If an account ID is not passed, the calling user's default columns are set. If no column details are sent, then all default columns are removed.
  
  The parameters for this resource are expressed as HTML form data. For example, in curl:
  
  \`curl -X PUT -d columns=summary -d columns=description https://your-domain.atlassian.net/rest/api/3/user/columns?accountId=5b10ac8d82e05b22cc7d4ef5'\`
  
  **[Permissions](#permissions) required:**
  
   *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg), to set the columns on any user.
   *  Permission to access Jira, to set the calling user's columns.
  \\"\\"\\"
  setUserColumns(accountId: String, input: String): Any

  \\"\\"\\"
  Sets the value of a user's property. Use this resource to store custom data against a user.
  
  Note: This operation does not access the [user properties](https://confluence.atlassian.com/x/8YxjL) created and maintained in Jira.
  
  **[Permissions](#permissions) required:**
  
   *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg), to set a property on any user.
   *  Access to Jira, to set a property on the calling user's record.
  \\"\\"\\"
  setUserProperty(accountId: String, propertyKey: String!, userKey: String, username: String): Any

  \\"\\"\\"
  Sets the workflow for an issue type in a workflow scheme's draft.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  setWorkflowSchemeDraftIssueType(id: Int!, input: IssueTypeWorkflowMapping_Input, issueType: String!): WorkflowScheme

  \\"\\"\\"
  Sets the workflow for an issue type in a workflow scheme.
  
  Note that active workflow schemes cannot be edited. If the workflow scheme is active, set \`updateDraftIfNeeded\` to \`true\` in the request body and a draft workflow scheme is created or updated with the new issue type-workflow mapping. The draft workflow scheme can be published in Jira.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  setWorkflowSchemeIssueType(id: Int!, input: IssueTypeWorkflowMapping_Input, issueType: String!): WorkflowScheme

  \\"\\"\\"
  Sets the value of a worklog property. Use this operation to store custom data against the worklog.
  
  The value of the request body must be a [valid](http://tools.ietf.org/html/rfc4627), non-empty JSON blob. The maximum length is 32768 characters.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:**
  
   *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
   *  *Edit all worklogs*[ project permission](https://confluence.atlassian.com/x/yodKLg) to update any worklog or *Edit own worklogs* to update worklogs created by the user.
   *  If the worklog has visibility restrictions, belongs to the group or has the role visibility is restricted to.
  \\"\\"\\"
  setWorklogProperty(issueIdOrKey: String!, propertyKey: String!, worklogId: String!): Any

  \\"\\"\\"
  Loads a custom avatar for a project or issue type.
  
  Specify the avatar's local file location in the body of the request. Also, include the following headers:
  
   *  \`X-Atlassian-Token: no-check\` To prevent XSRF protection blocking the request, for more information see [Special Headers](#special-request-headers).
   *  \`Content-Type: image/image type\` Valid image types are JPEG, GIF, or PNG.
  
  For example:  
  \`curl --request POST \`
  
  \`--user email@example.com:<api_token> \`
  
  \`--header 'X-Atlassian-Token: no-check' \`
  
  \`--header 'Content-Type: image/< image_type>' \`
  
  \`--data-binary \\"<@/path/to/file/with/your/avatar>\\" \`
  
  \`--url 'https://your-domain.atlassian.net/rest/api/3/universal_avatar/type/{type}/owner/{entityId}'\`
  
  The avatar is cropped to a square. If no crop parameters are specified, the square originates at the top left of the image. The length of the square's sides is set to the smaller of the height or width of the image.
  
  The cropped image is then used to create avatars of 16x16, 24x24, 32x32, and 48x48 in size.
  
  After creating the avatar use:
  
   *  [Update issue type](#api-rest-api-3-issuetype-id-put) to set it as the issue type's displayed avatar.
   *  [Set project avatar](#api-rest-api-3-project-projectIdOrKey-avatar-put) to set it as the project's displayed avatar.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  storeAvatar(entityId: String!, size: Int!, type: String!, x: Int, y: Int): Avatar

  \\"\\"\\"Sets the state of a project feature.\\"\\"\\"
  toggleFeatureForProject(featureKey: String!, input: ProjectFeatureState_Input, projectIdOrKey: String!): ContainerForProjectFeatures

  \\"\\"\\"
  Moves a custom field to trash. See [Edit or delete a custom field](https://confluence.atlassian.com/x/Z44fOw) for more information on trashing and deleting custom fields.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  trashCustomField(id: String!): trashCustomField_response

  \\"\\"\\"
  Updates a comment.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:**
  
   *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue containing the comment is in.
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
   *  *Edit all comments*[ project permission](https://confluence.atlassian.com/x/yodKLg) to update any comment or *Edit own comments* to update comment created by the user.
   *  If the comment has visibility restrictions, the user belongs to the group or has the role visibility is restricted to.
  \\"\\"\\"
  updateComment(expand: String, id: String!, input: Comment_Input, issueIdOrKey: String!, notifyUsers: Boolean): Comment

  \\"\\"\\"
  Updates a component. Any fields included in the request are overwritten. If \`leadAccountId\` is an empty string (\\"\\") the component lead is removed.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing the component or *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  updateComponent(id: String!, input: ProjectComponent_Input): ProjectComponent

  \\"\\"\\"
  Updates a custom field.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  updateCustomField(fieldId: String!, input: UpdateCustomFieldDetails_Input): updateCustomField_response

  \\"\\"\\"
  Update the configuration for contexts of a custom field created by a [Forge app](https://developer.atlassian.com/platform/forge/).
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg). Jira permissions are not required for the Forge app that created the custom field.
  \\"\\"\\"
  updateCustomFieldConfiguration(fieldIdOrKey: String!, input: CustomFieldConfigurations_Input!): Any

  \\"\\"\\"
  Updates a [ custom field context](https://confluence.atlassian.com/adminjiracloud/what-are-custom-field-contexts-991923859.html).
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  updateCustomFieldContext(contextId: Int!, fieldId: String!, input: CustomFieldContextUpdateDetails_Input): updateCustomFieldContext_response

  \\"\\"\\"
  Updates the options of a custom field.
  
  If any of the options are not found, no options are updated. Options where the values in the request match the current values aren't updated and aren't reported in the response.
  
  Note that this operation **only works for issue field select list options created in Jira or using operations from the [Issue custom field options](#api-group-Issue-custom-field-options) resource**, it cannot be used with issue field select list options created by Connect apps.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  updateCustomFieldOption(contextId: Int!, fieldId: String!, input: BulkCustomFieldOptionUpdateRequest_Input): updateCustomFieldOption_response

  \\"\\"\\"
  Updates the value of a custom field on one or more issues. Custom fields can only be updated by the Forge app that created them.
  
  **[Permissions](#permissions) required:** Only the app that created the custom field can update its values with this operation.
  \\"\\"\\"
  updateCustomFieldValue(fieldIdOrKey: String!, generateChangelog: Boolean, input: CustomFieldValueUpdateDetails_Input): Any

  \\"\\"\\"
  Updates a dashboard, replacing all the dashboard details with those provided.
  
  **[Permissions](#permissions) required:** None
  
  The dashboard to be updated must be owned by the user.
  \\"\\"\\"
  updateDashboard(id: String!, input: DashboardDetails_Input!): updateDashboard_response

  \\"\\"\\"
  Updates the default screen scheme of an issue type screen scheme. The default screen scheme is used for all unmapped issue types.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  updateDefaultScreenScheme(input: UpdateDefaultScreenScheme_Input!, issueTypeScreenSchemeId: String!): updateDefaultScreenScheme_response

  \\"\\"\\"
  Sets the default workflow for a workflow scheme.
  
  Note that active workflow schemes cannot be edited. If the workflow scheme is active, set \`updateDraftIfNeeded\` to \`true\` in the request object and a draft workflow scheme is created or updated with the new default workflow. The draft workflow scheme can be published in Jira.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  updateDefaultWorkflow(id: Int!, input: DefaultWorkflow_Input!): WorkflowScheme

  \\"\\"\\"
  Sets the default workflow for a workflow scheme's draft.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  updateDraftDefaultWorkflow(id: Int!, input: DefaultWorkflow_Input!): WorkflowScheme

  \\"\\"\\"
  Sets the issue types for a workflow in a workflow scheme's draft. The workflow can also be set as the default workflow for the draft workflow scheme. Unmapped issues types are mapped to the default workflow.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  updateDraftWorkflowMapping(id: Int!, input: IssueTypesWorkflowMapping_Input, workflowName: String!): WorkflowScheme

  \\"\\"\\"
  Updates a field configuration. The name and the description provided in the request override the existing values.
  
  This operation can only update configurations used in company-managed (classic) projects.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  updateFieldConfiguration(id: Int!, input: FieldConfigurationDetails_Input!): Any

  \\"\\"\\"
  Updates fields in a field configuration. The properties of the field configuration fields provided override the existing values.
  
  This operation can only update field configurations used in company-managed (classic) projects.
  
  The operation can set the renderer for text fields to the default text renderer (\`text-renderer\`) or wiki style renderer (\`wiki-renderer\`). However, the renderer cannot be updated for fields using the autocomplete renderer (\`autocomplete-renderer\`).
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  updateFieldConfigurationItems(id: Int!, input: FieldConfigurationItemsDetails_Input!): Any

  \\"\\"\\"
  Updates a field configuration scheme.
  
  This operation can only update field configuration schemes used in company-managed (classic) projects.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  updateFieldConfigurationScheme(id: Int!, input: UpdateFieldConfigurationSchemeDetails_Input!): updateFieldConfigurationScheme_response

  \\"\\"\\"
  Updates a filter. Use this operation to update a filter's name, description, JQL, or sharing.
  
  **[Permissions](#permissions) required:** Permission to access Jira, however the user must own the filter.
  \\"\\"\\"
  updateFilter(expand: String, id: Int!, input: Filter_Input!, overrideSharePermissions: Boolean): Filter

  \\"\\"\\"
  Changes the title, position, and color of the gadget on a dashboard.
  
  **[Permissions](#permissions) required:** None.
  \\"\\"\\"
  updateGadget(dashboardId: Int!, gadgetId: Int!, input: DashboardGadgetUpdateRequest_Input): updateGadget_response

  \\"\\"\\"
  Updates or creates an option for a select list issue field. This operation requires that the option ID is provided when creating an option, therefore, the option ID needs to be specified as a path and body parameter. The option ID provided in the path and body must be identical.
  
  Note that this operation **only works for issue field select list options added by Connect apps**, it cannot be used with issue field select list options created in Jira or using operations from the [Issue custom field options](#api-group-Issue-custom-field-options) resource.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg). Jira permissions are not required for the app providing the field.
  \\"\\"\\"
  updateIssueFieldOption(fieldKey: String!, input: IssueFieldOption_Input!, optionId: Int!): IssueFieldOption

  \\"\\"\\"
  Updates an issue link type.
  
  To use this operation, the site must have [issue linking](https://confluence.atlassian.com/x/yoXKM) enabled.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  updateIssueLinkType(input: IssueLinkType_Input2, issueLinkTypeId: String!): IssueLinkType2

  \\"\\"\\"
  Updates the issue type.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  updateIssueType(id: String!, input: IssueTypeUpdateBean_Input): IssueTypeDetails

  \\"\\"\\"
  Updates an issue type scheme.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  updateIssueTypeScheme(input: IssueTypeSchemeUpdateDetails_Input, issueTypeSchemeId: Int!): updateIssueTypeScheme_response

  \\"\\"\\"
  Updates an issue type screen scheme.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  updateIssueTypeScreenScheme(input: IssueTypeScreenSchemeUpdateDetails_Input, issueTypeScreenSchemeId: String!): updateIssueTypeScreenScheme_response

  \\"\\"\\"
  Updates the value of one or more custom fields on one or more issues. Combinations of custom field and issue should be unique within the request. Custom fields can only be updated by the Forge app that created them.
  
  **[Permissions](#permissions) required:** Only the app that created the custom field can update its values with this operation.
  \\"\\"\\"
  updateMultipleCustomFieldValues(generateChangelog: Boolean, input: MultipleCustomFieldValuesUpdateDetails_Input): Any

  \\"\\"\\"
  Updates a permission scheme. Below are some important things to note when using this resource:
  
   *  If a permissions list is present in the request, then it is set in the permission scheme, overwriting *all existing* grants.
   *  If you want to update only the name and description, then do not send a permissions list in the request.
   *  Sending an empty list will remove all permission grants from the permission scheme.
  
  If you want to add or delete a permission grant instead of updating the whole list, see [Create permission grant](#api-rest-api-3-permissionscheme-schemeId-permission-post) or [Delete permission scheme entity](#api-rest-api-3-permissionscheme-schemeId-permission-permissionId-delete).
  
  See [About permission schemes and grants](../api-group-permission-schemes/#about-permission-schemes-and-grants) for more details.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  updatePermissionScheme(expand: String, input: PermissionScheme_Input, schemeId: Int!): PermissionScheme

  \\"\\"\\"
  Updates an issue priority.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  updatePriority(id: String!, input: UpdatePriorityDetails_Input): updatePriority_response

  \\"\\"\\"
  Updates the [project details](https://confluence.atlassian.com/x/ahLpNw) of a project.
  
  All parameters are optional in the body of the request.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  updateProject(expand: String, input: UpdateProjectDetails_Input, projectIdOrKey: String!): Project2

  \\"\\"\\"
  Sets the avatar displayed for a project.
  
  Use [Load project avatar](#api-rest-api-3-project-projectIdOrKey-avatar2-post) to store avatars against the project, before using this operation to set the displayed avatar.
  
  **[Permissions](#permissions) required:** *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg).
  \\"\\"\\"
  updateProjectAvatar(input: Avatar_Input, projectIdOrKey: String!): Any

  \\"\\"\\"
  Updates a project category.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  updateProjectCategory(id: Int!, input: ProjectCategory_Input2): UpdatedProjectCategory2

  \\"\\"\\"
  Sets the [project's sender email address](https://confluence.atlassian.com/x/dolKLg).
  
  If \`emailAddress\` is an empty string, the default email address is restored.
  
  **[Permissions](#permissions) required:** *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
  \\"\\"\\"
  updateProjectEmail(input: ProjectEmailAddress_Input, projectId: Int!): Any

  \\"\\"\\"
  Deprecated, this feature is no longer supported and no alternatives are available, see [Convert project to a different template or type](https://confluence.atlassian.com/x/yEKeOQ). Updates a [project type](https://confluence.atlassian.com/x/GwiiLQ). The project type can be updated for classic projects only, project type cannot be updated for next-gen projects.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  updateProjectType(newProjectTypeKey: String!, projectIdOrKey: String!): Project2

  \\"\\"\\"
  Updates a remote issue link for an issue.
  
  Note: Fields without values in the request are set to null.
  
  This operation requires [issue linking to be active](https://confluence.atlassian.com/x/yoXKM).
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:**
  
   *  *Browse projects* and *Link issues* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
  \\"\\"\\"
  updateRemoteIssueLink(input: RemoteIssueLinkRequest_Input, issueIdOrKey: String!, linkId: String!): createOrUpdateRemoteIssueLink_400_response

  \\"\\"\\"
  Updates a screen. Only screens used in classic projects can be updated.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  updateScreen(input: UpdateScreenDetails_Input, screenId: Int!): updateScreen_response

  \\"\\"\\"
  Updates a screen scheme. Only screen schemes used in classic projects can be updated.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  updateScreenScheme(input: UpdateScreenSchemeDetails_Input, screenSchemeId: String!): updateScreenScheme_response

  \\"\\"\\"
  Updates statuses by ID.
  
  **[Permissions](#permissions) required:**
  
   *  *Administer projects* [project permission.](https://confluence.atlassian.com/x/yodKLg)
   *  *Administer Jira* [project permission.](https://confluence.atlassian.com/x/yodKLg)
  \\"\\"\\"
  updateStatuses(input: StatusUpdateRequest_Input): updateStatuses_400_response

  \\"\\"\\"
  Updates a UI modification. UI modification can only be updated by Forge apps.
  
  Each UI modification can define up to 1000 contexts.
  
  **[Permissions](#permissions) required:**
  
   *  *None* if the UI modification is created without contexts.
   *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for one or more projects, if the UI modification is created with contexts.
  \\"\\"\\"
  updateUiModification(input: UpdateUiModificationDetails_Input, uiModificationId: String!): Any

  \\"\\"\\"
  Updates a project version.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) or *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that contains the version.
  \\"\\"\\"
  updateVersion(id: String!, input: Version_Input): Version

  \\"\\"\\"
  Sets the issue types for a workflow in a workflow scheme. The workflow can also be set as the default workflow for the workflow scheme. Unmapped issues types are mapped to the default workflow.
  
  Note that active workflow schemes cannot be edited. If the workflow scheme is active, set \`updateDraftIfNeeded\` to \`true\` in the request body and a draft workflow scheme is created or updated with the new workflow-issue types mappings. The draft workflow scheme can be published in Jira.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  updateWorkflowMapping(id: Int!, input: IssueTypesWorkflowMapping_Input, workflowName: String!): WorkflowScheme

  \\"\\"\\"
  Updates a workflow scheme, including the name, default workflow, issue type to project mappings, and more. If the workflow scheme is active (that is, being used by at least one project), then a draft workflow scheme is created or updated instead, provided that \`updateDraftIfNeeded\` is set to \`true\`.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  updateWorkflowScheme(id: Int!, input: WorkflowScheme_Input): WorkflowScheme

  \\"\\"\\"
  Updates a draft workflow scheme. If a draft workflow scheme does not exist for the active workflow scheme, then a draft is created. Note that an active workflow scheme can only have one draft workflow scheme.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  updateWorkflowSchemeDraft(id: Int!, input: WorkflowScheme_Input): WorkflowScheme

  \\"\\"\\"
  Updates a workflow transition by changing the property value. Trying to update a property that does not exist results in a new property being added to the transition. Transition properties are used to change the behavior of a transition. For more information, see [Transition properties](https://confluence.atlassian.com/x/zIhKLg#Advancedworkflowconfiguration-transitionproperties) and [Workflow properties](https://confluence.atlassian.com/x/JYlKLg).
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  updateWorkflowTransitionProperty(input: WorkflowTransitionProperty_Input, key: String!, transitionId: Int!, workflowMode: String, workflowName: String!): WorkflowTransitionProperty

  \\"\\"\\"
  Updates configuration of workflow transition rules. The following rule types are supported:
  
   *  [post functions](https://developer.atlassian.com/cloud/jira/platform/modules/workflow-post-function/)
   *  [conditions](https://developer.atlassian.com/cloud/jira/platform/modules/workflow-condition/)
   *  [validators](https://developer.atlassian.com/cloud/jira/platform/modules/workflow-validator/)
  
  Only rules created by the calling Connect app can be updated.
  
  To assist with app migration, this operation can be used to:
  
   *  Disable a rule.
   *  Add a \`tag\`. Use this to filter rules in the [Get workflow transition rule configurations](https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-workflow-transition-rules/#api-rest-api-3-workflow-rule-config-get).
  
  Rules are enabled if the \`disabled\` parameter is not provided.
  
  **[Permissions](#permissions) required:** Only Connect apps can use this operation.
  \\"\\"\\"
  updateWorkflowTransitionRuleConfigurations(input: WorkflowTransitionRulesUpdate_Input!): updateWorkflowTransitionRuleConfigurations_response

  \\"\\"\\"
  Updates a worklog.
  
  Time tracking must be enabled in Jira, otherwise this operation returns an error. For more information, see [Configuring time tracking](https://confluence.atlassian.com/x/qoXKM).
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:**
  
   *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
   *  *Edit all worklogs*[ project permission](https://confluence.atlassian.com/x/yodKLg) to update any worklog or *Edit own worklogs* to update worklogs created by the user.
   *  If the worklog has visibility restrictions, belongs to the group or has the role visibility is restricted to.
  \\"\\"\\"
  updateWorklog(adjustEstimate: String, expand: String, id: String!, input: Worklog_Input, issueIdOrKey: String!, newEstimate: String, notifyUsers: Boolean, overrideEditableFlag: Boolean): Worklog
}

\\"\\"\\"The response code and messages related to any requested transition.\\"\\"\\"
type NestedResponse {
  errorCollection: ErrorCollection
  status: Int
}

\\"\\"\\"The user details.\\"\\"\\"
scalar NewUserDetails_Input

\\"\\"\\"Details about a notification event.\\"\\"\\"
type NotificationEvent {
  \\"\\"\\"The description of the event.\\"\\"\\"
  description: String

  \\"\\"\\"
  The ID of the event. The event can be a [Jira system event](https://confluence.atlassian.com/x/8YdKLg#Creatinganotificationscheme-eventsEvents) or a [custom event](https://confluence.atlassian.com/x/AIlKLg).
  \\"\\"\\"
  id: BigInt

  \\"\\"\\"The name of the event.\\"\\"\\"
  name: String
  templateEvent: NotificationEvent
}

\\"\\"\\"Details about a notification event.\\"\\"\\"
type NotificationEvent2 {
  \\"\\"\\"The description of the event.\\"\\"\\"
  description: String

  \\"\\"\\"
  The ID of the event. The event can be a [Jira system event](https://confluence.atlassian.com/x/8YdKLg#Creatinganotificationscheme-eventsEvents) or a [custom event](https://confluence.atlassian.com/x/AIlKLg).
  \\"\\"\\"
  id: BigInt

  \\"\\"\\"The name of the event.\\"\\"\\"
  name: String
  templateEvent: NotificationEvent
}

\\"\\"\\"Details about a notification scheme.\\"\\"\\"
type NotificationScheme {
  \\"\\"\\"The description of the notification scheme.\\"\\"\\"
  description: String

  \\"\\"\\"
  Expand options that include additional notification scheme details in the response.
  \\"\\"\\"
  expand: String

  \\"\\"\\"The ID of the notification scheme.\\"\\"\\"
  id: BigInt

  \\"\\"\\"The name of the notification scheme.\\"\\"\\"
  name: String

  \\"\\"\\"The notification events and associated recipients.\\"\\"\\"
  notificationSchemeEvents: [NotificationSchemeEvent]
  scope: Scope6
  self: String
}

\\"\\"\\"Details about a notification scheme event.\\"\\"\\"
type NotificationSchemeEvent {
  event: NotificationEvent2
  notifications: [EventNotification]
}

\\"\\"\\"Details about a notification.\\"\\"\\"
scalar Notification_Input

type OperationMessage {
  \\"\\"\\"The human-readable message that describes the result.\\"\\"\\"
  message: String!

  \\"\\"\\"The status code of the response.\\"\\"\\"
  statusCode: Int!
}

\\"\\"\\"Details of the operations that can be performed on the issue.\\"\\"\\"
type Operations {
  additionalProperties: JSON

  \\"\\"\\"Details of the link groups defining issue operations.\\"\\"\\"
  linkGroups: [LinkGroup]
}

\\"\\"\\"
An ordered list of custom field option IDs and information on where to move them.
\\"\\"\\"
input OrderOfCustomFieldOptions_Input {
  \\"\\"\\"
  The ID of the custom field option or cascading option to place the moved options after. Required if \`position\` isn't provided.
  \\"\\"\\"
  after: String

  \\"\\"\\"
  A list of IDs of custom field options to move. The order of the custom field option IDs in the list is the order they are given after the move. The list must contain custom field options or cascading options, but not both.
  \\"\\"\\"
  customFieldOptionIds: [String]!
  position: mutationInput_reorderCustomFieldOptions_position
}

\\"\\"\\"
An ordered list of issue type IDs and information about where to move them.
\\"\\"\\"
input OrderOfIssueTypes_Input {
  \\"\\"\\"
  The ID of the issue type to place the moved issue types after. Required if \`position\` isn't provided.
  \\"\\"\\"
  after: String

  \\"\\"\\"
  A list of the issue type IDs to move. The order of the issue type IDs in the list is the order they are given after the move.
  \\"\\"\\"
  issueTypeIds: [String]!
  position: mutationInput_reorderIssueTypesInIssueTypeScheme_position
}

\\"\\"\\"A page of items.\\"\\"\\"
type PageBeanChangelog {
  \\"\\"\\"Whether this is the last page.\\"\\"\\"
  isLast: Boolean

  \\"\\"\\"The maximum number of items that could be returned.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"If there is another page of results, the URL of the next page.\\"\\"\\"
  nextPage: URL

  \\"\\"\\"The URL of the page.\\"\\"\\"
  self: URL

  \\"\\"\\"The index of the first item returned.\\"\\"\\"
  startAt: BigInt

  \\"\\"\\"The number of items returned.\\"\\"\\"
  total: BigInt

  \\"\\"\\"The list of items.\\"\\"\\"
  values: [Changelog]
}

\\"\\"\\"A page of items.\\"\\"\\"
type PageBeanComment {
  \\"\\"\\"Whether this is the last page.\\"\\"\\"
  isLast: Boolean

  \\"\\"\\"The maximum number of items that could be returned.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"If there is another page of results, the URL of the next page.\\"\\"\\"
  nextPage: URL

  \\"\\"\\"The URL of the page.\\"\\"\\"
  self: URL

  \\"\\"\\"The index of the first item returned.\\"\\"\\"
  startAt: BigInt

  \\"\\"\\"The number of items returned.\\"\\"\\"
  total: BigInt

  \\"\\"\\"The list of items.\\"\\"\\"
  values: [Comment]
}

\\"\\"\\"A page of items.\\"\\"\\"
type PageBeanComponentWithIssueCount {
  \\"\\"\\"Whether this is the last page.\\"\\"\\"
  isLast: Boolean

  \\"\\"\\"The maximum number of items that could be returned.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"If there is another page of results, the URL of the next page.\\"\\"\\"
  nextPage: URL

  \\"\\"\\"The URL of the page.\\"\\"\\"
  self: URL

  \\"\\"\\"The index of the first item returned.\\"\\"\\"
  startAt: BigInt

  \\"\\"\\"The number of items returned.\\"\\"\\"
  total: BigInt

  \\"\\"\\"The list of items.\\"\\"\\"
  values: [ComponentWithIssueCount]
}

\\"\\"\\"A page of items.\\"\\"\\"
type PageBeanContext {
  \\"\\"\\"Whether this is the last page.\\"\\"\\"
  isLast: Boolean

  \\"\\"\\"The maximum number of items that could be returned.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"If there is another page of results, the URL of the next page.\\"\\"\\"
  nextPage: URL

  \\"\\"\\"The URL of the page.\\"\\"\\"
  self: URL

  \\"\\"\\"The index of the first item returned.\\"\\"\\"
  startAt: BigInt

  \\"\\"\\"The number of items returned.\\"\\"\\"
  total: BigInt

  \\"\\"\\"The list of items.\\"\\"\\"
  values: [Context]
}

\\"\\"\\"A page of items.\\"\\"\\"
type PageBeanContextForProjectAndIssueType {
  \\"\\"\\"Whether this is the last page.\\"\\"\\"
  isLast: Boolean

  \\"\\"\\"The maximum number of items that could be returned.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"If there is another page of results, the URL of the next page.\\"\\"\\"
  nextPage: URL

  \\"\\"\\"The URL of the page.\\"\\"\\"
  self: URL

  \\"\\"\\"The index of the first item returned.\\"\\"\\"
  startAt: BigInt

  \\"\\"\\"The number of items returned.\\"\\"\\"
  total: BigInt

  \\"\\"\\"The list of items.\\"\\"\\"
  values: [ContextForProjectAndIssueType]
}

\\"\\"\\"A page of items.\\"\\"\\"
type PageBeanContextualConfiguration {
  \\"\\"\\"Whether this is the last page.\\"\\"\\"
  isLast: Boolean

  \\"\\"\\"The maximum number of items that could be returned.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"If there is another page of results, the URL of the next page.\\"\\"\\"
  nextPage: URL

  \\"\\"\\"The URL of the page.\\"\\"\\"
  self: URL

  \\"\\"\\"The index of the first item returned.\\"\\"\\"
  startAt: BigInt

  \\"\\"\\"The number of items returned.\\"\\"\\"
  total: BigInt

  \\"\\"\\"The list of items.\\"\\"\\"
  values: [ContextualConfiguration]
}

\\"\\"\\"A page of items.\\"\\"\\"
type PageBeanCustomFieldContext {
  \\"\\"\\"Whether this is the last page.\\"\\"\\"
  isLast: Boolean

  \\"\\"\\"The maximum number of items that could be returned.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"If there is another page of results, the URL of the next page.\\"\\"\\"
  nextPage: URL

  \\"\\"\\"The URL of the page.\\"\\"\\"
  self: URL

  \\"\\"\\"The index of the first item returned.\\"\\"\\"
  startAt: BigInt

  \\"\\"\\"The number of items returned.\\"\\"\\"
  total: BigInt

  \\"\\"\\"The list of items.\\"\\"\\"
  values: [CustomFieldContext]
}

\\"\\"\\"A page of items.\\"\\"\\"
type PageBeanCustomFieldContextDefaultValue {
  \\"\\"\\"Whether this is the last page.\\"\\"\\"
  isLast: Boolean

  \\"\\"\\"The maximum number of items that could be returned.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"If there is another page of results, the URL of the next page.\\"\\"\\"
  nextPage: URL

  \\"\\"\\"The URL of the page.\\"\\"\\"
  self: URL

  \\"\\"\\"The index of the first item returned.\\"\\"\\"
  startAt: BigInt

  \\"\\"\\"The number of items returned.\\"\\"\\"
  total: BigInt

  \\"\\"\\"The list of items.\\"\\"\\"
  values: [CustomFieldContextDefaultValue]
}

\\"\\"\\"A page of items.\\"\\"\\"
type PageBeanCustomFieldContextOption {
  \\"\\"\\"Whether this is the last page.\\"\\"\\"
  isLast: Boolean

  \\"\\"\\"The maximum number of items that could be returned.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"If there is another page of results, the URL of the next page.\\"\\"\\"
  nextPage: URL

  \\"\\"\\"The URL of the page.\\"\\"\\"
  self: URL

  \\"\\"\\"The index of the first item returned.\\"\\"\\"
  startAt: BigInt

  \\"\\"\\"The number of items returned.\\"\\"\\"
  total: BigInt

  \\"\\"\\"The list of items.\\"\\"\\"
  values: [CustomFieldContextOption]
}

\\"\\"\\"A page of items.\\"\\"\\"
type PageBeanCustomFieldContextProjectMapping {
  \\"\\"\\"Whether this is the last page.\\"\\"\\"
  isLast: Boolean

  \\"\\"\\"The maximum number of items that could be returned.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"If there is another page of results, the URL of the next page.\\"\\"\\"
  nextPage: URL

  \\"\\"\\"The URL of the page.\\"\\"\\"
  self: URL

  \\"\\"\\"The index of the first item returned.\\"\\"\\"
  startAt: BigInt

  \\"\\"\\"The number of items returned.\\"\\"\\"
  total: BigInt

  \\"\\"\\"The list of items.\\"\\"\\"
  values: [CustomFieldContextProjectMapping]
}

\\"\\"\\"A page of items.\\"\\"\\"
type PageBeanDashboard {
  \\"\\"\\"Whether this is the last page.\\"\\"\\"
  isLast: Boolean

  \\"\\"\\"The maximum number of items that could be returned.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"If there is another page of results, the URL of the next page.\\"\\"\\"
  nextPage: URL

  \\"\\"\\"The URL of the page.\\"\\"\\"
  self: URL

  \\"\\"\\"The index of the first item returned.\\"\\"\\"
  startAt: BigInt

  \\"\\"\\"The number of items returned.\\"\\"\\"
  total: BigInt

  \\"\\"\\"The list of items.\\"\\"\\"
  values: [Dashboard]
}

\\"\\"\\"A page of items.\\"\\"\\"
type PageBeanField {
  \\"\\"\\"Whether this is the last page.\\"\\"\\"
  isLast: Boolean

  \\"\\"\\"The maximum number of items that could be returned.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"If there is another page of results, the URL of the next page.\\"\\"\\"
  nextPage: URL

  \\"\\"\\"The URL of the page.\\"\\"\\"
  self: URL

  \\"\\"\\"The index of the first item returned.\\"\\"\\"
  startAt: BigInt

  \\"\\"\\"The number of items returned.\\"\\"\\"
  total: BigInt

  \\"\\"\\"The list of items.\\"\\"\\"
  values: [Field]
}

\\"\\"\\"A page of items.\\"\\"\\"
type PageBeanFieldConfigurationDetails {
  \\"\\"\\"Whether this is the last page.\\"\\"\\"
  isLast: Boolean

  \\"\\"\\"The maximum number of items that could be returned.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"If there is another page of results, the URL of the next page.\\"\\"\\"
  nextPage: URL

  \\"\\"\\"The URL of the page.\\"\\"\\"
  self: URL

  \\"\\"\\"The index of the first item returned.\\"\\"\\"
  startAt: BigInt

  \\"\\"\\"The number of items returned.\\"\\"\\"
  total: BigInt

  \\"\\"\\"The list of items.\\"\\"\\"
  values: [FieldConfigurationDetails]
}

\\"\\"\\"A page of items.\\"\\"\\"
type PageBeanFieldConfigurationIssueTypeItem {
  \\"\\"\\"Whether this is the last page.\\"\\"\\"
  isLast: Boolean

  \\"\\"\\"The maximum number of items that could be returned.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"If there is another page of results, the URL of the next page.\\"\\"\\"
  nextPage: URL

  \\"\\"\\"The URL of the page.\\"\\"\\"
  self: URL

  \\"\\"\\"The index of the first item returned.\\"\\"\\"
  startAt: BigInt

  \\"\\"\\"The number of items returned.\\"\\"\\"
  total: BigInt

  \\"\\"\\"The list of items.\\"\\"\\"
  values: [FieldConfigurationIssueTypeItem]
}

\\"\\"\\"A page of items.\\"\\"\\"
type PageBeanFieldConfigurationItem {
  \\"\\"\\"Whether this is the last page.\\"\\"\\"
  isLast: Boolean

  \\"\\"\\"The maximum number of items that could be returned.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"If there is another page of results, the URL of the next page.\\"\\"\\"
  nextPage: URL

  \\"\\"\\"The URL of the page.\\"\\"\\"
  self: URL

  \\"\\"\\"The index of the first item returned.\\"\\"\\"
  startAt: BigInt

  \\"\\"\\"The number of items returned.\\"\\"\\"
  total: BigInt

  \\"\\"\\"The list of items.\\"\\"\\"
  values: [FieldConfigurationItem]
}

\\"\\"\\"A page of items.\\"\\"\\"
type PageBeanFieldConfigurationScheme {
  \\"\\"\\"Whether this is the last page.\\"\\"\\"
  isLast: Boolean

  \\"\\"\\"The maximum number of items that could be returned.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"If there is another page of results, the URL of the next page.\\"\\"\\"
  nextPage: URL

  \\"\\"\\"The URL of the page.\\"\\"\\"
  self: URL

  \\"\\"\\"The index of the first item returned.\\"\\"\\"
  startAt: BigInt

  \\"\\"\\"The number of items returned.\\"\\"\\"
  total: BigInt

  \\"\\"\\"The list of items.\\"\\"\\"
  values: [FieldConfigurationScheme]
}

\\"\\"\\"A page of items.\\"\\"\\"
type PageBeanFieldConfigurationSchemeProjects {
  \\"\\"\\"Whether this is the last page.\\"\\"\\"
  isLast: Boolean

  \\"\\"\\"The maximum number of items that could be returned.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"If there is another page of results, the URL of the next page.\\"\\"\\"
  nextPage: URL

  \\"\\"\\"The URL of the page.\\"\\"\\"
  self: URL

  \\"\\"\\"The index of the first item returned.\\"\\"\\"
  startAt: BigInt

  \\"\\"\\"The number of items returned.\\"\\"\\"
  total: BigInt

  \\"\\"\\"The list of items.\\"\\"\\"
  values: [FieldConfigurationSchemeProjects]
}

\\"\\"\\"A page of items.\\"\\"\\"
type PageBeanFilterDetails {
  \\"\\"\\"Whether this is the last page.\\"\\"\\"
  isLast: Boolean

  \\"\\"\\"The maximum number of items that could be returned.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"If there is another page of results, the URL of the next page.\\"\\"\\"
  nextPage: URL

  \\"\\"\\"The URL of the page.\\"\\"\\"
  self: URL

  \\"\\"\\"The index of the first item returned.\\"\\"\\"
  startAt: BigInt

  \\"\\"\\"The number of items returned.\\"\\"\\"
  total: BigInt

  \\"\\"\\"The list of items.\\"\\"\\"
  values: [FilterDetails]
}

\\"\\"\\"A page of items.\\"\\"\\"
type PageBeanGroupDetails {
  \\"\\"\\"Whether this is the last page.\\"\\"\\"
  isLast: Boolean

  \\"\\"\\"The maximum number of items that could be returned.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"If there is another page of results, the URL of the next page.\\"\\"\\"
  nextPage: URL

  \\"\\"\\"The URL of the page.\\"\\"\\"
  self: URL

  \\"\\"\\"The index of the first item returned.\\"\\"\\"
  startAt: BigInt

  \\"\\"\\"The number of items returned.\\"\\"\\"
  total: BigInt

  \\"\\"\\"The list of items.\\"\\"\\"
  values: [GroupDetails]
}

\\"\\"\\"A page of items.\\"\\"\\"
type PageBeanIssueFieldOption {
  \\"\\"\\"Whether this is the last page.\\"\\"\\"
  isLast: Boolean

  \\"\\"\\"The maximum number of items that could be returned.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"If there is another page of results, the URL of the next page.\\"\\"\\"
  nextPage: URL

  \\"\\"\\"The URL of the page.\\"\\"\\"
  self: URL

  \\"\\"\\"The index of the first item returned.\\"\\"\\"
  startAt: BigInt

  \\"\\"\\"The number of items returned.\\"\\"\\"
  total: BigInt

  \\"\\"\\"The list of items.\\"\\"\\"
  values: [IssueFieldOption]
}

\\"\\"\\"A page of items.\\"\\"\\"
type PageBeanIssueSecurityLevelMember {
  \\"\\"\\"Whether this is the last page.\\"\\"\\"
  isLast: Boolean

  \\"\\"\\"The maximum number of items that could be returned.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"If there is another page of results, the URL of the next page.\\"\\"\\"
  nextPage: URL

  \\"\\"\\"The URL of the page.\\"\\"\\"
  self: URL

  \\"\\"\\"The index of the first item returned.\\"\\"\\"
  startAt: BigInt

  \\"\\"\\"The number of items returned.\\"\\"\\"
  total: BigInt

  \\"\\"\\"The list of items.\\"\\"\\"
  values: [IssueSecurityLevelMember]
}

\\"\\"\\"A page of items.\\"\\"\\"
type PageBeanIssueTypeScheme {
  \\"\\"\\"Whether this is the last page.\\"\\"\\"
  isLast: Boolean

  \\"\\"\\"The maximum number of items that could be returned.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"If there is another page of results, the URL of the next page.\\"\\"\\"
  nextPage: URL

  \\"\\"\\"The URL of the page.\\"\\"\\"
  self: URL

  \\"\\"\\"The index of the first item returned.\\"\\"\\"
  startAt: BigInt

  \\"\\"\\"The number of items returned.\\"\\"\\"
  total: BigInt

  \\"\\"\\"The list of items.\\"\\"\\"
  values: [IssueTypeScheme]
}

\\"\\"\\"A page of items.\\"\\"\\"
type PageBeanIssueTypeSchemeMapping {
  \\"\\"\\"Whether this is the last page.\\"\\"\\"
  isLast: Boolean

  \\"\\"\\"The maximum number of items that could be returned.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"If there is another page of results, the URL of the next page.\\"\\"\\"
  nextPage: URL

  \\"\\"\\"The URL of the page.\\"\\"\\"
  self: URL

  \\"\\"\\"The index of the first item returned.\\"\\"\\"
  startAt: BigInt

  \\"\\"\\"The number of items returned.\\"\\"\\"
  total: BigInt

  \\"\\"\\"The list of items.\\"\\"\\"
  values: [IssueTypeSchemeMapping]
}

\\"\\"\\"A page of items.\\"\\"\\"
type PageBeanIssueTypeSchemeProjects {
  \\"\\"\\"Whether this is the last page.\\"\\"\\"
  isLast: Boolean

  \\"\\"\\"The maximum number of items that could be returned.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"If there is another page of results, the URL of the next page.\\"\\"\\"
  nextPage: URL

  \\"\\"\\"The URL of the page.\\"\\"\\"
  self: URL

  \\"\\"\\"The index of the first item returned.\\"\\"\\"
  startAt: BigInt

  \\"\\"\\"The number of items returned.\\"\\"\\"
  total: BigInt

  \\"\\"\\"The list of items.\\"\\"\\"
  values: [IssueTypeSchemeProjects]
}

\\"\\"\\"A page of items.\\"\\"\\"
type PageBeanIssueTypeScreenScheme {
  \\"\\"\\"Whether this is the last page.\\"\\"\\"
  isLast: Boolean

  \\"\\"\\"The maximum number of items that could be returned.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"If there is another page of results, the URL of the next page.\\"\\"\\"
  nextPage: URL

  \\"\\"\\"The URL of the page.\\"\\"\\"
  self: URL

  \\"\\"\\"The index of the first item returned.\\"\\"\\"
  startAt: BigInt

  \\"\\"\\"The number of items returned.\\"\\"\\"
  total: BigInt

  \\"\\"\\"The list of items.\\"\\"\\"
  values: [IssueTypeScreenScheme]
}

\\"\\"\\"A page of items.\\"\\"\\"
type PageBeanIssueTypeScreenScheme2 {
  \\"\\"\\"Whether this is the last page.\\"\\"\\"
  isLast: Boolean

  \\"\\"\\"The maximum number of items that could be returned.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"If there is another page of results, the URL of the next page.\\"\\"\\"
  nextPage: URL

  \\"\\"\\"The URL of the page.\\"\\"\\"
  self: URL

  \\"\\"\\"The index of the first item returned.\\"\\"\\"
  startAt: BigInt

  \\"\\"\\"The number of items returned.\\"\\"\\"
  total: BigInt

  \\"\\"\\"The list of items.\\"\\"\\"
  values: [IssueTypeScreenScheme]
}

\\"\\"\\"A page of items.\\"\\"\\"
type PageBeanIssueTypeScreenSchemeItem {
  \\"\\"\\"Whether this is the last page.\\"\\"\\"
  isLast: Boolean

  \\"\\"\\"The maximum number of items that could be returned.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"If there is another page of results, the URL of the next page.\\"\\"\\"
  nextPage: URL

  \\"\\"\\"The URL of the page.\\"\\"\\"
  self: URL

  \\"\\"\\"The index of the first item returned.\\"\\"\\"
  startAt: BigInt

  \\"\\"\\"The number of items returned.\\"\\"\\"
  total: BigInt

  \\"\\"\\"The list of items.\\"\\"\\"
  values: [IssueTypeScreenSchemeItem]
}

\\"\\"\\"A page of items.\\"\\"\\"
type PageBeanIssueTypeScreenSchemesProjects {
  \\"\\"\\"Whether this is the last page.\\"\\"\\"
  isLast: Boolean

  \\"\\"\\"The maximum number of items that could be returned.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"If there is another page of results, the URL of the next page.\\"\\"\\"
  nextPage: URL

  \\"\\"\\"The URL of the page.\\"\\"\\"
  self: URL

  \\"\\"\\"The index of the first item returned.\\"\\"\\"
  startAt: BigInt

  \\"\\"\\"The number of items returned.\\"\\"\\"
  total: BigInt

  \\"\\"\\"The list of items.\\"\\"\\"
  values: [IssueTypeScreenSchemesProjects]
}

\\"\\"\\"A page of items.\\"\\"\\"
type PageBeanIssueTypeToContextMapping {
  \\"\\"\\"Whether this is the last page.\\"\\"\\"
  isLast: Boolean

  \\"\\"\\"The maximum number of items that could be returned.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"If there is another page of results, the URL of the next page.\\"\\"\\"
  nextPage: URL

  \\"\\"\\"The URL of the page.\\"\\"\\"
  self: URL

  \\"\\"\\"The index of the first item returned.\\"\\"\\"
  startAt: BigInt

  \\"\\"\\"The number of items returned.\\"\\"\\"
  total: BigInt

  \\"\\"\\"The list of items.\\"\\"\\"
  values: [IssueTypeToContextMapping]
}

\\"\\"\\"A page of items.\\"\\"\\"
type PageBeanNotificationScheme {
  \\"\\"\\"Whether this is the last page.\\"\\"\\"
  isLast: Boolean

  \\"\\"\\"The maximum number of items that could be returned.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"If there is another page of results, the URL of the next page.\\"\\"\\"
  nextPage: URL

  \\"\\"\\"The URL of the page.\\"\\"\\"
  self: URL

  \\"\\"\\"The index of the first item returned.\\"\\"\\"
  startAt: BigInt

  \\"\\"\\"The number of items returned.\\"\\"\\"
  total: BigInt

  \\"\\"\\"The list of items.\\"\\"\\"
  values: [NotificationScheme]
}

\\"\\"\\"A page of items.\\"\\"\\"
type PageBeanPriority {
  \\"\\"\\"Whether this is the last page.\\"\\"\\"
  isLast: Boolean

  \\"\\"\\"The maximum number of items that could be returned.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"If there is another page of results, the URL of the next page.\\"\\"\\"
  nextPage: URL

  \\"\\"\\"The URL of the page.\\"\\"\\"
  self: URL

  \\"\\"\\"The index of the first item returned.\\"\\"\\"
  startAt: BigInt

  \\"\\"\\"The number of items returned.\\"\\"\\"
  total: BigInt

  \\"\\"\\"The list of items.\\"\\"\\"
  values: [Priority2]
}

\\"\\"\\"A page of items.\\"\\"\\"
type PageBeanProject {
  \\"\\"\\"Whether this is the last page.\\"\\"\\"
  isLast: Boolean

  \\"\\"\\"The maximum number of items that could be returned.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"If there is another page of results, the URL of the next page.\\"\\"\\"
  nextPage: URL

  \\"\\"\\"The URL of the page.\\"\\"\\"
  self: URL

  \\"\\"\\"The index of the first item returned.\\"\\"\\"
  startAt: BigInt

  \\"\\"\\"The number of items returned.\\"\\"\\"
  total: BigInt

  \\"\\"\\"The list of items.\\"\\"\\"
  values: [Project2]
}

\\"\\"\\"A page of items.\\"\\"\\"
type PageBeanProjectDetails {
  \\"\\"\\"Whether this is the last page.\\"\\"\\"
  isLast: Boolean

  \\"\\"\\"The maximum number of items that could be returned.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"If there is another page of results, the URL of the next page.\\"\\"\\"
  nextPage: URL

  \\"\\"\\"The URL of the page.\\"\\"\\"
  self: URL

  \\"\\"\\"The index of the first item returned.\\"\\"\\"
  startAt: BigInt

  \\"\\"\\"The number of items returned.\\"\\"\\"
  total: BigInt

  \\"\\"\\"The list of items.\\"\\"\\"
  values: [ProjectDetails2]
}

\\"\\"\\"A page of items.\\"\\"\\"
type PageBeanScreen {
  \\"\\"\\"Whether this is the last page.\\"\\"\\"
  isLast: Boolean

  \\"\\"\\"The maximum number of items that could be returned.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"If there is another page of results, the URL of the next page.\\"\\"\\"
  nextPage: URL

  \\"\\"\\"The URL of the page.\\"\\"\\"
  self: URL

  \\"\\"\\"The index of the first item returned.\\"\\"\\"
  startAt: BigInt

  \\"\\"\\"The number of items returned.\\"\\"\\"
  total: BigInt

  \\"\\"\\"The list of items.\\"\\"\\"
  values: [Screen]
}

\\"\\"\\"A page of items.\\"\\"\\"
type PageBeanScreenScheme {
  \\"\\"\\"Whether this is the last page.\\"\\"\\"
  isLast: Boolean

  \\"\\"\\"The maximum number of items that could be returned.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"If there is another page of results, the URL of the next page.\\"\\"\\"
  nextPage: URL

  \\"\\"\\"The URL of the page.\\"\\"\\"
  self: URL

  \\"\\"\\"The index of the first item returned.\\"\\"\\"
  startAt: BigInt

  \\"\\"\\"The number of items returned.\\"\\"\\"
  total: BigInt

  \\"\\"\\"The list of items.\\"\\"\\"
  values: [ScreenScheme]
}

\\"\\"\\"A page of items.\\"\\"\\"
type PageBeanScreenWithTab {
  \\"\\"\\"Whether this is the last page.\\"\\"\\"
  isLast: Boolean

  \\"\\"\\"The maximum number of items that could be returned.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"If there is another page of results, the URL of the next page.\\"\\"\\"
  nextPage: URL

  \\"\\"\\"The URL of the page.\\"\\"\\"
  self: URL

  \\"\\"\\"The index of the first item returned.\\"\\"\\"
  startAt: BigInt

  \\"\\"\\"The number of items returned.\\"\\"\\"
  total: BigInt

  \\"\\"\\"The list of items.\\"\\"\\"
  values: [ScreenWithTab]
}

\\"\\"\\"A page of items.\\"\\"\\"
type PageBeanString {
  \\"\\"\\"Whether this is the last page.\\"\\"\\"
  isLast: Boolean

  \\"\\"\\"The maximum number of items that could be returned.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"If there is another page of results, the URL of the next page.\\"\\"\\"
  nextPage: URL

  \\"\\"\\"The URL of the page.\\"\\"\\"
  self: URL

  \\"\\"\\"The index of the first item returned.\\"\\"\\"
  startAt: BigInt

  \\"\\"\\"The number of items returned.\\"\\"\\"
  total: BigInt

  \\"\\"\\"The list of items.\\"\\"\\"
  values: [String]
}

\\"\\"\\"A page of items.\\"\\"\\"
type PageBeanUiModificationDetails {
  \\"\\"\\"Whether this is the last page.\\"\\"\\"
  isLast: Boolean

  \\"\\"\\"The maximum number of items that could be returned.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"If there is another page of results, the URL of the next page.\\"\\"\\"
  nextPage: URL

  \\"\\"\\"The URL of the page.\\"\\"\\"
  self: URL

  \\"\\"\\"The index of the first item returned.\\"\\"\\"
  startAt: BigInt

  \\"\\"\\"The number of items returned.\\"\\"\\"
  total: BigInt

  \\"\\"\\"The list of items.\\"\\"\\"
  values: [UiModificationDetails]
}

\\"\\"\\"A page of items.\\"\\"\\"
type PageBeanUser {
  \\"\\"\\"Whether this is the last page.\\"\\"\\"
  isLast: Boolean

  \\"\\"\\"The maximum number of items that could be returned.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"If there is another page of results, the URL of the next page.\\"\\"\\"
  nextPage: URL

  \\"\\"\\"The URL of the page.\\"\\"\\"
  self: URL

  \\"\\"\\"The index of the first item returned.\\"\\"\\"
  startAt: BigInt

  \\"\\"\\"The number of items returned.\\"\\"\\"
  total: BigInt

  \\"\\"\\"The list of items.\\"\\"\\"
  values: [User9]
}

\\"\\"\\"A page of items.\\"\\"\\"
type PageBeanUserDetails {
  \\"\\"\\"Whether this is the last page.\\"\\"\\"
  isLast: Boolean

  \\"\\"\\"The maximum number of items that could be returned.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"If there is another page of results, the URL of the next page.\\"\\"\\"
  nextPage: URL

  \\"\\"\\"The URL of the page.\\"\\"\\"
  self: URL

  \\"\\"\\"The index of the first item returned.\\"\\"\\"
  startAt: BigInt

  \\"\\"\\"The number of items returned.\\"\\"\\"
  total: BigInt

  \\"\\"\\"The list of items.\\"\\"\\"
  values: [UserDetails]
}

\\"\\"\\"A page of items.\\"\\"\\"
type PageBeanUserKey {
  \\"\\"\\"Whether this is the last page.\\"\\"\\"
  isLast: Boolean

  \\"\\"\\"The maximum number of items that could be returned.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"If there is another page of results, the URL of the next page.\\"\\"\\"
  nextPage: URL

  \\"\\"\\"The URL of the page.\\"\\"\\"
  self: URL

  \\"\\"\\"The index of the first item returned.\\"\\"\\"
  startAt: BigInt

  \\"\\"\\"The number of items returned.\\"\\"\\"
  total: BigInt

  \\"\\"\\"The list of items.\\"\\"\\"
  values: [UserKey]
}

\\"\\"\\"A page of items.\\"\\"\\"
type PageBeanVersion {
  \\"\\"\\"Whether this is the last page.\\"\\"\\"
  isLast: Boolean

  \\"\\"\\"The maximum number of items that could be returned.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"If there is another page of results, the URL of the next page.\\"\\"\\"
  nextPage: URL

  \\"\\"\\"The URL of the page.\\"\\"\\"
  self: URL

  \\"\\"\\"The index of the first item returned.\\"\\"\\"
  startAt: BigInt

  \\"\\"\\"The number of items returned.\\"\\"\\"
  total: BigInt

  \\"\\"\\"The list of items.\\"\\"\\"
  values: [Version]
}

\\"\\"\\"A page of items.\\"\\"\\"
type PageBeanWebhook {
  \\"\\"\\"Whether this is the last page.\\"\\"\\"
  isLast: Boolean

  \\"\\"\\"The maximum number of items that could be returned.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"If there is another page of results, the URL of the next page.\\"\\"\\"
  nextPage: URL

  \\"\\"\\"The URL of the page.\\"\\"\\"
  self: URL

  \\"\\"\\"The index of the first item returned.\\"\\"\\"
  startAt: BigInt

  \\"\\"\\"The number of items returned.\\"\\"\\"
  total: BigInt

  \\"\\"\\"The list of items.\\"\\"\\"
  values: [Webhook]
}

\\"\\"\\"A page of items.\\"\\"\\"
type PageBeanWorkflow {
  \\"\\"\\"Whether this is the last page.\\"\\"\\"
  isLast: Boolean

  \\"\\"\\"The maximum number of items that could be returned.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"If there is another page of results, the URL of the next page.\\"\\"\\"
  nextPage: URL

  \\"\\"\\"The URL of the page.\\"\\"\\"
  self: URL

  \\"\\"\\"The index of the first item returned.\\"\\"\\"
  startAt: BigInt

  \\"\\"\\"The number of items returned.\\"\\"\\"
  total: BigInt

  \\"\\"\\"The list of items.\\"\\"\\"
  values: [Workflow]
}

\\"\\"\\"A page of items.\\"\\"\\"
type PageBeanWorkflowScheme {
  \\"\\"\\"Whether this is the last page.\\"\\"\\"
  isLast: Boolean

  \\"\\"\\"The maximum number of items that could be returned.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"If there is another page of results, the URL of the next page.\\"\\"\\"
  nextPage: URL

  \\"\\"\\"The URL of the page.\\"\\"\\"
  self: URL

  \\"\\"\\"The index of the first item returned.\\"\\"\\"
  startAt: BigInt

  \\"\\"\\"The number of items returned.\\"\\"\\"
  total: BigInt

  \\"\\"\\"The list of items.\\"\\"\\"
  values: [WorkflowScheme]
}

\\"\\"\\"A page of items.\\"\\"\\"
type PageBeanWorkflowTransitionRules {
  \\"\\"\\"Whether this is the last page.\\"\\"\\"
  isLast: Boolean

  \\"\\"\\"The maximum number of items that could be returned.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"If there is another page of results, the URL of the next page.\\"\\"\\"
  nextPage: URL

  \\"\\"\\"The URL of the page.\\"\\"\\"
  self: URL

  \\"\\"\\"The index of the first item returned.\\"\\"\\"
  startAt: BigInt

  \\"\\"\\"The number of items returned.\\"\\"\\"
  total: BigInt

  \\"\\"\\"The list of items.\\"\\"\\"
  values: [WorkflowTransitionRules]
}

\\"\\"\\"A page of changelogs.\\"\\"\\"
type PageOfChangelogs {
  \\"\\"\\"The list of changelogs.\\"\\"\\"
  histories: [Changelog]

  \\"\\"\\"The maximum number of results that could be on the page.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"The index of the first item returned on the page.\\"\\"\\"
  startAt: Int

  \\"\\"\\"The number of results on the page.\\"\\"\\"
  total: Int
}

\\"\\"\\"A page of changelogs.\\"\\"\\"
type PageOfChangelogs2 {
  \\"\\"\\"The list of changelogs.\\"\\"\\"
  histories: [Changelog]

  \\"\\"\\"The maximum number of results that could be on the page.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"The index of the first item returned on the page.\\"\\"\\"
  startAt: Int

  \\"\\"\\"The number of results on the page.\\"\\"\\"
  total: Int
}

\\"\\"\\"A page of comments.\\"\\"\\"
type PageOfComments {
  additionalProperties: JSON

  \\"\\"\\"The list of comments.\\"\\"\\"
  comments: [Comment]

  \\"\\"\\"The maximum number of items that could be returned.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"The index of the first item returned.\\"\\"\\"
  startAt: BigInt

  \\"\\"\\"The number of items returned.\\"\\"\\"
  total: BigInt
}

\\"\\"\\"A page containing dashboard details.\\"\\"\\"
type PageOfDashboards {
  \\"\\"\\"List of dashboards.\\"\\"\\"
  dashboards: [Dashboard]

  \\"\\"\\"The maximum number of results that could be on the page.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"The URL of the next page of results, if any.\\"\\"\\"
  next: String

  \\"\\"\\"The URL of the previous page of results, if any.\\"\\"\\"
  prev: String

  \\"\\"\\"The index of the first item returned on the page.\\"\\"\\"
  startAt: Int

  \\"\\"\\"The number of results on the page.\\"\\"\\"
  total: Int
}

type PageOfStatuses {
  \\"\\"\\"Whether this is the last page.\\"\\"\\"
  isLast: Boolean

  \\"\\"\\"The maximum number of items that could be returned.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"The URL of the next page of results, if any.\\"\\"\\"
  nextPage: String

  \\"\\"\\"The URL of this page.\\"\\"\\"
  self: String

  \\"\\"\\"The index of the first item returned on the page.\\"\\"\\"
  startAt: BigInt

  \\"\\"\\"Number of items that satisfy the search.\\"\\"\\"
  total: BigInt

  \\"\\"\\"The list of items.\\"\\"\\"
  values: [JiraStatus]
}

\\"\\"\\"Paginated list of worklog details\\"\\"\\"
type PageOfWorklogs {
  additionalProperties: JSON

  \\"\\"\\"The maximum number of results that could be on the page.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"The index of the first item returned on the page.\\"\\"\\"
  startAt: Int

  \\"\\"\\"The number of results on the page.\\"\\"\\"
  total: Int

  \\"\\"\\"List of worklogs.\\"\\"\\"
  worklogs: [Worklog]
}

\\"\\"\\"
A paged list. To access additional details append \`[start-index:end-index]\` to the expand request. For example, \`?expand=sharedUsers[10:40]\` returns a list starting at item 10 and finishing at item 40.
\\"\\"\\"
type PagedListUserDetailsApplicationUser {
  \\"\\"\\"The index of the last item returned on the page.\\"\\"\\"
  end_index: Int

  \\"\\"\\"The list of items.\\"\\"\\"
  items: [UserDetails]

  \\"\\"\\"The maximum number of results that could be on the page.\\"\\"\\"
  max_results: Int

  \\"\\"\\"The number of items on the page.\\"\\"\\"
  size: Int

  \\"\\"\\"The index of the first item returned on the page.\\"\\"\\"
  start_index: Int
}

\\"\\"\\"A list of parsed JQL queries.\\"\\"\\"
type ParsedJqlQueries {
  \\"\\"\\"A list of parsed JQL queries.\\"\\"\\"
  queries: [ParsedJqlQuery]!
}

\\"\\"\\"Details of a parsed JQL query.\\"\\"\\"
type ParsedJqlQuery {
  \\"\\"\\"The list of syntax or validation errors.\\"\\"\\"
  errors: [String]

  \\"\\"\\"The JQL query that was parsed and validated.\\"\\"\\"
  query: String!
  structure: JqlQuery
}

\\"\\"\\"Details about a permission granted to a user or group.\\"\\"\\"
type PermissionGrant {
  holder: PermissionHolder2

  \\"\\"\\"The ID of the permission granted details.\\"\\"\\"
  id: BigInt

  \\"\\"\\"
  The permission to grant. This permission can be one of the built-in permissions or a custom permission added by an app. See [Built-in permissions](../api-group-permission-schemes/#built-in-permissions) in *Get all permission schemes* for more information about the built-in permissions. See the [project permission](https://developer.atlassian.com/cloud/jira/platform/modules/project-permission/) and [global permission](https://developer.atlassian.com/cloud/jira/platform/modules/global-permission/) module documentation for more information about custom permissions.
  \\"\\"\\"
  permission: String

  \\"\\"\\"The URL of the permission granted details.\\"\\"\\"
  self: URL
}

\\"\\"\\"Details about a permission granted to a user or group.\\"\\"\\"
input PermissionGrant_Input {
  holder: PermissionHolder_Input2

  \\"\\"\\"The ID of the permission granted details.\\"\\"\\"
  id: BigInt

  \\"\\"\\"
  The permission to grant. This permission can be one of the built-in permissions or a custom permission added by an app. See [Built-in permissions](../api-group-permission-schemes/#built-in-permissions) in *Get all permission schemes* for more information about the built-in permissions. See the [project permission](https://developer.atlassian.com/cloud/jira/platform/modules/project-permission/) and [global permission](https://developer.atlassian.com/cloud/jira/platform/modules/global-permission/) module documentation for more information about custom permissions.
  \\"\\"\\"
  permission: String

  \\"\\"\\"The URL of the permission granted details.\\"\\"\\"
  self: URL
}

\\"\\"\\"List of permission grants.\\"\\"\\"
type PermissionGrants {
  \\"\\"\\"
  Expand options that include additional permission grant details in the response.
  \\"\\"\\"
  expand: String

  \\"\\"\\"Permission grants list.\\"\\"\\"
  permissions: [PermissionGrant]
}

\\"\\"\\"
Details of a user, group, field, or project role that holds a permission. See [Holder object](../api-group-permission-schemes/#holder-object) in *Get all permission schemes* for more information.
\\"\\"\\"
type PermissionHolder {
  \\"\\"\\"
  Expand options that include additional permission holder details in the response.
  \\"\\"\\"
  expand: String

  \\"\\"\\"
  As a group's name can change, use of \`value\` is recommended. The identifier associated withthe \`type\` value that defines the holder of the permission.
  \\"\\"\\"
  parameter: String

  \\"\\"\\"The type of permission holder.\\"\\"\\"
  type: String!

  \\"\\"\\"
  The identifier associated with the \`type\` value that defines the holder of the permission.
  \\"\\"\\"
  value: String
}

\\"\\"\\"
Details of a user, group, field, or project role that holds a permission. See [Holder object](../api-group-permission-schemes/#holder-object) in *Get all permission schemes* for more information.
\\"\\"\\"
type PermissionHolder2 {
  \\"\\"\\"
  Expand options that include additional permission holder details in the response.
  \\"\\"\\"
  expand: String

  \\"\\"\\"
  As a group's name can change, use of \`value\` is recommended. The identifier associated withthe \`type\` value that defines the holder of the permission.
  \\"\\"\\"
  parameter: String

  \\"\\"\\"The type of permission holder.\\"\\"\\"
  type: String!

  \\"\\"\\"
  The identifier associated with the \`type\` value that defines the holder of the permission.
  \\"\\"\\"
  value: String
}

\\"\\"\\"
Details of a user, group, field, or project role that holds a permission. See [Holder object](../api-group-permission-schemes/#holder-object) in *Get all permission schemes* for more information.
\\"\\"\\"
input PermissionHolder_Input2 {
  \\"\\"\\"
  Expand options that include additional permission holder details in the response.
  \\"\\"\\"
  expand: String

  \\"\\"\\"
  As a group's name can change, use of \`value\` is recommended. The identifier associated withthe \`type\` value that defines the holder of the permission.
  \\"\\"\\"
  parameter: String

  \\"\\"\\"The type of permission holder.\\"\\"\\"
  type: String!

  \\"\\"\\"
  The identifier associated with the \`type\` value that defines the holder of the permission.
  \\"\\"\\"
  value: String
}

\\"\\"\\"Details of a permission scheme.\\"\\"\\"
type PermissionScheme {
  additionalProperties: JSON

  \\"\\"\\"A description for the permission scheme.\\"\\"\\"
  description: String

  \\"\\"\\"The expand options available for the permission scheme.\\"\\"\\"
  expand: String

  \\"\\"\\"The ID of the permission scheme.\\"\\"\\"
  id: BigInt

  \\"\\"\\"The name of the permission scheme. Must be unique.\\"\\"\\"
  name: String!

  \\"\\"\\"
  The permission scheme to create or update. See [About permission schemes and grants](../api-group-permission-schemes/#about-permission-schemes-and-grants) for more information.
  \\"\\"\\"
  permissions: [PermissionGrant]
  scope: Scope7

  \\"\\"\\"The URL of the permission scheme.\\"\\"\\"
  self: URL
}

\\"\\"\\"Details of a permission scheme.\\"\\"\\"
scalar PermissionScheme_Input

\\"\\"\\"List of all permission schemes.\\"\\"\\"
type PermissionSchemes {
  \\"\\"\\"Permission schemes list.\\"\\"\\"
  permissionSchemes: [PermissionScheme]
}

\\"\\"\\"Details about permissions.\\"\\"\\"
type Permissions {
  permissions: UserPermission
}

input PermissionsKeysBean_Input {
  \\"\\"\\"A list of permission keys.\\"\\"\\"
  permissions: [String]!
}

\\"\\"\\"A list of projects in which a user is granted permissions.\\"\\"\\"
type PermittedProjects {
  \\"\\"\\"A list of projects.\\"\\"\\"
  projects: [ProjectIdentifierBean]
}

\\"\\"\\"An issue priority.\\"\\"\\"
type Priority {
  additionalProperties: JSON

  \\"\\"\\"The description of the issue priority.\\"\\"\\"
  description: String

  \\"\\"\\"The URL of the icon for the issue priority.\\"\\"\\"
  iconUrl: String

  \\"\\"\\"The ID of the issue priority.\\"\\"\\"
  id: String

  \\"\\"\\"Whether this priority is the default.\\"\\"\\"
  isDefault: Boolean

  \\"\\"\\"The name of the issue priority.\\"\\"\\"
  name: String

  \\"\\"\\"The URL of the issue priority.\\"\\"\\"
  self: String

  \\"\\"\\"The color used to indicate the issue priority.\\"\\"\\"
  statusColor: String
}

\\"\\"\\"An issue priority.\\"\\"\\"
type Priority2 {
  additionalProperties: JSON

  \\"\\"\\"The description of the issue priority.\\"\\"\\"
  description: String

  \\"\\"\\"The URL of the icon for the issue priority.\\"\\"\\"
  iconUrl: String

  \\"\\"\\"The ID of the issue priority.\\"\\"\\"
  id: String

  \\"\\"\\"Whether this priority is the default.\\"\\"\\"
  isDefault: Boolean

  \\"\\"\\"The name of the issue priority.\\"\\"\\"
  name: String

  \\"\\"\\"The URL of the issue priority.\\"\\"\\"
  self: String

  \\"\\"\\"The color used to indicate the issue priority.\\"\\"\\"
  statusColor: String
}

\\"\\"\\"The ID of an issue priority.\\"\\"\\"
type PriorityId {
  additionalProperties: JSON

  \\"\\"\\"The ID of the issue priority.\\"\\"\\"
  id: String!
}

\\"\\"\\"An issue priority.\\"\\"\\"
scalar Priority_Input

\\"\\"\\"Details about a project.\\"\\"\\"
type Project {
  \\"\\"\\"Whether the project is archived.\\"\\"\\"
  archived: Boolean
  archivedBy: User7

  \\"\\"\\"The date when the project was archived.\\"\\"\\"
  archivedDate: DateTime
  assigneeType: query_getAllDashboards_oneOf_0_dashboards_items_sharePermissions_items_project_allOf_0_assigneeType
  avatarUrls: AvatarUrlsBean2

  \\"\\"\\"List of the components contained in the project.\\"\\"\\"
  components: [ProjectComponent]

  \\"\\"\\"Whether the project is marked as deleted.\\"\\"\\"
  deleted: Boolean
  deletedBy: User6

  \\"\\"\\"The date when the project was marked as deleted.\\"\\"\\"
  deletedDate: DateTime

  \\"\\"\\"A brief description of the project.\\"\\"\\"
  description: String

  \\"\\"\\"An email address associated with the project.\\"\\"\\"
  email: String

  \\"\\"\\"
  Expand options that include additional project details in the response.
  \\"\\"\\"
  expand: String

  \\"\\"\\"Whether the project is selected as a favorite.\\"\\"\\"
  favourite: Boolean

  \\"\\"\\"The ID of the project.\\"\\"\\"
  id: String
  insight: ProjectInsight

  \\"\\"\\"Whether the project is private.\\"\\"\\"
  isPrivate: Boolean
  issueTypeHierarchy: Hierarchy

  \\"\\"\\"List of the issue types available in the project.\\"\\"\\"
  issueTypes: [IssueTypeDetails]

  \\"\\"\\"The key of the project.\\"\\"\\"
  key: String
  landingPageInfo: ProjectLandingPageInfo
  lead: User5

  \\"\\"\\"The name of the project.\\"\\"\\"
  name: String
  permissions: ProjectPermissions
  projectCategory: ProjectCategory
  projectTypeKey: query_getAllDashboards_oneOf_0_dashboards_items_sharePermissions_items_project_allOf_0_issueTypes_items_scope_allOf_0_project_allOf_0_projectTypeKey
  properties: query_getAttachment_additionalProperties

  \\"\\"\\"The date when the project is deleted permanently.\\"\\"\\"
  retentionTillDate: DateTime
  roles: query_getAllDashboards_oneOf_0_dashboards_items_sharePermissions_items_project_allOf_0_roles

  \\"\\"\\"The URL of the project details.\\"\\"\\"
  self: URL

  \\"\\"\\"Whether the project is simplified.\\"\\"\\"
  simplified: Boolean
  style: query_getAllDashboards_oneOf_0_dashboards_items_sharePermissions_items_project_allOf_0_style

  \\"\\"\\"
  A link to information about this project, such as project documentation.
  \\"\\"\\"
  url: String

  \\"\\"\\"Unique ID for next-gen projects.\\"\\"\\"
  uuid: String

  \\"\\"\\"
  The versions defined in the project. For more information, see [Create version](#api-rest-api-3-version-post).
  \\"\\"\\"
  versions: [Version]
}

\\"\\"\\"Details about a project.\\"\\"\\"
type Project2 {
  \\"\\"\\"Whether the project is archived.\\"\\"\\"
  archived: Boolean
  archivedBy: User7

  \\"\\"\\"The date when the project was archived.\\"\\"\\"
  archivedDate: DateTime
  assigneeType: query_getAllDashboards_oneOf_0_dashboards_items_sharePermissions_items_project_allOf_0_assigneeType
  avatarUrls: AvatarUrlsBean2

  \\"\\"\\"List of the components contained in the project.\\"\\"\\"
  components: [ProjectComponent]

  \\"\\"\\"Whether the project is marked as deleted.\\"\\"\\"
  deleted: Boolean
  deletedBy: User6

  \\"\\"\\"The date when the project was marked as deleted.\\"\\"\\"
  deletedDate: DateTime

  \\"\\"\\"A brief description of the project.\\"\\"\\"
  description: String

  \\"\\"\\"An email address associated with the project.\\"\\"\\"
  email: String

  \\"\\"\\"
  Expand options that include additional project details in the response.
  \\"\\"\\"
  expand: String

  \\"\\"\\"Whether the project is selected as a favorite.\\"\\"\\"
  favourite: Boolean

  \\"\\"\\"The ID of the project.\\"\\"\\"
  id: String
  insight: ProjectInsight

  \\"\\"\\"Whether the project is private.\\"\\"\\"
  isPrivate: Boolean
  issueTypeHierarchy: Hierarchy

  \\"\\"\\"List of the issue types available in the project.\\"\\"\\"
  issueTypes: [IssueTypeDetails]

  \\"\\"\\"The key of the project.\\"\\"\\"
  key: String
  landingPageInfo: ProjectLandingPageInfo
  lead: User5

  \\"\\"\\"The name of the project.\\"\\"\\"
  name: String
  permissions: ProjectPermissions
  projectCategory: ProjectCategory
  projectTypeKey: query_getAllDashboards_oneOf_0_dashboards_items_sharePermissions_items_project_allOf_0_issueTypes_items_scope_allOf_0_project_allOf_0_projectTypeKey
  properties: query_getAttachment_additionalProperties

  \\"\\"\\"The date when the project is deleted permanently.\\"\\"\\"
  retentionTillDate: DateTime
  roles: query_getAllDashboards_oneOf_0_dashboards_items_sharePermissions_items_project_allOf_0_roles

  \\"\\"\\"The URL of the project details.\\"\\"\\"
  self: URL

  \\"\\"\\"Whether the project is simplified.\\"\\"\\"
  simplified: Boolean
  style: query_getAllDashboards_oneOf_0_dashboards_items_sharePermissions_items_project_allOf_0_style

  \\"\\"\\"
  A link to information about this project, such as project documentation.
  \\"\\"\\"
  url: String

  \\"\\"\\"Unique ID for next-gen projects.\\"\\"\\"
  uuid: String

  \\"\\"\\"
  The versions defined in the project. For more information, see [Create version](#api-rest-api-3-version-post).
  \\"\\"\\"
  versions: [Version]
}

\\"\\"\\"List of project avatars.\\"\\"\\"
type ProjectAvatars {
  \\"\\"\\"List of avatars added to Jira. These avatars may be deleted.\\"\\"\\"
  custom: [Avatar]

  \\"\\"\\"List of avatars included with Jira. These avatars cannot be deleted.\\"\\"\\"
  system: [Avatar]
}

\\"\\"\\"A project category.\\"\\"\\"
type ProjectCategory {
  \\"\\"\\"The description of the project category.\\"\\"\\"
  description: String

  \\"\\"\\"The ID of the project category.\\"\\"\\"
  id: String

  \\"\\"\\"
  The name of the project category. Required on create, optional on update.
  \\"\\"\\"
  name: String

  \\"\\"\\"The URL of the project category.\\"\\"\\"
  self: URL
}

\\"\\"\\"A project category.\\"\\"\\"
type ProjectCategory2 {
  \\"\\"\\"The description of the project category.\\"\\"\\"
  description: String

  \\"\\"\\"The ID of the project category.\\"\\"\\"
  id: String

  \\"\\"\\"
  The name of the project category. Required on create, optional on update.
  \\"\\"\\"
  name: String

  \\"\\"\\"The URL of the project category.\\"\\"\\"
  self: URL
}

\\"\\"\\"A project category.\\"\\"\\"
input ProjectCategory_Input {
  \\"\\"\\"The description of the project category.\\"\\"\\"
  description: String

  \\"\\"\\"The ID of the project category.\\"\\"\\"
  id: String

  \\"\\"\\"
  The name of the project category. Required on create, optional on update.
  \\"\\"\\"
  name: String

  \\"\\"\\"The URL of the project category.\\"\\"\\"
  self: URL
}

\\"\\"\\"A project category.\\"\\"\\"
input ProjectCategory_Input2 {
  \\"\\"\\"The description of the project category.\\"\\"\\"
  description: String

  \\"\\"\\"The ID of the project category.\\"\\"\\"
  id: String

  \\"\\"\\"
  The name of the project category. Required on create, optional on update.
  \\"\\"\\"
  name: String

  \\"\\"\\"The URL of the project category.\\"\\"\\"
  self: URL
}

\\"\\"\\"Details about a project component.\\"\\"\\"
type ProjectComponent {
  assignee: User3
  assigneeType: query_getComponent_assigneeType

  \\"\\"\\"
  The description for the component. Optional when creating or updating a component.
  \\"\\"\\"
  description: String

  \\"\\"\\"The unique identifier for the component.\\"\\"\\"
  id: String

  \\"\\"\\"
  Whether a user is associated with \`assigneeType\`. For example, if the \`assigneeType\` is set to \`COMPONENT_LEAD\` but the component lead is not set, then \`false\` is returned.
  \\"\\"\\"
  isAssigneeTypeValid: Boolean
  lead: User2

  \\"\\"\\"
  The accountId of the component's lead user. The accountId uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.
  \\"\\"\\"
  leadAccountId: query_getComponent_leadAccountId

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  leadUserName: String

  \\"\\"\\"
  The unique name for the component in the project. Required when creating a component. Optional when updating a component. The maximum length is 255 characters.
  \\"\\"\\"
  name: String

  \\"\\"\\"
  The key of the project the component is assigned to. Required when creating a component. Can't be updated.
  \\"\\"\\"
  project: String

  \\"\\"\\"The ID of the project the component is assigned to.\\"\\"\\"
  projectId: BigInt
  realAssignee: User4
  realAssigneeType: query_getComponent_realAssigneeType

  \\"\\"\\"The URL of the component.\\"\\"\\"
  self: URL
}

\\"\\"\\"Details about a project component.\\"\\"\\"
input ProjectComponent_Input {
  assignee: User_Input3
  assigneeType: query_getComponent_assigneeType

  \\"\\"\\"
  The description for the component. Optional when creating or updating a component.
  \\"\\"\\"
  description: String

  \\"\\"\\"The unique identifier for the component.\\"\\"\\"
  id: String

  \\"\\"\\"
  Whether a user is associated with \`assigneeType\`. For example, if the \`assigneeType\` is set to \`COMPONENT_LEAD\` but the component lead is not set, then \`false\` is returned.
  \\"\\"\\"
  isAssigneeTypeValid: Boolean
  lead: User_Input2

  \\"\\"\\"
  The accountId of the component's lead user. The accountId uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.
  \\"\\"\\"
  leadAccountId: query_getComponent_leadAccountId

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  leadUserName: String

  \\"\\"\\"
  The unique name for the component in the project. Required when creating a component. Optional when updating a component. The maximum length is 255 characters.
  \\"\\"\\"
  name: String

  \\"\\"\\"
  The key of the project the component is assigned to. Required when creating a component. Can't be updated.
  \\"\\"\\"
  project: String

  \\"\\"\\"The ID of the project the component is assigned to.\\"\\"\\"
  projectId: BigInt
  realAssignee: User_Input4
  realAssigneeType: query_getComponent_realAssigneeType

  \\"\\"\\"The URL of the component.\\"\\"\\"
  self: URL
}

\\"\\"\\"Details about a project.\\"\\"\\"
type ProjectDetails {
  avatarUrls: AvatarUrlsBean2

  \\"\\"\\"The ID of the project.\\"\\"\\"
  id: String

  \\"\\"\\"The key of the project.\\"\\"\\"
  key: String

  \\"\\"\\"The name of the project.\\"\\"\\"
  name: String
  projectCategory: UpdatedProjectCategory
  projectTypeKey: query_getAllDashboards_oneOf_0_dashboards_items_sharePermissions_items_project_allOf_0_issueTypes_items_scope_allOf_0_project_allOf_0_projectTypeKey

  \\"\\"\\"The URL of the project details.\\"\\"\\"
  self: String

  \\"\\"\\"Whether or not the project is simplified.\\"\\"\\"
  simplified: Boolean
}

\\"\\"\\"Details about a project.\\"\\"\\"
type ProjectDetails2 {
  avatarUrls: AvatarUrlsBean2

  \\"\\"\\"The ID of the project.\\"\\"\\"
  id: String

  \\"\\"\\"The key of the project.\\"\\"\\"
  key: String

  \\"\\"\\"The name of the project.\\"\\"\\"
  name: String
  projectCategory: UpdatedProjectCategory
  projectTypeKey: query_getAllDashboards_oneOf_0_dashboards_items_sharePermissions_items_project_allOf_0_issueTypes_items_scope_allOf_0_project_allOf_0_projectTypeKey

  \\"\\"\\"The URL of the project details.\\"\\"\\"
  self: String

  \\"\\"\\"Whether or not the project is simplified.\\"\\"\\"
  simplified: Boolean
}

\\"\\"\\"A project's sender email address.\\"\\"\\"
type ProjectEmailAddress {
  \\"\\"\\"The email address.\\"\\"\\"
  emailAddress: String

  \\"\\"\\"When using a custom domain, the status of the email address.\\"\\"\\"
  emailAddressStatus: [String]
}

\\"\\"\\"A project's sender email address.\\"\\"\\"
input ProjectEmailAddress_Input {
  \\"\\"\\"The email address.\\"\\"\\"
  emailAddress: String

  \\"\\"\\"When using a custom domain, the status of the email address.\\"\\"\\"
  emailAddressStatus: [String]
}

\\"\\"\\"Details of a project feature.\\"\\"\\"
type ProjectFeature {
  \\"\\"\\"The key of the feature.\\"\\"\\"
  feature: String

  \\"\\"\\"URI for the image representing the feature.\\"\\"\\"
  imageUri: String

  \\"\\"\\"Localized display description for the feature.\\"\\"\\"
  localisedDescription: String

  \\"\\"\\"Localized display name for the feature.\\"\\"\\"
  localisedName: String

  \\"\\"\\"List of keys of the features required to enable the feature.\\"\\"\\"
  prerequisites: [String]

  \\"\\"\\"The ID of the project.\\"\\"\\"
  projectId: BigInt
  state: query_getFeaturesForProject_features_items_state

  \\"\\"\\"Whether the state of the feature can be updated.\\"\\"\\"
  toggleLocked: Boolean
}

\\"\\"\\"Details of the feature state.\\"\\"\\"
input ProjectFeatureState_Input {
  state: mutationInput_toggleFeatureForProject_state
}

\\"\\"\\"Project ID details.\\"\\"\\"
type ProjectId {
  \\"\\"\\"The ID of the project.\\"\\"\\"
  id: String!
}

\\"\\"\\"Project ID details.\\"\\"\\"
input ProjectId_Input {
  \\"\\"\\"The ID of the project.\\"\\"\\"
  id: String!
}

\\"\\"\\"The identifiers for a project.\\"\\"\\"
type ProjectIdentifierBean {
  \\"\\"\\"The ID of the project.\\"\\"\\"
  id: BigInt

  \\"\\"\\"The key of the project.\\"\\"\\"
  key: String
}

\\"\\"\\"Identifiers for a project.\\"\\"\\"
type ProjectIdentifiers {
  \\"\\"\\"The ID of the created project.\\"\\"\\"
  id: BigInt!

  \\"\\"\\"The key of the created project.\\"\\"\\"
  key: String!

  \\"\\"\\"The URL of the created project.\\"\\"\\"
  self: URL!
}

\\"\\"\\"A list of project IDs.\\"\\"\\"
input ProjectIds_Input {
  \\"\\"\\"The IDs of projects.\\"\\"\\"
  projectIds: [String]!
}

\\"\\"\\"Additional details about a project.\\"\\"\\"
type ProjectInsight {
  \\"\\"\\"The last issue update time.\\"\\"\\"
  lastIssueUpdateTime: DateTime

  \\"\\"\\"Total issue count.\\"\\"\\"
  totalIssueCount: BigInt
}

\\"\\"\\"Additional details about a project.\\"\\"\\"
input ProjectInsight_Input {
  \\"\\"\\"The last issue update time.\\"\\"\\"
  lastIssueUpdateTime: DateTime

  \\"\\"\\"Total issue count.\\"\\"\\"
  totalIssueCount: BigInt
}

\\"\\"\\"Details of the issue creation metadata for a project.\\"\\"\\"
type ProjectIssueCreateMetadata {
  avatarUrls: AvatarUrlsBean3

  \\"\\"\\"
  Expand options that include additional project issue create metadata details in the response.
  \\"\\"\\"
  expand: String

  \\"\\"\\"The ID of the project.\\"\\"\\"
  id: String

  \\"\\"\\"List of the issue types supported by the project.\\"\\"\\"
  issuetypes: [IssueTypeIssueCreateMetadata]

  \\"\\"\\"The key of the project.\\"\\"\\"
  key: String

  \\"\\"\\"The name of the project.\\"\\"\\"
  name: String

  \\"\\"\\"The URL of the project.\\"\\"\\"
  self: String
}

\\"\\"\\"List of issue level security items in a project.\\"\\"\\"
type ProjectIssueSecurityLevels {
  \\"\\"\\"Issue level security items list.\\"\\"\\"
  levels: [SecurityLevel]!
}

\\"\\"\\"The hierarchy of issue types within a project.\\"\\"\\"
type ProjectIssueTypeHierarchy {
  \\"\\"\\"Details of an issue type hierarchy level.\\"\\"\\"
  hierarchy: [ProjectIssueTypesHierarchyLevel]

  \\"\\"\\"The ID of the project.\\"\\"\\"
  projectId: BigInt
}

\\"\\"\\"The project and issue type mapping.\\"\\"\\"
input ProjectIssueTypeMapping_Input {
  \\"\\"\\"The ID of the issue type.\\"\\"\\"
  issueTypeId: String!

  \\"\\"\\"The ID of the project.\\"\\"\\"
  projectId: String!
}

\\"\\"\\"The project and issue type mappings.\\"\\"\\"
input ProjectIssueTypeMappings_Input {
  \\"\\"\\"The project and issue type mappings.\\"\\"\\"
  mappings: [ProjectIssueTypeMapping_Input]!
}

\\"\\"\\"
Projects and issue types where the status is used. Only available if the \`usages\` expand is requested.
\\"\\"\\"
type ProjectIssueTypes {
  \\"\\"\\"IDs of the issue types\\"\\"\\"
  issueTypes: [String]
  project: ProjectId
}

\\"\\"\\"Details of an issue type hierarchy level.\\"\\"\\"
type ProjectIssueTypesHierarchyLevel {
  \\"\\"\\"
  The ID of the issue type hierarchy level. This property is deprecated, see [Change notice: Removing hierarchy level IDs from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/).
  \\"\\"\\"
  entityId: String

  \\"\\"\\"The list of issue types in the hierarchy level.\\"\\"\\"
  issueTypes: [IssueTypeInfo]

  \\"\\"\\"The level of the issue type hierarchy level.\\"\\"\\"
  level: Int

  \\"\\"\\"The name of the issue type hierarchy level.\\"\\"\\"
  name: String
}

\\"\\"\\"The project landing page info.\\"\\"\\"
type ProjectLandingPageInfo {
  attributes: query_getAllDashboards_oneOf_0_dashboards_items_sharePermissions_items_project_allOf_0_landingPageInfo_allOf_0_attributes
  projectKey: String
  simplified: Boolean
  url: String
}

\\"\\"\\"The project landing page info.\\"\\"\\"
input ProjectLandingPageInfo_Input {
  attributes: query_getAllDashboards_oneOf_0_dashboards_items_sharePermissions_items_project_allOf_0_landingPageInfo_allOf_0_attributes_Input
  projectKey: String
  simplified: Boolean
  url: String
}

\\"\\"\\"Permissions which a user has on a project.\\"\\"\\"
type ProjectPermissions {
  \\"\\"\\"Whether the logged user can edit the project.\\"\\"\\"
  canEdit: Boolean
}

\\"\\"\\"Permissions which a user has on a project.\\"\\"\\"
input ProjectPermissions_Input {
  \\"\\"\\"Whether the logged user can edit the project.\\"\\"\\"
  canEdit: Boolean
}

\\"\\"\\"Details about the roles in a project.\\"\\"\\"
type ProjectRole {
  \\"\\"\\"The list of users who act in this role.\\"\\"\\"
  actors: [RoleActor]

  \\"\\"\\"Whether this role is the admin role for the project.\\"\\"\\"
  admin: Boolean

  \\"\\"\\"Whether the calling user is part of this role.\\"\\"\\"
  currentUserRole: Boolean

  \\"\\"\\"Whether this role is the default role for the project\\"\\"\\"
  default: Boolean

  \\"\\"\\"The description of the project role.\\"\\"\\"
  description: String

  \\"\\"\\"The ID of the project role.\\"\\"\\"
  id: BigInt

  \\"\\"\\"The name of the project role.\\"\\"\\"
  name: String

  \\"\\"\\"Whether the roles are configurable for this project.\\"\\"\\"
  roleConfigurable: Boolean
  scope: Scope2

  \\"\\"\\"The URL the project role details.\\"\\"\\"
  self: URL

  \\"\\"\\"The translated name of the project role.\\"\\"\\"
  translatedName: String
}

\\"\\"\\"Details about the roles in a project.\\"\\"\\"
type ProjectRole2 {
  \\"\\"\\"The list of users who act in this role.\\"\\"\\"
  actors: [RoleActor]

  \\"\\"\\"Whether this role is the admin role for the project.\\"\\"\\"
  admin: Boolean

  \\"\\"\\"Whether the calling user is part of this role.\\"\\"\\"
  currentUserRole: Boolean

  \\"\\"\\"Whether this role is the default role for the project\\"\\"\\"
  default: Boolean

  \\"\\"\\"The description of the project role.\\"\\"\\"
  description: String

  \\"\\"\\"The ID of the project role.\\"\\"\\"
  id: BigInt

  \\"\\"\\"The name of the project role.\\"\\"\\"
  name: String

  \\"\\"\\"Whether the roles are configurable for this project.\\"\\"\\"
  roleConfigurable: Boolean
  scope: Scope2

  \\"\\"\\"The URL the project role details.\\"\\"\\"
  self: URL

  \\"\\"\\"The translated name of the project role.\\"\\"\\"
  translatedName: String
}

\\"\\"\\"Details about the roles in a project.\\"\\"\\"
type ProjectRole3 {
  \\"\\"\\"The list of users who act in this role.\\"\\"\\"
  actors: [RoleActor]

  \\"\\"\\"Whether this role is the admin role for the project.\\"\\"\\"
  admin: Boolean

  \\"\\"\\"Whether the calling user is part of this role.\\"\\"\\"
  currentUserRole: Boolean

  \\"\\"\\"Whether this role is the default role for the project\\"\\"\\"
  default: Boolean

  \\"\\"\\"The description of the project role.\\"\\"\\"
  description: String

  \\"\\"\\"The ID of the project role.\\"\\"\\"
  id: BigInt

  \\"\\"\\"The name of the project role.\\"\\"\\"
  name: String

  \\"\\"\\"Whether the roles are configurable for this project.\\"\\"\\"
  roleConfigurable: Boolean
  scope: Scope2

  \\"\\"\\"The URL the project role details.\\"\\"\\"
  self: URL

  \\"\\"\\"The translated name of the project role.\\"\\"\\"
  translatedName: String
}

input ProjectRoleActorsUpdateBean_Input {
  categorisedActors: mutationInput_setActors_categorisedActors_Input

  \\"\\"\\"
  The ID of the project role. Use [Get all project roles](#api-rest-api-3-role-get) to get a list of project role IDs.
  \\"\\"\\"
  id: BigInt
}

\\"\\"\\"Details about a project role.\\"\\"\\"
type ProjectRoleDetails {
  \\"\\"\\"Whether this role is the admin role for the project.\\"\\"\\"
  admin: Boolean

  \\"\\"\\"Whether this role is the default role for the project.\\"\\"\\"
  default: Boolean

  \\"\\"\\"The description of the project role.\\"\\"\\"
  description: String

  \\"\\"\\"The ID of the project role.\\"\\"\\"
  id: BigInt

  \\"\\"\\"The name of the project role.\\"\\"\\"
  name: String

  \\"\\"\\"Whether the roles are configurable for this project.\\"\\"\\"
  roleConfigurable: Boolean
  scope: Scope2

  \\"\\"\\"The URL the project role details.\\"\\"\\"
  self: URL

  \\"\\"\\"The translated name of the project role.\\"\\"\\"
  translatedName: String
}

\\"\\"\\"Details of the group associated with the role.\\"\\"\\"
type ProjectRoleGroup {
  \\"\\"\\"The display name of the group.\\"\\"\\"
  displayName: String

  \\"\\"\\"The ID of the group.\\"\\"\\"
  groupId: String

  \\"\\"\\"
  The name of the group. As a group's name can change, use of \`groupId\` is recommended to identify the group.
  \\"\\"\\"
  name: String
}

\\"\\"\\"Details of the group associated with the role.\\"\\"\\"
input ProjectRoleGroup_Input {
  \\"\\"\\"The display name of the group.\\"\\"\\"
  displayName: String

  \\"\\"\\"The ID of the group.\\"\\"\\"
  groupId: String

  \\"\\"\\"
  The name of the group. As a group's name can change, use of \`groupId\` is recommended to identify the group.
  \\"\\"\\"
  name: String
}

\\"\\"\\"Details of the user associated with the role.\\"\\"\\"
type ProjectRoleUser {
  \\"\\"\\"
  The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Returns *unknown* if the record is deleted and corrupted, for example, as the result of a server import.
  \\"\\"\\"
  accountId: query_getAllDashboards_oneOf_0_dashboards_items_sharePermissions_items_role_allOf_0_actors_items_actorUser_allOf_0_accountId
}

\\"\\"\\"Details of the user associated with the role.\\"\\"\\"
input ProjectRoleUser_Input {
  \\"\\"\\"
  The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Returns *unknown* if the record is deleted and corrupted, for example, as the result of a server import.
  \\"\\"\\"
  accountId: query_getAllDashboards_oneOf_0_dashboards_items_sharePermissions_items_role_allOf_0_actors_items_actorUser_allOf_0_accountId
}

\\"\\"\\"Details about the roles in a project.\\"\\"\\"
input ProjectRole_Input {
  \\"\\"\\"The list of users who act in this role.\\"\\"\\"
  actors: [RoleActor_Input]

  \\"\\"\\"Whether this role is the admin role for the project.\\"\\"\\"
  admin: Boolean

  \\"\\"\\"Whether the calling user is part of this role.\\"\\"\\"
  currentUserRole: Boolean

  \\"\\"\\"Whether this role is the default role for the project\\"\\"\\"
  default: Boolean

  \\"\\"\\"The description of the project role.\\"\\"\\"
  description: String

  \\"\\"\\"The ID of the project role.\\"\\"\\"
  id: BigInt

  \\"\\"\\"The name of the project role.\\"\\"\\"
  name: String

  \\"\\"\\"Whether the roles are configurable for this project.\\"\\"\\"
  roleConfigurable: Boolean
  scope: Scope_Input2

  \\"\\"\\"The URL the project role details.\\"\\"\\"
  self: URL

  \\"\\"\\"The translated name of the project role.\\"\\"\\"
  translatedName: String
}

type ProjectScopeBean {
  \\"\\"\\"
  Defines the behavior of the option in the project.If notSelectable is set, the option cannot be set as the field's value. This is useful for archiving an option that has previously been selected but shouldn't be used anymore.If defaultValue is set, the option is selected by default.
  \\"\\"\\"
  attributes: [query_getAllIssueFieldOptions_values_items_config_scope_allOf_0_projects2_items_attributes_items]

  \\"\\"\\"The ID of the project that the option's behavior applies to.\\"\\"\\"
  id: BigInt
}

input ProjectScopeBean_Input {
  \\"\\"\\"
  Defines the behavior of the option in the project.If notSelectable is set, the option cannot be set as the field's value. This is useful for archiving an option that has previously been selected but shouldn't be used anymore.If defaultValue is set, the option is selected by default.
  \\"\\"\\"
  attributes: [query_getAllIssueFieldOptions_values_items_config_scope_allOf_0_projects2_items_attributes_items]

  \\"\\"\\"The ID of the project that the option's behavior applies to.\\"\\"\\"
  id: BigInt
}

\\"\\"\\"Details about a project type.\\"\\"\\"
type ProjectType {
  \\"\\"\\"The color of the project type.\\"\\"\\"
  color: String

  \\"\\"\\"The key of the project type's description.\\"\\"\\"
  descriptionI18nKey: String

  \\"\\"\\"The formatted key of the project type.\\"\\"\\"
  formattedKey: String

  \\"\\"\\"The icon of the project type.\\"\\"\\"
  icon: String

  \\"\\"\\"The key of the project type.\\"\\"\\"
  key: String
}

\\"\\"\\"Details about a project.\\"\\"\\"
input Project_Input {
  \\"\\"\\"Whether the project is archived.\\"\\"\\"
  archived: Boolean
  archivedBy: User_Input7

  \\"\\"\\"The date when the project was archived.\\"\\"\\"
  archivedDate: DateTime
  assigneeType: query_getAllDashboards_oneOf_0_dashboards_items_sharePermissions_items_project_allOf_0_assigneeType
  avatarUrls: AvatarUrlsBean_Input2

  \\"\\"\\"List of the components contained in the project.\\"\\"\\"
  components: [ProjectComponent_Input]

  \\"\\"\\"Whether the project is marked as deleted.\\"\\"\\"
  deleted: Boolean
  deletedBy: User_Input6

  \\"\\"\\"The date when the project was marked as deleted.\\"\\"\\"
  deletedDate: DateTime

  \\"\\"\\"A brief description of the project.\\"\\"\\"
  description: String

  \\"\\"\\"An email address associated with the project.\\"\\"\\"
  email: String

  \\"\\"\\"
  Expand options that include additional project details in the response.
  \\"\\"\\"
  expand: String

  \\"\\"\\"Whether the project is selected as a favorite.\\"\\"\\"
  favourite: Boolean

  \\"\\"\\"The ID of the project.\\"\\"\\"
  id: String
  insight: ProjectInsight_Input

  \\"\\"\\"Whether the project is private.\\"\\"\\"
  isPrivate: Boolean
  issueTypeHierarchy: Hierarchy_Input

  \\"\\"\\"List of the issue types available in the project.\\"\\"\\"
  issueTypes: [IssueTypeDetails_Input]

  \\"\\"\\"The key of the project.\\"\\"\\"
  key: String
  landingPageInfo: ProjectLandingPageInfo_Input
  lead: User_Input5

  \\"\\"\\"The name of the project.\\"\\"\\"
  name: String
  permissions: ProjectPermissions_Input
  projectCategory: ProjectCategory_Input
  projectTypeKey: query_getAllDashboards_oneOf_0_dashboards_items_sharePermissions_items_project_allOf_0_issueTypes_items_scope_allOf_0_project_allOf_0_projectTypeKey
  properties: query_getAttachment_additionalProperties_Input

  \\"\\"\\"The date when the project is deleted permanently.\\"\\"\\"
  retentionTillDate: DateTime
  roles: query_getAllDashboards_oneOf_0_dashboards_items_sharePermissions_items_project_allOf_0_roles_Input

  \\"\\"\\"The URL of the project details.\\"\\"\\"
  self: URL

  \\"\\"\\"Whether the project is simplified.\\"\\"\\"
  simplified: Boolean
  style: query_getAllDashboards_oneOf_0_dashboards_items_sharePermissions_items_project_allOf_0_style

  \\"\\"\\"
  A link to information about this project, such as project documentation.
  \\"\\"\\"
  url: String

  \\"\\"\\"Unique ID for next-gen projects.\\"\\"\\"
  uuid: String

  \\"\\"\\"
  The versions defined in the project. For more information, see [Create version](#api-rest-api-3-version-post).
  \\"\\"\\"
  versions: [Version_Input]
}

\\"\\"\\"Property key details.\\"\\"\\"
type PropertyKey {
  \\"\\"\\"The key of the property.\\"\\"\\"
  key: String

  \\"\\"\\"The URL of the property.\\"\\"\\"
  self: String
}

\\"\\"\\"List of property keys.\\"\\"\\"
type PropertyKeys {
  \\"\\"\\"Property key details.\\"\\"\\"
  keys: [PropertyKey]
}

\\"\\"\\"
Details about the status mappings for publishing a draft workflow scheme.
\\"\\"\\"
input PublishDraftWorkflowScheme_Input {
  \\"\\"\\"Mappings of statuses to new statuses for issue types.\\"\\"\\"
  statusMappings: [StatusMapping_Input]
}

\\"\\"\\"Properties that identify a published workflow.\\"\\"\\"
type PublishedWorkflowId {
  \\"\\"\\"The entity ID of the workflow.\\"\\"\\"
  entityId: String

  \\"\\"\\"The name of the workflow.\\"\\"\\"
  name: String!
}

type Query {
  \\"\\"\\"
  Gets all the properties of an app.
  
  **[Permissions](#permissions) required:** Only a Connect app whose key matches \`addonKey\` can make this request.
  \\"\\"\\"
  AddonPropertiesResource_getAddonProperties_get(addonKey: String!): AddonPropertiesResource_getAddonProperties_get_response

  \\"\\"\\"
  Returns the key and value of an app's property.
  
  **[Permissions](#permissions) required:** Only a Connect app whose key matches \`addonKey\` can make this request.
  \\"\\"\\"
  AddonPropertiesResource_getAddonProperty_get(addonKey: String!, propertyKey: String!): AddonPropertiesResource_getAddonProperty_get_response

  \\"\\"\\"
  Returns all modules registered dynamically by the calling app.
  
  **[Permissions](#permissions) required:** Only Connect apps can make this request.
  \\"\\"\\"
  DynamicModulesResource_getModules_get: DynamicModulesResource_getModules_get_response

  \\"\\"\\"
  Returns a [paginated](#pagination) list of groups.
  
  **[Permissions](#permissions) required:** *Browse users and groups* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  bulkGetGroups(input: bulkGetGroups_request_Input): bulkGetGroups_response

  \\"\\"\\"
  Returns a [paginated](#pagination) list of the users specified by one or more account IDs.
  
  **[Permissions](#permissions) required:** Permission to access Jira.
  \\"\\"\\"
  bulkGetUsers(input: bulkGetUsers_request_Input!): PageBeanUser

  \\"\\"\\"
  Returns the account IDs for the users specified in the \`key\` or \`username\` parameters. Note that multiple \`key\` or \`username\` parameters can be specified.
  
  **[Permissions](#permissions) required:** Permission to access Jira.
  \\"\\"\\"
  bulkGetUsersMigration(input: bulkGetUsersMigration_request_Input): [UserMigrationBean]

  \\"\\"\\"
  Returns the metadata for the contents of an attachment, if it is an archive, and metadata for the attachment itself. For example, if the attachment is a ZIP archive, then information about the files in the archive is returned and metadata for the ZIP archive. Currently, only the ZIP archive format is supported.
  
  Use this operation to retrieve data that is presented to the user, as this operation returns the metadata for the attachment itself, such as the attachment's ID and name. Otherwise, use [ Get contents metadata for an expanded attachment](#api-rest-api-3-attachment-id-expand-raw-get), which only returns the metadata for the attachment's contents.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** For the issue containing the attachment:
  
   *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
  \\"\\"\\"
  expandAttachmentForHumans(id: String!): AttachmentArchiveMetadataReadable

  \\"\\"\\"
  Returns the metadata for the contents of an attachment, if it is an archive. For example, if the attachment is a ZIP archive, then information about the files in the archive is returned. Currently, only the ZIP archive format is supported.
  
  Use this operation if you are processing the data without presenting it to the user, as this operation only returns the metadata for the contents of the attachment. Otherwise, to retrieve data to present to the user, use [ Get all metadata for an expanded attachment](#api-rest-api-3-attachment-id-expand-human-get) which also returns the metadata for the attachment itself, such as the attachment's ID and name.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** For the issue containing the attachment:
  
   *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
  \\"\\"\\"
  expandAttachmentForMachines(id: String!): AttachmentArchiveImpl

  \\"\\"\\"
  Returns a list of users that can be assigned to an issue. Use this operation to find the list of users who can be assigned to:
  
   *  a new issue, by providing the \`projectKeyOrId\`.
   *  an updated issue, by providing the \`issueKey\`.
   *  to an issue during a transition (workflow action), by providing the \`issueKey\` and the transition id in \`actionDescriptorId\`. You can obtain the IDs of an issue's valid transitions using the \`transitions\` option in the \`expand\` parameter of [ Get issue](#api-rest-api-3-issue-issueIdOrKey-get).
  
  In all these cases, you can pass an account ID to determine if a user can be assigned to an issue. The user is returned in the response if they can be assigned to the issue or issue transition.
  
  This operation takes the users in the range defined by \`startAt\` and \`maxResults\`, up to the thousandth user, and then returns only the users from that range that can be assigned the issue. This means the operation usually returns fewer users than specified in \`maxResults\`. To get all the users who can be assigned the issue, use [Get all users](#api-rest-api-3-users-search-get) and filter the records in your code.
  
  Privacy controls are applied to the response based on the users' preferences. This could mean, for example, that the user's email address is hidden. See the [Profile visibility overview](https://developer.atlassian.com/cloud/jira/platform/profile-visibility/) for more details.
  
  **[Permissions](#permissions) required:** Permission to access Jira.
  \\"\\"\\"
  findAssignableUsers(input: findAssignableUsers_request_Input): [User9]

  \\"\\"\\"
  Returns a list of users who can be assigned issues in one or more projects. The list may be restricted to users whose attributes match a string.
  
  This operation takes the users in the range defined by \`startAt\` and \`maxResults\`, up to the thousandth user, and then returns only the users from that range that can be assigned issues in the projects. This means the operation usually returns fewer users than specified in \`maxResults\`. To get all the users who can be assigned issues in the projects, use [Get all users](#api-rest-api-3-users-search-get) and filter the records in your code.
  
  Privacy controls are applied to the response based on the users' preferences. This could mean, for example, that the user's email address is hidden. See the [Profile visibility overview](https://developer.atlassian.com/cloud/jira/platform/profile-visibility/) for more details.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** None.
  \\"\\"\\"
  findBulkAssignableUsers(input: findBulkAssignableUsers_request_Input!): [User9]

  \\"\\"\\"
  Returns a list of groups whose names contain a query string. A list of group names can be provided to exclude groups from the results.
  
  The primary use case for this resource is to populate a group picker suggestions list. To this end, the returned object includes the \`html\` field where the matched query term is highlighted in the group name with the HTML strong tag. Also, the groups list is wrapped in a response object that contains a header for use in the picker, specifically *Showing X of Y matching groups*.
  
  The list returns with the groups sorted. If no groups match the list criteria, an empty list is returned.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg). Anonymous calls and calls by users without the required permission return an empty list.
  \\"\\"\\"
  findGroups(input: findGroups_request_Input): FoundGroups

  \\"\\"\\"
  Finds users with a structured query and returns a [paginated](#pagination) list of user keys.
  
  This operation takes the users in the range defined by \`startAt\` and \`maxResults\`, up to the thousandth user, and then returns only the users from that range that match the structured query. This means the operation usually returns fewer users than specified in \`maxResults\`. To get all the users who match the structured query, use [Get all users](#api-rest-api-3-users-search-get) and filter the records in your code.
  
  **[Permissions](#permissions) required:** *Browse users and groups* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  
  The query statements are:
  
   *  \`is assignee of PROJ\` Returns the users that are assignees of at least one issue in project *PROJ*.
   *  \`is assignee of (PROJ-1, PROJ-2)\` Returns users that are assignees on the issues *PROJ-1* or *PROJ-2*.
   *  \`is reporter of (PROJ-1, PROJ-2)\` Returns users that are reporters on the issues *PROJ-1* or *PROJ-2*.
   *  \`is watcher of (PROJ-1, PROJ-2)\` Returns users that are watchers on the issues *PROJ-1* or *PROJ-2*.
   *  \`is voter of (PROJ-1, PROJ-2)\` Returns users that are voters on the issues *PROJ-1* or *PROJ-2*.
   *  \`is commenter of (PROJ-1, PROJ-2)\` Returns users that have posted a comment on the issues *PROJ-1* or *PROJ-2*.
   *  \`is transitioner of (PROJ-1, PROJ-2)\` Returns users that have performed a transition on issues *PROJ-1* or *PROJ-2*.
   *  \`[propertyKey].entity.property.path is \\"property value\\"\` Returns users with the entity property value.
  
  The list of issues can be extended as needed, as in *(PROJ-1, PROJ-2, ... PROJ-n)*. Statements can be combined using the \`AND\` and \`OR\` operators to form more complex queries. For example:
  
  \`is assignee of PROJ AND [propertyKey].entity.property.path is \\"property value\\"\`
  \\"\\"\\"
  findUserKeysByQuery(input: findUsersByQuery_request_Input!): PageBeanUserKey

  \\"\\"\\"
  Returns a list of users that match the search string and property.
  
  This operation first applies a filter to match the search string and property, and then takes the filtered users in the range defined by \`startAt\` and \`maxResults\`, up to the thousandth user. To get all the users who match the search string and property, use [Get all users](#api-rest-api-3-users-search-get) and filter the records in your code.
  
  This operation can be accessed anonymously.
  
  Privacy controls are applied to the response based on the users' preferences. This could mean, for example, that the user's email address is hidden. See the [Profile visibility overview](https://developer.atlassian.com/cloud/jira/platform/profile-visibility/) for more details.
  
  **[Permissions](#permissions) required:** *Browse users and groups* [global permission](https://confluence.atlassian.com/x/x4dKLg). Anonymous calls or calls by users without the required permission return empty search results.
  \\"\\"\\"
  findUsers(input: findUsers_request_Input): [User9]

  \\"\\"\\"
  Returns a list of users and groups matching a string. The string is used:
  
   *  for users, to find a case-insensitive match with display name and e-mail address. Note that if a user has hidden their email address in their user profile, partial matches of the email address will not find the user. An exact match is required.
   *  for groups, to find a case-sensitive match with group name.
  
  For example, if the string *tin* is used, records with the display name *Tina*, email address *sarah@tinplatetraining.com*, and the group *accounting* would be returned.
  
  Optionally, the search can be refined to:
  
   *  the projects and issue types associated with a custom field, such as a user picker. The search can then be further refined to return only users and groups that have permission to view specific:
      
       *  projects.
       *  issue types.
      
      If multiple projects or issue types are specified, they must be a subset of those enabled for the custom field or no results are returned. For example, if a field is enabled for projects A, B, and C then the search could be limited to projects B and C. However, if the search is limited to projects B and D, nothing is returned.
   *  not return Connect app users and groups.
   *  return groups that have a case-insensitive match with the query.
  
  The primary use case for this resource is to populate a picker field suggestion list with users or groups. To this end, the returned object includes an \`html\` field for each list. This field highlights the matched query term in the item name with the HTML strong tag. Also, each list is wrapped in a response object that contains a header for use in a picker, specifically *Showing X of Y matching groups*.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** *Browse users and groups* [global permission](https://confluence.atlassian.com/x/yodKLg).
  \\"\\"\\"
  findUsersAndGroups(input: findUsersAndGroups_request_Input!): FoundUsersAndGroups

  \\"\\"\\"
  Finds users with a structured query and returns a [paginated](#pagination) list of user details.
  
  This operation takes the users in the range defined by \`startAt\` and \`maxResults\`, up to the thousandth user, and then returns only the users from that range that match the structured query. This means the operation usually returns fewer users than specified in \`maxResults\`. To get all the users who match the structured query, use [Get all users](#api-rest-api-3-users-search-get) and filter the records in your code.
  
  **[Permissions](#permissions) required:** *Browse users and groups* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  
  The query statements are:
  
   *  \`is assignee of PROJ\` Returns the users that are assignees of at least one issue in project *PROJ*.
   *  \`is assignee of (PROJ-1, PROJ-2)\` Returns users that are assignees on the issues *PROJ-1* or *PROJ-2*.
   *  \`is reporter of (PROJ-1, PROJ-2)\` Returns users that are reporters on the issues *PROJ-1* or *PROJ-2*.
   *  \`is watcher of (PROJ-1, PROJ-2)\` Returns users that are watchers on the issues *PROJ-1* or *PROJ-2*.
   *  \`is voter of (PROJ-1, PROJ-2)\` Returns users that are voters on the issues *PROJ-1* or *PROJ-2*.
   *  \`is commenter of (PROJ-1, PROJ-2)\` Returns users that have posted a comment on the issues *PROJ-1* or *PROJ-2*.
   *  \`is transitioner of (PROJ-1, PROJ-2)\` Returns users that have performed a transition on issues *PROJ-1* or *PROJ-2*.
   *  \`[propertyKey].entity.property.path is \\"property value\\"\` Returns users with the entity property value.
  
  The list of issues can be extended as needed, as in *(PROJ-1, PROJ-2, ... PROJ-n)*. Statements can be combined using the \`AND\` and \`OR\` operators to form more complex queries. For example:
  
  \`is assignee of PROJ AND [propertyKey].entity.property.path is \\"property value\\"\`
  \\"\\"\\"
  findUsersByQuery(input: findUsersByQuery_request_Input!): PageBeanUser

  \\"\\"\\"
  Returns a list of users whose attributes match the query term. The returned object includes the \`html\` field where the matched query term is highlighted with the HTML strong tag. A list of account IDs can be provided to exclude users from the results.
  
  This operation takes the users in the range defined by \`maxResults\`, up to the thousandth user, and then returns only the users from that range that match the query term. This means the operation usually returns fewer users than specified in \`maxResults\`. To get all the users who match the query term, use [Get all users](#api-rest-api-3-users-search-get) and filter the records in your code.
  
  Privacy controls are applied to the response based on the users' preferences. This could mean, for example, that the user's email address is hidden. See the [Profile visibility overview](https://developer.atlassian.com/cloud/jira/platform/profile-visibility/) for more details.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** *Browse users and groups* [global permission](https://confluence.atlassian.com/x/x4dKLg). Anonymous calls and calls by users without the required permission return search results for an exact name match only.
  \\"\\"\\"
  findUsersForPicker(input: findUsersForPicker_request_Input!): FoundUsers

  \\"\\"\\"
  Returns a list of users who fulfill these criteria:
  
   *  their user attributes match a search string.
   *  they have a set of permissions for a project or issue.
  
  If no search string is provided, a list of all users with the permissions is returned.
  
  This operation takes the users in the range defined by \`startAt\` and \`maxResults\`, up to the thousandth user, and then returns only the users from that range that match the search string and have permission for the project or issue. This means the operation usually returns fewer users than specified in \`maxResults\`. To get all the users who match the search string and have permission for the project or issue, use [Get all users](#api-rest-api-3-users-search-get) and filter the records in your code.
  
  Privacy controls are applied to the response based on the users' preferences. This could mean, for example, that the user's email address is hidden. See the [Profile visibility overview](https://developer.atlassian.com/cloud/jira/platform/profile-visibility/) for more details.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:**
  
   *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg), to get users for any project.
   *  *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for a project, to get users for that project.
  \\"\\"\\"
  findUsersWithAllPermissions(input: findUsersWithAllPermissions_request_Input!): [User9]

  \\"\\"\\"
  Returns a list of users who fulfill these criteria:
  
   *  their user attributes match a search string.
   *  they have permission to browse issues.
  
  Use this resource to find users who can browse:
  
   *  an issue, by providing the \`issueKey\`.
   *  any issue in a project, by providing the \`projectKey\`.
  
  This operation takes the users in the range defined by \`startAt\` and \`maxResults\`, up to the thousandth user, and then returns only the users from that range that match the search string and have permission to browse issues. This means the operation usually returns fewer users than specified in \`maxResults\`. To get all the users who match the search string and have permission to browse issues, use [Get all users](#api-rest-api-3-users-search-get) and filter the records in your code.
  
  Privacy controls are applied to the response based on the users' preferences. This could mean, for example, that the user's email address is hidden. See the [Profile visibility overview](https://developer.atlassian.com/cloud/jira/platform/profile-visibility/) for more details.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** *Browse users and groups* [global permission](https://confluence.atlassian.com/x/x4dKLg). Anonymous calls and calls by users without the required permission return empty search results.
  \\"\\"\\"
  findUsersWithBrowsePermission(input: findUsersWithBrowsePermission_request_Input): [User9]

  \\"\\"\\"
  Returns a [project type](https://confluence.atlassian.com/x/Var1Nw) if it is accessible to the user.
  
  **[Permissions](#permissions) required:** Permission to access Jira.
  \\"\\"\\"
  getAccessibleProjectTypeByKey(projectTypeKey: String!): ProjectType

  \\"\\"\\"
  Returns the application properties that are accessible on the *Advanced Settings* page. To navigate to the *Advanced Settings* page in Jira, choose the Jira icon > **Jira settings** > **System**, **General Configuration** and then click **Advanced Settings** (in the upper right).
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getAdvancedSettings: [ApplicationProperty]

  \\"\\"\\"
  Returns all [project types](https://confluence.atlassian.com/x/Var1Nw) with a valid license.
  \\"\\"\\"
  getAllAccessibleProjectTypes: [ProjectType]

  \\"\\"\\"
  Returns all application roles. In Jira, application roles are managed using the [Application access configuration](https://confluence.atlassian.com/x/3YxjL) page.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getAllApplicationRoles: [ApplicationRole]

  \\"\\"\\"
  Gets a list of all available gadgets that can be added to all dashboards.
  
  **[Permissions](#permissions) required:** None.
  \\"\\"\\"
  getAllAvailableDashboardGadgets: getAllAvailableDashboardGadgets_response

  \\"\\"\\"
  Returns a list of dashboards owned by or shared with the user. The list may be filtered to include only favorite or owned dashboards.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** None.
  \\"\\"\\"
  getAllDashboards(input: getAllDashboards_request_Input): getAllDashboards_response

  \\"\\"\\"
  Returns a [paginated](#pagination) list of field configuration schemes.
  
  Only field configuration schemes used in classic projects are returned.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getAllFieldConfigurationSchemes(input: getAllFieldConfigurationSchemes_request_Input): PageBeanFieldConfigurationScheme

  \\"\\"\\"
  Returns a [paginated](#pagination) list of field configurations. The list can be for all field configurations or a subset determined by any combination of these criteria:
  
   *  a list of field configuration item IDs.
   *  whether the field configuration is a default.
   *  whether the field configuration name or description contains a query string.
  
  Only field configurations used in company-managed (classic) projects are returned.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getAllFieldConfigurations(input: getAllFieldConfigurations_request_Input): PageBeanFieldConfigurationDetails

  \\"\\"\\"
  Returns a list of dashboard gadgets on a dashboard.
  
  This operation returns:
  
   *  Gadgets from a list of IDs, when \`id\` is set.
   *  Gadgets with a module key, when \`moduleKey\` is set.
   *  Gadgets from a list of URIs, when \`uri\` is set.
   *  All gadgets, when no other parameters are set.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** None.
  \\"\\"\\"
  getAllGadgets(dashboardId: Int!, input: getAllGadgets_request_Input): getAllGadgets_response

  \\"\\"\\"
  Returns a [paginated](#pagination) list of all the options of a select list issue field. A select list issue field is a type of [issue field](https://developer.atlassian.com/cloud/jira/platform/modules/issue-field/) that enables a user to select a value from a list of options.
  
  Note that this operation **only works for issue field select list options added by Connect apps**, it cannot be used with issue field select list options created in Jira or using operations from the [Issue custom field options](#api-group-Issue-custom-field-options) resource.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg). Jira permissions are not required for the app providing the field.
  \\"\\"\\"
  getAllIssueFieldOptions(fieldKey: String!, input: getAllIssueFieldOptions_request_Input): PageBeanIssueFieldOption

  \\"\\"\\"
  Returns a [paginated](#pagination) list of issue type schemes.
  
  Only issue type schemes used in classic projects are returned.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getAllIssueTypeSchemes(input: getAllIssueTypeSchemes_request_Input): PageBeanIssueTypeScheme

  \\"\\"\\"Returns a [paginated](#pagination) list of labels.\\"\\"\\"
  getAllLabels(input: getAllLabels_request_Input): PageBeanString

  \\"\\"\\"
  Returns all permission schemes.
  
  ### About permission schemes and grants ###
  
  A permission scheme is a collection of permission grants. A permission grant consists of a \`holder\` and a \`permission\`.
  
  #### Holder object ####
  
  The \`holder\` object contains information about the user or group being granted the permission. For example, the *Administer projects* permission is granted to a group named *Teams in space administrators*. In this case, the type is \`\\"type\\": \\"group\\"\`, and the parameter is the group name, \`\\"parameter\\": \\"Teams in space administrators\\"\` and the value is group ID, \`\\"value\\": \\"ca85fac0-d974-40ca-a615-7af99c48d24f\\"\`. The \`holder\` object is defined by the following properties:
  
   *  \`type\` Identifies the user or group (see the list of types below).
   *  \`parameter\` As a group's name can change, use of \`value\` is recommended. The value of this property depends on the \`type\`. For example, if the \`type\` is a group, then you need to specify the group name.
   *  \`value\` The value of this property depends on the \`type\`. If the \`type\` is a group, then you need to specify the group ID. For other \`type\` it has the same value as \`parameter\`
  
  The following \`types\` are available. The expected values for \`parameter\` and \`value\` are given in parentheses (some types may not have a \`parameter\` or \`value\`):
  
   *  \`anyone\` Grant for anonymous users.
   *  \`applicationRole\` Grant for users with access to the specified application (application name, application name). See [Update product access settings](https://confluence.atlassian.com/x/3YxjL) for more information.
   *  \`assignee\` Grant for the user currently assigned to an issue.
   *  \`group\` Grant for the specified group (\`parameter\` : group name, \`value\` : group ID).
   *  \`groupCustomField\` Grant for a user in the group selected in the specified custom field (\`parameter\` : custom field ID, \`value\` : custom field ID).
   *  \`projectLead\` Grant for a project lead.
   *  \`projectRole\` Grant for the specified project role (\`parameter\` :project role ID, \`value\` : project role ID).
   *  \`reporter\` Grant for the user who reported the issue.
   *  \`sd.customer.portal.only\` Jira Service Desk only. Grants customers permission to access the customer portal but not Jira. See [Customizing Jira Service Desk permissions](https://confluence.atlassian.com/x/24dKLg) for more information.
   *  \`user\` Grant for the specified user (\`parameter\` : user ID - historically this was the userkey but that is deprecated and the account ID should be used, \`value\` : user ID).
   *  \`userCustomField\` Grant for a user selected in the specified custom field (\`parameter\` : custom field ID, \`value\` : custom field ID).
  
  #### Built-in permissions ####
  
  The [built-in Jira permissions](https://confluence.atlassian.com/x/yodKLg) are listed below. Apps can also define custom permissions. See the [project permission](https://developer.atlassian.com/cloud/jira/platform/modules/project-permission/) and [global permission](https://developer.atlassian.com/cloud/jira/platform/modules/global-permission/) module documentation for more information.
  
  **Project permissions**
  
   *  \`ADMINISTER_PROJECTS\`
   *  \`BROWSE_PROJECTS\`
   *  \`MANAGE_SPRINTS_PERMISSION\` (Jira Software only)
   *  \`SERVICEDESK_AGENT\` (Jira Service Desk only)
   *  \`VIEW_DEV_TOOLS\` (Jira Software only)
   *  \`VIEW_READONLY_WORKFLOW\`
  
  **Issue permissions**
  
   *  \`ASSIGNABLE_USER\`
   *  \`ASSIGN_ISSUES\`
   *  \`CLOSE_ISSUES\`
   *  \`CREATE_ISSUES\`
   *  \`DELETE_ISSUES\`
   *  \`EDIT_ISSUES\`
   *  \`LINK_ISSUES\`
   *  \`MODIFY_REPORTER\`
   *  \`MOVE_ISSUES\`
   *  \`RESOLVE_ISSUES\`
   *  \`SCHEDULE_ISSUES\`
   *  \`SET_ISSUE_SECURITY\`
   *  \`TRANSITION_ISSUES\`
  
  **Voters and watchers permissions**
  
   *  \`MANAGE_WATCHERS\`
   *  \`VIEW_VOTERS_AND_WATCHERS\`
  
  **Comments permissions**
  
   *  \`ADD_COMMENTS\`
   *  \`DELETE_ALL_COMMENTS\`
   *  \`DELETE_OWN_COMMENTS\`
   *  \`EDIT_ALL_COMMENTS\`
   *  \`EDIT_OWN_COMMENTS\`
  
  **Attachments permissions**
  
   *  \`CREATE_ATTACHMENTS\`
   *  \`DELETE_ALL_ATTACHMENTS\`
   *  \`DELETE_OWN_ATTACHMENTS\`
  
  **Time tracking permissions**
  
   *  \`DELETE_ALL_WORKLOGS\`
   *  \`DELETE_OWN_WORKLOGS\`
   *  \`EDIT_ALL_WORKLOGS\`
   *  \`EDIT_OWN_WORKLOGS\`
   *  \`WORK_ON_ISSUES\`
  
  **[Permissions](#permissions) required:** Permission to access Jira.
  \\"\\"\\"
  getAllPermissionSchemes(input: getAllPermissionSchemes_request_Input): PermissionSchemes

  \\"\\"\\"
  Returns all permissions, including:
  
   *  global permissions.
   *  project permissions.
   *  global permissions added by plugins.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getAllPermissions: Permissions

  \\"\\"\\"
  Returns all project avatars, grouped by system and custom avatars.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
  \\"\\"\\"
  getAllProjectAvatars(projectIdOrKey: String!): ProjectAvatars

  \\"\\"\\"
  Returns all project categories.
  
  **[Permissions](#permissions) required:** Permission to access Jira.
  \\"\\"\\"
  getAllProjectCategories: [ProjectCategory2]

  \\"\\"\\"
  Gets a list of all project roles, complete with project role details and default actors.
  
  ### About project roles ###
  
  [Project roles](https://confluence.atlassian.com/x/3odKLg) are a flexible way to to associate users and groups with projects. In Jira Cloud, the list of project roles is shared globally with all projects, but each project can have a different set of actors associated with it (unlike groups, which have the same membership throughout all Jira applications).
  
  Project roles are used in [permission schemes](#api-rest-api-3-permissionscheme-get), [email notification schemes](#api-rest-api-3-notificationscheme-get), [issue security levels](#api-rest-api-3-issuesecurityschemes-get), [comment visibility](#api-rest-api-3-comment-list-post), and workflow conditions.
  
  #### Members and actors ####
  
  In the Jira REST API, a member of a project role is called an *actor*. An *actor* is a group or user associated with a project role.
  
  Actors may be set as [default members](https://confluence.atlassian.com/x/3odKLg#Managingprojectroles-Specifying'defaultmembers'foraprojectrole) of the project role or set at the project level:
  
   *  Default actors: Users and groups that are assigned to the project role for all newly created projects. The default actors can be removed at the project level later if desired.
   *  Actors: Users and groups that are associated with a project role for a project, which may differ from the default actors. This enables you to assign a user to different roles in different projects.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getAllProjectRoles: [ProjectRole3]

  \\"\\"\\"
  Returns all [project types](https://confluence.atlassian.com/x/Var1Nw), whether or not the instance has a valid license for each type.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** None.
  \\"\\"\\"
  getAllProjectTypes: [ProjectType]

  \\"\\"\\"
  Returns all projects visible to the user. Deprecated, use [ Get projects paginated](#api-rest-api-3-project-search-get) that supports search and pagination.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** Projects are returned only where the user has *Browse Projects* or *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
  \\"\\"\\"
  getAllProjects(input: getAllProjects_request_Input): [Project2]

  \\"\\"\\"
  Returns all fields for a screen tab.
  
  **[Permissions](#permissions) required:**
  
   *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
   *  *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg) when the project key is specified, providing that the screen is associated with the project through a Screen Scheme and Issue Type Screen Scheme.
  \\"\\"\\"
  getAllScreenTabFields(input: getAllScreenTabs_request_Input, screenId: Int!, tabId: Int!): [ScreenableField]

  \\"\\"\\"
  Returns the list of tabs for a screen.
  
  **[Permissions](#permissions) required:**
  
   *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
   *  *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg) when the project key is specified, providing that the screen is associated with the project through a Screen Scheme and Issue Type Screen Scheme.
  \\"\\"\\"
  getAllScreenTabs(input: getAllScreenTabs_request_Input, screenId: Int!): [ScreenableTab2]

  \\"\\"\\"
  Returns the valid statuses for a project. The statuses are grouped by issue type, as each project has a set of valid issue types and each issue type has a set of valid statuses.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** *Browse Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
  \\"\\"\\"
  getAllStatuses(projectIdOrKey: String!): [IssueTypeWithStatus]

  \\"\\"\\"
  Returns a list of system avatar details by owner type, where the owner types are issue type, project, or user.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** None.
  \\"\\"\\"
  getAllSystemAvatars(type: String!): SystemAvatars

  \\"\\"\\"
  Returns a list of all users, including active users, inactive users and previously deleted users that have an Atlassian account.
  
  Privacy controls are applied to the response based on the users' preferences. This could mean, for example, that the user's email address is hidden. See the [Profile visibility overview](https://developer.atlassian.com/cloud/jira/platform/profile-visibility/) for more details.
  
  **[Permissions](#permissions) required:** *Browse users and groups* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getAllUsers(input: getAllUsersDefault_request_Input): [User9]

  \\"\\"\\"
  Returns a list of all users, including active users, inactive users and previously deleted users that have an Atlassian account.
  
  Privacy controls are applied to the response based on the users' preferences. This could mean, for example, that the user's email address is hidden. See the [Profile visibility overview](https://developer.atlassian.com/cloud/jira/platform/profile-visibility/) for more details.
  
  **[Permissions](#permissions) required:** *Browse users and groups* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getAllUsersDefault(input: getAllUsersDefault_request_Input): [User9]

  \\"\\"\\"
  Returns a [paginated](#pagination) list of all workflow schemes, not including draft workflow schemes.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getAllWorkflowSchemes(input: getAllIssueFieldOptions_request_Input): PageBeanWorkflowScheme

  \\"\\"\\"
  Returns all workflows in Jira or a workflow. Deprecated, use [Get workflows paginated](#api-rest-api-3-workflow-search-get).
  
  If the \`workflowName\` parameter is specified, the workflow is returned as an object (not in an array). Otherwise, an array of workflow objects is returned.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getAllWorkflows(input: getAllWorkflows_request_Input): [DeprecatedWorkflow]

  \\"\\"\\"
  Returns a list of issue types that can be used to replace the issue type. The alternative issue types are those assigned to the same workflow scheme, field configuration scheme, and screen scheme.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** None.
  \\"\\"\\"
  getAlternativeIssueTypes(id: String!): [IssueTypeDetails]

  \\"\\"\\"
  Returns all application properties or an application property.
  
  If you specify a value for the \`key\` parameter, then an application property is returned as an object (not in an array). Otherwise, an array of all editable application properties is returned. See [Set application property](#api-rest-api-3-application-properties-id-put) for descriptions of editable properties.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getApplicationProperty(input: getApplicationProperty_request_Input): [ApplicationProperty]

  \\"\\"\\"
  Returns an application role.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getApplicationRole(key: String!): ApplicationRole

  \\"\\"\\"
  Gets the [permission scheme](https://confluence.atlassian.com/x/yodKLg) associated with the project.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) or *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg).
  \\"\\"\\"
  getAssignedPermissionScheme(input: getAssignedPermissionScheme_request_Input, projectKeyOrId: String!): PermissionScheme

  \\"\\"\\"
  Returns the metadata for an attachment. Note that the attachment itself is not returned.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:**
  
   *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
  \\"\\"\\"
  getAttachment(id: String!): AttachmentMetadata

  \\"\\"\\"
  Returns the contents of an attachment. A \`Range\` header can be set to define a range of bytes within the attachment to download. See the [HTTP Range header standard](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Range) for details.
  
  To return a thumbnail of the attachment, use [Download attachment thumbnail](#api-rest-api-3-attachment-thumbnail-id-get).
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** For the issue containing the attachment:
  
   *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
  \\"\\"\\"
  getAttachmentContent(id: String!, input: getAttachmentContent_request_Input): getAttachmentContent_200_response

  \\"\\"\\"
  Returns the attachment settings, that is, whether attachments are enabled and the maximum attachment size allowed.
  
  Note that there are also [project permissions](https://confluence.atlassian.com/x/yodKLg) that restrict whether users can create and delete attachments.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** None.
  \\"\\"\\"
  getAttachmentMeta: AttachmentSettings

  \\"\\"\\"
  Returns the thumbnail of an attachment.
  
  To return the attachment contents, use [Download attachment content](#api-rest-api-3-attachment-content-id-get).
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** For the issue containing the attachment:
  
   *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
  \\"\\"\\"
  getAttachmentThumbnail(id: String!, input: getAttachmentThumbnail_request_Input): getAttachmentThumbnail_200_response

  \\"\\"\\"
  Returns a list of audit records. The list can be filtered to include items:
  
   *  where each item in \`filter\` has at least one match in any of these fields:
      
       *  \`summary\`
       *  \`category\`
       *  \`eventSource\`
       *  \`objectItem.name\` If the object is a user, account ID is available to filter.
       *  \`objectItem.parentName\`
       *  \`objectItem.typeName\`
       *  \`changedValues.changedFrom\`
       *  \`changedValues.changedTo\`
       *  \`remoteAddress\`
      
      For example, if \`filter\` contains *man ed*, an audit record containing \`summary\\": \\"User added to group\\"\` and \`\\"category\\": \\"group management\\"\` is returned.
   *  created on or after a date and time.
   *  created or or before a date and time.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getAuditRecords(input: getAuditRecords_request_Input): AuditRecords

  \\"\\"\\"
  Returns reference data for JQL searches. This is a downloadable version of the documentation provided in [Advanced searching - fields reference](https://confluence.atlassian.com/x/gwORLQ) and [Advanced searching - functions reference](https://confluence.atlassian.com/x/hgORLQ), along with a list of JQL-reserved words. Use this information to assist with the programmatic creation of JQL queries or the validation of queries built in a custom query builder.
  
  To filter visible field details by project or collapse non-unique fields by field type then [Get field reference data (POST)](#api-rest-api-3-jql-autocompletedata-post) can be used.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** None.
  \\"\\"\\"
  getAutoComplete: JQLReferenceData

  \\"\\"\\"
  Returns the fields that can be added to a tab on a screen.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getAvailableScreenFields(screenId: Int!): [ScreenableField]

  \\"\\"\\"
  Returns all time tracking providers. By default, Jira only has one time tracking provider: *JIRA provided time tracking*. However, you can install other time tracking providers via apps from the Atlassian Marketplace. For more information on time tracking providers, see the documentation for the [ Time Tracking Provider](https://developer.atlassian.com/cloud/jira/platform/modules/time-tracking-provider/) module.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getAvailableTimeTrackingImplementations: [TimeTrackingProvider]

  \\"\\"\\"
  Returns a project or issue type avatar image by ID.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:**
  
   *  For system avatars, none.
   *  For custom project avatars, *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project the avatar belongs to.
   *  For custom issue type avatars, *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for at least one project the issue type is used in.
  \\"\\"\\"
  getAvatarImageByID(id: Int!, input: getAvatarImageByType_request_Input, type: String!): getAvatarImageByID_response

  \\"\\"\\"
  Returns the avatar image for a project or issue type.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:**
  
   *  For system avatars, none.
   *  For custom project avatars, *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project the avatar belongs to.
   *  For custom issue type avatars, *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for at least one project the issue type is used in.
  \\"\\"\\"
  getAvatarImageByOwner(entityId: String!, input: getAvatarImageByType_request_Input, type: String!): getAvatarImageByOwner_response

  \\"\\"\\"
  Returns the default project or issue type avatar image.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** None.
  \\"\\"\\"
  getAvatarImageByType(input: getAvatarImageByType_request_Input, type: String!): getAvatarImageByType_response

  \\"\\"\\"
  Returns the system and custom avatars for a project or issue type.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:**
  
   *  for custom project avatars, *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project the avatar belongs to.
   *  for custom issue type avatars, *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for at least one project the issue type is used in.
   *  for system avatars, none.
  \\"\\"\\"
  getAvatars(entityId: String!, type: String!): Avatars

  \\"\\"\\"
  Returns the current announcement banner configuration.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getBanner: getBanner_response

  \\"\\"\\"
  Returns a [paginated](#pagination) list of all changelogs for an issue sorted by date, starting from the oldest.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:**
  
   *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
  \\"\\"\\"
  getChangeLogs(input: getChangeLogs_request_Input, issueIdOrKey: String!): PageBeanChangelog

  \\"\\"\\"
  Returns the columns configured for a filter. The column configuration is used when the filter's results are viewed in *List View* with the *Columns* set to *Filter*.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** None, however, column details are only returned for:
  
   *  filters owned by the user.
   *  filters shared with a group that the user is a member of.
   *  filters shared with a private project that the user has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for.
   *  filters shared with a public project.
   *  filters shared with the public.
  \\"\\"\\"
  getColumns(id: Int!): [ColumnItem]

  \\"\\"\\"
  Returns a comment.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:**
  
   *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing the comment.
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
   *  If the comment has visibility restrictions, the user belongs to the group or has the role visibility is restricted to.
  \\"\\"\\"
  getComment(id: String!, input: getComment_request_Input, issueIdOrKey: String!): Comment

  \\"\\"\\"
  Returns the value of a comment property.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:**
  
   *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
   *  If the comment has visibility restrictions, belongs to the group or has the role visibility is restricted to.
  \\"\\"\\"
  getCommentProperty(commentId: String!, propertyKey: String!): EntityProperty

  \\"\\"\\"
  Returns the keys of all the properties of a comment.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:**
  
   *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
   *  If the comment has visibility restrictions, belongs to the group or has the role visibility is restricted to.
  \\"\\"\\"
  getCommentPropertyKeys(commentId: String!): PropertyKeys

  \\"\\"\\"
  Returns all comments for an issue.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** Comments are included in the response where the user has:
  
   *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing the comment.
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
   *  If the comment has visibility restrictions, belongs to the group or has the role visibility is role visibility is restricted to.
  \\"\\"\\"
  getComments(input: getComments_request_Input, issueIdOrKey: String!): PageOfComments

  \\"\\"\\"
  Returns a component.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for project containing the component.
  \\"\\"\\"
  getComponent(id: String!): ProjectComponent

  \\"\\"\\"
  Returns the counts of issues assigned to the component.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** None.
  \\"\\"\\"
  getComponentRelatedIssues(id: String!): ComponentIssuesCount

  \\"\\"\\"
  Returns the [global settings](https://confluence.atlassian.com/x/qYXKM) in Jira. These settings determine whether optional features (for example, subtasks, time tracking, and others) are enabled. If time tracking is enabled, this operation also returns the time tracking configuration.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** None.
  \\"\\"\\"
  getConfiguration: Configuration

  \\"\\"\\"
  Returns a [paginated](#pagination) list of [ contexts](https://confluence.atlassian.com/adminjiracloud/what-are-custom-field-contexts-991923859.html) for a custom field. Contexts can be returned as follows:
  
   *  With no other parameters set, all contexts.
   *  By defining \`id\` only, all contexts from the list of IDs.
   *  By defining \`isAnyIssueType\`, limit the list of contexts returned to either those that apply to all issue types (true) or those that apply to only a subset of issue types (false)
   *  By defining \`isGlobalContext\`, limit the list of contexts return to either those that apply to all projects (global contexts) (true) or those that apply to only a subset of projects (false).
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getContextsForField(fieldId: String!, input: getContextsForField_request_Input): getContextsForField_response

  \\"\\"\\"
  Returns a [paginated](#pagination) list of the contexts a field is used in. Deprecated, use [ Get custom field contexts](#api-rest-api-3-field-fieldId-context-get).
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getContextsForFieldDeprecated(fieldId: String!, input: getContextsForFieldDeprecated_request_Input): PageBeanContext

  \\"\\"\\"
  Returns details of projects, issue types within projects, and, when requested, the create screen fields for each issue type for the user. Use the information to populate the requests in [ Create issue](#api-rest-api-3-issue-post) and [Create issues](#api-rest-api-3-issue-bulk-post).
  
  The request can be restricted to specific projects or issue types using the query parameters. The response will contain information for the valid projects, issue types, or project and issue type combinations requested. Note that invalid project, issue type, or project and issue type combinations do not generate errors.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** *Create issues* [project permission](https://confluence.atlassian.com/x/yodKLg) in the requested projects.
  \\"\\"\\"
  getCreateIssueMeta(input: getCreateIssueMeta_request_Input): IssueCreateMetadata

  \\"\\"\\"
  Returns details for the current user.
  
  **[Permissions](#permissions) required:** Permission to access Jira.
  \\"\\"\\"
  getCurrentUser(input: getCurrentUser_request_Input): User9

  \\"\\"\\"
  Returns a [paginated](#pagination) list of configurations for a custom field created by a [Forge app](https://developer.atlassian.com/platform/forge/).
  
  The result can be filtered by one of these criteria:
  
   *  \`id\`.
   *  \`fieldContextId\`.
   *  \`issueId\`.
   *  \`projectKeyOrId\` and \`issueTypeId\`.
  
  Otherwise, all configurations are returned.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg). Jira permissions are not required for the Forge app that created the custom field.
  \\"\\"\\"
  getCustomFieldConfiguration(fieldIdOrKey: String!, input: getCustomFieldConfiguration_request_Input): PageBeanContextualConfiguration

  \\"\\"\\"
  Returns a custom field option. For example, an option in a select list.
  
  Note that this operation **only works for issue field select list options created in Jira or using operations from the [Issue custom field options](#api-group-Issue-custom-field-options) resource**, it cannot be used with issue field select list options created by Connect apps.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** The custom field option is returned as follows:
  
   *  if the user has the *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
   *  if the user has the *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for at least one project the custom field is used in, and the field is visible in at least one layout the user has permission to view.
  \\"\\"\\"
  getCustomFieldOption(id: String!): CustomFieldOption

  \\"\\"\\"
  Returns a dashboard.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** None.
  
  However, to get a dashboard, the dashboard must be shared with the user or the user must own it. Note, users with the *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) are considered owners of the System dashboard. The System dashboard is considered to be shared with all other users.
  \\"\\"\\"
  getDashboard(id: String!): getDashboard_response

  \\"\\"\\"
  Returns the key and value of a dashboard item property.
  
  A dashboard item enables an app to add user-specific information to a user dashboard. Dashboard items are exposed to users as gadgets that users can add to their dashboards. For more information on how users do this, see [Adding and customizing gadgets](https://confluence.atlassian.com/x/7AeiLQ).
  
  When an app creates a dashboard item it registers a callback to receive the dashboard item ID. The callback fires whenever the item is rendered or, where the item is configurable, the user edits the item. The app then uses this resource to store the item's content or configuration details. For more information on working with dashboard items, see [ Building a dashboard item for a JIRA Connect add-on](https://developer.atlassian.com/server/jira/platform/guide-building-a-dashboard-item-for-a-jira-connect-add-on-33746254/) and the [Dashboard Item](https://developer.atlassian.com/cloud/jira/platform/modules/dashboard-item/) documentation.
  
  There is no resource to set or get dashboard items.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** The user must be the owner of the dashboard or have the dashboard shared with them. Note, users with the *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) are considered owners of the System dashboard. The System dashboard is considered to be shared with all other users, and is accessible to anonymous users when Jira’s anonymous access is permitted.
  \\"\\"\\"
  getDashboardItemProperty(dashboardId: String!, itemId: String!, propertyKey: String!): EntityProperty

  \\"\\"\\"
  Returns the keys of all properties for a dashboard item.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** The user must be the owner of the dashboard or have the dashboard shared with them. Note, users with the *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) are considered owners of the System dashboard. The System dashboard is considered to be shared with all other users, and is accessible to anonymous users when Jira’s anonymous access is permitted.
  \\"\\"\\"
  getDashboardItemPropertyKeys(dashboardId: String!, itemId: String!): PropertyKeys

  \\"\\"\\"
  Returns a [paginated](#pagination) list of dashboards. This operation is similar to [Get dashboards](#api-rest-api-3-dashboard-get) except that the results can be refined to include dashboards that have specific attributes. For example, dashboards with a particular name. When multiple attributes are specified only filters matching all attributes are returned.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** The following dashboards that match the query parameters are returned:
  
   *  Dashboards owned by the user. Not returned for anonymous users.
   *  Dashboards shared with a group that the user is a member of. Not returned for anonymous users.
   *  Dashboards shared with a private project that the user can browse. Not returned for anonymous users.
   *  Dashboards shared with a public project.
   *  Dashboards shared with the public.
  \\"\\"\\"
  getDashboardsPaginated(input: getDashboardsPaginated_request_Input): getDashboardsPaginated_response

  \\"\\"\\"
  Returns the default sharing settings for new filters and dashboards for a user.
  
  **[Permissions](#permissions) required:** Permission to access Jira.
  \\"\\"\\"
  getDefaultShareScope: DefaultShareScope

  \\"\\"\\"
  Returns a [paginated](#pagination) list of defaults for a custom field. The results can be filtered by \`contextId\`, otherwise all values are returned. If no defaults are set for a context, nothing is returned.  
  The returned object depends on type of the custom field:
  
   *  \`CustomFieldContextDefaultValueDate\` (type \`datepicker\`) for date fields.
   *  \`CustomFieldContextDefaultValueDateTime\` (type \`datetimepicker\`) for date-time fields.
   *  \`CustomFieldContextDefaultValueSingleOption\` (type \`option.single\`) for single choice select lists and radio buttons.
   *  \`CustomFieldContextDefaultValueMultipleOption\` (type \`option.multiple\`) for multiple choice select lists and checkboxes.
   *  \`CustomFieldContextDefaultValueCascadingOption\` (type \`option.cascading\`) for cascading select lists.
   *  \`CustomFieldContextSingleUserPickerDefaults\` (type \`single.user.select\`) for single users.
   *  \`CustomFieldContextDefaultValueMultiUserPicker\` (type \`multi.user.select\`) for user lists.
   *  \`CustomFieldContextDefaultValueSingleGroupPicker\` (type \`grouppicker.single\`) for single choice group pickers.
   *  \`CustomFieldContextDefaultValueMultipleGroupPicker\` (type \`grouppicker.multiple\`) for multiple choice group pickers.
   *  \`CustomFieldContextDefaultValueURL\` (type \`url\`) for URLs.
   *  \`CustomFieldContextDefaultValueProject\` (type \`project\`) for project pickers.
   *  \`CustomFieldContextDefaultValueFloat\` (type \`float\`) for floats (floating-point numbers).
   *  \`CustomFieldContextDefaultValueLabels\` (type \`labels\`) for labels.
   *  \`CustomFieldContextDefaultValueTextField\` (type \`textfield\`) for text fields.
   *  \`CustomFieldContextDefaultValueTextArea\` (type \`textarea\`) for text area fields.
   *  \`CustomFieldContextDefaultValueReadOnly\` (type \`readonly\`) for read only (text) fields.
   *  \`CustomFieldContextDefaultValueMultipleVersion\` (type \`version.multiple\`) for single choice version pickers.
   *  \`CustomFieldContextDefaultValueSingleVersion\` (type \`version.single\`) for multiple choice version pickers.
  
  Forge custom fields [types](https://developer.atlassian.com/platform/forge/manifest-reference/modules/jira-custom-field-type/#data-types) are also supported, returning:
  
   *  \`CustomFieldContextDefaultValueForgeStringFieldBean\` (type \`forge.string\`) for Forge string fields.
   *  \`CustomFieldContextDefaultValueForgeMultiStringFieldBean\` (type \`forge.string.list\`) for Forge string collection fields.
   *  \`CustomFieldContextDefaultValueForgeObjectFieldBean\` (type \`forge.object\`) for Forge object fields.
   *  \`CustomFieldContextDefaultValueForgeDateTimeFieldBean\` (type \`forge.datetime\`) for Forge date-time fields.
   *  \`CustomFieldContextDefaultValueForgeGroupFieldBean\` (type \`forge.group\`) for Forge group fields.
   *  \`CustomFieldContextDefaultValueForgeMultiGroupFieldBean\` (type \`forge.group.list\`) for Forge group collection fields.
   *  \`CustomFieldContextDefaultValueForgeNumberFieldBean\` (type \`forge.number\`) for Forge number fields.
   *  \`CustomFieldContextDefaultValueForgeUserFieldBean\` (type \`forge.user\`) for Forge user fields.
   *  \`CustomFieldContextDefaultValueForgeMultiUserFieldBean\` (type \`forge.user.list\`) for Forge user collection fields.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getDefaultValues(fieldId: String!, input: getDefaultValues_request_Input): getDefaultValues_response

  \\"\\"\\"
  Returns the default workflow for a workflow scheme. The default workflow is the workflow that is assigned any issue types that have not been mapped to any other workflow. The default workflow has *All Unassigned Issue Types* listed in its issue types for the workflow scheme in Jira.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getDefaultWorkflow(id: Int!, input: getDefaultWorkflow_request_Input): DefaultWorkflow

  \\"\\"\\"
  Returns the default workflow for a workflow scheme's draft. The default workflow is the workflow that is assigned any issue types that have not been mapped to any other workflow. The default workflow has *All Unassigned Issue Types* listed in its issue types for the workflow scheme in Jira.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getDraftDefaultWorkflow(id: Int!): DefaultWorkflow

  \\"\\"\\"
  Returns the workflow-issue type mappings for a workflow scheme's draft.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getDraftWorkflow(id: Int!, input: getDraftWorkflow_request_Input): IssueTypesWorkflowMapping

  \\"\\"\\"
  Returns a [paginated](#pagination) list of the webhooks registered by the calling app.
  
  **[Permissions](#permissions) required:** Only [Connect](https://developer.atlassian.com/cloud/jira/platform/#connect-apps) and [OAuth 2.0](https://developer.atlassian.com/cloud/jira/platform/oauth-2-3lo-apps) apps can use this operation.
  \\"\\"\\"
  getDynamicWebhooksForApp(input: getDynamicWebhooksForApp_request_Input): getDynamicWebhooksForApp_response

  \\"\\"\\"
  Returns the edit screen fields for an issue that are visible to and editable by the user. Use the information to populate the requests in [Edit issue](#api-rest-api-3-issue-issueIdOrKey-put).
  
  This endpoint will check for these conditions:
  
  1.  Field is available on a field screen - through screen, screen scheme, issue type screen scheme, and issue type scheme configuration. \`overrideScreenSecurity=true\` skips this condition.
  2.  Field is visible in the [field configuration](https://support.atlassian.com/jira-cloud-administration/docs/change-a-field-configuration/). \`overrideScreenSecurity=true\` skips this condition.
  3.  Field is shown on the issue: each field has different conditions here. For example: Attachment field only shows if attachments are enabled. Assignee only shows if user has permissions to assign the issue.
  4.  If a field is custom then it must have valid custom field context, applicable for its project and issue type. All system fields are assumed to have context in all projects and all issue types.
  5.  Issue has a project, issue type, and status defined.
  6.  Issue is assigned to a valid workflow, and the current status has assigned a workflow step. \`overrideEditableFlag=true\` skips this condition.
  7.  The current workflow step is editable. This is true by default, but [can be disabled by setting](https://support.atlassian.com/jira-cloud-administration/docs/use-workflow-properties/) the \`jira.issue.editable\` property to \`false\`. \`overrideEditableFlag=true\` skips this condition.
  8.  User has [Edit issues permission](https://support.atlassian.com/jira-cloud-administration/docs/permissions-for-company-managed-projects/).
  9.  Workflow permissions allow editing a field. This is true by default but [can be modified](https://support.atlassian.com/jira-cloud-administration/docs/use-workflow-properties/) using \`jira.permission.*\` workflow properties.
  
  Fields hidden using [Issue layout settings page](https://support.atlassian.com/jira-software-cloud/docs/configure-field-layout-in-the-issue-view/) remain editable.
  
  Connect apps having an app user with *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg), and Forge apps acting on behalf of users with *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg), can return additional details using:
  
   *  \`overrideScreenSecurity\` When this flag is \`true\`, then this endpoint skips checking if fields are available through screens, and field configuration (conditions 1. and 2. from the list above).
   *  \`overrideEditableFlag\` When this flag is \`true\`, then this endpoint skips checking if workflow is present and if the current step is editable (conditions 6. and 7. from the list above).
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:**
  
   *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
  
  Note: For any fields to be editable the user must have the *Edit issues* [project permission](https://confluence.atlassian.com/x/yodKLg) for the issue.
  \\"\\"\\"
  getEditIssueMeta(input: getEditIssueMeta_request_Input, issueIdOrKey: String!): IssueUpdateMetadata2

  \\"\\"\\"
  Returns all issue events.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getEvents: [IssueEvent]

  \\"\\"\\"
  Returns webhooks that have recently failed to be delivered to the requesting app after the maximum number of retries.
  
  After 72 hours the failure may no longer be returned by this operation.
  
  The oldest failure is returned first.
  
  This method uses a cursor-based pagination. To request the next page use the failure time of the last webhook on the list as the \`failedAfter\` value or use the URL provided in \`next\`.
  
  **[Permissions](#permissions) required:** Only [Connect apps](https://developer.atlassian.com/cloud/jira/platform/index/#connect-apps) can use this operation.
  \\"\\"\\"
  getFailedWebhooks(input: getFailedWebhooks_request_Input): getFailedWebhooks_response

  \\"\\"\\"
  Returns the visible favorite filters of the user.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** A favorite filter is only visible to the user where the filter is:
  
   *  owned by the user.
   *  shared with a group that the user is a member of.
   *  shared with a private project that the user has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for.
   *  shared with a public project.
   *  shared with the public.
  
  For example, if the user favorites a public filter that is subsequently made private that filter is not returned by this operation.
  \\"\\"\\"
  getFavouriteFilters(input: getFilters_request_Input): [Filter]

  \\"\\"\\"Returns the list of features for a project.\\"\\"\\"
  getFeaturesForProject(projectIdOrKey: String!): ContainerForProjectFeatures

  \\"\\"\\"
  Returns the JQL search auto complete suggestions for a field.
  
  Suggestions can be obtained by providing:
  
   *  \`fieldName\` to get a list of all values for the field.
   *  \`fieldName\` and \`fieldValue\` to get a list of values containing the text in \`fieldValue\`.
   *  \`fieldName\` and \`predicateName\` to get a list of all predicate values for the field.
   *  \`fieldName\`, \`predicateName\`, and \`predicateValue\` to get a list of predicate values containing the text in \`predicateValue\`.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** None.
  \\"\\"\\"
  getFieldAutoCompleteForQueryString(input: getFieldAutoCompleteForQueryString_request_Input): AutoCompleteSuggestions

  \\"\\"\\"
  Returns a [paginated](#pagination) list of all fields for a configuration.
  
  Only the fields from configurations used in company-managed (classic) projects are returned.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getFieldConfigurationItems(id: Int!, input: getAllIssueFieldOptions_request_Input): PageBeanFieldConfigurationItem

  \\"\\"\\"
  Returns a [paginated](#pagination) list of field configuration issue type items.
  
  Only items used in classic projects are returned.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getFieldConfigurationSchemeMappings(input: getFieldConfigurationSchemeMappings_request_Input): PageBeanFieldConfigurationIssueTypeItem

  \\"\\"\\"
  Returns a [paginated](#pagination) list of field configuration schemes and, for each scheme, a list of the projects that use it.
  
  The list is sorted by field configuration scheme ID. The first item contains the list of project IDs assigned to the default field configuration scheme.
  
  Only field configuration schemes used in classic projects are returned.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getFieldConfigurationSchemeProjectMapping(input: getFieldConfigurationSchemeProjectMapping_request_Input!): PageBeanFieldConfigurationSchemeProjects

  \\"\\"\\"
  Returns system and custom issue fields according to the following rules:
  
   *  Fields that cannot be added to the issue navigator are always returned.
   *  Fields that cannot be placed on an issue screen are always returned.
   *  Fields that depend on global Jira settings are only returned if the setting is enabled. That is, timetracking fields, subtasks, votes, and watches.
   *  For all other fields, this operation only returns the fields that the user has permission to view (that is, the field is used in at least one project that the user has *Browse Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for.)
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** None.
  \\"\\"\\"
  getFields: [FieldDetails]

  \\"\\"\\"
  Returns a [paginated](#pagination) list of fields for Classic Jira projects. The list can include:
  
   *  all fields
   *  specific fields, by defining \`id\`
   *  fields that contain a string in the field name or description, by defining \`query\`
   *  specific fields that contain a string in the field name or description, by defining \`id\` and \`query\`
  
  Only custom fields can be queried, \`type\` must be set to \`custom\`.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getFieldsPaginated(input: getFieldsPaginated_request_Input): getFieldsPaginated_response

  \\"\\"\\"
  Returns a filter.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** None, however, the filter is only returned where it is:
  
   *  owned by the user.
   *  shared with a group that the user is a member of.
   *  shared with a private project that the user has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for.
   *  shared with a public project.
   *  shared with the public.
  \\"\\"\\"
  getFilter(id: Int!, input: getFilter_request_Input): Filter

  \\"\\"\\"
  Returns all filters. Deprecated, use [ Search for filters](#api-rest-api-3-filter-search-get) that supports search and pagination.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** None, however, only the following filters are returned:
  
   *  filters owned by the user.
   *  filters shared with a group that the user is a member of.
   *  filters shared with a private project that the user has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for.
   *  filters shared with a public project.
   *  filters shared with the public.
  \\"\\"\\"
  getFilters(input: getFilters_request_Input): [Filter]

  \\"\\"\\"
  Returns a [paginated](#pagination) list of filters. Use this operation to get:
  
   *  specific filters, by defining \`id\` only.
   *  filters that match all of the specified attributes. For example, all filters for a user with a particular word in their name. When multiple attributes are specified only filters matching all attributes are returned.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** None, however, only the following filters that match the query parameters are returned:
  
   *  filters owned by the user.
   *  filters shared with a group that the user is a member of.
   *  filters shared with a private project that the user has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for.
   *  filters shared with a public project.
   *  filters shared with the public.
  \\"\\"\\"
  getFiltersPaginated(input: getFiltersPaginated_request_Input): getFiltersPaginated_response

  \\"\\"\\"
  This operation is deprecated, use [\`group/member\`](#api-rest-api-3-group-member-get).
  
  Returns all users in a group.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getGroup(input: getGroup_request_Input): Group

  \\"\\"\\"
  Get the issue type hierarchy for a next-gen project.
  
  The issue type hierarchy for a project consists of:
  
   *  *Epic* at level 1 (optional).
   *  One or more issue types at level 0 such as *Story*, *Task*, or *Bug*. Where the issue type *Epic* is defined, these issue types are used to break down the content of an epic.
   *  *Subtask* at level -1 (optional). This issue type enables level 0 issue types to be broken down into components. Issues based on a level -1 issue type must have a parent issue.
  
  **[Permissions](#permissions) required:** *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
  \\"\\"\\"
  getHierarchy(projectId: Int!): ProjectIssueTypeHierarchy

  \\"\\"\\"
  Returns a list of IDs and delete timestamps for worklogs deleted after a date and time.
  
  This resource is paginated, with a limit of 1000 worklogs per page. Each page lists worklogs from oldest to youngest. If the number of items in the date range exceeds 1000, \`until\` indicates the timestamp of the youngest item on the page. Also, \`nextPage\` provides the URL for the next page of worklogs. The \`lastPage\` parameter is set to true on the last page of worklogs.
  
  This resource does not return worklogs deleted during the minute preceding the request.
  
  **[Permissions](#permissions) required:** Permission to access Jira.
  \\"\\"\\"
  getIdsOfWorklogsDeletedSince(input: getIdsOfWorklogsDeletedSince_request_Input): ChangedWorklogs

  \\"\\"\\"
  Returns a list of IDs and update timestamps for worklogs updated after a date and time.
  
  This resource is paginated, with a limit of 1000 worklogs per page. Each page lists worklogs from oldest to youngest. If the number of items in the date range exceeds 1000, \`until\` indicates the timestamp of the youngest item on the page. Also, \`nextPage\` provides the URL for the next page of worklogs. The \`lastPage\` parameter is set to true on the last page of worklogs.
  
  This resource does not return worklogs updated during the minute preceding the request.
  
  **[Permissions](#permissions) required:** Permission to access Jira, however, worklogs are only returned where either of the following is true:
  
   *  the worklog is set as *Viewable by All Users*.
   *  the user is a member of a project role or group with permission to view the worklog.
  \\"\\"\\"
  getIdsOfWorklogsModifiedSince(input: getIdsOfWorklogsModifiedSince_request_Input): ChangedWorklogs

  \\"\\"\\"
  Returns the details for an issue.
  
  The issue is identified by its ID or key, however, if the identifier doesn't match an issue, a case-insensitive search and check for moved issues is performed. If a matching issue is found its details are returned, a 302 or other redirect is **not** returned. The issue key returned in the response is the key of the issue found.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:**
  
   *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
  \\"\\"\\"
  getIssue(input: getIssue_request_Input, issueIdOrKey: String!): IssueBean

  \\"\\"\\"
  Returns all issue types.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** Issue types are only returned as follows:
  
   *  if the user has the *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg), all issue types are returned.
   *  if the user has the *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for one or more projects, the issue types associated with the projects the user has permission to browse are returned.
  \\"\\"\\"
  getIssueAllTypes: [IssueTypeDetails]

  \\"\\"\\"
  Returns an option from a select list issue field.
  
  Note that this operation **only works for issue field select list options added by Connect apps**, it cannot be used with issue field select list options created in Jira or using operations from the [Issue custom field options](#api-group-Issue-custom-field-options) resource.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg). Jira permissions are not required for the app providing the field.
  \\"\\"\\"
  getIssueFieldOption(fieldKey: String!, optionId: Int!): IssueFieldOption

  \\"\\"\\"
  Returns an issue link.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:**
  
   *  *Browse project* [project permission](https://confluence.atlassian.com/x/yodKLg) for all the projects containing the linked issues.
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, permission to view both of the issues.
  \\"\\"\\"
  getIssueLink(linkId: String!): IssueLink

  \\"\\"\\"
  Returns an issue link type.
  
  To use this operation, the site must have [issue linking](https://confluence.atlassian.com/x/yoXKM) enabled.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for a project in the site.
  \\"\\"\\"
  getIssueLinkType(issueLinkTypeId: String!): IssueLinkType2

  \\"\\"\\"
  Returns a list of all issue link types.
  
  To use this operation, the site must have [issue linking](https://confluence.atlassian.com/x/yoXKM) enabled.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for a project in the site.
  \\"\\"\\"
  getIssueLinkTypes: IssueLinkTypes

  \\"\\"\\"
  Returns the default issue navigator columns.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getIssueNavigatorDefaultColumns: [ColumnItem]

  \\"\\"\\"
  Returns lists of issues matching a query string. Use this resource to provide auto-completion suggestions when the user is looking for an issue using a word or string.
  
  This operation returns two lists:
  
   *  \`History Search\` which includes issues from the user's history of created, edited, or viewed issues that contain the string in the \`query\` parameter.
   *  \`Current Search\` which includes issues that match the JQL expression in \`currentJQL\` and contain the string in the \`query\` parameter.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** None.
  \\"\\"\\"
  getIssuePickerResource(input: getIssuePickerResource_request_Input): IssuePickerSuggestions

  \\"\\"\\"
  Returns the key and value of an issue's property.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:**
  
   *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing the issue.
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
  \\"\\"\\"
  getIssueProperty(issueIdOrKey: String!, propertyKey: String!): EntityProperty

  \\"\\"\\"
  Returns the URLs and keys of an issue's properties.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** Property details are only returned where the user has:
  
   *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing the issue.
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
  \\"\\"\\"
  getIssuePropertyKeys(issueIdOrKey: String!): PropertyKeys

  \\"\\"\\"
  Returns details of an issue security level.
  
  Use [Get issue security scheme](#api-rest-api-3-issuesecurityschemes-id-get) to obtain the IDs of issue security levels associated with the issue security scheme.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** None.
  \\"\\"\\"
  getIssueSecurityLevel(id: String!): SecurityLevel

  \\"\\"\\"
  Returns issue security level members.
  
  Only issue security level members in context of classic projects are returned.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getIssueSecurityLevelMembers(input: getIssueSecurityLevelMembers_request_Input, issueSecuritySchemeId: Int!): PageBeanIssueSecurityLevelMember

  \\"\\"\\"
  Returns an issue security scheme along with its security levels.
  
  **[Permissions](#permissions) required:**
  
   *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
   *  *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for a project that uses the requested issue security scheme.
  \\"\\"\\"
  getIssueSecurityScheme(id: Int!): SecurityScheme

  \\"\\"\\"
  Returns all [issue security schemes](https://confluence.atlassian.com/x/J4lKLg).
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getIssueSecuritySchemes: SecuritySchemes

  \\"\\"\\"
  Returns an issue type.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) in a project the issue type is associated with or *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getIssueType(id: String!): IssueTypeDetails

  \\"\\"\\"
  Returns a [paginated](#pagination) list of context to issue type mappings for a custom field. Mappings are returned for all contexts or a list of contexts. Mappings are ordered first by context ID and then by issue type ID.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getIssueTypeMappingsForContexts(fieldId: String!, input: getIssueTypeMappingsForContexts_request_Input): getIssueTypeMappingsForContexts_response

  \\"\\"\\"
  Returns the key and value of the [issue type property](https://developer.atlassian.com/cloud/jira/platform/storing-data-without-a-database/#a-id-jira-entity-properties-a-jira-entity-properties).
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:**
  
   *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) to get the details of any issue type.
   *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) to get the details of any issue types associated with the projects the user has permission to browse.
  \\"\\"\\"
  getIssueTypeProperty(issueTypeId: String!, propertyKey: String!): EntityProperty

  \\"\\"\\"
  Returns all the [issue type property](https://developer.atlassian.com/cloud/jira/platform/storing-data-without-a-database/#a-id-jira-entity-properties-a-jira-entity-properties) keys of the issue type.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:**
  
   *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) to get the property keys of any issue type.
   *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) to get the property keys of any issue types associated with the projects the user has permission to browse.
  \\"\\"\\"
  getIssueTypePropertyKeys(issueTypeId: String!): PropertyKeys

  \\"\\"\\"
  Returns a [paginated](#pagination) list of issue type schemes and, for each issue type scheme, a list of the projects that use it.
  
  Only issue type schemes used in classic projects are returned.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getIssueTypeSchemeForProjects(input: getIssueTypeSchemeForProjects_request_Input!): PageBeanIssueTypeSchemeProjects

  \\"\\"\\"
  Returns a [paginated](#pagination) list of issue type scheme items.
  
  Only issue type scheme items used in classic projects are returned.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getIssueTypeSchemesMapping(input: getIssueTypeSchemesMapping_request_Input): PageBeanIssueTypeSchemeMapping

  \\"\\"\\"
  Returns a [paginated](#pagination) list of issue type screen scheme items.
  
  Only issue type screen schemes used in classic projects are returned.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getIssueTypeScreenSchemeMappings(input: getIssueTypeScreenSchemeMappings_request_Input): PageBeanIssueTypeScreenSchemeItem

  \\"\\"\\"
  Returns a [paginated](#pagination) list of issue type screen schemes and, for each issue type screen scheme, a list of the projects that use it.
  
  Only issue type screen schemes used in classic projects are returned.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getIssueTypeScreenSchemeProjectAssociations(input: getFieldConfigurationSchemeProjectMapping_request_Input!): PageBeanIssueTypeScreenSchemesProjects

  \\"\\"\\"
  Returns a [paginated](#pagination) list of issue type screen schemes.
  
  Only issue type screen schemes used in classic projects are returned.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getIssueTypeScreenSchemes(input: getIssueTypeScreenSchemes_request_Input): PageBeanIssueTypeScreenScheme

  \\"\\"\\"
  Returns issue types for a project.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) in the relevant project or *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getIssueTypesForProject(input: getIssueTypesForProject_request_Input!): [IssueTypeDetails]

  \\"\\"\\"
  Returns the watchers for an issue.
  
  This operation requires the **Allow users to watch issues** option to be *ON*. This option is set in General configuration for Jira. See [Configuring Jira application options](https://confluence.atlassian.com/x/uYXKM) for details.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:**
  
   *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is ini
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
   *  To see details of users on the watchlist other than themselves, *View voters and watchers* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
  \\"\\"\\"
  getIssueWatchers(issueIdOrKey: String!): Watchers

  \\"\\"\\"
  Returns worklogs for an issue, starting from the oldest worklog or from the worklog started on or after a date and time.
  
  Time tracking must be enabled in Jira, otherwise this operation returns an error. For more information, see [Configuring time tracking](https://confluence.atlassian.com/x/qoXKM).
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** Workloads are only returned where the user has:
  
   *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
   *  If the worklog has visibility restrictions, belongs to the group or has the role visibility is restricted to.
  \\"\\"\\"
  getIssueWorklog(input: getIssueWorklog_request_Input, issueIdOrKey: String!): PageOfWorklogs

  \\"\\"\\"
  Returns licensing information about the Jira instance.
  
  **[Permissions](#permissions) required:** None.
  \\"\\"\\"
  getLicense: License

  \\"\\"\\"
  Returns the locale for the user.
  
  If the user has no language preference set (which is the default setting) or this resource is accessed anonymous, the browser locale detected by Jira is returned. Jira detects the browser locale using the *Accept-Language* header in the request. However, if this doesn't match a locale available Jira, the site default locale is returned.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** None.
  \\"\\"\\"
  getLocale: Locale

  \\"\\"\\"
  Returns the filters owned by the user. If \`includeFavourites\` is \`true\`, the user's visible favorite filters are also returned.
  
  **[Permissions](#permissions) required:** Permission to access Jira, however, a favorite filters is only visible to the user where the filter is:
  
   *  owned by the user.
   *  shared with a group that the user is a member of.
   *  shared with a private project that the user has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for.
   *  shared with a public project.
   *  shared with the public.
  
  For example, if the user favorites a public filter that is subsequently made private that filter is not returned by this operation.
  \\"\\"\\"
  getMyFilters(input: getMyFilters_request_Input): [Filter]

  \\"\\"\\"
  Returns a list of permissions indicating which permissions the user has. Details of the user's permissions can be obtained in a global, project, issue or comment context.
  
  The user is reported as having a project permission:
  
   *  in the global context, if the user has the project permission in any project.
   *  for a project, where the project permission is determined using issue data, if the user meets the permission's criteria for any issue in the project. Otherwise, if the user has the project permission in the project.
   *  for an issue, where a project permission is determined using issue data, if the user has the permission in the issue. Otherwise, if the user has the project permission in the project containing the issue.
   *  for a comment, where the user has both the permission to browse the comment and the project permission for the comment's parent issue. Only the BROWSE\\\\_PROJECTS permission is supported. If a \`commentId\` is provided whose \`permissions\` does not equal BROWSE\\\\_PROJECTS, a 400 error will be returned.
  
  This means that users may be shown as having an issue permission (such as EDIT\\\\_ISSUES) in the global context or a project context but may not have the permission for any or all issues. For example, if Reporters have the EDIT\\\\_ISSUES permission a user would be shown as having this permission in the global context or the context of a project, because any user can be a reporter. However, if they are not the user who reported the issue queried they would not have EDIT\\\\_ISSUES permission for that issue.
  
  Global permissions are unaffected by context.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** None.
  \\"\\"\\"
  getMyPermissions(input: getMyPermissions_request_Input): getMyPermissions_response

  \\"\\"\\"
  Returns a [notification scheme](https://confluence.atlassian.com/x/8YdKLg), including the list of events and the recipients who will receive notifications for those events.
  
  **[Permissions](#permissions) required:** Permission to access Jira, however the user must have permission to administer at least one project associated with the notification scheme.
  \\"\\"\\"
  getNotificationScheme(id: Int!, input: getNotificationScheme_request_Input): NotificationScheme

  \\"\\"\\"
  Gets a [notification scheme](https://confluence.atlassian.com/x/8YdKLg) associated with the project. See the [Get notification scheme](#api-rest-api-3-notificationscheme-id-get) resource for more information about notification schemes.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) or *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg).
  \\"\\"\\"
  getNotificationSchemeForProject(input: getNotificationScheme_request_Input, projectKeyOrId: String!): NotificationScheme

  \\"\\"\\"
  Returns a [paginated](#pagination) list of [notification schemes](https://confluence.atlassian.com/x/8YdKLg) ordered by display name.
  
  ### About notification schemes ###
  
  A notification scheme is a list of events and recipients who will receive notifications for those events. The list is contained within the \`notificationSchemeEvents\` object and contains pairs of \`events\` and \`notifications\`:
  
   *  \`event\` Identifies the type of event. The events can be [Jira system events](https://confluence.atlassian.com/x/8YdKLg#Creatinganotificationscheme-eventsEvents) or [custom events](https://confluence.atlassian.com/x/AIlKLg).
   *  \`notifications\` Identifies the [recipients](https://confluence.atlassian.com/x/8YdKLg#Creatinganotificationscheme-recipientsRecipients) of notifications for each event. Recipients can be any of the following types:
      
       *  \`CurrentAssignee\`
       *  \`Reporter\`
       *  \`CurrentUser\`
       *  \`ProjectLead\`
       *  \`ComponentLead\`
       *  \`User\` (the \`parameter\` is the user key)
       *  \`Group\` (the \`parameter\` is the group name)
       *  \`ProjectRole\` (the \`parameter\` is the project role ID)
       *  \`EmailAddress\`
       *  \`AllWatchers\`
       *  \`UserCustomField\` (the \`parameter\` is the ID of the custom field)
       *  \`GroupCustomField\`(the \`parameter\` is the ID of the custom field)
  
  *Note that you should allow for events without recipients to appear in responses.*
  
  **[Permissions](#permissions) required:** Permission to access Jira, however the user must have permission to administer at least one project associated with a notification scheme for it to be returned.
  \\"\\"\\"
  getNotificationSchemes(input: getNotificationSchemes_request_Input): PageBeanNotificationScheme

  \\"\\"\\"
  Returns a [paginated](#pagination) list of all custom field option for a context. Options are returned first then cascading options, in the order they display in Jira.
  
  This operation works for custom field options created in Jira or the operations from this resource. **To work with issue field select list options created for Connect apps use the [Issue custom field options (apps)](#api-group-issue-custom-field-options--apps-) operations.**
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getOptionsForContext(contextId: Int!, fieldId: String!, input: getOptionsForContext_request_Input): getOptionsForContext_response

  \\"\\"\\"
  Returns a permission scheme.
  
  **[Permissions](#permissions) required:** Permission to access Jira.
  \\"\\"\\"
  getPermissionScheme(input: getAllPermissionSchemes_request_Input, schemeId: Int!): PermissionScheme

  \\"\\"\\"
  Returns a permission grant.
  
  **[Permissions](#permissions) required:** Permission to access Jira.
  \\"\\"\\"
  getPermissionSchemeGrant(input: getPermissionSchemeGrant_request_Input, permissionId: Int!, schemeId: Int!): PermissionGrant

  \\"\\"\\"
  Returns all permission grants for a permission scheme.
  
  **[Permissions](#permissions) required:** Permission to access Jira.
  \\"\\"\\"
  getPermissionSchemeGrants(input: getPermissionSchemeGrants_request_Input, schemeId: Int!): PermissionGrants

  \\"\\"\\"
  Returns the value of a preference of the current user.
  
  Note that these keys are deprecated:
  
   *  *jira.user.locale* The locale of the user. By default this is not set and the user takes the locale of the instance.
   *  *jira.user.timezone* The time zone of the user. By default this is not set and the user takes the timezone of the instance.
  
  Use [ Update a user profile](https://developer.atlassian.com/cloud/admin/user-management/rest/#api-users-account-id-manage-profile-patch) from the user management REST API to manage timezone and locale instead.
  
  **[Permissions](#permissions) required:** Permission to access Jira.
  \\"\\"\\"
  getPreference(input: getPreference_request_Input!): String

  \\"\\"\\"
  Returns the list of all issue priorities.
  
  **[Permissions](#permissions) required:** Permission to access Jira.
  \\"\\"\\"
  getPriorities: [Priority2]

  \\"\\"\\"
  Returns an issue priority.
  
  **[Permissions](#permissions) required:** Permission to access Jira.
  \\"\\"\\"
  getPriority(id: String!): Priority2

  \\"\\"\\"
  Returns the [project details](https://confluence.atlassian.com/x/ahLpNw) for a project.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
  \\"\\"\\"
  getProject(input: getProject_request_Input, projectIdOrKey: String!): Project2

  \\"\\"\\"
  Returns a project category.
  
  **[Permissions](#permissions) required:** Permission to access Jira.
  \\"\\"\\"
  getProjectCategoryById(id: Int!): ProjectCategory2

  \\"\\"\\"
  Returns all components in a project. See the [Get project components paginated](#api-rest-api-3-project-projectIdOrKey-component-get) resource if you want to get a full list of components with pagination.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** *Browse Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
  \\"\\"\\"
  getProjectComponents(projectIdOrKey: String!): [ProjectComponent]

  \\"\\"\\"
  Returns a [paginated](#pagination) list of all components in a project. See the [Get project components](#api-rest-api-3-project-projectIdOrKey-components-get) resource if you want to get a full list of versions without pagination.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** *Browse Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
  \\"\\"\\"
  getProjectComponentsPaginated(input: getProjectComponentsPaginated_request_Input, projectIdOrKey: String!): PageBeanComponentWithIssueCount

  \\"\\"\\"
  Returns a [paginated](#pagination) list of context to project mappings for a custom field. The result can be filtered by \`contextId\`. Otherwise, all mappings are returned. Invalid IDs are ignored.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getProjectContextMapping(fieldId: String!, input: getProjectContextMapping_request_Input): getProjectContextMapping_response

  \\"\\"\\"
  Returns the [project's sender email address](https://confluence.atlassian.com/x/dolKLg).
  
  **[Permissions](#permissions) required:** *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
  \\"\\"\\"
  getProjectEmail(projectId: Int!): ProjectEmailAddress

  \\"\\"\\"
  Returns the [issue security scheme](https://confluence.atlassian.com/x/J4lKLg) associated with the project.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) or the *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg).
  \\"\\"\\"
  getProjectIssueSecurityScheme(projectKeyOrId: String!): SecurityScheme

  \\"\\"\\"
  Returns the value of a [project property](https://developer.atlassian.com/cloud/jira/platform/storing-data-without-a-database/#a-id-jira-entity-properties-a-jira-entity-properties).
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** *Browse Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing the property.
  \\"\\"\\"
  getProjectProperty(projectIdOrKey: String!, propertyKey: String!): EntityProperty

  \\"\\"\\"
  Returns all [project property](https://developer.atlassian.com/cloud/jira/platform/storing-data-without-a-database/#a-id-jira-entity-properties-a-jira-entity-properties) keys for the project.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** *Browse Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
  \\"\\"\\"
  getProjectPropertyKeys(projectIdOrKey: String!): PropertyKeys

  \\"\\"\\"
  Returns a project role's details and actors associated with the project. The list of actors is sorted by display name.
  
  To check whether a user belongs to a role based on their group memberships, use [Get user](#api-rest-api-3-user-get) with the \`groups\` expand parameter selected. Then check whether the user keys and groups match with the actors returned for the project.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project or *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getProjectRole(id: Int!, input: getProjectRole_request_Input, projectIdOrKey: String!): ProjectRole3

  \\"\\"\\"
  Returns the [default actors](#api-rest-api-3-resolution-get) for the project role.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getProjectRoleActorsForRole(id: Int!): ProjectRole3

  \\"\\"\\"
  Gets the project role details and the default actors associated with the role. The list of default actors is sorted by display name.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getProjectRoleById(id: Int!): ProjectRole3

  \\"\\"\\"
  Returns all [project roles](https://confluence.atlassian.com/x/3odKLg) and the details for each role. Note that the list of project roles is common to all projects.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) or *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
  \\"\\"\\"
  getProjectRoleDetails(input: getProjectRoleDetails_request_Input, projectIdOrKey: String!): [ProjectRoleDetails]

  \\"\\"\\"
  Returns a list of [project roles](https://confluence.atlassian.com/x/3odKLg) for the project returning the name and self URL for each role.
  
  Note that all project roles are shared with all projects in Jira Cloud. See [Get all project roles](#api-rest-api-3-role-get) for more information.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for any project on the site or *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getProjectRoles(projectIdOrKey: String!): getProjectRoles_200_response

  \\"\\"\\"
  Returns a [project type](https://confluence.atlassian.com/x/Var1Nw).
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** None.
  \\"\\"\\"
  getProjectTypeByKey(projectTypeKey: String!): ProjectType

  \\"\\"\\"
  Returns all versions in a project. The response is not paginated. Use [Get project versions paginated](#api-rest-api-3-project-projectIdOrKey-version-get) if you want to get the versions in a project with pagination.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** *Browse Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
  \\"\\"\\"
  getProjectVersions(input: getProjectVersions_request_Input, projectIdOrKey: String!): [Version]

  \\"\\"\\"
  Returns a [paginated](#pagination) list of all versions in a project. See the [Get project versions](#api-rest-api-3-project-projectIdOrKey-versions-get) resource if you want to get a full list of versions without pagination.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** *Browse Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
  \\"\\"\\"
  getProjectVersionsPaginated(input: getProjectVersionsPaginated_request_Input, projectIdOrKey: String!): PageBeanVersion

  \\"\\"\\"
  Returns a [paginated](#pagination) list of projects associated with an issue type screen scheme.
  
  Only company-managed projects associated with an issue type screen scheme are returned.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getProjectsForIssueTypeScreenScheme(input: getProjectsForIssueTypeScreenScheme_request_Input, issueTypeScreenSchemeId: Int!): PageBeanProjectDetails

  \\"\\"\\"
  Returns a list of up to 20 projects recently viewed by the user that are still visible to the user.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** Projects are returned only where the user has one of:
  
   *  *Browse Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
   *  *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
   *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getRecent(input: getRecent_request_Input): [Project2]

  \\"\\"\\"
  Returns a remote issue link for an issue.
  
  This operation requires [issue linking to be active](https://confluence.atlassian.com/x/yoXKM).
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:**
  
   *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
  \\"\\"\\"
  getRemoteIssueLinkById(issueIdOrKey: String!, linkId: String!): RemoteIssueLink

  \\"\\"\\"
  Returns the remote issue links for an issue. When a remote issue link global ID is provided the record with that global ID is returned, otherwise all remote issue links are returned. Where a global ID includes reserved URL characters these must be escaped in the request. For example, pass \`system=http://www.mycompany.com/support&id=1\` as \`system%3Dhttp%3A%2F%2Fwww.mycompany.com%2Fsupport%26id%3D1\`.
  
  This operation requires [issue linking to be active](https://confluence.atlassian.com/x/yoXKM).
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:**
  
   *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
  \\"\\"\\"
  getRemoteIssueLinks(input: getRemoteIssueLinks_request_Input, issueIdOrKey: String!): RemoteIssueLink

  \\"\\"\\"
  Returns an issue resolution value.
  
  **[Permissions](#permissions) required:** Permission to access Jira.
  \\"\\"\\"
  getResolution(id: String!): Resolution

  \\"\\"\\"
  Returns a list of all issue resolution values.
  
  **[Permissions](#permissions) required:** Permission to access Jira.
  \\"\\"\\"
  getResolutions: [Resolution]

  \\"\\"\\"
  Returns a [paginated](#pagination) list of screen schemes.
  
  Only screen schemes used in classic projects are returned.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getScreenSchemes(input: getScreenSchemes_request_Input): PageBeanScreenScheme

  \\"\\"\\"
  Returns a [paginated](#pagination) list of all screens or those specified by one or more screen IDs.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getScreens(input: getScreens_request_Input): PageBeanScreen

  \\"\\"\\"
  Returns a [paginated](#pagination) list of the screens a field is used in.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getScreensForField(fieldId: String!, input: getScreensForField_request_Input): PageBeanScreenWithTab

  \\"\\"\\"
  Returns all [issue security](https://confluence.atlassian.com/x/J4lKLg) levels for the project that the user has access to.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** *Browse projects* [global permission](https://confluence.atlassian.com/x/x4dKLg) for the project, however, issue security levels are only returned for authenticated user with *Set Issue Security* [global permission](https://confluence.atlassian.com/x/x4dKLg) for the project.
  \\"\\"\\"
  getSecurityLevelsForProject(projectKeyOrId: String!): ProjectIssueSecurityLevels

  \\"\\"\\"
  Returns a [paginated](#pagination) list of options for a select list issue field that can be viewed and selected by the user.
  
  Note that this operation **only works for issue field select list options added by Connect apps**, it cannot be used with issue field select list options created in Jira or using operations from the [Issue custom field options](#api-group-Issue-custom-field-options) resource.
  
  **[Permissions](#permissions) required:** Permission to access Jira.
  \\"\\"\\"
  getSelectableIssueFieldOptions(fieldKey: String!, input: getSelectableIssueFieldOptions_request_Input): PageBeanIssueFieldOption

  \\"\\"\\"
  Returns the time tracking provider that is currently selected. Note that if time tracking is disabled, then a successful but empty response is returned.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getSelectedTimeTrackingImplementation: TimeTrackingProvider

  \\"\\"\\"
  Returns information about the Jira instance.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** None.
  \\"\\"\\"
  getServerInfo: ServerInformation

  \\"\\"\\"
  Returns a share permission for a filter. A filter can be shared with groups, projects, all logged-in users, or the public. Sharing with all logged-in users or the public is known as a global share permission.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** None, however, a share permission is only returned for:
  
   *  filters owned by the user.
   *  filters shared with a group that the user is a member of.
   *  filters shared with a private project that the user has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for.
   *  filters shared with a public project.
   *  filters shared with the public.
  \\"\\"\\"
  getSharePermission(id: Int!, permissionId: Int!): SharePermission

  \\"\\"\\"
  Returns the share permissions for a filter. A filter can be shared with groups, projects, all logged-in users, or the public. Sharing with all logged-in users or the public is known as a global share permission.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** None, however, share permissions are only returned for:
  
   *  filters owned by the user.
   *  filters shared with a group that the user is a member of.
   *  filters shared with a private project that the user has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for.
   *  filters shared with a public project.
   *  filters shared with the public.
  \\"\\"\\"
  getSharePermissions(id: Int!): [SharePermission]

  \\"\\"\\"
  Returns the time tracking settings. This includes settings such as the time format, default time unit, and others. For more information, see [Configuring time tracking](https://confluence.atlassian.com/x/qoXKM).
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getSharedTimeTrackingConfiguration: TimeTrackingConfiguration2

  \\"\\"\\"
  Returns a status. The status must be associated with an active workflow to be returned.
  
  If a name is used on more than one status, only the status found first is returned. Therefore, identifying the status by its ID may be preferable.
  
  This operation can be accessed anonymously.
  
  [Permissions](#permissions) required: None.
  \\"\\"\\"
  getStatus(idOrName: String!): StatusDetails3

  \\"\\"\\"
  Returns a list of all status categories.
  
  **[Permissions](#permissions) required:** Permission to access Jira.
  \\"\\"\\"
  getStatusCategories: [StatusCategory2]

  \\"\\"\\"
  Returns a status category. Status categories provided a mechanism for categorizing [statuses](#api-rest-api-3-status-idOrName-get).
  
  **[Permissions](#permissions) required:** Permission to access Jira.
  \\"\\"\\"
  getStatusCategory(idOrKey: String!): StatusCategory2

  \\"\\"\\"
  Returns a list of all statuses associated with active workflows.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** None.
  \\"\\"\\"
  getStatuses: [StatusDetails3]

  \\"\\"\\"
  Returns a list of the statuses specified by one or more status IDs.
  
  **[Permissions](#permissions) required:**
  
   *  *Administer projects* [project permission.](https://confluence.atlassian.com/x/yodKLg)
   *  *Administer Jira* [project permission.](https://confluence.atlassian.com/x/yodKLg)
  \\"\\"\\"
  getStatusesById(input: getStatusesById_request_Input): [JiraStatus]

  \\"\\"\\"
  Returns the status of a [long-running asynchronous task](#async).
  
  When a task has finished, this operation returns the JSON blob applicable to the task. See the documentation of the operation that created the task for details. Task details are not permanently retained. As of September 2019, details are retained for 14 days although this period may change without notice.
  
  **[Permissions](#permissions) required:** either of:
  
   *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
   *  Creator of the task.
  \\"\\"\\"
  getTask(taskId: String!): TaskProgressBeanObject

  \\"\\"\\"
  Returns either all transitions or a transition that can be performed by the user on an issue, based on the issue's status.
  
  Note, if a request is made for a transition that does not exist or cannot be performed on the issue, given its status, the response will return any empty transitions list.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required: A list or transition is returned only when the user has:**
  
   *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
  
  However, if the user does not have the *Transition issues* [ project permission](https://confluence.atlassian.com/x/yodKLg) the response will not list any transitions.
  \\"\\"\\"
  getTransitions(input: getTransitions_request_Input, issueIdOrKey: String!): Transitions

  \\"\\"\\"
  Returns a [paginated](#pagination) list of fields in the trash. The list may be restricted to fields whose field name or description partially match a string.
  
  Only custom fields can be queried, \`type\` must be set to \`custom\`.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getTrashedFieldsPaginated(input: getTrashedFieldsPaginated_request_Input): getTrashedFieldsPaginated_response

  \\"\\"\\"
  Gets UI modifications. UI modifications can only be retrieved by Forge apps.
  
  **[Permissions](#permissions) required:** None.
  \\"\\"\\"
  getUiModifications(input: getUiModifications_request_Input): PageBeanUiModificationDetails

  \\"\\"\\"
  Returns a user.
  
  Privacy controls are applied to the response based on the user's preferences. This could mean, for example, that the user's email address is hidden. See the [Profile visibility overview](https://developer.atlassian.com/cloud/jira/platform/profile-visibility/) for more details.
  
  **[Permissions](#permissions) required:** *Browse users and groups* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getUser(input: getUser_request_Input): User9

  \\"\\"\\"
  Returns the default [issue table columns](https://confluence.atlassian.com/x/XYdKLg) for the user. If \`accountId\` is not passed in the request, the calling user's details are returned.
  
  **[Permissions](#permissions) required:**
  
   *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLgl), to get the column details for any user.
   *  Permission to access Jira, to get the calling user's column details.
  \\"\\"\\"
  getUserDefaultColumns(input: getUserDefaultColumns_request_Input): [ColumnItem]

  \\"\\"\\"
  Returns a user's email address. This API is only available to apps approved by Atlassian, according to these [guidelines](https://community.developer.atlassian.com/t/guidelines-for-requesting-access-to-email-address/27603).
  \\"\\"\\"
  getUserEmail(input: getUserEmail_request_Input!): UnrestrictedUserEmail

  \\"\\"\\"
  Returns a user's email address. This API is only available to apps approved by Atlassian, according to these [guidelines](https://community.developer.atlassian.com/t/guidelines-for-requesting-access-to-email-address/27603).
  \\"\\"\\"
  getUserEmailBulk(input: getUserEmailBulk_request_Input!): UnrestrictedUserEmail

  \\"\\"\\"
  Returns the groups to which a user belongs.
  
  **[Permissions](#permissions) required:** *Browse users and groups* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getUserGroups(input: getUserGroups_request_Input!): [GroupName]

  \\"\\"\\"
  Returns the value of a user's property. If no property key is provided [Get user property keys](#api-rest-api-3-user-properties-get) is called.
  
  Note: This operation does not access the [user properties](https://confluence.atlassian.com/x/8YxjL) created and maintained in Jira.
  
  **[Permissions](#permissions) required:**
  
   *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg), to get a property from any user.
   *  Access to Jira, to get a property from the calling user's record.
  \\"\\"\\"
  getUserProperty(input: getUserPropertyKeys_request_Input, propertyKey: String!): EntityProperty

  \\"\\"\\"
  Returns the keys of all properties for a user.
  
  Note: This operation does not access the [user properties](https://confluence.atlassian.com/x/8YxjL) created and maintained in Jira.
  
  **[Permissions](#permissions) required:**
  
   *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg), to access the property keys on any user.
   *  Access to Jira, to access the calling user's property keys.
  \\"\\"\\"
  getUserPropertyKeys(input: getUserPropertyKeys_request_Input): PropertyKeys

  \\"\\"\\"
  Returns a [paginated](#pagination) list of all users in a group.
  
  Note that users are ordered by username, however the username is not returned in the results due to privacy reasons.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getUsersFromGroup(input: getUsersFromGroup_request_Input): PageBeanUserDetails

  \\"\\"\\"
  Validates a project key and, if the key is invalid or in use, generates a valid random string for the project key.
  
  **[Permissions](#permissions) required:** None.
  \\"\\"\\"
  getValidProjectKey(input: validateProjectKey_request_Input): String

  \\"\\"\\"
  Checks that a project name isn't in use. If the name isn't in use, the passed string is returned. If the name is in use, this operation attempts to generate a valid project name based on the one supplied, usually by adding a sequence number. If a valid project name cannot be generated, a 404 response is returned.
  
  **[Permissions](#permissions) required:** None.
  \\"\\"\\"
  getValidProjectName(input: getValidProjectName_request_Input!): String

  \\"\\"\\"
  Returns a project version.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing the version.
  \\"\\"\\"
  getVersion(id: String!, input: getVersion_request_Input): Version

  \\"\\"\\"
  Returns the following counts for a version:
  
   *  Number of issues where the \`fixVersion\` is set to the version.
   *  Number of issues where the \`affectedVersion\` is set to the version.
   *  Number of issues where a version custom field is set to the version.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** *Browse projects* project permission for the project that contains the version.
  \\"\\"\\"
  getVersionRelatedIssues(id: String!): VersionIssueCounts

  \\"\\"\\"
  Returns counts of the issues and unresolved issues for the project version.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** *Browse projects* project permission for the project that contains the version.
  \\"\\"\\"
  getVersionUnresolvedIssues(id: String!): VersionUnresolvedIssuesCount

  \\"\\"\\"
  Returns a [paginated](#pagination) list of options for a select list issue field that can be viewed by the user.
  
  Note that this operation **only works for issue field select list options added by Connect apps**, it cannot be used with issue field select list options created in Jira or using operations from the [Issue custom field options](#api-group-Issue-custom-field-options) resource.
  
  **[Permissions](#permissions) required:** Permission to access Jira.
  \\"\\"\\"
  getVisibleIssueFieldOptions(fieldKey: String!, input: getVisibleIssueFieldOptions_request_Input): PageBeanIssueFieldOption

  \\"\\"\\"
  Returns details about the votes on an issue.
  
  This operation requires the **Allow users to vote on issues** option to be *ON*. This option is set in General configuration for Jira. See [Configuring Jira application options](https://confluence.atlassian.com/x/uYXKM) for details.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:**
  
   *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is ini
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
  
  Note that users with the necessary permissions for this operation but without the *View voters and watchers* project permissions are not returned details in the \`voters\` field.
  \\"\\"\\"
  getVotes(issueIdOrKey: String!): Votes

  \\"\\"\\"
  Returns the workflow-issue type mappings for a workflow scheme.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getWorkflow(id: Int!, input: getWorkflow_request_Input): IssueTypesWorkflowMapping

  \\"\\"\\"
  Returns a workflow scheme.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getWorkflowScheme(id: Int!, input: getWorkflowScheme_request_Input): WorkflowScheme

  \\"\\"\\"
  Returns the draft workflow scheme for an active workflow scheme. Draft workflow schemes allow changes to be made to the active workflow schemes: When an active workflow scheme is updated, a draft copy is created. The draft is modified, then the changes in the draft are copied back to the active workflow scheme. See [Configuring workflow schemes](https://confluence.atlassian.com/x/tohKLg) for more information.  
  Note that:
  
   *  Only active workflow schemes can have draft workflow schemes.
   *  An active workflow scheme can only have one draft workflow scheme.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getWorkflowSchemeDraft(id: Int!): WorkflowScheme

  \\"\\"\\"
  Returns the issue type-workflow mapping for an issue type in a workflow scheme's draft.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getWorkflowSchemeDraftIssueType(id: Int!, issueType: String!): IssueTypeWorkflowMapping

  \\"\\"\\"
  Returns the issue type-workflow mapping for an issue type in a workflow scheme.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getWorkflowSchemeIssueType(id: Int!, input: getWorkflowSchemeIssueType_request_Input, issueType: String!): IssueTypeWorkflowMapping

  \\"\\"\\"
  Returns a list of the workflow schemes associated with a list of projects. Each returned workflow scheme includes a list of the requested projects associated with it. Any team-managed or non-existent projects in the request are ignored and no errors are returned.
  
  If the project is associated with the \`Default Workflow Scheme\` no ID is returned. This is because the way the \`Default Workflow Scheme\` is stored means it has no ID.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getWorkflowSchemeProjectAssociations(input: getWorkflowSchemeProjectAssociations_request_Input!): getWorkflowSchemeProjectAssociations_response

  \\"\\"\\"
  Returns the properties on a workflow transition. Transition properties are used to change the behavior of a transition. For more information, see [Transition properties](https://confluence.atlassian.com/x/zIhKLg#Advancedworkflowconfiguration-transitionproperties) and [Workflow properties](https://confluence.atlassian.com/x/JYlKLg).
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getWorkflowTransitionProperties(input: getWorkflowTransitionProperties_request_Input!, transitionId: Int!): WorkflowTransitionProperty

  \\"\\"\\"
  Returns a [paginated](#pagination) list of workflows with transition rules. The workflows can be filtered to return only those containing workflow transition rules:
  
   *  of one or more transition rule types, such as [workflow post functions](https://developer.atlassian.com/cloud/jira/platform/modules/workflow-post-function/).
   *  matching one or more transition rule keys.
  
  Only workflows containing transition rules created by the calling Connect app are returned. However, if a workflow is returned all transition rules that match the filters are returned for that workflow.
  
  Due to server-side optimizations, workflows with an empty list of rules may be returned; these workflows can be ignored.
  
  **[Permissions](#permissions) required:** Only Connect apps can use this operation.
  \\"\\"\\"
  getWorkflowTransitionRuleConfigurations(input: getWorkflowTransitionRuleConfigurations_request_Input!): getWorkflowTransitionRuleConfigurations_response

  \\"\\"\\"
  Returns a [paginated](#pagination) list of published classic workflows. When workflow names are specified, details of those workflows are returned. Otherwise, all published classic workflows are returned.
  
  This operation does not return next-gen workflows.
  
  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  getWorkflowsPaginated(input: getWorkflowsPaginated_request_Input): getWorkflowsPaginated_response

  \\"\\"\\"
  Returns a worklog.
  
  Time tracking must be enabled in Jira, otherwise this operation returns an error. For more information, see [Configuring time tracking](https://confluence.atlassian.com/x/qoXKM).
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:**
  
   *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
   *  If the worklog has visibility restrictions, belongs to the group or has the role visibility is restricted to.
  \\"\\"\\"
  getWorklog(id: String!, input: getWorklog_request_Input, issueIdOrKey: String!): Worklog

  \\"\\"\\"
  Returns the value of a worklog property.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:**
  
   *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
   *  If the worklog has visibility restrictions, belongs to the group or has the role visibility is restricted to.
  \\"\\"\\"
  getWorklogProperty(issueIdOrKey: String!, propertyKey: String!, worklogId: String!): EntityProperty

  \\"\\"\\"
  Returns the keys of all properties for a worklog.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:**
  
   *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
   *  If the worklog has visibility restrictions, belongs to the group or has the role visibility is restricted to.
  \\"\\"\\"
  getWorklogPropertyKeys(issueIdOrKey: String!, worklogId: String!): PropertyKeys

  \\"\\"\\"
  Returns a [paginated](https://developer.atlassian.com/cloud/jira/platform/rest/v3/intro/#pagination) list of statuses that match a search on name or project.
  
  **[Permissions](#permissions) required:**
  
   *  *Administer projects* [project permission.](https://confluence.atlassian.com/x/yodKLg)
   *  *Administer Jira* [project permission.](https://confluence.atlassian.com/x/yodKLg)
  \\"\\"\\"
  search(input: search_request_Input): PageOfStatuses

  \\"\\"\\"
  Searches for issues using [JQL](https://confluence.atlassian.com/x/egORLQ).
  
  If the JQL query expression is too large to be encoded as a query parameter, use the [POST](#api-rest-api-3-search-post) version of this resource.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** Issues are included in the response where the user has:
  
   *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing the issue.
   *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
  \\"\\"\\"
  searchForIssuesUsingJql(input: searchForIssuesUsingJql_request_Input): SearchResults

  \\"\\"\\"
  Returns a [paginated](#pagination) list of priorities. The list can contain all priorities or a subset determined by any combination of these criteria:
  
   *  a list of priority IDs. Any invalid priority IDs are ignored.
   *  whether the field configuration is a default. This returns priorities from company-managed (classic) projects only, as there is no concept of default priorities in team-managed projects.
  
  **[Permissions](#permissions) required:** Permission to access Jira.
  \\"\\"\\"
  searchPriorities(input: searchPriorities_request_Input): searchPriorities_response

  \\"\\"\\"
  Returns a [paginated](#pagination) list of projects visible to the user.
  
  This operation can be accessed anonymously.
  
  **[Permissions](#permissions) required:** Projects are returned only where the user has one of:
  
   *  *Browse Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
   *  *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
   *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  searchProjects(input: searchProjects_request_Input): PageBeanProject

  \\"\\"\\"
  Validates a project key by confirming the key is a valid string and not in use.
  
  **[Permissions](#permissions) required:** None.
  \\"\\"\\"
  validateProjectKey(input: validateProjectKey_request_Input): ErrorCollection
}

\\"\\"\\"
ID of a registered webhook or error messages explaining why a webhook wasn't registered.
\\"\\"\\"
type RegisteredWebhook {
  \\"\\"\\"The ID of the webhook. Returned if the webhook is created.\\"\\"\\"
  createdWebhookId: BigInt

  \\"\\"\\"Error messages specifying why the webhook creation failed.\\"\\"\\"
  errors: [String]
}

\\"\\"\\"Details of an issue remote link.\\"\\"\\"
type RemoteIssueLink {
  application: Application

  \\"\\"\\"
  The global ID of the link, such as the ID of the item on the remote system.
  \\"\\"\\"
  globalId: String

  \\"\\"\\"The ID of the link.\\"\\"\\"
  id: BigInt
  object: RemoteObject

  \\"\\"\\"Description of the relationship between the issue and the linked item.\\"\\"\\"
  relationship: String

  \\"\\"\\"The URL of the link.\\"\\"\\"
  self: URL
}

\\"\\"\\"Details of the identifiers for a created or updated remote issue link.\\"\\"\\"
type RemoteIssueLinkIdentifies {
  \\"\\"\\"
  The ID of the remote issue link, such as the ID of the item on the remote system.
  \\"\\"\\"
  id: BigInt

  \\"\\"\\"The URL of the remote issue link.\\"\\"\\"
  self: String
}

\\"\\"\\"Details of a remote issue link.\\"\\"\\"
scalar RemoteIssueLinkRequest_Input

\\"\\"\\"The linked item.\\"\\"\\"
type RemoteObject {
  additionalProperties: JSON
  icon: Icon
  status: Status

  \\"\\"\\"The summary details of the item.\\"\\"\\"
  summary: String

  \\"\\"\\"The title of the item.\\"\\"\\"
  title: String!

  \\"\\"\\"The URL of the item.\\"\\"\\"
  url: String!
}

\\"\\"\\"The result of the task execution.\\"\\"\\"
type RemoveOptionFromIssuesResult {
  errors: SimpleErrorCollection

  \\"\\"\\"The IDs of the modified issues.\\"\\"\\"
  modifiedIssues: [BigInt]

  \\"\\"\\"
  The IDs of the unchanged issues, those issues where errors prevent modification.
  \\"\\"\\"
  unmodifiedIssues: [BigInt]
}

\\"\\"\\"Details of an issue resolution.\\"\\"\\"
type Resolution {
  \\"\\"\\"The description of the issue resolution.\\"\\"\\"
  description: String

  \\"\\"\\"The ID of the issue resolution.\\"\\"\\"
  id: String

  \\"\\"\\"The name of the issue resolution.\\"\\"\\"
  name: String

  \\"\\"\\"The URL of the issue resolution.\\"\\"\\"
  self: URL
}

\\"\\"\\"Details about a user assigned to a project role.\\"\\"\\"
type RoleActor {
  actorGroup: ProjectRoleGroup
  actorUser: ProjectRoleUser

  \\"\\"\\"The avatar of the role actor.\\"\\"\\"
  avatarUrl: URL

  \\"\\"\\"
  The display name of the role actor. For users, depending on the user’s privacy setting, this may return an alternative value for the user's name.
  \\"\\"\\"
  displayName: String

  \\"\\"\\"The ID of the role actor.\\"\\"\\"
  id: BigInt

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  name: String
  type: query_getAllDashboards_oneOf_0_dashboards_items_sharePermissions_items_role_allOf_0_actors_items_type
}

\\"\\"\\"Details about a user assigned to a project role.\\"\\"\\"
input RoleActor_Input {
  actorGroup: ProjectRoleGroup_Input
  actorUser: ProjectRoleUser_Input

  \\"\\"\\"The avatar of the role actor.\\"\\"\\"
  avatarUrl: URL

  \\"\\"\\"
  The display name of the role actor. For users, depending on the user’s privacy setting, this may return an alternative value for the user's name.
  \\"\\"\\"
  displayName: String

  \\"\\"\\"The ID of the role actor.\\"\\"\\"
  id: BigInt

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  name: String
  type: query_getAllDashboards_oneOf_0_dashboards_items_sharePermissions_items_role_allOf_0_actors_items_type
}

\\"\\"\\"A rule configuration.\\"\\"\\"
type RuleConfiguration {
  \\"\\"\\"EXPERIMENTAL: Whether the rule is disabled.\\"\\"\\"
  disabled: Boolean

  \\"\\"\\"
  EXPERIMENTAL: A tag used to filter rules in [Get workflow transition rule configurations](https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-workflow-transition-rules/#api-rest-api-3-workflow-rule-config-get).
  \\"\\"\\"
  tag: query_getWorkflowTransitionRuleConfigurations_oneOf_0_values_items_postFunctions_items_configuration_tag

  \\"\\"\\"
  Configuration of the rule, as it is stored by the Connect app on the rule configuration page.
  \\"\\"\\"
  value: String!
}

\\"\\"\\"A rule configuration.\\"\\"\\"
input RuleConfiguration_Input {
  \\"\\"\\"EXPERIMENTAL: Whether the rule is disabled.\\"\\"\\"
  disabled: Boolean

  \\"\\"\\"
  EXPERIMENTAL: A tag used to filter rules in [Get workflow transition rule configurations](https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-workflow-transition-rules/#api-rest-api-3-workflow-rule-config-get).
  \\"\\"\\"
  tag: query_getWorkflowTransitionRuleConfigurations_oneOf_0_values_items_postFunctions_items_configuration_tag

  \\"\\"\\"
  Configuration of the rule, as it is stored by the Connect app on the rule configuration page.
  \\"\\"\\"
  value: String!
}

\\"\\"\\"The sanitized JQL queries for the given account IDs.\\"\\"\\"
type SanitizedJqlQueries {
  \\"\\"\\"The list of sanitized JQL queries.\\"\\"\\"
  queries: [SanitizedJqlQuery]
}

\\"\\"\\"Details of the sanitized JQL query.\\"\\"\\"
type SanitizedJqlQuery {
  \\"\\"\\"The account ID of the user for whom sanitization was performed.\\"\\"\\"
  accountId: mutation_sanitiseJqlQueries_oneOf_0_queries_items_accountId
  errors: ErrorCollection2

  \\"\\"\\"The initial query.\\"\\"\\"
  initialQuery: String

  \\"\\"\\"The sanitized query, if there were no errors.\\"\\"\\"
  sanitizedQuery: String
}

\\"\\"\\"
The projects the item is associated with. Indicated for items associated with [next-gen projects](https://confluence.atlassian.com/x/loMyO).
\\"\\"\\"
type Scope {
  additionalProperties: JSON
  project: ProjectDetails
  type: query_getAllDashboards_oneOf_0_dashboards_items_sharePermissions_items_project_allOf_0_issueTypes_items_scope_allOf_0_type
}

\\"\\"\\"
The projects the item is associated with. Indicated for items associated with [next-gen projects](https://confluence.atlassian.com/x/loMyO).
\\"\\"\\"
type Scope2 {
  additionalProperties: JSON
  project: ProjectDetails
  type: query_getAllDashboards_oneOf_0_dashboards_items_sharePermissions_items_project_allOf_0_issueTypes_items_scope_allOf_0_type
}

\\"\\"\\"
The projects the item is associated with. Indicated for items associated with [next-gen projects](https://confluence.atlassian.com/x/loMyO).
\\"\\"\\"
type Scope3 {
  additionalProperties: JSON
  project: ProjectDetails
  type: query_getAllDashboards_oneOf_0_dashboards_items_sharePermissions_items_project_allOf_0_issueTypes_items_scope_allOf_0_type
}

\\"\\"\\"
The projects the item is associated with. Indicated for items associated with [next-gen projects](https://confluence.atlassian.com/x/loMyO).
\\"\\"\\"
type Scope4 {
  additionalProperties: JSON
  project: ProjectDetails
  type: query_getAllDashboards_oneOf_0_dashboards_items_sharePermissions_items_project_allOf_0_issueTypes_items_scope_allOf_0_type
}

\\"\\"\\"
The projects the item is associated with. Indicated for items associated with [next-gen projects](https://confluence.atlassian.com/x/loMyO).
\\"\\"\\"
type Scope5 {
  additionalProperties: JSON
  project: ProjectDetails
  type: query_getAllDashboards_oneOf_0_dashboards_items_sharePermissions_items_project_allOf_0_issueTypes_items_scope_allOf_0_type
}

\\"\\"\\"
The projects the item is associated with. Indicated for items associated with [next-gen projects](https://confluence.atlassian.com/x/loMyO).
\\"\\"\\"
type Scope6 {
  additionalProperties: JSON
  project: ProjectDetails
  type: query_getAllDashboards_oneOf_0_dashboards_items_sharePermissions_items_project_allOf_0_issueTypes_items_scope_allOf_0_type
}

\\"\\"\\"
The projects the item is associated with. Indicated for items associated with [next-gen projects](https://confluence.atlassian.com/x/loMyO).
\\"\\"\\"
type Scope7 {
  additionalProperties: JSON
  project: ProjectDetails
  type: query_getAllDashboards_oneOf_0_dashboards_items_sharePermissions_items_project_allOf_0_issueTypes_items_scope_allOf_0_type
}

\\"\\"\\"
The projects the item is associated with. Indicated for items associated with [next-gen projects](https://confluence.atlassian.com/x/loMyO).
\\"\\"\\"
type Scope8 {
  additionalProperties: JSON
  project: ProjectDetails
  type: query_getAllDashboards_oneOf_0_dashboards_items_sharePermissions_items_project_allOf_0_issueTypes_items_scope_allOf_0_type
}

\\"\\"\\"
The projects the item is associated with. Indicated for items associated with [next-gen projects](https://confluence.atlassian.com/x/loMyO).
\\"\\"\\"
scalar Scope_Input

\\"\\"\\"
The projects the item is associated with. Indicated for items associated with [next-gen projects](https://confluence.atlassian.com/x/loMyO).
\\"\\"\\"
scalar Scope_Input2

\\"\\"\\"A screen.\\"\\"\\"
type Screen {
  \\"\\"\\"The description of the screen.\\"\\"\\"
  description: String

  \\"\\"\\"The ID of the screen.\\"\\"\\"
  id: BigInt

  \\"\\"\\"The name of the screen.\\"\\"\\"
  name: String
  scope: Scope5
}

\\"\\"\\"Details of a screen.\\"\\"\\"
input ScreenDetails_Input {
  \\"\\"\\"The description of the screen. The maximum length is 255 characters.\\"\\"\\"
  description: String

  \\"\\"\\"
  The name of the screen. The name must be unique. The maximum length is 255 characters.
  \\"\\"\\"
  name: String!
}

\\"\\"\\"A screen scheme.\\"\\"\\"
type ScreenScheme {
  \\"\\"\\"The description of the screen scheme.\\"\\"\\"
  description: String

  \\"\\"\\"The ID of the screen scheme.\\"\\"\\"
  id: BigInt
  issueTypeScreenSchemes: PageBeanIssueTypeScreenScheme2

  \\"\\"\\"The name of the screen scheme.\\"\\"\\"
  name: String
  screens: ScreenTypes
}

\\"\\"\\"Details of a screen scheme.\\"\\"\\"
input ScreenSchemeDetails_Input {
  \\"\\"\\"
  The description of the screen scheme. The maximum length is 255 characters.
  \\"\\"\\"
  description: String

  \\"\\"\\"
  The name of the screen scheme. The name must be unique. The maximum length is 255 characters.
  \\"\\"\\"
  name: String!
  screens: ScreenTypes_Input2!
}

\\"\\"\\"The ID of a screen scheme.\\"\\"\\"
type ScreenSchemeId {
  \\"\\"\\"The ID of the screen scheme.\\"\\"\\"
  id: BigInt!
}

\\"\\"\\"The IDs of the screens for the screen types of the screen scheme.\\"\\"\\"
type ScreenTypes {
  \\"\\"\\"The ID of the create screen.\\"\\"\\"
  create: BigInt

  \\"\\"\\"The ID of the default screen. Required when creating a screen scheme.\\"\\"\\"
  default: BigInt

  \\"\\"\\"The ID of the edit screen.\\"\\"\\"
  edit: BigInt

  \\"\\"\\"The ID of the view screen.\\"\\"\\"
  view: BigInt
}

\\"\\"\\"The IDs of the screens for the screen types of the screen scheme.\\"\\"\\"
input ScreenTypes_Input2 {
  \\"\\"\\"The ID of the create screen.\\"\\"\\"
  create: BigInt

  \\"\\"\\"The ID of the default screen. Required when creating a screen scheme.\\"\\"\\"
  default: BigInt

  \\"\\"\\"The ID of the edit screen.\\"\\"\\"
  edit: BigInt

  \\"\\"\\"The ID of the view screen.\\"\\"\\"
  view: BigInt
}

\\"\\"\\"A screen with tab details.\\"\\"\\"
type ScreenWithTab {
  \\"\\"\\"The description of the screen.\\"\\"\\"
  description: String

  \\"\\"\\"The ID of the screen.\\"\\"\\"
  id: BigInt

  \\"\\"\\"The name of the screen.\\"\\"\\"
  name: String
  scope: Scope5
  tab: ScreenableTab
}

\\"\\"\\"A screen tab field.\\"\\"\\"
type ScreenableField {
  \\"\\"\\"The ID of the screen tab field.\\"\\"\\"
  id: String

  \\"\\"\\"
  The name of the screen tab field. Required on create and update. The maximum length is 255 characters.
  \\"\\"\\"
  name: String
}

\\"\\"\\"A screen tab.\\"\\"\\"
type ScreenableTab {
  \\"\\"\\"The ID of the screen tab.\\"\\"\\"
  id: BigInt

  \\"\\"\\"The name of the screen tab. The maximum length is 255 characters.\\"\\"\\"
  name: String!
}

\\"\\"\\"A screen tab.\\"\\"\\"
type ScreenableTab2 {
  \\"\\"\\"The ID of the screen tab.\\"\\"\\"
  id: BigInt

  \\"\\"\\"The name of the screen tab. The maximum length is 255 characters.\\"\\"\\"
  name: String!
}

\\"\\"\\"A screen tab.\\"\\"\\"
input ScreenableTab_Input2 {
  \\"\\"\\"The ID of the screen tab.\\"\\"\\"
  id: BigInt

  \\"\\"\\"The name of the screen tab. The maximum length is 255 characters.\\"\\"\\"
  name: String!
}

\\"\\"\\"Details of how to filter and list search auto complete information.\\"\\"\\"
input SearchAutoCompleteFilter_Input {
  \\"\\"\\"Include collapsed fields for fields that have non-unique names.\\"\\"\\"
  includeCollapsedFields: Boolean

  \\"\\"\\"List of project IDs used to filter the visible field details returned.\\"\\"\\"
  projectIds: [BigInt]
}

input SearchRequestBean_Input {
  \\"\\"\\"
  Use [expand](em>#expansion) to include additional information about issues in the response. Note that, unlike the majority of instances where \`expand\` is specified, \`expand\` is defined as a list of values. The expand options are:
  
   *  \`renderedFields\` Returns field values rendered in HTML format.
   *  \`names\` Returns the display name of each field.
   *  \`schema\` Returns the schema describing a field type.
   *  \`transitions\` Returns all possible transitions for the issue.
   *  \`operations\` Returns all possible operations for the issue.
   *  \`editmeta\` Returns information about how each field can be edited.
   *  \`changelog\` Returns a list of recent updates to an issue, sorted by date, starting from the most recent.
   *  \`versionedRepresentations\` Instead of \`fields\`, returns \`versionedRepresentations\` a JSON array containing each version of a field's value, with the highest numbered item representing the most recent version.
  \\"\\"\\"
  expand: [String]

  \\"\\"\\"
  A list of fields to return for each issue, use it to retrieve a subset of fields. This parameter accepts a comma-separated list. Expand options include:
  
   *  \`*all\` Returns all fields.
   *  \`*navigable\` Returns navigable fields.
   *  Any issue field, prefixed with a minus to exclude.
  
  The default is \`*navigable\`.
  
  Examples:
  
   *  \`summary,comment\` Returns the summary and comments fields only.
   *  \`-description\` Returns all navigable (default) fields except description.
   *  \`*all,-comment\` Returns all fields except comments.
  
  Multiple \`fields\` parameters can be included in a request.
  
  Note: All navigable fields are returned by default. This differs from [GET issue](#api-rest-api-3-issue-issueIdOrKey-get) where the default is all fields.
  \\"\\"\\"
  fields: [String]

  \\"\\"\\"
  Reference fields by their key (rather than ID). The default is \`false\`.
  \\"\\"\\"
  fieldsByKeys: Boolean

  \\"\\"\\"A [JQL](https://confluence.atlassian.com/x/egORLQ) expression.\\"\\"\\"
  jql: String

  \\"\\"\\"The maximum number of items to return per page.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"
  A list of up to 5 issue properties to include in the results. This parameter accepts a comma-separated list.
  \\"\\"\\"
  properties: [String]

  \\"\\"\\"
  The index of the first item to return in the page of results (page offset). The base index is \`0\`.
  \\"\\"\\"
  startAt: Int
  validateQuery: mutationInput_searchForIssuesUsingJqlPost_validateQuery
}

\\"\\"\\"The result of a JQL search.\\"\\"\\"
type SearchResults {
  \\"\\"\\"
  Expand options that include additional search result details in the response.
  \\"\\"\\"
  expand: String

  \\"\\"\\"The list of issues found by the search.\\"\\"\\"
  issues: [IssueBean]

  \\"\\"\\"The maximum number of results that could be on the page.\\"\\"\\"
  maxResults: Int
  names: query_searchForIssuesUsingJql_names
  schema: JsonTypeBean2

  \\"\\"\\"The index of the first item returned on the page.\\"\\"\\"
  startAt: Int

  \\"\\"\\"The number of results on the page.\\"\\"\\"
  total: Int

  \\"\\"\\"Any warnings related to the JQL query.\\"\\"\\"
  warningMessages: [String]
}

\\"\\"\\"Details of an issue level security item.\\"\\"\\"
type SecurityLevel {
  \\"\\"\\"The description of the issue level security item.\\"\\"\\"
  description: String

  \\"\\"\\"The ID of the issue level security item.\\"\\"\\"
  id: String

  \\"\\"\\"The name of the issue level security item.\\"\\"\\"
  name: String

  \\"\\"\\"The URL of the issue level security item.\\"\\"\\"
  self: String
}

\\"\\"\\"Details about a security scheme.\\"\\"\\"
type SecurityScheme {
  \\"\\"\\"The ID of the default security level.\\"\\"\\"
  defaultSecurityLevelId: BigInt

  \\"\\"\\"The description of the issue security scheme.\\"\\"\\"
  description: String

  \\"\\"\\"The ID of the issue security scheme.\\"\\"\\"
  id: BigInt
  levels: [SecurityLevel]

  \\"\\"\\"The name of the issue security scheme.\\"\\"\\"
  name: String

  \\"\\"\\"The URL of the issue security scheme.\\"\\"\\"
  self: String
}

\\"\\"\\"List of security schemes.\\"\\"\\"
type SecuritySchemes {
  \\"\\"\\"List of security schemes.\\"\\"\\"
  issueSecuritySchemes: [SecurityScheme]
}

\\"\\"\\"Details about the Jira instance.\\"\\"\\"
type ServerInformation {
  \\"\\"\\"The base URL of the Jira instance.\\"\\"\\"
  baseUrl: String

  \\"\\"\\"The timestamp when the Jira version was built.\\"\\"\\"
  buildDate: DateTime

  \\"\\"\\"The build number of the Jira version.\\"\\"\\"
  buildNumber: Int

  \\"\\"\\"The type of server deployment. This is always returned as *Cloud*.\\"\\"\\"
  deploymentType: String

  \\"\\"\\"Jira instance health check results. Deprecated and no longer returned.\\"\\"\\"
  healthChecks: [HealthCheckResult]

  \\"\\"\\"The unique identifier of the Jira version.\\"\\"\\"
  scmInfo: String

  \\"\\"\\"The time in Jira when this request was responded to.\\"\\"\\"
  serverTime: DateTime

  \\"\\"\\"The name of the Jira instance.\\"\\"\\"
  serverTitle: String

  \\"\\"\\"The version of Jira.\\"\\"\\"
  version: String

  \\"\\"\\"The major, minor, and revision version numbers of the Jira version.\\"\\"\\"
  versionNumbers: [Int]
}

\\"\\"\\"Details of a share permission for the filter.\\"\\"\\"
type SharePermission {
  group: GroupName2

  \\"\\"\\"The unique identifier of the share permission.\\"\\"\\"
  id: BigInt
  project: Project
  role: ProjectRole
  type: query_getAllDashboards_oneOf_0_dashboards_items_sharePermissions_items_type!
  user: UserBean2
}

input SharePermissionInputBean_Input {
  \\"\\"\\"
  The user account ID that the filter is shared with. For a request, specify the \`accountId\` property for the user.
  \\"\\"\\"
  accountId: String

  \\"\\"\\"
  The ID of the group, which uniquely identifies the group across all Atlassian products.For example, *952d12c3-5b5b-4d04-bb32-44d383afc4b2*. Cannot be provided with \`groupname\`.
  \\"\\"\\"
  groupId: String

  \\"\\"\\"
  The name of the group to share the filter with. Set \`type\` to \`group\`. Please note that the name of a group is mutable, to reliably identify a group use \`groupId\`.
  \\"\\"\\"
  groupname: String

  \\"\\"\\"
  The ID of the project to share the filter with. Set \`type\` to \`project\`.
  \\"\\"\\"
  projectId: String

  \\"\\"\\"
  The ID of the project role to share the filter with. Set \`type\` to \`projectRole\` and the \`projectId\` for the project that the role is in.
  \\"\\"\\"
  projectRoleId: String

  \\"\\"\\"The rights for the share permission.\\"\\"\\"
  rights: Int
  type: mutationInput_addSharePermission_type!
}

\\"\\"\\"Details of a share permission for the filter.\\"\\"\\"
input SharePermission_Input {
  group: GroupName_Input2

  \\"\\"\\"The unique identifier of the share permission.\\"\\"\\"
  id: BigInt
  project: Project_Input
  role: ProjectRole_Input
  type: query_getAllDashboards_oneOf_0_dashboards_items_sharePermissions_items_type!
  user: UserBean_Input2
}

input SimpleApplicationPropertyBean_Input {
  \\"\\"\\"The ID of the application property.\\"\\"\\"
  id: String

  \\"\\"\\"The new value.\\"\\"\\"
  value: String
}

\\"\\"\\"
A collection of errors related to unchanged issues. The collection size is limited, which means not all errors may be returned.
\\"\\"\\"
type SimpleErrorCollection {
  \\"\\"\\"
  The list of error messages produced by this operation. For example, \\"input parameter 'key' must be provided\\"
  \\"\\"\\"
  errorMessages: [String]
  errors: query_getBanner_oneOf_1_errors
  httpStatusCode: Int
}

\\"\\"\\"Details about the operations available in this version.\\"\\"\\"
type SimpleLink {
  href: String
  iconClass: String
  id: String
  label: String
  styleClass: String
  title: String
  weight: Int
}

\\"\\"\\"Details about the operations available in this version.\\"\\"\\"
input SimpleLink_Input {
  href: String
  iconClass: String
  id: String
  label: String
  styleClass: String
  title: String
  weight: Int
}

\\"\\"\\"The application roles the user is assigned to.\\"\\"\\"
type SimpleListWrapperApplicationRole {
  callback: ListWrapperCallbackApplicationRole
  items: [ApplicationRole]
  max_results: Int
  pagingCallback: ListWrapperCallbackApplicationRole
  size: Int
}

\\"\\"\\"The application roles the user is assigned to.\\"\\"\\"
input SimpleListWrapperApplicationRole_Input {
  callback: ListWrapperCallbackApplicationRole_Input
  items: [ApplicationRole_Input]
  max_results: Int
  pagingCallback: ListWrapperCallbackApplicationRole_Input
  size: Int
}

\\"\\"\\"The groups that the user belongs to.\\"\\"\\"
type SimpleListWrapperGroupName {
  callback: ListWrapperCallbackGroupName
  items: [GroupName]
  max_results: Int
  pagingCallback: ListWrapperCallbackGroupName
  size: Int
}

\\"\\"\\"The groups that the user belongs to.\\"\\"\\"
input SimpleListWrapperGroupName_Input {
  callback: ListWrapperCallbackGroupName_Input
  items: [GroupName_Input]
  max_results: Int
  pagingCallback: ListWrapperCallbackGroupName_Input
  size: Int
}

type SimplifiedHierarchyLevel {
  \\"\\"\\"
  The ID of the level above this one in the hierarchy. This property is deprecated, see [Change notice: Removing hierarchy level IDs from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/).
  \\"\\"\\"
  aboveLevelId: BigInt

  \\"\\"\\"
  The ID of the level below this one in the hierarchy. This property is deprecated, see [Change notice: Removing hierarchy level IDs from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/).
  \\"\\"\\"
  belowLevelId: BigInt

  \\"\\"\\"
  The external UUID of the hierarchy level. This property is deprecated, see [Change notice: Removing hierarchy level IDs from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/).
  \\"\\"\\"
  externalUuid: String
  globalHierarchyLevel: query_getAllDashboards_oneOf_0_dashboards_items_sharePermissions_items_project_allOf_0_issueTypeHierarchy_allOf_0_levels_items_globalHierarchyLevel

  \\"\\"\\"
  The ID of the hierarchy level. This property is deprecated, see [Change notice: Removing hierarchy level IDs from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/).
  \\"\\"\\"
  id: BigInt

  \\"\\"\\"The issue types available in this hierarchy level.\\"\\"\\"
  issueTypeIds: [BigInt]

  \\"\\"\\"The level of this item in the hierarchy.\\"\\"\\"
  level: Int

  \\"\\"\\"The name of this hierarchy level.\\"\\"\\"
  name: String

  \\"\\"\\"
  The ID of the project configuration. This property is deprecated, see [Change oticen: Removing hierarchy level IDs from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/).
  \\"\\"\\"
  projectConfigurationId: BigInt
}

input SimplifiedHierarchyLevel_Input {
  \\"\\"\\"
  The ID of the level above this one in the hierarchy. This property is deprecated, see [Change notice: Removing hierarchy level IDs from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/).
  \\"\\"\\"
  aboveLevelId: BigInt

  \\"\\"\\"
  The ID of the level below this one in the hierarchy. This property is deprecated, see [Change notice: Removing hierarchy level IDs from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/).
  \\"\\"\\"
  belowLevelId: BigInt

  \\"\\"\\"
  The external UUID of the hierarchy level. This property is deprecated, see [Change notice: Removing hierarchy level IDs from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/).
  \\"\\"\\"
  externalUuid: String
  globalHierarchyLevel: query_getAllDashboards_oneOf_0_dashboards_items_sharePermissions_items_project_allOf_0_issueTypeHierarchy_allOf_0_levels_items_globalHierarchyLevel

  \\"\\"\\"
  The ID of the hierarchy level. This property is deprecated, see [Change notice: Removing hierarchy level IDs from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/).
  \\"\\"\\"
  id: BigInt

  \\"\\"\\"The issue types available in this hierarchy level.\\"\\"\\"
  issueTypeIds: [BigInt]

  \\"\\"\\"The level of this item in the hierarchy.\\"\\"\\"
  level: Int

  \\"\\"\\"The name of this hierarchy level.\\"\\"\\"
  name: String

  \\"\\"\\"
  The ID of the project configuration. This property is deprecated, see [Change oticen: Removing hierarchy level IDs from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/).
  \\"\\"\\"
  projectConfigurationId: BigInt
}

\\"\\"\\"The status of the item.\\"\\"\\"
type Status {
  additionalProperties: JSON
  icon: Icon2

  \\"\\"\\"
  Whether the item is resolved. If set to \\"true\\", the link to the issue is displayed in a strikethrough font, otherwise the link displays in normal font.
  \\"\\"\\"
  resolved: Boolean
}

\\"\\"\\"A status category.\\"\\"\\"
type StatusCategory {
  additionalProperties: JSON

  \\"\\"\\"The name of the color used to represent the status category.\\"\\"\\"
  colorName: String

  \\"\\"\\"The ID of the status category.\\"\\"\\"
  id: BigInt

  \\"\\"\\"The key of the status category.\\"\\"\\"
  key: String

  \\"\\"\\"The name of the status category.\\"\\"\\"
  name: String

  \\"\\"\\"The URL of the status category.\\"\\"\\"
  self: String
}

\\"\\"\\"A status category.\\"\\"\\"
type StatusCategory2 {
  additionalProperties: JSON

  \\"\\"\\"The name of the color used to represent the status category.\\"\\"\\"
  colorName: String

  \\"\\"\\"The ID of the status category.\\"\\"\\"
  id: BigInt

  \\"\\"\\"The key of the status category.\\"\\"\\"
  key: String

  \\"\\"\\"The name of the status category.\\"\\"\\"
  name: String

  \\"\\"\\"The URL of the status category.\\"\\"\\"
  self: String
}

\\"\\"\\"Details of the statuses being created and their scope.\\"\\"\\"
input StatusCreateRequest_Input {
  scope: StatusScope_Input!

  \\"\\"\\"Details of the statuses being created.\\"\\"\\"
  statuses: [StatusCreate_Input]!
}

\\"\\"\\"Details of the status being created.\\"\\"\\"
input StatusCreate_Input {
  \\"\\"\\"The description of the status.\\"\\"\\"
  description: String

  \\"\\"\\"The name of the status.\\"\\"\\"
  name: mutationInput_createStatuses_statuses_items_name!
  statusCategory: query_getStatusesById_items_statusCategory!
}

\\"\\"\\"A status.\\"\\"\\"
type StatusDetails {
  additionalProperties: JSON

  \\"\\"\\"The description of the status.\\"\\"\\"
  description: String

  \\"\\"\\"The URL of the icon used to represent the status.\\"\\"\\"
  iconUrl: String

  \\"\\"\\"The ID of the status.\\"\\"\\"
  id: String

  \\"\\"\\"The name of the status.\\"\\"\\"
  name: String

  \\"\\"\\"The URL of the status.\\"\\"\\"
  self: String
  statusCategory: StatusCategory
}

\\"\\"\\"A status.\\"\\"\\"
type StatusDetails2 {
  additionalProperties: JSON

  \\"\\"\\"The description of the status.\\"\\"\\"
  description: String

  \\"\\"\\"The URL of the icon used to represent the status.\\"\\"\\"
  iconUrl: String

  \\"\\"\\"The ID of the status.\\"\\"\\"
  id: String

  \\"\\"\\"The name of the status.\\"\\"\\"
  name: String

  \\"\\"\\"The URL of the status.\\"\\"\\"
  self: String
  statusCategory: StatusCategory
}

\\"\\"\\"A status.\\"\\"\\"
type StatusDetails3 {
  additionalProperties: JSON

  \\"\\"\\"The description of the status.\\"\\"\\"
  description: String

  \\"\\"\\"The URL of the icon used to represent the status.\\"\\"\\"
  iconUrl: String

  \\"\\"\\"The ID of the status.\\"\\"\\"
  id: String

  \\"\\"\\"The name of the status.\\"\\"\\"
  name: String

  \\"\\"\\"The URL of the status.\\"\\"\\"
  self: String
  statusCategory: StatusCategory
}

\\"\\"\\"A status.\\"\\"\\"
scalar StatusDetails_Input2

\\"\\"\\"
Details about the mapping from a status to a new status for an issue type.
\\"\\"\\"
input StatusMapping_Input {
  \\"\\"\\"The ID of the issue type.\\"\\"\\"
  issueTypeId: String!

  \\"\\"\\"The ID of the new status.\\"\\"\\"
  newStatusId: String!

  \\"\\"\\"The ID of the status.\\"\\"\\"
  statusId: String!
}

\\"\\"\\"The scope of the status.\\"\\"\\"
type StatusScope {
  project: ProjectId
  type: query_getStatusesById_items_scope_type!
}

\\"\\"\\"The scope of the status.\\"\\"\\"
input StatusScope_Input {
  project: ProjectId_Input
  type: query_getStatusesById_items_scope_type!
}

\\"\\"\\"The list of statuses that will be updated.\\"\\"\\"
input StatusUpdateRequest_Input {
  \\"\\"\\"The list of statuses that will be updated.\\"\\"\\"
  statuses: [StatusUpdate_Input]
}

\\"\\"\\"Details of the status being updated.\\"\\"\\"
input StatusUpdate_Input {
  \\"\\"\\"The description of the status.\\"\\"\\"
  description: String

  \\"\\"\\"The ID of the status.\\"\\"\\"
  id: String!

  \\"\\"\\"The name of the status.\\"\\"\\"
  name: String!
  statusCategory: query_getStatusesById_items_statusCategory!
}

type String_container {
  String: String
}

\\"\\"\\"An issue suggested for use in the issue picker auto-completion.\\"\\"\\"
type SuggestedIssue {
  \\"\\"\\"The ID of the issue.\\"\\"\\"
  id: BigInt

  \\"\\"\\"The URL of the issue type's avatar.\\"\\"\\"
  img: String

  \\"\\"\\"The key of the issue.\\"\\"\\"
  key: String

  \\"\\"\\"The key of the issue in HTML format.\\"\\"\\"
  keyHtml: String

  \\"\\"\\"
  The phrase containing the query string in HTML format, with the string highlighted with HTML bold tags.
  \\"\\"\\"
  summary: String

  \\"\\"\\"The phrase containing the query string, as plain text.\\"\\"\\"
  summaryText: String
}

\\"\\"\\"List of system avatars.\\"\\"\\"
type SystemAvatars {
  \\"\\"\\"A list of avatar details.\\"\\"\\"
  system: [Avatar]
}

\\"\\"\\"Details about a task.\\"\\"\\"
type TaskProgressBeanObject {
  \\"\\"\\"The description of the task.\\"\\"\\"
  description: String

  \\"\\"\\"The execution time of the task, in milliseconds.\\"\\"\\"
  elapsedRuntime: BigInt!

  \\"\\"\\"A timestamp recording when the task was finished.\\"\\"\\"
  finished: BigInt

  \\"\\"\\"The ID of the task.\\"\\"\\"
  id: String!

  \\"\\"\\"A timestamp recording when the task progress was last updated.\\"\\"\\"
  lastUpdate: BigInt!

  \\"\\"\\"Information about the progress of the task.\\"\\"\\"
  message: String

  \\"\\"\\"The progress of the task, as a percentage complete.\\"\\"\\"
  progress: BigInt!
  result: query_getTask_result

  \\"\\"\\"The URL of the task.\\"\\"\\"
  self: URL!

  \\"\\"\\"A timestamp recording when the task was started.\\"\\"\\"
  started: BigInt
  status: query_getTask_status!

  \\"\\"\\"A timestamp recording when the task was submitted.\\"\\"\\"
  submitted: BigInt!

  \\"\\"\\"The ID of the user who submitted the task.\\"\\"\\"
  submittedBy: BigInt!
}

\\"\\"\\"Details about a task.\\"\\"\\"
type TaskProgressBeanRemoveOptionFromIssuesResult {
  \\"\\"\\"The description of the task.\\"\\"\\"
  description: String

  \\"\\"\\"The execution time of the task, in milliseconds.\\"\\"\\"
  elapsedRuntime: BigInt!

  \\"\\"\\"A timestamp recording when the task was finished.\\"\\"\\"
  finished: BigInt

  \\"\\"\\"The ID of the task.\\"\\"\\"
  id: String!

  \\"\\"\\"A timestamp recording when the task progress was last updated.\\"\\"\\"
  lastUpdate: BigInt!

  \\"\\"\\"Information about the progress of the task.\\"\\"\\"
  message: String

  \\"\\"\\"The progress of the task, as a percentage complete.\\"\\"\\"
  progress: BigInt!
  result: RemoveOptionFromIssuesResult

  \\"\\"\\"The URL of the task.\\"\\"\\"
  self: URL!

  \\"\\"\\"A timestamp recording when the task was started.\\"\\"\\"
  started: BigInt
  status: query_getTask_status!

  \\"\\"\\"A timestamp recording when the task was submitted.\\"\\"\\"
  submitted: BigInt!

  \\"\\"\\"The ID of the user who submitted the task.\\"\\"\\"
  submittedBy: BigInt!
}

\\"\\"\\"Details of the time tracking configuration.\\"\\"\\"
type TimeTrackingConfiguration {
  defaultUnit: query_getConfiguration_timeTrackingConfiguration_allOf_0_defaultUnit!
  timeFormat: query_getConfiguration_timeTrackingConfiguration_allOf_0_timeFormat!

  \\"\\"\\"The number of days in a working week.\\"\\"\\"
  workingDaysPerWeek: Float!

  \\"\\"\\"The number of hours in a working day.\\"\\"\\"
  workingHoursPerDay: Float!
}

\\"\\"\\"Details of the time tracking configuration.\\"\\"\\"
type TimeTrackingConfiguration2 {
  defaultUnit: query_getConfiguration_timeTrackingConfiguration_allOf_0_defaultUnit!
  timeFormat: query_getConfiguration_timeTrackingConfiguration_allOf_0_timeFormat!

  \\"\\"\\"The number of days in a working week.\\"\\"\\"
  workingDaysPerWeek: Float!

  \\"\\"\\"The number of hours in a working day.\\"\\"\\"
  workingHoursPerDay: Float!
}

\\"\\"\\"Details of the time tracking configuration.\\"\\"\\"
input TimeTrackingConfiguration_Input2 {
  defaultUnit: query_getConfiguration_timeTrackingConfiguration_allOf_0_defaultUnit!
  timeFormat: query_getConfiguration_timeTrackingConfiguration_allOf_0_timeFormat!

  \\"\\"\\"The number of days in a working week.\\"\\"\\"
  workingDaysPerWeek: Float!

  \\"\\"\\"The number of hours in a working day.\\"\\"\\"
  workingHoursPerDay: Float!
}

\\"\\"\\"Time tracking details.\\"\\"\\"
type TimeTrackingDetails {
  \\"\\"\\"
  The original estimate of time needed for this issue in readable format.
  \\"\\"\\"
  originalEstimate: String

  \\"\\"\\"The original estimate of time needed for this issue in seconds.\\"\\"\\"
  originalEstimateSeconds: BigInt

  \\"\\"\\"
  The remaining estimate of time needed for this issue in readable format.
  \\"\\"\\"
  remainingEstimate: String

  \\"\\"\\"The remaining estimate of time needed for this issue in seconds.\\"\\"\\"
  remainingEstimateSeconds: BigInt

  \\"\\"\\"Time worked on this issue in readable format.\\"\\"\\"
  timeSpent: String

  \\"\\"\\"Time worked on this issue in seconds.\\"\\"\\"
  timeSpentSeconds: BigInt
}

\\"\\"\\"Time tracking details.\\"\\"\\"
input TimeTrackingDetails_Input {
  \\"\\"\\"
  The original estimate of time needed for this issue in readable format.
  \\"\\"\\"
  originalEstimate: String

  \\"\\"\\"The original estimate of time needed for this issue in seconds.\\"\\"\\"
  originalEstimateSeconds: BigInt

  \\"\\"\\"
  The remaining estimate of time needed for this issue in readable format.
  \\"\\"\\"
  remainingEstimate: String

  \\"\\"\\"The remaining estimate of time needed for this issue in seconds.\\"\\"\\"
  remainingEstimateSeconds: BigInt

  \\"\\"\\"Time worked on this issue in readable format.\\"\\"\\"
  timeSpent: String

  \\"\\"\\"Time worked on this issue in seconds.\\"\\"\\"
  timeSpentSeconds: BigInt
}

\\"\\"\\"Details about the time tracking provider.\\"\\"\\"
type TimeTrackingProvider {
  \\"\\"\\"The key for the time tracking provider. For example, *JIRA*.\\"\\"\\"
  key: String!

  \\"\\"\\"
  The name of the time tracking provider. For example, *JIRA provided time tracking*.
  \\"\\"\\"
  name: String

  \\"\\"\\"
  The URL of the configuration page for the time tracking provider app. For example, */example/config/url*. This property is only returned if the \`adminPageKey\` property is set in the module descriptor of the time tracking provider app.
  \\"\\"\\"
  url: String
}

\\"\\"\\"Details about the time tracking provider.\\"\\"\\"
input TimeTrackingProvider_Input {
  \\"\\"\\"The key for the time tracking provider. For example, *JIRA*.\\"\\"\\"
  key: String!

  \\"\\"\\"
  The name of the time tracking provider. For example, *JIRA provided time tracking*.
  \\"\\"\\"
  name: String

  \\"\\"\\"
  The URL of the configuration page for the time tracking provider app. For example, */example/config/url*. This property is only returned if the \`adminPageKey\` property is set in the module descriptor of the time tracking provider app.
  \\"\\"\\"
  url: String
}

\\"\\"\\"Details of a workflow transition.\\"\\"\\"
type Transition {
  \\"\\"\\"The description of the transition.\\"\\"\\"
  description: String!

  \\"\\"\\"The statuses the transition can start from.\\"\\"\\"
  from: [String]!

  \\"\\"\\"The ID of the transition.\\"\\"\\"
  id: String!

  \\"\\"\\"The name of the transition.\\"\\"\\"
  name: String!
  properties: query_getWorkflowsPaginated_oneOf_0_values_items_transitions_items_additionalProperties
  rules: WorkflowRules
  screen: TransitionScreenDetails

  \\"\\"\\"The status the transition goes to.\\"\\"\\"
  to: String!
  type: query_getWorkflowsPaginated_oneOf_0_values_items_transitions_items_type!
}

\\"\\"\\"The details of a transition screen.\\"\\"\\"
type TransitionScreenDetails {
  \\"\\"\\"The ID of the screen.\\"\\"\\"
  id: String!

  \\"\\"\\"The name of the screen.\\"\\"\\"
  name: String
}

\\"\\"\\"List of issue transitions.\\"\\"\\"
type Transitions {
  \\"\\"\\"
  Expand options that include additional transitions details in the response.
  \\"\\"\\"
  expand: String

  \\"\\"\\"List of issue transitions.\\"\\"\\"
  transitions: [IssueTransition]
}

\\"\\"\\"
A field whose value conforms to the standard URL format as specified in RFC3986: https://www.ietf.org/rfc/rfc3986.txt.
\\"\\"\\"
scalar URL

\\"\\"\\"
The details of a UI modification's context, which define where to activate the UI modification.
\\"\\"\\"
type UiModificationContextDetails {
  \\"\\"\\"The ID of the UI modification context.\\"\\"\\"
  id: String

  \\"\\"\\"
  Whether a context is available. For example, when a project is deleted the context becomes unavailable.
  \\"\\"\\"
  isAvailable: Boolean

  \\"\\"\\"The issue type ID of the context.\\"\\"\\"
  issueTypeId: String!

  \\"\\"\\"The project ID of the context.\\"\\"\\"
  projectId: String!

  \\"\\"\\"
  The view type of the context. Only \`GIC\` (Global Issue Create) is supported.
  \\"\\"\\"
  viewType: String!
}

\\"\\"\\"
The details of a UI modification's context, which define where to activate the UI modification.
\\"\\"\\"
input UiModificationContextDetails_Input {
  \\"\\"\\"The ID of the UI modification context.\\"\\"\\"
  id: String

  \\"\\"\\"
  Whether a context is available. For example, when a project is deleted the context becomes unavailable.
  \\"\\"\\"
  isAvailable: Boolean

  \\"\\"\\"The issue type ID of the context.\\"\\"\\"
  issueTypeId: String!

  \\"\\"\\"The project ID of the context.\\"\\"\\"
  projectId: String!

  \\"\\"\\"
  The view type of the context. Only \`GIC\` (Global Issue Create) is supported.
  \\"\\"\\"
  viewType: String!
}

\\"\\"\\"The details of a UI modification.\\"\\"\\"
type UiModificationDetails {
  \\"\\"\\"
  List of contexts of the UI modification. The maximum number of contexts is 1000.
  \\"\\"\\"
  contexts: [UiModificationContextDetails]

  \\"\\"\\"
  The data of the UI modification. The maximum size of the data is 50000 characters.
  \\"\\"\\"
  data: String

  \\"\\"\\"
  The description of the UI modification. The maximum length is 255 characters.
  \\"\\"\\"
  description: String

  \\"\\"\\"The ID of the UI modification.\\"\\"\\"
  id: String!

  \\"\\"\\"The name of the UI modification. The maximum length is 255 characters.\\"\\"\\"
  name: String!

  \\"\\"\\"The URL of the UI modification.\\"\\"\\"
  self: String!
}

\\"\\"\\"Identifiers for a UI modification.\\"\\"\\"
type UiModificationIdentifiers {
  \\"\\"\\"The ID of the UI modification.\\"\\"\\"
  id: String!

  \\"\\"\\"The URL of the UI modification.\\"\\"\\"
  self: String!
}

type UnrestrictedUserEmail {
  \\"\\"\\"The accountId of the user\\"\\"\\"
  accountId: String
  additionalProperties: JSON

  \\"\\"\\"The email of the user\\"\\"\\"
  email: String
}

\\"\\"\\"Details of a custom field.\\"\\"\\"
input UpdateCustomFieldDetails_Input {
  \\"\\"\\"
  The description of the custom field. The maximum length is 40000 characters.
  \\"\\"\\"
  description: String

  \\"\\"\\"
  The name of the custom field. It doesn't have to be unique. The maximum length is 255 characters.
  \\"\\"\\"
  name: String
  searcherKey: mutationInput_updateCustomField_searcherKey
}

\\"\\"\\"The ID of a screen scheme.\\"\\"\\"
input UpdateDefaultScreenScheme_Input {
  \\"\\"\\"The ID of the screen scheme.\\"\\"\\"
  screenSchemeId: String!
}

\\"\\"\\"The details of the field configuration scheme.\\"\\"\\"
input UpdateFieldConfigurationSchemeDetails_Input {
  \\"\\"\\"The description of the field configuration scheme.\\"\\"\\"
  description: mutationInput_createFieldConfigurationScheme_description

  \\"\\"\\"The name of the field configuration scheme. The name must be unique.\\"\\"\\"
  name: mutationInput_createFieldConfigurationScheme_name!
}

\\"\\"\\"Details of an issue priority.\\"\\"\\"
scalar UpdatePriorityDetails_Input

\\"\\"\\"Details about the project.\\"\\"\\"
input UpdateProjectDetails_Input {
  assigneeType: mutationInput_createProject_assigneeType

  \\"\\"\\"An integer value for the project's avatar.\\"\\"\\"
  avatarId: BigInt

  \\"\\"\\"
  The ID of the project's category. A complete list of category IDs is found using the [Get all project categories](#api-rest-api-3-projectCategory-get) operation. To remove the project category from the project, set the value to \`-1.\`
  \\"\\"\\"
  categoryId: BigInt

  \\"\\"\\"A brief description of the project.\\"\\"\\"
  description: String

  \\"\\"\\"
  The ID of the issue security scheme for the project, which enables you to control who can and cannot view issues. Use the [Get issue security schemes](#api-rest-api-3-issuesecurityschemes-get) resource to get all issue security scheme IDs.
  \\"\\"\\"
  issueSecurityScheme: BigInt

  \\"\\"\\"
  Project keys must be unique and start with an uppercase letter followed by one or more uppercase alphanumeric characters. The maximum length is 10 characters.
  \\"\\"\\"
  key: String

  \\"\\"\\"
  This parameter is deprecated because of privacy changes. Use \`leadAccountId\` instead. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details. The user name of the project lead. Cannot be provided with \`leadAccountId\`.
  \\"\\"\\"
  lead: String

  \\"\\"\\"The account ID of the project lead. Cannot be provided with \`lead\`.\\"\\"\\"
  leadAccountId: mutationInput_updateProject_leadAccountId

  \\"\\"\\"The name of the project.\\"\\"\\"
  name: String

  \\"\\"\\"
  The ID of the notification scheme for the project. Use the [Get notification schemes](#api-rest-api-3-notificationscheme-get) resource to get a list of notification scheme IDs.
  \\"\\"\\"
  notificationScheme: BigInt

  \\"\\"\\"
  The ID of the permission scheme for the project. Use the [Get all permission schemes](#api-rest-api-3-permissionscheme-get) resource to see a list of all permission scheme IDs.
  \\"\\"\\"
  permissionScheme: BigInt

  \\"\\"\\"
  A link to information about this project, such as project documentation
  \\"\\"\\"
  url: String
}

\\"\\"\\"Details of a screen.\\"\\"\\"
input UpdateScreenDetails_Input {
  \\"\\"\\"The description of the screen. The maximum length is 255 characters.\\"\\"\\"
  description: String

  \\"\\"\\"
  The name of the screen. The name must be unique. The maximum length is 255 characters.
  \\"\\"\\"
  name: String
}

\\"\\"\\"Details of a screen scheme.\\"\\"\\"
input UpdateScreenSchemeDetails_Input {
  \\"\\"\\"
  The description of the screen scheme. The maximum length is 255 characters.
  \\"\\"\\"
  description: String

  \\"\\"\\"
  The name of the screen scheme. The name must be unique. The maximum length is 255 characters.
  \\"\\"\\"
  name: String
  screens: UpdateScreenTypes_Input
}

\\"\\"\\"The IDs of the screens for the screen types of the screen scheme.\\"\\"\\"
input UpdateScreenTypes_Input {
  \\"\\"\\"
  The ID of the create screen. To remove the screen association, pass a null.
  \\"\\"\\"
  create: String

  \\"\\"\\"
  The ID of the default screen. When specified, must include a screen ID as a default screen is required.
  \\"\\"\\"
  default: String

  \\"\\"\\"
  The ID of the edit screen. To remove the screen association, pass a null.
  \\"\\"\\"
  edit: String

  \\"\\"\\"
  The ID of the view screen. To remove the screen association, pass a null.
  \\"\\"\\"
  view: String
}

\\"\\"\\"The details of a UI modification.\\"\\"\\"
input UpdateUiModificationDetails_Input {
  \\"\\"\\"
  List of contexts of the UI modification. The maximum number of contexts is 1000. If provided, replaces all existing contexts.
  \\"\\"\\"
  contexts: [UiModificationContextDetails_Input]

  \\"\\"\\"
  The data of the UI modification. The maximum size of the data is 50000 characters.
  \\"\\"\\"
  data: String

  \\"\\"\\"
  The description of the UI modification. The maximum length is 255 characters.
  \\"\\"\\"
  description: String

  \\"\\"\\"The name of the UI modification. The maximum length is 255 characters.\\"\\"\\"
  name: String
}

scalar UpdateUserToGroupBean_Input

\\"\\"\\"A project category.\\"\\"\\"
type UpdatedProjectCategory {
  \\"\\"\\"The name of the project category.\\"\\"\\"
  description: String

  \\"\\"\\"The ID of the project category.\\"\\"\\"
  id: String

  \\"\\"\\"The description of the project category.\\"\\"\\"
  name: String

  \\"\\"\\"The URL of the project category.\\"\\"\\"
  self: String
}

\\"\\"\\"A project category.\\"\\"\\"
type UpdatedProjectCategory2 {
  \\"\\"\\"The name of the project category.\\"\\"\\"
  description: String

  \\"\\"\\"The ID of the project category.\\"\\"\\"
  id: String

  \\"\\"\\"The description of the project category.\\"\\"\\"
  name: String

  \\"\\"\\"The URL of the project category.\\"\\"\\"
  self: String
}

\\"\\"\\"
A user with details as permitted by the user's Atlassian Account privacy settings. However, be aware of these exceptions:

 *  User record deleted from Atlassian: This occurs as the result of a right to be forgotten request. In this case, \`displayName\` provides an indication and other parameters have default values or are blank (for example, email is blank).
 *  User record corrupted: This occurs as a results of events such as a server import and can only happen to deleted users. In this case, \`accountId\` returns *unknown* and all other parameters have fallback values.
 *  User record unavailable: This usually occurs due to an internal service outage. In this case, all parameters have fallback values.
\\"\\"\\"
type User {
  \\"\\"\\"
  The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.
  \\"\\"\\"
  accountId: query_getAttachment_author_allOf_0_accountId
  accountType: query_getAttachment_author_allOf_0_accountType

  \\"\\"\\"Whether the user is active.\\"\\"\\"
  active: Boolean
  applicationRoles: SimpleListWrapperApplicationRole
  avatarUrls: AvatarUrlsBean

  \\"\\"\\"
  The display name of the user. Depending on the user’s privacy setting, this may return an alternative value.
  \\"\\"\\"
  displayName: String

  \\"\\"\\"
  The email address of the user. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  emailAddress: String

  \\"\\"\\"Expand options that include additional user details in the response.\\"\\"\\"
  expand: String
  groups: SimpleListWrapperGroupName

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  key: String

  \\"\\"\\"
  The locale of the user. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  locale: String

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  name: String

  \\"\\"\\"The URL of the user.\\"\\"\\"
  self: URL

  \\"\\"\\"
  The time zone specified in the user's profile. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  timeZone: String
}

\\"\\"\\"
A user with details as permitted by the user's Atlassian Account privacy settings. However, be aware of these exceptions:

 *  User record deleted from Atlassian: This occurs as the result of a right to be forgotten request. In this case, \`displayName\` provides an indication and other parameters have default values or are blank (for example, email is blank).
 *  User record corrupted: This occurs as a results of events such as a server import and can only happen to deleted users. In this case, \`accountId\` returns *unknown* and all other parameters have fallback values.
 *  User record unavailable: This usually occurs due to an internal service outage. In this case, all parameters have fallback values.
\\"\\"\\"
type User2 {
  \\"\\"\\"
  The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.
  \\"\\"\\"
  accountId: query_getAttachment_author_allOf_0_accountId
  accountType: query_getAttachment_author_allOf_0_accountType

  \\"\\"\\"Whether the user is active.\\"\\"\\"
  active: Boolean
  applicationRoles: SimpleListWrapperApplicationRole
  avatarUrls: AvatarUrlsBean

  \\"\\"\\"
  The display name of the user. Depending on the user’s privacy setting, this may return an alternative value.
  \\"\\"\\"
  displayName: String

  \\"\\"\\"
  The email address of the user. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  emailAddress: String

  \\"\\"\\"Expand options that include additional user details in the response.\\"\\"\\"
  expand: String
  groups: SimpleListWrapperGroupName

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  key: String

  \\"\\"\\"
  The locale of the user. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  locale: String

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  name: String

  \\"\\"\\"The URL of the user.\\"\\"\\"
  self: URL

  \\"\\"\\"
  The time zone specified in the user's profile. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  timeZone: String
}

\\"\\"\\"
A user with details as permitted by the user's Atlassian Account privacy settings. However, be aware of these exceptions:

 *  User record deleted from Atlassian: This occurs as the result of a right to be forgotten request. In this case, \`displayName\` provides an indication and other parameters have default values or are blank (for example, email is blank).
 *  User record corrupted: This occurs as a results of events such as a server import and can only happen to deleted users. In this case, \`accountId\` returns *unknown* and all other parameters have fallback values.
 *  User record unavailable: This usually occurs due to an internal service outage. In this case, all parameters have fallback values.
\\"\\"\\"
type User3 {
  \\"\\"\\"
  The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.
  \\"\\"\\"
  accountId: query_getAttachment_author_allOf_0_accountId
  accountType: query_getAttachment_author_allOf_0_accountType

  \\"\\"\\"Whether the user is active.\\"\\"\\"
  active: Boolean
  applicationRoles: SimpleListWrapperApplicationRole
  avatarUrls: AvatarUrlsBean

  \\"\\"\\"
  The display name of the user. Depending on the user’s privacy setting, this may return an alternative value.
  \\"\\"\\"
  displayName: String

  \\"\\"\\"
  The email address of the user. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  emailAddress: String

  \\"\\"\\"Expand options that include additional user details in the response.\\"\\"\\"
  expand: String
  groups: SimpleListWrapperGroupName

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  key: String

  \\"\\"\\"
  The locale of the user. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  locale: String

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  name: String

  \\"\\"\\"The URL of the user.\\"\\"\\"
  self: URL

  \\"\\"\\"
  The time zone specified in the user's profile. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  timeZone: String
}

\\"\\"\\"
A user with details as permitted by the user's Atlassian Account privacy settings. However, be aware of these exceptions:

 *  User record deleted from Atlassian: This occurs as the result of a right to be forgotten request. In this case, \`displayName\` provides an indication and other parameters have default values or are blank (for example, email is blank).
 *  User record corrupted: This occurs as a results of events such as a server import and can only happen to deleted users. In this case, \`accountId\` returns *unknown* and all other parameters have fallback values.
 *  User record unavailable: This usually occurs due to an internal service outage. In this case, all parameters have fallback values.
\\"\\"\\"
type User4 {
  \\"\\"\\"
  The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.
  \\"\\"\\"
  accountId: query_getAttachment_author_allOf_0_accountId
  accountType: query_getAttachment_author_allOf_0_accountType

  \\"\\"\\"Whether the user is active.\\"\\"\\"
  active: Boolean
  applicationRoles: SimpleListWrapperApplicationRole
  avatarUrls: AvatarUrlsBean

  \\"\\"\\"
  The display name of the user. Depending on the user’s privacy setting, this may return an alternative value.
  \\"\\"\\"
  displayName: String

  \\"\\"\\"
  The email address of the user. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  emailAddress: String

  \\"\\"\\"Expand options that include additional user details in the response.\\"\\"\\"
  expand: String
  groups: SimpleListWrapperGroupName

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  key: String

  \\"\\"\\"
  The locale of the user. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  locale: String

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  name: String

  \\"\\"\\"The URL of the user.\\"\\"\\"
  self: URL

  \\"\\"\\"
  The time zone specified in the user's profile. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  timeZone: String
}

\\"\\"\\"
A user with details as permitted by the user's Atlassian Account privacy settings. However, be aware of these exceptions:

 *  User record deleted from Atlassian: This occurs as the result of a right to be forgotten request. In this case, \`displayName\` provides an indication and other parameters have default values or are blank (for example, email is blank).
 *  User record corrupted: This occurs as a results of events such as a server import and can only happen to deleted users. In this case, \`accountId\` returns *unknown* and all other parameters have fallback values.
 *  User record unavailable: This usually occurs due to an internal service outage. In this case, all parameters have fallback values.
\\"\\"\\"
type User5 {
  \\"\\"\\"
  The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.
  \\"\\"\\"
  accountId: query_getAttachment_author_allOf_0_accountId
  accountType: query_getAttachment_author_allOf_0_accountType

  \\"\\"\\"Whether the user is active.\\"\\"\\"
  active: Boolean
  applicationRoles: SimpleListWrapperApplicationRole
  avatarUrls: AvatarUrlsBean

  \\"\\"\\"
  The display name of the user. Depending on the user’s privacy setting, this may return an alternative value.
  \\"\\"\\"
  displayName: String

  \\"\\"\\"
  The email address of the user. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  emailAddress: String

  \\"\\"\\"Expand options that include additional user details in the response.\\"\\"\\"
  expand: String
  groups: SimpleListWrapperGroupName

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  key: String

  \\"\\"\\"
  The locale of the user. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  locale: String

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  name: String

  \\"\\"\\"The URL of the user.\\"\\"\\"
  self: URL

  \\"\\"\\"
  The time zone specified in the user's profile. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  timeZone: String
}

\\"\\"\\"
A user with details as permitted by the user's Atlassian Account privacy settings. However, be aware of these exceptions:

 *  User record deleted from Atlassian: This occurs as the result of a right to be forgotten request. In this case, \`displayName\` provides an indication and other parameters have default values or are blank (for example, email is blank).
 *  User record corrupted: This occurs as a results of events such as a server import and can only happen to deleted users. In this case, \`accountId\` returns *unknown* and all other parameters have fallback values.
 *  User record unavailable: This usually occurs due to an internal service outage. In this case, all parameters have fallback values.
\\"\\"\\"
type User6 {
  \\"\\"\\"
  The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.
  \\"\\"\\"
  accountId: query_getAttachment_author_allOf_0_accountId
  accountType: query_getAttachment_author_allOf_0_accountType

  \\"\\"\\"Whether the user is active.\\"\\"\\"
  active: Boolean
  applicationRoles: SimpleListWrapperApplicationRole
  avatarUrls: AvatarUrlsBean

  \\"\\"\\"
  The display name of the user. Depending on the user’s privacy setting, this may return an alternative value.
  \\"\\"\\"
  displayName: String

  \\"\\"\\"
  The email address of the user. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  emailAddress: String

  \\"\\"\\"Expand options that include additional user details in the response.\\"\\"\\"
  expand: String
  groups: SimpleListWrapperGroupName

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  key: String

  \\"\\"\\"
  The locale of the user. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  locale: String

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  name: String

  \\"\\"\\"The URL of the user.\\"\\"\\"
  self: URL

  \\"\\"\\"
  The time zone specified in the user's profile. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  timeZone: String
}

\\"\\"\\"
A user with details as permitted by the user's Atlassian Account privacy settings. However, be aware of these exceptions:

 *  User record deleted from Atlassian: This occurs as the result of a right to be forgotten request. In this case, \`displayName\` provides an indication and other parameters have default values or are blank (for example, email is blank).
 *  User record corrupted: This occurs as a results of events such as a server import and can only happen to deleted users. In this case, \`accountId\` returns *unknown* and all other parameters have fallback values.
 *  User record unavailable: This usually occurs due to an internal service outage. In this case, all parameters have fallback values.
\\"\\"\\"
type User7 {
  \\"\\"\\"
  The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.
  \\"\\"\\"
  accountId: query_getAttachment_author_allOf_0_accountId
  accountType: query_getAttachment_author_allOf_0_accountType

  \\"\\"\\"Whether the user is active.\\"\\"\\"
  active: Boolean
  applicationRoles: SimpleListWrapperApplicationRole
  avatarUrls: AvatarUrlsBean

  \\"\\"\\"
  The display name of the user. Depending on the user’s privacy setting, this may return an alternative value.
  \\"\\"\\"
  displayName: String

  \\"\\"\\"
  The email address of the user. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  emailAddress: String

  \\"\\"\\"Expand options that include additional user details in the response.\\"\\"\\"
  expand: String
  groups: SimpleListWrapperGroupName

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  key: String

  \\"\\"\\"
  The locale of the user. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  locale: String

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  name: String

  \\"\\"\\"The URL of the user.\\"\\"\\"
  self: URL

  \\"\\"\\"
  The time zone specified in the user's profile. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  timeZone: String
}

\\"\\"\\"
A user with details as permitted by the user's Atlassian Account privacy settings. However, be aware of these exceptions:

 *  User record deleted from Atlassian: This occurs as the result of a right to be forgotten request. In this case, \`displayName\` provides an indication and other parameters have default values or are blank (for example, email is blank).
 *  User record corrupted: This occurs as a results of events such as a server import and can only happen to deleted users. In this case, \`accountId\` returns *unknown* and all other parameters have fallback values.
 *  User record unavailable: This usually occurs due to an internal service outage. In this case, all parameters have fallback values.
\\"\\"\\"
type User8 {
  \\"\\"\\"
  The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.
  \\"\\"\\"
  accountId: query_getAttachment_author_allOf_0_accountId
  accountType: query_getAttachment_author_allOf_0_accountType

  \\"\\"\\"Whether the user is active.\\"\\"\\"
  active: Boolean
  applicationRoles: SimpleListWrapperApplicationRole
  avatarUrls: AvatarUrlsBean

  \\"\\"\\"
  The display name of the user. Depending on the user’s privacy setting, this may return an alternative value.
  \\"\\"\\"
  displayName: String

  \\"\\"\\"
  The email address of the user. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  emailAddress: String

  \\"\\"\\"Expand options that include additional user details in the response.\\"\\"\\"
  expand: String
  groups: SimpleListWrapperGroupName

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  key: String

  \\"\\"\\"
  The locale of the user. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  locale: String

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  name: String

  \\"\\"\\"The URL of the user.\\"\\"\\"
  self: URL

  \\"\\"\\"
  The time zone specified in the user's profile. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  timeZone: String
}

\\"\\"\\"
A user with details as permitted by the user's Atlassian Account privacy settings. However, be aware of these exceptions:

 *  User record deleted from Atlassian: This occurs as the result of a right to be forgotten request. In this case, \`displayName\` provides an indication and other parameters have default values or are blank (for example, email is blank).
 *  User record corrupted: This occurs as a results of events such as a server import and can only happen to deleted users. In this case, \`accountId\` returns *unknown* and all other parameters have fallback values.
 *  User record unavailable: This usually occurs due to an internal service outage. In this case, all parameters have fallback values.
\\"\\"\\"
type User9 {
  \\"\\"\\"
  The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.
  \\"\\"\\"
  accountId: query_getAttachment_author_allOf_0_accountId
  accountType: query_getAttachment_author_allOf_0_accountType

  \\"\\"\\"Whether the user is active.\\"\\"\\"
  active: Boolean
  applicationRoles: SimpleListWrapperApplicationRole
  avatarUrls: AvatarUrlsBean

  \\"\\"\\"
  The display name of the user. Depending on the user’s privacy setting, this may return an alternative value.
  \\"\\"\\"
  displayName: String

  \\"\\"\\"
  The email address of the user. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  emailAddress: String

  \\"\\"\\"Expand options that include additional user details in the response.\\"\\"\\"
  expand: String
  groups: SimpleListWrapperGroupName

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  key: String

  \\"\\"\\"
  The locale of the user. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  locale: String

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  name: String

  \\"\\"\\"The URL of the user.\\"\\"\\"
  self: URL

  \\"\\"\\"
  The time zone specified in the user's profile. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  timeZone: String
}

\\"\\"\\"
A user with details as permitted by the user's Atlassian Account privacy settings. However, be aware of these exceptions:

 *  User record deleted from Atlassian: This occurs as the result of a right to be forgotten request. In this case, \`displayName\` provides an indication and other parameters have default values or are blank (for example, email is blank).
 *  User record corrupted: This occurs as a results of events such as a server import and can only happen to deleted users. In this case, \`accountId\` returns *unknown* and all other parameters have fallback values.
 *  User record unavailable: This usually occurs due to an internal service outage. In this case, all parameters have fallback values.
\\"\\"\\"
type User10 {
  \\"\\"\\"
  The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.
  \\"\\"\\"
  accountId: query_getAttachment_author_allOf_0_accountId
  accountType: query_getAttachment_author_allOf_0_accountType

  \\"\\"\\"Whether the user is active.\\"\\"\\"
  active: Boolean
  applicationRoles: SimpleListWrapperApplicationRole
  avatarUrls: AvatarUrlsBean

  \\"\\"\\"
  The display name of the user. Depending on the user’s privacy setting, this may return an alternative value.
  \\"\\"\\"
  displayName: String

  \\"\\"\\"
  The email address of the user. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  emailAddress: String

  \\"\\"\\"Expand options that include additional user details in the response.\\"\\"\\"
  expand: String
  groups: SimpleListWrapperGroupName

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  key: String

  \\"\\"\\"
  The locale of the user. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  locale: String

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  name: String

  \\"\\"\\"The URL of the user.\\"\\"\\"
  self: URL

  \\"\\"\\"
  The time zone specified in the user's profile. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  timeZone: String
}

\\"\\"\\"
A user with details as permitted by the user's Atlassian Account privacy settings. However, be aware of these exceptions:

 *  User record deleted from Atlassian: This occurs as the result of a right to be forgotten request. In this case, \`displayName\` provides an indication and other parameters have default values or are blank (for example, email is blank).
 *  User record corrupted: This occurs as a results of events such as a server import and can only happen to deleted users. In this case, \`accountId\` returns *unknown* and all other parameters have fallback values.
 *  User record unavailable: This usually occurs due to an internal service outage. In this case, all parameters have fallback values.
\\"\\"\\"
type User11 {
  \\"\\"\\"
  The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.
  \\"\\"\\"
  accountId: query_getAttachment_author_allOf_0_accountId
  accountType: query_getAttachment_author_allOf_0_accountType

  \\"\\"\\"Whether the user is active.\\"\\"\\"
  active: Boolean
  applicationRoles: SimpleListWrapperApplicationRole
  avatarUrls: AvatarUrlsBean

  \\"\\"\\"
  The display name of the user. Depending on the user’s privacy setting, this may return an alternative value.
  \\"\\"\\"
  displayName: String

  \\"\\"\\"
  The email address of the user. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  emailAddress: String

  \\"\\"\\"Expand options that include additional user details in the response.\\"\\"\\"
  expand: String
  groups: SimpleListWrapperGroupName

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  key: String

  \\"\\"\\"
  The locale of the user. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  locale: String

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  name: String

  \\"\\"\\"The URL of the user.\\"\\"\\"
  self: URL

  \\"\\"\\"
  The time zone specified in the user's profile. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  timeZone: String
}

\\"\\"\\"
A user with details as permitted by the user's Atlassian Account privacy settings. However, be aware of these exceptions:

 *  User record deleted from Atlassian: This occurs as the result of a right to be forgotten request. In this case, \`displayName\` provides an indication and other parameters have default values or are blank (for example, email is blank).
 *  User record corrupted: This occurs as a results of events such as a server import and can only happen to deleted users. In this case, \`accountId\` returns *unknown* and all other parameters have fallback values.
 *  User record unavailable: This usually occurs due to an internal service outage. In this case, all parameters have fallback values.
\\"\\"\\"
type User12 {
  \\"\\"\\"
  The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.
  \\"\\"\\"
  accountId: query_getAttachment_author_allOf_0_accountId
  accountType: query_getAttachment_author_allOf_0_accountType

  \\"\\"\\"Whether the user is active.\\"\\"\\"
  active: Boolean
  applicationRoles: SimpleListWrapperApplicationRole
  avatarUrls: AvatarUrlsBean

  \\"\\"\\"
  The display name of the user. Depending on the user’s privacy setting, this may return an alternative value.
  \\"\\"\\"
  displayName: String

  \\"\\"\\"
  The email address of the user. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  emailAddress: String

  \\"\\"\\"Expand options that include additional user details in the response.\\"\\"\\"
  expand: String
  groups: SimpleListWrapperGroupName

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  key: String

  \\"\\"\\"
  The locale of the user. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  locale: String

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  name: String

  \\"\\"\\"The URL of the user.\\"\\"\\"
  self: URL

  \\"\\"\\"
  The time zone specified in the user's profile. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  timeZone: String
}

\\"\\"\\"
A user with details as permitted by the user's Atlassian Account privacy settings. However, be aware of these exceptions:

 *  User record deleted from Atlassian: This occurs as the result of a right to be forgotten request. In this case, \`displayName\` provides an indication and other parameters have default values or are blank (for example, email is blank).
 *  User record corrupted: This occurs as a results of events such as a server import and can only happen to deleted users. In this case, \`accountId\` returns *unknown* and all other parameters have fallback values.
 *  User record unavailable: This usually occurs due to an internal service outage. In this case, all parameters have fallback values.
\\"\\"\\"
type User13 {
  \\"\\"\\"
  The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.
  \\"\\"\\"
  accountId: query_getAttachment_author_allOf_0_accountId
  accountType: query_getAttachment_author_allOf_0_accountType

  \\"\\"\\"Whether the user is active.\\"\\"\\"
  active: Boolean
  applicationRoles: SimpleListWrapperApplicationRole
  avatarUrls: AvatarUrlsBean

  \\"\\"\\"
  The display name of the user. Depending on the user’s privacy setting, this may return an alternative value.
  \\"\\"\\"
  displayName: String

  \\"\\"\\"
  The email address of the user. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  emailAddress: String

  \\"\\"\\"Expand options that include additional user details in the response.\\"\\"\\"
  expand: String
  groups: SimpleListWrapperGroupName

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  key: String

  \\"\\"\\"
  The locale of the user. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  locale: String

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  name: String

  \\"\\"\\"The URL of the user.\\"\\"\\"
  self: URL

  \\"\\"\\"
  The time zone specified in the user's profile. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  timeZone: String
}

\\"\\"\\"
A user with details as permitted by the user's Atlassian Account privacy settings. However, be aware of these exceptions:

 *  User record deleted from Atlassian: This occurs as the result of a right to be forgotten request. In this case, \`displayName\` provides an indication and other parameters have default values or are blank (for example, email is blank).
 *  User record corrupted: This occurs as a results of events such as a server import and can only happen to deleted users. In this case, \`accountId\` returns *unknown* and all other parameters have fallback values.
 *  User record unavailable: This usually occurs due to an internal service outage. In this case, all parameters have fallback values.
\\"\\"\\"
type User14 {
  \\"\\"\\"
  The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.
  \\"\\"\\"
  accountId: query_getAttachment_author_allOf_0_accountId
  accountType: query_getAttachment_author_allOf_0_accountType

  \\"\\"\\"Whether the user is active.\\"\\"\\"
  active: Boolean
  applicationRoles: SimpleListWrapperApplicationRole
  avatarUrls: AvatarUrlsBean

  \\"\\"\\"
  The display name of the user. Depending on the user’s privacy setting, this may return an alternative value.
  \\"\\"\\"
  displayName: String

  \\"\\"\\"
  The email address of the user. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  emailAddress: String

  \\"\\"\\"Expand options that include additional user details in the response.\\"\\"\\"
  expand: String
  groups: SimpleListWrapperGroupName

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  key: String

  \\"\\"\\"
  The locale of the user. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  locale: String

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  name: String

  \\"\\"\\"The URL of the user.\\"\\"\\"
  self: URL

  \\"\\"\\"
  The time zone specified in the user's profile. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  timeZone: String
}

\\"\\"\\"
A user with details as permitted by the user's Atlassian Account privacy settings. However, be aware of these exceptions:

 *  User record deleted from Atlassian: This occurs as the result of a right to be forgotten request. In this case, \`displayName\` provides an indication and other parameters have default values or are blank (for example, email is blank).
 *  User record corrupted: This occurs as a results of events such as a server import and can only happen to deleted users. In this case, \`accountId\` returns *unknown* and all other parameters have fallback values.
 *  User record unavailable: This usually occurs due to an internal service outage. In this case, all parameters have fallback values.
\\"\\"\\"
type User15 {
  \\"\\"\\"
  The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.
  \\"\\"\\"
  accountId: query_getAttachment_author_allOf_0_accountId
  accountType: query_getAttachment_author_allOf_0_accountType

  \\"\\"\\"Whether the user is active.\\"\\"\\"
  active: Boolean
  applicationRoles: SimpleListWrapperApplicationRole
  avatarUrls: AvatarUrlsBean

  \\"\\"\\"
  The display name of the user. Depending on the user’s privacy setting, this may return an alternative value.
  \\"\\"\\"
  displayName: String

  \\"\\"\\"
  The email address of the user. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  emailAddress: String

  \\"\\"\\"Expand options that include additional user details in the response.\\"\\"\\"
  expand: String
  groups: SimpleListWrapperGroupName

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  key: String

  \\"\\"\\"
  The locale of the user. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  locale: String

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  name: String

  \\"\\"\\"The URL of the user.\\"\\"\\"
  self: URL

  \\"\\"\\"
  The time zone specified in the user's profile. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  timeZone: String
}

\\"\\"\\"The owner of the dashboard.\\"\\"\\"
type UserBean {
  \\"\\"\\"
  The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.
  \\"\\"\\"
  accountId: query_getAllDashboards_oneOf_0_dashboards_items_owner_allOf_0_accountId

  \\"\\"\\"Whether the user is active.\\"\\"\\"
  active: Boolean
  avatarUrls: UserBeanAvatarUrls

  \\"\\"\\"
  The display name of the user. Depending on the user’s privacy setting, this may return an alternative value.
  \\"\\"\\"
  displayName: String

  \\"\\"\\"
  This property is deprecated in favor of \`accountId\` because of privacy changes. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.  
  The key of the user.
  \\"\\"\\"
  key: String

  \\"\\"\\"
  This property is deprecated in favor of \`accountId\` because of privacy changes. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.  
  The username of the user.
  \\"\\"\\"
  name: String

  \\"\\"\\"The URL of the user.\\"\\"\\"
  self: URL
}

\\"\\"\\"
The user account ID that the filter is shared with. For a request, specify the \`accountId\` property for the user.
\\"\\"\\"
type UserBean2 {
  \\"\\"\\"
  The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.
  \\"\\"\\"
  accountId: query_getAllDashboards_oneOf_0_dashboards_items_owner_allOf_0_accountId

  \\"\\"\\"Whether the user is active.\\"\\"\\"
  active: Boolean
  avatarUrls: UserBeanAvatarUrls

  \\"\\"\\"
  The display name of the user. Depending on the user’s privacy setting, this may return an alternative value.
  \\"\\"\\"
  displayName: String

  \\"\\"\\"
  This property is deprecated in favor of \`accountId\` because of privacy changes. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.  
  The key of the user.
  \\"\\"\\"
  key: String

  \\"\\"\\"
  This property is deprecated in favor of \`accountId\` because of privacy changes. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.  
  The username of the user.
  \\"\\"\\"
  name: String

  \\"\\"\\"The URL of the user.\\"\\"\\"
  self: URL
}

\\"\\"\\"The avatars of the user.\\"\\"\\"
type UserBeanAvatarUrls {
  \\"\\"\\"The URL of the user's 16x16 pixel avatar.\\"\\"\\"
  _16x16: URL

  \\"\\"\\"The URL of the user's 24x24 pixel avatar.\\"\\"\\"
  _24x24: URL

  \\"\\"\\"The URL of the user's 32x32 pixel avatar.\\"\\"\\"
  _32x32: URL

  \\"\\"\\"The URL of the user's 48x48 pixel avatar.\\"\\"\\"
  _48x48: URL
}

\\"\\"\\"The avatars of the user.\\"\\"\\"
input UserBeanAvatarUrls_Input {
  \\"\\"\\"The URL of the user's 16x16 pixel avatar.\\"\\"\\"
  _16x16: URL

  \\"\\"\\"The URL of the user's 24x24 pixel avatar.\\"\\"\\"
  _24x24: URL

  \\"\\"\\"The URL of the user's 32x32 pixel avatar.\\"\\"\\"
  _32x32: URL

  \\"\\"\\"The URL of the user's 48x48 pixel avatar.\\"\\"\\"
  _48x48: URL
}

\\"\\"\\"
The user account ID that the filter is shared with. For a request, specify the \`accountId\` property for the user.
\\"\\"\\"
input UserBean_Input2 {
  \\"\\"\\"
  The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.
  \\"\\"\\"
  accountId: query_getAllDashboards_oneOf_0_dashboards_items_owner_allOf_0_accountId

  \\"\\"\\"Whether the user is active.\\"\\"\\"
  active: Boolean
  avatarUrls: UserBeanAvatarUrls_Input

  \\"\\"\\"
  The display name of the user. Depending on the user’s privacy setting, this may return an alternative value.
  \\"\\"\\"
  displayName: String

  \\"\\"\\"
  This property is deprecated in favor of \`accountId\` because of privacy changes. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.  
  The key of the user.
  \\"\\"\\"
  key: String

  \\"\\"\\"
  This property is deprecated in favor of \`accountId\` because of privacy changes. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.  
  The username of the user.
  \\"\\"\\"
  name: String

  \\"\\"\\"The URL of the user.\\"\\"\\"
  self: URL
}

\\"\\"\\"
User details permitted by the user's Atlassian Account privacy settings. However, be aware of these exceptions:

 *  User record deleted from Atlassian: This occurs as the result of a right to be forgotten request. In this case, \`displayName\` provides an indication and other parameters have default values or are blank (for example, email is blank).
 *  User record corrupted: This occurs as a results of events such as a server import and can only happen to deleted users. In this case, \`accountId\` returns *unknown* and all other parameters have fallback values.
 *  User record unavailable: This usually occurs due to an internal service outage. In this case, all parameters have fallback values.
\\"\\"\\"
type UserDetails {
  \\"\\"\\"
  The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.
  \\"\\"\\"
  accountId: query_getAllDashboards_oneOf_0_dashboards_items_owner_allOf_0_accountId

  \\"\\"\\"
  The type of account represented by this user. This will be one of 'atlassian' (normal users), 'app' (application user) or 'customer' (Jira Service Desk customer user)
  \\"\\"\\"
  accountType: String

  \\"\\"\\"Whether the user is active.\\"\\"\\"
  active: Boolean
  avatarUrls: AvatarUrlsBean

  \\"\\"\\"
  The display name of the user. Depending on the user’s privacy settings, this may return an alternative value.
  \\"\\"\\"
  displayName: String

  \\"\\"\\"
  The email address of the user. Depending on the user’s privacy settings, this may be returned as null.
  \\"\\"\\"
  emailAddress: String

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  key: String

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  name: String

  \\"\\"\\"The URL of the user.\\"\\"\\"
  self: String

  \\"\\"\\"
  The time zone specified in the user's profile. Depending on the user’s privacy settings, this may be returned as null.
  \\"\\"\\"
  timeZone: String
}

\\"\\"\\"
User details permitted by the user's Atlassian Account privacy settings. However, be aware of these exceptions:

 *  User record deleted from Atlassian: This occurs as the result of a right to be forgotten request. In this case, \`displayName\` provides an indication and other parameters have default values or are blank (for example, email is blank).
 *  User record corrupted: This occurs as a results of events such as a server import and can only happen to deleted users. In this case, \`accountId\` returns *unknown* and all other parameters have fallback values.
 *  User record unavailable: This usually occurs due to an internal service outage. In this case, all parameters have fallback values.
\\"\\"\\"
type UserDetails2 {
  \\"\\"\\"
  The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.
  \\"\\"\\"
  accountId: query_getAllDashboards_oneOf_0_dashboards_items_owner_allOf_0_accountId

  \\"\\"\\"
  The type of account represented by this user. This will be one of 'atlassian' (normal users), 'app' (application user) or 'customer' (Jira Service Desk customer user)
  \\"\\"\\"
  accountType: String

  \\"\\"\\"Whether the user is active.\\"\\"\\"
  active: Boolean
  avatarUrls: AvatarUrlsBean

  \\"\\"\\"
  The display name of the user. Depending on the user’s privacy settings, this may return an alternative value.
  \\"\\"\\"
  displayName: String

  \\"\\"\\"
  The email address of the user. Depending on the user’s privacy settings, this may be returned as null.
  \\"\\"\\"
  emailAddress: String

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  key: String

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  name: String

  \\"\\"\\"The URL of the user.\\"\\"\\"
  self: String

  \\"\\"\\"
  The time zone specified in the user's profile. Depending on the user’s privacy settings, this may be returned as null.
  \\"\\"\\"
  timeZone: String
}

\\"\\"\\"
User details permitted by the user's Atlassian Account privacy settings. However, be aware of these exceptions:

 *  User record deleted from Atlassian: This occurs as the result of a right to be forgotten request. In this case, \`displayName\` provides an indication and other parameters have default values or are blank (for example, email is blank).
 *  User record corrupted: This occurs as a results of events such as a server import and can only happen to deleted users. In this case, \`accountId\` returns *unknown* and all other parameters have fallback values.
 *  User record unavailable: This usually occurs due to an internal service outage. In this case, all parameters have fallback values.
\\"\\"\\"
type UserDetails3 {
  \\"\\"\\"
  The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.
  \\"\\"\\"
  accountId: query_getAllDashboards_oneOf_0_dashboards_items_owner_allOf_0_accountId

  \\"\\"\\"
  The type of account represented by this user. This will be one of 'atlassian' (normal users), 'app' (application user) or 'customer' (Jira Service Desk customer user)
  \\"\\"\\"
  accountType: String

  \\"\\"\\"Whether the user is active.\\"\\"\\"
  active: Boolean
  avatarUrls: AvatarUrlsBean

  \\"\\"\\"
  The display name of the user. Depending on the user’s privacy settings, this may return an alternative value.
  \\"\\"\\"
  displayName: String

  \\"\\"\\"
  The email address of the user. Depending on the user’s privacy settings, this may be returned as null.
  \\"\\"\\"
  emailAddress: String

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  key: String

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  name: String

  \\"\\"\\"The URL of the user.\\"\\"\\"
  self: String

  \\"\\"\\"
  The time zone specified in the user's profile. Depending on the user’s privacy settings, this may be returned as null.
  \\"\\"\\"
  timeZone: String
}

\\"\\"\\"
User details permitted by the user's Atlassian Account privacy settings. However, be aware of these exceptions:

 *  User record deleted from Atlassian: This occurs as the result of a right to be forgotten request. In this case, \`displayName\` provides an indication and other parameters have default values or are blank (for example, email is blank).
 *  User record corrupted: This occurs as a results of events such as a server import and can only happen to deleted users. In this case, \`accountId\` returns *unknown* and all other parameters have fallback values.
 *  User record unavailable: This usually occurs due to an internal service outage. In this case, all parameters have fallback values.
\\"\\"\\"
type UserDetails4 {
  \\"\\"\\"
  The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.
  \\"\\"\\"
  accountId: query_getAllDashboards_oneOf_0_dashboards_items_owner_allOf_0_accountId

  \\"\\"\\"
  The type of account represented by this user. This will be one of 'atlassian' (normal users), 'app' (application user) or 'customer' (Jira Service Desk customer user)
  \\"\\"\\"
  accountType: String

  \\"\\"\\"Whether the user is active.\\"\\"\\"
  active: Boolean
  avatarUrls: AvatarUrlsBean

  \\"\\"\\"
  The display name of the user. Depending on the user’s privacy settings, this may return an alternative value.
  \\"\\"\\"
  displayName: String

  \\"\\"\\"
  The email address of the user. Depending on the user’s privacy settings, this may be returned as null.
  \\"\\"\\"
  emailAddress: String

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  key: String

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  name: String

  \\"\\"\\"The URL of the user.\\"\\"\\"
  self: String

  \\"\\"\\"
  The time zone specified in the user's profile. Depending on the user’s privacy settings, this may be returned as null.
  \\"\\"\\"
  timeZone: String
}

\\"\\"\\"
User details permitted by the user's Atlassian Account privacy settings. However, be aware of these exceptions:

 *  User record deleted from Atlassian: This occurs as the result of a right to be forgotten request. In this case, \`displayName\` provides an indication and other parameters have default values or are blank (for example, email is blank).
 *  User record corrupted: This occurs as a results of events such as a server import and can only happen to deleted users. In this case, \`accountId\` returns *unknown* and all other parameters have fallback values.
 *  User record unavailable: This usually occurs due to an internal service outage. In this case, all parameters have fallback values.
\\"\\"\\"
type UserDetails5 {
  \\"\\"\\"
  The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.
  \\"\\"\\"
  accountId: query_getAllDashboards_oneOf_0_dashboards_items_owner_allOf_0_accountId

  \\"\\"\\"
  The type of account represented by this user. This will be one of 'atlassian' (normal users), 'app' (application user) or 'customer' (Jira Service Desk customer user)
  \\"\\"\\"
  accountType: String

  \\"\\"\\"Whether the user is active.\\"\\"\\"
  active: Boolean
  avatarUrls: AvatarUrlsBean

  \\"\\"\\"
  The display name of the user. Depending on the user’s privacy settings, this may return an alternative value.
  \\"\\"\\"
  displayName: String

  \\"\\"\\"
  The email address of the user. Depending on the user’s privacy settings, this may be returned as null.
  \\"\\"\\"
  emailAddress: String

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  key: String

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  name: String

  \\"\\"\\"The URL of the user.\\"\\"\\"
  self: String

  \\"\\"\\"
  The time zone specified in the user's profile. Depending on the user’s privacy settings, this may be returned as null.
  \\"\\"\\"
  timeZone: String
}

\\"\\"\\"
User details permitted by the user's Atlassian Account privacy settings. However, be aware of these exceptions:

 *  User record deleted from Atlassian: This occurs as the result of a right to be forgotten request. In this case, \`displayName\` provides an indication and other parameters have default values or are blank (for example, email is blank).
 *  User record corrupted: This occurs as a results of events such as a server import and can only happen to deleted users. In this case, \`accountId\` returns *unknown* and all other parameters have fallback values.
 *  User record unavailable: This usually occurs due to an internal service outage. In this case, all parameters have fallback values.
\\"\\"\\"
type UserDetails6 {
  \\"\\"\\"
  The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.
  \\"\\"\\"
  accountId: query_getAllDashboards_oneOf_0_dashboards_items_owner_allOf_0_accountId

  \\"\\"\\"
  The type of account represented by this user. This will be one of 'atlassian' (normal users), 'app' (application user) or 'customer' (Jira Service Desk customer user)
  \\"\\"\\"
  accountType: String

  \\"\\"\\"Whether the user is active.\\"\\"\\"
  active: Boolean
  avatarUrls: AvatarUrlsBean

  \\"\\"\\"
  The display name of the user. Depending on the user’s privacy settings, this may return an alternative value.
  \\"\\"\\"
  displayName: String

  \\"\\"\\"
  The email address of the user. Depending on the user’s privacy settings, this may be returned as null.
  \\"\\"\\"
  emailAddress: String

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  key: String

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  name: String

  \\"\\"\\"The URL of the user.\\"\\"\\"
  self: String

  \\"\\"\\"
  The time zone specified in the user's profile. Depending on the user’s privacy settings, this may be returned as null.
  \\"\\"\\"
  timeZone: String
}

\\"\\"\\"
User details permitted by the user's Atlassian Account privacy settings. However, be aware of these exceptions:

 *  User record deleted from Atlassian: This occurs as the result of a right to be forgotten request. In this case, \`displayName\` provides an indication and other parameters have default values or are blank (for example, email is blank).
 *  User record corrupted: This occurs as a results of events such as a server import and can only happen to deleted users. In this case, \`accountId\` returns *unknown* and all other parameters have fallback values.
 *  User record unavailable: This usually occurs due to an internal service outage. In this case, all parameters have fallback values.
\\"\\"\\"
type UserDetails7 {
  \\"\\"\\"
  The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.
  \\"\\"\\"
  accountId: query_getAllDashboards_oneOf_0_dashboards_items_owner_allOf_0_accountId

  \\"\\"\\"
  The type of account represented by this user. This will be one of 'atlassian' (normal users), 'app' (application user) or 'customer' (Jira Service Desk customer user)
  \\"\\"\\"
  accountType: String

  \\"\\"\\"Whether the user is active.\\"\\"\\"
  active: Boolean
  avatarUrls: AvatarUrlsBean

  \\"\\"\\"
  The display name of the user. Depending on the user’s privacy settings, this may return an alternative value.
  \\"\\"\\"
  displayName: String

  \\"\\"\\"
  The email address of the user. Depending on the user’s privacy settings, this may be returned as null.
  \\"\\"\\"
  emailAddress: String

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  key: String

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  name: String

  \\"\\"\\"The URL of the user.\\"\\"\\"
  self: String

  \\"\\"\\"
  The time zone specified in the user's profile. Depending on the user’s privacy settings, this may be returned as null.
  \\"\\"\\"
  timeZone: String
}

\\"\\"\\"
User details permitted by the user's Atlassian Account privacy settings. However, be aware of these exceptions:

 *  User record deleted from Atlassian: This occurs as the result of a right to be forgotten request. In this case, \`displayName\` provides an indication and other parameters have default values or are blank (for example, email is blank).
 *  User record corrupted: This occurs as a results of events such as a server import and can only happen to deleted users. In this case, \`accountId\` returns *unknown* and all other parameters have fallback values.
 *  User record unavailable: This usually occurs due to an internal service outage. In this case, all parameters have fallback values.
\\"\\"\\"
type UserDetails8 {
  \\"\\"\\"
  The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.
  \\"\\"\\"
  accountId: query_getAllDashboards_oneOf_0_dashboards_items_owner_allOf_0_accountId

  \\"\\"\\"
  The type of account represented by this user. This will be one of 'atlassian' (normal users), 'app' (application user) or 'customer' (Jira Service Desk customer user)
  \\"\\"\\"
  accountType: String

  \\"\\"\\"Whether the user is active.\\"\\"\\"
  active: Boolean
  avatarUrls: AvatarUrlsBean

  \\"\\"\\"
  The display name of the user. Depending on the user’s privacy settings, this may return an alternative value.
  \\"\\"\\"
  displayName: String

  \\"\\"\\"
  The email address of the user. Depending on the user’s privacy settings, this may be returned as null.
  \\"\\"\\"
  emailAddress: String

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  key: String

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  name: String

  \\"\\"\\"The URL of the user.\\"\\"\\"
  self: String

  \\"\\"\\"
  The time zone specified in the user's profile. Depending on the user’s privacy settings, this may be returned as null.
  \\"\\"\\"
  timeZone: String
}

\\"\\"\\"
User details permitted by the user's Atlassian Account privacy settings. However, be aware of these exceptions:

 *  User record deleted from Atlassian: This occurs as the result of a right to be forgotten request. In this case, \`displayName\` provides an indication and other parameters have default values or are blank (for example, email is blank).
 *  User record corrupted: This occurs as a results of events such as a server import and can only happen to deleted users. In this case, \`accountId\` returns *unknown* and all other parameters have fallback values.
 *  User record unavailable: This usually occurs due to an internal service outage. In this case, all parameters have fallback values.
\\"\\"\\"
type UserDetails9 {
  \\"\\"\\"
  The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.
  \\"\\"\\"
  accountId: query_getAllDashboards_oneOf_0_dashboards_items_owner_allOf_0_accountId

  \\"\\"\\"
  The type of account represented by this user. This will be one of 'atlassian' (normal users), 'app' (application user) or 'customer' (Jira Service Desk customer user)
  \\"\\"\\"
  accountType: String

  \\"\\"\\"Whether the user is active.\\"\\"\\"
  active: Boolean
  avatarUrls: AvatarUrlsBean

  \\"\\"\\"
  The display name of the user. Depending on the user’s privacy settings, this may return an alternative value.
  \\"\\"\\"
  displayName: String

  \\"\\"\\"
  The email address of the user. Depending on the user’s privacy settings, this may be returned as null.
  \\"\\"\\"
  emailAddress: String

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  key: String

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  name: String

  \\"\\"\\"The URL of the user.\\"\\"\\"
  self: String

  \\"\\"\\"
  The time zone specified in the user's profile. Depending on the user’s privacy settings, this may be returned as null.
  \\"\\"\\"
  timeZone: String
}

\\"\\"\\"
User details permitted by the user's Atlassian Account privacy settings. However, be aware of these exceptions:

 *  User record deleted from Atlassian: This occurs as the result of a right to be forgotten request. In this case, \`displayName\` provides an indication and other parameters have default values or are blank (for example, email is blank).
 *  User record corrupted: This occurs as a results of events such as a server import and can only happen to deleted users. In this case, \`accountId\` returns *unknown* and all other parameters have fallback values.
 *  User record unavailable: This usually occurs due to an internal service outage. In this case, all parameters have fallback values.
\\"\\"\\"
input UserDetails_Input7 {
  \\"\\"\\"
  The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.
  \\"\\"\\"
  accountId: query_getAllDashboards_oneOf_0_dashboards_items_owner_allOf_0_accountId

  \\"\\"\\"
  The type of account represented by this user. This will be one of 'atlassian' (normal users), 'app' (application user) or 'customer' (Jira Service Desk customer user)
  \\"\\"\\"
  accountType: String

  \\"\\"\\"Whether the user is active.\\"\\"\\"
  active: Boolean
  avatarUrls: AvatarUrlsBean_Input

  \\"\\"\\"
  The display name of the user. Depending on the user’s privacy settings, this may return an alternative value.
  \\"\\"\\"
  displayName: String

  \\"\\"\\"
  The email address of the user. Depending on the user’s privacy settings, this may be returned as null.
  \\"\\"\\"
  emailAddress: String

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  key: String

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  name: String

  \\"\\"\\"The URL of the user.\\"\\"\\"
  self: String

  \\"\\"\\"
  The time zone specified in the user's profile. Depending on the user’s privacy settings, this may be returned as null.
  \\"\\"\\"
  timeZone: String
}

\\"\\"\\"Filter for a User Picker (single) custom field.\\"\\"\\"
type UserFilter {
  \\"\\"\\"Whether the filter is enabled.\\"\\"\\"
  enabled: Boolean!

  \\"\\"\\"
  User groups autocomplete suggestion users must belong to. If not provided, the default values are used. A maximum of 10 groups can be provided.
  \\"\\"\\"
  groups: [String]

  \\"\\"\\"
  Roles that autocomplete suggestion users must belong to. If not provided, the default values are used. A maximum of 10 roles can be provided.
  \\"\\"\\"
  roleIds: [BigInt]
}

\\"\\"\\"Filter for a User Picker (single) custom field.\\"\\"\\"
input UserFilter_Input {
  \\"\\"\\"Whether the filter is enabled.\\"\\"\\"
  enabled: Boolean!

  \\"\\"\\"
  User groups autocomplete suggestion users must belong to. If not provided, the default values are used. A maximum of 10 groups can be provided.
  \\"\\"\\"
  groups: [String]

  \\"\\"\\"
  Roles that autocomplete suggestion users must belong to. If not provided, the default values are used. A maximum of 10 roles can be provided.
  \\"\\"\\"
  roleIds: [BigInt]
}

\\"\\"\\"List of user account IDs.\\"\\"\\"
type UserKey {
  \\"\\"\\"
  The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Returns *unknown* if the record is deleted and corrupted, for example, as the result of a server import.
  \\"\\"\\"
  accountId: query_findUserKeysByQuery_values_items_accountId

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  key: String
}

\\"\\"\\"
A paginated list of users sharing the filter. This includes users that are members of the groups or can browse the projects that the filter is shared with.
\\"\\"\\"
type UserList {
  \\"\\"\\"The index of the last item returned on the page.\\"\\"\\"
  end_index: Int

  \\"\\"\\"The list of items.\\"\\"\\"
  items: [User9]

  \\"\\"\\"The maximum number of results that could be on the page.\\"\\"\\"
  max_results: Int

  \\"\\"\\"The number of items on the page.\\"\\"\\"
  size: Int

  \\"\\"\\"The index of the first item returned on the page.\\"\\"\\"
  start_index: Int
}

\\"\\"\\"
A paginated list of users sharing the filter. This includes users that are members of the groups or can browse the projects that the filter is shared with.
\\"\\"\\"
input UserList_Input {
  \\"\\"\\"The index of the last item returned on the page.\\"\\"\\"
  end_index: Int

  \\"\\"\\"The list of items.\\"\\"\\"
  items: [User_Input9]

  \\"\\"\\"The maximum number of results that could be on the page.\\"\\"\\"
  max_results: Int

  \\"\\"\\"The number of items on the page.\\"\\"\\"
  size: Int

  \\"\\"\\"The index of the first item returned on the page.\\"\\"\\"
  start_index: Int
}

type UserMigrationBean {
  accountId: String
  key: String
  username: String
}

\\"\\"\\"Details of a permission and its availability to a user.\\"\\"\\"
type UserPermission {
  additionalProperties: JSON

  \\"\\"\\"
  Indicate whether the permission key is deprecated. Note that deprecated keys cannot be used in the \`permissions parameter of Get my permissions. Deprecated keys are not returned by Get all permissions.\`
  \\"\\"\\"
  deprecatedKey: Boolean

  \\"\\"\\"The description of the permission.\\"\\"\\"
  description: String

  \\"\\"\\"
  Whether the permission is available to the user in the queried context.
  \\"\\"\\"
  havePermission: Boolean

  \\"\\"\\"
  The ID of the permission. Either \`id\` or \`key\` must be specified. Use [Get all permissions](#api-rest-api-3-permissions-get) to get the list of permissions.
  \\"\\"\\"
  id: String

  \\"\\"\\"
  The key of the permission. Either \`id\` or \`key\` must be specified. Use [Get all permissions](#api-rest-api-3-permissions-get) to get the list of permissions.
  \\"\\"\\"
  key: String

  \\"\\"\\"The name of the permission.\\"\\"\\"
  name: String
  type: query_getMyPermissions_oneOf_0_permissions_additionalProperties_type
}

\\"\\"\\"A user found in a search.\\"\\"\\"
type UserPickerUser {
  \\"\\"\\"
  The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.
  \\"\\"\\"
  accountId: String

  \\"\\"\\"The avatar URL of the user.\\"\\"\\"
  avatarUrl: URL

  \\"\\"\\"
  The display name of the user. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  displayName: String

  \\"\\"\\"
  The display name, email address, and key of the user with the matched query string highlighted with the HTML bold tag.
  \\"\\"\\"
  html: String

  \\"\\"\\"
  This property is no longer available. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  key: String

  \\"\\"\\"
  This property is no longer available . See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  name: String
}

\\"\\"\\"
A user with details as permitted by the user's Atlassian Account privacy settings. However, be aware of these exceptions:

 *  User record deleted from Atlassian: This occurs as the result of a right to be forgotten request. In this case, \`displayName\` provides an indication and other parameters have default values or are blank (for example, email is blank).
 *  User record corrupted: This occurs as a results of events such as a server import and can only happen to deleted users. In this case, \`accountId\` returns *unknown* and all other parameters have fallback values.
 *  User record unavailable: This usually occurs due to an internal service outage. In this case, all parameters have fallback values.
\\"\\"\\"
input User_Input2 {
  \\"\\"\\"
  The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.
  \\"\\"\\"
  accountId: query_getAttachment_author_allOf_0_accountId
  accountType: query_getAttachment_author_allOf_0_accountType

  \\"\\"\\"Whether the user is active.\\"\\"\\"
  active: Boolean
  applicationRoles: SimpleListWrapperApplicationRole_Input
  avatarUrls: AvatarUrlsBean_Input

  \\"\\"\\"
  The display name of the user. Depending on the user’s privacy setting, this may return an alternative value.
  \\"\\"\\"
  displayName: String

  \\"\\"\\"
  The email address of the user. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  emailAddress: String

  \\"\\"\\"Expand options that include additional user details in the response.\\"\\"\\"
  expand: String
  groups: SimpleListWrapperGroupName_Input

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  key: String

  \\"\\"\\"
  The locale of the user. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  locale: String

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  name: String

  \\"\\"\\"The URL of the user.\\"\\"\\"
  self: URL

  \\"\\"\\"
  The time zone specified in the user's profile. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  timeZone: String
}

\\"\\"\\"
A user with details as permitted by the user's Atlassian Account privacy settings. However, be aware of these exceptions:

 *  User record deleted from Atlassian: This occurs as the result of a right to be forgotten request. In this case, \`displayName\` provides an indication and other parameters have default values or are blank (for example, email is blank).
 *  User record corrupted: This occurs as a results of events such as a server import and can only happen to deleted users. In this case, \`accountId\` returns *unknown* and all other parameters have fallback values.
 *  User record unavailable: This usually occurs due to an internal service outage. In this case, all parameters have fallback values.
\\"\\"\\"
input User_Input3 {
  \\"\\"\\"
  The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.
  \\"\\"\\"
  accountId: query_getAttachment_author_allOf_0_accountId
  accountType: query_getAttachment_author_allOf_0_accountType

  \\"\\"\\"Whether the user is active.\\"\\"\\"
  active: Boolean
  applicationRoles: SimpleListWrapperApplicationRole_Input
  avatarUrls: AvatarUrlsBean_Input

  \\"\\"\\"
  The display name of the user. Depending on the user’s privacy setting, this may return an alternative value.
  \\"\\"\\"
  displayName: String

  \\"\\"\\"
  The email address of the user. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  emailAddress: String

  \\"\\"\\"Expand options that include additional user details in the response.\\"\\"\\"
  expand: String
  groups: SimpleListWrapperGroupName_Input

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  key: String

  \\"\\"\\"
  The locale of the user. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  locale: String

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  name: String

  \\"\\"\\"The URL of the user.\\"\\"\\"
  self: URL

  \\"\\"\\"
  The time zone specified in the user's profile. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  timeZone: String
}

\\"\\"\\"
A user with details as permitted by the user's Atlassian Account privacy settings. However, be aware of these exceptions:

 *  User record deleted from Atlassian: This occurs as the result of a right to be forgotten request. In this case, \`displayName\` provides an indication and other parameters have default values or are blank (for example, email is blank).
 *  User record corrupted: This occurs as a results of events such as a server import and can only happen to deleted users. In this case, \`accountId\` returns *unknown* and all other parameters have fallback values.
 *  User record unavailable: This usually occurs due to an internal service outage. In this case, all parameters have fallback values.
\\"\\"\\"
input User_Input4 {
  \\"\\"\\"
  The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.
  \\"\\"\\"
  accountId: query_getAttachment_author_allOf_0_accountId
  accountType: query_getAttachment_author_allOf_0_accountType

  \\"\\"\\"Whether the user is active.\\"\\"\\"
  active: Boolean
  applicationRoles: SimpleListWrapperApplicationRole_Input
  avatarUrls: AvatarUrlsBean_Input

  \\"\\"\\"
  The display name of the user. Depending on the user’s privacy setting, this may return an alternative value.
  \\"\\"\\"
  displayName: String

  \\"\\"\\"
  The email address of the user. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  emailAddress: String

  \\"\\"\\"Expand options that include additional user details in the response.\\"\\"\\"
  expand: String
  groups: SimpleListWrapperGroupName_Input

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  key: String

  \\"\\"\\"
  The locale of the user. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  locale: String

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  name: String

  \\"\\"\\"The URL of the user.\\"\\"\\"
  self: URL

  \\"\\"\\"
  The time zone specified in the user's profile. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  timeZone: String
}

\\"\\"\\"
A user with details as permitted by the user's Atlassian Account privacy settings. However, be aware of these exceptions:

 *  User record deleted from Atlassian: This occurs as the result of a right to be forgotten request. In this case, \`displayName\` provides an indication and other parameters have default values or are blank (for example, email is blank).
 *  User record corrupted: This occurs as a results of events such as a server import and can only happen to deleted users. In this case, \`accountId\` returns *unknown* and all other parameters have fallback values.
 *  User record unavailable: This usually occurs due to an internal service outage. In this case, all parameters have fallback values.
\\"\\"\\"
input User_Input5 {
  \\"\\"\\"
  The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.
  \\"\\"\\"
  accountId: query_getAttachment_author_allOf_0_accountId
  accountType: query_getAttachment_author_allOf_0_accountType

  \\"\\"\\"Whether the user is active.\\"\\"\\"
  active: Boolean
  applicationRoles: SimpleListWrapperApplicationRole_Input
  avatarUrls: AvatarUrlsBean_Input

  \\"\\"\\"
  The display name of the user. Depending on the user’s privacy setting, this may return an alternative value.
  \\"\\"\\"
  displayName: String

  \\"\\"\\"
  The email address of the user. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  emailAddress: String

  \\"\\"\\"Expand options that include additional user details in the response.\\"\\"\\"
  expand: String
  groups: SimpleListWrapperGroupName_Input

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  key: String

  \\"\\"\\"
  The locale of the user. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  locale: String

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  name: String

  \\"\\"\\"The URL of the user.\\"\\"\\"
  self: URL

  \\"\\"\\"
  The time zone specified in the user's profile. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  timeZone: String
}

\\"\\"\\"
A user with details as permitted by the user's Atlassian Account privacy settings. However, be aware of these exceptions:

 *  User record deleted from Atlassian: This occurs as the result of a right to be forgotten request. In this case, \`displayName\` provides an indication and other parameters have default values or are blank (for example, email is blank).
 *  User record corrupted: This occurs as a results of events such as a server import and can only happen to deleted users. In this case, \`accountId\` returns *unknown* and all other parameters have fallback values.
 *  User record unavailable: This usually occurs due to an internal service outage. In this case, all parameters have fallback values.
\\"\\"\\"
input User_Input6 {
  \\"\\"\\"
  The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.
  \\"\\"\\"
  accountId: query_getAttachment_author_allOf_0_accountId
  accountType: query_getAttachment_author_allOf_0_accountType

  \\"\\"\\"Whether the user is active.\\"\\"\\"
  active: Boolean
  applicationRoles: SimpleListWrapperApplicationRole_Input
  avatarUrls: AvatarUrlsBean_Input

  \\"\\"\\"
  The display name of the user. Depending on the user’s privacy setting, this may return an alternative value.
  \\"\\"\\"
  displayName: String

  \\"\\"\\"
  The email address of the user. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  emailAddress: String

  \\"\\"\\"Expand options that include additional user details in the response.\\"\\"\\"
  expand: String
  groups: SimpleListWrapperGroupName_Input

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  key: String

  \\"\\"\\"
  The locale of the user. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  locale: String

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  name: String

  \\"\\"\\"The URL of the user.\\"\\"\\"
  self: URL

  \\"\\"\\"
  The time zone specified in the user's profile. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  timeZone: String
}

\\"\\"\\"
A user with details as permitted by the user's Atlassian Account privacy settings. However, be aware of these exceptions:

 *  User record deleted from Atlassian: This occurs as the result of a right to be forgotten request. In this case, \`displayName\` provides an indication and other parameters have default values or are blank (for example, email is blank).
 *  User record corrupted: This occurs as a results of events such as a server import and can only happen to deleted users. In this case, \`accountId\` returns *unknown* and all other parameters have fallback values.
 *  User record unavailable: This usually occurs due to an internal service outage. In this case, all parameters have fallback values.
\\"\\"\\"
input User_Input7 {
  \\"\\"\\"
  The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.
  \\"\\"\\"
  accountId: query_getAttachment_author_allOf_0_accountId
  accountType: query_getAttachment_author_allOf_0_accountType

  \\"\\"\\"Whether the user is active.\\"\\"\\"
  active: Boolean
  applicationRoles: SimpleListWrapperApplicationRole_Input
  avatarUrls: AvatarUrlsBean_Input

  \\"\\"\\"
  The display name of the user. Depending on the user’s privacy setting, this may return an alternative value.
  \\"\\"\\"
  displayName: String

  \\"\\"\\"
  The email address of the user. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  emailAddress: String

  \\"\\"\\"Expand options that include additional user details in the response.\\"\\"\\"
  expand: String
  groups: SimpleListWrapperGroupName_Input

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  key: String

  \\"\\"\\"
  The locale of the user. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  locale: String

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  name: String

  \\"\\"\\"The URL of the user.\\"\\"\\"
  self: URL

  \\"\\"\\"
  The time zone specified in the user's profile. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  timeZone: String
}

\\"\\"\\"
A user with details as permitted by the user's Atlassian Account privacy settings. However, be aware of these exceptions:

 *  User record deleted from Atlassian: This occurs as the result of a right to be forgotten request. In this case, \`displayName\` provides an indication and other parameters have default values or are blank (for example, email is blank).
 *  User record corrupted: This occurs as a results of events such as a server import and can only happen to deleted users. In this case, \`accountId\` returns *unknown* and all other parameters have fallback values.
 *  User record unavailable: This usually occurs due to an internal service outage. In this case, all parameters have fallback values.
\\"\\"\\"
input User_Input8 {
  \\"\\"\\"
  The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.
  \\"\\"\\"
  accountId: query_getAttachment_author_allOf_0_accountId
  accountType: query_getAttachment_author_allOf_0_accountType

  \\"\\"\\"Whether the user is active.\\"\\"\\"
  active: Boolean
  applicationRoles: SimpleListWrapperApplicationRole_Input
  avatarUrls: AvatarUrlsBean_Input

  \\"\\"\\"
  The display name of the user. Depending on the user’s privacy setting, this may return an alternative value.
  \\"\\"\\"
  displayName: String

  \\"\\"\\"
  The email address of the user. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  emailAddress: String

  \\"\\"\\"Expand options that include additional user details in the response.\\"\\"\\"
  expand: String
  groups: SimpleListWrapperGroupName_Input

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  key: String

  \\"\\"\\"
  The locale of the user. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  locale: String

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  name: String

  \\"\\"\\"The URL of the user.\\"\\"\\"
  self: URL

  \\"\\"\\"
  The time zone specified in the user's profile. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  timeZone: String
}

\\"\\"\\"
A user with details as permitted by the user's Atlassian Account privacy settings. However, be aware of these exceptions:

 *  User record deleted from Atlassian: This occurs as the result of a right to be forgotten request. In this case, \`displayName\` provides an indication and other parameters have default values or are blank (for example, email is blank).
 *  User record corrupted: This occurs as a results of events such as a server import and can only happen to deleted users. In this case, \`accountId\` returns *unknown* and all other parameters have fallback values.
 *  User record unavailable: This usually occurs due to an internal service outage. In this case, all parameters have fallback values.
\\"\\"\\"
input User_Input9 {
  \\"\\"\\"
  The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.
  \\"\\"\\"
  accountId: query_getAttachment_author_allOf_0_accountId
  accountType: query_getAttachment_author_allOf_0_accountType

  \\"\\"\\"Whether the user is active.\\"\\"\\"
  active: Boolean
  applicationRoles: SimpleListWrapperApplicationRole_Input
  avatarUrls: AvatarUrlsBean_Input

  \\"\\"\\"
  The display name of the user. Depending on the user’s privacy setting, this may return an alternative value.
  \\"\\"\\"
  displayName: String

  \\"\\"\\"
  The email address of the user. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  emailAddress: String

  \\"\\"\\"Expand options that include additional user details in the response.\\"\\"\\"
  expand: String
  groups: SimpleListWrapperGroupName_Input

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  key: String

  \\"\\"\\"
  The locale of the user. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  locale: String

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  name: String

  \\"\\"\\"The URL of the user.\\"\\"\\"
  self: URL

  \\"\\"\\"
  The time zone specified in the user's profile. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  timeZone: String
}

\\"\\"\\"
A user with details as permitted by the user's Atlassian Account privacy settings. However, be aware of these exceptions:

 *  User record deleted from Atlassian: This occurs as the result of a right to be forgotten request. In this case, \`displayName\` provides an indication and other parameters have default values or are blank (for example, email is blank).
 *  User record corrupted: This occurs as a results of events such as a server import and can only happen to deleted users. In this case, \`accountId\` returns *unknown* and all other parameters have fallback values.
 *  User record unavailable: This usually occurs due to an internal service outage. In this case, all parameters have fallback values.
\\"\\"\\"
input User_Input10 {
  \\"\\"\\"
  The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.
  \\"\\"\\"
  accountId: query_getAttachment_author_allOf_0_accountId
  accountType: query_getAttachment_author_allOf_0_accountType

  \\"\\"\\"Whether the user is active.\\"\\"\\"
  active: Boolean
  applicationRoles: SimpleListWrapperApplicationRole_Input
  avatarUrls: AvatarUrlsBean_Input

  \\"\\"\\"
  The display name of the user. Depending on the user’s privacy setting, this may return an alternative value.
  \\"\\"\\"
  displayName: String

  \\"\\"\\"
  The email address of the user. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  emailAddress: String

  \\"\\"\\"Expand options that include additional user details in the response.\\"\\"\\"
  expand: String
  groups: SimpleListWrapperGroupName_Input

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  key: String

  \\"\\"\\"
  The locale of the user. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  locale: String

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  name: String

  \\"\\"\\"The URL of the user.\\"\\"\\"
  self: URL

  \\"\\"\\"
  The time zone specified in the user's profile. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  timeZone: String
}

\\"\\"\\"
A user with details as permitted by the user's Atlassian Account privacy settings. However, be aware of these exceptions:

 *  User record deleted from Atlassian: This occurs as the result of a right to be forgotten request. In this case, \`displayName\` provides an indication and other parameters have default values or are blank (for example, email is blank).
 *  User record corrupted: This occurs as a results of events such as a server import and can only happen to deleted users. In this case, \`accountId\` returns *unknown* and all other parameters have fallback values.
 *  User record unavailable: This usually occurs due to an internal service outage. In this case, all parameters have fallback values.
\\"\\"\\"
input User_Input15 {
  \\"\\"\\"
  The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.
  \\"\\"\\"
  accountId: query_getAttachment_author_allOf_0_accountId
  accountType: query_getAttachment_author_allOf_0_accountType

  \\"\\"\\"Whether the user is active.\\"\\"\\"
  active: Boolean
  applicationRoles: SimpleListWrapperApplicationRole_Input
  avatarUrls: AvatarUrlsBean_Input

  \\"\\"\\"
  The display name of the user. Depending on the user’s privacy setting, this may return an alternative value.
  \\"\\"\\"
  displayName: String

  \\"\\"\\"
  The email address of the user. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  emailAddress: String

  \\"\\"\\"Expand options that include additional user details in the response.\\"\\"\\"
  expand: String
  groups: SimpleListWrapperGroupName_Input

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  key: String

  \\"\\"\\"
  The locale of the user. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  locale: String

  \\"\\"\\"
  This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  name: String

  \\"\\"\\"The URL of the user.\\"\\"\\"
  self: URL

  \\"\\"\\"
  The time zone specified in the user's profile. Depending on the user’s privacy setting, this may be returned as null.
  \\"\\"\\"
  timeZone: String
}

\\"\\"\\"Details about a project version.\\"\\"\\"
type Version {
  \\"\\"\\"
  Indicates that the version is archived. Optional when creating or updating a version.
  \\"\\"\\"
  archived: Boolean

  \\"\\"\\"
  The description of the version. Optional when creating or updating a version.
  \\"\\"\\"
  description: String

  \\"\\"\\"
  Use [expand](em>#expansion) to include additional information about version in the response. This parameter accepts a comma-separated list. Expand options include:
  
   *  \`operations\` Returns the list of operations available for this version.
   *  \`issuesstatus\` Returns the count of issues in this version for each of the status categories *to do*, *in progress*, *done*, and *unmapped*. The *unmapped* property contains a count of issues with a status other than *to do*, *in progress*, and *done*.
  
  Optional for create and update.
  \\"\\"\\"
  expand: String

  \\"\\"\\"The ID of the version.\\"\\"\\"
  id: String
  issuesStatusForFixVersion: VersionIssuesStatus

  \\"\\"\\"
  The URL of the self link to the version to which all unfixed issues are moved when a version is released. Not applicable when creating a version. Optional when updating a version.
  \\"\\"\\"
  moveUnfixedIssuesTo: URL

  \\"\\"\\"
  The unique name of the version. Required when creating a version. Optional when updating a version. The maximum length is 255 characters.
  \\"\\"\\"
  name: String

  \\"\\"\\"
  If the expand option \`operations\` is used, returns the list of operations available for this version.
  \\"\\"\\"
  operations: [SimpleLink]

  \\"\\"\\"Indicates that the version is overdue.\\"\\"\\"
  overdue: Boolean

  \\"\\"\\"Deprecated. Use \`projectId\`.\\"\\"\\"
  project: String

  \\"\\"\\"
  The ID of the project to which this version is attached. Required when creating a version. Not applicable when updating a version.
  \\"\\"\\"
  projectId: BigInt

  \\"\\"\\"
  The release date of the version. Expressed in ISO 8601 format (yyyy-mm-dd). Optional when creating or updating a version.
  \\"\\"\\"
  releaseDate: Date

  \\"\\"\\"
  Indicates that the version is released. If the version is released a request to release again is ignored. Not applicable when creating a version. Optional when updating a version.
  \\"\\"\\"
  released: Boolean

  \\"\\"\\"The URL of the version.\\"\\"\\"
  self: URL

  \\"\\"\\"
  The start date of the version. Expressed in ISO 8601 format (yyyy-mm-dd). Optional when creating or updating a version.
  \\"\\"\\"
  startDate: Date

  \\"\\"\\"
  The date on which work on this version is expected to finish, expressed in the instance's *Day/Month/Year Format* date format.
  \\"\\"\\"
  userReleaseDate: String

  \\"\\"\\"
  The date on which work on this version is expected to start, expressed in the instance's *Day/Month/Year Format* date format.
  \\"\\"\\"
  userStartDate: String
}

\\"\\"\\"Various counts of issues within a version.\\"\\"\\"
type VersionIssueCounts {
  \\"\\"\\"List of custom fields using the version.\\"\\"\\"
  customFieldUsage: [VersionUsageInCustomField]

  \\"\\"\\"Count of issues where a version custom field is set to the version.\\"\\"\\"
  issueCountWithCustomFieldsShowingVersion: BigInt

  \\"\\"\\"Count of issues where the \`affectedVersion\` is set to the version.\\"\\"\\"
  issuesAffectedCount: BigInt

  \\"\\"\\"Count of issues where the \`fixVersion\` is set to the version.\\"\\"\\"
  issuesFixedCount: BigInt

  \\"\\"\\"The URL of these count details.\\"\\"\\"
  self: URL
}

\\"\\"\\"Counts of the number of issues in various statuses.\\"\\"\\"
type VersionIssuesStatus {
  additionalProperties: JSON

  \\"\\"\\"Count of issues with status *done*.\\"\\"\\"
  done: BigInt

  \\"\\"\\"Count of issues with status *in progress*.\\"\\"\\"
  inProgress: BigInt

  \\"\\"\\"Count of issues with status *to do*.\\"\\"\\"
  toDo: BigInt

  \\"\\"\\"
  Count of issues with a status other than *to do*, *in progress*, and *done*.
  \\"\\"\\"
  unmapped: BigInt
}

\\"\\"\\"Counts of the number of issues in various statuses.\\"\\"\\"
scalar VersionIssuesStatus_Input

input VersionMoveBean_Input {
  \\"\\"\\"
  The URL (self link) of the version after which to place the moved version. Cannot be used with \`position\`.
  \\"\\"\\"
  after: URL
  position: mutationInput_moveVersion_position
}

\\"\\"\\"Count of a version's unresolved issues.\\"\\"\\"
type VersionUnresolvedIssuesCount {
  \\"\\"\\"Count of issues.\\"\\"\\"
  issuesCount: BigInt

  \\"\\"\\"Count of unresolved issues.\\"\\"\\"
  issuesUnresolvedCount: BigInt

  \\"\\"\\"The URL of these count details.\\"\\"\\"
  self: URL
}

\\"\\"\\"List of custom fields using the version.\\"\\"\\"
type VersionUsageInCustomField {
  \\"\\"\\"The ID of the custom field.\\"\\"\\"
  customFieldId: BigInt

  \\"\\"\\"The name of the custom field.\\"\\"\\"
  fieldName: String

  \\"\\"\\"Count of the issues where the custom field contains the version.\\"\\"\\"
  issueCountWithVersionInCustomField: BigInt
}

\\"\\"\\"Details about a project version.\\"\\"\\"
input Version_Input {
  \\"\\"\\"
  Indicates that the version is archived. Optional when creating or updating a version.
  \\"\\"\\"
  archived: Boolean

  \\"\\"\\"
  The description of the version. Optional when creating or updating a version.
  \\"\\"\\"
  description: String

  \\"\\"\\"
  Use [expand](em>#expansion) to include additional information about version in the response. This parameter accepts a comma-separated list. Expand options include:
  
   *  \`operations\` Returns the list of operations available for this version.
   *  \`issuesstatus\` Returns the count of issues in this version for each of the status categories *to do*, *in progress*, *done*, and *unmapped*. The *unmapped* property contains a count of issues with a status other than *to do*, *in progress*, and *done*.
  
  Optional for create and update.
  \\"\\"\\"
  expand: String

  \\"\\"\\"The ID of the version.\\"\\"\\"
  id: String
  issuesStatusForFixVersion: VersionIssuesStatus_Input

  \\"\\"\\"
  The URL of the self link to the version to which all unfixed issues are moved when a version is released. Not applicable when creating a version. Optional when updating a version.
  \\"\\"\\"
  moveUnfixedIssuesTo: URL

  \\"\\"\\"
  The unique name of the version. Required when creating a version. Optional when updating a version. The maximum length is 255 characters.
  \\"\\"\\"
  name: String

  \\"\\"\\"
  If the expand option \`operations\` is used, returns the list of operations available for this version.
  \\"\\"\\"
  operations: [SimpleLink_Input]

  \\"\\"\\"Indicates that the version is overdue.\\"\\"\\"
  overdue: Boolean

  \\"\\"\\"Deprecated. Use \`projectId\`.\\"\\"\\"
  project: String

  \\"\\"\\"
  The ID of the project to which this version is attached. Required when creating a version. Not applicable when updating a version.
  \\"\\"\\"
  projectId: BigInt

  \\"\\"\\"
  The release date of the version. Expressed in ISO 8601 format (yyyy-mm-dd). Optional when creating or updating a version.
  \\"\\"\\"
  releaseDate: Date

  \\"\\"\\"
  Indicates that the version is released. If the version is released a request to release again is ignored. Not applicable when creating a version. Optional when updating a version.
  \\"\\"\\"
  released: Boolean

  \\"\\"\\"The URL of the version.\\"\\"\\"
  self: URL

  \\"\\"\\"
  The start date of the version. Expressed in ISO 8601 format (yyyy-mm-dd). Optional when creating or updating a version.
  \\"\\"\\"
  startDate: Date

  \\"\\"\\"
  The date on which work on this version is expected to finish, expressed in the instance's *Day/Month/Year Format* date format.
  \\"\\"\\"
  userReleaseDate: String

  \\"\\"\\"
  The date on which work on this version is expected to start, expressed in the instance's *Day/Month/Year Format* date format.
  \\"\\"\\"
  userStartDate: String
}

\\"\\"\\"The group or role to which this item is visible.\\"\\"\\"
type Visibility {
  additionalProperties: JSON

  \\"\\"\\"
  The ID of the group or the name of the role that visibility of this item is restricted to.
  \\"\\"\\"
  identifier: String
  type: query_getComments_comments_items_visibility_allOf_0_type

  \\"\\"\\"
  The name of the group or role that visibility of this item is restricted to. Please note that the name of a group is mutable, to reliably identify a group use \`identifier\`.
  \\"\\"\\"
  value: String
}

\\"\\"\\"The group or role to which this item is visible.\\"\\"\\"
type Visibility2 {
  additionalProperties: JSON

  \\"\\"\\"
  The ID of the group or the name of the role that visibility of this item is restricted to.
  \\"\\"\\"
  identifier: String
  type: query_getComments_comments_items_visibility_allOf_0_type

  \\"\\"\\"
  The name of the group or role that visibility of this item is restricted to. Please note that the name of a group is mutable, to reliably identify a group use \`identifier\`.
  \\"\\"\\"
  value: String
}

\\"\\"\\"Represents empty values\\"\\"\\"
scalar Void

type Void_container {
  Void: Void
}

\\"\\"\\"The details of votes on an issue.\\"\\"\\"
type Votes {
  \\"\\"\\"Whether the user making this request has voted on the issue.\\"\\"\\"
  hasVoted: Boolean

  \\"\\"\\"The URL of these issue vote details.\\"\\"\\"
  self: URL

  \\"\\"\\"
  List of the users who have voted on this issue. An empty list is returned when the calling user doesn't have the *View voters and watchers* project permission.
  \\"\\"\\"
  voters: [User9]

  \\"\\"\\"The number of votes on the issue.\\"\\"\\"
  votes: BigInt
}

\\"\\"\\"The details of watchers on an issue.\\"\\"\\"
type Watchers {
  \\"\\"\\"Whether the calling user is watching this issue.\\"\\"\\"
  isWatching: Boolean

  \\"\\"\\"The URL of these issue watcher details.\\"\\"\\"
  self: String

  \\"\\"\\"The number of users watching this issue.\\"\\"\\"
  watchCount: Int

  \\"\\"\\"Details of the users watching this issue.\\"\\"\\"
  watchers: [UserDetails]
}

\\"\\"\\"A webhook.\\"\\"\\"
type Webhook {
  \\"\\"\\"The Jira events that trigger the webhook.\\"\\"\\"
  events: [query_getDynamicWebhooksForApp_oneOf_0_values_items_events_items]!

  \\"\\"\\"
  The date after which the webhook is no longer sent. Use [Extend webhook life](https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-webhooks/#api-rest-api-3-webhook-refresh-put) to extend the date.
  \\"\\"\\"
  expirationDate: BigInt

  \\"\\"\\"
  A list of field IDs. When the issue changelog contains any of the fields, the webhook \`jira:issue_updated\` is sent. If this parameter is not present, the app is notified about all field updates.
  \\"\\"\\"
  fieldIdsFilter: [String]

  \\"\\"\\"The ID of the webhook.\\"\\"\\"
  id: BigInt!

  \\"\\"\\"
  A list of issue property keys. A change of those issue properties triggers the \`issue_property_set\` or \`issue_property_deleted\` webhooks. If this parameter is not present, the app is notified about all issue property updates.
  \\"\\"\\"
  issuePropertyKeysFilter: [String]

  \\"\\"\\"The JQL filter that specifies which issues the webhook is sent for.\\"\\"\\"
  jqlFilter: String!
}

\\"\\"\\"A list of webhooks.\\"\\"\\"
input WebhookDetails_Input {
  \\"\\"\\"The Jira events that trigger the webhook.\\"\\"\\"
  events: [query_getDynamicWebhooksForApp_oneOf_0_values_items_events_items]!

  \\"\\"\\"
  A list of field IDs. When the issue changelog contains any of the fields, the webhook \`jira:issue_updated\` is sent. If this parameter is not present, the app is notified about all field updates.
  \\"\\"\\"
  fieldIdsFilter: [String]

  \\"\\"\\"
  A list of issue property keys. A change of those issue properties triggers the \`issue_property_set\` or \`issue_property_deleted\` webhooks. If this parameter is not present, the app is notified about all issue property updates.
  \\"\\"\\"
  issuePropertyKeysFilter: [String]

  \\"\\"\\"
  The JQL filter that specifies which issues the webhook is sent for. Only a subset of JQL can be used. The supported elements are:
  
   *  Fields: \`issueKey\`, \`project\`, \`issuetype\`, \`status\`, \`assignee\`, \`reporter\`, \`issue.property\`, and \`cf[id]\`. For custom fields (\`cf[id]\`), only the epic label custom field is supported.\\".
   *  Operators: \`=\`, \`!=\`, \`IN\`, and \`NOT IN\`.
  \\"\\"\\"
  jqlFilter: String!
}

\\"\\"\\"Details of webhooks to register.\\"\\"\\"
input WebhookRegistrationDetails_Input {
  \\"\\"\\"
  The URL that specifies where to send the webhooks. This URL must use the same base URL as the Connect app. Only a single URL per app is allowed to be registered.
  \\"\\"\\"
  url: String!

  \\"\\"\\"A list of webhooks.\\"\\"\\"
  webhooks: [WebhookDetails_Input]!
}

\\"\\"\\"The date the refreshed webhooks expire.\\"\\"\\"
type WebhooksExpirationDate {
  \\"\\"\\"The expiration date of all the refreshed webhooks.\\"\\"\\"
  expirationDate: BigInt!
}

\\"\\"\\"Details about a workflow.\\"\\"\\"
type Workflow {
  \\"\\"\\"The creation date of the workflow.\\"\\"\\"
  created: DateTime

  \\"\\"\\"The description of the workflow.\\"\\"\\"
  description: String!

  \\"\\"\\"Whether the workflow has a draft version.\\"\\"\\"
  hasDraftWorkflow: Boolean
  id: PublishedWorkflowId!

  \\"\\"\\"Whether this is the default workflow.\\"\\"\\"
  isDefault: Boolean
  operations: WorkflowOperations

  \\"\\"\\"The projects the workflow is assigned to, through workflow schemes.\\"\\"\\"
  projects: [ProjectDetails2]

  \\"\\"\\"The workflow schemes the workflow is assigned to.\\"\\"\\"
  schemes: [WorkflowSchemeIdName]

  \\"\\"\\"The statuses of the workflow.\\"\\"\\"
  statuses: [WorkflowStatus]

  \\"\\"\\"The transitions of the workflow.\\"\\"\\"
  transitions: [Transition]

  \\"\\"\\"The last edited date of the workflow.\\"\\"\\"
  updated: DateTime
}

\\"\\"\\"
A compound workflow transition rule condition. This object returns \`nodeType\` as \`compound\`.
\\"\\"\\"
type WorkflowCompoundCondition {
  \\"\\"\\"The list of workflow conditions.\\"\\"\\"
  conditions: [JSON]!
  nodeType: String!
  operator: query_getWorkflowsPaginated_oneOf_0_values_items_transitions_items_rules_conditionsTree_oneOf_1_operator!
}

\\"\\"\\"The workflow transition rule conditions tree.\\"\\"\\"
union WorkflowCondition = WorkflowCompoundCondition | WorkflowSimpleCondition

\\"\\"\\"The classic workflow identifiers.\\"\\"\\"
type WorkflowIDs {
  \\"\\"\\"The entity ID of the workflow.\\"\\"\\"
  entityId: String

  \\"\\"\\"The name of the workflow.\\"\\"\\"
  name: String!
}

\\"\\"\\"Properties that identify a workflow.\\"\\"\\"
type WorkflowId {
  \\"\\"\\"Whether the workflow is in the draft state.\\"\\"\\"
  draft: Boolean!

  \\"\\"\\"The name of the workflow.\\"\\"\\"
  name: String!
}

\\"\\"\\"Properties that identify a workflow.\\"\\"\\"
input WorkflowId_Input {
  \\"\\"\\"Whether the workflow is in the draft state.\\"\\"\\"
  draft: Boolean!

  \\"\\"\\"The name of the workflow.\\"\\"\\"
  name: String!
}

\\"\\"\\"Operations allowed on a workflow\\"\\"\\"
type WorkflowOperations {
  \\"\\"\\"Whether the workflow can be deleted.\\"\\"\\"
  canDelete: Boolean!

  \\"\\"\\"Whether the workflow can be updated.\\"\\"\\"
  canEdit: Boolean!
}

\\"\\"\\"A collection of transition rules.\\"\\"\\"
type WorkflowRules {
  conditionsTree: WorkflowCondition

  \\"\\"\\"The workflow post functions.\\"\\"\\"
  postFunctions: [WorkflowTransitionRule]

  \\"\\"\\"The workflow validators.\\"\\"\\"
  validators: [WorkflowTransitionRule]
}

\\"\\"\\"Details of workflow transition rules.\\"\\"\\"
type WorkflowRulesSearchDetails {
  \\"\\"\\"
  List of workflow rule IDs that do not belong to the workflow or can not be found.
  \\"\\"\\"
  invalidRules: [String]

  \\"\\"\\"List of valid workflow transition rules.\\"\\"\\"
  validRules: [WorkflowTransitionRules]

  \\"\\"\\"The workflow ID.\\"\\"\\"
  workflowEntityId: String
}

\\"\\"\\"Details of the workflow and its transition rules.\\"\\"\\"
input WorkflowRulesSearch_Input {
  \\"\\"\\"
  Use expand to include additional information in the response. This parameter accepts \`transition\` which, for each rule, returns information about the transition the rule is assigned to.
  \\"\\"\\"
  expand: String

  \\"\\"\\"The list of workflow rule IDs.\\"\\"\\"
  ruleIds: [String]!

  \\"\\"\\"The workflow ID.\\"\\"\\"
  workflowEntityId: String!
}

\\"\\"\\"Details about a workflow scheme.\\"\\"\\"
type WorkflowScheme {
  \\"\\"\\"
  The name of the default workflow for the workflow scheme. The default workflow has *All Unassigned Issue Types* assigned to it in Jira. If \`defaultWorkflow\` is not specified when creating a workflow scheme, it is set to *Jira Workflow (jira)*.
  \\"\\"\\"
  defaultWorkflow: String

  \\"\\"\\"The description of the workflow scheme.\\"\\"\\"
  description: String

  \\"\\"\\"Whether the workflow scheme is a draft or not.\\"\\"\\"
  draft: Boolean

  \\"\\"\\"The ID of the workflow scheme.\\"\\"\\"
  id: BigInt
  issueTypeMappings: query_getAllWorkflowSchemes_values_items_issueTypeMappings
  issueTypes: IssueTypeDetails

  \\"\\"\\"
  The date-time that the draft workflow scheme was last modified. A modification is a change to the issue type-project mappings only. This property does not apply to non-draft workflows.
  \\"\\"\\"
  lastModified: String
  lastModifiedUser: User15

  \\"\\"\\"
  The name of the workflow scheme. The name must be unique. The maximum length is 255 characters. Required when creating a workflow scheme.
  \\"\\"\\"
  name: String

  \\"\\"\\"
  For draft workflow schemes, this property is the name of the default workflow for the original workflow scheme. The default workflow has *All Unassigned Issue Types* assigned to it in Jira.
  \\"\\"\\"
  originalDefaultWorkflow: String
  originalIssueTypeMappings: query_getAllWorkflowSchemes_values_items_originalIssueTypeMappings
  self: URL

  \\"\\"\\"
  Whether to create or update a draft workflow scheme when updating an active workflow scheme. An active workflow scheme is a workflow scheme that is used by at least one project. The following examples show how this property works:
  
   *  Update an active workflow scheme with \`updateDraftIfNeeded\` set to \`true\`: If a draft workflow scheme exists, it is updated. Otherwise, a draft workflow scheme is created.
   *  Update an active workflow scheme with \`updateDraftIfNeeded\` set to \`false\`: An error is returned, as active workflow schemes cannot be updated.
   *  Update an inactive workflow scheme with \`updateDraftIfNeeded\` set to \`true\`: The workflow scheme is updated, as inactive workflow schemes do not require drafts to update.
  
  Defaults to \`false\`.
  \\"\\"\\"
  updateDraftIfNeeded: Boolean
}

\\"\\"\\"Details about a workflow scheme.\\"\\"\\"
type WorkflowScheme2 {
  \\"\\"\\"
  The name of the default workflow for the workflow scheme. The default workflow has *All Unassigned Issue Types* assigned to it in Jira. If \`defaultWorkflow\` is not specified when creating a workflow scheme, it is set to *Jira Workflow (jira)*.
  \\"\\"\\"
  defaultWorkflow: String

  \\"\\"\\"The description of the workflow scheme.\\"\\"\\"
  description: String

  \\"\\"\\"Whether the workflow scheme is a draft or not.\\"\\"\\"
  draft: Boolean

  \\"\\"\\"The ID of the workflow scheme.\\"\\"\\"
  id: BigInt
  issueTypeMappings: query_getAllWorkflowSchemes_values_items_issueTypeMappings
  issueTypes: IssueTypeDetails

  \\"\\"\\"
  The date-time that the draft workflow scheme was last modified. A modification is a change to the issue type-project mappings only. This property does not apply to non-draft workflows.
  \\"\\"\\"
  lastModified: String
  lastModifiedUser: User15

  \\"\\"\\"
  The name of the workflow scheme. The name must be unique. The maximum length is 255 characters. Required when creating a workflow scheme.
  \\"\\"\\"
  name: String

  \\"\\"\\"
  For draft workflow schemes, this property is the name of the default workflow for the original workflow scheme. The default workflow has *All Unassigned Issue Types* assigned to it in Jira.
  \\"\\"\\"
  originalDefaultWorkflow: String
  originalIssueTypeMappings: query_getAllWorkflowSchemes_values_items_originalIssueTypeMappings
  self: URL

  \\"\\"\\"
  Whether to create or update a draft workflow scheme when updating an active workflow scheme. An active workflow scheme is a workflow scheme that is used by at least one project. The following examples show how this property works:
  
   *  Update an active workflow scheme with \`updateDraftIfNeeded\` set to \`true\`: If a draft workflow scheme exists, it is updated. Otherwise, a draft workflow scheme is created.
   *  Update an active workflow scheme with \`updateDraftIfNeeded\` set to \`false\`: An error is returned, as active workflow schemes cannot be updated.
   *  Update an inactive workflow scheme with \`updateDraftIfNeeded\` set to \`true\`: The workflow scheme is updated, as inactive workflow schemes do not require drafts to update.
  
  Defaults to \`false\`.
  \\"\\"\\"
  updateDraftIfNeeded: Boolean
}

\\"\\"\\"A workflow scheme along with a list of projects that use it.\\"\\"\\"
type WorkflowSchemeAssociations {
  \\"\\"\\"The list of projects that use the workflow scheme.\\"\\"\\"
  projectIds: [String]!
  workflowScheme: WorkflowScheme2!
}

\\"\\"\\"The ID and the name of the workflow scheme.\\"\\"\\"
type WorkflowSchemeIdName {
  \\"\\"\\"The ID of the workflow scheme.\\"\\"\\"
  id: String!

  \\"\\"\\"The name of the workflow scheme.\\"\\"\\"
  name: String!
}

\\"\\"\\"An associated workflow scheme and project.\\"\\"\\"
input WorkflowSchemeProjectAssociation_Input {
  \\"\\"\\"The ID of the project.\\"\\"\\"
  projectId: String!

  \\"\\"\\"
  The ID of the workflow scheme. If the workflow scheme ID is \`null\`, the operation assigns the default workflow scheme.
  \\"\\"\\"
  workflowSchemeId: String
}

\\"\\"\\"Details about a workflow scheme.\\"\\"\\"
input WorkflowScheme_Input {
  \\"\\"\\"
  The name of the default workflow for the workflow scheme. The default workflow has *All Unassigned Issue Types* assigned to it in Jira. If \`defaultWorkflow\` is not specified when creating a workflow scheme, it is set to *Jira Workflow (jira)*.
  \\"\\"\\"
  defaultWorkflow: String

  \\"\\"\\"The description of the workflow scheme.\\"\\"\\"
  description: String

  \\"\\"\\"Whether the workflow scheme is a draft or not.\\"\\"\\"
  draft: Boolean

  \\"\\"\\"The ID of the workflow scheme.\\"\\"\\"
  id: BigInt
  issueTypeMappings: query_getAllWorkflowSchemes_values_items_issueTypeMappings_Input
  issueTypes: IssueTypeDetails_Input

  \\"\\"\\"
  The date-time that the draft workflow scheme was last modified. A modification is a change to the issue type-project mappings only. This property does not apply to non-draft workflows.
  \\"\\"\\"
  lastModified: String
  lastModifiedUser: User_Input15

  \\"\\"\\"
  The name of the workflow scheme. The name must be unique. The maximum length is 255 characters. Required when creating a workflow scheme.
  \\"\\"\\"
  name: String

  \\"\\"\\"
  For draft workflow schemes, this property is the name of the default workflow for the original workflow scheme. The default workflow has *All Unassigned Issue Types* assigned to it in Jira.
  \\"\\"\\"
  originalDefaultWorkflow: String
  originalIssueTypeMappings: query_getAllWorkflowSchemes_values_items_originalIssueTypeMappings_Input
  self: URL

  \\"\\"\\"
  Whether to create or update a draft workflow scheme when updating an active workflow scheme. An active workflow scheme is a workflow scheme that is used by at least one project. The following examples show how this property works:
  
   *  Update an active workflow scheme with \`updateDraftIfNeeded\` set to \`true\`: If a draft workflow scheme exists, it is updated. Otherwise, a draft workflow scheme is created.
   *  Update an active workflow scheme with \`updateDraftIfNeeded\` set to \`false\`: An error is returned, as active workflow schemes cannot be updated.
   *  Update an inactive workflow scheme with \`updateDraftIfNeeded\` set to \`true\`: The workflow scheme is updated, as inactive workflow schemes do not require drafts to update.
  
  Defaults to \`false\`.
  \\"\\"\\"
  updateDraftIfNeeded: Boolean
}

\\"\\"\\"
A workflow transition rule condition. This object returns \`nodeType\` as \`simple\`.
\\"\\"\\"
type WorkflowSimpleCondition {
  configuration: query_getWorkflowsPaginated_oneOf_0_values_items_transitions_items_rules_conditionsTree_oneOf_0_configuration
  nodeType: String!

  \\"\\"\\"The type of the transition rule.\\"\\"\\"
  type: String!
}

\\"\\"\\"Details of a workflow status.\\"\\"\\"
type WorkflowStatus {
  \\"\\"\\"The ID of the issue status.\\"\\"\\"
  id: String!

  \\"\\"\\"The name of the status in the workflow.\\"\\"\\"
  name: String!
  properties: query_getWorkflowsPaginated_oneOf_0_values_items_statuses_items_additionalProperties
}

\\"\\"\\"A workflow transition.\\"\\"\\"
type WorkflowTransition {
  \\"\\"\\"The transition ID.\\"\\"\\"
  id: Int!

  \\"\\"\\"The transition name.\\"\\"\\"
  name: String!
}

\\"\\"\\"Details about the server Jira is running on.\\"\\"\\"
type WorkflowTransitionProperty {
  additionalProperties: JSON

  \\"\\"\\"The ID of the transition property.\\"\\"\\"
  id: String

  \\"\\"\\"
  The key of the transition property. Also known as the name of the transition property.
  \\"\\"\\"
  key: String

  \\"\\"\\"The value of the transition property.\\"\\"\\"
  value: String!
}

\\"\\"\\"Details about the server Jira is running on.\\"\\"\\"
scalar WorkflowTransitionProperty_Input

\\"\\"\\"A workflow transition rule.\\"\\"\\"
type WorkflowTransitionRule {
  configuration: query_getWorkflowsPaginated_oneOf_0_values_items_transitions_items_rules_validators_items_configuration

  \\"\\"\\"The type of the transition rule.\\"\\"\\"
  type: String!
}

\\"\\"\\"A workflow with transition rules.\\"\\"\\"
type WorkflowTransitionRules {
  \\"\\"\\"The list of conditions within the workflow.\\"\\"\\"
  conditions: [ConnectWorkflowTransitionRule]

  \\"\\"\\"The list of post functions within the workflow.\\"\\"\\"
  postFunctions: [ConnectWorkflowTransitionRule]

  \\"\\"\\"The list of validators within the workflow.\\"\\"\\"
  validators: [ConnectWorkflowTransitionRule]
  workflowId: WorkflowId!
}

\\"\\"\\"Details about a workflow configuration update request.\\"\\"\\"
input WorkflowTransitionRulesDetails_Input {
  workflowId: WorkflowId_Input!

  \\"\\"\\"The list of connect workflow rule IDs.\\"\\"\\"
  workflowRuleIds: [String]!
}

\\"\\"\\"
Details of any errors encountered while updating workflow transition rules for a workflow.
\\"\\"\\"
type WorkflowTransitionRulesUpdateErrorDetails {
  ruleUpdateErrors: mutation_updateWorkflowTransitionRuleConfigurations_oneOf_0_updateResults_items_ruleUpdateErrors!

  \\"\\"\\"
  The list of errors that specify why the workflow update failed. The workflow was not updated if the list contains any entries.
  \\"\\"\\"
  updateErrors: [String]!
  workflowId: WorkflowId!
}

\\"\\"\\"
Details of any errors encountered while updating workflow transition rules.
\\"\\"\\"
type WorkflowTransitionRulesUpdateErrors {
  \\"\\"\\"A list of workflows.\\"\\"\\"
  updateResults: [WorkflowTransitionRulesUpdateErrorDetails]!
}

\\"\\"\\"Details about a workflow configuration update request.\\"\\"\\"
input WorkflowTransitionRulesUpdate_Input {
  \\"\\"\\"The list of workflows with transition rules to update.\\"\\"\\"
  workflows: [WorkflowTransitionRules_Input]!
}

\\"\\"\\"A workflow with transition rules.\\"\\"\\"
input WorkflowTransitionRules_Input {
  \\"\\"\\"The list of conditions within the workflow.\\"\\"\\"
  conditions: [ConnectWorkflowTransitionRule_Input]

  \\"\\"\\"The list of post functions within the workflow.\\"\\"\\"
  postFunctions: [ConnectWorkflowTransitionRule_Input]

  \\"\\"\\"The list of validators within the workflow.\\"\\"\\"
  validators: [ConnectWorkflowTransitionRule_Input]
  workflowId: WorkflowId_Input!
}

\\"\\"\\"A workflow transition.\\"\\"\\"
input WorkflowTransition_Input {
  \\"\\"\\"The transition ID.\\"\\"\\"
  id: Int!

  \\"\\"\\"The transition name.\\"\\"\\"
  name: String!
}

\\"\\"\\"Details of workflows and their transition rules to delete.\\"\\"\\"
input WorkflowsWithTransitionRulesDetails_Input {
  \\"\\"\\"The list of workflows with transition rules to delete.\\"\\"\\"
  workflows: [WorkflowTransitionRulesDetails_Input]!
}

\\"\\"\\"Details of a worklog.\\"\\"\\"
type Worklog {
  additionalProperties: JSON
  author: UserDetails5
  comment: query_getIssueWorklog_worklogs_items_comment

  \\"\\"\\"The datetime on which the worklog was created.\\"\\"\\"
  created: DateTime

  \\"\\"\\"The ID of the worklog record.\\"\\"\\"
  id: String

  \\"\\"\\"The ID of the issue this worklog is for.\\"\\"\\"
  issueId: String

  \\"\\"\\"
  Details of properties for the worklog. Optional when creating or updating a worklog.
  \\"\\"\\"
  properties: [EntityProperty]

  \\"\\"\\"The URL of the worklog item.\\"\\"\\"
  self: URL

  \\"\\"\\"
  The datetime on which the worklog effort was started. Required when creating a worklog. Optional when updating a worklog.
  \\"\\"\\"
  started: DateTime

  \\"\\"\\"
  The time spent working on the issue as days (\\\\#d), hours (\\\\#h), or minutes (\\\\#m or \\\\#). Required when creating a worklog if \`timeSpentSeconds\` isn't provided. Optional when updating a worklog. Cannot be provided if \`timeSpentSecond\` is provided.
  \\"\\"\\"
  timeSpent: String

  \\"\\"\\"
  The time in seconds spent working on the issue. Required when creating a worklog if \`timeSpent\` isn't provided. Optional when updating a worklog. Cannot be provided if \`timeSpent\` is provided.
  \\"\\"\\"
  timeSpentSeconds: BigInt
  updateAuthor: UserDetails6

  \\"\\"\\"The datetime on which the worklog was last updated.\\"\\"\\"
  updated: DateTime
  visibility: Visibility2
}

input WorklogIdsRequestBean_Input {
  \\"\\"\\"A list of worklog IDs.\\"\\"\\"
  ids: [BigInt]!
}

\\"\\"\\"Details of a worklog.\\"\\"\\"
scalar Worklog_Input

union addGadget_response = DashboardGadget | ErrorCollection

type addIssueTypesToContext_400_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

union addIssueTypesToContext_response = addIssueTypesToContext_400_response | createCustomFieldContext_409_response | getContextsForField_403_response | setDefaultValues_404_response

type addIssueTypesToIssueTypeScheme_400_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

type addIssueTypesToIssueTypeScheme_404_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

union addIssueTypesToIssueTypeScheme_response = addIssueTypesToIssueTypeScheme_400_response | addIssueTypesToIssueTypeScheme_404_response | createIssueTypeScheme_403_response

union analyseExpression_response = ErrorCollection | JiraExpressionsAnalysis

type appendMappingsForIssueTypeScreenScheme_400_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

union appendMappingsForIssueTypeScreenScheme_response = appendMappingsForIssueTypeScreenScheme_400_response | assignIssueTypeScreenSchemeToProject_404_response | createCustomFieldContext_409_response

type assignFieldConfigurationSchemeToProject_400_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

type assignFieldConfigurationSchemeToProject_404_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

union assignFieldConfigurationSchemeToProject_response = assignFieldConfigurationSchemeToProject_400_response | assignFieldConfigurationSchemeToProject_404_response | createFieldConfigurationScheme_403_response

type assignIssueTypeSchemeToProject_400_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

type assignIssueTypeSchemeToProject_404_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

union assignIssueTypeSchemeToProject_response = assignIssueTypeSchemeToProject_400_response | assignIssueTypeSchemeToProject_404_response | createIssueTypeScheme_403_response

type assignIssueTypeScreenSchemeToProject_400_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

type assignIssueTypeScreenSchemeToProject_404_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

union assignIssueTypeScreenSchemeToProject_response = assignIssueTypeScreenSchemeToProject_400_response | assignIssueTypeScreenSchemeToProject_404_response | createIssueTypeScreenScheme_403_response

type assignProjectsToCustomFieldContext_400_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

union assignProjectsToCustomFieldContext_response = assignProjectsToCustomFieldContext_400_response | getContextsForField_403_response | setDefaultValues_404_response

type assignSchemeToProject_400_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

type assignSchemeToProject_404_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

union assignSchemeToProject_response = assignSchemeToProject_400_response | assignSchemeToProject_404_response | getWorkflowSchemeProjectAssociations_403_response

union bulkDeleteIssueProperty_response = ErrorCollection

type bulkGetGroups_403_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

input bulkGetGroups_request_Input {
  \\"\\"\\"
  The ID of a group. To specify multiple IDs, pass multiple \`groupId\` parameters. For example, \`groupId=5b10a2844c20165700ede21g&groupId=5b10ac8d82e05b22cc7d4ef5\`.
  \\"\\"\\"
  groupId: [String]

  \\"\\"\\"
  The name of a group. To specify multiple names, pass multiple \`groupName\` parameters. For example, \`groupName=administrators&groupName=jira-software-users\`.
  \\"\\"\\"
  groupName: [String]

  \\"\\"\\"The maximum number of items to return per page.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"
  The index of the first item to return in a page of results (page offset).
  \\"\\"\\"
  startAt: BigInt
}

union bulkGetGroups_response = PageBeanGroupDetails | bulkGetGroups_403_response

input bulkGetUsersMigration_request_Input {
  \\"\\"\\"
  Key of a user. To specify multiple users, pass multiple copies of this parameter. For example, \`key=fred&key=barney\`. Required if \`username\` isn't provided. Cannot be provided if \`username\` is present.
  \\"\\"\\"
  key: [String]

  \\"\\"\\"The maximum number of items to return per page.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"
  The index of the first item to return in a page of results (page offset).
  \\"\\"\\"
  startAt: BigInt

  \\"\\"\\"
  Username of a user. To specify multiple users, pass multiple copies of this parameter. For example, \`username=fred&username=barney\`. Required if \`key\` isn't provided. Cannot be provided if \`key\` is present.
  \\"\\"\\"
  username: [String]
}

input bulkGetUsers_request_Input {
  \\"\\"\\"
  The account ID of a user. To specify multiple users, pass multiple \`accountId\` parameters. For example, \`accountId=5b10a2844c20165700ede21g&accountId=5b10ac8d82e05b22cc7d4ef5\`.
  \\"\\"\\"
  accountId: [queryInput_bulkGetUsers_accountId_items]!

  \\"\\"\\"
  This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  key: [String]

  \\"\\"\\"The maximum number of items to return per page.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"
  The index of the first item to return in a page of results (page offset).
  \\"\\"\\"
  startAt: BigInt

  \\"\\"\\"
  This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  username: [String]
}

union bulkSetIssuePropertiesByIssue_response = ErrorCollection

union bulkSetIssueProperty_response = ErrorCollection

union bulkSetIssuesPropertiesList_response = ErrorCollection

union cancelTask_response = String_container

union copyDashboard_response = Dashboard | ErrorCollection

type createCustomFieldContext_409_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

union createCustomFieldContext_response = CreateCustomFieldContext | createCustomFieldContext_409_response

union createCustomFieldOption_response = CustomFieldCreatedContextOptionsList | getContextsForField_404_response | getOptionsForContext_400_response | getOptionsForContext_403_response

union createDashboard_response = Dashboard | ErrorCollection

type createFieldConfigurationScheme_400_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

type createFieldConfigurationScheme_403_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

union createFieldConfigurationScheme_response = FieldConfigurationScheme | createFieldConfigurationScheme_400_response | createFieldConfigurationScheme_403_response

type createIssueTypeScheme_400_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

type createIssueTypeScheme_403_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

type createIssueTypeScheme_409_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

union createIssueTypeScheme_response = IssueTypeSchemeID | createIssueTypeScheme_400_response | createIssueTypeScheme_403_response | createIssueTypeScheme_409_response

type createIssueTypeScreenScheme_400_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

type createIssueTypeScreenScheme_403_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

type createIssueTypeScreenScheme_404_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

union createIssueTypeScreenScheme_response = IssueTypeScreenSchemeId | createCustomFieldContext_409_response | createIssueTypeScreenScheme_400_response | createIssueTypeScreenScheme_403_response | createIssueTypeScreenScheme_404_response

union createIssue_response = CreatedIssue | ErrorCollection

union createIssues_response = CreatedIssues

type createOrUpdateRemoteIssueLink_400_response {
  errorMessages: [JSON]
  errors: mutation_createOrUpdateRemoteIssueLink_oneOf_2_errors
}

union createOrUpdateRemoteIssueLink_response = RemoteIssueLinkIdentifies | createOrUpdateRemoteIssueLink_400_response

union createPriority_response = ErrorCollection | PriorityId

type createScreenScheme_403_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

type createScreenScheme_404_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

union createScreenScheme_response = ScreenSchemeId | createIssueTypeScheme_409_response | createScreenScheme_403_response | createScreenScheme_404_response

type createScreen_400_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

type createScreen_403_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

union createScreen_response = Screen | createScreen_400_response | createScreen_403_response

union createStatuses_response = JiraStatus | updateStatuses_400_response

type createWorkflow_400_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

type createWorkflow_403_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

type createWorkflow_404_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

union createWorkflow_response = WorkflowIDs | createWorkflow_400_response | createWorkflow_403_response | createWorkflow_404_response

union deleteCustomFieldContext_response = getContextsForField_403_response | setDefaultValues_404_response | updateCustomFieldContext_400_response

union deleteCustomFieldOption_response = Void_container | getContextsForField_404_response | getOptionsForContext_400_response | getOptionsForContext_403_response

union deleteCustomField_response = ErrorCollection | TaskProgressBeanObject

union deleteDashboard_response = ErrorCollection | Void_container

type deleteInactiveWorkflow_400_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

type deleteInactiveWorkflow_404_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

union deleteInactiveWorkflow_response = Void_container | createWorkflow_403_response | deleteInactiveWorkflow_400_response | deleteInactiveWorkflow_404_response

type deleteIssueTypeScheme_400_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

union deleteIssueTypeScheme_response = assignIssueTypeSchemeToProject_404_response | createIssueTypeScheme_403_response | deleteIssueTypeScheme_400_response

type deleteIssueTypeScreenScheme_400_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

union deleteIssueTypeScreenScheme_response = assignIssueTypeScreenSchemeToProject_404_response | deleteIssueTypeScreenScheme_400_response

type deleteScreenScheme_400_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

union deleteScreenScheme_response = Void_container | createScreenScheme_403_response | deleteScreenScheme_400_response | updateScreenScheme_404_response

type deleteScreen_400_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

union deleteScreen_response = Void_container | createScreen_403_response | deleteScreen_400_response | updateScreen_404_response

union deleteWebhookById_response = ErrorCollection

union deleteWorkflowTransitionRuleConfigurations_response = ErrorCollection | WorkflowTransitionRulesUpdateErrors

type description {
  value: String
}

input description_Input {
  value: String
}

union evaluateJiraExpression_response = ErrorCollection | JiraExpressionResult

type extractions_items {
  name: String
  path: String
  type: String
}

input extractions_items_Input {
  name: String
  path: String
  type: String
}

input findAssignableUsers_request_Input {
  \\"\\"\\"
  A query string that is matched exactly against user \`accountId\`. Required, unless \`query\` is specified.
  \\"\\"\\"
  accountId: queryInput_findBulkAssignableUsers_accountId

  \\"\\"\\"The ID of the transition.\\"\\"\\"
  actionDescriptorId: Int

  \\"\\"\\"The key of the issue. Required, unless \`project\` is specified.\\"\\"\\"
  issueKey: String

  \\"\\"\\"
  The maximum number of items to return. This operation may return less than the maximum number of items even if more are available. The operation fetches users up to the maximum and then, from the fetched users, returns only the users that can be assigned to the issue.
  \\"\\"\\"
  maxResults: Int

  \\"\\"\\"
  The project ID or project key (case sensitive). Required, unless \`issueKey\` is specified.
  \\"\\"\\"
  project: String

  \\"\\"\\"
  A query string that is matched against user attributes, such as \`displayName\`, and \`emailAddress\`, to find relevant users. The string can match the prefix of the attribute's value. For example, *query=john* matches a user with a \`displayName\` of *John Smith* and a user with an \`emailAddress\` of *johnson@example.com*. Required, unless \`username\` or \`accountId\` is specified.
  \\"\\"\\"
  query: String
  recommend: Boolean

  \\"\\"\\"
  The sessionId of this request. SessionId is the same until the assignee is set.
  \\"\\"\\"
  sessionId: String

  \\"\\"\\"
  The index of the first item to return in a page of results (page offset).
  \\"\\"\\"
  startAt: Int

  \\"\\"\\"
  This parameter is no longer available. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  username: String
}

input findBulkAssignableUsers_request_Input {
  \\"\\"\\"
  A query string that is matched exactly against user \`accountId\`. Required, unless \`query\` is specified.
  \\"\\"\\"
  accountId: queryInput_findBulkAssignableUsers_accountId

  \\"\\"\\"The maximum number of items to return per page.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"
  A list of project keys (case sensitive). This parameter accepts a comma-separated list.
  \\"\\"\\"
  projectKeys: String!

  \\"\\"\\"
  A query string that is matched against user attributes, such as \`displayName\` and \`emailAddress\`, to find relevant users. The string can match the prefix of the attribute's value. For example, *query=john* matches a user with a \`displayName\` of *John Smith* and a user with an \`emailAddress\` of *johnson@example.com*. Required, unless \`accountId\` is specified.
  \\"\\"\\"
  query: String

  \\"\\"\\"
  The index of the first item to return in a page of results (page offset).
  \\"\\"\\"
  startAt: Int

  \\"\\"\\"
  This parameter is no longer available. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  username: String
}

input findGroups_request_Input {
  \\"\\"\\"
  This parameter is deprecated, setting it does not affect the results. To find groups containing a particular user, use [Get user groups](#api-rest-api-3-user-groups-get).
  \\"\\"\\"
  accountId: String

  \\"\\"\\"
  As a group's name can change, use of \`excludeGroupIds\` is recommended to identify a group.  
  A group to exclude from the result. To exclude multiple groups, provide an ampersand-separated list. For example, \`exclude=group1&exclude=group2\`. This parameter cannot be used with the \`excludeGroupIds\` parameter.
  \\"\\"\\"
  exclude: [String]

  \\"\\"\\"
  A group ID to exclude from the result. To exclude multiple groups, provide an ampersand-separated list. For example, \`excludeId=group1-id&excludeId=group2-id\`. This parameter cannot be used with the \`excludeGroups\` parameter.
  \\"\\"\\"
  excludeId: [String]

  \\"\\"\\"
  The maximum number of groups to return. The maximum number of groups that can be returned is limited by the system property \`jira.ajax.autocomplete.limit\`.
  \\"\\"\\"
  maxResults: Int

  \\"\\"\\"The string to find in group names.\\"\\"\\"
  query: String

  \\"\\"\\"
  This parameter is no longer available. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  userName: String
}

input findUsersAndGroups_request_Input {
  avatarSize: queryInput_findUsersAndGroups_avatarSize

  \\"\\"\\"Whether the search for groups should be case insensitive.\\"\\"\\"
  caseInsensitive: Boolean

  \\"\\"\\"
  Whether Connect app users and groups should be excluded from the search results. If an invalid value is provided, the default value is used.
  \\"\\"\\"
  excludeConnectAddons: Boolean

  \\"\\"\\"The custom field ID of the field this request is for.\\"\\"\\"
  fieldId: String

  \\"\\"\\"
  The ID of an issue type that returned users and groups must have permission to view. To include multiple issue types, provide an ampersand-separated list. For example, \`issueTypeId=10000&issueTypeId=10001\`. Special values, such as \`-1\` (all standard issue types) and \`-2\` (all subtask issue types), are supported. This parameter is only used when \`fieldId\` is present.
  \\"\\"\\"
  issueTypeId: [String]

  \\"\\"\\"The maximum number of items to return in each list.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"
  The ID of a project that returned users and groups must have permission to view. To include multiple projects, provide an ampersand-separated list. For example, \`projectId=10000&projectId=10001\`. This parameter is only used when \`fieldId\` is present.
  \\"\\"\\"
  projectId: [String]

  \\"\\"\\"The search string.\\"\\"\\"
  query: String!

  \\"\\"\\"
  Whether the user avatar should be returned. If an invalid value is provided, the default value is used.
  \\"\\"\\"
  showAvatar: Boolean
}

input findUsersByQuery_request_Input {
  \\"\\"\\"The maximum number of items to return per page.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"The search query.\\"\\"\\"
  query: String!

  \\"\\"\\"
  The index of the first item to return in a page of results (page offset).
  \\"\\"\\"
  startAt: BigInt
}

input findUsersForPicker_request_Input {
  avatarSize: String

  \\"\\"\\"
  This parameter is no longer available. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  exclude: [String]

  \\"\\"\\"
  A list of account IDs to exclude from the search results. This parameter accepts a comma-separated list. Multiple account IDs can also be provided using an ampersand-separated list. For example, \`excludeAccountIds=5b10a2844c20165700ede21g,5b10a0effa615349cb016cd8&excludeAccountIds=5b10ac8d82e05b22cc7d4ef5\`. Cannot be provided with \`exclude\`.
  \\"\\"\\"
  excludeAccountIds: [String]
  excludeConnectUsers: Boolean

  \\"\\"\\"
  The maximum number of items to return. The total number of matched users is returned in \`total\`.
  \\"\\"\\"
  maxResults: Int

  \\"\\"\\"
  A query string that is matched against user attributes, such as \`displayName\`, and \`emailAddress\`, to find relevant users. The string can match the prefix of the attribute's value. For example, *query=john* matches a user with a \`displayName\` of *John Smith* and a user with an \`emailAddress\` of *johnson@example.com*.
  \\"\\"\\"
  query: String!

  \\"\\"\\"Include the URI to the user's avatar.\\"\\"\\"
  showAvatar: Boolean
}

input findUsersWithAllPermissions_request_Input {
  \\"\\"\\"
  A query string that is matched exactly against user \`accountId\`. Required, unless \`query\` is specified.
  \\"\\"\\"
  accountId: queryInput_findBulkAssignableUsers_accountId

  \\"\\"\\"The issue key for the issue.\\"\\"\\"
  issueKey: String

  \\"\\"\\"The maximum number of items to return per page.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"
  A comma separated list of permissions. Permissions can be specified as any:
  
   *  permission returned by [Get all permissions](#api-rest-api-3-permissions-get).
   *  custom project permission added by Connect apps.
   *  (deprecated) one of the following:
      
       *  ASSIGNABLE\\\\_USER
       *  ASSIGN\\\\_ISSUE
       *  ATTACHMENT\\\\_DELETE\\\\_ALL
       *  ATTACHMENT\\\\_DELETE\\\\_OWN
       *  BROWSE
       *  CLOSE\\\\_ISSUE
       *  COMMENT\\\\_DELETE\\\\_ALL
       *  COMMENT\\\\_DELETE\\\\_OWN
       *  COMMENT\\\\_EDIT\\\\_ALL
       *  COMMENT\\\\_EDIT\\\\_OWN
       *  COMMENT\\\\_ISSUE
       *  CREATE\\\\_ATTACHMENT
       *  CREATE\\\\_ISSUE
       *  DELETE\\\\_ISSUE
       *  EDIT\\\\_ISSUE
       *  LINK\\\\_ISSUE
       *  MANAGE\\\\_WATCHER\\\\_LIST
       *  MODIFY\\\\_REPORTER
       *  MOVE\\\\_ISSUE
       *  PROJECT\\\\_ADMIN
       *  RESOLVE\\\\_ISSUE
       *  SCHEDULE\\\\_ISSUE
       *  SET\\\\_ISSUE\\\\_SECURITY
       *  TRANSITION\\\\_ISSUE
       *  VIEW\\\\_VERSION\\\\_CONTROL
       *  VIEW\\\\_VOTERS\\\\_AND\\\\_WATCHERS
       *  VIEW\\\\_WORKFLOW\\\\_READONLY
       *  WORKLOG\\\\_DELETE\\\\_ALL
       *  WORKLOG\\\\_DELETE\\\\_OWN
       *  WORKLOG\\\\_EDIT\\\\_ALL
       *  WORKLOG\\\\_EDIT\\\\_OWN
       *  WORK\\\\_ISSUE
  \\"\\"\\"
  permissions: String!

  \\"\\"\\"The project key for the project (case sensitive).\\"\\"\\"
  projectKey: String

  \\"\\"\\"
  A query string that is matched against user attributes, such as \`displayName\` and \`emailAddress\`, to find relevant users. The string can match the prefix of the attribute's value. For example, *query=john* matches a user with a \`displayName\` of *John Smith* and a user with an \`emailAddress\` of *johnson@example.com*. Required, unless \`accountId\` is specified.
  \\"\\"\\"
  query: String

  \\"\\"\\"
  The index of the first item to return in a page of results (page offset).
  \\"\\"\\"
  startAt: Int

  \\"\\"\\"
  This parameter is no longer available. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  username: String
}

input findUsersWithBrowsePermission_request_Input {
  \\"\\"\\"
  A query string that is matched exactly against user \`accountId\`. Required, unless \`query\` is specified.
  \\"\\"\\"
  accountId: queryInput_findBulkAssignableUsers_accountId

  \\"\\"\\"
  The issue key for the issue. Required, unless \`projectKey\` is specified.
  \\"\\"\\"
  issueKey: String

  \\"\\"\\"The maximum number of items to return per page.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"
  The project key for the project (case sensitive). Required, unless \`issueKey\` is specified.
  \\"\\"\\"
  projectKey: String

  \\"\\"\\"
  A query string that is matched against user attributes, such as \`displayName\` and \`emailAddress\`, to find relevant users. The string can match the prefix of the attribute's value. For example, *query=john* matches a user with a \`displayName\` of *John Smith* and a user with an \`emailAddress\` of *johnson@example.com*. Required, unless \`accountId\` is specified.
  \\"\\"\\"
  query: String

  \\"\\"\\"
  The index of the first item to return in a page of results (page offset).
  \\"\\"\\"
  startAt: Int

  \\"\\"\\"
  This parameter is no longer available. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  username: String
}

input findUsers_request_Input {
  \\"\\"\\"
  A query string that is matched exactly against a user \`accountId\`. Required, unless \`query\` or \`property\` is specified.
  \\"\\"\\"
  accountId: queryInput_findUsers_accountId

  \\"\\"\\"The maximum number of items to return per page.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"
  A query string used to search properties. Property keys are specified by path, so property keys containing dot (.) or equals (=) characters cannot be used. The query string cannot be specified using a JSON object. Example: To search for the value of \`nested\` from \`{\\"something\\":{\\"nested\\":1,\\"other\\":2}}\` use \`thepropertykey.something.nested=1\`. Required, unless \`accountId\` or \`query\` is specified.
  \\"\\"\\"
  property: String

  \\"\\"\\"
  A query string that is matched against user attributes ( \`displayName\`, and \`emailAddress\`) to find relevant users. The string can match the prefix of the attribute's value. For example, *query=john* matches a user with a \`displayName\` of *John Smith* and a user with an \`emailAddress\` of *johnson@example.com*. Required, unless \`accountId\` or \`property\` is specified.
  \\"\\"\\"
  query: String

  \\"\\"\\"
  The index of the first item to return in a page of filtered results (page offset).
  \\"\\"\\"
  startAt: Int
  username: String
}

union getAllAvailableDashboardGadgets_response = AvailableDashboardGadgetsResponse | ErrorCollection

input getAllDashboards_request_Input {
  filter: queryInput_getAllDashboards_filter

  \\"\\"\\"The maximum number of items to return per page.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"
  The index of the first item to return in a page of results (page offset).
  \\"\\"\\"
  startAt: Int
}

union getAllDashboards_response = ErrorCollection | PageOfDashboards

input getAllFieldConfigurationSchemes_request_Input {
  \\"\\"\\"
  The list of field configuration scheme IDs. To include multiple IDs, provide an ampersand-separated list. For example, \`id=10000&id=10001\`.
  \\"\\"\\"
  id: [BigInt]

  \\"\\"\\"The maximum number of items to return per page.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"
  The index of the first item to return in a page of results (page offset).
  \\"\\"\\"
  startAt: BigInt
}

input getAllFieldConfigurations_request_Input {
  \\"\\"\\"
  The list of field configuration IDs. To include multiple IDs, provide an ampersand-separated list. For example, \`id=10000&id=10001\`.
  \\"\\"\\"
  id: [BigInt]

  \\"\\"\\"If *true* returns default field configurations only.\\"\\"\\"
  isDefault: Boolean

  \\"\\"\\"The maximum number of items to return per page.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"
  The query string used to match against field configuration names and descriptions.
  \\"\\"\\"
  query: String

  \\"\\"\\"
  The index of the first item to return in a page of results (page offset).
  \\"\\"\\"
  startAt: BigInt
}

input getAllGadgets_request_Input {
  \\"\\"\\"
  The list of gadgets IDs. To include multiple IDs, separate IDs with ampersand: \`gadgetId=10000&gadgetId=10001\`.
  \\"\\"\\"
  gadgetId: [BigInt]

  \\"\\"\\"
  The list of gadgets module keys. To include multiple module keys, separate module keys with ampersand: \`moduleKey=key:one&moduleKey=key:two\`.
  \\"\\"\\"
  moduleKey: [String]

  \\"\\"\\"
  The list of gadgets URIs. To include multiple URIs, separate URIs with ampersand: \`uri=/rest/example/uri/1&uri=/rest/example/uri/2\`.
  \\"\\"\\"
  uri: [String]
}

union getAllGadgets_response = DashboardGadgetResponse | ErrorCollection

input getAllIssueFieldOptions_request_Input {
  \\"\\"\\"The maximum number of items to return per page.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"
  The index of the first item to return in a page of results (page offset).
  \\"\\"\\"
  startAt: BigInt
}

input getAllIssueTypeSchemes_request_Input {
  \\"\\"\\"
  Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:
  
   *  \`projects\` For each issue type schemes, returns information about the projects the issue type scheme is assigned to.
   *  \`issueTypes\` For each issue type schemes, returns information about the issueTypes the issue type scheme have.
  \\"\\"\\"
  expand: String

  \\"\\"\\"
  The list of issue type schemes IDs. To include multiple IDs, provide an ampersand-separated list. For example, \`id=10000&id=10001\`.
  \\"\\"\\"
  id: [BigInt]

  \\"\\"\\"The maximum number of items to return per page.\\"\\"\\"
  maxResults: Int
  orderBy: queryInput_getAllIssueTypeSchemes_orderBy

  \\"\\"\\"
  String used to perform a case-insensitive partial match with issue type scheme name.
  \\"\\"\\"
  queryString: String

  \\"\\"\\"
  The index of the first item to return in a page of results (page offset).
  \\"\\"\\"
  startAt: BigInt
}

input getAllLabels_request_Input {
  \\"\\"\\"The maximum number of items to return per page.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"
  The index of the first item to return in a page of results (page offset).
  \\"\\"\\"
  startAt: BigInt
}

input getAllPermissionSchemes_request_Input {
  \\"\\"\\"
  Use expand to include additional information in the response. This parameter accepts a comma-separated list. Note that permissions are included when you specify any value. Expand options include:
  
   *  \`all\` Returns all expandable information.
   *  \`field\` Returns information about the custom field granted the permission.
   *  \`group\` Returns information about the group that is granted the permission.
   *  \`permissions\` Returns all permission grants for each permission scheme.
   *  \`projectRole\` Returns information about the project role granted the permission.
   *  \`user\` Returns information about the user who is granted the permission.
  \\"\\"\\"
  expand: String
}

input getAllProjects_request_Input {
  \\"\\"\\"
  Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expanded options include:
  
   *  \`description\` Returns the project description.
   *  \`issueTypes\` Returns all issue types associated with the project.
   *  \`lead\` Returns information about the project lead.
   *  \`projectKeys\` Returns all project keys associated with the project.
  \\"\\"\\"
  expand: String

  \\"\\"\\"
  A list of project properties to return for the project. This parameter accepts a comma-separated list.
  \\"\\"\\"
  properties: [String]

  \\"\\"\\"
  Returns the user's most recently accessed projects. You may specify the number of results to return up to a maximum of 20. If access is anonymous, then the recently accessed projects are based on the current HTTP session.
  \\"\\"\\"
  recent: Int
}

input getAllScreenTabs_request_Input {
  \\"\\"\\"The key of the project.\\"\\"\\"
  projectKey: String
}

input getAllUsersDefault_request_Input {
  \\"\\"\\"The maximum number of items to return.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"The index of the first item to return.\\"\\"\\"
  startAt: Int
}

input getAllWorkflows_request_Input {
  \\"\\"\\"
  The name of the workflow to be returned. Only one workflow can be specified.
  \\"\\"\\"
  workflowName: String
}

input getApplicationProperty_request_Input {
  \\"\\"\\"The key of the application property.\\"\\"\\"
  key: String

  \\"\\"\\"
  When a \`key\` isn't provided, this filters the list of results by the application property \`key\` using a regular expression. For example, using \`jira.lf.*\` will return all application properties with keys that start with *jira.lf.*.
  \\"\\"\\"
  keyFilter: String

  \\"\\"\\"The permission level of all items being returned in the list.\\"\\"\\"
  permissionLevel: String
}

input getAssignedPermissionScheme_request_Input {
  \\"\\"\\"
  Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Note that permissions are included when you specify any value. Expand options include:
  
   *  \`all\` Returns all expandable information.
   *  \`field\` Returns information about the custom field granted the permission.
   *  \`group\` Returns information about the group that is granted the permission.
   *  \`permissions\` Returns all permission grants for each permission scheme.
   *  \`projectRole\` Returns information about the project role granted the permission.
   *  \`user\` Returns information about the user who is granted the permission.
  \\"\\"\\"
  expand: String
}

scalar getAttachmentContent_200_response

input getAttachmentContent_request_Input {
  \\"\\"\\"
  Whether a redirect is provided for the attachment download. Clients that do not automatically follow redirects can set this to \`false\` to avoid making multiple requests to download the attachment.
  \\"\\"\\"
  redirect: Boolean
}

scalar getAttachmentThumbnail_200_response

input getAttachmentThumbnail_request_Input {
  \\"\\"\\"
  Whether a default thumbnail is returned when the requested thumbnail is not found.
  \\"\\"\\"
  fallbackToDefault: Boolean

  \\"\\"\\"The maximum height to scale the thumbnail to.\\"\\"\\"
  height: Int

  \\"\\"\\"
  Whether a redirect is provided for the attachment download. Clients that do not automatically follow redirects can set this to \`false\` to avoid making multiple requests to download the attachment.
  \\"\\"\\"
  redirect: Boolean

  \\"\\"\\"The maximum width to scale the thumbnail to.\\"\\"\\"
  width: Int
}

input getAuditRecords_request_Input {
  \\"\\"\\"The strings to match with audit field content, space separated.\\"\\"\\"
  filter: String

  \\"\\"\\"
  The date and time on or after which returned audit records must have been created. If \`to\` is provided \`from\` must be before \`to\` or no audit records are returned.
  \\"\\"\\"
  from: DateTime

  \\"\\"\\"The maximum number of results to return.\\"\\"\\"
  limit: Int

  \\"\\"\\"The number of records to skip before returning the first result.\\"\\"\\"
  offset: Int

  \\"\\"\\"
  The date and time on or before which returned audit results must have been created. If \`from\` is provided \`to\` must be after \`from\` or no audit records are returned.
  \\"\\"\\"
  to: DateTime
}

scalar getAvatarImageByID_200_response

type getAvatarImageByID_200_response_container {
  getAvatarImageByID_200_response: getAvatarImageByID_200_response
}

union getAvatarImageByID_response = ErrorCollection | getAvatarImageByID_200_response_container

scalar getAvatarImageByOwner_200_response

type getAvatarImageByOwner_200_response_container {
  getAvatarImageByOwner_200_response: getAvatarImageByOwner_200_response
}

union getAvatarImageByOwner_response = ErrorCollection | getAvatarImageByOwner_200_response_container

scalar getAvatarImageByType_200_response

type getAvatarImageByType_200_response_container {
  getAvatarImageByType_200_response: getAvatarImageByType_200_response
}

input getAvatarImageByType_request_Input {
  format: queryInput_getAvatarImageByType_format
  size: queryInput_getAvatarImageByType_size
}

union getAvatarImageByType_response = ErrorCollection | getAvatarImageByType_200_response_container

union getBanner_response = AnnouncementBannerConfiguration | ErrorCollection

union getBulkPermissions_response = BulkPermissionGrants | ErrorCollection

input getChangeLogs_request_Input {
  \\"\\"\\"The maximum number of items to return per page.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"
  The index of the first item to return in a page of results (page offset).
  \\"\\"\\"
  startAt: Int
}

input getComment_request_Input {
  \\"\\"\\"
  Use [expand](#expansion) to include additional information about comments in the response. This parameter accepts \`renderedBody\`, which returns the comment body rendered in HTML.
  \\"\\"\\"
  expand: String
}

input getComments_request_Input {
  \\"\\"\\"
  Use [expand](#expansion) to include additional information about comments in the response. This parameter accepts \`renderedBody\`, which returns the comment body rendered in HTML.
  \\"\\"\\"
  expand: String

  \\"\\"\\"The maximum number of items to return per page.\\"\\"\\"
  maxResults: Int
  orderBy: queryInput_getComments_orderBy

  \\"\\"\\"
  The index of the first item to return in a page of results (page offset).
  \\"\\"\\"
  startAt: BigInt
}

input getContextsForFieldDeprecated_request_Input {
  \\"\\"\\"The maximum number of items to return per page.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"
  The index of the first item to return in a page of results (page offset).
  \\"\\"\\"
  startAt: BigInt
}

type getContextsForField_403_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

type getContextsForField_404_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

input getContextsForField_request_Input {
  \\"\\"\\"
  The list of context IDs. To include multiple contexts, separate IDs with ampersand: \`contextId=10000&contextId=10001\`.
  \\"\\"\\"
  contextId: [BigInt]

  \\"\\"\\"Whether to return contexts that apply to all issue types.\\"\\"\\"
  isAnyIssueType: Boolean

  \\"\\"\\"Whether to return contexts that apply to all projects.\\"\\"\\"
  isGlobalContext: Boolean

  \\"\\"\\"The maximum number of items to return per page.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"
  The index of the first item to return in a page of results (page offset).
  \\"\\"\\"
  startAt: BigInt
}

union getContextsForField_response = PageBeanCustomFieldContext | getContextsForField_403_response | getContextsForField_404_response

input getCreateIssueMeta_request_Input {
  \\"\\"\\"
  Use [expand](#expansion) to include additional information about issue metadata in the response. This parameter accepts \`projects.issuetypes.fields\`, which returns information about the fields in the issue creation screen for each issue type. Fields hidden from the screen are not returned. Use the information to populate the \`fields\` and \`update\` fields in [Create issue](#api-rest-api-3-issue-post) and [Create issues](#api-rest-api-3-issue-bulk-post).
  \\"\\"\\"
  expand: String

  \\"\\"\\"
  List of issue type IDs. This parameter accepts a comma-separated list. Multiple issue type IDs can also be provided using an ampersand-separated list. For example, \`issuetypeIds=10000,10001&issuetypeIds=10020,10021\`. This parameter may be provided with \`issuetypeNames\`.
  \\"\\"\\"
  issuetypeIds: [String]

  \\"\\"\\"
  List of issue type names. This parameter accepts a comma-separated list. Multiple issue type names can also be provided using an ampersand-separated list. For example, \`issuetypeNames=name1,name2&issuetypeNames=name3\`. This parameter may be provided with \`issuetypeIds\`.
  \\"\\"\\"
  issuetypeNames: [String]

  \\"\\"\\"
  List of project IDs. This parameter accepts a comma-separated list. Multiple project IDs can also be provided using an ampersand-separated list. For example, \`projectIds=10000,10001&projectIds=10020,10021\`. This parameter may be provided with \`projectKeys\`.
  \\"\\"\\"
  projectIds: [String]

  \\"\\"\\"
  List of project keys. This parameter accepts a comma-separated list. Multiple project keys can also be provided using an ampersand-separated list. For example, \`projectKeys=proj1,proj2&projectKeys=proj3\`. This parameter may be provided with \`projectIds\`.
  \\"\\"\\"
  projectKeys: [String]
}

input getCurrentUser_request_Input {
  \\"\\"\\"
  Use [expand](#expansion) to include additional information about user in the response. This parameter accepts a comma-separated list. Expand options include:
  
   *  \`groups\` Returns all groups, including nested groups, the user belongs to.
   *  \`applicationRoles\` Returns the application roles the user is assigned to.
  \\"\\"\\"
  expand: String
}

input getCustomFieldConfiguration_request_Input {
  \\"\\"\\"
  The list of field context IDs. To include multiple field contexts, separate IDs with an ampersand: \`fieldContextId=10000&fieldContextId=10001\`. Can't be provided with \`id\`, \`issueId\`, \`projectKeyOrId\`, or \`issueTypeId\`.
  \\"\\"\\"
  fieldContextId: [BigInt]

  \\"\\"\\"
  The list of configuration IDs. To include multiple configurations, separate IDs with an ampersand: \`id=10000&id=10001\`. Can't be provided with \`fieldContextId\`, \`issueId\`, \`projectKeyOrId\`, or \`issueTypeId\`.
  \\"\\"\\"
  id: [BigInt]

  \\"\\"\\"
  The ID of the issue to filter results by. If the issue doesn't exist, an empty list is returned. Can't be provided with \`projectKeyOrId\`, or \`issueTypeId\`.
  \\"\\"\\"
  issueId: BigInt

  \\"\\"\\"
  The ID of the issue type to filter results by. Must be provided with \`projectKeyOrId\`. Can't be provided with \`issueId\`.
  \\"\\"\\"
  issueTypeId: String

  \\"\\"\\"The maximum number of items to return per page.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"
  The ID or key of the project to filter results by. Must be provided with \`issueTypeId\`. Can't be provided with \`issueId\`.
  \\"\\"\\"
  projectKeyOrId: String

  \\"\\"\\"
  The index of the first item to return in a page of results (page offset).
  \\"\\"\\"
  startAt: BigInt
}

type getCustomFieldContextsForProjectsAndIssueTypes_400_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

type getCustomFieldContextsForProjectsAndIssueTypes_404_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

union getCustomFieldContextsForProjectsAndIssueTypes_response = PageBeanContextForProjectAndIssueType | getContextsForField_403_response | getCustomFieldContextsForProjectsAndIssueTypes_400_response | getCustomFieldContextsForProjectsAndIssueTypes_404_response

union getDashboard_response = Dashboard | ErrorCollection

input getDashboardsPaginated_request_Input {
  \\"\\"\\"
  User account ID used to return dashboards with the matching \`owner.accountId\`. This parameter cannot be used with the \`owner\` parameter.
  \\"\\"\\"
  accountId: queryInput_getDashboardsPaginated_accountId

  \\"\\"\\"String used to perform a case-insensitive partial match with \`name\`.\\"\\"\\"
  dashboardName: String

  \\"\\"\\"
  Use [expand](#expansion) to include additional information about dashboard in the response. This parameter accepts a comma-separated list. Expand options include:
  
   *  \`description\` Returns the description of the dashboard.
   *  \`owner\` Returns the owner of the dashboard.
   *  \`viewUrl\` Returns the URL that is used to view the dashboard.
   *  \`favourite\` Returns \`isFavourite\`, an indicator of whether the user has set the dashboard as a favorite.
   *  \`favouritedCount\` Returns \`popularity\`, a count of how many users have set this dashboard as a favorite.
   *  \`sharePermissions\` Returns details of the share permissions defined for the dashboard.
   *  \`editPermissions\` Returns details of the edit permissions defined for the dashboard.
   *  \`isWritable\` Returns whether the current user has permission to edit the dashboard.
  \\"\\"\\"
  expand: String

  \\"\\"\\"
  Group ID used to return dashboards that are shared with a group that matches \`sharePermissions.group.groupId\`. This parameter cannot be used with the \`groupname\` parameter.
  \\"\\"\\"
  groupId: String

  \\"\\"\\"
  As a group's name can change, use of \`groupId\` is recommended. Group name used to return dashboards that are shared with a group that matches \`sharePermissions.group.name\`. This parameter cannot be used with the \`groupId\` parameter.
  \\"\\"\\"
  groupname: String

  \\"\\"\\"The maximum number of items to return per page.\\"\\"\\"
  maxResults: Int
  orderBy: queryInput_getDashboardsPaginated_orderBy

  \\"\\"\\"
  This parameter is deprecated because of privacy changes. Use \`accountId\` instead. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details. User name used to return dashboards with the matching \`owner.name\`. This parameter cannot be used with the \`accountId\` parameter.
  \\"\\"\\"
  owner: String

  \\"\\"\\"
  Project ID used to returns dashboards that are shared with a project that matches \`sharePermissions.project.id\`.
  \\"\\"\\"
  projectId: BigInt

  \\"\\"\\"
  The index of the first item to return in a page of results (page offset).
  \\"\\"\\"
  startAt: BigInt
  status: queryInput_getDashboardsPaginated_status
}

union getDashboardsPaginated_response = ErrorCollection | PageBeanDashboard

input getDefaultValues_request_Input {
  \\"\\"\\"The IDs of the contexts.\\"\\"\\"
  contextId: [BigInt]

  \\"\\"\\"The maximum number of items to return per page.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"
  The index of the first item to return in a page of results (page offset).
  \\"\\"\\"
  startAt: BigInt
}

union getDefaultValues_response = PageBeanCustomFieldContextDefaultValue | getContextsForField_403_response | getContextsForField_404_response

input getDefaultWorkflow_request_Input {
  \\"\\"\\"
  Set to \`true\` to return the default workflow for the workflow scheme's draft rather than scheme itself. If the workflow scheme does not have a draft, then the default workflow for the workflow scheme is returned.
  \\"\\"\\"
  returnDraftIfExists: Boolean
}

input getDraftWorkflow_request_Input {
  \\"\\"\\"
  The name of a workflow in the scheme. Limits the results to the workflow-issue type mapping for the specified workflow.
  \\"\\"\\"
  workflowName: String
}

input getDynamicWebhooksForApp_request_Input {
  \\"\\"\\"The maximum number of items to return per page.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"
  The index of the first item to return in a page of results (page offset).
  \\"\\"\\"
  startAt: BigInt
}

union getDynamicWebhooksForApp_response = ErrorCollection | PageBeanWebhook

input getEditIssueMeta_request_Input {
  \\"\\"\\"
  Whether non-editable fields are returned. Available to Connect app users with *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) and Forge apps acting on behalf of users with *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  overrideEditableFlag: Boolean

  \\"\\"\\"
  Whether hidden fields are returned. Available to Connect app users with *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) and Forge apps acting on behalf of users with *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  overrideScreenSecurity: Boolean
}

input getFailedWebhooks_request_Input {
  \\"\\"\\"
  The time after which any webhook failure must have occurred for the record to be returned, expressed as milliseconds since the UNIX epoch.
  \\"\\"\\"
  after: BigInt

  \\"\\"\\"
  The maximum number of webhooks to return per page. If obeying the maxResults directive would result in records with the same failure time being split across pages, the directive is ignored and all records with the same failure time included on the page.
  \\"\\"\\"
  maxResults: Int
}

union getFailedWebhooks_response = ErrorCollection | FailedWebhooks

input getFieldAutoCompleteForQueryString_request_Input {
  \\"\\"\\"The name of the field.\\"\\"\\"
  fieldName: String

  \\"\\"\\"The partial field item name entered by the user.\\"\\"\\"
  fieldValue: String

  \\"\\"\\"
  The name of the [ CHANGED operator predicate](https://confluence.atlassian.com/x/hQORLQ#Advancedsearching-operatorsreference-CHANGEDCHANGED) for which the suggestions are generated. The valid predicate operators are *by*, *from*, and *to*.
  \\"\\"\\"
  predicateName: String

  \\"\\"\\"The partial predicate item name entered by the user.\\"\\"\\"
  predicateValue: String
}

input getFieldConfigurationSchemeMappings_request_Input {
  \\"\\"\\"
  The list of field configuration scheme IDs. To include multiple field configuration schemes separate IDs with ampersand: \`fieldConfigurationSchemeId=10000&fieldConfigurationSchemeId=10001\`.
  \\"\\"\\"
  fieldConfigurationSchemeId: [BigInt]

  \\"\\"\\"The maximum number of items to return per page.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"
  The index of the first item to return in a page of results (page offset).
  \\"\\"\\"
  startAt: BigInt
}

input getFieldConfigurationSchemeProjectMapping_request_Input {
  \\"\\"\\"The maximum number of items to return per page.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"
  The list of project IDs. To include multiple projects, separate IDs with ampersand: \`projectId=10000&projectId=10001\`.
  \\"\\"\\"
  projectId: [BigInt]!

  \\"\\"\\"
  The index of the first item to return in a page of results (page offset).
  \\"\\"\\"
  startAt: BigInt
}

input getFieldsPaginated_request_Input {
  \\"\\"\\"
  Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:
  
   *  \`key\` returns the key for each field
   *  \`lastUsed\` returns the date when the value of the field last changed
   *  \`screensCount\` returns the number of screens related to a field
   *  \`contextsCount\` returns the number of contexts related to a field
   *  \`isLocked\` returns information about whether the field is [locked](https://confluence.atlassian.com/x/ZSN7Og)
   *  \`searcherKey\` returns the searcher key for each custom field
  \\"\\"\\"
  expand: String

  \\"\\"\\"
  The IDs of the custom fields to return or, where \`query\` is specified, filter.
  \\"\\"\\"
  id: [String]

  \\"\\"\\"The maximum number of items to return per page.\\"\\"\\"
  maxResults: Int
  orderBy: queryInput_getFieldsPaginated_orderBy

  \\"\\"\\"
  String used to perform a case-insensitive partial match with field names or descriptions.
  \\"\\"\\"
  query: String

  \\"\\"\\"
  The index of the first item to return in a page of results (page offset).
  \\"\\"\\"
  startAt: BigInt

  \\"\\"\\"The type of fields to search.\\"\\"\\"
  type: [queryInput_getFieldsPaginated_type_items]
}

union getFieldsPaginated_response = ErrorCollection | PageBeanField

input getFilter_request_Input {
  \\"\\"\\"
  Use [expand](#expansion) to include additional information about filter in the response. This parameter accepts a comma-separated list. Expand options include:
  
   *  \`sharedUsers\` Returns the users that the filter is shared with. This includes users that can browse projects that the filter is shared with. If you don't specify \`sharedUsers\`, then the \`sharedUsers\` object is returned but it doesn't list any users. The list of users returned is limited to 1000, to access additional users append \`[start-index:end-index]\` to the expand request. For example, to access the next 1000 users, use \`?expand=sharedUsers[1001:2000]\`.
   *  \`subscriptions\` Returns the users that are subscribed to the filter. If you don't specify \`subscriptions\`, the \`subscriptions\` object is returned but it doesn't list any subscriptions. The list of subscriptions returned is limited to 1000, to access additional subscriptions append \`[start-index:end-index]\` to the expand request. For example, to access the next 1000 subscriptions, use \`?expand=subscriptions[1001:2000]\`.
  \\"\\"\\"
  expand: String

  \\"\\"\\"
  EXPERIMENTAL: Whether share permissions are overridden to enable filters with any share permissions to be returned. Available to users with *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  overrideSharePermissions: Boolean
}

input getFiltersPaginated_request_Input {
  \\"\\"\\"
  User account ID used to return filters with the matching \`owner.accountId\`. This parameter cannot be used with \`owner\`.
  \\"\\"\\"
  accountId: queryInput_getFiltersPaginated_accountId

  \\"\\"\\"
  Use [expand](#expansion) to include additional information about filter in the response. This parameter accepts a comma-separated list. Expand options include:
  
   *  \`description\` Returns the description of the filter.
   *  \`favourite\` Returns an indicator of whether the user has set the filter as a favorite.
   *  \`favouritedCount\` Returns a count of how many users have set this filter as a favorite.
   *  \`jql\` Returns the JQL query that the filter uses.
   *  \`owner\` Returns the owner of the filter.
   *  \`searchUrl\` Returns a URL to perform the filter's JQL query.
   *  \`sharePermissions\` Returns the share permissions defined for the filter.
   *  \`editPermissions\` Returns the edit permissions defined for the filter.
   *  \`isWritable\` Returns whether the current user has permission to edit the filter.
   *  \`subscriptions\` Returns the users that are subscribed to the filter.
   *  \`viewUrl\` Returns a URL to view the filter.
  \\"\\"\\"
  expand: String

  \\"\\"\\"String used to perform a case-insensitive partial match with \`name\`.\\"\\"\\"
  filterName: String

  \\"\\"\\"
  Group ID used to returns filters that are shared with a group that matches \`sharePermissions.group.groupId\`. This parameter cannot be used with the \`groupname\` parameter.
  \\"\\"\\"
  groupId: String

  \\"\\"\\"
  As a group's name can change, use of \`groupId\` is recommended to identify a group. Group name used to returns filters that are shared with a group that matches \`sharePermissions.group.groupname\`. This parameter cannot be used with the \`groupId\` parameter.
  \\"\\"\\"
  groupname: String

  \\"\\"\\"
  The list of filter IDs. To include multiple IDs, provide an ampersand-separated list. For example, \`id=10000&id=10001\`.
  \\"\\"\\"
  id: [BigInt]

  \\"\\"\\"The maximum number of items to return per page.\\"\\"\\"
  maxResults: Int
  orderBy: queryInput_getFiltersPaginated_orderBy

  \\"\\"\\"
  EXPERIMENTAL: Whether share permissions are overridden to enable filters with any share permissions to be returned. Available to users with *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
  \\"\\"\\"
  overrideSharePermissions: Boolean

  \\"\\"\\"
  This parameter is deprecated because of privacy changes. Use \`accountId\` instead. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details. User name used to return filters with the matching \`owner.name\`. This parameter cannot be used with \`accountId\`.
  \\"\\"\\"
  owner: String

  \\"\\"\\"
  Project ID used to returns filters that are shared with a project that matches \`sharePermissions.project.id\`.
  \\"\\"\\"
  projectId: BigInt

  \\"\\"\\"
  The index of the first item to return in a page of results (page offset).
  \\"\\"\\"
  startAt: BigInt
}

union getFiltersPaginated_response = ErrorCollection | PageBeanFilterDetails

input getFilters_request_Input {
  \\"\\"\\"
  Use [expand](#expansion) to include additional information about filter in the response. This parameter accepts a comma-separated list. Expand options include:
  
   *  \`sharedUsers\` Returns the users that the filter is shared with. This includes users that can browse projects that the filter is shared with. If you don't specify \`sharedUsers\`, then the \`sharedUsers\` object is returned but it doesn't list any users. The list of users returned is limited to 1000, to access additional users append \`[start-index:end-index]\` to the expand request. For example, to access the next 1000 users, use \`?expand=sharedUsers[1001:2000]\`.
   *  \`subscriptions\` Returns the users that are subscribed to the filter. If you don't specify \`subscriptions\`, the \`subscriptions\` object is returned but it doesn't list any subscriptions. The list of subscriptions returned is limited to 1000, to access additional subscriptions append \`[start-index:end-index]\` to the expand request. For example, to access the next 1000 subscriptions, use \`?expand=subscriptions[1001:2000]\`.
  \\"\\"\\"
  expand: String
}

input getGroup_request_Input {
  \\"\\"\\"List of fields to expand.\\"\\"\\"
  expand: String

  \\"\\"\\"
  The ID of the group. This parameter cannot be used with the \`groupName\` parameter.
  \\"\\"\\"
  groupId: String

  \\"\\"\\"
  As a group's name can change, use of \`groupId\` is recommended to identify a group.  
  The name of the group. This parameter cannot be used with the \`groupId\` parameter.
  \\"\\"\\"
  groupname: String
}

input getIdsOfWorklogsDeletedSince_request_Input {
  \\"\\"\\"
  The date and time, as a UNIX timestamp in milliseconds, after which deleted worklogs are returned.
  \\"\\"\\"
  since: BigInt
}

input getIdsOfWorklogsModifiedSince_request_Input {
  \\"\\"\\"
  Use [expand](#expansion) to include additional information about worklogs in the response. This parameter accepts \`properties\` that returns the properties of each worklog.
  \\"\\"\\"
  expand: String

  \\"\\"\\"
  The date and time, as a UNIX timestamp in milliseconds, after which updated worklogs are returned.
  \\"\\"\\"
  since: BigInt
}

input getIssuePickerResource_request_Input {
  \\"\\"\\"
  The key of an issue to exclude from search results. For example, the issue the user is viewing when they perform this query.
  \\"\\"\\"
  currentIssueKey: String

  \\"\\"\\"
  A JQL query defining a list of issues to search for the query term. Note that \`username\` and \`userkey\` cannot be used as search terms for this parameter, due to privacy reasons. Use \`accountId\` instead.
  \\"\\"\\"
  currentJQL: String

  \\"\\"\\"The ID of a project that suggested issues must belong to.\\"\\"\\"
  currentProjectId: String

  \\"\\"\\"
  A string to match against text fields in the issue such as title, description, or comments.
  \\"\\"\\"
  query: String

  \\"\\"\\"
  When \`currentIssueKey\` is a subtask, whether to include the parent issue in the suggestions if it matches the query.
  \\"\\"\\"
  showSubTaskParent: Boolean

  \\"\\"\\"Indicate whether to include subtasks in the suggestions list.\\"\\"\\"
  showSubTasks: Boolean
}

input getIssueSecurityLevelMembers_request_Input {
  \\"\\"\\"
  Use expand to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:
  
   *  \`all\` Returns all expandable information.
   *  \`field\` Returns information about the custom field granted the permission.
   *  \`group\` Returns information about the group that is granted the permission.
   *  \`projectRole\` Returns information about the project role granted the permission.
   *  \`user\` Returns information about the user who is granted the permission.
  \\"\\"\\"
  expand: String

  \\"\\"\\"
  The list of issue security level IDs. To include multiple issue security levels separate IDs with ampersand: \`issueSecurityLevelId=10000&issueSecurityLevelId=10001\`.
  \\"\\"\\"
  issueSecurityLevelId: [BigInt]

  \\"\\"\\"The maximum number of items to return per page.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"
  The index of the first item to return in a page of results (page offset).
  \\"\\"\\"
  startAt: BigInt
}

input getIssueTypeMappingsForContexts_request_Input {
  \\"\\"\\"
  The ID of the context. To include multiple contexts, provide an ampersand-separated list. For example, \`contextId=10001&contextId=10002\`.
  \\"\\"\\"
  contextId: [BigInt]

  \\"\\"\\"The maximum number of items to return per page.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"
  The index of the first item to return in a page of results (page offset).
  \\"\\"\\"
  startAt: BigInt
}

union getIssueTypeMappingsForContexts_response = PageBeanIssueTypeToContextMapping | getContextsForField_403_response

input getIssueTypeSchemeForProjects_request_Input {
  \\"\\"\\"The maximum number of items to return per page.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"
  The list of project IDs. To include multiple project IDs, provide an ampersand-separated list. For example, \`projectId=10000&projectId=10001\`.
  \\"\\"\\"
  projectId: [BigInt]!

  \\"\\"\\"
  The index of the first item to return in a page of results (page offset).
  \\"\\"\\"
  startAt: BigInt
}

input getIssueTypeSchemesMapping_request_Input {
  \\"\\"\\"
  The list of issue type scheme IDs. To include multiple IDs, provide an ampersand-separated list. For example, \`issueTypeSchemeId=10000&issueTypeSchemeId=10001\`.
  \\"\\"\\"
  issueTypeSchemeId: [BigInt]

  \\"\\"\\"The maximum number of items to return per page.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"
  The index of the first item to return in a page of results (page offset).
  \\"\\"\\"
  startAt: BigInt
}

input getIssueTypeScreenSchemeMappings_request_Input {
  \\"\\"\\"
  The list of issue type screen scheme IDs. To include multiple issue type screen schemes, separate IDs with ampersand: \`issueTypeScreenSchemeId=10000&issueTypeScreenSchemeId=10001\`.
  \\"\\"\\"
  issueTypeScreenSchemeId: [BigInt]

  \\"\\"\\"The maximum number of items to return per page.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"
  The index of the first item to return in a page of results (page offset).
  \\"\\"\\"
  startAt: BigInt
}

input getIssueTypeScreenSchemes_request_Input {
  \\"\\"\\"
  Use [expand](#expansion) to include additional information in the response. This parameter accepts \`projects\` that, for each issue type screen schemes, returns information about the projects the issue type screen scheme is assigned to.
  \\"\\"\\"
  expand: String

  \\"\\"\\"
  The list of issue type screen scheme IDs. To include multiple IDs, provide an ampersand-separated list. For example, \`id=10000&id=10001\`.
  \\"\\"\\"
  id: [BigInt]

  \\"\\"\\"The maximum number of items to return per page.\\"\\"\\"
  maxResults: Int
  orderBy: queryInput_getIssueTypeScreenSchemes_orderBy

  \\"\\"\\"
  String used to perform a case-insensitive partial match with issue type screen scheme name.
  \\"\\"\\"
  queryString: String

  \\"\\"\\"
  The index of the first item to return in a page of results (page offset).
  \\"\\"\\"
  startAt: BigInt
}

input getIssueTypesForProject_request_Input {
  \\"\\"\\"
  The level of the issue type to filter by. Use:
  
   *  \`-1\` for Subtask.
   *  \`0\` for Base.
   *  \`1\` for Epic.
  \\"\\"\\"
  level: Int

  \\"\\"\\"The ID of the project.\\"\\"\\"
  projectId: BigInt!
}

input getIssueWorklog_request_Input {
  \\"\\"\\"
  Use [expand](#expansion) to include additional information about worklogs in the response. This parameter accepts\`properties\`, which returns worklog properties.
  \\"\\"\\"
  expand: String

  \\"\\"\\"The maximum number of items to return per page.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"
  The index of the first item to return in a page of results (page offset).
  \\"\\"\\"
  startAt: BigInt

  \\"\\"\\"
  The worklog start date and time, as a UNIX timestamp in milliseconds, after which worklogs are returned.
  \\"\\"\\"
  startedAfter: BigInt

  \\"\\"\\"
  The worklog start date and time, as a UNIX timestamp in milliseconds, before which worklogs are returned.
  \\"\\"\\"
  startedBefore: BigInt
}

input getIssue_request_Input {
  \\"\\"\\"
  Use [expand](#expansion) to include additional information about the issues in the response. This parameter accepts a comma-separated list. Expand options include:
  
   *  \`renderedFields\` Returns field values rendered in HTML format.
   *  \`names\` Returns the display name of each field.
   *  \`schema\` Returns the schema describing a field type.
   *  \`transitions\` Returns all possible transitions for the issue.
   *  \`editmeta\` Returns information about how each field can be edited.
   *  \`changelog\` Returns a list of recent updates to an issue, sorted by date, starting from the most recent.
   *  \`versionedRepresentations\` Returns a JSON array for each version of a field's value, with the highest number representing the most recent version. Note: When included in the request, the \`fields\` parameter is ignored.
  \\"\\"\\"
  expand: String

  \\"\\"\\"
  A list of fields to return for the issue. This parameter accepts a comma-separated list. Use it to retrieve a subset of fields. Allowed values:
  
   *  \`*all\` Returns all fields.
   *  \`*navigable\` Returns navigable fields.
   *  Any issue field, prefixed with a minus to exclude.
  
  Examples:
  
   *  \`summary,comment\` Returns only the summary and comments fields.
   *  \`-description\` Returns all (default) fields except description.
   *  \`*navigable,-comment\` Returns all navigable fields except comment.
  
  This parameter may be specified multiple times. For example, \`fields=field1,field2& fields=field3\`.
  
  Note: All fields are returned by default. This differs from [Search for issues using JQL (GET)](#api-rest-api-3-search-get) and [Search for issues using JQL (POST)](#api-rest-api-3-search-post) where the default is all navigable fields.
  \\"\\"\\"
  fields: [String]

  \\"\\"\\"
  Whether fields in \`fields\` are referenced by keys rather than IDs. This parameter is useful where fields have been added by a connect app and a field's key may differ from its ID.
  \\"\\"\\"
  fieldsByKeys: Boolean

  \\"\\"\\"
  A list of issue properties to return for the issue. This parameter accepts a comma-separated list. Allowed values:
  
   *  \`*all\` Returns all issue properties.
   *  Any issue property key, prefixed with a minus to exclude.
  
  Examples:
  
   *  \`*all\` Returns all properties.
   *  \`*all,-prop1\` Returns all properties except \`prop1\`.
   *  \`prop1,prop2\` Returns \`prop1\` and \`prop2\` properties.
  
  This parameter may be specified multiple times. For example, \`properties=prop1,prop2& properties=prop3\`.
  \\"\\"\\"
  properties: [String]

  \\"\\"\\"
  Whether the project in which the issue is created is added to the user's **Recently viewed** project list, as shown under **Projects** in Jira. This also populates the [JQL issues search](#api-rest-api-3-search-get) \`lastViewed\` field.
  \\"\\"\\"
  updateHistory: Boolean
}

input getMyFilters_request_Input {
  \\"\\"\\"
  Use [expand](#expansion) to include additional information about filter in the response. This parameter accepts a comma-separated list. Expand options include:
  
   *  \`sharedUsers\` Returns the users that the filter is shared with. This includes users that can browse projects that the filter is shared with. If you don't specify \`sharedUsers\`, then the \`sharedUsers\` object is returned but it doesn't list any users. The list of users returned is limited to 1000, to access additional users append \`[start-index:end-index]\` to the expand request. For example, to access the next 1000 users, use \`?expand=sharedUsers[1001:2000]\`.
   *  \`subscriptions\` Returns the users that are subscribed to the filter. If you don't specify \`subscriptions\`, the \`subscriptions\` object is returned but it doesn't list any subscriptions. The list of subscriptions returned is limited to 1000, to access additional subscriptions append \`[start-index:end-index]\` to the expand request. For example, to access the next 1000 subscriptions, use \`?expand=subscriptions[1001:2000]\`.
  \\"\\"\\"
  expand: String

  \\"\\"\\"Include the user's favorite filters in the response.\\"\\"\\"
  includeFavourites: Boolean
}

input getMyPermissions_request_Input {
  \\"\\"\\"The ID of the comment.\\"\\"\\"
  commentId: String

  \\"\\"\\"The ID of the issue.\\"\\"\\"
  issueId: String

  \\"\\"\\"The key of the issue. Ignored if \`issueId\` is provided.\\"\\"\\"
  issueKey: String

  \\"\\"\\"
  A list of permission keys. (Required) This parameter accepts a comma-separated list. To get the list of available permissions, use [Get all permissions](#api-rest-api-3-permissions-get).
  \\"\\"\\"
  permissions: String
  projectConfigurationUuid: String

  \\"\\"\\"The ID of project.\\"\\"\\"
  projectId: String

  \\"\\"\\"The key of project. Ignored if \`projectId\` is provided.\\"\\"\\"
  projectKey: String
  projectUuid: String
}

union getMyPermissions_response = ErrorCollection | Permissions

input getNotificationScheme_request_Input {
  \\"\\"\\"
  Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:
  
   *  \`all\` Returns all expandable information.
   *  \`field\` Returns information about any custom fields assigned to receive an event.
   *  \`group\` Returns information about any groups assigned to receive an event.
   *  \`notificationSchemeEvents\` Returns a list of event associations. This list is returned for all expandable information.
   *  \`projectRole\` Returns information about any project roles assigned to receive an event.
   *  \`user\` Returns information about any users assigned to receive an event.
  \\"\\"\\"
  expand: String
}

input getNotificationSchemes_request_Input {
  \\"\\"\\"
  Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:
  
   *  \`all\` Returns all expandable information.
   *  \`field\` Returns information about any custom fields assigned to receive an event.
   *  \`group\` Returns information about any groups assigned to receive an event.
   *  \`notificationSchemeEvents\` Returns a list of event associations. This list is returned for all expandable information.
   *  \`projectRole\` Returns information about any project roles assigned to receive an event.
   *  \`user\` Returns information about any users assigned to receive an event.
  \\"\\"\\"
  expand: String

  \\"\\"\\"The maximum number of items to return per page.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"
  The index of the first item to return in a page of results (page offset).
  \\"\\"\\"
  startAt: BigInt
}

type getOptionsForContext_400_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

type getOptionsForContext_403_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

input getOptionsForContext_request_Input {
  \\"\\"\\"The maximum number of items to return per page.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"Whether only options are returned.\\"\\"\\"
  onlyOptions: Boolean

  \\"\\"\\"The ID of the option.\\"\\"\\"
  optionId: BigInt

  \\"\\"\\"
  The index of the first item to return in a page of results (page offset).
  \\"\\"\\"
  startAt: BigInt
}

union getOptionsForContext_response = PageBeanCustomFieldContextOption | getContextsForField_404_response | getOptionsForContext_400_response | getOptionsForContext_403_response

input getPermissionSchemeGrant_request_Input {
  \\"\\"\\"
  Use expand to include additional information in the response. This parameter accepts a comma-separated list. Note that permissions are always included when you specify any value. Expand options include:
  
   *  \`all\` Returns all expandable information.
   *  \`field\` Returns information about the custom field granted the permission.
   *  \`group\` Returns information about the group that is granted the permission.
   *  \`permissions\` Returns all permission grants for each permission scheme.
   *  \`projectRole\` Returns information about the project role granted the permission.
   *  \`user\` Returns information about the user who is granted the permission.
  \\"\\"\\"
  expand: String
}

input getPermissionSchemeGrants_request_Input {
  \\"\\"\\"
  Use expand to include additional information in the response. This parameter accepts a comma-separated list. Note that permissions are always included when you specify any value. Expand options include:
  
   *  \`permissions\` Returns all permission grants for each permission scheme.
   *  \`user\` Returns information about the user who is granted the permission.
   *  \`group\` Returns information about the group that is granted the permission.
   *  \`projectRole\` Returns information about the project role granted the permission.
   *  \`field\` Returns information about the custom field granted the permission.
   *  \`all\` Returns all expandable information.
  \\"\\"\\"
  expand: String
}

input getPreference_request_Input {
  \\"\\"\\"The key of the preference.\\"\\"\\"
  key: String!
}

input getProjectComponentsPaginated_request_Input {
  \\"\\"\\"The maximum number of items to return per page.\\"\\"\\"
  maxResults: Int
  orderBy: queryInput_getProjectComponentsPaginated_orderBy

  \\"\\"\\"
  Filter the results using a literal string. Components with a matching \`name\` or \`description\` are returned (case insensitive).
  \\"\\"\\"
  query: String

  \\"\\"\\"
  The index of the first item to return in a page of results (page offset).
  \\"\\"\\"
  startAt: BigInt
}

input getProjectContextMapping_request_Input {
  \\"\\"\\"
  The list of context IDs. To include multiple context, separate IDs with ampersand: \`contextId=10000&contextId=10001\`.
  \\"\\"\\"
  contextId: [BigInt]

  \\"\\"\\"The maximum number of items to return per page.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"
  The index of the first item to return in a page of results (page offset).
  \\"\\"\\"
  startAt: BigInt
}

union getProjectContextMapping_response = PageBeanCustomFieldContextProjectMapping | getContextsForField_403_response | getContextsForField_404_response

input getProjectRoleDetails_request_Input {
  \\"\\"\\"
  Whether the roles should be filtered to include only those the user is assigned to.
  \\"\\"\\"
  currentMember: Boolean
  excludeConnectAddons: Boolean
}

input getProjectRole_request_Input {
  \\"\\"\\"Exclude inactive users.\\"\\"\\"
  excludeInactiveUsers: Boolean
}

type getProjectRoles_200_response {
  additionalProperties: JSON
}

input getProjectVersionsPaginated_request_Input {
  \\"\\"\\"
  Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:
  
   *  \`issuesstatus\` Returns the number of issues in each status category for each version.
   *  \`operations\` Returns actions that can be performed on the specified version.
  \\"\\"\\"
  expand: String

  \\"\\"\\"The maximum number of items to return per page.\\"\\"\\"
  maxResults: Int
  orderBy: queryInput_getProjectVersionsPaginated_orderBy

  \\"\\"\\"
  Filter the results using a literal string. Versions with matching \`name\` or \`description\` are returned (case insensitive).
  \\"\\"\\"
  query: String

  \\"\\"\\"
  The index of the first item to return in a page of results (page offset).
  \\"\\"\\"
  startAt: BigInt

  \\"\\"\\"
  A list of status values used to filter the results by version status. This parameter accepts a comma-separated list. The status values are \`released\`, \`unreleased\`, and \`archived\`.
  \\"\\"\\"
  status: String
}

input getProjectVersions_request_Input {
  \\"\\"\\"
  Use [expand](#expansion) to include additional information in the response. This parameter accepts \`operations\`, which returns actions that can be performed on the version.
  \\"\\"\\"
  expand: String
}

input getProject_request_Input {
  \\"\\"\\"
  Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Note that the project description, issue types, and project lead are included in all responses by default. Expand options include:
  
   *  \`description\` The project description.
   *  \`issueTypes\` The issue types associated with the project.
   *  \`lead\` The project lead.
   *  \`projectKeys\` All project keys associated with the project.
   *  \`issueTypeHierarchy\` The project issue type hierarchy.
  \\"\\"\\"
  expand: String

  \\"\\"\\"
  A list of project properties to return for the project. This parameter accepts a comma-separated list.
  \\"\\"\\"
  properties: [String]
}

input getProjectsForIssueTypeScreenScheme_request_Input {
  \\"\\"\\"The maximum number of items to return per page.\\"\\"\\"
  maxResults: Int
  query: String

  \\"\\"\\"
  The index of the first item to return in a page of results (page offset).
  \\"\\"\\"
  startAt: BigInt
}

input getRecent_request_Input {
  \\"\\"\\"
  Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expanded options include:
  
   *  \`description\` Returns the project description.
   *  \`projectKeys\` Returns all project keys associated with a project.
   *  \`lead\` Returns information about the project lead.
   *  \`issueTypes\` Returns all issue types associated with the project.
   *  \`url\` Returns the URL associated with the project.
   *  \`permissions\` Returns the permissions associated with the project.
   *  \`insight\` EXPERIMENTAL. Returns the insight details of total issue count and last issue update time for the project.
   *  \`*\` Returns the project with all available expand options.
  \\"\\"\\"
  expand: String

  \\"\\"\\"
  EXPERIMENTAL. A list of project properties to return for the project. This parameter accepts a comma-separated list. Invalid property names are ignored.
  \\"\\"\\"
  properties: [JSON]
}

input getRemoteIssueLinks_request_Input {
  \\"\\"\\"The global ID of the remote issue link.\\"\\"\\"
  globalId: String
}

input getScreenSchemes_request_Input {
  \\"\\"\\"
  Use [expand](#expansion) include additional information in the response. This parameter accepts \`issueTypeScreenSchemes\` that, for each screen schemes, returns information about the issue type screen scheme the screen scheme is assigned to.
  \\"\\"\\"
  expand: String

  \\"\\"\\"
  The list of screen scheme IDs. To include multiple IDs, provide an ampersand-separated list. For example, \`id=10000&id=10001\`.
  \\"\\"\\"
  id: [BigInt]

  \\"\\"\\"The maximum number of items to return per page.\\"\\"\\"
  maxResults: Int
  orderBy: queryInput_getScreenSchemes_orderBy

  \\"\\"\\"
  String used to perform a case-insensitive partial match with screen scheme name.
  \\"\\"\\"
  queryString: String

  \\"\\"\\"
  The index of the first item to return in a page of results (page offset).
  \\"\\"\\"
  startAt: BigInt
}

input getScreensForField_request_Input {
  \\"\\"\\"
  Use [expand](#expansion) to include additional information about screens in the response. This parameter accepts \`tab\` which returns details about the screen tabs the field is used in.
  \\"\\"\\"
  expand: String

  \\"\\"\\"The maximum number of items to return per page.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"
  The index of the first item to return in a page of results (page offset).
  \\"\\"\\"
  startAt: BigInt
}

input getScreens_request_Input {
  \\"\\"\\"
  The list of screen IDs. To include multiple IDs, provide an ampersand-separated list. For example, \`id=10000&id=10001\`.
  \\"\\"\\"
  id: [BigInt]

  \\"\\"\\"The maximum number of items to return per page.\\"\\"\\"
  maxResults: Int
  orderBy: queryInput_getScreens_orderBy

  \\"\\"\\"
  String used to perform a case-insensitive partial match with screen name.
  \\"\\"\\"
  queryString: String

  \\"\\"\\"
  The scope filter string. To filter by multiple scope, provide an ampersand-separated list. For example, \`scope=GLOBAL&scope=PROJECT\`.
  \\"\\"\\"
  scope: [queryInput_getScreens_scope_items]

  \\"\\"\\"
  The index of the first item to return in a page of results (page offset).
  \\"\\"\\"
  startAt: BigInt
}

input getSelectableIssueFieldOptions_request_Input {
  \\"\\"\\"The maximum number of items to return per page.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"
  Filters the results to options that are only available in the specified project.
  \\"\\"\\"
  projectId: BigInt

  \\"\\"\\"
  The index of the first item to return in a page of results (page offset).
  \\"\\"\\"
  startAt: BigInt
}

input getStatusesById_request_Input {
  \\"\\"\\"
  Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:
  
   *  \`usages\` Returns the project and issue types that use the status in their workflow.
  \\"\\"\\"
  expand: String

  \\"\\"\\"
  The list of status IDs. To include multiple IDs, provide an ampersand-separated list. For example, id=10000&id=10001.
  
  Min items \`1\`, Max items \`50\`
  \\"\\"\\"
  id: [String]
}

input getTransitions_request_Input {
  \\"\\"\\"
  Use [expand](#expansion) to include additional information about transitions in the response. This parameter accepts \`transitions.fields\`, which returns information about the fields in the transition screen for each transition. Fields hidden from the screen are not returned. Use this information to populate the \`fields\` and \`update\` fields in [Transition issue](#api-rest-api-3-issue-issueIdOrKey-transitions-post).
  \\"\\"\\"
  expand: String

  \\"\\"\\"
  Whether details of transitions that fail a condition are included in the response
  \\"\\"\\"
  includeUnavailableTransitions: Boolean

  \\"\\"\\"
  Whether transitions with the condition *Hide From User Condition* are included in the response.
  \\"\\"\\"
  skipRemoteOnlyCondition: Boolean

  \\"\\"\\"
  Whether the transitions are sorted by ops-bar sequence value first then category order (Todo, In Progress, Done) or only by ops-bar sequence value.
  \\"\\"\\"
  sortByOpsBarAndStatus: Boolean

  \\"\\"\\"The ID of the transition.\\"\\"\\"
  transitionId: String
}

input getTrashedFieldsPaginated_request_Input {
  id: [String]

  \\"\\"\\"The maximum number of items to return per page.\\"\\"\\"
  maxResults: Int
  orderBy: queryInput_getTrashedFieldsPaginated_orderBy

  \\"\\"\\"
  String used to perform a case-insensitive partial match with field names or descriptions.
  \\"\\"\\"
  query: String

  \\"\\"\\"
  The index of the first item to return in a page of results (page offset).
  \\"\\"\\"
  startAt: BigInt
}

union getTrashedFieldsPaginated_response = ErrorCollection | PageBeanField

input getUiModifications_request_Input {
  \\"\\"\\"
  Use expand to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:
  
   *  \`data\` Returns UI modification data.
   *  \`contexts\` Returns UI modification contexts.
  \\"\\"\\"
  expand: String

  \\"\\"\\"The maximum number of items to return per page.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"
  The index of the first item to return in a page of results (page offset).
  \\"\\"\\"
  startAt: BigInt
}

input getUserDefaultColumns_request_Input {
  \\"\\"\\"
  The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.
  \\"\\"\\"
  accountId: queryInput_getUserDefaultColumns_accountId

  \\"\\"\\"
  This parameter is no longer available See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  username: String
}

input getUserEmailBulk_request_Input {
  \\"\\"\\"
  The account IDs of the users for which emails are required. An \`accountId\` is an identifier that uniquely identifies the user across all Atlassian products. For example, \`5b10ac8d82e05b22cc7d4ef5\`. Note, this should be treated as an opaque identifier (that is, do not assume any structure in the value).
  \\"\\"\\"
  accountId: [queryInput_getUserEmailBulk_accountId_items]!
}

input getUserEmail_request_Input {
  \\"\\"\\"
  The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, \`5b10ac8d82e05b22cc7d4ef5\`.
  \\"\\"\\"
  accountId: queryInput_getUserEmail_accountId!
}

input getUserGroups_request_Input {
  \\"\\"\\"
  The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.
  \\"\\"\\"
  accountId: queryInput_getUserDefaultColumns_accountId!

  \\"\\"\\"
  This parameter is no longer available. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  key: String

  \\"\\"\\"
  This parameter is no longer available. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  username: String
}

input getUserPropertyKeys_request_Input {
  \\"\\"\\"
  The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.
  \\"\\"\\"
  accountId: queryInput_getUserDefaultColumns_accountId

  \\"\\"\\"
  This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  userKey: String

  \\"\\"\\"
  This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
  \\"\\"\\"
  username: String
}

input getUser_request_Input {
  \\"\\"\\"
  The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required.
  \\"\\"\\"
  accountId: queryInput_getUser_accountId

  \\"\\"\\"
  Use [expand](#expansion) to include additional information about users in the response. This parameter accepts a comma-separated list. Expand options include:
  
   *  \`groups\` includes all groups and nested groups to which the user belongs.
   *  \`applicationRoles\` includes details of all the applications to which the user has access.
  \\"\\"\\"
  expand: String

  \\"\\"\\"
  This parameter is no longer available. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide) for details.
  \\"\\"\\"
  key: String

  \\"\\"\\"
  This parameter is no longer available. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide) for details.
  \\"\\"\\"
  username: String
}

input getUsersFromGroup_request_Input {
  \\"\\"\\"
  The ID of the group. This parameter cannot be used with the \`groupName\` parameter.
  \\"\\"\\"
  groupId: String

  \\"\\"\\"
  As a group's name can change, use of \`groupId\` is recommended to identify a group.  
  The name of the group. This parameter cannot be used with the \`groupId\` parameter.
  \\"\\"\\"
  groupname: String

  \\"\\"\\"Include inactive users.\\"\\"\\"
  includeInactiveUsers: Boolean

  \\"\\"\\"The maximum number of items to return per page.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"
  The index of the first item to return in a page of results (page offset).
  \\"\\"\\"
  startAt: BigInt
}

input getValidProjectName_request_Input {
  \\"\\"\\"The project name.\\"\\"\\"
  name: String!
}

input getVersion_request_Input {
  \\"\\"\\"
  Use [expand](#expansion) to include additional information about version in the response. This parameter accepts a comma-separated list. Expand options include:
  
   *  \`operations\` Returns the list of operations available for this version.
   *  \`issuesstatus\` Returns the count of issues in this version for each of the status categories *to do*, *in progress*, *done*, and *unmapped*. The *unmapped* property represents the number of issues with a status other than *to do*, *in progress*, and *done*.
  \\"\\"\\"
  expand: String
}

input getVisibleIssueFieldOptions_request_Input {
  \\"\\"\\"The maximum number of items to return per page.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"
  Filters the results to options that are only available in the specified project.
  \\"\\"\\"
  projectId: BigInt

  \\"\\"\\"
  The index of the first item to return in a page of results (page offset).
  \\"\\"\\"
  startAt: BigInt
}

input getWorkflowSchemeIssueType_request_Input {
  \\"\\"\\"
  Returns the mapping from the workflow scheme's draft rather than the workflow scheme, if set to true. If no draft exists, the mapping from the workflow scheme is returned.
  \\"\\"\\"
  returnDraftIfExists: Boolean
}

type getWorkflowSchemeProjectAssociations_400_response {
  errorMessages: [JSON]
  errors: query_getWorkflowSchemeProjectAssociations_oneOf_1_errors
}

type getWorkflowSchemeProjectAssociations_403_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

input getWorkflowSchemeProjectAssociations_request_Input {
  \\"\\"\\"
  The ID of a project to return the workflow schemes for. To include multiple projects, provide an ampersand-Jim: oneseparated list. For example, \`projectId=10000&projectId=10001\`.
  \\"\\"\\"
  projectId: [BigInt]!
}

union getWorkflowSchemeProjectAssociations_response = ContainerOfWorkflowSchemeAssociations | getWorkflowSchemeProjectAssociations_400_response | getWorkflowSchemeProjectAssociations_403_response

input getWorkflowScheme_request_Input {
  \\"\\"\\"
  Returns the workflow scheme's draft rather than scheme itself, if set to true. If the workflow scheme does not have a draft, then the workflow scheme is returned.
  \\"\\"\\"
  returnDraftIfExists: Boolean
}

input getWorkflowTransitionProperties_request_Input {
  \\"\\"\\"
  Some properties with keys that have the *jira.* prefix are reserved, which means they are not editable. To include these properties in the results, set this parameter to *true*.
  \\"\\"\\"
  includeReservedKeys: Boolean

  \\"\\"\\"
  The key of the property being returned, also known as the name of the property. If this parameter is not specified, all properties on the transition are returned.
  \\"\\"\\"
  key: String
  workflowMode: queryInput_getWorkflowTransitionProperties_workflowMode

  \\"\\"\\"The name of the workflow that the transition belongs to.\\"\\"\\"
  workflowName: String!
}

input getWorkflowTransitionRuleConfigurations_request_Input {
  \\"\\"\\"
  EXPERIMENTAL: Whether draft or published workflows are returned. If not provided, both workflow types are returned.
  \\"\\"\\"
  draft: Boolean

  \\"\\"\\"
  Use [expand](#expansion) to include additional information in the response. This parameter accepts \`transition\`, which, for each rule, returns information about the transition the rule is assigned to.
  \\"\\"\\"
  expand: String

  \\"\\"\\"
  The transition rule class keys, as defined in the Connect app descriptor, of the transition rules to return.
  \\"\\"\\"
  keys: [String]

  \\"\\"\\"The maximum number of items to return per page.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"
  The index of the first item to return in a page of results (page offset).
  \\"\\"\\"
  startAt: BigInt

  \\"\\"\\"The types of the transition rules to return.\\"\\"\\"
  types: [queryInput_getWorkflowTransitionRuleConfigurations_types_items]!

  \\"\\"\\"EXPERIMENTAL: The list of \`tags\` to filter by.\\"\\"\\"
  withTags: [queryInput_getWorkflowTransitionRuleConfigurations_withTags_items]

  \\"\\"\\"EXPERIMENTAL: The list of workflow names to filter by.\\"\\"\\"
  workflowNames: [queryInput_getWorkflowTransitionRuleConfigurations_workflowNames_items]
}

union getWorkflowTransitionRuleConfigurations_response = ErrorCollection | PageBeanWorkflowTransitionRules

input getWorkflow_request_Input {
  \\"\\"\\"
  Returns the mapping from the workflow scheme's draft rather than the workflow scheme, if set to true. If no draft exists, the mapping from the workflow scheme is returned.
  \\"\\"\\"
  returnDraftIfExists: Boolean

  \\"\\"\\"
  The name of a workflow in the scheme. Limits the results to the workflow-issue type mapping for the specified workflow.
  \\"\\"\\"
  workflowName: String
}

input getWorkflowsPaginated_request_Input {
  \\"\\"\\"
  Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:
  
   *  \`transitions\` For each workflow, returns information about the transitions inside the workflow.
   *  \`transitions.rules\` For each workflow transition, returns information about its rules. Transitions are included automatically if this expand is requested.
   *  \`transitions.properties\` For each workflow transition, returns information about its properties. Transitions are included automatically if this expand is requested.
   *  \`statuses\` For each workflow, returns information about the statuses inside the workflow.
   *  \`statuses.properties\` For each workflow status, returns information about its properties. Statuses are included automatically if this expand is requested.
   *  \`default\` For each workflow, returns information about whether this is the default workflow.
   *  \`schemes\` For each workflow, returns information about the workflow schemes the workflow is assigned to.
   *  \`projects\` For each workflow, returns information about the projects the workflow is assigned to, through workflow schemes.
   *  \`hasDraftWorkflow\` For each workflow, returns information about whether the workflow has a draft version.
   *  \`operations\` For each workflow, returns information about the actions that can be undertaken on the workflow.
  \\"\\"\\"
  expand: String

  \\"\\"\\"Filters active and inactive workflows.\\"\\"\\"
  isActive: Boolean

  \\"\\"\\"The maximum number of items to return per page.\\"\\"\\"
  maxResults: Int
  orderBy: queryInput_getWorkflowsPaginated_orderBy

  \\"\\"\\"
  String used to perform a case-insensitive partial match with workflow name.
  \\"\\"\\"
  queryString: String

  \\"\\"\\"
  The index of the first item to return in a page of results (page offset).
  \\"\\"\\"
  startAt: BigInt

  \\"\\"\\"
  The name of a workflow to return. To include multiple workflows, provide an ampersand-separated list. For example, \`workflowName=name1&workflowName=name2\`.
  \\"\\"\\"
  workflowName: [String]
}

union getWorkflowsPaginated_response = ErrorCollection | PageBeanWorkflow

input getWorklog_request_Input {
  \\"\\"\\"
  Use [expand](#expansion) to include additional information about work logs in the response. This parameter accepts
  
  \`properties\`, which returns worklog properties.
  \\"\\"\\"
  expand: String
}

\\"\\"\\"The type of custom field.\\"\\"\\"
enum mutationInput_AppIssueFieldValueUpdateResource_updateIssueFields_put_updateValueList_items__type {
  MultiSelectIssueField
  NumberIssueField
  RichTextIssueField
  SingleSelectIssueField
  StringIssueField
  TextIssueField
}

\\"\\"\\"
The type of the share permission.Specify the type as follows:

 *  \`user\` Share with a user.
 *  \`group\` Share with a group. Specify \`groupname\` as well.
 *  \`project\` Share with a project. Specify \`projectId\` as well.
 *  \`projectRole\` Share with a project role in a project. Specify \`projectId\` and \`projectRoleId\` as well.
 *  \`global\` Share globally, including anonymous users. If set, this type overrides all existing share permissions and must be deleted before any non-global share permissions is set.
 *  \`authenticated\` Share with all logged-in users. This shows as \`loggedin\` in the response. If set, this type overrides all existing share permissions and must be deleted before any non-global share permissions is set.
\\"\\"\\"
enum mutationInput_addSharePermission_type {
  authenticated
  global
  group
  project
  projectRole
  user
}

\\"\\"\\"
Context variables and their types. The type checker assumes that [common context variables](https://developer.atlassian.com/cloud/jira/platform/jira-expressions/#context-variables), such as \`issue\` or \`project\`, are available in context and sets their type. Use this property to override the default types or provide details of new variables.
\\"\\"\\"
scalar mutationInput_analyseExpression_contextVariables_Input

\\"\\"\\"The value of properties to perform the bulk operation on.\\"\\"\\"
scalar mutationInput_bulkSetIssueProperty_filter_allOf_0_currentValue_Input

\\"\\"\\"
The value of the property. The value must be a [valid](https://tools.ietf.org/html/rfc4627), non-empty JSON blob. The maximum length is 32768 characters.
\\"\\"\\"
scalar mutationInput_bulkSetIssueProperty_value_Input

enum mutationInput_bulkSetIssuesPropertiesList_additionalProperties_numberType {
  BIG_DECIMAL
  BIG_INTEGER
  DOUBLE
  FLOAT
  INT
  LONG
}

\\"\\"\\"
The searcher defines the way the field is searched in Jira. For example, *com.atlassian.jira.plugin.system.customfieldtypes:grouppickersearcher*.  
The search UI (basic search and JQL search) will display different operations and values for the field, based on the field searcher. You must specify a searcher that is valid for the field type, as listed below (abbreviated values shown):

 *  \`cascadingselect\`: \`cascadingselectsearcher\`
 *  \`datepicker\`: \`daterange\`
 *  \`datetime\`: \`datetimerange\`
 *  \`float\`: \`exactnumber\` or \`numberrange\`
 *  \`grouppicker\`: \`grouppickersearcher\`
 *  \`importid\`: \`exactnumber\` or \`numberrange\`
 *  \`labels\`: \`labelsearcher\`
 *  \`multicheckboxes\`: \`multiselectsearcher\`
 *  \`multigrouppicker\`: \`multiselectsearcher\`
 *  \`multiselect\`: \`multiselectsearcher\`
 *  \`multiuserpicker\`: \`userpickergroupsearcher\`
 *  \`multiversion\`: \`versionsearcher\`
 *  \`project\`: \`projectsearcher\`
 *  \`radiobuttons\`: \`multiselectsearcher\`
 *  \`readonlyfield\`: \`textsearcher\`
 *  \`select\`: \`multiselectsearcher\`
 *  \`textarea\`: \`textsearcher\`
 *  \`textfield\`: \`textsearcher\`
 *  \`url\`: \`exacttextsearcher\`
 *  \`userpicker\`: \`userpickergroupsearcher\`
 *  \`version\`: \`versionsearcher\`

If no searcher is provided, the field isn't searchable. However, [Forge custom fields](https://developer.atlassian.com/platform/forge/manifest-reference/modules/#jira-custom-field-type--beta-) have a searcher set automatically, so are always searchable.
\\"\\"\\"
enum mutationInput_createCustomField_searcherKey {
  com_atlassian_jira_plugin_system_customfieldtypes_COLON_cascadingselectsearcher
  com_atlassian_jira_plugin_system_customfieldtypes_COLON_daterange
  com_atlassian_jira_plugin_system_customfieldtypes_COLON_datetimerange
  com_atlassian_jira_plugin_system_customfieldtypes_COLON_exactnumber
  com_atlassian_jira_plugin_system_customfieldtypes_COLON_exacttextsearcher
  com_atlassian_jira_plugin_system_customfieldtypes_COLON_grouppickersearcher
  com_atlassian_jira_plugin_system_customfieldtypes_COLON_labelsearcher
  com_atlassian_jira_plugin_system_customfieldtypes_COLON_multiselectsearcher
  com_atlassian_jira_plugin_system_customfieldtypes_COLON_numberrange
  com_atlassian_jira_plugin_system_customfieldtypes_COLON_projectsearcher
  com_atlassian_jira_plugin_system_customfieldtypes_COLON_textsearcher
  com_atlassian_jira_plugin_system_customfieldtypes_COLON_userpickergroupsearcher
  com_atlassian_jira_plugin_system_customfieldtypes_COLON_versionsearcher
}

\\"\\"\\"The description of the field configuration scheme.\\"\\"\\"
scalar mutationInput_createFieldConfigurationScheme_description

\\"\\"\\"The name of the field configuration scheme. The name must be unique.\\"\\"\\"
scalar mutationInput_createFieldConfigurationScheme_name

\\"\\"\\"
Deprecated. Use \`hierarchyLevel\` instead. See the [deprecation notice](https://community.developer.atlassian.com/t/deprecation-of-the-epic-link-parent-link-and-other-related-fields-in-rest-apis-and-webhooks/54048) for details.

Whether the issue type is \`subtype\` or \`standard\`. Defaults to \`standard\`.
\\"\\"\\"
enum mutationInput_createIssueType_type {
  standard
  subtask
}

\\"\\"\\"The default assignee when creating issues for this project.\\"\\"\\"
enum mutationInput_createProject_assigneeType {
  PROJECT_LEAD
  UNASSIGNED
}

\\"\\"\\"
The account ID of the project lead. Either \`lead\` or \`leadAccountId\` must be set when creating a project. Cannot be provided with \`lead\`.
\\"\\"\\"
scalar mutationInput_createProject_leadAccountId

\\"\\"\\"
A predefined configuration for a project. The type of the \`projectTemplateKey\` must match with the type of the \`projectTypeKey\`.
\\"\\"\\"
enum mutationInput_createProject_projectTemplateKey {
  com_atlassian_jira_core_project_templates_COLON_jira_core_simplified_content_management
  com_atlassian_jira_core_project_templates_COLON_jira_core_simplified_document_approval
  com_atlassian_jira_core_project_templates_COLON_jira_core_simplified_lead_tracking
  com_atlassian_jira_core_project_templates_COLON_jira_core_simplified_process_control
  com_atlassian_jira_core_project_templates_COLON_jira_core_simplified_procurement
  com_atlassian_jira_core_project_templates_COLON_jira_core_simplified_project_management
  com_atlassian_jira_core_project_templates_COLON_jira_core_simplified_recruitment
  com_atlassian_jira_core_project_templates_COLON_jira_core_simplified_task_
  com_atlassian_servicedesk_COLON_simplified_external_service_desk
  com_atlassian_servicedesk_COLON_simplified_facilities_service_desk
  com_atlassian_servicedesk_COLON_simplified_general_service_desk
  com_atlassian_servicedesk_COLON_simplified_general_service_desk_business
  com_atlassian_servicedesk_COLON_simplified_general_service_desk_it
  com_atlassian_servicedesk_COLON_simplified_hr_service_desk
  com_atlassian_servicedesk_COLON_simplified_internal_service_desk
  com_atlassian_servicedesk_COLON_simplified_it_service_management
  com_atlassian_servicedesk_COLON_simplified_legal_service_desk
  com_pyxis_greenhopper_jira_COLON_gh_simplified_agility_kanban
  com_pyxis_greenhopper_jira_COLON_gh_simplified_agility_scrum
  com_pyxis_greenhopper_jira_COLON_gh_simplified_basic
  com_pyxis_greenhopper_jira_COLON_gh_simplified_kanban_classic
  com_pyxis_greenhopper_jira_COLON_gh_simplified_scrum_classic
}

\\"\\"\\"
The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes), which defines the application-specific feature set. If you don't specify the project template you have to specify the project type.
\\"\\"\\"
enum mutationInput_createProject_projectTypeKey {
  business
  service_desk
  software
}

\\"\\"\\"The name of the status.\\"\\"\\"
scalar mutationInput_createStatuses_statuses_items_name

\\"\\"\\"The properties of the status.\\"\\"\\"
scalar mutationInput_createWorkflow_statuses_items_Input

\\"\\"\\"The properties of the transition.\\"\\"\\"
scalar mutationInput_createWorkflow_transitions_items_Input

\\"\\"\\"
Determines how to validate the JQL query and treat the validation results.
\\"\\"\\"
enum mutationInput_evaluateJiraExpression_context_allOf_0_issues_allOf_0_jql_allOf_0_validation {
  none
  strict
  warn
}

\\"\\"\\"
The named position to which the screen tab field should be moved. Required if \`after\` isn't provided.
\\"\\"\\"
enum mutationInput_moveScreenTabField_position {
  Earlier
  First
  Last
  Later
}

\\"\\"\\"
An absolute position in which to place the moved version. Cannot be used with \`after\`.
\\"\\"\\"
enum mutationInput_moveVersion_position {
  Earlier
  First
  Last
  Later
}

scalar mutationInput_parseJqlQueries_queries_items

\\"\\"\\"
The position the custom field options should be moved to. Required if \`after\` isn't provided.
\\"\\"\\"
enum mutationInput_reorderCustomFieldOptions_position {
  First
  Last
}

\\"\\"\\"
The position the issue types should be moved to. Required if \`after\` isn't provided.
\\"\\"\\"
enum mutationInput_reorderIssueTypesInIssueTypeScheme_position {
  First
  Last
}

\\"\\"\\"
The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.
\\"\\"\\"
scalar mutationInput_sanitiseJqlQueries_queries_items_accountId

\\"\\"\\"
Determines how to validate the JQL query and treat the validation results. Supported values:

 *  \`strict\` Returns a 400 response code if any errors are found, along with a list of all errors (and warnings).
 *  \`warn\` Returns all errors as warnings.
 *  \`none\` No validation is performed.
 *  \`true\` *Deprecated* A legacy synonym for \`strict\`.
 *  \`false\` *Deprecated* A legacy synonym for \`warn\`.

The default is \`strict\`.

Note: If the JQL is not correctly formed a 400 response code is returned, regardless of the \`validateQuery\` value.
\\"\\"\\"
enum mutationInput_searchForIssuesUsingJqlPost_validateQuery {
  FALSE
  TRUE
  none
  strict
  warn
}

\\"\\"\\"
The actors to add to the project role.

Add groups using:

 *  \`atlassian-group-role-actor\` and a list of group names.
 *  \`atlassian-group-role-actor-id\` and a list of group IDs.

As a group's name can change, use of \`atlassian-group-role-actor-id\` is recommended. For example, \`\\"atlassian-group-role-actor-id\\":[\\"eef79f81-0b89-4fca-a736-4be531a10869\\",\\"77f6ab39-e755-4570-a6ae-2d7a8df0bcb8\\"]\`.

Add users using \`atlassian-user-role-actor\` and a list of account IDs. For example, \`\\"atlassian-user-role-actor\\":[\\"12345678-9abc-def1-2345-6789abcdef12\\", \\"abcdef12-3456-789a-bcde-f123456789ab\\"]\`.
\\"\\"\\"
scalar mutationInput_setActors_categorisedActors_Input

\\"\\"\\"The feature state.\\"\\"\\"
enum mutationInput_toggleFeatureForProject_state {
  COMING_SOON
  DISABLED
  ENABLED
}

\\"\\"\\"
The searcher that defines the way the field is searched in Jira. It can be set to \`null\`, otherwise you must specify the valid searcher for the field type, as listed below (abbreviated values shown):

 *  \`cascadingselect\`: \`cascadingselectsearcher\`
 *  \`datepicker\`: \`daterange\`
 *  \`datetime\`: \`datetimerange\`
 *  \`float\`: \`exactnumber\` or \`numberrange\`
 *  \`grouppicker\`: \`grouppickersearcher\`
 *  \`importid\`: \`exactnumber\` or \`numberrange\`
 *  \`labels\`: \`labelsearcher\`
 *  \`multicheckboxes\`: \`multiselectsearcher\`
 *  \`multigrouppicker\`: \`multiselectsearcher\`
 *  \`multiselect\`: \`multiselectsearcher\`
 *  \`multiuserpicker\`: \`userpickergroupsearcher\`
 *  \`multiversion\`: \`versionsearcher\`
 *  \`project\`: \`projectsearcher\`
 *  \`radiobuttons\`: \`multiselectsearcher\`
 *  \`readonlyfield\`: \`textsearcher\`
 *  \`select\`: \`multiselectsearcher\`
 *  \`textarea\`: \`textsearcher\`
 *  \`textfield\`: \`textsearcher\`
 *  \`url\`: \`exacttextsearcher\`
 *  \`userpicker\`: \`userpickergroupsearcher\`
 *  \`version\`: \`versionsearcher\`
\\"\\"\\"
enum mutationInput_updateCustomField_searcherKey {
  com_atlassian_jira_plugin_system_customfieldtypes_COLON_cascadingselectsearcher
  com_atlassian_jira_plugin_system_customfieldtypes_COLON_daterange
  com_atlassian_jira_plugin_system_customfieldtypes_COLON_datetimerange
  com_atlassian_jira_plugin_system_customfieldtypes_COLON_exactnumber
  com_atlassian_jira_plugin_system_customfieldtypes_COLON_exacttextsearcher
  com_atlassian_jira_plugin_system_customfieldtypes_COLON_grouppickersearcher
  com_atlassian_jira_plugin_system_customfieldtypes_COLON_labelsearcher
  com_atlassian_jira_plugin_system_customfieldtypes_COLON_multiselectsearcher
  com_atlassian_jira_plugin_system_customfieldtypes_COLON_numberrange
  com_atlassian_jira_plugin_system_customfieldtypes_COLON_projectsearcher
  com_atlassian_jira_plugin_system_customfieldtypes_COLON_textsearcher
  com_atlassian_jira_plugin_system_customfieldtypes_COLON_userpickergroupsearcher
  com_atlassian_jira_plugin_system_customfieldtypes_COLON_versionsearcher
}

\\"\\"\\"
The value for the custom field. The value must be compatible with the [custom field type](https://developer.atlassian.com/platform/forge/manifest-reference/modules/jira-custom-field/#data-types) as follows:

 *  \`string\` the value must be a string.
 *  \`number\` the value must be a number.
 *  \`datetime\` the value must be a string that represents a date in the ISO format or the simplified extended ISO format. For example, \`\\"2023-01-18T12:00:00-03:00\\"\` or \`\\"2023-01-18T12:00:00.000Z\\"\`. However, the milliseconds part is ignored.
 *  \`user\` the value must be an object that contains the \`accountId\` field.
 *  \`group\` the value must be an object that contains the group \`name\` or \`groupId\` field. Because group names can change, we recommend using \`groupId\`.

A list of appropriate values must be provided if the field is of the \`list\` [collection type](https://developer.atlassian.com/platform/forge/manifest-reference/modules/jira-custom-field/#collection-types).
\\"\\"\\"
scalar mutationInput_updateMultipleCustomFieldValues_updates_items_value_Input

\\"\\"\\"The account ID of the project lead. Cannot be provided with \`lead\`.\\"\\"\\"
scalar mutationInput_updateProject_leadAccountId

\\"\\"\\"
Variables used in the formula, mapped to the parts of the expression they refer to.
\\"\\"\\"
type mutation_analyseExpression_oneOf_0_results_items_complexity_variables {
  additionalProperties: JSON
}

\\"\\"\\"The error type.\\"\\"\\"
enum mutation_analyseExpression_oneOf_0_results_items_errors_items_type {
  other
  syntax
  type
}

type mutation_createOrUpdateRemoteIssueLink_oneOf_2_errors {
  title: String
}

\\"\\"\\"
The value of the evaluated expression. It may be a primitive JSON value or a Jira REST API object. (Some expressions do not produce any meaningful results—for example, an expression that returns a lambda function—if that's the case a simple string representation is returned. These string representations should not be relied upon and may change without notice.)
\\"\\"\\"
type mutation_evaluateJiraExpression_oneOf_0_value {
  additionalProperties: JSON
}

\\"\\"\\"The map of issue ID to boolean watch status.\\"\\"\\"
type mutation_getIsWatchingIssueBulk_issuesIsWatching {
  additionalProperties: JSON
}

\\"\\"\\"The direction in which to order the results.\\"\\"\\"
enum mutation_parseJqlQueries_oneOf_0_queries_items_structure_allOf_0_orderBy_fields_items_direction {
  asc
  desc
}

\\"\\"\\"
The type of the property value extraction. Not available if the extraction for the property is not registered on the instance with the [Entity property](https://developer.atlassian.com/cloud/jira/platform/modules/entity-property/) module.
\\"\\"\\"
enum mutation_parseJqlQueries_oneOf_0_queries_items_structure_allOf_0_where_anyOf_1_field_property_items_type {
  date
  number
  string
  text
  user
}

\\"\\"\\"The keyword that is the operand value.\\"\\"\\"
enum mutation_parseJqlQueries_oneOf_0_queries_items_structure_allOf_0_where_anyOf_1_operand_anyOf_0_values_items_anyOf_2_keyword {
  empty
}

\\"\\"\\"The operator between the field and the operand.\\"\\"\\"
enum mutation_parseJqlQueries_oneOf_0_queries_items_structure_allOf_0_where_anyOf_2_predicates_items_operator {
  after
  before
  by
  during
  from
  on
  to
}

\\"\\"\\"The operator applied to the field.\\"\\"\\"
enum mutation_parseJqlQueries_oneOf_0_queries_items_structure_allOf_0_where_anyOf_3_operator {
  changed
}

\\"\\"\\"The account ID of the user for whom sanitization was performed.\\"\\"\\"
scalar mutation_sanitiseJqlQueries_oneOf_0_queries_items_accountId

\\"\\"\\"
A list of transition rule update errors, indexed by the transition rule ID. Any transition rule that appears here wasn't updated.
\\"\\"\\"
type mutation_updateWorkflowTransitionRuleConfigurations_oneOf_0_updateResults_items_ruleUpdateErrors {
  additionalProperties: JSON
}

union parseJqlQueries_response = ErrorCollection | ParsedJqlQueries

type publishDraftWorkflowScheme_400_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

type publishDraftWorkflowScheme_404_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

union publishDraftWorkflowScheme_response = TaskProgressBeanObject | Void_container | publishDraftWorkflowScheme_400_response | publishDraftWorkflowScheme_404_response

scalar queryInput_bulkGetUsers_accountId_items

\\"\\"\\"
A query string that is matched exactly against user \`accountId\`. Required, unless \`query\` is specified.
\\"\\"\\"
scalar queryInput_findBulkAssignableUsers_accountId

\\"\\"\\"
The size of the avatar to return. If an invalid value is provided, the default value is used.
\\"\\"\\"
enum queryInput_findUsersAndGroups_avatarSize {
  large
  large_AT_2x
  large_AT_3x
  medium
  medium_AT_2x
  medium_AT_3x
  small
  small_AT_2x
  small_AT_3x
  xlarge
  xlarge_AT_2x
  xlarge_AT_3x
  xsmall
  xsmall_AT_2x
  xsmall_AT_3x
  xxlarge
  xxlarge_AT_2x
  xxlarge_AT_3x
  xxxlarge
  xxxlarge_AT_2x
  xxxlarge_AT_3x
}

\\"\\"\\"
A query string that is matched exactly against a user \`accountId\`. Required, unless \`query\` or \`property\` is specified.
\\"\\"\\"
scalar queryInput_findUsers_accountId

\\"\\"\\"
The filter applied to the list of dashboards. Valid values are:

 *  \`favourite\` Returns dashboards the user has marked as favorite.
 *  \`my\` Returns dashboards owned by the user.
\\"\\"\\"
enum queryInput_getAllDashboards_filter {
  favourite
  my
}

\\"\\"\\"
[Order](#ordering) the results by a field:

 *  \`name\` Sorts by issue type scheme name.
 *  \`id\` Sorts by issue type scheme ID.
\\"\\"\\"
enum queryInput_getAllIssueTypeSchemes_orderBy {
  _PLUS_id
  _PLUS_name
  _id
  _name
  id
  name
}

\\"\\"\\"
The format to return the avatar image in. If not provided the original content format is returned.
\\"\\"\\"
enum queryInput_getAvatarImageByType_format {
  png
  svg
}

\\"\\"\\"
The size of the avatar image. If not provided the default size is returned.
\\"\\"\\"
enum queryInput_getAvatarImageByType_size {
  large
  medium
  small
  xlarge
  xsmall
}

\\"\\"\\"
[Order](#ordering) the results by a field. Accepts *created* to sort comments by their created date.
\\"\\"\\"
enum queryInput_getComments_orderBy {
  _PLUS_created
  _created
  created
}

\\"\\"\\"
User account ID used to return dashboards with the matching \`owner.accountId\`. This parameter cannot be used with the \`owner\` parameter.
\\"\\"\\"
scalar queryInput_getDashboardsPaginated_accountId

\\"\\"\\"
[Order](#ordering) the results by a field:

 *  \`description\` Sorts by dashboard description. Note that this sort works independently of whether the expand to display the description field is in use.
 *  \`favourite_count\` Sorts by dashboard popularity.
 *  \`id\` Sorts by dashboard ID.
 *  \`is_favourite\` Sorts by whether the dashboard is marked as a favorite.
 *  \`name\` Sorts by dashboard name.
 *  \`owner\` Sorts by dashboard owner name.
\\"\\"\\"
enum queryInput_getDashboardsPaginated_orderBy {
  _PLUS_description
  _PLUS_favorite_count
  _PLUS_id
  _PLUS_is_favorite
  _PLUS_name
  _PLUS_owner
  _description
  _favorite_count
  _id
  _is_favorite
  _name
  _owner
  description
  favorite_count
  id
  is_favorite
  name
  owner
}

\\"\\"\\"The status to filter by. It may be active, archived or deleted.\\"\\"\\"
enum queryInput_getDashboardsPaginated_status {
  active
  archived
  deleted
}

\\"\\"\\"
[Order](#ordering) the results by a field:

 *  \`contextsCount\` sorts by the number of contexts related to a field
 *  \`lastUsed\` sorts by the date when the value of the field last changed
 *  \`name\` sorts by the field name
 *  \`screensCount\` sorts by the number of screens related to a field
\\"\\"\\"
enum queryInput_getFieldsPaginated_orderBy {
  _PLUS_contextsCount
  _PLUS_lastUsed
  _PLUS_name
  _PLUS_screensCount
  _contextsCount
  _lastUsed
  _name
  _screensCount
  contextsCount
  lastUsed
  name
  screensCount
}

enum queryInput_getFieldsPaginated_type_items {
  custom
  system
}

\\"\\"\\"
User account ID used to return filters with the matching \`owner.accountId\`. This parameter cannot be used with \`owner\`.
\\"\\"\\"
scalar queryInput_getFiltersPaginated_accountId

\\"\\"\\"
[Order](#ordering) the results by a field:

 *  \`description\` Sorts by filter description. Note that this sorting works independently of whether the expand to display the description field is in use.
 *  \`favourite_count\` Sorts by the count of how many users have this filter as a favorite.
 *  \`is_favourite\` Sorts by whether the filter is marked as a favorite.
 *  \`id\` Sorts by filter ID.
 *  \`name\` Sorts by filter name.
 *  \`owner\` Sorts by the ID of the filter owner.
 *  \`is_shared\` Sorts by whether the filter is shared.
\\"\\"\\"
enum queryInput_getFiltersPaginated_orderBy {
  _PLUS_description
  _PLUS_favourite_count
  _PLUS_id
  _PLUS_is_favourite
  _PLUS_is_shared
  _PLUS_name
  _PLUS_owner
  _description
  _favourite_count
  _id
  _is_favourite
  _is_shared
  _name
  _owner
  description
  favourite_count
  id
  is_favourite
  is_shared
  name
  owner
}

\\"\\"\\"
[Order](#ordering) the results by a field:

 *  \`name\` Sorts by issue type screen scheme name.
 *  \`id\` Sorts by issue type screen scheme ID.
\\"\\"\\"
enum queryInput_getIssueTypeScreenSchemes_orderBy {
  _PLUS_id
  _PLUS_name
  _id
  _name
  id
  name
}

\\"\\"\\"
[Order](#ordering) the results by a field:

 *  \`description\` Sorts by the component description.
 *  \`issueCount\` Sorts by the count of issues associated with the component.
 *  \`lead\` Sorts by the user key of the component's project lead.
 *  \`name\` Sorts by component name.
\\"\\"\\"
enum queryInput_getProjectComponentsPaginated_orderBy {
  _PLUS_description
  _PLUS_issueCount
  _PLUS_lead
  _PLUS_name
  _description
  _issueCount
  _lead
  _name
  description
  issueCount
  lead
  name
}

\\"\\"\\"
[Order](#ordering) the results by a field:

 *  \`description\` Sorts by version description.
 *  \`name\` Sorts by version name.
 *  \`releaseDate\` Sorts by release date, starting with the oldest date. Versions with no release date are listed last.
 *  \`sequence\` Sorts by the order of appearance in the user interface.
 *  \`startDate\` Sorts by start date, starting with the oldest date. Versions with no start date are listed last.
\\"\\"\\"
enum queryInput_getProjectVersionsPaginated_orderBy {
  _PLUS_description
  _PLUS_name
  _PLUS_releaseDate
  _PLUS_sequence
  _PLUS_startDate
  _description
  _name
  _releaseDate
  _sequence
  _startDate
  description
  name
  releaseDate
  sequence
  startDate
}

\\"\\"\\"
[Order](#ordering) the results by a field:

 *  \`id\` Sorts by screen scheme ID.
 *  \`name\` Sorts by screen scheme name.
\\"\\"\\"
enum queryInput_getScreenSchemes_orderBy {
  _PLUS_id
  _PLUS_name
  _id
  _name
  id
  name
}

\\"\\"\\"
[Order](#ordering) the results by a field:

 *  \`id\` Sorts by screen ID.
 *  \`name\` Sorts by screen name.
\\"\\"\\"
enum queryInput_getScreens_orderBy {
  _PLUS_id
  _PLUS_name
  _id
  _name
  id
  name
}

enum queryInput_getScreens_scope_items {
  GLOBAL
  PROJECT
  TEMPLATE
}

\\"\\"\\"
[Order](#ordering) the results by a field:

 *  \`name\` sorts by the field name
 *  \`trashDate\` sorts by the date the field was moved to the trash
 *  \`plannedDeletionDate\` sorts by the planned deletion date
\\"\\"\\"
enum queryInput_getTrashedFieldsPaginated_orderBy {
  _PLUS_name
  _PLUS_plannedDeletionDate
  _PLUS_trashDate
  _name
  _plannedDeletionDate
  _trashDate
  name
  plannedDeletionDate
  trashDate
}

\\"\\"\\"
The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.
\\"\\"\\"
scalar queryInput_getUserDefaultColumns_accountId

scalar queryInput_getUserEmailBulk_accountId_items

\\"\\"\\"
The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, \`5b10ac8d82e05b22cc7d4ef5\`.
\\"\\"\\"
scalar queryInput_getUserEmail_accountId

\\"\\"\\"
The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required.
\\"\\"\\"
scalar queryInput_getUser_accountId

\\"\\"\\"
The workflow status. Set to *live* for active and inactive workflows, or *draft* for draft workflows.
\\"\\"\\"
enum queryInput_getWorkflowTransitionProperties_workflowMode {
  draft
  live
}

enum queryInput_getWorkflowTransitionRuleConfigurations_types_items {
  condition
  postfunction
  validator
}

scalar queryInput_getWorkflowTransitionRuleConfigurations_withTags_items

scalar queryInput_getWorkflowTransitionRuleConfigurations_workflowNames_items

\\"\\"\\"
[Order](#ordering) the results by a field:

 *  \`name\` Sorts by workflow name.
 *  \`created\` Sorts by create time.
 *  \`updated\` Sorts by update time.
\\"\\"\\"
enum queryInput_getWorkflowsPaginated_orderBy {
  _PLUS_created
  _PLUS_name
  _PLUS_updated
  _created
  _name
  _updated
  created
  name
  updated
}

\\"\\"\\"
Determines how to validate the JQL query and treat the validation results. Supported values are:

 *  \`strict\` Returns a 400 response code if any errors are found, along with a list of all errors (and warnings).
 *  \`warn\` Returns all errors as warnings.
 *  \`none\` No validation is performed.
 *  \`true\` *Deprecated* A legacy synonym for \`strict\`.
 *  \`false\` *Deprecated* A legacy synonym for \`warn\`.

Note: If the JQL is not correctly formed a 400 response code is returned, regardless of the \`validateQuery\` value.
\\"\\"\\"
enum queryInput_searchForIssuesUsingJql_validateQuery {
  FALSE
  TRUE
  none
  strict
  warn
}

\\"\\"\\"
Filter results by projects for which the user can:

 *  \`view\` the project, meaning that they have one of the following permissions:
    
     *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
     *  *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
     *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
 *  \`browse\` the project, meaning that they have the *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
 *  \`edit\` the project, meaning that they have one of the following permissions:
    
     *  *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
     *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
\\"\\"\\"
enum queryInput_searchProjects_action {
  browse
  edit
  view
}

\\"\\"\\"
[Order](#ordering) the results by a field.

 *  \`category\` Sorts by project category. A complete list of category IDs is found using [Get all project categories](#api-rest-api-3-projectCategory-get).
 *  \`issueCount\` Sorts by the total number of issues in each project.
 *  \`key\` Sorts by project key.
 *  \`lastIssueUpdatedTime\` Sorts by the last issue update time.
 *  \`name\` Sorts by project name.
 *  \`owner\` Sorts by project lead.
 *  \`archivedDate\` EXPERIMENTAL. Sorts by project archived date.
 *  \`deletedDate\` EXPERIMENTAL. Sorts by project deleted date.
\\"\\"\\"
enum queryInput_searchProjects_orderBy {
  _PLUS_archivedDate
  _PLUS_category
  _PLUS_deletedDate
  _PLUS_issueCount
  _PLUS_key
  _PLUS_lastIssueUpdatedDate
  _PLUS_name
  _PLUS_owner
  _archivedDate
  _category
  _deletedDate
  _issueCount
  _key
  _lastIssueUpdatedDate
  _name
  _owner
  archivedDate
  category
  deletedDate
  issueCount
  key
  lastIssueUpdatedDate
  name
  owner
}

enum queryInput_searchProjects_status_items {
  archived
  deleted
  live
}

\\"\\"\\"
Term to match status names against or null to search for all statuses in the search scope.
\\"\\"\\"
scalar queryInput_search_searchString

\\"\\"\\"The type of the group label.\\"\\"\\"
enum query_findGroups_groups_items_labels_items_type {
  ADMIN
  MULTIPLE
  SINGLE
}

\\"\\"\\"
The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Returns *unknown* if the record is deleted and corrupted, for example, as the result of a server import.
\\"\\"\\"
scalar query_findUserKeysByQuery_values_items_accountId

\\"\\"\\"
The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.
\\"\\"\\"
scalar query_getAllDashboards_oneOf_0_dashboards_items_owner_allOf_0_accountId

\\"\\"\\"The default assignee when creating issues for this project.\\"\\"\\"
enum query_getAllDashboards_oneOf_0_dashboards_items_sharePermissions_items_project_allOf_0_assigneeType {
  PROJECT_LEAD
  UNASSIGNED
}

enum query_getAllDashboards_oneOf_0_dashboards_items_sharePermissions_items_project_allOf_0_issueTypeHierarchy_allOf_0_levels_items_globalHierarchyLevel {
  BASE
  EPIC
  SUBTASK
}

\\"\\"\\"
The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes) of the project.
\\"\\"\\"
enum query_getAllDashboards_oneOf_0_dashboards_items_sharePermissions_items_project_allOf_0_issueTypes_items_scope_allOf_0_project_allOf_0_projectTypeKey {
  business
  service_desk
  software
}

\\"\\"\\"The type of scope.\\"\\"\\"
enum query_getAllDashboards_oneOf_0_dashboards_items_sharePermissions_items_project_allOf_0_issueTypes_items_scope_allOf_0_type {
  PROJECT
  TEMPLATE
}

type query_getAllDashboards_oneOf_0_dashboards_items_sharePermissions_items_project_allOf_0_landingPageInfo_allOf_0_attributes {
  additionalProperties: JSON
}

scalar query_getAllDashboards_oneOf_0_dashboards_items_sharePermissions_items_project_allOf_0_landingPageInfo_allOf_0_attributes_Input

\\"\\"\\"
The name and self URL for each role defined in the project. For more information, see [Create project role](#api-rest-api-3-role-post).
\\"\\"\\"
type query_getAllDashboards_oneOf_0_dashboards_items_sharePermissions_items_project_allOf_0_roles {
  additionalProperties: JSON
}

\\"\\"\\"
The name and self URL for each role defined in the project. For more information, see [Create project role](#api-rest-api-3-role-post).
\\"\\"\\"
scalar query_getAllDashboards_oneOf_0_dashboards_items_sharePermissions_items_project_allOf_0_roles_Input

\\"\\"\\"The type of the project.\\"\\"\\"
enum query_getAllDashboards_oneOf_0_dashboards_items_sharePermissions_items_project_allOf_0_style {
  classic
  next_gen
}

\\"\\"\\"
The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Returns *unknown* if the record is deleted and corrupted, for example, as the result of a server import.
\\"\\"\\"
scalar query_getAllDashboards_oneOf_0_dashboards_items_sharePermissions_items_role_allOf_0_actors_items_actorUser_allOf_0_accountId

\\"\\"\\"The type of role actor.\\"\\"\\"
enum query_getAllDashboards_oneOf_0_dashboards_items_sharePermissions_items_role_allOf_0_actors_items_type {
  atlassian_group_role_actor
  atlassian_user_role_actor
}

\\"\\"\\"
The type of share permission:

 *  \`user\` Shared with a user.
 *  \`group\` Shared with a group. If set in a request, then specify \`sharePermission.group\` as well.
 *  \`project\` Shared with a project. If set in a request, then specify \`sharePermission.project\` as well.
 *  \`projectRole\` Share with a project role in a project. This value is not returned in responses. It is used in requests, where it needs to be specify with \`projectId\` and \`projectRoleId\`.
 *  \`global\` Shared globally. If set in a request, no other \`sharePermission\` properties need to be specified.
 *  \`loggedin\` Shared with all logged-in users. Note: This value is set in a request by specifying \`authenticated\` as the \`type\`.
 *  \`project-unknown\` Shared with a project that the user does not have access to. Cannot be set in a request.
\\"\\"\\"
enum query_getAllDashboards_oneOf_0_dashboards_items_sharePermissions_items_type {
  authenticated
  global
  group
  loggedin
  project
  projectRole
  project_unknown
  user
}

\\"\\"\\"The description of the field configuration.\\"\\"\\"
scalar query_getAllFieldConfigurations_values_items_description

\\"\\"\\"The name of the field configuration. Must be unique.\\"\\"\\"
scalar query_getAllFieldConfigurations_values_items_name

\\"\\"\\"
The color of the gadget. Should be one of \`blue\`, \`red\`, \`yellow\`, \`green\`, \`cyan\`, \`purple\`, \`gray\`, or \`white\`.
\\"\\"\\"
enum query_getAllGadgets_oneOf_0_gadgets_items_color {
  blue
  cyan
  gray
  green
  purple
  red
  white
  yellow
}

type query_getAllIssueFieldOptions_values_items_additionalProperties {
  additionalProperties: JSON
}

scalar query_getAllIssueFieldOptions_values_items_additionalProperties_Input

enum query_getAllIssueFieldOptions_values_items_config_scope_allOf_0_projects2_items_attributes_items {
  defaultValue
  notSelectable
}

\\"\\"\\"The list of avatar icon URLs.\\"\\"\\"
type query_getAllSystemAvatars_system_items_urls {
  additionalProperties: JSON
}

\\"\\"\\"
The issue type to workflow mappings, where each mapping is an issue type ID and workflow name pair. Note that an issue type can only be mapped to one workflow in a workflow scheme.
\\"\\"\\"
type query_getAllWorkflowSchemes_values_items_issueTypeMappings {
  additionalProperties: JSON
}

\\"\\"\\"
The issue type to workflow mappings, where each mapping is an issue type ID and workflow name pair. Note that an issue type can only be mapped to one workflow in a workflow scheme.
\\"\\"\\"
scalar query_getAllWorkflowSchemes_values_items_issueTypeMappings_Input

\\"\\"\\"
For draft workflow schemes, this property is the issue type to workflow mappings for the original workflow scheme, where each mapping is an issue type ID and workflow name pair. Note that an issue type can only be mapped to one workflow in a workflow scheme.
\\"\\"\\"
type query_getAllWorkflowSchemes_values_items_originalIssueTypeMappings {
  additionalProperties: JSON
}

\\"\\"\\"
For draft workflow schemes, this property is the issue type to workflow mappings for the original workflow scheme, where each mapping is an issue type ID and workflow name pair. Note that an issue type can only be mapped to one workflow in a workflow scheme.
\\"\\"\\"
scalar query_getAllWorkflowSchemes_values_items_originalIssueTypeMappings_Input

type query_getAttachment_additionalProperties {
  additionalProperties: JSON
}

scalar query_getAttachment_additionalProperties_Input

\\"\\"\\"
The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required in requests.
\\"\\"\\"
scalar query_getAttachment_author_allOf_0_accountId

\\"\\"\\"
The user account type. Can take the following values:

 *  \`atlassian\` regular Atlassian user account
 *  \`app\` system account used for Connect applications and OAuth to represent external systems
 *  \`customer\` Jira Service Desk account representing an external service desk
\\"\\"\\"
enum query_getAttachment_author_allOf_0_accountType {
  app
  atlassian
  customer
  unknown
}

\\"\\"\\"Whether the field provide auto-complete suggestions.\\"\\"\\"
enum query_getAutoComplete_visibleFieldNames_items_auto {
  FALSE
  TRUE
}

\\"\\"\\"Whether the field can be used in a query's \`ORDER BY\` clause.\\"\\"\\"
enum query_getAutoComplete_visibleFieldNames_items_orderable {
  FALSE
  TRUE
}

\\"\\"\\"Whether the content of this field can be searched.\\"\\"\\"
enum query_getAutoComplete_visibleFieldNames_items_searchable {
  FALSE
  TRUE
}

\\"\\"\\"Whether the function can take a list of arguments.\\"\\"\\"
enum query_getAutoComplete_visibleFunctionNames_items_isList {
  FALSE
  TRUE
}

\\"\\"\\"Visibility of the announcement banner.\\"\\"\\"
enum query_getBanner_oneOf_0_visibility {
  PRIVATE
  PUBLIC
}

\\"\\"\\"
The list of errors by parameter returned by the operation. For example,\\"projectKey\\": \\"Project keys must start with an uppercase letter, followed by one or more uppercase alphanumeric characters.\\"
\\"\\"\\"
type query_getBanner_oneOf_1_errors {
  additionalProperties: JSON
}

\\"\\"\\"The value of the property. Required on create and update.\\"\\"\\"
type query_getCommentProperty_value {
  additionalProperties: JSON
}

\\"\\"\\"
The comment text in [Atlassian Document Format](https://developer.atlassian.com/cloud/jira/platform/apis/document/structure/).
\\"\\"\\"
type query_getComments_comments_items_body {
  additionalProperties: JSON
}

\\"\\"\\"Whether visibility of this item is restricted to a group or role.\\"\\"\\"
enum query_getComments_comments_items_visibility_allOf_0_type {
  group
  role
}

\\"\\"\\"
The nominal user type used to determine the assignee for issues created with this component. See \`realAssigneeType\` for details on how the type of the user, and hence the user, assigned to issues is determined. Can take the following values:

 *  \`PROJECT_LEAD\` the assignee to any issues created with this component is nominally the lead for the project the component is in.
 *  \`COMPONENT_LEAD\` the assignee to any issues created with this component is nominally the lead for the component.
 *  \`UNASSIGNED\` an assignee is not set for issues created with this component.
 *  \`PROJECT_DEFAULT\` the assignee to any issues created with this component is nominally the default assignee for the project that the component is in.

Default value: \`PROJECT_DEFAULT\`.  
Optional when creating or updating a component.
\\"\\"\\"
enum query_getComponent_assigneeType {
  COMPONENT_LEAD
  PROJECT_DEFAULT
  PROJECT_LEAD
  UNASSIGNED
}

\\"\\"\\"
The accountId of the component's lead user. The accountId uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.
\\"\\"\\"
scalar query_getComponent_leadAccountId

\\"\\"\\"
The type of the assignee that is assigned to issues created with this component, when an assignee cannot be set from the \`assigneeType\`. For example, \`assigneeType\` is set to \`COMPONENT_LEAD\` but no component lead is set. This property is set to one of the following values:

 *  \`PROJECT_LEAD\` when \`assigneeType\` is \`PROJECT_LEAD\` and the project lead has permission to be assigned issues in the project that the component is in.
 *  \`COMPONENT_LEAD\` when \`assignee\`Type is \`COMPONENT_LEAD\` and the component lead has permission to be assigned issues in the project that the component is in.
 *  \`UNASSIGNED\` when \`assigneeType\` is \`UNASSIGNED\` and Jira is configured to allow unassigned issues.
 *  \`PROJECT_DEFAULT\` when none of the preceding cases are true.
\\"\\"\\"
enum query_getComponent_realAssigneeType {
  COMPONENT_LEAD
  PROJECT_DEFAULT
  PROJECT_LEAD
  UNASSIGNED
}

\\"\\"\\"The default unit of time applied to logged time.\\"\\"\\"
enum query_getConfiguration_timeTrackingConfiguration_allOf_0_defaultUnit {
  day
  hour
  minute
  week
}

\\"\\"\\"The format that will appear on an issue's *Time Spent* field.\\"\\"\\"
enum query_getConfiguration_timeTrackingConfiguration_allOf_0_timeFormat {
  days
  hours
  pretty
}

scalar query_getContextsForField_oneOf_1_errors

scalar query_getContextsForField_oneOf_1_errors_Input

\\"\\"\\"The default value of the field.\\"\\"\\"
type query_getCreateIssueMeta_projects_items_issuetypes_items_fields_additionalProperties_defaultValue {
  additionalProperties: JSON
}

\\"\\"\\"The field configuration.\\"\\"\\"
type query_getCustomFieldConfiguration_values_items_configuration {
  additionalProperties: JSON
}

\\"\\"\\"The field configuration.\\"\\"\\"
scalar query_getCustomFieldConfiguration_values_items_configuration_Input

\\"\\"\\"The field value schema.\\"\\"\\"
type query_getCustomFieldConfiguration_values_items_schema {
  additionalProperties: JSON
}

\\"\\"\\"The field value schema.\\"\\"\\"
scalar query_getCustomFieldConfiguration_values_items_schema_Input

\\"\\"\\"
The scope of the default sharing for new filters and dashboards:

 *  \`AUTHENTICATED\` Shared with all logged-in users.
 *  \`GLOBAL\` Shared with all logged-in users. This shows as \`AUTHENTICATED\` in the response.
 *  \`PRIVATE\` Not shared with any users.
\\"\\"\\"
enum query_getDefaultShareScope_scope {
  AUTHENTICATED
  GLOBAL
  PRIVATE
}

\\"\\"\\"The default JSON object.\\"\\"\\"
scalar query_getDefaultValues_oneOf_0_values_items_oneOf_20_object

\\"\\"\\"The default JSON object.\\"\\"\\"
scalar query_getDefaultValues_oneOf_0_values_items_oneOf_20_object_Input

enum query_getDynamicWebhooksForApp_oneOf_0_values_items_events_items {
  comment_created
  comment_deleted
  comment_updated
  issue_property_deleted
  issue_property_set
  jira_COLON_issue_created
  jira_COLON_issue_deleted
  jira_COLON_issue_updated
}

\\"\\"\\"
The state of the feature. When updating the state of a feature, only ENABLED and DISABLED are supported. Responses can contain all values
\\"\\"\\"
enum query_getFeaturesForProject_features_items_state {
  COMING_SOON
  DISABLED
  ENABLED
}

\\"\\"\\"
Last used value type:

 *  *TRACKED*: field is tracked and a last used date is available.
 *  *NOT\\\\_TRACKED*: field is not tracked, last used date is not available.
 *  *NO\\\\_INFORMATION*: field is tracked, but no last used date is available.
\\"\\"\\"
enum query_getFieldsPaginated_oneOf_0_values_items_lastUsed_type {
  NOT_TRACKED
  NO_INFORMATION
  TRACKED
}

\\"\\"\\"
A comment about the worklog in [Atlassian Document Format](https://developer.atlassian.com/cloud/jira/platform/apis/document/structure/). Optional when creating or updating a worklog.
\\"\\"\\"
type query_getIssueWorklog_worklogs_items_comment {
  additionalProperties: JSON
}

\\"\\"\\"Additional arbitrary information about the history record.\\"\\"\\"
type query_getIssue_changelog_allOf_0_histories_items_historyMetadata_allOf_0_extraData {
  additionalProperties: JSON
}

\\"\\"\\"The ID and name of each field present on the issue.\\"\\"\\"
type query_getIssue_names {
  additionalProperties: JSON
}

\\"\\"\\"The licensing plan.\\"\\"\\"
enum query_getLicense_applications_items_plan {
  FREE
  PAID
  UNLICENSED
}

\\"\\"\\"The type of the permission.\\"\\"\\"
enum query_getMyPermissions_oneOf_0_permissions_additionalProperties_type {
  GLOBAL
  PROJECT
}

\\"\\"\\"Identifies the recipients of the notification.\\"\\"\\"
enum query_getNotificationSchemes_values_items_notificationSchemeEvents_items_notifications_items_notificationType {
  AllWatchers
  ComponentLead
  CurrentAssignee
  CurrentUser
  EmailAddress
  Group
  GroupCustomField
  ProjectLead
  ProjectRole
  Reporter
  User
  UserCustomField
}

\\"\\"\\"
The nominal user type used to determine the assignee for issues created with this component. See \`realAssigneeType\` for details on how the type of the user, and hence the user, assigned to issues is determined. Takes the following values:

 *  \`PROJECT_LEAD\` the assignee to any issues created with this component is nominally the lead for the project the component is in.
 *  \`COMPONENT_LEAD\` the assignee to any issues created with this component is nominally the lead for the component.
 *  \`UNASSIGNED\` an assignee is not set for issues created with this component.
 *  \`PROJECT_DEFAULT\` the assignee to any issues created with this component is nominally the default assignee for the project that the component is in.
\\"\\"\\"
enum query_getProjectComponentsPaginated_values_items_assigneeType {
  COMPONENT_LEAD
  PROJECT_DEFAULT
  PROJECT_LEAD
  UNASSIGNED
}

\\"\\"\\"
The scope of the status. \`GLOBAL\` for company-managed projects and \`PROJECT\` for team-managed projects.
\\"\\"\\"
enum query_getStatusesById_items_scope_type {
  GLOBAL
  PROJECT
}

\\"\\"\\"The category of the status.\\"\\"\\"
enum query_getStatusesById_items_statusCategory {
  DONE
  IN_PROGRESS
  TODO
}

\\"\\"\\"The result of the task execution.\\"\\"\\"
type query_getTask_result {
  additionalProperties: JSON
}

\\"\\"\\"The status of the task.\\"\\"\\"
enum query_getTask_status {
  CANCELLED
  CANCEL_REQUESTED
  COMPLETE
  DEAD
  ENQUEUED
  FAILED
  RUNNING
}

type query_getWorkflowSchemeProjectAssociations_oneOf_1_errors {
  projectId: String
}

\\"\\"\\"
EXPERIMENTAL: A tag used to filter rules in [Get workflow transition rule configurations](https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-workflow-transition-rules/#api-rest-api-3-workflow-rule-config-get).
\\"\\"\\"
scalar query_getWorkflowTransitionRuleConfigurations_oneOf_0_values_items_postFunctions_items_configuration_tag

\\"\\"\\"
Additional properties that modify the behavior of issues in this status. Supports the properties <code>jira.issue.editable</code> and <code>issueEditable</code> (deprecated) that indicate whether issues are editable.
\\"\\"\\"
type query_getWorkflowsPaginated_oneOf_0_values_items_statuses_items_additionalProperties {
  additionalProperties: JSON
}

\\"\\"\\"The properties of the transition.\\"\\"\\"
type query_getWorkflowsPaginated_oneOf_0_values_items_transitions_items_additionalProperties {
  additionalProperties: JSON
}

\\"\\"\\"EXPERIMENTAL. The configuration of the transition rule.\\"\\"\\"
scalar query_getWorkflowsPaginated_oneOf_0_values_items_transitions_items_rules_conditionsTree_oneOf_0_configuration

\\"\\"\\"The compound condition operator.\\"\\"\\"
enum query_getWorkflowsPaginated_oneOf_0_values_items_transitions_items_rules_conditionsTree_oneOf_1_operator {
  AND
  OR
}

\\"\\"\\"EXPERIMENTAL. The configuration of the transition rule.\\"\\"\\"
type query_getWorkflowsPaginated_oneOf_0_values_items_transitions_items_rules_validators_items_configuration {
  additionalProperties: JSON
}

\\"\\"\\"EXPERIMENTAL. The configuration of the transition rule.\\"\\"\\"
scalar query_getWorkflowsPaginated_oneOf_0_values_items_transitions_items_rules_validators_items_configuration_Input

\\"\\"\\"The type of the transition.\\"\\"\\"
enum query_getWorkflowsPaginated_oneOf_0_values_items_transitions_items_type {
  directed
  global
  initial
}

\\"\\"\\"The ID and name of each field in the search results.\\"\\"\\"
type query_searchForIssuesUsingJql_names {
  additionalProperties: JSON
}

union refreshWebhooks_response = ErrorCollection | WebhooksExpirationDate

union registerDynamicWebhooks_response = ContainerForRegisteredWebhooks | ErrorCollection

union removeCustomFieldContextFromProjects_response = assignProjectsToCustomFieldContext_400_response | getContextsForField_403_response | setDefaultValues_404_response

type removeIssueTypeFromIssueTypeScheme_400_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

type removeIssueTypeFromIssueTypeScheme_404_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

union removeIssueTypeFromIssueTypeScheme_response = createIssueTypeScheme_403_response | removeIssueTypeFromIssueTypeScheme_400_response | removeIssueTypeFromIssueTypeScheme_404_response

type removeIssueTypesFromContext_400_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

union removeIssueTypesFromContext_response = getContextsForField_403_response | removeIssueTypesFromContext_400_response | setDefaultValues_404_response

union removeIssueTypesFromGlobalFieldConfigurationScheme_response = ErrorCollection

type removeMappingsFromIssueTypeScreenScheme_400_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

union removeMappingsFromIssueTypeScreenScheme_response = assignIssueTypeScreenSchemeToProject_404_response | createIssueTypeScreenScheme_403_response | removeMappingsFromIssueTypeScreenScheme_400_response

type reorderCustomFieldOptions_400_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

union reorderCustomFieldOptions_response = getContextsForField_404_response | getOptionsForContext_403_response | reorderCustomFieldOptions_400_response

type reorderIssueTypesInIssueTypeScheme_400_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

union reorderIssueTypesInIssueTypeScheme_response = assignIssueTypeSchemeToProject_404_response | createIssueTypeScheme_403_response | reorderIssueTypesInIssueTypeScheme_400_response

type replaceIssueFieldOption_403_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

union replaceIssueFieldOption_response = TaskProgressBeanRemoveOptionFromIssuesResult | replaceIssueFieldOption_403_response

union restoreCustomField_response = ErrorCollection

union sanitiseJqlQueries_response = ErrorCollection | SanitizedJqlQueries

input searchForIssuesUsingJql_request_Input {
  \\"\\"\\"
  Use [expand](#expansion) to include additional information about issues in the response. This parameter accepts a comma-separated list. Expand options include:
  
   *  \`renderedFields\` Returns field values rendered in HTML format.
   *  \`names\` Returns the display name of each field.
   *  \`schema\` Returns the schema describing a field type.
   *  \`transitions\` Returns all possible transitions for the issue.
   *  \`operations\` Returns all possible operations for the issue.
   *  \`editmeta\` Returns information about how each field can be edited.
   *  \`changelog\` Returns a list of recent updates to an issue, sorted by date, starting from the most recent.
   *  \`versionedRepresentations\` Instead of \`fields\`, returns \`versionedRepresentations\` a JSON array containing each version of a field's value, with the highest numbered item representing the most recent version.
  \\"\\"\\"
  expand: String

  \\"\\"\\"
  A list of fields to return for each issue, use it to retrieve a subset of fields. This parameter accepts a comma-separated list. Expand options include:
  
   *  \`*all\` Returns all fields.
   *  \`*navigable\` Returns navigable fields.
   *  Any issue field, prefixed with a minus to exclude.
  
  Examples:
  
   *  \`summary,comment\` Returns only the summary and comments fields.
   *  \`-description\` Returns all navigable (default) fields except description.
   *  \`*all,-comment\` Returns all fields except comments.
  
  This parameter may be specified multiple times. For example, \`fields=field1,field2&fields=field3\`.
  
  Note: All navigable fields are returned by default. This differs from [GET issue](#api-rest-api-3-issue-issueIdOrKey-get) where the default is all fields.
  \\"\\"\\"
  fields: [String]

  \\"\\"\\"Reference fields by their key (rather than ID).\\"\\"\\"
  fieldsByKeys: Boolean

  \\"\\"\\"
  The [JQL](https://confluence.atlassian.com/x/egORLQ) that defines the search. Note:
  
   *  If no JQL expression is provided, all issues are returned.
   *  \`username\` and \`userkey\` cannot be used as search terms due to privacy reasons. Use \`accountId\` instead.
   *  If a user has hidden their email address in their user profile, partial matches of the email address will not find the user. An exact match is required.
  \\"\\"\\"
  jql: String

  \\"\\"\\"
  The maximum number of items to return per page. To manage page size, Jira may return fewer items per page where a large number of fields are requested. The greatest number of items returned per page is achieved when requesting \`id\` or \`key\` only.
  \\"\\"\\"
  maxResults: Int

  \\"\\"\\"
  A list of issue property keys for issue properties to include in the results. This parameter accepts a comma-separated list. Multiple properties can also be provided using an ampersand separated list. For example, \`properties=prop1,prop2&properties=prop3\`. A maximum of 5 issue property keys can be specified.
  \\"\\"\\"
  properties: [String]

  \\"\\"\\"
  The index of the first item to return in a page of results (page offset).
  \\"\\"\\"
  startAt: Int
  validateQuery: queryInput_searchForIssuesUsingJql_validateQuery
}

input searchPriorities_request_Input {
  \\"\\"\\"
  The list of priority IDs. To include multiple IDs, provide an ampersand-separated list. For example, \`id=2&id=3\`.
  \\"\\"\\"
  id: [String]

  \\"\\"\\"The maximum number of items to return per page.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"Whether only the default priority is returned.\\"\\"\\"
  onlyDefault: Boolean

  \\"\\"\\"
  The index of the first item to return in a page of results (page offset).
  \\"\\"\\"
  startAt: BigInt
}

union searchPriorities_response = ErrorCollection | PageBeanPriority

input searchProjects_request_Input {
  action: queryInput_searchProjects_action

  \\"\\"\\"
  The ID of the project's category. A complete list of category IDs is found using the [Get all project categories](#api-rest-api-3-projectCategory-get) operation.
  \\"\\"\\"
  categoryId: BigInt

  \\"\\"\\"
  Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expanded options include:
  
   *  \`description\` Returns the project description.
   *  \`projectKeys\` Returns all project keys associated with a project.
   *  \`lead\` Returns information about the project lead.
   *  \`issueTypes\` Returns all issue types associated with the project.
   *  \`url\` Returns the URL associated with the project.
   *  \`insight\` EXPERIMENTAL. Returns the insight details of total issue count and last issue update time for the project.
  \\"\\"\\"
  expand: String

  \\"\\"\\"
  The project IDs to filter the results by. To include multiple IDs, provide an ampersand-separated list. For example, \`id=10000&id=10001\`. Up to 50 project IDs can be provided.
  \\"\\"\\"
  id: [BigInt]

  \\"\\"\\"
  The project keys to filter the results by. To include multiple keys, provide an ampersand-separated list. For example, \`keys=PA&keys=PB\`. Up to 50 project keys can be provided.
  \\"\\"\\"
  keys: [String]

  \\"\\"\\"The maximum number of items to return per page.\\"\\"\\"
  maxResults: Int
  orderBy: queryInput_searchProjects_orderBy

  \\"\\"\\"
  EXPERIMENTAL. A list of project properties to return for the project. This parameter accepts a comma-separated list.
  \\"\\"\\"
  properties: [JSON]

  \\"\\"\\"
  EXPERIMENTAL. A query string used to search properties. The query string cannot be specified using a JSON object. For example, to search for the value of \`nested\` from \`{\\"something\\":{\\"nested\\":1,\\"other\\":2}}\` use \`[thepropertykey].something.nested=1\`. Note that the propertyQuery key is enclosed in square brackets to enable searching where the propertyQuery key includes dot (.) or equals (=) characters. Note that \`thepropertykey\` is only returned when included in \`properties\`.
  \\"\\"\\"
  propertyQuery: String

  \\"\\"\\"
  Filter the results using a literal string. Projects with a matching \`key\` or \`name\` are returned (case insensitive).
  \\"\\"\\"
  query: String

  \\"\\"\\"
  The index of the first item to return in a page of results (page offset).
  \\"\\"\\"
  startAt: BigInt

  \\"\\"\\"
  EXPERIMENTAL. Filter results by project status:
  
   *  \`live\` Search live projects.
   *  \`archived\` Search archived projects.
   *  \`deleted\` Search deleted projects, those in the recycle bin.
  \\"\\"\\"
  status: [queryInput_searchProjects_status_items]

  \\"\\"\\"
  Orders results by the [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes). This parameter accepts a comma-separated list. Valid values are \`business\`, \`service_desk\`, and \`software\`.
  \\"\\"\\"
  typeKey: String
}

input search_request_Input {
  \\"\\"\\"
  Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:
  
   *  \`usages\` Returns the project and issue types that use the status in their workflow.
  \\"\\"\\"
  expand: String

  \\"\\"\\"The maximum number of items to return per page.\\"\\"\\"
  maxResults: Int

  \\"\\"\\"The project the status is part of or null for global statuses.\\"\\"\\"
  projectId: String

  \\"\\"\\"
  Term to match status names against or null to search for all statuses in the search scope.
  \\"\\"\\"
  searchString: queryInput_search_searchString

  \\"\\"\\"
  The index of the first item to return in a page of results (page offset).
  \\"\\"\\"
  startAt: BigInt

  \\"\\"\\"
  Category of the status to filter by. The supported values are: \`TODO\`, \`IN_PROGRESS\`, and \`DONE\`.
  \\"\\"\\"
  statusCategory: String
}

union setBanner_response = ErrorCollection

type setDashboardItemProperty_400_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

type setDefaultValues_400_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

type setDefaultValues_404_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

union setDefaultValues_response = getContextsForField_403_response | setDefaultValues_400_response | setDefaultValues_404_response

union trashCustomField_response = ErrorCollection

type updateCustomFieldContext_400_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

union updateCustomFieldContext_response = getContextsForField_403_response | setDefaultValues_404_response | updateCustomFieldContext_400_response

union updateCustomFieldOption_response = CustomFieldUpdatedContextOptionsList | getContextsForField_404_response | getOptionsForContext_400_response | getOptionsForContext_403_response

type updateCustomField_400_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

type updateCustomField_403_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

union updateCustomField_response = getContextsForField_404_response | updateCustomField_400_response | updateCustomField_403_response

union updateDashboard_response = Dashboard | ErrorCollection

type updateDefaultScreenScheme_400_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

union updateDefaultScreenScheme_response = assignIssueTypeScreenSchemeToProject_404_response | createIssueTypeScreenScheme_403_response | updateDefaultScreenScheme_400_response

type updateFieldConfigurationScheme_404_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

union updateFieldConfigurationScheme_response = createFieldConfigurationScheme_400_response | createFieldConfigurationScheme_403_response | updateFieldConfigurationScheme_404_response

union updateGadget_response = ErrorCollection

type updateIssueTypeScheme_400_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

union updateIssueTypeScheme_response = assignIssueTypeSchemeToProject_404_response | createIssueTypeScheme_403_response | updateIssueTypeScheme_400_response

type updateIssueTypeScreenScheme_400_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

union updateIssueTypeScreenScheme_response = assignIssueTypeScreenSchemeToProject_404_response | createIssueTypeScreenScheme_403_response | updateIssueTypeScreenScheme_400_response

union updatePriority_response = ErrorCollection

type updateScreenScheme_404_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

union updateScreenScheme_response = createIssueTypeScheme_409_response | createScreenScheme_403_response | updateScreenScheme_404_response

type updateScreen_404_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

union updateScreen_response = Screen | createScreen_400_response | createScreen_403_response | updateScreen_404_response

type updateStatuses_400_response {
  errorMessages: [String]
  errors: query_getContextsForField_oneOf_1_errors
}

union updateWorkflowTransitionRuleConfigurations_response = ErrorCollection | WorkflowTransitionRulesUpdateErrors

input validateProjectKey_request_Input {
  \\"\\"\\"The project key.\\"\\"\\"
  key: String
}"
`;
