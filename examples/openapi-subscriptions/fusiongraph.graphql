schema
  @transport(subgraph: "OpenAPICallbackExample", kind: "rest", location: "http://localhost:4001") {
  query: Query
  mutation: Mutation
  subscription: Subscription
}

directive @httpOperation(
  subgraph: String
  path: String
  operationSpecificHeaders: ObjMap
  httpMethod: HTTPMethod
  isBinary: Boolean
  requestBaseBody: ObjMap
  queryParamArgMap: ObjMap
  queryStringOptionsByParam: ObjMap
) on FIELD_DEFINITION

directive @pubsubOperation(subgraph: String, pubsubTopic: String) on FIELD_DEFINITION

directive @transport(
  subgraph: String
  kind: String
  location: String
  headers: ObjMap
  queryStringOptions: ObjMap
  queryParams: ObjMap
) on OBJECT

type Query {
  dummy: String
    @resolver(subgraph: "OpenAPICallbackExample", operation: "query dummy { dummy }")
    @source(subgraph: "OpenAPICallbackExample", name: "dummy", type: "String")
}

type Mutation {
  "subscribes a client to receive out-of-band data"
  post_streams(input: post_streams_request_Input): SubscriptionInfo
    @httpOperation(
      subgraph: "OpenAPICallbackExample"
      path: "/streams"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
    )
    @resolver(
      subgraph: "OpenAPICallbackExample"
      operation: "mutation mutationpost_streams($input: post_streams_request_Input) { post_streams(input: $input) }"
    )
    @source(subgraph: "OpenAPICallbackExample", name: "post_streams", type: "SubscriptionInfo")
}

"subscription information"
type SubscriptionInfo @source(subgraph: "OpenAPICallbackExample", name: "SubscriptionInfo") {
  "this unique identifier allows management of the subscription"
  subscriptionId: String!
    @source(subgraph: "OpenAPICallbackExample", name: "subscriptionId", type: "String!")
}

input post_streams_request_Input
  @source(subgraph: "OpenAPICallbackExample", name: "post_streams_request_Input") {
  "the location where data will be sent.  Must be network accessible\nby the source server"
  callbackUrl: URL @source(subgraph: "OpenAPICallbackExample", name: "callbackUrl", type: "URL")
}

"A field whose value conforms to the standard URL format as specified in RFC3986: https://www.ietf.org/rfc/rfc3986.txt."
scalar URL
  @source(subgraph: "OpenAPICallbackExample", name: "URL")
  @source(subgraph: "OpenAPICallbackExample", name: "URL")

type Subscription {
  "PubSub Topic: webhook:post:/callback/{args.subscriptionId}"
  onData(subscriptionId: String): SubscriptionPayload
    @pubsubOperation(
      subgraph: "OpenAPICallbackExample"
      pubsubTopic: "webhook:post:/callback/{args.subscriptionId}"
    )
    @resolver(
      subgraph: "OpenAPICallbackExample"
      operation: "subscription subscriptiononData($subscriptionId: String) { onData(subscriptionId: $subscriptionId) }"
    )
    @source(subgraph: "OpenAPICallbackExample", name: "onData", type: "SubscriptionPayload")
}

type SubscriptionPayload @source(subgraph: "OpenAPICallbackExample", name: "SubscriptionPayload") {
  timestamp: DateTime
    @source(subgraph: "OpenAPICallbackExample", name: "timestamp", type: "DateTime")
  userData: String @source(subgraph: "OpenAPICallbackExample", name: "userData", type: "String")
}

"A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar."
scalar DateTime
  @source(subgraph: "OpenAPICallbackExample", name: "DateTime")
  @source(subgraph: "OpenAPICallbackExample", name: "DateTime")

scalar ObjMap
  @source(subgraph: "OpenAPICallbackExample", name: "ObjMap")
  @source(subgraph: "OpenAPICallbackExample", name: "ObjMap")

enum HTTPMethod @source(subgraph: "OpenAPICallbackExample", name: "HTTPMethod") {
  GET @source(subgraph: "OpenAPICallbackExample", name: "GET")
  HEAD @source(subgraph: "OpenAPICallbackExample", name: "HEAD")
  POST @source(subgraph: "OpenAPICallbackExample", name: "POST")
  PUT @source(subgraph: "OpenAPICallbackExample", name: "PUT")
  DELETE @source(subgraph: "OpenAPICallbackExample", name: "DELETE")
  CONNECT @source(subgraph: "OpenAPICallbackExample", name: "CONNECT")
  OPTIONS @source(subgraph: "OpenAPICallbackExample", name: "OPTIONS")
  TRACE @source(subgraph: "OpenAPICallbackExample", name: "TRACE")
  PATCH @source(subgraph: "OpenAPICallbackExample", name: "PATCH")
}
