// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SOAP Country Info executes list-of-languages-by-name.graphql query: list-of-languages-by-name.graphql 1`] = `
{
  "data": {
    "CountryInfoService_CountryInfoService_CountryInfoServiceSoap_ListOfLanguagesByName": {
      "ListOfLanguagesByNameResult": {
        "tLanguage": [
          {
            "sISOCode": "abk",
            "sName": "Abkhazian",
          },
          {
            "sISOCode": "ace",
            "sName": "Achinese",
          },
          {
            "sISOCode": "ach",
            "sName": "Acoli",
          },
          {
            "sISOCode": "ada",
            "sName": "Adangme",
          },
          {
            "sISOCode": "aar",
            "sName": "Afar",
          },
          {
            "sISOCode": "afh",
            "sName": "Afrihili",
          },
          {
            "sISOCode": "afr",
            "sName": "Afrikaans",
          },
          {
            "sISOCode": "afa",
            "sName": "Afro-Asiatic (Other)",
          },
          {
            "sISOCode": "aka",
            "sName": "Akan",
          },
          {
            "sISOCode": "akk",
            "sName": "Akkadian",
          },
          {
            "sISOCode": "sq",
            "sName": "Albanian",
          },
          {
            "sISOCode": "ale",
            "sName": "Aleut",
          },
          {
            "sISOCode": "alg",
            "sName": "Algonquian languages",
          },
          {
            "sISOCode": "tut",
            "sName": "Altaic (Other)",
          },
          {
            "sISOCode": "amh",
            "sName": "Amharic",
          },
          {
            "sISOCode": "apa",
            "sName": "Apache languages",
          },
          {
            "sISOCode": "ara",
            "sName": "Arabic",
          },
          {
            "sISOCode": "arc",
            "sName": "Aramaic",
          },
          {
            "sISOCode": "arp",
            "sName": "Arapaho",
          },
          {
            "sISOCode": "arn",
            "sName": "Araucanian",
          },
          {
            "sISOCode": "arw",
            "sName": "Arawak",
          },
          {
            "sISOCode": "hy",
            "sName": "Armenian",
          },
          {
            "sISOCode": "art",
            "sName": "Artificial (Other)",
          },
          {
            "sISOCode": "asm",
            "sName": "Assamese",
          },
          {
            "sISOCode": "ath",
            "sName": "Athapascan languages",
          },
          {
            "sISOCode": "map",
            "sName": "Austronesian (Other)",
          },
          {
            "sISOCode": "ava",
            "sName": "Avaric",
          },
          {
            "sISOCode": "ave",
            "sName": "Avestan",
          },
          {
            "sISOCode": "awa",
            "sName": "Awadhi",
          },
          {
            "sISOCode": "aym",
            "sName": "Aymara",
          },
          {
            "sISOCode": "aze",
            "sName": "Azerbaijani",
          },
          {
            "sISOCode": "nah",
            "sName": "Aztec",
          },
          {
            "sISOCode": "ban",
            "sName": "Balinese",
          },
          {
            "sISOCode": "bat",
            "sName": "Baltic (Other)",
          },
          {
            "sISOCode": "bal",
            "sName": "Baluchi",
          },
          {
            "sISOCode": "bam",
            "sName": "Bambara",
          },
          {
            "sISOCode": "bai",
            "sName": "Bamileke languages",
          },
          {
            "sISOCode": "bad",
            "sName": "Banda",
          },
          {
            "sISOCode": "bnt",
            "sName": "Bantu (Other)",
          },
          {
            "sISOCode": "bas",
            "sName": "Basa",
          },
          {
            "sISOCode": "bak",
            "sName": "Bashkir",
          },
          {
            "sISOCode": "eu",
            "sName": "Basque",
          },
          {
            "sISOCode": "bej",
            "sName": "Beja",
          },
          {
            "sISOCode": "bem",
            "sName": "Bemba",
          },
          {
            "sISOCode": "ben",
            "sName": "Bengali",
          },
          {
            "sISOCode": "ber",
            "sName": "Berber (Other)",
          },
          {
            "sISOCode": "bho",
            "sName": "Bhojpuri",
          },
          {
            "sISOCode": "bih",
            "sName": "Bihari",
          },
          {
            "sISOCode": "bik",
            "sName": "Bikol",
          },
          {
            "sISOCode": "bin",
            "sName": "Bini",
          },
          {
            "sISOCode": "bis",
            "sName": "Bislama",
          },
          {
            "sISOCode": "bra",
            "sName": "Braj",
          },
          {
            "sISOCode": "bre",
            "sName": "Breton",
          },
          {
            "sISOCode": "bug",
            "sName": "Buginese",
          },
          {
            "sISOCode": "bul",
            "sName": "Bulgarian",
          },
          {
            "sISOCode": "bua",
            "sName": "Buriat",
          },
          {
            "sISOCode": "my",
            "sName": "Burmese",
          },
          {
            "sISOCode": "bel",
            "sName": "Byelorussian",
          },
          {
            "sISOCode": "cad",
            "sName": "Caddo",
          },
          {
            "sISOCode": "car",
            "sName": "Carib",
          },
          {
            "sISOCode": "cat",
            "sName": "Catalan",
          },
          {
            "sISOCode": "cau",
            "sName": "Caucasian (Other)",
          },
          {
            "sISOCode": "ceb",
            "sName": "Cebuano",
          },
          {
            "sISOCode": "cel",
            "sName": "Celtic (Other)",
          },
          {
            "sISOCode": "cai",
            "sName": "Central American Indian (Other)",
          },
          {
            "sISOCode": "chg",
            "sName": "Chagatai",
          },
          {
            "sISOCode": "cha",
            "sName": "Chamorro",
          },
          {
            "sISOCode": "che",
            "sName": "Chechen",
          },
          {
            "sISOCode": "chr",
            "sName": "Cherokee",
          },
          {
            "sISOCode": "chy",
            "sName": "Cheyenne",
          },
          {
            "sISOCode": "chb",
            "sName": "Chibcha",
          },
          {
            "sISOCode": "zh",
            "sName": "Chinese",
          },
          {
            "sISOCode": "chn",
            "sName": "Chinook jargon",
          },
          {
            "sISOCode": "cho",
            "sName": "Choctaw",
          },
          {
            "sISOCode": "chu",
            "sName": "Church Slavic",
          },
          {
            "sISOCode": "chv",
            "sName": "Chuvash",
          },
          {
            "sISOCode": "cop",
            "sName": "Coptic",
          },
          {
            "sISOCode": "cor",
            "sName": "Cornish",
          },
          {
            "sISOCode": "cos",
            "sName": "Corsican",
          },
          {
            "sISOCode": "cre",
            "sName": "Cree",
          },
          {
            "sISOCode": "mus",
            "sName": "Creek",
          },
          {
            "sISOCode": "crp",
            "sName": "Creoles and Pidgins (Other)",
          },
          {
            "sISOCode": "cpe",
            "sName": "Creoles and Pidgins, English-based (Other)",
          },
          {
            "sISOCode": "cpf",
            "sName": "Creoles and Pidgins, French-based (Other)",
          },
          {
            "sISOCode": "cpp",
            "sName": "Creoles and Pidgins, Portuguese-based (Other)",
          },
          {
            "sISOCode": "hr",
            "sName": "Croatian",
          },
          {
            "sISOCode": "cus",
            "sName": "Cushitic (Other)",
          },
          {
            "sISOCode": "cs",
            "sName": "Czech",
          },
          {
            "sISOCode": "dak",
            "sName": "Dakota",
          },
          {
            "sISOCode": "dan",
            "sName": "Danish",
          },
          {
            "sISOCode": "del",
            "sName": "Delaware",
          },
          {
            "sISOCode": "din",
            "sName": "Dinka",
          },
          {
            "sISOCode": "div",
            "sName": "Divehi",
          },
          {
            "sISOCode": "doi",
            "sName": "Dogri",
          },
          {
            "sISOCode": "dra",
            "sName": "Dravidian (Other)",
          },
          {
            "sISOCode": "dua",
            "sName": "Duala",
          },
          {
            "sISOCode": "nl",
            "sName": "Dutch",
          },
          {
            "sISOCode": "dum",
            "sName": "Dutch, Middle (ca. 1050-1350)",
          },
          {
            "sISOCode": "dyu",
            "sName": "Dyula",
          },
          {
            "sISOCode": "dzo",
            "sName": "Dzongkha",
          },
          {
            "sISOCode": "efi",
            "sName": "Efik",
          },
          {
            "sISOCode": "egy",
            "sName": "Egyptian (Ancient)",
          },
          {
            "sISOCode": "eka",
            "sName": "Ekajuk",
          },
          {
            "sISOCode": "elx",
            "sName": "Elamite",
          },
          {
            "sISOCode": "eng",
            "sName": "English",
          },
          {
            "sISOCode": "enm",
            "sName": "English, Middle (ca. 1100-1500)",
          },
          {
            "sISOCode": "ang",
            "sName": "English, Old (ca. 450-1100)",
          },
          {
            "sISOCode": "esk",
            "sName": "Eskimo (Other)",
          },
          {
            "sISOCode": "epo",
            "sName": "Esperanto",
          },
          {
            "sISOCode": "est",
            "sName": "Estonian",
          },
          {
            "sISOCode": "ewe",
            "sName": "Ewe",
          },
          {
            "sISOCode": "ewo",
            "sName": "Ewondo",
          },
          {
            "sISOCode": "fan",
            "sName": "Fang",
          },
          {
            "sISOCode": "fat",
            "sName": "Fanti",
          },
          {
            "sISOCode": "fao",
            "sName": "Faroese",
          },
          {
            "sISOCode": "fij",
            "sName": "Fijian",
          },
          {
            "sISOCode": "fil",
            "sName": "Filipino",
          },
          {
            "sISOCode": "fin",
            "sName": "Finnish",
          },
          {
            "sISOCode": "fiu",
            "sName": "Finno-Ugrian (Other)",
          },
          {
            "sISOCode": "fon",
            "sName": "Fon",
          },
          {
            "sISOCode": "fr",
            "sName": "French",
          },
          {
            "sISOCode": "frm",
            "sName": "French, Middle (ca. 1400-1600)",
          },
          {
            "sISOCode": "fro",
            "sName": "French, Old (842- ca. 1400)",
          },
          {
            "sISOCode": "fry",
            "sName": "Frisian",
          },
          {
            "sISOCode": "ful",
            "sName": "Fulah",
          },
          {
            "sISOCode": "gaa",
            "sName": "Ga",
          },
          {
            "sISOCode": "glg",
            "sName": "Gallegan",
          },
          {
            "sISOCode": "lug",
            "sName": "Ganda",
          },
          {
            "sISOCode": "gay",
            "sName": "Gayo",
          },
          {
            "sISOCode": "gez",
            "sName": "Geez",
          },
          {
            "sISOCode": "ka",
            "sName": "Georgian",
          },
          {
            "sISOCode": "de",
            "sName": "German",
          },
          {
            "sISOCode": "gmh",
            "sName": "German, Middle High (ca. 1050-1500)",
          },
          {
            "sISOCode": "goh",
            "sName": "German, Old High (ca. 750-1050)",
          },
          {
            "sISOCode": "gem",
            "sName": "Germanic (Other)",
          },
          {
            "sISOCode": "gil",
            "sName": "Gilbertese",
          },
          {
            "sISOCode": "gon",
            "sName": "Gondi",
          },
          {
            "sISOCode": "got",
            "sName": "Gothic",
          },
          {
            "sISOCode": "grb",
            "sName": "Grebo",
          },
          {
            "sISOCode": "grc",
            "sName": "Greek, Ancient (to 1453)",
          },
          {
            "sISOCode": "el",
            "sName": "Greek, Modern (1453-)",
          },
          {
            "sISOCode": "kal",
            "sName": "Greenlandic",
          },
          {
            "sISOCode": "grn",
            "sName": "Guarani",
          },
          {
            "sISOCode": "guj",
            "sName": "Gujarati",
          },
          {
            "sISOCode": "hai",
            "sName": "Haida",
          },
          {
            "sISOCode": "hau",
            "sName": "Hausa",
          },
          {
            "sISOCode": "haw",
            "sName": "Hawaiian",
          },
          {
            "sISOCode": "heb",
            "sName": "Hebrew",
          },
          {
            "sISOCode": "her",
            "sName": "Herero",
          },
          {
            "sISOCode": "hil",
            "sName": "Hiligaynon",
          },
          {
            "sISOCode": "him",
            "sName": "Himachali",
          },
          {
            "sISOCode": "hin",
            "sName": "Hindi",
          },
          {
            "sISOCode": "hmo",
            "sName": "Hiri Motu",
          },
          {
            "sISOCode": "hun",
            "sName": "Hungarian",
          },
          {
            "sISOCode": "hup",
            "sName": "Hupa",
          },
          {
            "sISOCode": "iba",
            "sName": "Iban",
          },
          {
            "sISOCode": "is",
            "sName": "Icelandic",
          },
          {
            "sISOCode": "ibo",
            "sName": "Igbo",
          },
          {
            "sISOCode": "ijo",
            "sName": "Ijo",
          },
          {
            "sISOCode": "ilo",
            "sName": "Iloko",
          },
          {
            "sISOCode": "inc",
            "sName": "Indic (Other)",
          },
          {
            "sISOCode": "ine",
            "sName": "Indo-European (Other)",
          },
          {
            "sISOCode": "ind",
            "sName": "Indonesian",
          },
          {
            "sISOCode": "ina",
            "sName": "Interlingua (International Auxiliary language Association)",
          },
          {
            "sISOCode": "iku",
            "sName": "Inuktitut",
          },
          {
            "sISOCode": "ipk",
            "sName": "Inupiak",
          },
          {
            "sISOCode": "ira",
            "sName": "Iranian (Other)",
          },
          {
            "sISOCode": "ga",
            "sName": "Irish",
          },
          {
            "sISOCode": "mga",
            "sName": "Irish, Middle (900 - 1200)",
          },
          {
            "sISOCode": "sga",
            "sName": "Irish, Old (to 900)",
          },
          {
            "sISOCode": "iro",
            "sName": "Iroquoian languages",
          },
          {
            "sISOCode": "ita",
            "sName": "Italian",
          },
          {
            "sISOCode": "jpn",
            "sName": "Japanese",
          },
          {
            "sISOCode": "jv",
            "sName": "Javanese",
          },
          {
            "sISOCode": "jrb",
            "sName": "Judeo-Arabic",
          },
          {
            "sISOCode": "jpr",
            "sName": "Judeo-Persian",
          },
          {
            "sISOCode": "kab",
            "sName": "Kabyle",
          },
          {
            "sISOCode": "kac",
            "sName": "Kachin",
          },
          {
            "sISOCode": "kam",
            "sName": "Kamba",
          },
          {
            "sISOCode": "kan",
            "sName": "Kannada",
          },
          {
            "sISOCode": "kau",
            "sName": "Kanuri",
          },
          {
            "sISOCode": "kaa",
            "sName": "Kara-Kalpak",
          },
          {
            "sISOCode": "kar",
            "sName": "Karen",
          },
          {
            "sISOCode": "kas",
            "sName": "Kashmiri",
          },
          {
            "sISOCode": "kaw",
            "sName": "Kawi",
          },
          {
            "sISOCode": "kaz",
            "sName": "Kazakh",
          },
          {
            "sISOCode": "kha",
            "sName": "Khasi",
          },
          {
            "sISOCode": "khm",
            "sName": "Khmer",
          },
          {
            "sISOCode": "khi",
            "sName": "Khoisan (Other)",
          },
          {
            "sISOCode": "kho",
            "sName": "Khotanese",
          },
          {
            "sISOCode": "kik",
            "sName": "Kikuyu",
          },
          {
            "sISOCode": "kin",
            "sName": "Kinyarwanda",
          },
          {
            "sISOCode": "kir",
            "sName": "Kirghiz",
          },
          {
            "sISOCode": "rn",
            "sName": "Kirundi",
          },
          {
            "sISOCode": "kom",
            "sName": "Komi",
          },
          {
            "sISOCode": "kon",
            "sName": "Kongo",
          },
          {
            "sISOCode": "kok",
            "sName": "Konkani",
          },
          {
            "sISOCode": "kor",
            "sName": "Korean",
          },
          {
            "sISOCode": "kpe",
            "sName": "Kpelle",
          },
          {
            "sISOCode": "kro",
            "sName": "Kru",
          },
          {
            "sISOCode": "kua",
            "sName": "Kuanyama",
          },
          {
            "sISOCode": "kum",
            "sName": "Kumyk",
          },
          {
            "sISOCode": "kur",
            "sName": "Kurdish",
          },
          {
            "sISOCode": "kru",
            "sName": "Kurukh",
          },
          {
            "sISOCode": "kus",
            "sName": "Kusaie",
          },
          {
            "sISOCode": "kut",
            "sName": "Kutenai",
          },
          {
            "sISOCode": "lad",
            "sName": "Ladino",
          },
          {
            "sISOCode": "lah",
            "sName": "Lahnda",
          },
          {
            "sISOCode": "lam",
            "sName": "Lamba",
          },
          {
            "sISOCode": "oci",
            "sName": "Langue d'Oc (post 1500)",
          },
          {
            "sISOCode": "lao",
            "sName": "Lao",
          },
          {
            "sISOCode": "lat",
            "sName": "Latin",
          },
          {
            "sISOCode": "lav",
            "sName": "Latvian",
          },
          {
            "sISOCode": "ltz",
            "sName": "Letzeburgesch",
          },
          {
            "sISOCode": "lez",
            "sName": "Lezghian",
          },
          {
            "sISOCode": "lin",
            "sName": "Lingala",
          },
          {
            "sISOCode": "lit",
            "sName": "Lithuanian",
          },
          {
            "sISOCode": "loz",
            "sName": "Lozi",
          },
          {
            "sISOCode": "lub",
            "sName": "Luba-Katanga",
          },
          {
            "sISOCode": "lui",
            "sName": "Luiseno",
          },
          {
            "sISOCode": "lun",
            "sName": "Lunda",
          },
          {
            "sISOCode": "luo",
            "sName": "Luo (Kenya and Tanzania)",
          },
          {
            "sISOCode": "mk",
            "sName": "Macedonian",
          },
          {
            "sISOCode": "mad",
            "sName": "Madurese",
          },
          {
            "sISOCode": "mag",
            "sName": "Magahi",
          },
          {
            "sISOCode": "mai",
            "sName": "Maithili",
          },
          {
            "sISOCode": "mak",
            "sName": "Makasar",
          },
          {
            "sISOCode": "mlg",
            "sName": "Malagasy",
          },
          {
            "sISOCode": "ms",
            "sName": "Malay",
          },
          {
            "sISOCode": "mal",
            "sName": "Malayalam",
          },
          {
            "sISOCode": "mlt",
            "sName": "Maltese",
          },
          {
            "sISOCode": "man",
            "sName": "Mandingo",
          },
          {
            "sISOCode": "mni",
            "sName": "Manipuri",
          },
          {
            "sISOCode": "mno",
            "sName": "Manobo languages",
          },
          {
            "sISOCode": "max",
            "sName": "Manx",
          },
          {
            "sISOCode": "mi",
            "sName": "Maori",
          },
          {
            "sISOCode": "mar",
            "sName": "Marathi",
          },
          {
            "sISOCode": "chm",
            "sName": "Mari",
          },
          {
            "sISOCode": "mah",
            "sName": "Marshall",
          },
          {
            "sISOCode": "mwr",
            "sName": "Marwari",
          },
          {
            "sISOCode": "mas",
            "sName": "Masai",
          },
          {
            "sISOCode": "myn",
            "sName": "Mayan languages",
          },
          {
            "sISOCode": "men",
            "sName": "Mende",
          },
          {
            "sISOCode": "mic",
            "sName": "Micmac",
          },
          {
            "sISOCode": "min",
            "sName": "Minangkabau",
          },
          {
            "sISOCode": "mis",
            "sName": "Miscellaneous (Other)",
          },
          {
            "sISOCode": "moh",
            "sName": "Mohawk",
          },
          {
            "sISOCode": "mol",
            "sName": "Moldavian",
          },
          {
            "sISOCode": "mkh",
            "sName": "Mon-Kmer (Other)",
          },
          {
            "sISOCode": "lol",
            "sName": "Mongo",
          },
          {
            "sISOCode": "mon",
            "sName": "Mongolian",
          },
          {
            "sISOCode": "cnr",
            "sName": "Montenegrin",
          },
          {
            "sISOCode": "mos",
            "sName": "Mossi",
          },
          {
            "sISOCode": "mul",
            "sName": "Multiple languages",
          },
          {
            "sISOCode": "mun",
            "sName": "Munda languages",
          },
          {
            "sISOCode": "nau",
            "sName": "Nauru",
          },
          {
            "sISOCode": "nav",
            "sName": "Navajo",
          },
          {
            "sISOCode": "nde",
            "sName": "Ndebele, North",
          },
          {
            "sISOCode": "nbl",
            "sName": "Ndebele, South",
          },
          {
            "sISOCode": "ndo",
            "sName": "Ndongo",
          },
          {
            "sISOCode": "nep",
            "sName": "Nepali",
          },
          {
            "sISOCode": "new",
            "sName": "Newari",
          },
          {
            "sISOCode": "nic",
            "sName": "Niger-Kordofanian (Other)",
          },
          {
            "sISOCode": "ssa",
            "sName": "Nilo-Saharan (Other)",
          },
          {
            "sISOCode": "niu",
            "sName": "Niuean",
          },
          {
            "sISOCode": "non",
            "sName": "Norse, Old",
          },
          {
            "sISOCode": "nai",
            "sName": "North American Indian (Other)",
          },
          {
            "sISOCode": "nor",
            "sName": "Norwegian",
          },
          {
            "sISOCode": "nno",
            "sName": "Norwegian (Nynorsk)",
          },
          {
            "sISOCode": "nub",
            "sName": "Nubian languages",
          },
          {
            "sISOCode": "nym",
            "sName": "Nyamwezi",
          },
          {
            "sISOCode": "nya",
            "sName": "Nyanja",
          },
          {
            "sISOCode": "nyn",
            "sName": "Nyankole",
          },
          {
            "sISOCode": "nyo",
            "sName": "Nyoro",
          },
          {
            "sISOCode": "nzi",
            "sName": "Nzima",
          },
          {
            "sISOCode": "oji",
            "sName": "Ojibwa",
          },
          {
            "sISOCode": "ori",
            "sName": "Oriya",
          },
          {
            "sISOCode": "orm",
            "sName": "Oromo",
          },
          {
            "sISOCode": "osa",
            "sName": "Osage",
          },
          {
            "sISOCode": "oss",
            "sName": "Ossetic",
          },
          {
            "sISOCode": "oto",
            "sName": "Otomian languages",
          },
          {
            "sISOCode": "pal",
            "sName": "Pahlavi",
          },
          {
            "sISOCode": "pau",
            "sName": "Palauan",
          },
          {
            "sISOCode": "pli",
            "sName": "Pali",
          },
          {
            "sISOCode": "pam",
            "sName": "Pampanga",
          },
          {
            "sISOCode": "pag",
            "sName": "Pangasinan",
          },
          {
            "sISOCode": "pan",
            "sName": "Panjabi",
          },
          {
            "sISOCode": "pap",
            "sName": "Papiamento",
          },
          {
            "sISOCode": "paa",
            "sName": "Papuan-Australian (Other)",
          },
          {
            "sISOCode": "fa",
            "sName": "Persian",
          },
          {
            "sISOCode": "peo",
            "sName": "Persian, Old (ca 600 - 400 B.C.)",
          },
          {
            "sISOCode": "phn",
            "sName": "Phoenician",
          },
          {
            "sISOCode": "pol",
            "sName": "Polish",
          },
          {
            "sISOCode": "tok",
            "sName": "Polli (Tokelau)",
          },
          {
            "sISOCode": "pon",
            "sName": "Ponape",
          },
          {
            "sISOCode": "por",
            "sName": "Portuguese",
          },
          {
            "sISOCode": "pra",
            "sName": "Prakrit languages",
          },
          {
            "sISOCode": "pro",
            "sName": "Provencal, Old (to 1500)",
          },
          {
            "sISOCode": "pus",
            "sName": "Pushto",
          },
          {
            "sISOCode": "que",
            "sName": "Quechua",
          },
          {
            "sISOCode": "raj",
            "sName": "Rajasthani",
          },
          {
            "sISOCode": "rar",
            "sName": "Rarotongan",
          },
          {
            "sISOCode": "roh",
            "sName": "Rhaeto-Romance",
          },
          {
            "sISOCode": "roa",
            "sName": "Romance (Other)",
          },
          {
            "sISOCode": "ro",
            "sName": "Romanian",
          },
          {
            "sISOCode": "rom",
            "sName": "Romany",
          },
          {
            "sISOCode": "run",
            "sName": "Rundi",
          },
          {
            "sISOCode": "rus",
            "sName": "Russian",
          },
          {
            "sISOCode": "sal",
            "sName": "Salishan languages",
          },
          {
            "sISOCode": "sam",
            "sName": "Samaritan Aramaic",
          },
          {
            "sISOCode": "smi",
            "sName": "Sami languages",
          },
          {
            "sISOCode": "smo",
            "sName": "Samoan",
          },
          {
            "sISOCode": "sad",
            "sName": "Sandawe",
          },
          {
            "sISOCode": "sag",
            "sName": "Sango",
          },
          {
            "sISOCode": "san",
            "sName": "Sanskrit",
          },
          {
            "sISOCode": "srd",
            "sName": "Sardinian",
          },
          {
            "sISOCode": "sco",
            "sName": "Scots",
          },
          {
            "sISOCode": "sel",
            "sName": "Selkup",
          },
          {
            "sISOCode": "sem",
            "sName": "Semitic (Other)",
          },
          {
            "sISOCode": "sr",
            "sName": "Serbian",
          },
          {
            "sISOCode": "scr",
            "sName": "Serbo-Croatian",
          },
          {
            "sISOCode": "srr",
            "sName": "Serer",
          },
          {
            "sISOCode": "st",
            "sName": "Sesotho",
          },
          {
            "sISOCode": "shn",
            "sName": "Shan",
          },
          {
            "sISOCode": "sna",
            "sName": "Shona",
          },
          {
            "sISOCode": "sid",
            "sName": "Sidamo",
          },
          {
            "sISOCode": "bla",
            "sName": "Siksika",
          },
          {
            "sISOCode": "snd",
            "sName": "Sindhi",
          },
          {
            "sISOCode": "sin",
            "sName": "Singhalese",
          },
          {
            "sISOCode": "sit",
            "sName": "Sino-Tibetan (Other)",
          },
          {
            "sISOCode": "sio",
            "sName": "Siouan languages",
          },
          {
            "sISOCode": "ssw",
            "sName": "Siswant",
          },
          {
            "sISOCode": "sla",
            "sName": "Slavic (Other)",
          },
          {
            "sISOCode": "sk",
            "sName": "Slovak",
          },
          {
            "sISOCode": "slv",
            "sName": "Slovenian",
          },
          {
            "sISOCode": "sog",
            "sName": "Sogdian",
          },
          {
            "sISOCode": "som",
            "sName": "Somali",
          },
          {
            "sISOCode": "son",
            "sName": "Songhai",
          },
          {
            "sISOCode": "wen",
            "sName": "Sorbian languages",
          },
          {
            "sISOCode": "nso",
            "sName": "Sotho, Northern",
          },
          {
            "sISOCode": "sot",
            "sName": "Sotho, Southern",
          },
          {
            "sISOCode": "sai",
            "sName": "South American Indian (Other)",
          },
          {
            "sISOCode": "es",
            "sName": "Spanish",
          },
          {
            "sISOCode": "sun",
            "sName": "Sudanese",
          },
          {
            "sISOCode": "suk",
            "sName": "Sukuma",
          },
          {
            "sISOCode": "sux",
            "sName": "Sumerian",
          },
          {
            "sISOCode": "sus",
            "sName": "Susu",
          },
          {
            "sISOCode": "swa",
            "sName": "Swahili",
          },
          {
            "sISOCode": "sz",
            "sName": "Swazi",
          },
          {
            "sISOCode": "sv",
            "sName": "Swedish",
          },
          {
            "sISOCode": "syr",
            "sName": "Syriac",
          },
          {
            "sISOCode": "tgl",
            "sName": "Tagalog",
          },
          {
            "sISOCode": "tah",
            "sName": "Tahitian",
          },
          {
            "sISOCode": "tgk",
            "sName": "Tajik",
          },
          {
            "sISOCode": "tmh",
            "sName": "Tamashek",
          },
          {
            "sISOCode": "tam",
            "sName": "Tamil",
          },
          {
            "sISOCode": "tat",
            "sName": "Tatar",
          },
          {
            "sISOCode": "tel",
            "sName": "Telugu",
          },
          {
            "sISOCode": "ter",
            "sName": "Tereno",
          },
          {
            "sISOCode": "tha",
            "sName": "Thai",
          },
          {
            "sISOCode": "bo",
            "sName": "Tibetan",
          },
          {
            "sISOCode": "tig",
            "sName": "Tigre",
          },
          {
            "sISOCode": "tir",
            "sName": "Tigrinya",
          },
          {
            "sISOCode": "tem",
            "sName": "Timne",
          },
          {
            "sISOCode": "tiv",
            "sName": "Tivi",
          },
          {
            "sISOCode": "tli",
            "sName": "Tlingit",
          },
          {
            "sISOCode": "tog",
            "sName": "Tonga (Nyasa)",
          },
          {
            "sISOCode": "ton",
            "sName": "Tonga (Tonga Islands)",
          },
          {
            "sISOCode": "tru",
            "sName": "Truk",
          },
          {
            "sISOCode": "tsi",
            "sName": "Tsimshian",
          },
          {
            "sISOCode": "tso",
            "sName": "Tsonga",
          },
          {
            "sISOCode": "tsn",
            "sName": "Tswana",
          },
          {
            "sISOCode": "tum",
            "sName": "Tumbuka",
          },
          {
            "sISOCode": "tur",
            "sName": "Turkish",
          },
          {
            "sISOCode": "ota",
            "sName": "Turkish, Ottoman (1500 - 1928)",
          },
          {
            "sISOCode": "tuk",
            "sName": "Turkmen",
          },
          {
            "sISOCode": "tyv",
            "sName": "Tuvinian",
          },
          {
            "sISOCode": "twi",
            "sName": "Twi",
          },
          {
            "sISOCode": "uga",
            "sName": "Ugaritic",
          },
          {
            "sISOCode": "uig",
            "sName": "Uighur",
          },
          {
            "sISOCode": "ukr",
            "sName": "Ukrainian",
          },
          {
            "sISOCode": "umb",
            "sName": "Umbundu",
          },
          {
            "sISOCode": "und",
            "sName": "Undetermined",
          },
          {
            "sISOCode": "urd",
            "sName": "Urdu",
          },
          {
            "sISOCode": "uzb",
            "sName": "Uzbek",
          },
          {
            "sISOCode": "vai",
            "sName": "Vai",
          },
          {
            "sISOCode": "ven",
            "sName": "Venda",
          },
          {
            "sISOCode": "vie",
            "sName": "Vietnamese",
          },
          {
            "sISOCode": "vol",
            "sName": "Volap³k",
          },
          {
            "sISOCode": "vot",
            "sName": "Votic",
          },
          {
            "sISOCode": "wak",
            "sName": "Wakashan languages",
          },
          {
            "sISOCode": "wal",
            "sName": "Walamo",
          },
          {
            "sISOCode": "war",
            "sName": "Waray",
          },
          {
            "sISOCode": "was",
            "sName": "Washo",
          },
          {
            "sISOCode": "cy",
            "sName": "Welsh",
          },
          {
            "sISOCode": "wol",
            "sName": "Wolof",
          },
          {
            "sISOCode": "xho",
            "sName": "Xhosa",
          },
          {
            "sISOCode": "sah",
            "sName": "Yakut",
          },
          {
            "sISOCode": "yao",
            "sName": "Yao",
          },
          {
            "sISOCode": "yap",
            "sName": "Yap",
          },
          {
            "sISOCode": "yid",
            "sName": "Yiddish",
          },
          {
            "sISOCode": "yor",
            "sName": "Yoruba",
          },
          {
            "sISOCode": "zap",
            "sName": "Zapotec",
          },
          {
            "sISOCode": "zen",
            "sName": "Zenaga",
          },
          {
            "sISOCode": "zha",
            "sName": "Zhuang",
          },
          {
            "sISOCode": "zul",
            "sName": "Zulu",
          },
          {
            "sISOCode": "zun",
            "sName": "Zuni",
          },
        ],
      },
    },
  },
  "errors": undefined,
  "extensions": undefined,
}
`;

exports[`SOAP Country Info generates the schema correctly: schema 1`] = `
"schema @transport(kind: "soap", subgraph: "CountryInfo") {
  query: Query
  mutation: Mutation
}

directive @soap(elementName: String, bindingNamespace: String, endpoint: String, subgraph: String) on FIELD_DEFINITION

type Query {
  CountryInfoService_CountryInfoService_CountryInfoServiceSoap_ListOfContinentsByName(ListOfContinentsByName: JSON = ""): CountryInfoService_ListOfContinentsByNameResponse @soap(elementName: "ListOfContinentsByNameResponse", bindingNamespace: "http://www.oorsprong.org/websamples.countryinfo", endpoint: "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso", subgraph: "CountryInfo") @resolver(subgraph: "CountryInfo", operation: "query CountryInfoService_CountryInfoService_CountryInfoServiceSoap_ListOfContinentsByName($ListOfContinentsByName: JSON) { CountryInfoService_CountryInfoService_CountryInfoServiceSoap_ListOfContinentsByName(ListOfContinentsByName: $ListOfContinentsByName) }") @source(subgraph: "CountryInfo", name: "CountryInfoService_CountryInfoService_CountryInfoServiceSoap_ListOfContinentsByName", type: "CountryInfoService_ListOfContinentsByNameResponse")
  CountryInfoService_CountryInfoService_CountryInfoServiceSoap_ListOfContinentsByCode(ListOfContinentsByCode: JSON = ""): CountryInfoService_ListOfContinentsByCodeResponse @soap(elementName: "ListOfContinentsByCodeResponse", bindingNamespace: "http://www.oorsprong.org/websamples.countryinfo", endpoint: "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso", subgraph: "CountryInfo") @resolver(subgraph: "CountryInfo", operation: "query CountryInfoService_CountryInfoService_CountryInfoServiceSoap_ListOfContinentsByCode($ListOfContinentsByCode: JSON) { CountryInfoService_CountryInfoService_CountryInfoServiceSoap_ListOfContinentsByCode(ListOfContinentsByCode: $ListOfContinentsByCode) }") @source(subgraph: "CountryInfo", name: "CountryInfoService_CountryInfoService_CountryInfoServiceSoap_ListOfContinentsByCode", type: "CountryInfoService_ListOfContinentsByCodeResponse")
  CountryInfoService_CountryInfoService_CountryInfoServiceSoap_ListOfCurrenciesByName(ListOfCurrenciesByName: JSON = ""): CountryInfoService_ListOfCurrenciesByNameResponse @soap(elementName: "ListOfCurrenciesByNameResponse", bindingNamespace: "http://www.oorsprong.org/websamples.countryinfo", endpoint: "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso", subgraph: "CountryInfo") @resolver(subgraph: "CountryInfo", operation: "query CountryInfoService_CountryInfoService_CountryInfoServiceSoap_ListOfCurrenciesByName($ListOfCurrenciesByName: JSON) { CountryInfoService_CountryInfoService_CountryInfoServiceSoap_ListOfCurrenciesByName(ListOfCurrenciesByName: $ListOfCurrenciesByName) }") @source(subgraph: "CountryInfo", name: "CountryInfoService_CountryInfoService_CountryInfoServiceSoap_ListOfCurrenciesByName", type: "CountryInfoService_ListOfCurrenciesByNameResponse")
  CountryInfoService_CountryInfoService_CountryInfoServiceSoap_ListOfCurrenciesByCode(ListOfCurrenciesByCode: JSON = ""): CountryInfoService_ListOfCurrenciesByCodeResponse @soap(elementName: "ListOfCurrenciesByCodeResponse", bindingNamespace: "http://www.oorsprong.org/websamples.countryinfo", endpoint: "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso", subgraph: "CountryInfo") @resolver(subgraph: "CountryInfo", operation: "query CountryInfoService_CountryInfoService_CountryInfoServiceSoap_ListOfCurrenciesByCode($ListOfCurrenciesByCode: JSON) { CountryInfoService_CountryInfoService_CountryInfoServiceSoap_ListOfCurrenciesByCode(ListOfCurrenciesByCode: $ListOfCurrenciesByCode) }") @source(subgraph: "CountryInfo", name: "CountryInfoService_CountryInfoService_CountryInfoServiceSoap_ListOfCurrenciesByCode", type: "CountryInfoService_ListOfCurrenciesByCodeResponse")
  CountryInfoService_CountryInfoService_CountryInfoServiceSoap_ListOfCountryNamesByCode(ListOfCountryNamesByCode: JSON = ""): CountryInfoService_ListOfCountryNamesByCodeResponse @soap(elementName: "ListOfCountryNamesByCodeResponse", bindingNamespace: "http://www.oorsprong.org/websamples.countryinfo", endpoint: "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso", subgraph: "CountryInfo") @resolver(subgraph: "CountryInfo", operation: "query CountryInfoService_CountryInfoService_CountryInfoServiceSoap_ListOfCountryNamesByCode($ListOfCountryNamesByCode: JSON) { CountryInfoService_CountryInfoService_CountryInfoServiceSoap_ListOfCountryNamesByCode(ListOfCountryNamesByCode: $ListOfCountryNamesByCode) }") @source(subgraph: "CountryInfo", name: "CountryInfoService_CountryInfoService_CountryInfoServiceSoap_ListOfCountryNamesByCode", type: "CountryInfoService_ListOfCountryNamesByCodeResponse")
  CountryInfoService_CountryInfoService_CountryInfoServiceSoap_ListOfCountryNamesByName(ListOfCountryNamesByName: JSON = ""): CountryInfoService_ListOfCountryNamesByNameResponse @soap(elementName: "ListOfCountryNamesByNameResponse", bindingNamespace: "http://www.oorsprong.org/websamples.countryinfo", endpoint: "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso", subgraph: "CountryInfo") @resolver(subgraph: "CountryInfo", operation: "query CountryInfoService_CountryInfoService_CountryInfoServiceSoap_ListOfCountryNamesByName($ListOfCountryNamesByName: JSON) { CountryInfoService_CountryInfoService_CountryInfoServiceSoap_ListOfCountryNamesByName(ListOfCountryNamesByName: $ListOfCountryNamesByName) }") @source(subgraph: "CountryInfo", name: "CountryInfoService_CountryInfoService_CountryInfoServiceSoap_ListOfCountryNamesByName", type: "CountryInfoService_ListOfCountryNamesByNameResponse")
  CountryInfoService_CountryInfoService_CountryInfoServiceSoap_ListOfCountryNamesGroupedByContinent(ListOfCountryNamesGroupedByContinent: JSON = ""): CountryInfoService_ListOfCountryNamesGroupedByContinentResponse @soap(elementName: "ListOfCountryNamesGroupedByContinentResponse", bindingNamespace: "http://www.oorsprong.org/websamples.countryinfo", endpoint: "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso", subgraph: "CountryInfo") @resolver(subgraph: "CountryInfo", operation: "query CountryInfoService_CountryInfoService_CountryInfoServiceSoap_ListOfCountryNamesGroupedByContinent($ListOfCountryNamesGroupedByContinent: JSON) { CountryInfoService_CountryInfoService_CountryInfoServiceSoap_ListOfCountryNamesGroupedByContinent(ListOfCountryNamesGroupedByContinent: $ListOfCountryNamesGroupedByContinent) }") @source(subgraph: "CountryInfo", name: "CountryInfoService_CountryInfoService_CountryInfoServiceSoap_ListOfCountryNamesGroupedByContinent", type: "CountryInfoService_ListOfCountryNamesGroupedByContinentResponse")
  CountryInfoService_CountryInfoService_CountryInfoServiceSoap_CountryName(CountryName: CountryInfoService_CountryName_Input = {}): CountryInfoService_CountryNameResponse @soap(elementName: "CountryNameResponse", bindingNamespace: "http://www.oorsprong.org/websamples.countryinfo", endpoint: "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso", subgraph: "CountryInfo") @resolver(subgraph: "CountryInfo", operation: "query CountryInfoService_CountryInfoService_CountryInfoServiceSoap_CountryName($CountryName: CountryInfoService_CountryName_Input = [object Object]) { CountryInfoService_CountryInfoService_CountryInfoServiceSoap_CountryName(CountryName: $CountryName) }") @source(subgraph: "CountryInfo", name: "CountryInfoService_CountryInfoService_CountryInfoServiceSoap_CountryName", type: "CountryInfoService_CountryNameResponse")
  CountryInfoService_CountryInfoService_CountryInfoServiceSoap_CountryISOCode(CountryISOCode: CountryInfoService_CountryISOCode_Input = {}): CountryInfoService_CountryISOCodeResponse @soap(elementName: "CountryISOCodeResponse", bindingNamespace: "http://www.oorsprong.org/websamples.countryinfo", endpoint: "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso", subgraph: "CountryInfo") @resolver(subgraph: "CountryInfo", operation: "query CountryInfoService_CountryInfoService_CountryInfoServiceSoap_CountryISOCode($CountryISOCode: CountryInfoService_CountryISOCode_Input = [object Object]) { CountryInfoService_CountryInfoService_CountryInfoServiceSoap_CountryISOCode(CountryISOCode: $CountryISOCode) }") @source(subgraph: "CountryInfo", name: "CountryInfoService_CountryInfoService_CountryInfoServiceSoap_CountryISOCode", type: "CountryInfoService_CountryISOCodeResponse")
  CountryInfoService_CountryInfoService_CountryInfoServiceSoap_CountryCurrency(CountryCurrency: CountryInfoService_CountryCurrency_Input = {}): CountryInfoService_CountryCurrencyResponse @soap(elementName: "CountryCurrencyResponse", bindingNamespace: "http://www.oorsprong.org/websamples.countryinfo", endpoint: "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso", subgraph: "CountryInfo") @resolver(subgraph: "CountryInfo", operation: "query CountryInfoService_CountryInfoService_CountryInfoServiceSoap_CountryCurrency($CountryCurrency: CountryInfoService_CountryCurrency_Input = [object Object]) { CountryInfoService_CountryInfoService_CountryInfoServiceSoap_CountryCurrency(CountryCurrency: $CountryCurrency) }") @source(subgraph: "CountryInfo", name: "CountryInfoService_CountryInfoService_CountryInfoServiceSoap_CountryCurrency", type: "CountryInfoService_CountryCurrencyResponse")
  CountryInfoService_CountryInfoService_CountryInfoServiceSoap_CountryFlag(CountryFlag: CountryInfoService_CountryFlag_Input = {}): CountryInfoService_CountryFlagResponse @soap(elementName: "CountryFlagResponse", bindingNamespace: "http://www.oorsprong.org/websamples.countryinfo", endpoint: "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso", subgraph: "CountryInfo") @resolver(subgraph: "CountryInfo", operation: "query CountryInfoService_CountryInfoService_CountryInfoServiceSoap_CountryFlag($CountryFlag: CountryInfoService_CountryFlag_Input = [object Object]) { CountryInfoService_CountryInfoService_CountryInfoServiceSoap_CountryFlag(CountryFlag: $CountryFlag) }") @source(subgraph: "CountryInfo", name: "CountryInfoService_CountryInfoService_CountryInfoServiceSoap_CountryFlag", type: "CountryInfoService_CountryFlagResponse")
  CountryInfoService_CountryInfoService_CountryInfoServiceSoap_CountryIntPhoneCode(CountryIntPhoneCode: CountryInfoService_CountryIntPhoneCode_Input = {}): CountryInfoService_CountryIntPhoneCodeResponse @soap(elementName: "CountryIntPhoneCodeResponse", bindingNamespace: "http://www.oorsprong.org/websamples.countryinfo", endpoint: "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso", subgraph: "CountryInfo") @resolver(subgraph: "CountryInfo", operation: "query CountryInfoService_CountryInfoService_CountryInfoServiceSoap_CountryIntPhoneCode($CountryIntPhoneCode: CountryInfoService_CountryIntPhoneCode_Input = [object Object]) { CountryInfoService_CountryInfoService_CountryInfoServiceSoap_CountryIntPhoneCode(CountryIntPhoneCode: $CountryIntPhoneCode) }") @source(subgraph: "CountryInfo", name: "CountryInfoService_CountryInfoService_CountryInfoServiceSoap_CountryIntPhoneCode", type: "CountryInfoService_CountryIntPhoneCodeResponse")
  CountryInfoService_CountryInfoService_CountryInfoServiceSoap_CountriesUsingCurrency(CountriesUsingCurrency: CountryInfoService_CountriesUsingCurrency_Input = {}): CountryInfoService_CountriesUsingCurrencyResponse @soap(elementName: "CountriesUsingCurrencyResponse", bindingNamespace: "http://www.oorsprong.org/websamples.countryinfo", endpoint: "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso", subgraph: "CountryInfo") @resolver(subgraph: "CountryInfo", operation: "query CountryInfoService_CountryInfoService_CountryInfoServiceSoap_CountriesUsingCurrency($CountriesUsingCurrency: CountryInfoService_CountriesUsingCurrency_Input = [object Object]) { CountryInfoService_CountryInfoService_CountryInfoServiceSoap_CountriesUsingCurrency(CountriesUsingCurrency: $CountriesUsingCurrency) }") @source(subgraph: "CountryInfo", name: "CountryInfoService_CountryInfoService_CountryInfoServiceSoap_CountriesUsingCurrency", type: "CountryInfoService_CountriesUsingCurrencyResponse")
  CountryInfoService_CountryInfoService_CountryInfoServiceSoap_ListOfLanguagesByName(ListOfLanguagesByName: JSON = ""): CountryInfoService_ListOfLanguagesByNameResponse @soap(elementName: "ListOfLanguagesByNameResponse", bindingNamespace: "http://www.oorsprong.org/websamples.countryinfo", endpoint: "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso", subgraph: "CountryInfo") @resolver(subgraph: "CountryInfo", operation: "query CountryInfoService_CountryInfoService_CountryInfoServiceSoap_ListOfLanguagesByName($ListOfLanguagesByName: JSON) { CountryInfoService_CountryInfoService_CountryInfoServiceSoap_ListOfLanguagesByName(ListOfLanguagesByName: $ListOfLanguagesByName) }") @source(subgraph: "CountryInfo", name: "CountryInfoService_CountryInfoService_CountryInfoServiceSoap_ListOfLanguagesByName", type: "CountryInfoService_ListOfLanguagesByNameResponse")
  CountryInfoService_CountryInfoService_CountryInfoServiceSoap_ListOfLanguagesByCode(ListOfLanguagesByCode: JSON = ""): CountryInfoService_ListOfLanguagesByCodeResponse @soap(elementName: "ListOfLanguagesByCodeResponse", bindingNamespace: "http://www.oorsprong.org/websamples.countryinfo", endpoint: "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso", subgraph: "CountryInfo") @resolver(subgraph: "CountryInfo", operation: "query CountryInfoService_CountryInfoService_CountryInfoServiceSoap_ListOfLanguagesByCode($ListOfLanguagesByCode: JSON) { CountryInfoService_CountryInfoService_CountryInfoServiceSoap_ListOfLanguagesByCode(ListOfLanguagesByCode: $ListOfLanguagesByCode) }") @source(subgraph: "CountryInfo", name: "CountryInfoService_CountryInfoService_CountryInfoServiceSoap_ListOfLanguagesByCode", type: "CountryInfoService_ListOfLanguagesByCodeResponse")
  CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_ListOfContinentsByName(ListOfContinentsByName: JSON = ""): CountryInfoService_ListOfContinentsByNameResponse @soap(elementName: "ListOfContinentsByNameResponse", bindingNamespace: "http://www.oorsprong.org/websamples.countryinfo", endpoint: "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso", subgraph: "CountryInfo") @resolver(subgraph: "CountryInfo", operation: "query CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_ListOfContinentsByName($ListOfContinentsByName: JSON) { CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_ListOfContinentsByName(ListOfContinentsByName: $ListOfContinentsByName) }") @source(subgraph: "CountryInfo", name: "CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_ListOfContinentsByName", type: "CountryInfoService_ListOfContinentsByNameResponse")
  CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_ListOfContinentsByCode(ListOfContinentsByCode: JSON = ""): CountryInfoService_ListOfContinentsByCodeResponse @soap(elementName: "ListOfContinentsByCodeResponse", bindingNamespace: "http://www.oorsprong.org/websamples.countryinfo", endpoint: "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso", subgraph: "CountryInfo") @resolver(subgraph: "CountryInfo", operation: "query CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_ListOfContinentsByCode($ListOfContinentsByCode: JSON) { CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_ListOfContinentsByCode(ListOfContinentsByCode: $ListOfContinentsByCode) }") @source(subgraph: "CountryInfo", name: "CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_ListOfContinentsByCode", type: "CountryInfoService_ListOfContinentsByCodeResponse")
  CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_ListOfCurrenciesByName(ListOfCurrenciesByName: JSON = ""): CountryInfoService_ListOfCurrenciesByNameResponse @soap(elementName: "ListOfCurrenciesByNameResponse", bindingNamespace: "http://www.oorsprong.org/websamples.countryinfo", endpoint: "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso", subgraph: "CountryInfo") @resolver(subgraph: "CountryInfo", operation: "query CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_ListOfCurrenciesByName($ListOfCurrenciesByName: JSON) { CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_ListOfCurrenciesByName(ListOfCurrenciesByName: $ListOfCurrenciesByName) }") @source(subgraph: "CountryInfo", name: "CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_ListOfCurrenciesByName", type: "CountryInfoService_ListOfCurrenciesByNameResponse")
  CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_ListOfCurrenciesByCode(ListOfCurrenciesByCode: JSON = ""): CountryInfoService_ListOfCurrenciesByCodeResponse @soap(elementName: "ListOfCurrenciesByCodeResponse", bindingNamespace: "http://www.oorsprong.org/websamples.countryinfo", endpoint: "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso", subgraph: "CountryInfo") @resolver(subgraph: "CountryInfo", operation: "query CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_ListOfCurrenciesByCode($ListOfCurrenciesByCode: JSON) { CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_ListOfCurrenciesByCode(ListOfCurrenciesByCode: $ListOfCurrenciesByCode) }") @source(subgraph: "CountryInfo", name: "CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_ListOfCurrenciesByCode", type: "CountryInfoService_ListOfCurrenciesByCodeResponse")
  CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_ListOfCountryNamesByCode(ListOfCountryNamesByCode: JSON = ""): CountryInfoService_ListOfCountryNamesByCodeResponse @soap(elementName: "ListOfCountryNamesByCodeResponse", bindingNamespace: "http://www.oorsprong.org/websamples.countryinfo", endpoint: "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso", subgraph: "CountryInfo") @resolver(subgraph: "CountryInfo", operation: "query CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_ListOfCountryNamesByCode($ListOfCountryNamesByCode: JSON) { CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_ListOfCountryNamesByCode(ListOfCountryNamesByCode: $ListOfCountryNamesByCode) }") @source(subgraph: "CountryInfo", name: "CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_ListOfCountryNamesByCode", type: "CountryInfoService_ListOfCountryNamesByCodeResponse")
  CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_ListOfCountryNamesByName(ListOfCountryNamesByName: JSON = ""): CountryInfoService_ListOfCountryNamesByNameResponse @soap(elementName: "ListOfCountryNamesByNameResponse", bindingNamespace: "http://www.oorsprong.org/websamples.countryinfo", endpoint: "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso", subgraph: "CountryInfo") @resolver(subgraph: "CountryInfo", operation: "query CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_ListOfCountryNamesByName($ListOfCountryNamesByName: JSON) { CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_ListOfCountryNamesByName(ListOfCountryNamesByName: $ListOfCountryNamesByName) }") @source(subgraph: "CountryInfo", name: "CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_ListOfCountryNamesByName", type: "CountryInfoService_ListOfCountryNamesByNameResponse")
  CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_ListOfCountryNamesGroupedByContinent(ListOfCountryNamesGroupedByContinent: JSON = ""): CountryInfoService_ListOfCountryNamesGroupedByContinentResponse @soap(elementName: "ListOfCountryNamesGroupedByContinentResponse", bindingNamespace: "http://www.oorsprong.org/websamples.countryinfo", endpoint: "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso", subgraph: "CountryInfo") @resolver(subgraph: "CountryInfo", operation: "query CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_ListOfCountryNamesGroupedByContinent($ListOfCountryNamesGroupedByContinent: JSON) { CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_ListOfCountryNamesGroupedByContinent(ListOfCountryNamesGroupedByContinent: $ListOfCountryNamesGroupedByContinent) }") @source(subgraph: "CountryInfo", name: "CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_ListOfCountryNamesGroupedByContinent", type: "CountryInfoService_ListOfCountryNamesGroupedByContinentResponse")
  CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_CountryName(CountryName: CountryInfoService_CountryName_Input = {}): CountryInfoService_CountryNameResponse @soap(elementName: "CountryNameResponse", bindingNamespace: "http://www.oorsprong.org/websamples.countryinfo", endpoint: "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso", subgraph: "CountryInfo") @resolver(subgraph: "CountryInfo", operation: "query CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_CountryName($CountryName: CountryInfoService_CountryName_Input = [object Object]) { CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_CountryName(CountryName: $CountryName) }") @source(subgraph: "CountryInfo", name: "CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_CountryName", type: "CountryInfoService_CountryNameResponse")
  CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_CountryISOCode(CountryISOCode: CountryInfoService_CountryISOCode_Input = {}): CountryInfoService_CountryISOCodeResponse @soap(elementName: "CountryISOCodeResponse", bindingNamespace: "http://www.oorsprong.org/websamples.countryinfo", endpoint: "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso", subgraph: "CountryInfo") @resolver(subgraph: "CountryInfo", operation: "query CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_CountryISOCode($CountryISOCode: CountryInfoService_CountryISOCode_Input = [object Object]) { CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_CountryISOCode(CountryISOCode: $CountryISOCode) }") @source(subgraph: "CountryInfo", name: "CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_CountryISOCode", type: "CountryInfoService_CountryISOCodeResponse")
  CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_CountryCurrency(CountryCurrency: CountryInfoService_CountryCurrency_Input = {}): CountryInfoService_CountryCurrencyResponse @soap(elementName: "CountryCurrencyResponse", bindingNamespace: "http://www.oorsprong.org/websamples.countryinfo", endpoint: "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso", subgraph: "CountryInfo") @resolver(subgraph: "CountryInfo", operation: "query CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_CountryCurrency($CountryCurrency: CountryInfoService_CountryCurrency_Input = [object Object]) { CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_CountryCurrency(CountryCurrency: $CountryCurrency) }") @source(subgraph: "CountryInfo", name: "CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_CountryCurrency", type: "CountryInfoService_CountryCurrencyResponse")
  CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_CountryFlag(CountryFlag: CountryInfoService_CountryFlag_Input = {}): CountryInfoService_CountryFlagResponse @soap(elementName: "CountryFlagResponse", bindingNamespace: "http://www.oorsprong.org/websamples.countryinfo", endpoint: "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso", subgraph: "CountryInfo") @resolver(subgraph: "CountryInfo", operation: "query CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_CountryFlag($CountryFlag: CountryInfoService_CountryFlag_Input = [object Object]) { CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_CountryFlag(CountryFlag: $CountryFlag) }") @source(subgraph: "CountryInfo", name: "CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_CountryFlag", type: "CountryInfoService_CountryFlagResponse")
  CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_CountryIntPhoneCode(CountryIntPhoneCode: CountryInfoService_CountryIntPhoneCode_Input = {}): CountryInfoService_CountryIntPhoneCodeResponse @soap(elementName: "CountryIntPhoneCodeResponse", bindingNamespace: "http://www.oorsprong.org/websamples.countryinfo", endpoint: "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso", subgraph: "CountryInfo") @resolver(subgraph: "CountryInfo", operation: "query CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_CountryIntPhoneCode($CountryIntPhoneCode: CountryInfoService_CountryIntPhoneCode_Input = [object Object]) { CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_CountryIntPhoneCode(CountryIntPhoneCode: $CountryIntPhoneCode) }") @source(subgraph: "CountryInfo", name: "CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_CountryIntPhoneCode", type: "CountryInfoService_CountryIntPhoneCodeResponse")
  CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_CountriesUsingCurrency(CountriesUsingCurrency: CountryInfoService_CountriesUsingCurrency_Input = {}): CountryInfoService_CountriesUsingCurrencyResponse @soap(elementName: "CountriesUsingCurrencyResponse", bindingNamespace: "http://www.oorsprong.org/websamples.countryinfo", endpoint: "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso", subgraph: "CountryInfo") @resolver(subgraph: "CountryInfo", operation: "query CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_CountriesUsingCurrency($CountriesUsingCurrency: CountryInfoService_CountriesUsingCurrency_Input = [object Object]) { CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_CountriesUsingCurrency(CountriesUsingCurrency: $CountriesUsingCurrency) }") @source(subgraph: "CountryInfo", name: "CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_CountriesUsingCurrency", type: "CountryInfoService_CountriesUsingCurrencyResponse")
  CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_ListOfLanguagesByName(ListOfLanguagesByName: JSON = ""): CountryInfoService_ListOfLanguagesByNameResponse @soap(elementName: "ListOfLanguagesByNameResponse", bindingNamespace: "http://www.oorsprong.org/websamples.countryinfo", endpoint: "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso", subgraph: "CountryInfo") @resolver(subgraph: "CountryInfo", operation: "query CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_ListOfLanguagesByName($ListOfLanguagesByName: JSON) { CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_ListOfLanguagesByName(ListOfLanguagesByName: $ListOfLanguagesByName) }") @source(subgraph: "CountryInfo", name: "CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_ListOfLanguagesByName", type: "CountryInfoService_ListOfLanguagesByNameResponse")
  CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_ListOfLanguagesByCode(ListOfLanguagesByCode: JSON = ""): CountryInfoService_ListOfLanguagesByCodeResponse @soap(elementName: "ListOfLanguagesByCodeResponse", bindingNamespace: "http://www.oorsprong.org/websamples.countryinfo", endpoint: "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso", subgraph: "CountryInfo") @resolver(subgraph: "CountryInfo", operation: "query CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_ListOfLanguagesByCode($ListOfLanguagesByCode: JSON) { CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_ListOfLanguagesByCode(ListOfLanguagesByCode: $ListOfLanguagesByCode) }") @source(subgraph: "CountryInfo", name: "CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_ListOfLanguagesByCode", type: "CountryInfoService_ListOfLanguagesByCodeResponse")
}

type CountryInfoService_ListOfContinentsByNameResponse @source(subgraph: "CountryInfo", name: "CountryInfoService_ListOfContinentsByNameResponse") {
  ListOfContinentsByNameResult: CountryInfoService_ArrayOftContinent! @source(subgraph: "CountryInfo", name: "ListOfContinentsByNameResult", type: "CountryInfoService_ArrayOftContinent!")
}

type CountryInfoService_ArrayOftContinent @source(subgraph: "CountryInfo", name: "CountryInfoService_ArrayOftContinent") {
  tContinent: [CountryInfoService_tContinent]! @source(subgraph: "CountryInfo", name: "tContinent", type: "[CountryInfoService_tContinent]!")
}

type CountryInfoService_tContinent @source(subgraph: "CountryInfo", name: "CountryInfoService_tContinent") {
  sCode: String! @source(subgraph: "CountryInfo", name: "sCode", type: "String!")
  sName: String! @source(subgraph: "CountryInfo", name: "sName", type: "String!")
}

"""
The \`JSON\` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @source(subgraph: "CountryInfo", name: "JSON") @source(subgraph: "CountryInfo", name: "JSON")

type CountryInfoService_ListOfContinentsByCodeResponse @source(subgraph: "CountryInfo", name: "CountryInfoService_ListOfContinentsByCodeResponse") {
  ListOfContinentsByCodeResult: CountryInfoService_ArrayOftContinent! @source(subgraph: "CountryInfo", name: "ListOfContinentsByCodeResult", type: "CountryInfoService_ArrayOftContinent!")
}

type CountryInfoService_ListOfCurrenciesByNameResponse @source(subgraph: "CountryInfo", name: "CountryInfoService_ListOfCurrenciesByNameResponse") {
  ListOfCurrenciesByNameResult: CountryInfoService_ArrayOftCurrency! @source(subgraph: "CountryInfo", name: "ListOfCurrenciesByNameResult", type: "CountryInfoService_ArrayOftCurrency!")
}

type CountryInfoService_ArrayOftCurrency @source(subgraph: "CountryInfo", name: "CountryInfoService_ArrayOftCurrency") {
  tCurrency: [CountryInfoService_tCurrency]! @source(subgraph: "CountryInfo", name: "tCurrency", type: "[CountryInfoService_tCurrency]!")
}

type CountryInfoService_tCurrency @source(subgraph: "CountryInfo", name: "CountryInfoService_tCurrency") {
  sISOCode: String! @source(subgraph: "CountryInfo", name: "sISOCode", type: "String!")
  sName: String! @source(subgraph: "CountryInfo", name: "sName", type: "String!")
}

type CountryInfoService_ListOfCurrenciesByCodeResponse @source(subgraph: "CountryInfo", name: "CountryInfoService_ListOfCurrenciesByCodeResponse") {
  ListOfCurrenciesByCodeResult: CountryInfoService_ArrayOftCurrency! @source(subgraph: "CountryInfo", name: "ListOfCurrenciesByCodeResult", type: "CountryInfoService_ArrayOftCurrency!")
}

type CountryInfoService_ListOfCountryNamesByCodeResponse @source(subgraph: "CountryInfo", name: "CountryInfoService_ListOfCountryNamesByCodeResponse") {
  ListOfCountryNamesByCodeResult: CountryInfoService_ArrayOftCountryCodeAndName! @source(subgraph: "CountryInfo", name: "ListOfCountryNamesByCodeResult", type: "CountryInfoService_ArrayOftCountryCodeAndName!")
}

type CountryInfoService_ArrayOftCountryCodeAndName @source(subgraph: "CountryInfo", name: "CountryInfoService_ArrayOftCountryCodeAndName") {
  tCountryCodeAndName: [CountryInfoService_tCountryCodeAndName]! @source(subgraph: "CountryInfo", name: "tCountryCodeAndName", type: "[CountryInfoService_tCountryCodeAndName]!")
}

type CountryInfoService_tCountryCodeAndName @source(subgraph: "CountryInfo", name: "CountryInfoService_tCountryCodeAndName") {
  sISOCode: String! @source(subgraph: "CountryInfo", name: "sISOCode", type: "String!")
  sName: String! @source(subgraph: "CountryInfo", name: "sName", type: "String!")
}

type CountryInfoService_ListOfCountryNamesByNameResponse @source(subgraph: "CountryInfo", name: "CountryInfoService_ListOfCountryNamesByNameResponse") {
  ListOfCountryNamesByNameResult: CountryInfoService_ArrayOftCountryCodeAndName! @source(subgraph: "CountryInfo", name: "ListOfCountryNamesByNameResult", type: "CountryInfoService_ArrayOftCountryCodeAndName!")
}

type CountryInfoService_ListOfCountryNamesGroupedByContinentResponse @source(subgraph: "CountryInfo", name: "CountryInfoService_ListOfCountryNamesGroupedByContinentResponse") {
  ListOfCountryNamesGroupedByContinentResult: CountryInfoService_ArrayOftCountryCodeAndNameGroupedByContinent! @source(subgraph: "CountryInfo", name: "ListOfCountryNamesGroupedByContinentResult", type: "CountryInfoService_ArrayOftCountryCodeAndNameGroupedByContinent!")
}

type CountryInfoService_ArrayOftCountryCodeAndNameGroupedByContinent @source(subgraph: "CountryInfo", name: "CountryInfoService_ArrayOftCountryCodeAndNameGroupedByContinent") {
  tCountryCodeAndNameGroupedByContinent: [CountryInfoService_tCountryCodeAndNameGroupedByContinent]! @source(subgraph: "CountryInfo", name: "tCountryCodeAndNameGroupedByContinent", type: "[CountryInfoService_tCountryCodeAndNameGroupedByContinent]!")
}

type CountryInfoService_tCountryCodeAndNameGroupedByContinent @source(subgraph: "CountryInfo", name: "CountryInfoService_tCountryCodeAndNameGroupedByContinent") {
  Continent: CountryInfoService_tContinent! @source(subgraph: "CountryInfo", name: "Continent", type: "CountryInfoService_tContinent!")
  CountryCodeAndNames: CountryInfoService_ArrayOftCountryCodeAndName! @source(subgraph: "CountryInfo", name: "CountryCodeAndNames", type: "CountryInfoService_ArrayOftCountryCodeAndName!")
}

type CountryInfoService_CountryNameResponse @source(subgraph: "CountryInfo", name: "CountryInfoService_CountryNameResponse") {
  CountryNameResult: String! @source(subgraph: "CountryInfo", name: "CountryNameResult", type: "String!")
}

input CountryInfoService_CountryName_Input @source(subgraph: "CountryInfo", name: "CountryInfoService_CountryName_Input") {
  sCountryISOCode: String @source(subgraph: "CountryInfo", name: "sCountryISOCode", type: "String")
}

type CountryInfoService_CountryISOCodeResponse @source(subgraph: "CountryInfo", name: "CountryInfoService_CountryISOCodeResponse") {
  CountryISOCodeResult: String! @source(subgraph: "CountryInfo", name: "CountryISOCodeResult", type: "String!")
}

input CountryInfoService_CountryISOCode_Input @source(subgraph: "CountryInfo", name: "CountryInfoService_CountryISOCode_Input") {
  sCountryName: String @source(subgraph: "CountryInfo", name: "sCountryName", type: "String")
}

type CountryInfoService_CountryCurrencyResponse @source(subgraph: "CountryInfo", name: "CountryInfoService_CountryCurrencyResponse") {
  CountryCurrencyResult: CountryInfoService_tCurrency! @source(subgraph: "CountryInfo", name: "CountryCurrencyResult", type: "CountryInfoService_tCurrency!")
}

input CountryInfoService_CountryCurrency_Input @source(subgraph: "CountryInfo", name: "CountryInfoService_CountryCurrency_Input") {
  sCountryISOCode: String @source(subgraph: "CountryInfo", name: "sCountryISOCode", type: "String")
}

type CountryInfoService_CountryFlagResponse @source(subgraph: "CountryInfo", name: "CountryInfoService_CountryFlagResponse") {
  CountryFlagResult: String! @source(subgraph: "CountryInfo", name: "CountryFlagResult", type: "String!")
}

input CountryInfoService_CountryFlag_Input @source(subgraph: "CountryInfo", name: "CountryInfoService_CountryFlag_Input") {
  sCountryISOCode: String @source(subgraph: "CountryInfo", name: "sCountryISOCode", type: "String")
}

type CountryInfoService_CountryIntPhoneCodeResponse @source(subgraph: "CountryInfo", name: "CountryInfoService_CountryIntPhoneCodeResponse") {
  CountryIntPhoneCodeResult: String! @source(subgraph: "CountryInfo", name: "CountryIntPhoneCodeResult", type: "String!")
}

input CountryInfoService_CountryIntPhoneCode_Input @source(subgraph: "CountryInfo", name: "CountryInfoService_CountryIntPhoneCode_Input") {
  sCountryISOCode: String @source(subgraph: "CountryInfo", name: "sCountryISOCode", type: "String")
}

type CountryInfoService_CountriesUsingCurrencyResponse @source(subgraph: "CountryInfo", name: "CountryInfoService_CountriesUsingCurrencyResponse") {
  CountriesUsingCurrencyResult: CountryInfoService_ArrayOftCountryCodeAndName! @source(subgraph: "CountryInfo", name: "CountriesUsingCurrencyResult", type: "CountryInfoService_ArrayOftCountryCodeAndName!")
}

input CountryInfoService_CountriesUsingCurrency_Input @source(subgraph: "CountryInfo", name: "CountryInfoService_CountriesUsingCurrency_Input") {
  sISOCurrencyCode: String @source(subgraph: "CountryInfo", name: "sISOCurrencyCode", type: "String")
}

type CountryInfoService_ListOfLanguagesByNameResponse @source(subgraph: "CountryInfo", name: "CountryInfoService_ListOfLanguagesByNameResponse") {
  ListOfLanguagesByNameResult: CountryInfoService_ArrayOftLanguage! @source(subgraph: "CountryInfo", name: "ListOfLanguagesByNameResult", type: "CountryInfoService_ArrayOftLanguage!")
}

type CountryInfoService_ArrayOftLanguage @source(subgraph: "CountryInfo", name: "CountryInfoService_ArrayOftLanguage") {
  tLanguage: [CountryInfoService_tLanguage]! @source(subgraph: "CountryInfo", name: "tLanguage", type: "[CountryInfoService_tLanguage]!")
}

type CountryInfoService_tLanguage @source(subgraph: "CountryInfo", name: "CountryInfoService_tLanguage") {
  sISOCode: String! @source(subgraph: "CountryInfo", name: "sISOCode", type: "String!")
  sName: String! @source(subgraph: "CountryInfo", name: "sName", type: "String!")
}

type CountryInfoService_ListOfLanguagesByCodeResponse @source(subgraph: "CountryInfo", name: "CountryInfoService_ListOfLanguagesByCodeResponse") {
  ListOfLanguagesByCodeResult: CountryInfoService_ArrayOftLanguage! @source(subgraph: "CountryInfo", name: "ListOfLanguagesByCodeResult", type: "CountryInfoService_ArrayOftLanguage!")
}

type Mutation {
  CountryInfoService_CountryInfoService_CountryInfoServiceSoap_CurrencyName(CurrencyName: CountryInfoService_CurrencyName_Input = {}): CountryInfoService_CurrencyNameResponse @soap(elementName: "CurrencyNameResponse", bindingNamespace: "http://www.oorsprong.org/websamples.countryinfo", endpoint: "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso", subgraph: "CountryInfo") @resolver(subgraph: "CountryInfo", operation: "mutation mutationCountryInfoService_CountryInfoService_CountryInfoServiceSoap_CurrencyName($CurrencyName: CountryInfoService_CurrencyName_Input = [object Object]) { CountryInfoService_CountryInfoService_CountryInfoServiceSoap_CurrencyName(CurrencyName: $CurrencyName) }") @source(subgraph: "CountryInfo", name: "CountryInfoService_CountryInfoService_CountryInfoServiceSoap_CurrencyName", type: "CountryInfoService_CurrencyNameResponse")
  CountryInfoService_CountryInfoService_CountryInfoServiceSoap_CapitalCity(CapitalCity: CountryInfoService_CapitalCity_Input = {}): CountryInfoService_CapitalCityResponse @soap(elementName: "CapitalCityResponse", bindingNamespace: "http://www.oorsprong.org/websamples.countryinfo", endpoint: "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso", subgraph: "CountryInfo") @resolver(subgraph: "CountryInfo", operation: "mutation mutationCountryInfoService_CountryInfoService_CountryInfoServiceSoap_CapitalCity($CapitalCity: CountryInfoService_CapitalCity_Input = [object Object]) { CountryInfoService_CountryInfoService_CountryInfoServiceSoap_CapitalCity(CapitalCity: $CapitalCity) }") @source(subgraph: "CountryInfo", name: "CountryInfoService_CountryInfoService_CountryInfoServiceSoap_CapitalCity", type: "CountryInfoService_CapitalCityResponse")
  CountryInfoService_CountryInfoService_CountryInfoServiceSoap_FullCountryInfo(FullCountryInfo: CountryInfoService_FullCountryInfo_Input = {}): CountryInfoService_FullCountryInfoResponse @soap(elementName: "FullCountryInfoResponse", bindingNamespace: "http://www.oorsprong.org/websamples.countryinfo", endpoint: "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso", subgraph: "CountryInfo") @resolver(subgraph: "CountryInfo", operation: "mutation mutationCountryInfoService_CountryInfoService_CountryInfoServiceSoap_FullCountryInfo($FullCountryInfo: CountryInfoService_FullCountryInfo_Input = [object Object]) { CountryInfoService_CountryInfoService_CountryInfoServiceSoap_FullCountryInfo(FullCountryInfo: $FullCountryInfo) }") @source(subgraph: "CountryInfo", name: "CountryInfoService_CountryInfoService_CountryInfoServiceSoap_FullCountryInfo", type: "CountryInfoService_FullCountryInfoResponse")
  CountryInfoService_CountryInfoService_CountryInfoServiceSoap_FullCountryInfoAllCountries(FullCountryInfoAllCountries: JSON = ""): CountryInfoService_FullCountryInfoAllCountriesResponse @soap(elementName: "FullCountryInfoAllCountriesResponse", bindingNamespace: "http://www.oorsprong.org/websamples.countryinfo", endpoint: "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso", subgraph: "CountryInfo") @resolver(subgraph: "CountryInfo", operation: "mutation mutationCountryInfoService_CountryInfoService_CountryInfoServiceSoap_FullCountryInfoAllCountries($FullCountryInfoAllCountries: JSON) { CountryInfoService_CountryInfoService_CountryInfoServiceSoap_FullCountryInfoAllCountries(FullCountryInfoAllCountries: $FullCountryInfoAllCountries) }") @source(subgraph: "CountryInfo", name: "CountryInfoService_CountryInfoService_CountryInfoServiceSoap_FullCountryInfoAllCountries", type: "CountryInfoService_FullCountryInfoAllCountriesResponse")
  CountryInfoService_CountryInfoService_CountryInfoServiceSoap_LanguageName(LanguageName: CountryInfoService_LanguageName_Input = {}): CountryInfoService_LanguageNameResponse @soap(elementName: "LanguageNameResponse", bindingNamespace: "http://www.oorsprong.org/websamples.countryinfo", endpoint: "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso", subgraph: "CountryInfo") @resolver(subgraph: "CountryInfo", operation: "mutation mutationCountryInfoService_CountryInfoService_CountryInfoServiceSoap_LanguageName($LanguageName: CountryInfoService_LanguageName_Input = [object Object]) { CountryInfoService_CountryInfoService_CountryInfoServiceSoap_LanguageName(LanguageName: $LanguageName) }") @source(subgraph: "CountryInfo", name: "CountryInfoService_CountryInfoService_CountryInfoServiceSoap_LanguageName", type: "CountryInfoService_LanguageNameResponse")
  CountryInfoService_CountryInfoService_CountryInfoServiceSoap_LanguageISOCode(LanguageISOCode: CountryInfoService_LanguageISOCode_Input = {}): CountryInfoService_LanguageISOCodeResponse @soap(elementName: "LanguageISOCodeResponse", bindingNamespace: "http://www.oorsprong.org/websamples.countryinfo", endpoint: "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso", subgraph: "CountryInfo") @resolver(subgraph: "CountryInfo", operation: "mutation mutationCountryInfoService_CountryInfoService_CountryInfoServiceSoap_LanguageISOCode($LanguageISOCode: CountryInfoService_LanguageISOCode_Input = [object Object]) { CountryInfoService_CountryInfoService_CountryInfoServiceSoap_LanguageISOCode(LanguageISOCode: $LanguageISOCode) }") @source(subgraph: "CountryInfo", name: "CountryInfoService_CountryInfoService_CountryInfoServiceSoap_LanguageISOCode", type: "CountryInfoService_LanguageISOCodeResponse")
  CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_CurrencyName(CurrencyName: CountryInfoService_CurrencyName_Input = {}): CountryInfoService_CurrencyNameResponse @soap(elementName: "CurrencyNameResponse", bindingNamespace: "http://www.oorsprong.org/websamples.countryinfo", endpoint: "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso", subgraph: "CountryInfo") @resolver(subgraph: "CountryInfo", operation: "mutation mutationCountryInfoService_CountryInfoService_CountryInfoServiceSoap12_CurrencyName($CurrencyName: CountryInfoService_CurrencyName_Input = [object Object]) { CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_CurrencyName(CurrencyName: $CurrencyName) }") @source(subgraph: "CountryInfo", name: "CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_CurrencyName", type: "CountryInfoService_CurrencyNameResponse")
  CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_CapitalCity(CapitalCity: CountryInfoService_CapitalCity_Input = {}): CountryInfoService_CapitalCityResponse @soap(elementName: "CapitalCityResponse", bindingNamespace: "http://www.oorsprong.org/websamples.countryinfo", endpoint: "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso", subgraph: "CountryInfo") @resolver(subgraph: "CountryInfo", operation: "mutation mutationCountryInfoService_CountryInfoService_CountryInfoServiceSoap12_CapitalCity($CapitalCity: CountryInfoService_CapitalCity_Input = [object Object]) { CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_CapitalCity(CapitalCity: $CapitalCity) }") @source(subgraph: "CountryInfo", name: "CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_CapitalCity", type: "CountryInfoService_CapitalCityResponse")
  CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_FullCountryInfo(FullCountryInfo: CountryInfoService_FullCountryInfo_Input = {}): CountryInfoService_FullCountryInfoResponse @soap(elementName: "FullCountryInfoResponse", bindingNamespace: "http://www.oorsprong.org/websamples.countryinfo", endpoint: "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso", subgraph: "CountryInfo") @resolver(subgraph: "CountryInfo", operation: "mutation mutationCountryInfoService_CountryInfoService_CountryInfoServiceSoap12_FullCountryInfo($FullCountryInfo: CountryInfoService_FullCountryInfo_Input = [object Object]) { CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_FullCountryInfo(FullCountryInfo: $FullCountryInfo) }") @source(subgraph: "CountryInfo", name: "CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_FullCountryInfo", type: "CountryInfoService_FullCountryInfoResponse")
  CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_FullCountryInfoAllCountries(FullCountryInfoAllCountries: JSON = ""): CountryInfoService_FullCountryInfoAllCountriesResponse @soap(elementName: "FullCountryInfoAllCountriesResponse", bindingNamespace: "http://www.oorsprong.org/websamples.countryinfo", endpoint: "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso", subgraph: "CountryInfo") @resolver(subgraph: "CountryInfo", operation: "mutation mutationCountryInfoService_CountryInfoService_CountryInfoServiceSoap12_FullCountryInfoAllCountries($FullCountryInfoAllCountries: JSON) { CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_FullCountryInfoAllCountries(FullCountryInfoAllCountries: $FullCountryInfoAllCountries) }") @source(subgraph: "CountryInfo", name: "CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_FullCountryInfoAllCountries", type: "CountryInfoService_FullCountryInfoAllCountriesResponse")
  CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_LanguageName(LanguageName: CountryInfoService_LanguageName_Input = {}): CountryInfoService_LanguageNameResponse @soap(elementName: "LanguageNameResponse", bindingNamespace: "http://www.oorsprong.org/websamples.countryinfo", endpoint: "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso", subgraph: "CountryInfo") @resolver(subgraph: "CountryInfo", operation: "mutation mutationCountryInfoService_CountryInfoService_CountryInfoServiceSoap12_LanguageName($LanguageName: CountryInfoService_LanguageName_Input = [object Object]) { CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_LanguageName(LanguageName: $LanguageName) }") @source(subgraph: "CountryInfo", name: "CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_LanguageName", type: "CountryInfoService_LanguageNameResponse")
  CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_LanguageISOCode(LanguageISOCode: CountryInfoService_LanguageISOCode_Input = {}): CountryInfoService_LanguageISOCodeResponse @soap(elementName: "LanguageISOCodeResponse", bindingNamespace: "http://www.oorsprong.org/websamples.countryinfo", endpoint: "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso", subgraph: "CountryInfo") @resolver(subgraph: "CountryInfo", operation: "mutation mutationCountryInfoService_CountryInfoService_CountryInfoServiceSoap12_LanguageISOCode($LanguageISOCode: CountryInfoService_LanguageISOCode_Input = [object Object]) { CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_LanguageISOCode(LanguageISOCode: $LanguageISOCode) }") @source(subgraph: "CountryInfo", name: "CountryInfoService_CountryInfoService_CountryInfoServiceSoap12_LanguageISOCode", type: "CountryInfoService_LanguageISOCodeResponse")
}

type CountryInfoService_CurrencyNameResponse @source(subgraph: "CountryInfo", name: "CountryInfoService_CurrencyNameResponse") {
  CurrencyNameResult: String! @source(subgraph: "CountryInfo", name: "CurrencyNameResult", type: "String!")
}

input CountryInfoService_CurrencyName_Input @source(subgraph: "CountryInfo", name: "CountryInfoService_CurrencyName_Input") {
  sCurrencyISOCode: String @source(subgraph: "CountryInfo", name: "sCurrencyISOCode", type: "String")
}

type CountryInfoService_CapitalCityResponse @source(subgraph: "CountryInfo", name: "CountryInfoService_CapitalCityResponse") {
  CapitalCityResult: String! @source(subgraph: "CountryInfo", name: "CapitalCityResult", type: "String!")
}

input CountryInfoService_CapitalCity_Input @source(subgraph: "CountryInfo", name: "CountryInfoService_CapitalCity_Input") {
  sCountryISOCode: String @source(subgraph: "CountryInfo", name: "sCountryISOCode", type: "String")
}

type CountryInfoService_FullCountryInfoResponse @source(subgraph: "CountryInfo", name: "CountryInfoService_FullCountryInfoResponse") {
  FullCountryInfoResult: CountryInfoService_tCountryInfo! @source(subgraph: "CountryInfo", name: "FullCountryInfoResult", type: "CountryInfoService_tCountryInfo!")
}

type CountryInfoService_tCountryInfo @source(subgraph: "CountryInfo", name: "CountryInfoService_tCountryInfo") {
  sISOCode: String! @source(subgraph: "CountryInfo", name: "sISOCode", type: "String!")
  sName: String! @source(subgraph: "CountryInfo", name: "sName", type: "String!")
  sCapitalCity: String! @source(subgraph: "CountryInfo", name: "sCapitalCity", type: "String!")
  sPhoneCode: String! @source(subgraph: "CountryInfo", name: "sPhoneCode", type: "String!")
  sContinentCode: String! @source(subgraph: "CountryInfo", name: "sContinentCode", type: "String!")
  sCurrencyISOCode: String! @source(subgraph: "CountryInfo", name: "sCurrencyISOCode", type: "String!")
  sCountryFlag: String! @source(subgraph: "CountryInfo", name: "sCountryFlag", type: "String!")
  Languages: CountryInfoService_ArrayOftLanguage! @source(subgraph: "CountryInfo", name: "Languages", type: "CountryInfoService_ArrayOftLanguage!")
}

input CountryInfoService_FullCountryInfo_Input @source(subgraph: "CountryInfo", name: "CountryInfoService_FullCountryInfo_Input") {
  sCountryISOCode: String @source(subgraph: "CountryInfo", name: "sCountryISOCode", type: "String")
}

type CountryInfoService_FullCountryInfoAllCountriesResponse @source(subgraph: "CountryInfo", name: "CountryInfoService_FullCountryInfoAllCountriesResponse") {
  FullCountryInfoAllCountriesResult: CountryInfoService_ArrayOftCountryInfo! @source(subgraph: "CountryInfo", name: "FullCountryInfoAllCountriesResult", type: "CountryInfoService_ArrayOftCountryInfo!")
}

type CountryInfoService_ArrayOftCountryInfo @source(subgraph: "CountryInfo", name: "CountryInfoService_ArrayOftCountryInfo") {
  tCountryInfo: [CountryInfoService_tCountryInfo]! @source(subgraph: "CountryInfo", name: "tCountryInfo", type: "[CountryInfoService_tCountryInfo]!")
}

type CountryInfoService_LanguageNameResponse @source(subgraph: "CountryInfo", name: "CountryInfoService_LanguageNameResponse") {
  LanguageNameResult: String! @source(subgraph: "CountryInfo", name: "LanguageNameResult", type: "String!")
}

input CountryInfoService_LanguageName_Input @source(subgraph: "CountryInfo", name: "CountryInfoService_LanguageName_Input") {
  sISOCode: String @source(subgraph: "CountryInfo", name: "sISOCode", type: "String")
}

type CountryInfoService_LanguageISOCodeResponse @source(subgraph: "CountryInfo", name: "CountryInfoService_LanguageISOCodeResponse") {
  LanguageISOCodeResult: String! @source(subgraph: "CountryInfo", name: "LanguageISOCodeResult", type: "String!")
}

input CountryInfoService_LanguageISOCode_Input @source(subgraph: "CountryInfo", name: "CountryInfoService_LanguageISOCode_Input") {
  sLanguageName: String @source(subgraph: "CountryInfo", name: "sLanguageName", type: "String")
}"
`;
