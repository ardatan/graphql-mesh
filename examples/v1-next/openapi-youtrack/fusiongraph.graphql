schema
  @transport(
    subgraph: "YouTrack"
    kind: "rest"
    location: "{env.YOUTRACK_SERVICE_URL}/api"
    headers: "{\"Authorization\":\"Bearer {env.YOUTRACK_TOKEN}\"}"
  ) {
  query: Query
  mutation: Mutation
}

directive @discriminator(subgraph: String, field: String, mapping: ObjMap) on INTERFACE | UNION

directive @resolveRootField(
  subgraph: String
  field: String
) on FIELD_DEFINITION | ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

directive @enum(subgraph: String, value: String) on ENUM_VALUE

directive @httpOperation(
  subgraph: String
  path: String
  operationSpecificHeaders: ObjMap
  httpMethod: HTTPMethod
  isBinary: Boolean
  requestBaseBody: ObjMap
  queryParamArgMap: ObjMap
  queryStringOptionsByParam: ObjMap
  jsonApiFields: Boolean
) on FIELD_DEFINITION

directive @transport(
  subgraph: String
  kind: String
  location: String
  headers: ObjMap
  queryStringOptions: ObjMap
  queryParams: ObjMap
) on OBJECT

"Represents unlimited visibility. When access to an entity is not restricted, the visibility attribute of this entity has the type `UnlimitedVisibility`. Entities of this type do not have any attributes."
type UnlimitedVisibility implements Visibility
  @source(subgraph: "YouTrack", name: "UnlimitedVisibility") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents visibility settings of an entity, for example, an issue or a comment."
interface Visibility
  @discriminator(
    subgraph: "YouTrack"
    field: "$type"
    mapping: "\"{\\\"Visibility\\\":\\\"Visibility\\\",\\\"UnlimitedVisibility\\\":\\\"UnlimitedVisibility\\\",\\\"LimitedVisibility\\\":\\\"LimitedVisibility\\\"}\""
  )
  @source(subgraph: "YouTrack", name: "Visibility") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

type Project implements IssueFolder @source(subgraph: "YouTrack", name: "Project") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  archived: Boolean @source(subgraph: "YouTrack", name: "archived", type: "Boolean")
  createdBy: User @source(subgraph: "YouTrack", name: "createdBy", type: "User")
  customFields: JSON @source(subgraph: "YouTrack", name: "customFields", type: "JSON")
  description: String @source(subgraph: "YouTrack", name: "description", type: "String")
  fromEmail: String @source(subgraph: "YouTrack", name: "fromEmail", type: "String")
  iconUrl: String @source(subgraph: "YouTrack", name: "iconUrl", type: "String")
  issues: [Issue] @source(subgraph: "YouTrack", name: "issues", type: "[Issue]")
  leader: User @source(subgraph: "YouTrack", name: "leader", type: "User")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  replyToEmail: String @source(subgraph: "YouTrack", name: "replyToEmail", type: "String")
  shortName: String @source(subgraph: "YouTrack", name: "shortName", type: "String")
  startingNumber: BigInt @source(subgraph: "YouTrack", name: "startingNumber", type: "BigInt")
  team: UserGroup @source(subgraph: "YouTrack", name: "team", type: "UserGroup")
  template: Boolean @source(subgraph: "YouTrack", name: "template", type: "Boolean")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents an issue folder, such as a project, a saved search, or a tag."
interface IssueFolder
  @discriminator(
    subgraph: "YouTrack"
    field: "$type"
    mapping: "\"{\\\"IssueFolder\\\":\\\"IssueFolder\\\",\\\"WatchFolder\\\":\\\"WatchFolder\\\",\\\"IssueTag\\\":\\\"IssueTag\\\",\\\"Tag\\\":\\\"Tag\\\",\\\"SavedQuery\\\":\\\"SavedQuery\\\",\\\"Project\\\":\\\"Project\\\"}\""
  )
  @source(subgraph: "YouTrack", name: "IssueFolder") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

interface User
  @discriminator(
    subgraph: "YouTrack"
    field: "$type"
    mapping: "\"{\\\"User\\\":\\\"User\\\",\\\"VcsUnresolvedUser\\\":\\\"VcsUnresolvedUser\\\",\\\"Me\\\":\\\"Me\\\"}\""
  )
  @source(subgraph: "YouTrack", name: "User") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  login: String @source(subgraph: "YouTrack", name: "login", type: "String")
  fullName: String @source(subgraph: "YouTrack", name: "fullName", type: "String")
  email: String @source(subgraph: "YouTrack", name: "email", type: "String")
  ringId: String @source(subgraph: "YouTrack", name: "ringId", type: "String")
  guest: Boolean @source(subgraph: "YouTrack", name: "guest", type: "Boolean")
  online: Boolean @source(subgraph: "YouTrack", name: "online", type: "Boolean")
  banned: Boolean @source(subgraph: "YouTrack", name: "banned", type: "Boolean")
  tags: [Tag] @source(subgraph: "YouTrack", name: "tags", type: "[Tag]")
  savedQueries: [SavedQuery]
    @source(subgraph: "YouTrack", name: "savedQueries", type: "[SavedQuery]")
  avatarUrl: String @source(subgraph: "YouTrack", name: "avatarUrl", type: "String")
  profiles: UserProfiles @source(subgraph: "YouTrack", name: "profiles", type: "UserProfiles")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

type Tag
  @source(subgraph: "YouTrack", name: "Tag")
  @resolver(
    subgraph: "YouTrack"
    operation: "query TagsByIds($Tag_id: String) { tags(fields: $Tag_id) }"
    kind: "BATCH"
  )
  @resolver(
    subgraph: "YouTrack"
    operation: "query TagsByNames($Tag_name: String) { tags(fields: $Tag_name) }"
    kind: "BATCH"
  )
  @resolver(
    subgraph: "YouTrack"
    operation: "query TagsByDollarTypes($Tag__DOLLAR_type: String) { tags(fields: $Tag__DOLLAR_type) }"
    kind: "BATCH"
  )
  @resolver(
    subgraph: "YouTrack"
    operation: "query TagsByIds($Tag_id: String!) { tags_by_id(id: $Tag_id) }"
    kind: "BATCH"
  )
  @variable(subgraph: "YouTrack", name: "Tag_id", select: "id")
  @variable(subgraph: "YouTrack", name: "Tag_name", select: "name")
  @variable(subgraph: "YouTrack", name: "Tag__DOLLAR_type", select: "_DOLLAR_type") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
  owner: User @source(subgraph: "YouTrack", name: "owner", type: "User")
  visibleFor: UserGroup @source(subgraph: "YouTrack", name: "visibleFor", type: "UserGroup")
  updateableBy: UserGroup @source(subgraph: "YouTrack", name: "updateableBy", type: "UserGroup")
  readSharingSettings: WatchFolderSharingSettings
    @source(subgraph: "YouTrack", name: "readSharingSettings", type: "WatchFolderSharingSettings")
  updateSharingSettings: WatchFolderSharingSettings
    @source(subgraph: "YouTrack", name: "updateSharingSettings", type: "WatchFolderSharingSettings")
  issues: [Issue] @source(subgraph: "YouTrack", name: "issues", type: "[Issue]")
  color: FieldStyle @source(subgraph: "YouTrack", name: "color", type: "FieldStyle")
  untagOnResolve: Boolean @source(subgraph: "YouTrack", name: "untagOnResolve", type: "Boolean")
  tagSharingSettings: TagSharingSettings
    @source(subgraph: "YouTrack", name: "tagSharingSettings", type: "TagSharingSettings")
}

type UserGroup
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "UserGroup") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  ringId: String @source(subgraph: "YouTrack", name: "ringId", type: "String")
  usersCount: BigInt @source(subgraph: "YouTrack", name: "usersCount", type: "BigInt")
  icon: String @source(subgraph: "YouTrack", name: "icon", type: "String")
  allUsersGroup: Boolean @source(subgraph: "YouTrack", name: "allUsersGroup", type: "Boolean")
  teamForProject: Project @source(subgraph: "YouTrack", name: "teamForProject", type: "Project")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"The `BigInt` scalar type represents non-fractional signed whole numeric values."
scalar BigInt
  @source(subgraph: "YouTrack", name: "BigInt")
  @source(subgraph: "YouTrack", name: "BigInt")

"Stores users and groups that have access to a tag or a saved search."
type WatchFolderSharingSettings
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "WatchFolderSharingSettings") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  permittedGroups: [UserGroup]
    @source(subgraph: "YouTrack", name: "permittedGroups", type: "[UserGroup]")
  permittedUsers: [User] @source(subgraph: "YouTrack", name: "permittedUsers", type: "[User]")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

type Issue
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "Issue")
  @resolver(
    subgraph: "YouTrack"
    operation: "query IssuesByIds($Issue_id: String) { issues(query: $Issue_id) }"
    kind: "BATCH"
  )
  @resolver(
    subgraph: "YouTrack"
    operation: "query IssuesByCommentsCounts($Issue_commentsCount: Int) { issues(_DOLLAR_skip: $Issue_commentsCount) }"
    kind: "BATCH"
  )
  @resolver(
    subgraph: "YouTrack"
    operation: "query IssuesByDescriptions($Issue_description: String) { issues(query: $Issue_description) }"
    kind: "BATCH"
  )
  @resolver(
    subgraph: "YouTrack"
    operation: "query IssuesByIdReadables($Issue_idReadable: String) { issues(query: $Issue_idReadable) }"
    kind: "BATCH"
  )
  @resolver(
    subgraph: "YouTrack"
    operation: "query IssuesBySummarys($Issue_summary: String) { issues(query: $Issue_summary) }"
    kind: "BATCH"
  )
  @resolver(
    subgraph: "YouTrack"
    operation: "query IssuesByVotess($Issue_votes: Int) { issues(_DOLLAR_skip: $Issue_votes) }"
    kind: "BATCH"
  )
  @resolver(
    subgraph: "YouTrack"
    operation: "query IssuesByWikifiedDescriptions($Issue_wikifiedDescription: String) { issues(query: $Issue_wikifiedDescription) }"
    kind: "BATCH"
  )
  @resolver(
    subgraph: "YouTrack"
    operation: "query IssuesByDollarTypes($Issue__DOLLAR_type: String) { issues(query: $Issue__DOLLAR_type) }"
    kind: "BATCH"
  )
  @resolver(
    subgraph: "YouTrack"
    operation: "query IssuesByIds($Issue_id: String!) { issues_by_id(id: $Issue_id) }"
    kind: "BATCH"
  )
  @variable(subgraph: "YouTrack", name: "Issue_id", select: "id")
  @variable(subgraph: "YouTrack", name: "Issue_commentsCount", select: "commentsCount")
  @variable(subgraph: "YouTrack", name: "Issue_description", select: "description")
  @variable(subgraph: "YouTrack", name: "Issue_idReadable", select: "idReadable")
  @variable(subgraph: "YouTrack", name: "Issue_summary", select: "summary")
  @variable(subgraph: "YouTrack", name: "Issue_votes", select: "votes")
  @variable(subgraph: "YouTrack", name: "Issue_wikifiedDescription", select: "wikifiedDescription")
  @variable(subgraph: "YouTrack", name: "Issue__DOLLAR_type", select: "_DOLLAR_type") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  attachments: [IssueAttachment]
    @source(subgraph: "YouTrack", name: "attachments", type: "[IssueAttachment]")
  comments: [IssueComment] @source(subgraph: "YouTrack", name: "comments", type: "[IssueComment]")
  commentsCount: Int @source(subgraph: "YouTrack", name: "commentsCount", type: "Int")
  created: BigInt @source(subgraph: "YouTrack", name: "created", type: "BigInt")
  customFields: [IssueCustomField]
    @source(subgraph: "YouTrack", name: "customFields", type: "[IssueCustomField]")
  description: String @source(subgraph: "YouTrack", name: "description", type: "String")
  draftOwner: User @source(subgraph: "YouTrack", name: "draftOwner", type: "User")
  externalIssue: ExternalIssue
    @source(subgraph: "YouTrack", name: "externalIssue", type: "ExternalIssue")
  idReadable: String @source(subgraph: "YouTrack", name: "idReadable", type: "String")
  isDraft: Boolean @source(subgraph: "YouTrack", name: "isDraft", type: "Boolean")
  links: [IssueLink] @source(subgraph: "YouTrack", name: "links", type: "[IssueLink]")
  numberInProject: BigInt @source(subgraph: "YouTrack", name: "numberInProject", type: "BigInt")
  parent: IssueLink @source(subgraph: "YouTrack", name: "parent", type: "IssueLink")
  project: Project @source(subgraph: "YouTrack", name: "project", type: "Project")
  reporter: User @source(subgraph: "YouTrack", name: "reporter", type: "User")
  resolved: BigInt @source(subgraph: "YouTrack", name: "resolved", type: "BigInt")
  subtasks: IssueLink @source(subgraph: "YouTrack", name: "subtasks", type: "IssueLink")
  summary: String @source(subgraph: "YouTrack", name: "summary", type: "String")
  tags: [Tag] @source(subgraph: "YouTrack", name: "tags", type: "[Tag]")
  updated: BigInt @source(subgraph: "YouTrack", name: "updated", type: "BigInt")
  updater: User @source(subgraph: "YouTrack", name: "updater", type: "User")
  visibility: Visibility @source(subgraph: "YouTrack", name: "visibility", type: "Visibility")
  voters: IssueVoters @source(subgraph: "YouTrack", name: "voters", type: "IssueVoters")
  votes: Int @source(subgraph: "YouTrack", name: "votes", type: "Int")
  watchers: IssueWatchers @source(subgraph: "YouTrack", name: "watchers", type: "IssueWatchers")
  wikifiedDescription: String
    @source(subgraph: "YouTrack", name: "wikifiedDescription", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

type IssueAttachment
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "IssueAttachment") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  author: User @source(subgraph: "YouTrack", name: "author", type: "User")
  created: BigInt @source(subgraph: "YouTrack", name: "created", type: "BigInt")
  updated: BigInt @source(subgraph: "YouTrack", name: "updated", type: "BigInt")
  size: BigInt @source(subgraph: "YouTrack", name: "size", type: "BigInt")
  extension: String @source(subgraph: "YouTrack", name: "extension", type: "String")
  charset: String @source(subgraph: "YouTrack", name: "charset", type: "String")
  mimeType: String @source(subgraph: "YouTrack", name: "mimeType", type: "String")
  metaData: String @source(subgraph: "YouTrack", name: "metaData", type: "String")
  draft: Boolean @source(subgraph: "YouTrack", name: "draft", type: "Boolean")
  removed: Boolean @source(subgraph: "YouTrack", name: "removed", type: "Boolean")
  base64Content: String @source(subgraph: "YouTrack", name: "base64Content", type: "String")
  url: String @source(subgraph: "YouTrack", name: "url", type: "String")
  visibility: Visibility @source(subgraph: "YouTrack", name: "visibility", type: "Visibility")
  issue: Issue @source(subgraph: "YouTrack", name: "issue", type: "Issue")
  comment: IssueComment @source(subgraph: "YouTrack", name: "comment", type: "IssueComment")
  thumbnailURL: String @source(subgraph: "YouTrack", name: "thumbnailURL", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

type IssueComment
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "IssueComment") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  attachments: [IssueAttachment]
    @source(subgraph: "YouTrack", name: "attachments", type: "[IssueAttachment]")
  author: User @source(subgraph: "YouTrack", name: "author", type: "User")
  created: BigInt @source(subgraph: "YouTrack", name: "created", type: "BigInt")
  deleted: Boolean @source(subgraph: "YouTrack", name: "deleted", type: "Boolean")
  issue: Issue @source(subgraph: "YouTrack", name: "issue", type: "Issue")
  reactions: [Reaction] @source(subgraph: "YouTrack", name: "reactions", type: "[Reaction]")
  text: String @source(subgraph: "YouTrack", name: "text", type: "String")
  textPreview: String @source(subgraph: "YouTrack", name: "textPreview", type: "String")
  updated: BigInt @source(subgraph: "YouTrack", name: "updated", type: "BigInt")
  visibility: Visibility @source(subgraph: "YouTrack", name: "visibility", type: "Visibility")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

type Reaction
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "Reaction") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  author: User @source(subgraph: "YouTrack", name: "author", type: "User")
  reaction: String @source(subgraph: "YouTrack", name: "reaction", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

interface IssueCustomField
  @discriminator(
    subgraph: "YouTrack"
    field: "$type"
    mapping: "\"{\\\"IssueCustomField\\\":\\\"IssueCustomField\\\",\\\"PeriodIssueCustomField\\\":\\\"PeriodIssueCustomField\\\",\\\"SimpleIssueCustomField\\\":\\\"SimpleIssueCustomField\\\",\\\"DateIssueCustomField\\\":\\\"DateIssueCustomField\\\",\\\"SingleValueIssueCustomField\\\":\\\"DatabaseSingleValueIssueCustomField\\\",\\\"StateIssueCustomField\\\":\\\"StateIssueCustomField\\\",\\\"SingleBuildIssueCustomField\\\":\\\"SingleBuildIssueCustomField\\\",\\\"SingleUserIssueCustomField\\\":\\\"SingleUserIssueCustomField\\\",\\\"SingleGroupIssueCustomField\\\":\\\"SingleGroupIssueCustomField\\\",\\\"SingleVersionIssueCustomField\\\":\\\"SingleVersionIssueCustomField\\\",\\\"SingleOwnedIssueCustomField\\\":\\\"SingleOwnedIssueCustomField\\\",\\\"SingleEnumIssueCustomField\\\":\\\"SingleEnumIssueCustomField\\\",\\\"MultiValueIssueCustomField\\\":\\\"DatabaseMultiValueIssueCustomField\\\",\\\"MultiBuildIssueCustomField\\\":\\\"MultiBuildIssueCustomField\\\",\\\"MultiGroupIssueCustomField\\\":\\\"MultiGroupIssueCustomField\\\",\\\"MultiVersionIssueCustomField\\\":\\\"MultiVersionIssueCustomField\\\",\\\"MultiOwnedIssueCustomField\\\":\\\"MultiOwnedIssueCustomField\\\",\\\"MultiEnumIssueCustomField\\\":\\\"MultiEnumIssueCustomField\\\",\\\"MultiUserIssueCustomField\\\":\\\"MultiUserIssueCustomField\\\",\\\"StateMachineIssueCustomField\\\":\\\"StateMachineIssueCustomField\\\",\\\"TextIssueCustomField\\\":\\\"TextIssueCustomField\\\"}\""
  )
  @source(subgraph: "YouTrack", name: "IssueCustomField") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  projectCustomField: ProjectCustomField
    @source(subgraph: "YouTrack", name: "projectCustomField", type: "ProjectCustomField")
  value: JSON @source(subgraph: "YouTrack", name: "value", type: "JSON")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

interface ProjectCustomField
  @discriminator(
    subgraph: "YouTrack"
    field: "$type"
    mapping: "\"{\\\"ProjectCustomField\\\":\\\"ProjectCustomField\\\",\\\"GroupProjectCustomField\\\":\\\"GroupProjectCustomField\\\",\\\"BundleProjectCustomField\\\":\\\"BundleProjectCustomField\\\",\\\"UserProjectCustomField\\\":\\\"UserProjectCustomField\\\",\\\"BuildProjectCustomField\\\":\\\"BuildProjectCustomField\\\",\\\"StateProjectCustomField\\\":\\\"StateProjectCustomField\\\",\\\"VersionProjectCustomField\\\":\\\"VersionProjectCustomField\\\",\\\"OwnedProjectCustomField\\\":\\\"OwnedProjectCustomField\\\",\\\"EnumProjectCustomField\\\":\\\"EnumProjectCustomField\\\",\\\"SimpleProjectCustomField\\\":\\\"SimpleProjectCustomField\\\",\\\"PeriodProjectCustomField\\\":\\\"PeriodProjectCustomField\\\",\\\"TextProjectCustomField\\\":\\\"TextProjectCustomField\\\"}\""
  )
  @source(subgraph: "YouTrack", name: "ProjectCustomField") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  field: CustomField @source(subgraph: "YouTrack", name: "field", type: "CustomField")
  project: Project @source(subgraph: "YouTrack", name: "project", type: "Project")
  canBeEmpty: Boolean @source(subgraph: "YouTrack", name: "canBeEmpty", type: "Boolean")
  emptyFieldText: String @source(subgraph: "YouTrack", name: "emptyFieldText", type: "String")
  ordinal: Int @source(subgraph: "YouTrack", name: "ordinal", type: "Int")
  isPublic: Boolean @source(subgraph: "YouTrack", name: "isPublic", type: "Boolean")
  hasRunningJob: Boolean @source(subgraph: "YouTrack", name: "hasRunningJob", type: "Boolean")
  condition: CustomFieldCondition
    @source(subgraph: "YouTrack", name: "condition", type: "CustomFieldCondition")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

type CustomField
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "CustomField") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  localizedName: String @source(subgraph: "YouTrack", name: "localizedName", type: "String")
  fieldType: FieldType @source(subgraph: "YouTrack", name: "fieldType", type: "FieldType")
  isAutoAttached: Boolean @source(subgraph: "YouTrack", name: "isAutoAttached", type: "Boolean")
  isDisplayedInIssueList: Boolean
    @source(subgraph: "YouTrack", name: "isDisplayedInIssueList", type: "Boolean")
  ordinal: Int @source(subgraph: "YouTrack", name: "ordinal", type: "Int")
  aliases: String @source(subgraph: "YouTrack", name: "aliases", type: "String")
  fieldDefaults: CustomFieldDefaults
    @source(subgraph: "YouTrack", name: "fieldDefaults", type: "CustomFieldDefaults")
  hasRunningJob: Boolean @source(subgraph: "YouTrack", name: "hasRunningJob", type: "Boolean")
  isUpdateable: Boolean @source(subgraph: "YouTrack", name: "isUpdateable", type: "Boolean")
  instances: [ProjectCustomField]
    @source(subgraph: "YouTrack", name: "instances", type: "[ProjectCustomField]")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

type FieldType
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "FieldType") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

interface CustomFieldDefaults
  @discriminator(
    subgraph: "YouTrack"
    field: "$type"
    mapping: "\"{\\\"CustomFieldDefaults\\\":\\\"CustomFieldDefaults\\\",\\\"BundleCustomFieldDefaults\\\":\\\"BundleCustomFieldDefaults\\\",\\\"UserCustomFieldDefaults\\\":\\\"UserCustomFieldDefaults\\\",\\\"BuildBundleCustomFieldDefaults\\\":\\\"BuildBundleCustomFieldDefaults\\\",\\\"StateBundleCustomFieldDefaults\\\":\\\"StateBundleCustomFieldDefaults\\\",\\\"VersionBundleCustomFieldDefaults\\\":\\\"VersionBundleCustomFieldDefaults\\\",\\\"EnumBundleCustomFieldDefaults\\\":\\\"EnumBundleCustomFieldDefaults\\\",\\\"OwnedBundleCustomFieldDefaults\\\":\\\"OwnedBundleCustomFieldDefaults\\\"}\""
  )
  @source(subgraph: "YouTrack", name: "CustomFieldDefaults") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  canBeEmpty: Boolean @source(subgraph: "YouTrack", name: "canBeEmpty", type: "Boolean")
  emptyFieldText: String @source(subgraph: "YouTrack", name: "emptyFieldText", type: "String")
  isPublic: Boolean @source(subgraph: "YouTrack", name: "isPublic", type: "Boolean")
  parent: CustomField @source(subgraph: "YouTrack", name: "parent", type: "CustomField")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents the condition for showing a custom field."
interface CustomFieldCondition
  @discriminator(
    subgraph: "YouTrack"
    field: "$type"
    mapping: "\"{\\\"CustomFieldCondition\\\":\\\"CustomFieldCondition\\\",\\\"FieldBasedCondition\\\":\\\"FieldBasedCondition\\\"}\""
  )
  @source(subgraph: "YouTrack", name: "CustomFieldCondition") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  parent: ProjectCustomField
    @source(subgraph: "YouTrack", name: "parent", type: "ProjectCustomField")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf)."
scalar JSON
  @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")
  @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")
  @source(subgraph: "YouTrack", name: "JSON")
  @source(subgraph: "YouTrack", name: "JSON")

"For an issue that was imported from another service, represents the reference to the issue in the external system."
type ExternalIssue
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "ExternalIssue") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  url: String @source(subgraph: "YouTrack", name: "url", type: "String")
  key: String @source(subgraph: "YouTrack", name: "key", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

type IssueLink
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "IssueLink") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  direction: query_activities_items_author_tags_items_allOf_0_allOf_0_discriminatorMapping_SavedQuery_allOf_1_issues_items_links_items_direction
    @source(
      subgraph: "YouTrack"
      name: "direction"
      type: "query_activities_items_author_tags_items_allOf_0_allOf_0_discriminatorMapping_SavedQuery_allOf_1_issues_items_links_items_direction"
    )
  linkType: IssueLinkType @source(subgraph: "YouTrack", name: "linkType", type: "IssueLinkType")
  issues: [Issue] @source(subgraph: "YouTrack", name: "issues", type: "[Issue]")
  trimmedIssues: [Issue] @source(subgraph: "YouTrack", name: "trimmedIssues", type: "[Issue]")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

enum query_activities_items_author_tags_items_allOf_0_allOf_0_discriminatorMapping_SavedQuery_allOf_1_issues_items_links_items_direction
  @source(
    subgraph: "YouTrack"
    name: "query_activities_items_author_tags_items_allOf_0_allOf_0_discriminatorMapping_SavedQuery_allOf_1_issues_items_links_items_direction"
  ) {
  OUTWARD @source(subgraph: "YouTrack", name: "OUTWARD")
  INWARD @source(subgraph: "YouTrack", name: "INWARD")
  BOTH @source(subgraph: "YouTrack", name: "BOTH")
}

type IssueLinkType
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "IssueLinkType")
  @resolver(
    subgraph: "YouTrack"
    operation: "query IssueLinkTypesByIds($IssueLinkType_id: String) { issueLinkTypes(fields: $IssueLinkType_id) }"
    kind: "BATCH"
  )
  @resolver(
    subgraph: "YouTrack"
    operation: "query IssueLinkTypesByNames($IssueLinkType_name: String) { issueLinkTypes(fields: $IssueLinkType_name) }"
    kind: "BATCH"
  )
  @resolver(
    subgraph: "YouTrack"
    operation: "query IssueLinkTypesByLocalizedNames($IssueLinkType_localizedName: String) { issueLinkTypes(fields: $IssueLinkType_localizedName) }"
    kind: "BATCH"
  )
  @resolver(
    subgraph: "YouTrack"
    operation: "query IssueLinkTypesBySourceToTargets($IssueLinkType_sourceToTarget: String) { issueLinkTypes(fields: $IssueLinkType_sourceToTarget) }"
    kind: "BATCH"
  )
  @resolver(
    subgraph: "YouTrack"
    operation: "query IssueLinkTypesByLocalizedSourceToTargets($IssueLinkType_localizedSourceToTarget: String) { issueLinkTypes(fields: $IssueLinkType_localizedSourceToTarget) }"
    kind: "BATCH"
  )
  @resolver(
    subgraph: "YouTrack"
    operation: "query IssueLinkTypesByTargetToSources($IssueLinkType_targetToSource: String) { issueLinkTypes(fields: $IssueLinkType_targetToSource) }"
    kind: "BATCH"
  )
  @resolver(
    subgraph: "YouTrack"
    operation: "query IssueLinkTypesByLocalizedTargetToSources($IssueLinkType_localizedTargetToSource: String) { issueLinkTypes(fields: $IssueLinkType_localizedTargetToSource) }"
    kind: "BATCH"
  )
  @resolver(
    subgraph: "YouTrack"
    operation: "query IssueLinkTypesByDollarTypes($IssueLinkType__DOLLAR_type: String) { issueLinkTypes(fields: $IssueLinkType__DOLLAR_type) }"
    kind: "BATCH"
  )
  @resolver(
    subgraph: "YouTrack"
    operation: "query IssueLinkTypesByIds($IssueLinkType_id: String!) { issueLinkTypes_by_id(id: $IssueLinkType_id) }"
    kind: "BATCH"
  )
  @variable(subgraph: "YouTrack", name: "IssueLinkType_id", select: "id")
  @variable(subgraph: "YouTrack", name: "IssueLinkType_name", select: "name")
  @variable(subgraph: "YouTrack", name: "IssueLinkType_localizedName", select: "localizedName")
  @variable(subgraph: "YouTrack", name: "IssueLinkType_sourceToTarget", select: "sourceToTarget")
  @variable(
    subgraph: "YouTrack"
    name: "IssueLinkType_localizedSourceToTarget"
    select: "localizedSourceToTarget"
  )
  @variable(subgraph: "YouTrack", name: "IssueLinkType_targetToSource", select: "targetToSource")
  @variable(
    subgraph: "YouTrack"
    name: "IssueLinkType_localizedTargetToSource"
    select: "localizedTargetToSource"
  )
  @variable(subgraph: "YouTrack", name: "IssueLinkType__DOLLAR_type", select: "_DOLLAR_type") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  localizedName: String @source(subgraph: "YouTrack", name: "localizedName", type: "String")
  sourceToTarget: String @source(subgraph: "YouTrack", name: "sourceToTarget", type: "String")
  localizedSourceToTarget: String
    @source(subgraph: "YouTrack", name: "localizedSourceToTarget", type: "String")
  targetToSource: String @source(subgraph: "YouTrack", name: "targetToSource", type: "String")
  localizedTargetToSource: String
    @source(subgraph: "YouTrack", name: "localizedTargetToSource", type: "String")
  directed: Boolean @source(subgraph: "YouTrack", name: "directed", type: "Boolean")
  aggregation: Boolean @source(subgraph: "YouTrack", name: "aggregation", type: "Boolean")
  readOnly: Boolean @source(subgraph: "YouTrack", name: "readOnly", type: "Boolean")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents users that have voted for the issue or its duplicates."
type IssueVoters
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "IssueVoters") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  hasVote: Boolean @source(subgraph: "YouTrack", name: "hasVote", type: "Boolean")
  original: [User] @source(subgraph: "YouTrack", name: "original", type: "[User]")
  duplicate: [DuplicateVote]
    @source(subgraph: "YouTrack", name: "duplicate", type: "[DuplicateVote]")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents a vote for duplicates of the issue."
type DuplicateVote
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "DuplicateVote") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  issue: Issue @source(subgraph: "YouTrack", name: "issue", type: "Issue")
  user: User @source(subgraph: "YouTrack", name: "user", type: "User")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents users that are subscribed to notifications about the issue."
type IssueWatchers
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "IssueWatchers") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  hasStar: Boolean @source(subgraph: "YouTrack", name: "hasStar", type: "Boolean")
  issueWatchers: [IssueWatcher]
    @source(subgraph: "YouTrack", name: "issueWatchers", type: "[IssueWatcher]")
  duplicateWatchers: [IssueWatcher]
    @source(subgraph: "YouTrack", name: "duplicateWatchers", type: "[IssueWatcher]")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents a user who subscribed for notifications about an issue."
type IssueWatcher
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "IssueWatcher") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  user: User @source(subgraph: "YouTrack", name: "user", type: "User")
  issue: Issue @source(subgraph: "YouTrack", name: "issue", type: "Issue")
  isStarred: Boolean @source(subgraph: "YouTrack", name: "isStarred", type: "Boolean")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents the style settings of the field in YouTrack."
type FieldStyle
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "FieldStyle") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  background: String @source(subgraph: "YouTrack", name: "background", type: "String")
  foreground: String @source(subgraph: "YouTrack", name: "foreground", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Stores users and groups that have access to a tag."
type TagSharingSettings
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "TagSharingSettings") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  permittedGroups: [UserGroup]
    @source(subgraph: "YouTrack", name: "permittedGroups", type: "[UserGroup]")
  permittedUsers: [User] @source(subgraph: "YouTrack", name: "permittedUsers", type: "[User]")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

type SavedQuery @source(subgraph: "YouTrack", name: "SavedQuery") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  query: String @source(subgraph: "YouTrack", name: "query", type: "String")
  issues: [Issue] @source(subgraph: "YouTrack", name: "issues", type: "[Issue]")
  visibleFor: UserGroup @source(subgraph: "YouTrack", name: "visibleFor", type: "UserGroup")
  updateableBy: UserGroup @source(subgraph: "YouTrack", name: "updateableBy", type: "UserGroup")
  readSharingSettings: WatchFolderSharingSettings
    @source(subgraph: "YouTrack", name: "readSharingSettings", type: "WatchFolderSharingSettings")
  updateSharingSettings: WatchFolderSharingSettings
    @source(subgraph: "YouTrack", name: "updateSharingSettings", type: "WatchFolderSharingSettings")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents a group of settings of a user profile in YouTrack."
type UserProfiles
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "UserProfiles") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  general: GeneralUserProfile
    @source(subgraph: "YouTrack", name: "general", type: "GeneralUserProfile")
  notifications: NotificationsUserProfile
    @source(subgraph: "YouTrack", name: "notifications", type: "NotificationsUserProfile")
  timetracking: TimeTrackingUserProfile
    @source(subgraph: "YouTrack", name: "timetracking", type: "TimeTrackingUserProfile")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

type GeneralUserProfile
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "GeneralUserProfile") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  dateFieldFormat: DateFormatDescriptor
    @source(subgraph: "YouTrack", name: "dateFieldFormat", type: "DateFormatDescriptor")
  timezone: TimeZoneDescriptor
    @source(subgraph: "YouTrack", name: "timezone", type: "TimeZoneDescriptor")
  locale: LocaleDescriptor @source(subgraph: "YouTrack", name: "locale", type: "LocaleDescriptor")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents date format."
type DateFormatDescriptor
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "DateFormatDescriptor") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  presentation: String @source(subgraph: "YouTrack", name: "presentation", type: "String")
  pattern: String @source(subgraph: "YouTrack", name: "pattern", type: "String")
  datePattern: String @source(subgraph: "YouTrack", name: "datePattern", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents a time zone."
type TimeZoneDescriptor
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "TimeZoneDescriptor") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  presentation: String @source(subgraph: "YouTrack", name: "presentation", type: "String")
  offset: Int @source(subgraph: "YouTrack", name: "offset", type: "Int")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents a language locale that is used in UI."
type LocaleDescriptor
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "LocaleDescriptor") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  locale: String @source(subgraph: "YouTrack", name: "locale", type: "String")
  language: String @source(subgraph: "YouTrack", name: "language", type: "String")
  community: Boolean @source(subgraph: "YouTrack", name: "community", type: "Boolean")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

type NotificationsUserProfile
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "NotificationsUserProfile") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  notifyOnOwnChanges: Boolean
    @source(subgraph: "YouTrack", name: "notifyOnOwnChanges", type: "Boolean")
  emailNotificationsEnabled: Boolean
    @source(subgraph: "YouTrack", name: "emailNotificationsEnabled", type: "Boolean")
  mentionNotificationsEnabled: Boolean
    @source(subgraph: "YouTrack", name: "mentionNotificationsEnabled", type: "Boolean")
  duplicateClusterNotificationsEnabled: Boolean
    @source(subgraph: "YouTrack", name: "duplicateClusterNotificationsEnabled", type: "Boolean")
  mailboxIntegrationNotificationsEnabled: Boolean
    @source(subgraph: "YouTrack", name: "mailboxIntegrationNotificationsEnabled", type: "Boolean")
  usePlainTextEmails: Boolean
    @source(subgraph: "YouTrack", name: "usePlainTextEmails", type: "Boolean")
  autoWatchOnComment: Boolean
    @source(subgraph: "YouTrack", name: "autoWatchOnComment", type: "Boolean")
  autoWatchOnCreate: Boolean
    @source(subgraph: "YouTrack", name: "autoWatchOnCreate", type: "Boolean")
  autoWatchOnVote: Boolean @source(subgraph: "YouTrack", name: "autoWatchOnVote", type: "Boolean")
  autoWatchOnUpdate: Boolean
    @source(subgraph: "YouTrack", name: "autoWatchOnUpdate", type: "Boolean")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

type TimeTrackingUserProfile
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "TimeTrackingUserProfile") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  periodFormat: PeriodFieldFormat
    @source(subgraph: "YouTrack", name: "periodFormat", type: "PeriodFieldFormat")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents the format, in which the period values are displayed to the user."
type PeriodFieldFormat
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "PeriodFieldFormat") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents visibility limited to several users and/or groups."
type LimitedVisibility implements Visibility
  @source(subgraph: "YouTrack", name: "LimitedVisibility") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  permittedGroups: [UserGroup]
    @source(subgraph: "YouTrack", name: "permittedGroups", type: "[UserGroup]")
  permittedUsers: [User] @source(subgraph: "YouTrack", name: "permittedUsers", type: "[User]")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents custom field default settings for enumerated fields."
type BundleCustomFieldDefaults implements CustomFieldDefaults
  @source(subgraph: "YouTrack", name: "BundleCustomFieldDefaults") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  canBeEmpty: Boolean @source(subgraph: "YouTrack", name: "canBeEmpty", type: "Boolean")
  emptyFieldText: String @source(subgraph: "YouTrack", name: "emptyFieldText", type: "String")
  isPublic: Boolean @source(subgraph: "YouTrack", name: "isPublic", type: "Boolean")
  parent: CustomField @source(subgraph: "YouTrack", name: "parent", type: "CustomField")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents field value that can be localized."
type LocalizableBundleElement implements BundleElement
  @source(subgraph: "YouTrack", name: "LocalizableBundleElement") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  localizedName: String @source(subgraph: "YouTrack", name: "localizedName", type: "String")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  bundle: Bundle @source(subgraph: "YouTrack", name: "bundle", type: "Bundle")
  description: String @source(subgraph: "YouTrack", name: "description", type: "String")
  archived: Boolean @source(subgraph: "YouTrack", name: "archived", type: "Boolean")
  ordinal: Int @source(subgraph: "YouTrack", name: "ordinal", type: "Int")
  color: FieldStyle @source(subgraph: "YouTrack", name: "color", type: "FieldStyle")
  hasRunningJob: Boolean @source(subgraph: "YouTrack", name: "hasRunningJob", type: "Boolean")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents a field value in YouTrack."
interface BundleElement
  @discriminator(
    subgraph: "YouTrack"
    field: "$type"
    mapping: "\"{\\\"BundleElement\\\":\\\"BundleElement\\\",\\\"LocalizableBundleElement\\\":\\\"LocalizableBundleElement\\\",\\\"StateBundleElement\\\":\\\"StateBundleElement\\\",\\\"EnumBundleElement\\\":\\\"EnumBundleElement\\\",\\\"OwnedBundleElement\\\":\\\"OwnedBundleElement\\\",\\\"VersionBundleElement\\\":\\\"VersionBundleElement\\\",\\\"BuildBundleElement\\\":\\\"BuildBundleElement\\\"}\""
  )
  @source(subgraph: "YouTrack", name: "BundleElement") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  bundle: Bundle @source(subgraph: "YouTrack", name: "bundle", type: "Bundle")
  description: String @source(subgraph: "YouTrack", name: "description", type: "String")
  archived: Boolean @source(subgraph: "YouTrack", name: "archived", type: "Boolean")
  ordinal: Int @source(subgraph: "YouTrack", name: "ordinal", type: "Int")
  color: FieldStyle @source(subgraph: "YouTrack", name: "color", type: "FieldStyle")
  hasRunningJob: Boolean @source(subgraph: "YouTrack", name: "hasRunningJob", type: "Boolean")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

interface Bundle
  @discriminator(
    subgraph: "YouTrack"
    field: "$type"
    mapping: "\"{\\\"Bundle\\\":\\\"Bundle\\\",\\\"BaseBundle\\\":\\\"BaseBundle\\\",\\\"StateBundle\\\":\\\"StateBundle\\\",\\\"EnumBundle\\\":\\\"EnumBundle\\\",\\\"UserBundle\\\":\\\"UserBundle\\\",\\\"OwnedBundle\\\":\\\"OwnedBundle\\\",\\\"VersionBundle\\\":\\\"VersionBundle\\\",\\\"BuildBundle\\\":\\\"BuildBundle\\\"}\""
  )
  @source(subgraph: "YouTrack", name: "Bundle") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  isUpdateable: Boolean @source(subgraph: "YouTrack", name: "isUpdateable", type: "Boolean")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

type OwnedBundleElement implements BundleElement
  @source(subgraph: "YouTrack", name: "OwnedBundleElement") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  owner: User @source(subgraph: "YouTrack", name: "owner", type: "User")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  bundle: Bundle @source(subgraph: "YouTrack", name: "bundle", type: "Bundle")
  description: String @source(subgraph: "YouTrack", name: "description", type: "String")
  archived: Boolean @source(subgraph: "YouTrack", name: "archived", type: "Boolean")
  ordinal: Int @source(subgraph: "YouTrack", name: "ordinal", type: "Int")
  color: FieldStyle @source(subgraph: "YouTrack", name: "color", type: "FieldStyle")
  hasRunningJob: Boolean @source(subgraph: "YouTrack", name: "hasRunningJob", type: "Boolean")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

type VersionBundleElement implements BundleElement
  @source(subgraph: "YouTrack", name: "VersionBundleElement") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  archived: Boolean @source(subgraph: "YouTrack", name: "archived", type: "Boolean")
  released: Boolean @source(subgraph: "YouTrack", name: "released", type: "Boolean")
  releaseDate: BigInt @source(subgraph: "YouTrack", name: "releaseDate", type: "BigInt")
  startDate: BigInt @source(subgraph: "YouTrack", name: "startDate", type: "BigInt")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  bundle: Bundle @source(subgraph: "YouTrack", name: "bundle", type: "Bundle")
  description: String @source(subgraph: "YouTrack", name: "description", type: "String")
  ordinal: Int @source(subgraph: "YouTrack", name: "ordinal", type: "Int")
  color: FieldStyle @source(subgraph: "YouTrack", name: "color", type: "FieldStyle")
  hasRunningJob: Boolean @source(subgraph: "YouTrack", name: "hasRunningJob", type: "Boolean")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

type BuildBundleElement implements BundleElement
  @source(subgraph: "YouTrack", name: "BuildBundleElement") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  assembleDate: BigInt @source(subgraph: "YouTrack", name: "assembleDate", type: "BigInt")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  bundle: Bundle @source(subgraph: "YouTrack", name: "bundle", type: "Bundle")
  description: String @source(subgraph: "YouTrack", name: "description", type: "String")
  archived: Boolean @source(subgraph: "YouTrack", name: "archived", type: "Boolean")
  ordinal: Int @source(subgraph: "YouTrack", name: "ordinal", type: "Int")
  color: FieldStyle @source(subgraph: "YouTrack", name: "color", type: "FieldStyle")
  hasRunningJob: Boolean @source(subgraph: "YouTrack", name: "hasRunningJob", type: "Boolean")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents a set of field values in YouTrack."
type BaseBundle implements Bundle @source(subgraph: "YouTrack", name: "BaseBundle") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  values: [BundleElement] @source(subgraph: "YouTrack", name: "values", type: "[BundleElement]")
  isUpdateable: Boolean @source(subgraph: "YouTrack", name: "isUpdateable", type: "Boolean")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

type UserBundle implements Bundle @source(subgraph: "YouTrack", name: "UserBundle") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  isUpdateable: Boolean @source(subgraph: "YouTrack", name: "isUpdateable", type: "Boolean")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
  groups: [UserGroup] @source(subgraph: "YouTrack", name: "groups", type: "[UserGroup]")
  individuals: [User] @source(subgraph: "YouTrack", name: "individuals", type: "[User]")
  aggregatedUsers: [User] @source(subgraph: "YouTrack", name: "aggregatedUsers", type: "[User]")
}

"Represents default settings for the user-type field."
type UserCustomFieldDefaults implements CustomFieldDefaults
  @source(subgraph: "YouTrack", name: "UserCustomFieldDefaults") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  bundle: UserBundle @source(subgraph: "YouTrack", name: "bundle", type: "UserBundle")
  defaultValues: [User] @source(subgraph: "YouTrack", name: "defaultValues", type: "[User]")
  canBeEmpty: Boolean @source(subgraph: "YouTrack", name: "canBeEmpty", type: "Boolean")
  emptyFieldText: String @source(subgraph: "YouTrack", name: "emptyFieldText", type: "String")
  isPublic: Boolean @source(subgraph: "YouTrack", name: "isPublic", type: "Boolean")
  parent: CustomField @source(subgraph: "YouTrack", name: "parent", type: "CustomField")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents project settings for a custom field with a defined set of values."
type BundleProjectCustomField implements ProjectCustomField
  @source(subgraph: "YouTrack", name: "BundleProjectCustomField") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  field: CustomField @source(subgraph: "YouTrack", name: "field", type: "CustomField")
  project: Project @source(subgraph: "YouTrack", name: "project", type: "Project")
  canBeEmpty: Boolean @source(subgraph: "YouTrack", name: "canBeEmpty", type: "Boolean")
  emptyFieldText: String @source(subgraph: "YouTrack", name: "emptyFieldText", type: "String")
  ordinal: Int @source(subgraph: "YouTrack", name: "ordinal", type: "Int")
  isPublic: Boolean @source(subgraph: "YouTrack", name: "isPublic", type: "Boolean")
  hasRunningJob: Boolean @source(subgraph: "YouTrack", name: "hasRunningJob", type: "Boolean")
  condition: CustomFieldCondition
    @source(subgraph: "YouTrack", name: "condition", type: "CustomFieldCondition")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents the condition for showing a custom field."
type FieldBasedCondition implements CustomFieldCondition
  @source(subgraph: "YouTrack", name: "FieldBasedCondition") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  "Represents project settings for a custom field with a defined set of values."
  field: BundleProjectCustomField
    @source(subgraph: "YouTrack", name: "field", type: "BundleProjectCustomField")
  values: [BundleElement] @source(subgraph: "YouTrack", name: "values", type: "[BundleElement]")
  showForNullValue: Boolean @source(subgraph: "YouTrack", name: "showForNullValue", type: "Boolean")
  parent: ProjectCustomField
    @source(subgraph: "YouTrack", name: "parent", type: "ProjectCustomField")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents project settings for a group custom field."
type GroupProjectCustomField implements ProjectCustomField
  @source(subgraph: "YouTrack", name: "GroupProjectCustomField") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  defaultValues: [UserGroup]
    @source(subgraph: "YouTrack", name: "defaultValues", type: "[UserGroup]")
  field: CustomField @source(subgraph: "YouTrack", name: "field", type: "CustomField")
  project: Project @source(subgraph: "YouTrack", name: "project", type: "Project")
  canBeEmpty: Boolean @source(subgraph: "YouTrack", name: "canBeEmpty", type: "Boolean")
  emptyFieldText: String @source(subgraph: "YouTrack", name: "emptyFieldText", type: "String")
  ordinal: Int @source(subgraph: "YouTrack", name: "ordinal", type: "Int")
  isPublic: Boolean @source(subgraph: "YouTrack", name: "isPublic", type: "Boolean")
  hasRunningJob: Boolean @source(subgraph: "YouTrack", name: "hasRunningJob", type: "Boolean")
  condition: CustomFieldCondition
    @source(subgraph: "YouTrack", name: "condition", type: "CustomFieldCondition")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents project settings for the fields of the following types: `integer`, `float`, `date`, `date and time`, `string`."
type SimpleProjectCustomField implements ProjectCustomField
  @source(subgraph: "YouTrack", name: "SimpleProjectCustomField") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  field: CustomField @source(subgraph: "YouTrack", name: "field", type: "CustomField")
  project: Project @source(subgraph: "YouTrack", name: "project", type: "Project")
  canBeEmpty: Boolean @source(subgraph: "YouTrack", name: "canBeEmpty", type: "Boolean")
  emptyFieldText: String @source(subgraph: "YouTrack", name: "emptyFieldText", type: "String")
  ordinal: Int @source(subgraph: "YouTrack", name: "ordinal", type: "Int")
  isPublic: Boolean @source(subgraph: "YouTrack", name: "isPublic", type: "Boolean")
  hasRunningJob: Boolean @source(subgraph: "YouTrack", name: "hasRunningJob", type: "Boolean")
  condition: CustomFieldCondition
    @source(subgraph: "YouTrack", name: "condition", type: "CustomFieldCondition")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents project settings for the period field."
type PeriodProjectCustomField implements ProjectCustomField
  @source(subgraph: "YouTrack", name: "PeriodProjectCustomField") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  field: CustomField @source(subgraph: "YouTrack", name: "field", type: "CustomField")
  project: Project @source(subgraph: "YouTrack", name: "project", type: "Project")
  canBeEmpty: Boolean @source(subgraph: "YouTrack", name: "canBeEmpty", type: "Boolean")
  emptyFieldText: String @source(subgraph: "YouTrack", name: "emptyFieldText", type: "String")
  ordinal: Int @source(subgraph: "YouTrack", name: "ordinal", type: "Int")
  isPublic: Boolean @source(subgraph: "YouTrack", name: "isPublic", type: "Boolean")
  hasRunningJob: Boolean @source(subgraph: "YouTrack", name: "hasRunningJob", type: "Boolean")
  condition: CustomFieldCondition
    @source(subgraph: "YouTrack", name: "condition", type: "CustomFieldCondition")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents the period field in the issue."
type PeriodIssueCustomField implements IssueCustomField
  @source(subgraph: "YouTrack", name: "PeriodIssueCustomField") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  value: JSON @source(subgraph: "YouTrack", name: "value", type: "JSON")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  projectCustomField: ProjectCustomField
    @source(subgraph: "YouTrack", name: "projectCustomField", type: "ProjectCustomField")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents a simple-type custom field in the issue."
type SimpleIssueCustomField implements IssueCustomField
  @source(subgraph: "YouTrack", name: "SimpleIssueCustomField") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  value: JSON @source(subgraph: "YouTrack", name: "value", type: "JSON")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  projectCustomField: ProjectCustomField
    @source(subgraph: "YouTrack", name: "projectCustomField", type: "ProjectCustomField")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents a a single-value custom field in the issue."
type DatabaseSingleValueIssueCustomField implements IssueCustomField
  @source(subgraph: "YouTrack", name: "DatabaseSingleValueIssueCustomField") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  value: JSON @source(subgraph: "YouTrack", name: "value", type: "JSON")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  projectCustomField: ProjectCustomField
    @source(subgraph: "YouTrack", name: "projectCustomField", type: "ProjectCustomField")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents a custom field that may have multiple values in the issue."
type DatabaseMultiValueIssueCustomField implements IssueCustomField
  @source(subgraph: "YouTrack", name: "DatabaseMultiValueIssueCustomField") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  value: JSON @source(subgraph: "YouTrack", name: "value", type: "JSON")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  projectCustomField: ProjectCustomField
    @source(subgraph: "YouTrack", name: "projectCustomField", type: "ProjectCustomField")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents the issue custom field of the `text` type."
type TextIssueCustomField implements IssueCustomField
  @source(subgraph: "YouTrack", name: "TextIssueCustomField") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  value: JSON @source(subgraph: "YouTrack", name: "value", type: "JSON")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  projectCustomField: ProjectCustomField
    @source(subgraph: "YouTrack", name: "projectCustomField", type: "ProjectCustomField")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"`WatchFolder` is a common abstract ancestor for saved searches and tags."
type WatchFolder implements IssueFolder @source(subgraph: "YouTrack", name: "WatchFolder") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
  owner: User @source(subgraph: "YouTrack", name: "owner", type: "User")
  visibleFor: UserGroup @source(subgraph: "YouTrack", name: "visibleFor", type: "UserGroup")
  updateableBy: UserGroup @source(subgraph: "YouTrack", name: "updateableBy", type: "UserGroup")
  readSharingSettings: WatchFolderSharingSettings
    @source(subgraph: "YouTrack", name: "readSharingSettings", type: "WatchFolderSharingSettings")
  updateSharingSettings: WatchFolderSharingSettings
    @source(subgraph: "YouTrack", name: "updateSharingSettings", type: "WatchFolderSharingSettings")
}

"Represents a VCS change author who could not be associated with any YouTrack user account."
type VcsUnresolvedUser implements User @source(subgraph: "YouTrack", name: "VcsUnresolvedUser") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  login: String @source(subgraph: "YouTrack", name: "login", type: "String")
  fullName: String @source(subgraph: "YouTrack", name: "fullName", type: "String")
  email: String @source(subgraph: "YouTrack", name: "email", type: "String")
  ringId: String @source(subgraph: "YouTrack", name: "ringId", type: "String")
  guest: Boolean @source(subgraph: "YouTrack", name: "guest", type: "Boolean")
  online: Boolean @source(subgraph: "YouTrack", name: "online", type: "Boolean")
  banned: Boolean @source(subgraph: "YouTrack", name: "banned", type: "Boolean")
  tags: [Tag] @source(subgraph: "YouTrack", name: "tags", type: "[Tag]")
  savedQueries: [SavedQuery]
    @source(subgraph: "YouTrack", name: "savedQueries", type: "[SavedQuery]")
  avatarUrl: String @source(subgraph: "YouTrack", name: "avatarUrl", type: "String")
  profiles: UserProfiles @source(subgraph: "YouTrack", name: "profiles", type: "UserProfiles")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

type Me implements User @source(subgraph: "YouTrack", name: "Me") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  login: String @source(subgraph: "YouTrack", name: "login", type: "String")
  fullName: String @source(subgraph: "YouTrack", name: "fullName", type: "String")
  email: String @source(subgraph: "YouTrack", name: "email", type: "String")
  ringId: String @source(subgraph: "YouTrack", name: "ringId", type: "String")
  guest: Boolean @source(subgraph: "YouTrack", name: "guest", type: "Boolean")
  online: Boolean @source(subgraph: "YouTrack", name: "online", type: "Boolean")
  banned: Boolean @source(subgraph: "YouTrack", name: "banned", type: "Boolean")
  tags: [Tag] @source(subgraph: "YouTrack", name: "tags", type: "[Tag]")
  savedQueries: [SavedQuery]
    @source(subgraph: "YouTrack", name: "savedQueries", type: "[SavedQuery]")
  avatarUrl: String @source(subgraph: "YouTrack", name: "avatarUrl", type: "String")
  profiles: UserProfiles @source(subgraph: "YouTrack", name: "profiles", type: "UserProfiles")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents a predefined field of the issue. Predefined fields are always present in an issue and\n            |cannot be customized in a project. For example, `project`, `created`,\n            |`updated`, `tags`, and so on."
type PredefinedFilterField implements FilterField
  @source(subgraph: "YouTrack", name: "PredefinedFilterField") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  presentation: String @source(subgraph: "YouTrack", name: "presentation", type: "String")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents an issue property, which can be a predefined field, a custom field, a link, and so on."
interface FilterField
  @discriminator(
    subgraph: "YouTrack"
    field: "$type"
    mapping: "\"{\\\"FilterField\\\":\\\"FilterField\\\",\\\"PredefinedFilterField\\\":\\\"PredefinedFilterField\\\",\\\"CustomFilterField\\\":\\\"CustomFilterField\\\"}\""
  )
  @source(subgraph: "YouTrack", name: "FilterField") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  presentation: String @source(subgraph: "YouTrack", name: "presentation", type: "String")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents a custom field of the issue."
type CustomFilterField implements FilterField
  @source(subgraph: "YouTrack", name: "CustomFilterField") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  customField: CustomField @source(subgraph: "YouTrack", name: "customField", type: "CustomField")
  presentation: String @source(subgraph: "YouTrack", name: "presentation", type: "String")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents an action when an entity is created or deleted in an issue. For example, a new comment is created in the issue."
type CreatedDeletedActivityItem implements ActivityItem
  @source(subgraph: "YouTrack", name: "CreatedDeletedActivityItem") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  added: JSON @source(subgraph: "YouTrack", name: "added", type: "JSON")
  author: User @source(subgraph: "YouTrack", name: "author", type: "User")
  category: ActivityCategory
    @source(subgraph: "YouTrack", name: "category", type: "ActivityCategory")
  field: FilterField @source(subgraph: "YouTrack", name: "field", type: "FilterField")
  removed: JSON @source(subgraph: "YouTrack", name: "removed", type: "JSON")
  target: JSON @source(subgraph: "YouTrack", name: "target", type: "JSON")
  targetMember: String @source(subgraph: "YouTrack", name: "targetMember", type: "String")
  timestamp: BigInt @source(subgraph: "YouTrack", name: "timestamp", type: "BigInt")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

interface ActivityItem
  @discriminator(
    subgraph: "YouTrack"
    field: "$type"
    mapping: "\"{\\\"ActivityItem\\\":\\\"ActivityItem\\\",\\\"VcsChangeActivityItem\\\":\\\"VcsChangeActivityItem\\\",\\\"WorkItemActivityItem\\\":\\\"WorkItemActivityItem\\\",\\\"WorkItemAuthorActivityItem\\\":\\\"WorkItemAuthorActivityItem\\\",\\\"WorkItemDurationActivityItem\\\":\\\"WorkItemDurationActivityItem\\\",\\\"WorkItemTypeActivityItem\\\":\\\"WorkItemTypeActivityItem\\\",\\\"SprintActivityItem\\\":\\\"SprintActivityItem\\\",\\\"CreatedDeletedActivityItem\\\":\\\"CreatedDeletedActivityItem\\\",\\\"AttachmentActivityItem\\\":\\\"AttachmentActivityItem\\\",\\\"CommentActivityItem\\\":\\\"CommentActivityItem\\\",\\\"IssueCreatedActivityItem\\\":\\\"IssueCreatedActivityItem\\\",\\\"IssueResolvedActivityItem\\\":\\\"IssueResolvedActivityItem\\\",\\\"SingleValueActivityItem\\\":\\\"SingleValueActivityItem\\\",\\\"SimpleValueActivityItem\\\":\\\"SimpleValueActivityItem\\\",\\\"TextMarkupActivityItem\\\":\\\"TextMarkupActivityItem\\\",\\\"UsesMarkupActivityItem\\\":\\\"UsesMarkupActivityItem\\\",\\\"ProjectActivityItem\\\":\\\"ProjectActivityItem\\\",\\\"MultiValueActivityItem\\\":\\\"MultiValueActivityItem\\\",\\\"CommentAttachmentsActivityItem\\\":\\\"CommentAttachmentsActivityItem\\\",\\\"LinksActivityItem\\\":\\\"LinksActivityItem\\\",\\\"TagsActivityItem\\\":\\\"TagsActivityItem\\\",\\\"VotersActivityItem\\\":\\\"VotersActivityItem\\\",\\\"VisibilityActivityItem\\\":\\\"VisibilityActivityItem\\\",\\\"VisibilityGroupActivityItem\\\":\\\"VisibilityGroupActivityItem\\\",\\\"VisibilityUserActivityItem\\\":\\\"VisibilityUserActivityItem\\\",\\\"CustomFieldActivityItem\\\":\\\"CustomFieldActivityItem\\\",\\\"TextCustomFieldActivityItem\\\":\\\"TextCustomFieldActivityItem\\\"}\""
  )
  @source(subgraph: "YouTrack", name: "ActivityItem") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  added: JSON @source(subgraph: "YouTrack", name: "added", type: "JSON")
  author: User @source(subgraph: "YouTrack", name: "author", type: "User")
  category: ActivityCategory
    @source(subgraph: "YouTrack", name: "category", type: "ActivityCategory")
  field: FilterField @source(subgraph: "YouTrack", name: "field", type: "FilterField")
  removed: JSON @source(subgraph: "YouTrack", name: "removed", type: "JSON")
  target: JSON @source(subgraph: "YouTrack", name: "target", type: "JSON")
  targetMember: String @source(subgraph: "YouTrack", name: "targetMember", type: "String")
  timestamp: BigInt @source(subgraph: "YouTrack", name: "timestamp", type: "BigInt")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

type ActivityCategory
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "ActivityCategory") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents a Jenkins server."
type JenkinsServer implements VcsServer @source(subgraph: "YouTrack", name: "JenkinsServer") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  url: String @source(subgraph: "YouTrack", name: "url", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"The basic entity that represents a VCS or a build server."
interface VcsServer
  @discriminator(
    subgraph: "YouTrack"
    field: "$type"
    mapping: "\"{\\\"VcsServer\\\":\\\"VcsServer\\\",\\\"JenkinsServer\\\":\\\"JenkinsServer\\\",\\\"VcsHostingServer\\\":\\\"VcsHostingServer\\\",\\\"GogsServer\\\":\\\"GogsServer\\\",\\\"GiteaServer\\\":\\\"GiteaServer\\\",\\\"SpaceServer\\\":\\\"SpaceServer\\\",\\\"GitHubServer\\\":\\\"GitHubServer\\\",\\\"GitLabServer\\\":\\\"GitLabServer\\\",\\\"BitBucketServer\\\":\\\"BitBucketServer\\\",\\\"BitbucketStandaloneServer\\\":\\\"BitbucketStandaloneServer\\\",\\\"UpsourceServer\\\":\\\"UpsourceServer\\\",\\\"TeamcityServer\\\":\\\"TeamcityServer\\\"}\""
  )
  @source(subgraph: "YouTrack", name: "VcsServer") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  url: String @source(subgraph: "YouTrack", name: "url", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"The basic entity that represents a VCS server."
type VcsHostingServer implements VcsServer @source(subgraph: "YouTrack", name: "VcsHostingServer") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  url: String @source(subgraph: "YouTrack", name: "url", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents an Upsource server."
type UpsourceServer implements VcsServer @source(subgraph: "YouTrack", name: "UpsourceServer") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  url: String @source(subgraph: "YouTrack", name: "url", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents a TeamCity server."
type TeamcityServer implements VcsServer @source(subgraph: "YouTrack", name: "TeamcityServer") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  url: String @source(subgraph: "YouTrack", name: "url", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"The basic entity that represents a VCS integration configured for a project."
type VcsHostingChangesProcessor implements ChangesProcessor
  @source(subgraph: "YouTrack", name: "VcsHostingChangesProcessor") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  server: VcsServer @source(subgraph: "YouTrack", name: "server", type: "VcsServer")
  path: String @source(subgraph: "YouTrack", name: "path", type: "String")
  branchSpecification: String
    @source(subgraph: "YouTrack", name: "branchSpecification", type: "String")
  committers: UserGroup @source(subgraph: "YouTrack", name: "committers", type: "UserGroup")
  project: Project @source(subgraph: "YouTrack", name: "project", type: "Project")
  relatedProjects: [Project]
    @source(subgraph: "YouTrack", name: "relatedProjects", type: "[Project]")
  enabled: Boolean @source(subgraph: "YouTrack", name: "enabled", type: "Boolean")
  visibleForGroups: [UserGroup]
    @source(subgraph: "YouTrack", name: "visibleForGroups", type: "[UserGroup]")
  addComments: Boolean @source(subgraph: "YouTrack", name: "addComments", type: "Boolean")
  lookupIssuesInBranchName: Boolean
    @source(subgraph: "YouTrack", name: "lookupIssuesInBranchName", type: "Boolean")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"The basic entity that represents a VCS or a build server integration configured for a project."
interface ChangesProcessor
  @discriminator(
    subgraph: "YouTrack"
    field: "$type"
    mapping: "\"{\\\"ChangesProcessor\\\":\\\"ChangesProcessor\\\",\\\"VcsHostingChangesProcessor\\\":\\\"VcsHostingChangesProcessor\\\",\\\"GitHubChangesProcessor\\\":\\\"GitHubChangesProcessor\\\",\\\"GogsChangesProcessor\\\":\\\"GogsChangesProcessor\\\",\\\"GiteaChangesProcessor\\\":\\\"GiteaChangesProcessor\\\",\\\"SpaceChangesProcessor\\\":\\\"SpaceChangesProcessor\\\",\\\"GitLabChangesProcessor\\\":\\\"GitLabChangesProcessor\\\",\\\"BitBucketChangesProcessor\\\":\\\"BitBucketChangesProcessor\\\",\\\"BitbucketStandaloneChangesProcessor\\\":\\\"BitbucketStandaloneChangesProcessor\\\",\\\"TeamcityChangesProcessor\\\":\\\"TeamcityChangesProcessor\\\",\\\"JenkinsChangesProcessor\\\":\\\"JenkinsChangesProcessor\\\",\\\"UpsourceChangesProcessor\\\":\\\"UpsourceChangesProcessor\\\"}\""
  )
  @source(subgraph: "YouTrack", name: "ChangesProcessor") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  server: VcsServer @source(subgraph: "YouTrack", name: "server", type: "VcsServer")
  project: Project @source(subgraph: "YouTrack", name: "project", type: "Project")
  relatedProjects: [Project]
    @source(subgraph: "YouTrack", name: "relatedProjects", type: "[Project]")
  enabled: Boolean @source(subgraph: "YouTrack", name: "enabled", type: "Boolean")
  visibleForGroups: [UserGroup]
    @source(subgraph: "YouTrack", name: "visibleForGroups", type: "[UserGroup]")
  addComments: Boolean @source(subgraph: "YouTrack", name: "addComments", type: "Boolean")
  lookupIssuesInBranchName: Boolean
    @source(subgraph: "YouTrack", name: "lookupIssuesInBranchName", type: "Boolean")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents a TeamCity integration configured for a project."
type TeamcityChangesProcessor implements ChangesProcessor
  @source(subgraph: "YouTrack", name: "TeamcityChangesProcessor") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  server: VcsServer @source(subgraph: "YouTrack", name: "server", type: "VcsServer")
  project: Project @source(subgraph: "YouTrack", name: "project", type: "Project")
  relatedProjects: [Project]
    @source(subgraph: "YouTrack", name: "relatedProjects", type: "[Project]")
  enabled: Boolean @source(subgraph: "YouTrack", name: "enabled", type: "Boolean")
  visibleForGroups: [UserGroup]
    @source(subgraph: "YouTrack", name: "visibleForGroups", type: "[UserGroup]")
  addComments: Boolean @source(subgraph: "YouTrack", name: "addComments", type: "Boolean")
  lookupIssuesInBranchName: Boolean
    @source(subgraph: "YouTrack", name: "lookupIssuesInBranchName", type: "Boolean")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents a Jenkins integration configured for a project."
type JenkinsChangesProcessor implements ChangesProcessor
  @source(subgraph: "YouTrack", name: "JenkinsChangesProcessor") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  server: VcsServer @source(subgraph: "YouTrack", name: "server", type: "VcsServer")
  project: Project @source(subgraph: "YouTrack", name: "project", type: "Project")
  relatedProjects: [Project]
    @source(subgraph: "YouTrack", name: "relatedProjects", type: "[Project]")
  enabled: Boolean @source(subgraph: "YouTrack", name: "enabled", type: "Boolean")
  visibleForGroups: [UserGroup]
    @source(subgraph: "YouTrack", name: "visibleForGroups", type: "[UserGroup]")
  addComments: Boolean @source(subgraph: "YouTrack", name: "addComments", type: "Boolean")
  lookupIssuesInBranchName: Boolean
    @source(subgraph: "YouTrack", name: "lookupIssuesInBranchName", type: "Boolean")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents an Upsource integration configured for a project."
type UpsourceChangesProcessor implements ChangesProcessor
  @source(subgraph: "YouTrack", name: "UpsourceChangesProcessor") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  server: VcsServer @source(subgraph: "YouTrack", name: "server", type: "VcsServer")
  project: Project @source(subgraph: "YouTrack", name: "project", type: "Project")
  relatedProjects: [Project]
    @source(subgraph: "YouTrack", name: "relatedProjects", type: "[Project]")
  enabled: Boolean @source(subgraph: "YouTrack", name: "enabled", type: "Boolean")
  visibleForGroups: [UserGroup]
    @source(subgraph: "YouTrack", name: "visibleForGroups", type: "[UserGroup]")
  addComments: Boolean @source(subgraph: "YouTrack", name: "addComments", type: "Boolean")
  lookupIssuesInBranchName: Boolean
    @source(subgraph: "YouTrack", name: "lookupIssuesInBranchName", type: "Boolean")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

type IssueWorkItem implements BaseWorkItem @source(subgraph: "YouTrack", name: "IssueWorkItem") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
  author: User @source(subgraph: "YouTrack", name: "author", type: "User")
  creator: User @source(subgraph: "YouTrack", name: "creator", type: "User")
  text: String @source(subgraph: "YouTrack", name: "text", type: "String")
  textPreview: String @source(subgraph: "YouTrack", name: "textPreview", type: "String")
  type: WorkItemType @source(subgraph: "YouTrack", name: "type", type: "WorkItemType")
  created: BigInt @source(subgraph: "YouTrack", name: "created", type: "BigInt")
  updated: BigInt @source(subgraph: "YouTrack", name: "updated", type: "BigInt")
  duration: DurationValue @source(subgraph: "YouTrack", name: "duration", type: "DurationValue")
  date: BigInt @source(subgraph: "YouTrack", name: "date", type: "BigInt")
  issue: Issue @source(subgraph: "YouTrack", name: "issue", type: "Issue")
  attributes: [WorkItemAttribute]
    @source(subgraph: "YouTrack", name: "attributes", type: "[WorkItemAttribute]")
}

"Represents a basic ancestor for work items."
interface BaseWorkItem
  @discriminator(
    subgraph: "YouTrack"
    field: "$type"
    mapping: "\"{\\\"BaseWorkItem\\\":\\\"BaseWorkItem\\\",\\\"IssueWorkItem\\\":\\\"IssueWorkItem\\\"}\""
  )
  @source(subgraph: "YouTrack", name: "BaseWorkItem") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

type WorkItemType
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "WorkItemType") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  autoAttached: Boolean @source(subgraph: "YouTrack", name: "autoAttached", type: "Boolean")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents the duration value and its visual presentation."
type DurationValue
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "DurationValue") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  minutes: Int @source(subgraph: "YouTrack", name: "minutes", type: "Int")
  presentation: String @source(subgraph: "YouTrack", name: "presentation", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents the attribute of a specific work item."
type WorkItemAttribute
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "WorkItemAttribute") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  workItem: BaseWorkItem @source(subgraph: "YouTrack", name: "workItem", type: "BaseWorkItem")
  projectAttribute: WorkItemProjectAttribute
    @source(subgraph: "YouTrack", name: "projectAttribute", type: "WorkItemProjectAttribute")
  value: WorkItemAttributeValue
    @source(subgraph: "YouTrack", name: "value", type: "WorkItemAttributeValue")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents the project-related settings of a work item attribute."
type WorkItemProjectAttribute
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "WorkItemProjectAttribute") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  timeTrackingSettings: ProjectTimeTrackingSettings
    @source(subgraph: "YouTrack", name: "timeTrackingSettings", type: "ProjectTimeTrackingSettings")
  prototype: WorkItemAttributePrototype
    @source(subgraph: "YouTrack", name: "prototype", type: "WorkItemAttributePrototype")
  values: [WorkItemAttributeValue]
    @source(subgraph: "YouTrack", name: "values", type: "[WorkItemAttributeValue]")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  ordinal: Int @source(subgraph: "YouTrack", name: "ordinal", type: "Int")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

type ProjectTimeTrackingSettings
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "ProjectTimeTrackingSettings") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  enabled: Boolean @source(subgraph: "YouTrack", name: "enabled", type: "Boolean")
  estimate: ProjectCustomField
    @source(subgraph: "YouTrack", name: "estimate", type: "ProjectCustomField")
  timeSpent: ProjectCustomField
    @source(subgraph: "YouTrack", name: "timeSpent", type: "ProjectCustomField")
  workItemTypes: [WorkItemType]
    @source(subgraph: "YouTrack", name: "workItemTypes", type: "[WorkItemType]")
  project: Project @source(subgraph: "YouTrack", name: "project", type: "Project")
  attributes: [WorkItemProjectAttribute]
    @source(subgraph: "YouTrack", name: "attributes", type: "[WorkItemProjectAttribute]")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents a work item attribute prototype that is common for all projects. The project-related settings for work item attributes are stored in the `WorkItemProjectAttribute` entities."
type WorkItemAttributePrototype
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "WorkItemAttributePrototype") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  instances: [WorkItemProjectAttribute]
    @source(subgraph: "YouTrack", name: "instances", type: "[WorkItemProjectAttribute]")
  values: [WorkItemAttributeValue]
    @source(subgraph: "YouTrack", name: "values", type: "[WorkItemAttributeValue]")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents a value of a work item attribute."
type WorkItemAttributeValue
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "WorkItemAttributeValue") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  description: String @source(subgraph: "YouTrack", name: "description", type: "String")
  autoAttach: Boolean @source(subgraph: "YouTrack", name: "autoAttach", type: "Boolean")
  "Represents a work item attribute prototype that is common for all projects. The project-related settings for work item attributes are stored in the `WorkItemProjectAttribute` entities."
  prototype: WorkItemAttributePrototype
    @source(subgraph: "YouTrack", name: "prototype", type: "WorkItemAttributePrototype")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Describe change of properties that can have single value."
type SingleValueActivityItem implements ActivityItem
  @source(subgraph: "YouTrack", name: "SingleValueActivityItem") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  added: JSON @source(subgraph: "YouTrack", name: "added", type: "JSON")
  removed: JSON @source(subgraph: "YouTrack", name: "removed", type: "JSON")
  author: User @source(subgraph: "YouTrack", name: "author", type: "User")
  category: ActivityCategory
    @source(subgraph: "YouTrack", name: "category", type: "ActivityCategory")
  field: FilterField @source(subgraph: "YouTrack", name: "field", type: "FilterField")
  target: JSON @source(subgraph: "YouTrack", name: "target", type: "JSON")
  targetMember: String @source(subgraph: "YouTrack", name: "targetMember", type: "String")
  timestamp: BigInt @source(subgraph: "YouTrack", name: "timestamp", type: "BigInt")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents a change in an entity attribute that has type of `Array of &lt;Entities&gt;`."
type MultiValueActivityItem implements ActivityItem
  @source(subgraph: "YouTrack", name: "MultiValueActivityItem") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  added: JSON @source(subgraph: "YouTrack", name: "added", type: "JSON")
  removed: JSON @source(subgraph: "YouTrack", name: "removed", type: "JSON")
  author: User @source(subgraph: "YouTrack", name: "author", type: "User")
  category: ActivityCategory
    @source(subgraph: "YouTrack", name: "category", type: "ActivityCategory")
  field: FilterField @source(subgraph: "YouTrack", name: "field", type: "FilterField")
  target: JSON @source(subgraph: "YouTrack", name: "target", type: "JSON")
  targetMember: String @source(subgraph: "YouTrack", name: "targetMember", type: "String")
  timestamp: BigInt @source(subgraph: "YouTrack", name: "timestamp", type: "BigInt")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents a single swimlane in case of AttributeBasedSwimlaneSettings."
type SwimlaneEntityAttributeValue implements DatabaseAttributeValue
  @source(subgraph: "YouTrack", name: "SwimlaneEntityAttributeValue") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  isResolved: Boolean @source(subgraph: "YouTrack", name: "isResolved", type: "Boolean")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents string reference to the value."
interface DatabaseAttributeValue
  @discriminator(
    subgraph: "YouTrack"
    field: "$type"
    mapping: "\"{\\\"DatabaseAttributeValue\\\":\\\"DatabaseAttributeValue\\\",\\\"SwimlaneEntityAttributeValue\\\":\\\"SwimlaneEntityAttributeValue\\\",\\\"AgileColumnFieldValue\\\":\\\"AgileColumnFieldValue\\\"}\""
  )
  @source(subgraph: "YouTrack", name: "DatabaseAttributeValue") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents a field value or values, parameterizing agile column."
type AgileColumnFieldValue implements DatabaseAttributeValue
  @source(subgraph: "YouTrack", name: "AgileColumnFieldValue") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  isResolved: Boolean @source(subgraph: "YouTrack", name: "isResolved", type: "Boolean")
}

type AttributeBasedSwimlaneSettings implements SwimlaneSettings
  @source(subgraph: "YouTrack", name: "AttributeBasedSwimlaneSettings") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  field: FilterField @source(subgraph: "YouTrack", name: "field", type: "FilterField")
  values: [SwimlaneEntityAttributeValue]
    @source(subgraph: "YouTrack", name: "values", type: "[SwimlaneEntityAttributeValue]")
  enabled: Boolean @source(subgraph: "YouTrack", name: "enabled", type: "Boolean")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Base entity for different swimlane settings"
interface SwimlaneSettings
  @discriminator(
    subgraph: "YouTrack"
    field: "$type"
    mapping: "\"{\\\"SwimlaneSettings\\\":\\\"SwimlaneSettings\\\",\\\"AttributeBasedSwimlaneSettings\\\":\\\"AttributeBasedSwimlaneSettings\\\",\\\"IssueBasedSwimlaneSettings\\\":\\\"IssueBasedSwimlaneSettings\\\"}\""
  )
  @source(subgraph: "YouTrack", name: "SwimlaneSettings") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  enabled: Boolean @source(subgraph: "YouTrack", name: "enabled", type: "Boolean")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Swimlane settings for the case, when each swimlane is represented by an issue and contains this issue's subtasks."
type IssueBasedSwimlaneSettings implements SwimlaneSettings
  @source(subgraph: "YouTrack", name: "IssueBasedSwimlaneSettings") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  field: FilterField @source(subgraph: "YouTrack", name: "field", type: "FilterField")
  defaultCardType: SwimlaneValue
    @source(subgraph: "YouTrack", name: "defaultCardType", type: "SwimlaneValue")
  values: [SwimlaneValue] @source(subgraph: "YouTrack", name: "values", type: "[SwimlaneValue]")
  enabled: Boolean @source(subgraph: "YouTrack", name: "enabled", type: "Boolean")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents single swimlane in case of IssueBasedSwimlaneSettings."
type SwimlaneValue
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "SwimlaneValue") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Sets a card color based on a value of some custom field."
type FieldBasedColorCoding implements ColorCoding
  @source(subgraph: "YouTrack", name: "FieldBasedColorCoding") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  prototype: CustomField @source(subgraph: "YouTrack", name: "prototype", type: "CustomField")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Describes rules that define which colors are used for cards on the agile board."
interface ColorCoding
  @discriminator(
    subgraph: "YouTrack"
    field: "$type"
    mapping: "\"{\\\"ColorCoding\\\":\\\"ColorCoding\\\",\\\"FieldBasedColorCoding\\\":\\\"FieldBasedColorCoding\\\",\\\"ProjectBasedColorCoding\\\":\\\"ProjectBasedColorCoding\\\"}\""
  )
  @source(subgraph: "YouTrack", name: "ColorCoding") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Lets you set a color for a card based on its project."
type ProjectBasedColorCoding implements ColorCoding
  @source(subgraph: "YouTrack", name: "ProjectBasedColorCoding") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  projectColors: [ProjectColor]
    @source(subgraph: "YouTrack", name: "projectColors", type: "[ProjectColor]")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents color setting for one project on the board."
type ProjectColor
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "ProjectColor") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  project: Project @source(subgraph: "YouTrack", name: "project", type: "Project")
  color: FieldStyle @source(subgraph: "YouTrack", name: "color", type: "FieldStyle")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents an activity that affects a custom field of an issue."
type CustomFieldActivityItem implements ActivityItem
  @source(subgraph: "YouTrack", name: "CustomFieldActivityItem") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  added: JSON @source(subgraph: "YouTrack", name: "added", type: "JSON")
  removed: JSON @source(subgraph: "YouTrack", name: "removed", type: "JSON")
  target: JSON @source(subgraph: "YouTrack", name: "target", type: "JSON")
  author: User @source(subgraph: "YouTrack", name: "author", type: "User")
  category: ActivityCategory
    @source(subgraph: "YouTrack", name: "category", type: "ActivityCategory")
  field: FilterField @source(subgraph: "YouTrack", name: "field", type: "FilterField")
  targetMember: String @source(subgraph: "YouTrack", name: "targetMember", type: "String")
  timestamp: BigInt @source(subgraph: "YouTrack", name: "timestamp", type: "BigInt")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

type Article implements BaseArticle
  @source(subgraph: "YouTrack", name: "Article")
  @resolver(
    subgraph: "YouTrack"
    operation: "query ArticlesByIds($Article_id: String) { articles(fields: $Article_id) }"
    kind: "BATCH"
  )
  @resolver(
    subgraph: "YouTrack"
    operation: "query ArticlesByContents($Article_content: String) { articles(fields: $Article_content) }"
    kind: "BATCH"
  )
  @resolver(
    subgraph: "YouTrack"
    operation: "query ArticlesBySummarys($Article_summary: String) { articles(fields: $Article_summary) }"
    kind: "BATCH"
  )
  @resolver(
    subgraph: "YouTrack"
    operation: "query ArticlesByDollarTypes($Article__DOLLAR_type: String) { articles(fields: $Article__DOLLAR_type) }"
    kind: "BATCH"
  )
  @resolver(
    subgraph: "YouTrack"
    operation: "query ArticlesByIdReadables($Article_idReadable: String) { articles(fields: $Article_idReadable) }"
    kind: "BATCH"
  )
  @resolver(
    subgraph: "YouTrack"
    operation: "query ArticlesByIds($Article_id: String!) { articles_by_id(id: $Article_id) }"
    kind: "BATCH"
  )
  @variable(subgraph: "YouTrack", name: "Article_id", select: "id")
  @variable(subgraph: "YouTrack", name: "Article_content", select: "content")
  @variable(subgraph: "YouTrack", name: "Article_summary", select: "summary")
  @variable(subgraph: "YouTrack", name: "Article__DOLLAR_type", select: "_DOLLAR_type")
  @variable(subgraph: "YouTrack", name: "Article_idReadable", select: "idReadable") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  attachments: [ArticleAttachment]
    @source(subgraph: "YouTrack", name: "attachments", type: "[ArticleAttachment]")
  content: String @source(subgraph: "YouTrack", name: "content", type: "String")
  reporter: User @source(subgraph: "YouTrack", name: "reporter", type: "User")
  summary: String @source(subgraph: "YouTrack", name: "summary", type: "String")
  visibility: Visibility @source(subgraph: "YouTrack", name: "visibility", type: "Visibility")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
  childArticles: [Article] @source(subgraph: "YouTrack", name: "childArticles", type: "[Article]")
  comments: [ArticleComment]
    @source(subgraph: "YouTrack", name: "comments", type: "[ArticleComment]")
  created: BigInt @source(subgraph: "YouTrack", name: "created", type: "BigInt")
  externalArticle: ExternalArticle
    @source(subgraph: "YouTrack", name: "externalArticle", type: "ExternalArticle")
  hasChildren: Boolean @source(subgraph: "YouTrack", name: "hasChildren", type: "Boolean")
  hasStar: Boolean @source(subgraph: "YouTrack", name: "hasStar", type: "Boolean")
  idReadable: String @source(subgraph: "YouTrack", name: "idReadable", type: "String")
  ordinal: BigInt @source(subgraph: "YouTrack", name: "ordinal", type: "BigInt")
  parentArticle: Article @source(subgraph: "YouTrack", name: "parentArticle", type: "Article")
  project: Project @source(subgraph: "YouTrack", name: "project", type: "Project")
  tags: [Tag] @source(subgraph: "YouTrack", name: "tags", type: "[Tag]")
  updated: BigInt @source(subgraph: "YouTrack", name: "updated", type: "BigInt")
  updatedBy: User @source(subgraph: "YouTrack", name: "updatedBy", type: "User")
}

"Represents a base article entity."
interface BaseArticle
  @discriminator(
    subgraph: "YouTrack"
    field: "$type"
    mapping: "\"{\\\"BaseArticle\\\":\\\"BaseArticle\\\",\\\"Article\\\":\\\"Article\\\"}\""
  )
  @source(subgraph: "YouTrack", name: "BaseArticle") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  attachments: [ArticleAttachment]
    @source(subgraph: "YouTrack", name: "attachments", type: "[ArticleAttachment]")
  content: String @source(subgraph: "YouTrack", name: "content", type: "String")
  reporter: User @source(subgraph: "YouTrack", name: "reporter", type: "User")
  summary: String @source(subgraph: "YouTrack", name: "summary", type: "String")
  visibility: Visibility @source(subgraph: "YouTrack", name: "visibility", type: "Visibility")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

type ArticleAttachment
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "ArticleAttachment") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  author: User @source(subgraph: "YouTrack", name: "author", type: "User")
  created: BigInt @source(subgraph: "YouTrack", name: "created", type: "BigInt")
  updated: BigInt @source(subgraph: "YouTrack", name: "updated", type: "BigInt")
  size: BigInt @source(subgraph: "YouTrack", name: "size", type: "BigInt")
  extension: String @source(subgraph: "YouTrack", name: "extension", type: "String")
  charset: String @source(subgraph: "YouTrack", name: "charset", type: "String")
  mimeType: String @source(subgraph: "YouTrack", name: "mimeType", type: "String")
  metaData: String @source(subgraph: "YouTrack", name: "metaData", type: "String")
  draft: Boolean @source(subgraph: "YouTrack", name: "draft", type: "Boolean")
  removed: Boolean @source(subgraph: "YouTrack", name: "removed", type: "Boolean")
  base64Content: String @source(subgraph: "YouTrack", name: "base64Content", type: "String")
  url: String @source(subgraph: "YouTrack", name: "url", type: "String")
  visibility: Visibility @source(subgraph: "YouTrack", name: "visibility", type: "Visibility")
  "Represents a base article entity."
  article: BaseArticle @source(subgraph: "YouTrack", name: "article", type: "BaseArticle")
  comment: ArticleComment @source(subgraph: "YouTrack", name: "comment", type: "ArticleComment")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

type ArticleComment
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "ArticleComment") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  article: Article @source(subgraph: "YouTrack", name: "article", type: "Article")
  attachments: [ArticleAttachment]
    @source(subgraph: "YouTrack", name: "attachments", type: "[ArticleAttachment]")
  author: User @source(subgraph: "YouTrack", name: "author", type: "User")
  created: BigInt @source(subgraph: "YouTrack", name: "created", type: "BigInt")
  reactions: [Reaction] @source(subgraph: "YouTrack", name: "reactions", type: "[Reaction]")
  text: String @source(subgraph: "YouTrack", name: "text", type: "String")
  updated: BigInt @source(subgraph: "YouTrack", name: "updated", type: "BigInt")
  visibility: Visibility @source(subgraph: "YouTrack", name: "visibility", type: "Visibility")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"For an article that was imported from another service, this entity represents the reference to the article in the external system."
type ExternalArticle
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "ExternalArticle") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  url: String @source(subgraph: "YouTrack", name: "url", type: "String")
  key: String @source(subgraph: "YouTrack", name: "key", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Comment is visible for all the users who can read the issue."
type CommandUnlimitedVisibility implements CommandVisibility
  @source(subgraph: "YouTrack", name: "CommandUnlimitedVisibility") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Visibility settings of the comment that is added along with the command."
interface CommandVisibility
  @discriminator(
    subgraph: "YouTrack"
    field: "$type"
    mapping: "\"{\\\"CommandVisibility\\\":\\\"CommandVisibility\\\",\\\"CommandUnlimitedVisibility\\\":\\\"CommandUnlimitedVisibility\\\",\\\"CommandLimitedVisibility\\\":\\\"CommandLimitedVisibility\\\"}\""
  )
  @source(subgraph: "YouTrack", name: "CommandVisibility") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Stores the restricted visibility settings for the command."
type CommandLimitedVisibility implements CommandVisibility
  @source(subgraph: "YouTrack", name: "CommandLimitedVisibility") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  permittedGroups: [UserGroup]
    @source(subgraph: "YouTrack", name: "permittedGroups", type: "[UserGroup]")
  permittedUsers: [User] @source(subgraph: "YouTrack", name: "permittedUsers", type: "[User]")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

type Query {
  activities(
    categories: String
    "Indicates whether the order of returning activities is from newest to oldest or the opposite.\nIf `false`, then the oldest activity item that matches a selected filter is returned first.\nIf `true`, then the newest activity is returned first. By default, `false`."
    reverse: Boolean
    "Start timestamp of the time interval the activity timestamp belongs to.\nIf the parameter is not set, it is considered to be 0."
    start: String
    "End timestamp of the time interval the activity timestamp belongs to.\nIf the parameter is not set, it is considered as `Long.MAX_VALUE`."
    end: String
    "Parameter to filter activities by the author. You can specify one of the following parameters: the database ID, login, Hub ID,\nor `me` for the currently logged in user."
    author: String
    "Issues search query. Read more about <a href=\"Search-and-Command-Attributes.xml\">search syntax</a>."
    issueQuery: String
    fields: String = "$type,added,author($type,id,login,ringId),category($type,id),field($type,customField($type,fieldType($type,id),id,localizedName,name),id,name),id,removed,target,targetMember,timestamp"
    _DOLLAR_skip: Int
    _DOLLAR_top: Int
  ): [ActivityItem]
    @httpOperation(
      subgraph: "YouTrack"
      path: "/activities"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"categories\\\":\\\"categories\\\",\\\"reverse\\\":\\\"reverse\\\",\\\"start\\\":\\\"start\\\",\\\"end\\\":\\\"end\\\",\\\"author\\\":\\\"author\\\",\\\"issueQuery\\\":\\\"issueQuery\\\",\\\"fields\\\":\\\"fields\\\",\\\"$skip\\\":\\\"_DOLLAR_skip\\\",\\\"$top\\\":\\\"_DOLLAR_top\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query activities($categories: String, $reverse: Boolean, $start: String, $end: String, $author: String, $issueQuery: String, $fields: String = \"$type,added,author($type,id,login,ringId),category($type,id),field($type,customField($type,fieldType($type,id),id,localizedName,name),id,name),id,removed,target,targetMember,timestamp\", $_DOLLAR_skip: Int, $_DOLLAR_top: Int) { activities(categories: $categories, reverse: $reverse, start: $start, end: $end, author: $author, issueQuery: $issueQuery, fields: $fields, _DOLLAR_skip: $_DOLLAR_skip, _DOLLAR_top: $_DOLLAR_top) }"
    )
    @source(subgraph: "YouTrack", name: "activities", type: "[ActivityItem]")
  activities_by_id(
    id: String!
    fields: String = "$type,added,author($type,id,login,ringId),category($type,id),field($type,customField($type,fieldType($type,id),id,localizedName,name),id,name),id,removed,target,targetMember,timestamp"
  ): ActivityItem
    @httpOperation(
      subgraph: "YouTrack"
      path: "/activities/{args.id}"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query activities_by_id($id: String!, $fields: String = \"$type,added,author($type,id,login,ringId),category($type,id),field($type,customField($type,fieldType($type,id),id,localizedName,name),id,name),id,removed,target,targetMember,timestamp\") { activities_by_id(id: $id, fields: $fields) }"
    )
    @source(subgraph: "YouTrack", name: "activities_by_id", type: "ActivityItem")
  activitiesPage(
    categories: String
    "Indicates whether the order of returning activities is from newest to oldest or the opposite.\nIf `false`, then the oldest activity item that matches a selected filter is returned first.\nIf `true`, then the newest activity is returned first. By default, `false`."
    reverse: Boolean
    "Start timestamp of the time interval the activity timestamp belongs to.\nIf the parameter is not set, it is considered to be 0."
    start: String
    "End timestamp of the time interval the activity timestamp belongs to.\nIf the parameter is not set, it is considered as `Long.MAX_VALUE`."
    end: String
    "Parameter to filter activities by the author. You can specify one of the following parameters: the database ID, login, Hub ID,\nor `me` for the currently logged in user."
    author: String
    "Issues search query. Read more about <a href=\"Search-and-Command-Attributes.xml\">search syntax</a>."
    issueQuery: String
    cursor: String
    "ID of the activity that should be included in the page. The activity is allocated to the middle of the page."
    activityId: String
    fields: String = "$type,activities($type,added,author($type,id,login,ringId),category($type,id),field($type,customField($type,fieldType($type,id),id,localizedName,name),id,name),id,removed,target,targetMember,timestamp),afterCursor,beforeCursor,hasAfter,hasBefore,id"
  ): ActivityCursorPage
    @httpOperation(
      subgraph: "YouTrack"
      path: "/activitiesPage"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"categories\\\":\\\"categories\\\",\\\"reverse\\\":\\\"reverse\\\",\\\"start\\\":\\\"start\\\",\\\"end\\\":\\\"end\\\",\\\"author\\\":\\\"author\\\",\\\"issueQuery\\\":\\\"issueQuery\\\",\\\"cursor\\\":\\\"cursor\\\",\\\"activityId\\\":\\\"activityId\\\",\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query activitiesPage($categories: String, $reverse: Boolean, $start: String, $end: String, $author: String, $issueQuery: String, $cursor: String, $activityId: String, $fields: String = \"$type,activities($type,added,author($type,id,login,ringId),category($type,id),field($type,customField($type,fieldType($type,id),id,localizedName,name),id,name),id,removed,target,targetMember,timestamp),afterCursor,beforeCursor,hasAfter,hasBefore,id\") { activitiesPage(categories: $categories, reverse: $reverse, start: $start, end: $end, author: $author, issueQuery: $issueQuery, cursor: $cursor, activityId: $activityId, fields: $fields) }"
    )
    @source(subgraph: "YouTrack", name: "activitiesPage", type: "ActivityCursorPage")
  admin_customFieldSettings_bundles_build(
    fields: String = "$type,id"
    _DOLLAR_skip: Int
    _DOLLAR_top: Int
  ): [BuildBundle]
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/build"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\",\\\"$skip\\\":\\\"_DOLLAR_skip\\\",\\\"$top\\\":\\\"_DOLLAR_top\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query admin_customFieldSettings_bundles_build($fields: String = \"$type,id\", $_DOLLAR_skip: Int, $_DOLLAR_top: Int) { admin_customFieldSettings_bundles_build(fields: $fields, _DOLLAR_skip: $_DOLLAR_skip, _DOLLAR_top: $_DOLLAR_top) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "admin_customFieldSettings_bundles_build"
      type: "[BuildBundle]"
    )
  admin_customFieldSettings_bundles_build_by_id(
    id: String!
    fields: String = "$type,id"
  ): BuildBundle
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/build/{args.id}"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query admin_customFieldSettings_bundles_build_by_id($id: String!, $fields: String = \"$type,id\") { admin_customFieldSettings_bundles_build_by_id(id: $id, fields: $fields) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "admin_customFieldSettings_bundles_build_by_id"
      type: "BuildBundle"
    )
  admin_customFieldSettings_bundles_build_by_id_values(
    id: String!
    fields: String = "$type,assembleDate,color($type,background,foreground,id),id,name,ordinal"
    _DOLLAR_skip: Int
    _DOLLAR_top: Int
  ): [BuildBundleElement]
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/build/{args.id}/values"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\",\\\"$skip\\\":\\\"_DOLLAR_skip\\\",\\\"$top\\\":\\\"_DOLLAR_top\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query admin_customFieldSettings_bundles_build_by_id_values($id: String!, $fields: String = \"$type,assembleDate,color($type,background,foreground,id),id,name,ordinal\", $_DOLLAR_skip: Int, $_DOLLAR_top: Int) { admin_customFieldSettings_bundles_build_by_id_values(id: $id, fields: $fields, _DOLLAR_skip: $_DOLLAR_skip, _DOLLAR_top: $_DOLLAR_top) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "admin_customFieldSettings_bundles_build_by_id_values"
      type: "[BuildBundleElement]"
    )
  admin_customFieldSettings_bundles_build_by_id_values_by_buildBundleElementId(
    id: String!
    buildBundleElementId: String!
    fields: String = "$type,assembleDate,color($type,background,foreground,id),id,name,ordinal"
  ): BuildBundleElement
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/build/{args.id}/values/{args.buildBundleElementId}"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query admin_customFieldSettings_bundles_build_by_id_values_by_buildBundleElementId($id: String!, $buildBundleElementId: String!, $fields: String = \"$type,assembleDate,color($type,background,foreground,id),id,name,ordinal\") { admin_customFieldSettings_bundles_build_by_id_values_by_buildBundleElementId(id: $id, buildBundleElementId: $buildBundleElementId, fields: $fields) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "admin_customFieldSettings_bundles_build_by_id_values_by_buildBundleElementId"
      type: "BuildBundleElement"
    )
  admin_customFieldSettings_bundles_enum(
    fields: String = "$type,id"
    _DOLLAR_skip: Int
    _DOLLAR_top: Int
  ): [EnumBundle]
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/enum"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\",\\\"$skip\\\":\\\"_DOLLAR_skip\\\",\\\"$top\\\":\\\"_DOLLAR_top\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query admin_customFieldSettings_bundles_enum($fields: String = \"$type,id\", $_DOLLAR_skip: Int, $_DOLLAR_top: Int) { admin_customFieldSettings_bundles_enum(fields: $fields, _DOLLAR_skip: $_DOLLAR_skip, _DOLLAR_top: $_DOLLAR_top) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "admin_customFieldSettings_bundles_enum"
      type: "[EnumBundle]"
    )
  admin_customFieldSettings_bundles_enum_by_id(
    id: String!
    fields: String = "$type,id"
  ): EnumBundle
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/enum/{args.id}"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query admin_customFieldSettings_bundles_enum_by_id($id: String!, $fields: String = \"$type,id\") { admin_customFieldSettings_bundles_enum_by_id(id: $id, fields: $fields) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "admin_customFieldSettings_bundles_enum_by_id"
      type: "EnumBundle"
    )
  admin_customFieldSettings_bundles_enum_by_id_values(
    id: String!
    fields: String = "$type,color($type,background,foreground,id),id,localizedName,name,ordinal"
    _DOLLAR_skip: Int
    _DOLLAR_top: Int
  ): [EnumBundleElement]
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/enum/{args.id}/values"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\",\\\"$skip\\\":\\\"_DOLLAR_skip\\\",\\\"$top\\\":\\\"_DOLLAR_top\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query admin_customFieldSettings_bundles_enum_by_id_values($id: String!, $fields: String = \"$type,color($type,background,foreground,id),id,localizedName,name,ordinal\", $_DOLLAR_skip: Int, $_DOLLAR_top: Int) { admin_customFieldSettings_bundles_enum_by_id_values(id: $id, fields: $fields, _DOLLAR_skip: $_DOLLAR_skip, _DOLLAR_top: $_DOLLAR_top) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "admin_customFieldSettings_bundles_enum_by_id_values"
      type: "[EnumBundleElement]"
    )
  admin_customFieldSettings_bundles_enum_by_id_values_by_enumBundleElementId(
    id: String!
    enumBundleElementId: String!
    fields: String = "$type,color($type,background,foreground,id),id,localizedName,name,ordinal"
  ): EnumBundleElement
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/enum/{args.id}/values/{args.enumBundleElementId}"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query admin_customFieldSettings_bundles_enum_by_id_values_by_enumBundleElementId($id: String!, $enumBundleElementId: String!, $fields: String = \"$type,color($type,background,foreground,id),id,localizedName,name,ordinal\") { admin_customFieldSettings_bundles_enum_by_id_values_by_enumBundleElementId(id: $id, enumBundleElementId: $enumBundleElementId, fields: $fields) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "admin_customFieldSettings_bundles_enum_by_id_values_by_enumBundleElementId"
      type: "EnumBundleElement"
    )
  admin_customFieldSettings_bundles_ownedField(
    fields: String = "$type,id"
    _DOLLAR_skip: Int
    _DOLLAR_top: Int
  ): [OwnedBundle]
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/ownedField"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\",\\\"$skip\\\":\\\"_DOLLAR_skip\\\",\\\"$top\\\":\\\"_DOLLAR_top\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query admin_customFieldSettings_bundles_ownedField($fields: String = \"$type,id\", $_DOLLAR_skip: Int, $_DOLLAR_top: Int) { admin_customFieldSettings_bundles_ownedField(fields: $fields, _DOLLAR_skip: $_DOLLAR_skip, _DOLLAR_top: $_DOLLAR_top) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "admin_customFieldSettings_bundles_ownedField"
      type: "[OwnedBundle]"
    )
  admin_customFieldSettings_bundles_ownedField_by_id(
    id: String!
    fields: String = "$type,id"
  ): OwnedBundle
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/ownedField/{args.id}"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query admin_customFieldSettings_bundles_ownedField_by_id($id: String!, $fields: String = \"$type,id\") { admin_customFieldSettings_bundles_ownedField_by_id(id: $id, fields: $fields) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "admin_customFieldSettings_bundles_ownedField_by_id"
      type: "OwnedBundle"
    )
  admin_customFieldSettings_bundles_ownedField_by_id_values(
    id: String!
    fields: String = "$type,color($type,background,foreground,id),id,name,ordinal,owner($type,id,login,ringId)"
    _DOLLAR_skip: Int
    _DOLLAR_top: Int
  ): [OwnedBundleElement]
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/ownedField/{args.id}/values"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\",\\\"$skip\\\":\\\"_DOLLAR_skip\\\",\\\"$top\\\":\\\"_DOLLAR_top\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query admin_customFieldSettings_bundles_ownedField_by_id_values($id: String!, $fields: String = \"$type,color($type,background,foreground,id),id,name,ordinal,owner($type,id,login,ringId)\", $_DOLLAR_skip: Int, $_DOLLAR_top: Int) { admin_customFieldSettings_bundles_ownedField_by_id_values(id: $id, fields: $fields, _DOLLAR_skip: $_DOLLAR_skip, _DOLLAR_top: $_DOLLAR_top) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "admin_customFieldSettings_bundles_ownedField_by_id_values"
      type: "[OwnedBundleElement]"
    )
  admin_customFieldSettings_bundles_ownedField_by_id_values_by_ownedBundleElementId(
    id: String!
    ownedBundleElementId: String!
    fields: String = "$type,color($type,background,foreground,id),id,name,ordinal,owner($type,id,login,ringId)"
  ): OwnedBundleElement
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/ownedField/{args.id}/values/{args.ownedBundleElementId}"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query admin_customFieldSettings_bundles_ownedField_by_id_values_by_ownedBundleElementId($id: String!, $ownedBundleElementId: String!, $fields: String = \"$type,color($type,background,foreground,id),id,name,ordinal,owner($type,id,login,ringId)\") { admin_customFieldSettings_bundles_ownedField_by_id_values_by_ownedBundleElementId(id: $id, ownedBundleElementId: $ownedBundleElementId, fields: $fields) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "admin_customFieldSettings_bundles_ownedField_by_id_values_by_ownedBundleElementId"
      type: "OwnedBundleElement"
    )
  admin_customFieldSettings_bundles_state(
    fields: String = "$type,id"
    _DOLLAR_skip: Int
    _DOLLAR_top: Int
  ): [StateBundle]
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/state"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\",\\\"$skip\\\":\\\"_DOLLAR_skip\\\",\\\"$top\\\":\\\"_DOLLAR_top\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query admin_customFieldSettings_bundles_state($fields: String = \"$type,id\", $_DOLLAR_skip: Int, $_DOLLAR_top: Int) { admin_customFieldSettings_bundles_state(fields: $fields, _DOLLAR_skip: $_DOLLAR_skip, _DOLLAR_top: $_DOLLAR_top) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "admin_customFieldSettings_bundles_state"
      type: "[StateBundle]"
    )
  admin_customFieldSettings_bundles_state_by_id(
    id: String!
    fields: String = "$type,id"
  ): StateBundle
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/state/{args.id}"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query admin_customFieldSettings_bundles_state_by_id($id: String!, $fields: String = \"$type,id\") { admin_customFieldSettings_bundles_state_by_id(id: $id, fields: $fields) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "admin_customFieldSettings_bundles_state_by_id"
      type: "StateBundle"
    )
  admin_customFieldSettings_bundles_state_by_id_values(
    id: String!
    fields: String = "$type,color($type,background,foreground,id),id,isResolved,localizedName,name,ordinal"
    _DOLLAR_skip: Int
    _DOLLAR_top: Int
  ): [StateBundleElement]
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/state/{args.id}/values"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\",\\\"$skip\\\":\\\"_DOLLAR_skip\\\",\\\"$top\\\":\\\"_DOLLAR_top\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query admin_customFieldSettings_bundles_state_by_id_values($id: String!, $fields: String = \"$type,color($type,background,foreground,id),id,isResolved,localizedName,name,ordinal\", $_DOLLAR_skip: Int, $_DOLLAR_top: Int) { admin_customFieldSettings_bundles_state_by_id_values(id: $id, fields: $fields, _DOLLAR_skip: $_DOLLAR_skip, _DOLLAR_top: $_DOLLAR_top) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "admin_customFieldSettings_bundles_state_by_id_values"
      type: "[StateBundleElement]"
    )
  admin_customFieldSettings_bundles_state_by_id_values_by_stateBundleElementId(
    id: String!
    stateBundleElementId: String!
    fields: String = "$type,color($type,background,foreground,id),id,isResolved,localizedName,name,ordinal"
  ): StateBundleElement
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/state/{args.id}/values/{args.stateBundleElementId}"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query admin_customFieldSettings_bundles_state_by_id_values_by_stateBundleElementId($id: String!, $stateBundleElementId: String!, $fields: String = \"$type,color($type,background,foreground,id),id,isResolved,localizedName,name,ordinal\") { admin_customFieldSettings_bundles_state_by_id_values_by_stateBundleElementId(id: $id, stateBundleElementId: $stateBundleElementId, fields: $fields) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "admin_customFieldSettings_bundles_state_by_id_values_by_stateBundleElementId"
      type: "StateBundleElement"
    )
  admin_customFieldSettings_bundles_user(
    fields: String = "$type,id"
    _DOLLAR_skip: Int
    _DOLLAR_top: Int
  ): [UserBundle]
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/user"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\",\\\"$skip\\\":\\\"_DOLLAR_skip\\\",\\\"$top\\\":\\\"_DOLLAR_top\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query admin_customFieldSettings_bundles_user($fields: String = \"$type,id\", $_DOLLAR_skip: Int, $_DOLLAR_top: Int) { admin_customFieldSettings_bundles_user(fields: $fields, _DOLLAR_skip: $_DOLLAR_skip, _DOLLAR_top: $_DOLLAR_top) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "admin_customFieldSettings_bundles_user"
      type: "[UserBundle]"
    )
  admin_customFieldSettings_bundles_user_by_id(
    id: String!
    fields: String = "$type,id"
  ): UserBundle
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/user/{args.id}"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query admin_customFieldSettings_bundles_user_by_id($id: String!, $fields: String = \"$type,id\") { admin_customFieldSettings_bundles_user_by_id(id: $id, fields: $fields) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "admin_customFieldSettings_bundles_user_by_id"
      type: "UserBundle"
    )
  admin_customFieldSettings_bundles_user_by_id_aggregatedUsers(
    id: String!
    fields: String = "$type,banned,email,fullName,guest,id,login,ringId"
    _DOLLAR_skip: Int
    _DOLLAR_top: Int
  ): [User]
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/user/{args.id}/aggregatedUsers"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\",\\\"$skip\\\":\\\"_DOLLAR_skip\\\",\\\"$top\\\":\\\"_DOLLAR_top\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query admin_customFieldSettings_bundles_user_by_id_aggregatedUsers($id: String!, $fields: String = \"$type,banned,email,fullName,guest,id,login,ringId\", $_DOLLAR_skip: Int, $_DOLLAR_top: Int) { admin_customFieldSettings_bundles_user_by_id_aggregatedUsers(id: $id, fields: $fields, _DOLLAR_skip: $_DOLLAR_skip, _DOLLAR_top: $_DOLLAR_top) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "admin_customFieldSettings_bundles_user_by_id_aggregatedUsers"
      type: "[User]"
    )
  admin_customFieldSettings_bundles_user_by_id_groups(
    id: String!
    fields: String = "$type,allUsersGroup,id,name,ringId"
    _DOLLAR_skip: Int
    _DOLLAR_top: Int
  ): [UserGroup]
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/user/{args.id}/groups"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\",\\\"$skip\\\":\\\"_DOLLAR_skip\\\",\\\"$top\\\":\\\"_DOLLAR_top\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query admin_customFieldSettings_bundles_user_by_id_groups($id: String!, $fields: String = \"$type,allUsersGroup,id,name,ringId\", $_DOLLAR_skip: Int, $_DOLLAR_top: Int) { admin_customFieldSettings_bundles_user_by_id_groups(id: $id, fields: $fields, _DOLLAR_skip: $_DOLLAR_skip, _DOLLAR_top: $_DOLLAR_top) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "admin_customFieldSettings_bundles_user_by_id_groups"
      type: "[UserGroup]"
    )
  admin_customFieldSettings_bundles_user_by_id_groups_by_userGroupId(
    id: String!
    userGroupId: String!
    fields: String = "$type,allUsersGroup,id,name,ringId"
  ): UserGroup
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/user/{args.id}/groups/{args.userGroupId}"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query admin_customFieldSettings_bundles_user_by_id_groups_by_userGroupId($id: String!, $userGroupId: String!, $fields: String = \"$type,allUsersGroup,id,name,ringId\") { admin_customFieldSettings_bundles_user_by_id_groups_by_userGroupId(id: $id, userGroupId: $userGroupId, fields: $fields) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "admin_customFieldSettings_bundles_user_by_id_groups_by_userGroupId"
      type: "UserGroup"
    )
  admin_customFieldSettings_bundles_user_by_id_individuals(
    id: String!
    fields: String = "$type,banned,email,fullName,guest,id,login,ringId"
    _DOLLAR_skip: Int
    _DOLLAR_top: Int
  ): [User]
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/user/{args.id}/individuals"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\",\\\"$skip\\\":\\\"_DOLLAR_skip\\\",\\\"$top\\\":\\\"_DOLLAR_top\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query admin_customFieldSettings_bundles_user_by_id_individuals($id: String!, $fields: String = \"$type,banned,email,fullName,guest,id,login,ringId\", $_DOLLAR_skip: Int, $_DOLLAR_top: Int) { admin_customFieldSettings_bundles_user_by_id_individuals(id: $id, fields: $fields, _DOLLAR_skip: $_DOLLAR_skip, _DOLLAR_top: $_DOLLAR_top) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "admin_customFieldSettings_bundles_user_by_id_individuals"
      type: "[User]"
    )
  admin_customFieldSettings_bundles_user_by_id_individuals_by_userId(
    id: String!
    userId: String!
    fields: String = "$type,banned,email,fullName,guest,id,login,ringId"
  ): User
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/user/{args.id}/individuals/{args.userId}"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query admin_customFieldSettings_bundles_user_by_id_individuals_by_userId($id: String!, $userId: String!, $fields: String = \"$type,banned,email,fullName,guest,id,login,ringId\") { admin_customFieldSettings_bundles_user_by_id_individuals_by_userId(id: $id, userId: $userId, fields: $fields) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "admin_customFieldSettings_bundles_user_by_id_individuals_by_userId"
      type: "User"
    )
  admin_customFieldSettings_bundles_version(
    fields: String = "$type,id"
    _DOLLAR_skip: Int
    _DOLLAR_top: Int
  ): [VersionBundle]
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/version"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\",\\\"$skip\\\":\\\"_DOLLAR_skip\\\",\\\"$top\\\":\\\"_DOLLAR_top\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query admin_customFieldSettings_bundles_version($fields: String = \"$type,id\", $_DOLLAR_skip: Int, $_DOLLAR_top: Int) { admin_customFieldSettings_bundles_version(fields: $fields, _DOLLAR_skip: $_DOLLAR_skip, _DOLLAR_top: $_DOLLAR_top) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "admin_customFieldSettings_bundles_version"
      type: "[VersionBundle]"
    )
  admin_customFieldSettings_bundles_version_by_id(
    id: String!
    fields: String = "$type,id"
  ): VersionBundle
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/version/{args.id}"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query admin_customFieldSettings_bundles_version_by_id($id: String!, $fields: String = \"$type,id\") { admin_customFieldSettings_bundles_version_by_id(id: $id, fields: $fields) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "admin_customFieldSettings_bundles_version_by_id"
      type: "VersionBundle"
    )
  admin_customFieldSettings_bundles_version_by_id_values(
    id: String!
    fields: String = "$type,archived,color($type,background,foreground,id),id,name,ordinal,releaseDate,released"
    _DOLLAR_skip: Int
    _DOLLAR_top: Int
  ): [VersionBundleElement]
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/version/{args.id}/values"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\",\\\"$skip\\\":\\\"_DOLLAR_skip\\\",\\\"$top\\\":\\\"_DOLLAR_top\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query admin_customFieldSettings_bundles_version_by_id_values($id: String!, $fields: String = \"$type,archived,color($type,background,foreground,id),id,name,ordinal,releaseDate,released\", $_DOLLAR_skip: Int, $_DOLLAR_top: Int) { admin_customFieldSettings_bundles_version_by_id_values(id: $id, fields: $fields, _DOLLAR_skip: $_DOLLAR_skip, _DOLLAR_top: $_DOLLAR_top) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "admin_customFieldSettings_bundles_version_by_id_values"
      type: "[VersionBundleElement]"
    )
  admin_customFieldSettings_bundles_version_by_id_values_by_versionBundleElementId(
    id: String!
    versionBundleElementId: String!
    fields: String = "$type,archived,color($type,background,foreground,id),id,name,ordinal,releaseDate,released"
  ): VersionBundleElement
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/version/{args.id}/values/{args.versionBundleElementId}"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query admin_customFieldSettings_bundles_version_by_id_values_by_versionBundleElementId($id: String!, $versionBundleElementId: String!, $fields: String = \"$type,archived,color($type,background,foreground,id),id,name,ordinal,releaseDate,released\") { admin_customFieldSettings_bundles_version_by_id_values_by_versionBundleElementId(id: $id, versionBundleElementId: $versionBundleElementId, fields: $fields) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "admin_customFieldSettings_bundles_version_by_id_values_by_versionBundleElementId"
      type: "VersionBundleElement"
    )
  admin_customFieldSettings_customFields(
    fields: String = "$type,fieldType($type,id),id,isAutoAttached,isUpdateable,localizedName,name,ordinal"
    _DOLLAR_skip: Int
    _DOLLAR_top: Int
  ): [CustomField]
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/customFields"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\",\\\"$skip\\\":\\\"_DOLLAR_skip\\\",\\\"$top\\\":\\\"_DOLLAR_top\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query admin_customFieldSettings_customFields($fields: String = \"$type,fieldType($type,id),id,isAutoAttached,isUpdateable,localizedName,name,ordinal\", $_DOLLAR_skip: Int, $_DOLLAR_top: Int) { admin_customFieldSettings_customFields(fields: $fields, _DOLLAR_skip: $_DOLLAR_skip, _DOLLAR_top: $_DOLLAR_top) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "admin_customFieldSettings_customFields"
      type: "[CustomField]"
    )
  admin_customFieldSettings_customFields_by_id(
    id: String!
    fields: String = "$type,fieldType($type,id),id,isAutoAttached,isUpdateable,localizedName,name,ordinal"
  ): CustomField
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/customFields/{args.id}"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query admin_customFieldSettings_customFields_by_id($id: String!, $fields: String = \"$type,fieldType($type,id),id,isAutoAttached,isUpdateable,localizedName,name,ordinal\") { admin_customFieldSettings_customFields_by_id(id: $id, fields: $fields) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "admin_customFieldSettings_customFields_by_id"
      type: "CustomField"
    )
  admin_customFieldSettings_customFields_by_id_fieldDefaults(
    id: String!
    fields: String = "$type,bundle($type,id),canBeEmpty,defaultValues($type,id,name),emptyFieldText,id,isPublic"
  ): CustomFieldDefaults
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/customFields/{args.id}/fieldDefaults"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query admin_customFieldSettings_customFields_by_id_fieldDefaults($id: String!, $fields: String = \"$type,bundle($type,id),canBeEmpty,defaultValues($type,id,name),emptyFieldText,id,isPublic\") { admin_customFieldSettings_customFields_by_id_fieldDefaults(id: $id, fields: $fields) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "admin_customFieldSettings_customFields_by_id_fieldDefaults"
      type: "CustomFieldDefaults"
    )
  admin_customFieldSettings_customFields_by_id_instances(
    id: String!
    fields: String = "$type,bundle($type,id),canBeEmpty,defaultValues($type,id,name),emptyFieldText,field($type,fieldType($type,id),id,localizedName,name),id,isPublic,ordinal"
    _DOLLAR_skip: Int
    _DOLLAR_top: Int
  ): [ProjectCustomField]
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/customFields/{args.id}/instances"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\",\\\"$skip\\\":\\\"_DOLLAR_skip\\\",\\\"$top\\\":\\\"_DOLLAR_top\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query admin_customFieldSettings_customFields_by_id_instances($id: String!, $fields: String = \"$type,bundle($type,id),canBeEmpty,defaultValues($type,id,name),emptyFieldText,field($type,fieldType($type,id),id,localizedName,name),id,isPublic,ordinal\", $_DOLLAR_skip: Int, $_DOLLAR_top: Int) { admin_customFieldSettings_customFields_by_id_instances(id: $id, fields: $fields, _DOLLAR_skip: $_DOLLAR_skip, _DOLLAR_top: $_DOLLAR_top) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "admin_customFieldSettings_customFields_by_id_instances"
      type: "[ProjectCustomField]"
    )
  admin_customFieldSettings_types(
    fields: String = "$type,id"
    _DOLLAR_skip: Int
    _DOLLAR_top: Int
  ): [FieldType]
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/types"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\",\\\"$skip\\\":\\\"_DOLLAR_skip\\\",\\\"$top\\\":\\\"_DOLLAR_top\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query admin_customFieldSettings_types($fields: String = \"$type,id\", $_DOLLAR_skip: Int, $_DOLLAR_top: Int) { admin_customFieldSettings_types(fields: $fields, _DOLLAR_skip: $_DOLLAR_skip, _DOLLAR_top: $_DOLLAR_top) }"
    )
    @source(subgraph: "YouTrack", name: "admin_customFieldSettings_types", type: "[FieldType]")
  admin_databaseBackup_backups(
    fields: String = "$type,creationDate,id,link,name,size"
    _DOLLAR_skip: Int
    _DOLLAR_top: Int
  ): [BackupFile]
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/databaseBackup/backups"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\",\\\"$skip\\\":\\\"_DOLLAR_skip\\\",\\\"$top\\\":\\\"_DOLLAR_top\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query admin_databaseBackup_backups($fields: String = \"$type,creationDate,id,link,name,size\", $_DOLLAR_skip: Int, $_DOLLAR_top: Int) { admin_databaseBackup_backups(fields: $fields, _DOLLAR_skip: $_DOLLAR_skip, _DOLLAR_top: $_DOLLAR_top) }"
    )
    @source(subgraph: "YouTrack", name: "admin_databaseBackup_backups", type: "[BackupFile]")
  admin_databaseBackup_backups_by_id(
    id: String!
    fields: String = "$type,creationDate,id,link,name,size"
  ): BackupFile
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/databaseBackup/backups/{args.id}"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query admin_databaseBackup_backups_by_id($id: String!, $fields: String = \"$type,creationDate,id,link,name,size\") { admin_databaseBackup_backups_by_id(id: $id, fields: $fields) }"
    )
    @source(subgraph: "YouTrack", name: "admin_databaseBackup_backups_by_id", type: "BackupFile")
  admin_databaseBackup_settings(
    fields: String = "$type,availableDiskSpace,backupStatus($type,backupCancelled,backupError($type,date,errorMessage,id),backupInProgress,id),id,isOn,location"
  ): DatabaseBackupSettings
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/databaseBackup/settings"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query admin_databaseBackup_settings($fields: String = \"$type,availableDiskSpace,backupStatus($type,backupCancelled,backupError($type,date,errorMessage,id),backupInProgress,id),id,isOn,location\") { admin_databaseBackup_settings(fields: $fields) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "admin_databaseBackup_settings"
      type: "DatabaseBackupSettings"
    )
  admin_databaseBackup_settings_backupStatus(
    fields: String = "$type,backupCancelled,backupError($type,date,errorMessage,id),backupInProgress,id"
  ): BackupStatus
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/databaseBackup/settings/backupStatus"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query admin_databaseBackup_settings_backupStatus($fields: String = \"$type,backupCancelled,backupError($type,date,errorMessage,id),backupInProgress,id\") { admin_databaseBackup_settings_backupStatus(fields: $fields) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "admin_databaseBackup_settings_backupStatus"
      type: "BackupStatus"
    )
  admin_globalSettings(
    fields: String = "$type,appearanceSettings($type,dateFieldFormat($type,datePattern,id,pattern,presentation),id,timeZone($type,id,offset,presentation)),id,license($type,error,id,license,username),localeSettings($type,id,isRTL,locale($type,community,id,language,locale,name)),notificationSettings($type,emailSettings($type,id,isEnabled),id),restSettings($type,allowAllOrigins,allowedOrigins,id),systemSettings($type,baseUrl,id,isApplicationReadOnly,maxExportItems,maxUploadFileSize)"
  ): GlobalSettings
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/globalSettings"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query admin_globalSettings($fields: String = \"$type,appearanceSettings($type,dateFieldFormat($type,datePattern,id,pattern,presentation),id,timeZone($type,id,offset,presentation)),id,license($type,error,id,license,username),localeSettings($type,id,isRTL,locale($type,community,id,language,locale,name)),notificationSettings($type,emailSettings($type,id,isEnabled),id),restSettings($type,allowAllOrigins,allowedOrigins,id),systemSettings($type,baseUrl,id,isApplicationReadOnly,maxExportItems,maxUploadFileSize)\") { admin_globalSettings(fields: $fields) }"
    )
    @source(subgraph: "YouTrack", name: "admin_globalSettings", type: "GlobalSettings")
  admin_globalSettings_appearanceSettings(
    fields: String = "$type,dateFieldFormat($type,datePattern,id,pattern,presentation),id,timeZone($type,id,offset,presentation)"
  ): AppearanceSettings
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/globalSettings/appearanceSettings"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query admin_globalSettings_appearanceSettings($fields: String = \"$type,dateFieldFormat($type,datePattern,id,pattern,presentation),id,timeZone($type,id,offset,presentation)\") { admin_globalSettings_appearanceSettings(fields: $fields) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "admin_globalSettings_appearanceSettings"
      type: "AppearanceSettings"
    )
  admin_globalSettings_license(fields: String = "$type,error,id,license,username"): License
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/globalSettings/license"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query admin_globalSettings_license($fields: String = \"$type,error,id,license,username\") { admin_globalSettings_license(fields: $fields) }"
    )
    @source(subgraph: "YouTrack", name: "admin_globalSettings_license", type: "License")
  admin_globalSettings_localeSettings(
    fields: String = "$type,id,isRTL,locale($type,community,id,language,locale,name)"
  ): LocaleSettings
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/globalSettings/localeSettings"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query admin_globalSettings_localeSettings($fields: String = \"$type,id,isRTL,locale($type,community,id,language,locale,name)\") { admin_globalSettings_localeSettings(fields: $fields) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "admin_globalSettings_localeSettings"
      type: "LocaleSettings"
    )
  admin_globalSettings_notificationSettings(
    fields: String = "$type,emailSettings($type,id,isEnabled),id"
  ): NotificationSettings
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/globalSettings/notificationSettings"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query admin_globalSettings_notificationSettings($fields: String = \"$type,emailSettings($type,id,isEnabled),id\") { admin_globalSettings_notificationSettings(fields: $fields) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "admin_globalSettings_notificationSettings"
      type: "NotificationSettings"
    )
  admin_globalSettings_restSettings(
    fields: String = "$type,allowAllOrigins,allowedOrigins,id"
  ): RestCorsSettings
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/globalSettings/restSettings"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query admin_globalSettings_restSettings($fields: String = \"$type,allowAllOrigins,allowedOrigins,id\") { admin_globalSettings_restSettings(fields: $fields) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "admin_globalSettings_restSettings"
      type: "RestCorsSettings"
    )
  admin_globalSettings_systemSettings(
    fields: String = "$type,baseUrl,id,isApplicationReadOnly,maxExportItems,maxUploadFileSize"
  ): SystemSettings
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/globalSettings/systemSettings"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query admin_globalSettings_systemSettings($fields: String = \"$type,baseUrl,id,isApplicationReadOnly,maxExportItems,maxUploadFileSize\") { admin_globalSettings_systemSettings(fields: $fields) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "admin_globalSettings_systemSettings"
      type: "SystemSettings"
    )
  admin_projects(
    fields: String = "$type,archived,customFields,id,leader($type,id,login,ringId),name,shortName"
    _DOLLAR_skip: Int
    _DOLLAR_top: Int
  ): [Project]
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/projects"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\",\\\"$skip\\\":\\\"_DOLLAR_skip\\\",\\\"$top\\\":\\\"_DOLLAR_top\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query admin_projects($fields: String = \"$type,archived,customFields,id,leader($type,id,login,ringId),name,shortName\", $_DOLLAR_skip: Int, $_DOLLAR_top: Int) { admin_projects(fields: $fields, _DOLLAR_skip: $_DOLLAR_skip, _DOLLAR_top: $_DOLLAR_top) }"
    )
    @source(subgraph: "YouTrack", name: "admin_projects", type: "[Project]")
  admin_projects_by_id(
    id: String!
    fields: String = "$type,archived,customFields,id,leader($type,id,login,ringId),name,shortName"
  ): Project
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/projects/{args.id}"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query admin_projects_by_id($id: String!, $fields: String = \"$type,archived,customFields,id,leader($type,id,login,ringId),name,shortName\") { admin_projects_by_id(id: $id, fields: $fields) }"
    )
    @source(subgraph: "YouTrack", name: "admin_projects_by_id", type: "Project")
  admin_projects_by_id_articles(
    id: String!
    fields: String = "$type,content,created,id,idReadable,parentArticle($type,id,idReadable),project($type,id,name,shortName),summary,updated,updatedBy($type,id,login,ringId)"
    _DOLLAR_skip: Int
    _DOLLAR_top: Int
  ): [Article]
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/projects/{args.id}/articles"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\",\\\"$skip\\\":\\\"_DOLLAR_skip\\\",\\\"$top\\\":\\\"_DOLLAR_top\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query admin_projects_by_id_articles($id: String!, $fields: String = \"$type,content,created,id,idReadable,parentArticle($type,id,idReadable),project($type,id,name,shortName),summary,updated,updatedBy($type,id,login,ringId)\", $_DOLLAR_skip: Int, $_DOLLAR_top: Int) { admin_projects_by_id_articles(id: $id, fields: $fields, _DOLLAR_skip: $_DOLLAR_skip, _DOLLAR_top: $_DOLLAR_top) }"
    )
    @source(subgraph: "YouTrack", name: "admin_projects_by_id_articles", type: "[Article]")
  admin_projects_by_id_customFields(
    id: String!
    fields: String = "$type,bundle($type,id),canBeEmpty,defaultValues($type,id,name),emptyFieldText,field($type,fieldType($type,id),id,localizedName,name),id,isPublic,ordinal"
    _DOLLAR_skip: Int
    _DOLLAR_top: Int
  ): [ProjectCustomField]
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/projects/{args.id}/customFields"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\",\\\"$skip\\\":\\\"_DOLLAR_skip\\\",\\\"$top\\\":\\\"_DOLLAR_top\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query admin_projects_by_id_customFields($id: String!, $fields: String = \"$type,bundle($type,id),canBeEmpty,defaultValues($type,id,name),emptyFieldText,field($type,fieldType($type,id),id,localizedName,name),id,isPublic,ordinal\", $_DOLLAR_skip: Int, $_DOLLAR_top: Int) { admin_projects_by_id_customFields(id: $id, fields: $fields, _DOLLAR_skip: $_DOLLAR_skip, _DOLLAR_top: $_DOLLAR_top) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "admin_projects_by_id_customFields"
      type: "[ProjectCustomField]"
    )
  admin_projects_by_id_customFields_by_projectCustomFieldId(
    id: String!
    projectCustomFieldId: String!
    fields: String = "$type,bundle($type,id),canBeEmpty,defaultValues($type,id,name),emptyFieldText,field($type,fieldType($type,id),id,localizedName,name),id,isPublic,ordinal"
  ): ProjectCustomField
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/projects/{args.id}/customFields/{args.projectCustomFieldId}"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query admin_projects_by_id_customFields_by_projectCustomFieldId($id: String!, $projectCustomFieldId: String!, $fields: String = \"$type,bundle($type,id),canBeEmpty,defaultValues($type,id,name),emptyFieldText,field($type,fieldType($type,id),id,localizedName,name),id,isPublic,ordinal\") { admin_projects_by_id_customFields_by_projectCustomFieldId(id: $id, projectCustomFieldId: $projectCustomFieldId, fields: $fields) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "admin_projects_by_id_customFields_by_projectCustomFieldId"
      type: "ProjectCustomField"
    )
  admin_projects_by_id_issues(
    id: String!
    "<p>The name of the custom field to show in the response. When you use this parameter and request the custom field data in the request URL, the response only shows the requested custom fields instead of all of them.</p><p>To show more than one custom field, use this parameter several times.</p><p>See Sample 2 for reference.</p>"
    customFields: String
    fields: String = "$type,created,customFields($type,id,name,value($type,id,name)),description,id,idReadable,links($type,direction,id,linkType($type,id,localizedName,name)),numberInProject,project($type,id,name,shortName),reporter($type,id,login,ringId),resolved,summary,updated,updater($type,id,login,ringId),visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,ringId))"
    _DOLLAR_skip: Int
    _DOLLAR_top: Int
  ): [Issue]
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/projects/{args.id}/issues"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"customFields\\\":\\\"customFields\\\",\\\"fields\\\":\\\"fields\\\",\\\"$skip\\\":\\\"_DOLLAR_skip\\\",\\\"$top\\\":\\\"_DOLLAR_top\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query admin_projects_by_id_issues($id: String!, $customFields: String, $fields: String = \"$type,created,customFields($type,id,name,value($type,id,name)),description,id,idReadable,links($type,direction,id,linkType($type,id,localizedName,name)),numberInProject,project($type,id,name,shortName),reporter($type,id,login,ringId),resolved,summary,updated,updater($type,id,login,ringId),visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,ringId))\", $_DOLLAR_skip: Int, $_DOLLAR_top: Int) { admin_projects_by_id_issues(id: $id, customFields: $customFields, fields: $fields, _DOLLAR_skip: $_DOLLAR_skip, _DOLLAR_top: $_DOLLAR_top) }"
    )
    @source(subgraph: "YouTrack", name: "admin_projects_by_id_issues", type: "[Issue]")
  admin_projects_by_id_issues_by_issueId(
    id: String!
    issueId: String!
    fields: String = "$type,created,customFields($type,id,name,value($type,id,name)),description,id,idReadable,links($type,direction,id,linkType($type,id,localizedName,name)),numberInProject,project($type,id,name,shortName),reporter($type,id,login,ringId),resolved,summary,updated,updater($type,id,login,ringId),visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,ringId))"
  ): Issue
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/projects/{args.id}/issues/{args.issueId}"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query admin_projects_by_id_issues_by_issueId($id: String!, $issueId: String!, $fields: String = \"$type,created,customFields($type,id,name,value($type,id,name)),description,id,idReadable,links($type,direction,id,linkType($type,id,localizedName,name)),numberInProject,project($type,id,name,shortName),reporter($type,id,login,ringId),resolved,summary,updated,updater($type,id,login,ringId),visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,ringId))\") { admin_projects_by_id_issues_by_issueId(id: $id, issueId: $issueId, fields: $fields) }"
    )
    @source(subgraph: "YouTrack", name: "admin_projects_by_id_issues_by_issueId", type: "Issue")
  admin_projects_by_id_timeTrackingSettings(
    id: String!
    fields: String = "$type,enabled,estimate($type,field($type,fieldType($type,id),id,localizedName,name),id),id,timeSpent($type,field($type,fieldType($type,id),id,localizedName,name),id)"
  ): ProjectTimeTrackingSettings
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/projects/{args.id}/timeTrackingSettings"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query admin_projects_by_id_timeTrackingSettings($id: String!, $fields: String = \"$type,enabled,estimate($type,field($type,fieldType($type,id),id,localizedName,name),id),id,timeSpent($type,field($type,fieldType($type,id),id,localizedName,name),id)\") { admin_projects_by_id_timeTrackingSettings(id: $id, fields: $fields) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "admin_projects_by_id_timeTrackingSettings"
      type: "ProjectTimeTrackingSettings"
    )
  admin_projects_by_id_timeTrackingSettings_workItemTypes(
    id: String!
    fields: String = "$type,autoAttached,id,name"
    _DOLLAR_skip: Int
    _DOLLAR_top: Int
  ): [WorkItemType]
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/projects/{args.id}/timeTrackingSettings/workItemTypes"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\",\\\"$skip\\\":\\\"_DOLLAR_skip\\\",\\\"$top\\\":\\\"_DOLLAR_top\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query admin_projects_by_id_timeTrackingSettings_workItemTypes($id: String!, $fields: String = \"$type,autoAttached,id,name\", $_DOLLAR_skip: Int, $_DOLLAR_top: Int) { admin_projects_by_id_timeTrackingSettings_workItemTypes(id: $id, fields: $fields, _DOLLAR_skip: $_DOLLAR_skip, _DOLLAR_top: $_DOLLAR_top) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "admin_projects_by_id_timeTrackingSettings_workItemTypes"
      type: "[WorkItemType]"
    )
  admin_projects_by_id_timeTrackingSettings_workItemTypes_by_workItemTypeId(
    id: String!
    workItemTypeId: String!
    fields: String = "$type,autoAttached,id,name"
  ): WorkItemType
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/projects/{args.id}/timeTrackingSettings/workItemTypes/{args.workItemTypeId}"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query admin_projects_by_id_timeTrackingSettings_workItemTypes_by_workItemTypeId($id: String!, $workItemTypeId: String!, $fields: String = \"$type,autoAttached,id,name\") { admin_projects_by_id_timeTrackingSettings_workItemTypes_by_workItemTypeId(id: $id, workItemTypeId: $workItemTypeId, fields: $fields) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "admin_projects_by_id_timeTrackingSettings_workItemTypes_by_workItemTypeId"
      type: "WorkItemType"
    )
  admin_telemetry(
    fields: String = "$type,allocatedMemory,availableMemory,availableProcessors,blobStringsCacheHitRate,cachedResultsCountInDBQueriesCache,databaseBackgroundThreads,databaseLocation,databaseQueriesCacheHitRate,databaseSize,fullDatabaseSize,id,installationFolder,logsLocation,notificationAnalyzerThreads,onlineUsers($type,id,users),pendingAsyncJobs,reportCalculatorThreads,requestsPerSecond,startedTime,textIndexSize,totalTransactions,transactionsPerSecond,uptime,usedMemory"
  ): Telemetry
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/telemetry"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query admin_telemetry($fields: String = \"$type,allocatedMemory,availableMemory,availableProcessors,blobStringsCacheHitRate,cachedResultsCountInDBQueriesCache,databaseBackgroundThreads,databaseLocation,databaseQueriesCacheHitRate,databaseSize,fullDatabaseSize,id,installationFolder,logsLocation,notificationAnalyzerThreads,onlineUsers($type,id,users),pendingAsyncJobs,reportCalculatorThreads,requestsPerSecond,startedTime,textIndexSize,totalTransactions,transactionsPerSecond,uptime,usedMemory\") { admin_telemetry(fields: $fields) }"
    )
    @source(subgraph: "YouTrack", name: "admin_telemetry", type: "Telemetry")
  admin_timeTrackingSettings(
    fields: String = "$type,id,workItemTypes($type,id,name),workTimeSettings($type,daysAWeek,firstDayOfWeek,id,minutesADay,workDays)"
  ): GlobalTimeTrackingSettings
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/timeTrackingSettings"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query admin_timeTrackingSettings($fields: String = \"$type,id,workItemTypes($type,id,name),workTimeSettings($type,daysAWeek,firstDayOfWeek,id,minutesADay,workDays)\") { admin_timeTrackingSettings(fields: $fields) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "admin_timeTrackingSettings"
      type: "GlobalTimeTrackingSettings"
    )
  admin_timeTrackingSettings_workItemTypes(
    fields: String = "$type,autoAttached,id,name"
    _DOLLAR_skip: Int
    _DOLLAR_top: Int
  ): [WorkItemType]
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/timeTrackingSettings/workItemTypes"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\",\\\"$skip\\\":\\\"_DOLLAR_skip\\\",\\\"$top\\\":\\\"_DOLLAR_top\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query admin_timeTrackingSettings_workItemTypes($fields: String = \"$type,autoAttached,id,name\", $_DOLLAR_skip: Int, $_DOLLAR_top: Int) { admin_timeTrackingSettings_workItemTypes(fields: $fields, _DOLLAR_skip: $_DOLLAR_skip, _DOLLAR_top: $_DOLLAR_top) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "admin_timeTrackingSettings_workItemTypes"
      type: "[WorkItemType]"
    )
  admin_timeTrackingSettings_workItemTypes_by_workItemTypeId(
    workItemTypeId: String!
    fields: String = "$type,autoAttached,id,name"
  ): WorkItemType
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/timeTrackingSettings/workItemTypes/{args.workItemTypeId}"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query admin_timeTrackingSettings_workItemTypes_by_workItemTypeId($workItemTypeId: String!, $fields: String = \"$type,autoAttached,id,name\") { admin_timeTrackingSettings_workItemTypes_by_workItemTypeId(workItemTypeId: $workItemTypeId, fields: $fields) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "admin_timeTrackingSettings_workItemTypes_by_workItemTypeId"
      type: "WorkItemType"
    )
  admin_timeTrackingSettings_workTimeSettings(
    fields: String = "$type,daysAWeek,firstDayOfWeek,id,minutesADay,workDays"
  ): WorkTimeSettings
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/timeTrackingSettings/workTimeSettings"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query admin_timeTrackingSettings_workTimeSettings($fields: String = \"$type,daysAWeek,firstDayOfWeek,id,minutesADay,workDays\") { admin_timeTrackingSettings_workTimeSettings(fields: $fields) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "admin_timeTrackingSettings_workTimeSettings"
      type: "WorkTimeSettings"
    )
  agiles(
    fields: String = "$type,columnSettings($type,columns($type,id),field($type,fieldType($type,id),id,localizedName,name),id),id,name,owner($type,id,login,ringId),projects($type,id,name,shortName),status($type,id,valid),swimlaneSettings($type,enabled,field($type,customField($type,fieldType($type,id),id,localizedName,name),id,name),id,values($type,id,name))"
    _DOLLAR_skip: Int
    _DOLLAR_top: Int
  ): [Agile]
    @httpOperation(
      subgraph: "YouTrack"
      path: "/agiles"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\",\\\"$skip\\\":\\\"_DOLLAR_skip\\\",\\\"$top\\\":\\\"_DOLLAR_top\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query agiles($fields: String = \"$type,columnSettings($type,columns($type,id),field($type,fieldType($type,id),id,localizedName,name),id),id,name,owner($type,id,login,ringId),projects($type,id,name,shortName),status($type,id,valid),swimlaneSettings($type,enabled,field($type,customField($type,fieldType($type,id),id,localizedName,name),id,name),id,values($type,id,name))\", $_DOLLAR_skip: Int, $_DOLLAR_top: Int) { agiles(fields: $fields, _DOLLAR_skip: $_DOLLAR_skip, _DOLLAR_top: $_DOLLAR_top) }"
    )
    @source(subgraph: "YouTrack", name: "agiles", type: "[Agile]")
  agiles_by_id(
    id: String!
    fields: String = "$type,columnSettings($type,columns($type,id),field($type,fieldType($type,id),id,localizedName,name),id),id,name,owner($type,id,login,ringId),projects($type,id,name,shortName),status($type,id,valid),swimlaneSettings($type,enabled,field($type,customField($type,fieldType($type,id),id,localizedName,name),id,name),id,values($type,id,name))"
  ): Agile
    @httpOperation(
      subgraph: "YouTrack"
      path: "/agiles/{args.id}"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query agiles_by_id($id: String!, $fields: String = \"$type,columnSettings($type,columns($type,id),field($type,fieldType($type,id),id,localizedName,name),id),id,name,owner($type,id,login,ringId),projects($type,id,name,shortName),status($type,id,valid),swimlaneSettings($type,enabled,field($type,customField($type,fieldType($type,id),id,localizedName,name),id,name),id,values($type,id,name))\") { agiles_by_id(id: $id, fields: $fields) }"
    )
    @source(subgraph: "YouTrack", name: "agiles_by_id", type: "Agile")
  agiles_by_id_sprints(
    id: String!
    fields: String = "$type,archived,finish,id,isDefault,name,start"
    _DOLLAR_skip: Int
    _DOLLAR_top: Int
  ): [Sprint]
    @httpOperation(
      subgraph: "YouTrack"
      path: "/agiles/{args.id}/sprints"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\",\\\"$skip\\\":\\\"_DOLLAR_skip\\\",\\\"$top\\\":\\\"_DOLLAR_top\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query agiles_by_id_sprints($id: String!, $fields: String = \"$type,archived,finish,id,isDefault,name,start\", $_DOLLAR_skip: Int, $_DOLLAR_top: Int) { agiles_by_id_sprints(id: $id, fields: $fields, _DOLLAR_skip: $_DOLLAR_skip, _DOLLAR_top: $_DOLLAR_top) }"
    )
    @source(subgraph: "YouTrack", name: "agiles_by_id_sprints", type: "[Sprint]")
  agiles_by_id_sprints_by_sprintId(
    id: String!
    sprintId: String!
    fields: String = "$type,archived,finish,id,isDefault,name,start"
  ): Sprint
    @httpOperation(
      subgraph: "YouTrack"
      path: "/agiles/{args.id}/sprints/{args.sprintId}"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query agiles_by_id_sprints_by_sprintId($id: String!, $sprintId: String!, $fields: String = \"$type,archived,finish,id,isDefault,name,start\") { agiles_by_id_sprints_by_sprintId(id: $id, sprintId: $sprintId, fields: $fields) }"
    )
    @source(subgraph: "YouTrack", name: "agiles_by_id_sprints_by_sprintId", type: "Sprint")
  articles(
    fields: String = "$type,content,created,id,idReadable,parentArticle($type,id,idReadable),project($type,id,name,shortName),summary,updated,updatedBy($type,id,login,ringId)"
    _DOLLAR_skip: Int
    _DOLLAR_top: Int
  ): [Article]
    @httpOperation(
      subgraph: "YouTrack"
      path: "/articles"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\",\\\"$skip\\\":\\\"_DOLLAR_skip\\\",\\\"$top\\\":\\\"_DOLLAR_top\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query articles($fields: String = \"$type,content,created,id,idReadable,parentArticle($type,id,idReadable),project($type,id,name,shortName),summary,updated,updatedBy($type,id,login,ringId)\", $_DOLLAR_skip: Int, $_DOLLAR_top: Int) { articles(fields: $fields, _DOLLAR_skip: $_DOLLAR_skip, _DOLLAR_top: $_DOLLAR_top) }"
    )
    @source(subgraph: "YouTrack", name: "articles", type: "[Article]")
  articles_by_id(
    id: String!
    fields: String = "$type,content,created,id,idReadable,parentArticle($type,id,idReadable),project($type,id,name,shortName),summary,updated,updatedBy($type,id,login,ringId)"
  ): Article
    @httpOperation(
      subgraph: "YouTrack"
      path: "/articles/{args.id}"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query articles_by_id($id: String!, $fields: String = \"$type,content,created,id,idReadable,parentArticle($type,id,idReadable),project($type,id,name,shortName),summary,updated,updatedBy($type,id,login,ringId)\") { articles_by_id(id: $id, fields: $fields) }"
    )
    @source(subgraph: "YouTrack", name: "articles_by_id", type: "Article")
  articles_by_id_attachments(
    id: String!
    fields: String = "$type,author($type,id,login,ringId),charset,created,extension,id,metaData,mimeType,name,size,updated,url"
    _DOLLAR_skip: Int
    _DOLLAR_top: Int
  ): [ArticleAttachment]
    @httpOperation(
      subgraph: "YouTrack"
      path: "/articles/{args.id}/attachments"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\",\\\"$skip\\\":\\\"_DOLLAR_skip\\\",\\\"$top\\\":\\\"_DOLLAR_top\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query articles_by_id_attachments($id: String!, $fields: String = \"$type,author($type,id,login,ringId),charset,created,extension,id,metaData,mimeType,name,size,updated,url\", $_DOLLAR_skip: Int, $_DOLLAR_top: Int) { articles_by_id_attachments(id: $id, fields: $fields, _DOLLAR_skip: $_DOLLAR_skip, _DOLLAR_top: $_DOLLAR_top) }"
    )
    @source(subgraph: "YouTrack", name: "articles_by_id_attachments", type: "[ArticleAttachment]")
  articles_by_id_attachments_by_articleAttachmentId(
    id: String!
    articleAttachmentId: String!
    fields: String = "$type,author($type,id,login,ringId),charset,created,extension,id,metaData,mimeType,name,size,updated,url"
  ): ArticleAttachment
    @httpOperation(
      subgraph: "YouTrack"
      path: "/articles/{args.id}/attachments/{args.articleAttachmentId}"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query articles_by_id_attachments_by_articleAttachmentId($id: String!, $articleAttachmentId: String!, $fields: String = \"$type,author($type,id,login,ringId),charset,created,extension,id,metaData,mimeType,name,size,updated,url\") { articles_by_id_attachments_by_articleAttachmentId(id: $id, articleAttachmentId: $articleAttachmentId, fields: $fields) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "articles_by_id_attachments_by_articleAttachmentId"
      type: "ArticleAttachment"
    )
  articles_by_id_childArticles(
    id: String!
    fields: String = "$type,content,created,id,idReadable,parentArticle($type,id,idReadable),project($type,id,name,shortName),summary,updated,updatedBy($type,id,login,ringId)"
    _DOLLAR_skip: Int
    _DOLLAR_top: Int
  ): [Article]
    @httpOperation(
      subgraph: "YouTrack"
      path: "/articles/{args.id}/childArticles"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\",\\\"$skip\\\":\\\"_DOLLAR_skip\\\",\\\"$top\\\":\\\"_DOLLAR_top\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query articles_by_id_childArticles($id: String!, $fields: String = \"$type,content,created,id,idReadable,parentArticle($type,id,idReadable),project($type,id,name,shortName),summary,updated,updatedBy($type,id,login,ringId)\", $_DOLLAR_skip: Int, $_DOLLAR_top: Int) { articles_by_id_childArticles(id: $id, fields: $fields, _DOLLAR_skip: $_DOLLAR_skip, _DOLLAR_top: $_DOLLAR_top) }"
    )
    @source(subgraph: "YouTrack", name: "articles_by_id_childArticles", type: "[Article]")
  articles_by_id_childArticles_by_articleId(
    id: String!
    articleId: String!
    fields: String = "$type,content,created,id,idReadable,parentArticle($type,id,idReadable),project($type,id,name,shortName),summary,updated,updatedBy($type,id,login,ringId)"
  ): Article
    @httpOperation(
      subgraph: "YouTrack"
      path: "/articles/{args.id}/childArticles/{args.articleId}"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query articles_by_id_childArticles_by_articleId($id: String!, $articleId: String!, $fields: String = \"$type,content,created,id,idReadable,parentArticle($type,id,idReadable),project($type,id,name,shortName),summary,updated,updatedBy($type,id,login,ringId)\") { articles_by_id_childArticles_by_articleId(id: $id, articleId: $articleId, fields: $fields) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "articles_by_id_childArticles_by_articleId"
      type: "Article"
    )
  articles_by_id_comments(
    id: String!
    fields: String = "$type,attachments($type,id),author($type,id,login,ringId),created,id,text,updated,visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,ringId))"
    _DOLLAR_skip: Int
    _DOLLAR_top: Int
  ): [ArticleComment]
    @httpOperation(
      subgraph: "YouTrack"
      path: "/articles/{args.id}/comments"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\",\\\"$skip\\\":\\\"_DOLLAR_skip\\\",\\\"$top\\\":\\\"_DOLLAR_top\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query articles_by_id_comments($id: String!, $fields: String = \"$type,attachments($type,id),author($type,id,login,ringId),created,id,text,updated,visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,ringId))\", $_DOLLAR_skip: Int, $_DOLLAR_top: Int) { articles_by_id_comments(id: $id, fields: $fields, _DOLLAR_skip: $_DOLLAR_skip, _DOLLAR_top: $_DOLLAR_top) }"
    )
    @source(subgraph: "YouTrack", name: "articles_by_id_comments", type: "[ArticleComment]")
  articles_by_id_comments_by_articleCommentId(
    id: String!
    articleCommentId: String!
    fields: String = "$type,attachments($type,id),author($type,id,login,ringId),created,id,text,updated,visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,ringId))"
  ): ArticleComment
    @httpOperation(
      subgraph: "YouTrack"
      path: "/articles/{args.id}/comments/{args.articleCommentId}"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query articles_by_id_comments_by_articleCommentId($id: String!, $articleCommentId: String!, $fields: String = \"$type,attachments($type,id),author($type,id,login,ringId),created,id,text,updated,visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,ringId))\") { articles_by_id_comments_by_articleCommentId(id: $id, articleCommentId: $articleCommentId, fields: $fields) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "articles_by_id_comments_by_articleCommentId"
      type: "ArticleComment"
    )
  articles_by_id_comments_by_articleCommentId_reactions(
    id: String!
    articleCommentId: String!
    fields: String = "$type,id"
    _DOLLAR_skip: Int
    _DOLLAR_top: Int
  ): [Reaction]
    @httpOperation(
      subgraph: "YouTrack"
      path: "/articles/{args.id}/comments/{args.articleCommentId}/reactions"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\",\\\"$skip\\\":\\\"_DOLLAR_skip\\\",\\\"$top\\\":\\\"_DOLLAR_top\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query articles_by_id_comments_by_articleCommentId_reactions($id: String!, $articleCommentId: String!, $fields: String = \"$type,id\", $_DOLLAR_skip: Int, $_DOLLAR_top: Int) { articles_by_id_comments_by_articleCommentId_reactions(id: $id, articleCommentId: $articleCommentId, fields: $fields, _DOLLAR_skip: $_DOLLAR_skip, _DOLLAR_top: $_DOLLAR_top) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "articles_by_id_comments_by_articleCommentId_reactions"
      type: "[Reaction]"
    )
  articles_by_id_comments_by_articleCommentId_reactions_by_reactionId(
    id: String!
    articleCommentId: String!
    reactionId: String!
    fields: String = "$type,id"
  ): Reaction
    @httpOperation(
      subgraph: "YouTrack"
      path: "/articles/{args.id}/comments/{args.articleCommentId}/reactions/{args.reactionId}"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query articles_by_id_comments_by_articleCommentId_reactions_by_reactionId($id: String!, $articleCommentId: String!, $reactionId: String!, $fields: String = \"$type,id\") { articles_by_id_comments_by_articleCommentId_reactions_by_reactionId(id: $id, articleCommentId: $articleCommentId, reactionId: $reactionId, fields: $fields) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "articles_by_id_comments_by_articleCommentId_reactions_by_reactionId"
      type: "Reaction"
    )
  articles_by_id_parentArticle(
    id: String!
    fields: String = "$type,content,created,id,idReadable,parentArticle($type,id,idReadable),project($type,id,name,shortName),summary,updated,updatedBy($type,id,login,ringId)"
  ): Article
    @httpOperation(
      subgraph: "YouTrack"
      path: "/articles/{args.id}/parentArticle"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query articles_by_id_parentArticle($id: String!, $fields: String = \"$type,content,created,id,idReadable,parentArticle($type,id,idReadable),project($type,id,name,shortName),summary,updated,updatedBy($type,id,login,ringId)\") { articles_by_id_parentArticle(id: $id, fields: $fields) }"
    )
    @source(subgraph: "YouTrack", name: "articles_by_id_parentArticle", type: "Article")
  articles_by_id_tags(
    id: String!
    fields: String = "$type,id,name,owner($type,id,login,ringId)"
    _DOLLAR_skip: Int
    _DOLLAR_top: Int
  ): [Tag]
    @httpOperation(
      subgraph: "YouTrack"
      path: "/articles/{args.id}/tags"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\",\\\"$skip\\\":\\\"_DOLLAR_skip\\\",\\\"$top\\\":\\\"_DOLLAR_top\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query articles_by_id_tags($id: String!, $fields: String = \"$type,id,name,owner($type,id,login,ringId)\", $_DOLLAR_skip: Int, $_DOLLAR_top: Int) { articles_by_id_tags(id: $id, fields: $fields, _DOLLAR_skip: $_DOLLAR_skip, _DOLLAR_top: $_DOLLAR_top) }"
    )
    @source(subgraph: "YouTrack", name: "articles_by_id_tags", type: "[Tag]")
  articles_by_id_tags_by_tagId(
    id: String!
    tagId: String!
    fields: String = "$type,id,name,owner($type,id,login,ringId)"
  ): Tag
    @httpOperation(
      subgraph: "YouTrack"
      path: "/articles/{args.id}/tags/{args.tagId}"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query articles_by_id_tags_by_tagId($id: String!, $tagId: String!, $fields: String = \"$type,id,name,owner($type,id,login,ringId)\") { articles_by_id_tags_by_tagId(id: $id, tagId: $tagId, fields: $fields) }"
    )
    @source(subgraph: "YouTrack", name: "articles_by_id_tags_by_tagId", type: "Tag")
  groups(
    fields: String = "$type,allUsersGroup,id,name,ringId"
    _DOLLAR_skip: Int
    _DOLLAR_top: Int
  ): [UserGroup]
    @httpOperation(
      subgraph: "YouTrack"
      path: "/groups"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\",\\\"$skip\\\":\\\"_DOLLAR_skip\\\",\\\"$top\\\":\\\"_DOLLAR_top\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query groups($fields: String = \"$type,allUsersGroup,id,name,ringId\", $_DOLLAR_skip: Int, $_DOLLAR_top: Int) { groups(fields: $fields, _DOLLAR_skip: $_DOLLAR_skip, _DOLLAR_top: $_DOLLAR_top) }"
    )
    @source(subgraph: "YouTrack", name: "groups", type: "[UserGroup]")
  groups_by_id(id: String!, fields: String = "$type,allUsersGroup,id,name,ringId"): UserGroup
    @httpOperation(
      subgraph: "YouTrack"
      path: "/groups/{args.id}"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query groups_by_id($id: String!, $fields: String = \"$type,allUsersGroup,id,name,ringId\") { groups_by_id(id: $id, fields: $fields) }"
    )
    @source(subgraph: "YouTrack", name: "groups_by_id", type: "UserGroup")
  issueLinkTypes(
    fields: String = "$type,aggregation,directed,id,localizedName,localizedSourceToTarget,localizedTargetToSource,name,readOnly,sourceToTarget,targetToSource"
    _DOLLAR_skip: Int
    _DOLLAR_top: Int
  ): [IssueLinkType]
    @httpOperation(
      subgraph: "YouTrack"
      path: "/issueLinkTypes"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\",\\\"$skip\\\":\\\"_DOLLAR_skip\\\",\\\"$top\\\":\\\"_DOLLAR_top\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query issueLinkTypes($fields: String = \"$type,aggregation,directed,id,localizedName,localizedSourceToTarget,localizedTargetToSource,name,readOnly,sourceToTarget,targetToSource\", $_DOLLAR_skip: Int, $_DOLLAR_top: Int) { issueLinkTypes(fields: $fields, _DOLLAR_skip: $_DOLLAR_skip, _DOLLAR_top: $_DOLLAR_top) }"
    )
    @source(subgraph: "YouTrack", name: "issueLinkTypes", type: "[IssueLinkType]")
  issueLinkTypes_by_id(
    id: String!
    fields: String = "$type,aggregation,directed,id,localizedName,localizedSourceToTarget,localizedTargetToSource,name,readOnly,sourceToTarget,targetToSource"
  ): IssueLinkType
    @httpOperation(
      subgraph: "YouTrack"
      path: "/issueLinkTypes/{args.id}"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query issueLinkTypes_by_id($id: String!, $fields: String = \"$type,aggregation,directed,id,localizedName,localizedSourceToTarget,localizedTargetToSource,name,readOnly,sourceToTarget,targetToSource\") { issueLinkTypes_by_id(id: $id, fields: $fields) }"
    )
    @source(subgraph: "YouTrack", name: "issueLinkTypes_by_id", type: "IssueLinkType")
  issues(
    "Issues search query. Read more about search syntax here: <a href=\"https://www.jetbrains.com/help/youtrack/cloud/?Search-and-Command-Attributes\">Search Query Reference</a>"
    query: String
    "<p>The name of the custom field to show in the response. When you use this parameter and request the custom field data in the request URL, the response only shows the requested custom fields instead of all of them.</p><p>To show more than one custom field, use this parameter several times.</p><p>See Sample 2 for reference.</p>"
    customFields: String
    fields: String = "$type,created,customFields($type,id,name,value($type,id,name)),description,id,idReadable,links($type,direction,id,linkType($type,id,localizedName,name)),numberInProject,project($type,id,name,shortName),reporter($type,id,login,ringId),resolved,summary,updated,updater($type,id,login,ringId),visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,ringId))"
    _DOLLAR_skip: Int
    _DOLLAR_top: Int
  ): [Issue]
    @httpOperation(
      subgraph: "YouTrack"
      path: "/issues"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"query\\\":\\\"query\\\",\\\"customFields\\\":\\\"customFields\\\",\\\"fields\\\":\\\"fields\\\",\\\"$skip\\\":\\\"_DOLLAR_skip\\\",\\\"$top\\\":\\\"_DOLLAR_top\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query issues($query: String, $customFields: String, $fields: String = \"$type,created,customFields($type,id,name,value($type,id,name)),description,id,idReadable,links($type,direction,id,linkType($type,id,localizedName,name)),numberInProject,project($type,id,name,shortName),reporter($type,id,login,ringId),resolved,summary,updated,updater($type,id,login,ringId),visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,ringId))\", $_DOLLAR_skip: Int, $_DOLLAR_top: Int) { issues(query: $query, customFields: $customFields, fields: $fields, _DOLLAR_skip: $_DOLLAR_skip, _DOLLAR_top: $_DOLLAR_top) }"
    )
    @source(subgraph: "YouTrack", name: "issues", type: "[Issue]")
  issues_by_id(
    id: String!
    fields: String = "$type,created,customFields($type,id,name,value($type,id,name)),description,id,idReadable,links($type,direction,id,linkType($type,id,localizedName,name)),numberInProject,project($type,id,name,shortName),reporter($type,id,login,ringId),resolved,summary,updated,updater($type,id,login,ringId),visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,ringId))"
  ): Issue
    @httpOperation(
      subgraph: "YouTrack"
      path: "/issues/{args.id}"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query issues_by_id($id: String!, $fields: String = \"$type,created,customFields($type,id,name,value($type,id,name)),description,id,idReadable,links($type,direction,id,linkType($type,id,localizedName,name)),numberInProject,project($type,id,name,shortName),reporter($type,id,login,ringId),resolved,summary,updated,updater($type,id,login,ringId),visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,ringId))\") { issues_by_id(id: $id, fields: $fields) }"
    )
    @source(subgraph: "YouTrack", name: "issues_by_id", type: "Issue")
  issues_by_id_activities(
    id: String!
    categories: String
    "Indicates whether the order of returning activities is from newest to oldest or the opposite.\nIf `false`, then the oldest activity item that matches a selected filter is returned first.\nIf `true`, then the newest activity is returned first. By default, `false`."
    reverse: Boolean
    "Start timestamp of the time interval the activity timestamp belongs to.\nIf the parameter is not set, it is considered to be 0."
    start: String
    "End timestamp of the time interval the activity timestamp belongs to.\nIf the parameter is not set, it is considered as `Long.MAX_VALUE`."
    end: String
    "Parameter to filter activities by the author. You can specify one of the following parameters: the database ID, login, Hub ID,\nor `me` for the currently logged in user."
    author: String
    fields: String = "$type,added,author($type,id,login,ringId),category($type,id),field($type,customField($type,fieldType($type,id),id,localizedName,name),id,name),id,removed,target,targetMember,timestamp"
    _DOLLAR_skip: Int
    _DOLLAR_top: Int
  ): [ActivityItem]
    @httpOperation(
      subgraph: "YouTrack"
      path: "/issues/{args.id}/activities"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"categories\\\":\\\"categories\\\",\\\"reverse\\\":\\\"reverse\\\",\\\"start\\\":\\\"start\\\",\\\"end\\\":\\\"end\\\",\\\"author\\\":\\\"author\\\",\\\"fields\\\":\\\"fields\\\",\\\"$skip\\\":\\\"_DOLLAR_skip\\\",\\\"$top\\\":\\\"_DOLLAR_top\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query issues_by_id_activities($id: String!, $categories: String, $reverse: Boolean, $start: String, $end: String, $author: String, $fields: String = \"$type,added,author($type,id,login,ringId),category($type,id),field($type,customField($type,fieldType($type,id),id,localizedName,name),id,name),id,removed,target,targetMember,timestamp\", $_DOLLAR_skip: Int, $_DOLLAR_top: Int) { issues_by_id_activities(id: $id, categories: $categories, reverse: $reverse, start: $start, end: $end, author: $author, fields: $fields, _DOLLAR_skip: $_DOLLAR_skip, _DOLLAR_top: $_DOLLAR_top) }"
    )
    @source(subgraph: "YouTrack", name: "issues_by_id_activities", type: "[ActivityItem]")
  issues_by_id_activities_by_activityItemId(
    id: String!
    activityItemId: String!
    fields: String = "$type,added,author($type,id,login,ringId),category($type,id),field($type,customField($type,fieldType($type,id),id,localizedName,name),id,name),id,removed,target,targetMember,timestamp"
  ): ActivityItem
    @httpOperation(
      subgraph: "YouTrack"
      path: "/issues/{args.id}/activities/{args.activityItemId}"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query issues_by_id_activities_by_activityItemId($id: String!, $activityItemId: String!, $fields: String = \"$type,added,author($type,id,login,ringId),category($type,id),field($type,customField($type,fieldType($type,id),id,localizedName,name),id,name),id,removed,target,targetMember,timestamp\") { issues_by_id_activities_by_activityItemId(id: $id, activityItemId: $activityItemId, fields: $fields) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "issues_by_id_activities_by_activityItemId"
      type: "ActivityItem"
    )
  issues_by_id_activitiesPage(
    id: String!
    categories: String
    "Indicates whether the order of returning activities is from newest to oldest or the opposite.\nIf `false`, then the oldest activity item that matches a selected filter is returned first.\nIf `true`, then the newest activity is returned first. By default, `false`."
    reverse: Boolean
    "Start timestamp of the time interval the activity timestamp belongs to.\nIf the parameter is not set, it is considered to be 0."
    start: String
    "End timestamp of the time interval the activity timestamp belongs to.\nIf the parameter is not set, it is considered as `Long.MAX_VALUE`."
    end: String
    "Parameter to filter activities by the author. You can specify one of the following parameters: the database ID, login, Hub ID,\nor `me` for the currently logged in user."
    author: String
    cursor: String
    "ID of the activity that should be included in the page. The activity is allocated to the middle of the page."
    activityId: String
    fields: String = "$type,activities($type,added,author($type,id,login,ringId),category($type,id),field($type,customField($type,fieldType($type,id),id,localizedName,name),id,name),id,removed,target,targetMember,timestamp),afterCursor,beforeCursor,hasAfter,hasBefore,id"
  ): ActivityCursorPage
    @httpOperation(
      subgraph: "YouTrack"
      path: "/issues/{args.id}/activitiesPage"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"categories\\\":\\\"categories\\\",\\\"reverse\\\":\\\"reverse\\\",\\\"start\\\":\\\"start\\\",\\\"end\\\":\\\"end\\\",\\\"author\\\":\\\"author\\\",\\\"cursor\\\":\\\"cursor\\\",\\\"activityId\\\":\\\"activityId\\\",\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query issues_by_id_activitiesPage($id: String!, $categories: String, $reverse: Boolean, $start: String, $end: String, $author: String, $cursor: String, $activityId: String, $fields: String = \"$type,activities($type,added,author($type,id,login,ringId),category($type,id),field($type,customField($type,fieldType($type,id),id,localizedName,name),id,name),id,removed,target,targetMember,timestamp),afterCursor,beforeCursor,hasAfter,hasBefore,id\") { issues_by_id_activitiesPage(id: $id, categories: $categories, reverse: $reverse, start: $start, end: $end, author: $author, cursor: $cursor, activityId: $activityId, fields: $fields) }"
    )
    @source(subgraph: "YouTrack", name: "issues_by_id_activitiesPage", type: "ActivityCursorPage")
  issues_by_id_attachments(
    id: String!
    fields: String = "$type,author($type,id,login,ringId),charset,created,extension,id,metaData,mimeType,name,size,updated,url"
    _DOLLAR_skip: Int
    _DOLLAR_top: Int
  ): [IssueAttachment]
    @httpOperation(
      subgraph: "YouTrack"
      path: "/issues/{args.id}/attachments"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\",\\\"$skip\\\":\\\"_DOLLAR_skip\\\",\\\"$top\\\":\\\"_DOLLAR_top\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query issues_by_id_attachments($id: String!, $fields: String = \"$type,author($type,id,login,ringId),charset,created,extension,id,metaData,mimeType,name,size,updated,url\", $_DOLLAR_skip: Int, $_DOLLAR_top: Int) { issues_by_id_attachments(id: $id, fields: $fields, _DOLLAR_skip: $_DOLLAR_skip, _DOLLAR_top: $_DOLLAR_top) }"
    )
    @source(subgraph: "YouTrack", name: "issues_by_id_attachments", type: "[IssueAttachment]")
  issues_by_id_attachments_by_issueAttachmentId(
    id: String!
    issueAttachmentId: String!
    fields: String = "$type,author($type,id,login,ringId),charset,created,extension,id,metaData,mimeType,name,size,updated,url"
  ): IssueAttachment
    @httpOperation(
      subgraph: "YouTrack"
      path: "/issues/{args.id}/attachments/{args.issueAttachmentId}"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query issues_by_id_attachments_by_issueAttachmentId($id: String!, $issueAttachmentId: String!, $fields: String = \"$type,author($type,id,login,ringId),charset,created,extension,id,metaData,mimeType,name,size,updated,url\") { issues_by_id_attachments_by_issueAttachmentId(id: $id, issueAttachmentId: $issueAttachmentId, fields: $fields) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "issues_by_id_attachments_by_issueAttachmentId"
      type: "IssueAttachment"
    )
  issues_by_id_comments(
    id: String!
    fields: String = "$type,attachments($type,id),author($type,id,login,ringId),created,deleted,id,text,updated,visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,ringId))"
    _DOLLAR_skip: Int
    _DOLLAR_top: Int
  ): [IssueComment]
    @httpOperation(
      subgraph: "YouTrack"
      path: "/issues/{args.id}/comments"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\",\\\"$skip\\\":\\\"_DOLLAR_skip\\\",\\\"$top\\\":\\\"_DOLLAR_top\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query issues_by_id_comments($id: String!, $fields: String = \"$type,attachments($type,id),author($type,id,login,ringId),created,deleted,id,text,updated,visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,ringId))\", $_DOLLAR_skip: Int, $_DOLLAR_top: Int) { issues_by_id_comments(id: $id, fields: $fields, _DOLLAR_skip: $_DOLLAR_skip, _DOLLAR_top: $_DOLLAR_top) }"
    )
    @source(subgraph: "YouTrack", name: "issues_by_id_comments", type: "[IssueComment]")
  issues_by_id_comments_by_issueCommentId(
    id: String!
    issueCommentId: String!
    fields: String = "$type,attachments($type,id),author($type,id,login,ringId),created,deleted,id,text,updated,visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,ringId))"
  ): IssueComment
    @httpOperation(
      subgraph: "YouTrack"
      path: "/issues/{args.id}/comments/{args.issueCommentId}"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query issues_by_id_comments_by_issueCommentId($id: String!, $issueCommentId: String!, $fields: String = \"$type,attachments($type,id),author($type,id,login,ringId),created,deleted,id,text,updated,visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,ringId))\") { issues_by_id_comments_by_issueCommentId(id: $id, issueCommentId: $issueCommentId, fields: $fields) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "issues_by_id_comments_by_issueCommentId"
      type: "IssueComment"
    )
  issues_by_id_comments_by_issueCommentId_reactions(
    id: String!
    issueCommentId: String!
    fields: String = "$type,id"
    _DOLLAR_skip: Int
    _DOLLAR_top: Int
  ): [Reaction]
    @httpOperation(
      subgraph: "YouTrack"
      path: "/issues/{args.id}/comments/{args.issueCommentId}/reactions"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\",\\\"$skip\\\":\\\"_DOLLAR_skip\\\",\\\"$top\\\":\\\"_DOLLAR_top\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query issues_by_id_comments_by_issueCommentId_reactions($id: String!, $issueCommentId: String!, $fields: String = \"$type,id\", $_DOLLAR_skip: Int, $_DOLLAR_top: Int) { issues_by_id_comments_by_issueCommentId_reactions(id: $id, issueCommentId: $issueCommentId, fields: $fields, _DOLLAR_skip: $_DOLLAR_skip, _DOLLAR_top: $_DOLLAR_top) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "issues_by_id_comments_by_issueCommentId_reactions"
      type: "[Reaction]"
    )
  issues_by_id_comments_by_issueCommentId_reactions_by_reactionId(
    id: String!
    issueCommentId: String!
    reactionId: String!
    fields: String = "$type,id"
  ): Reaction
    @httpOperation(
      subgraph: "YouTrack"
      path: "/issues/{args.id}/comments/{args.issueCommentId}/reactions/{args.reactionId}"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query issues_by_id_comments_by_issueCommentId_reactions_by_reactionId($id: String!, $issueCommentId: String!, $reactionId: String!, $fields: String = \"$type,id\") { issues_by_id_comments_by_issueCommentId_reactions_by_reactionId(id: $id, issueCommentId: $issueCommentId, reactionId: $reactionId, fields: $fields) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "issues_by_id_comments_by_issueCommentId_reactions_by_reactionId"
      type: "Reaction"
    )
  issues_by_id_customFields(
    id: String!
    fields: String = "$type,id,name,value($type,id,name)"
    _DOLLAR_skip: Int
    _DOLLAR_top: Int
  ): [IssueCustomField]
    @httpOperation(
      subgraph: "YouTrack"
      path: "/issues/{args.id}/customFields"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\",\\\"$skip\\\":\\\"_DOLLAR_skip\\\",\\\"$top\\\":\\\"_DOLLAR_top\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query issues_by_id_customFields($id: String!, $fields: String = \"$type,id,name,value($type,id,name)\", $_DOLLAR_skip: Int, $_DOLLAR_top: Int) { issues_by_id_customFields(id: $id, fields: $fields, _DOLLAR_skip: $_DOLLAR_skip, _DOLLAR_top: $_DOLLAR_top) }"
    )
    @source(subgraph: "YouTrack", name: "issues_by_id_customFields", type: "[IssueCustomField]")
  issues_by_id_customFields_by_issueCustomFieldId(
    id: String!
    issueCustomFieldId: String!
    fields: String = "$type,id,name,value($type,id,name)"
  ): IssueCustomField
    @httpOperation(
      subgraph: "YouTrack"
      path: "/issues/{args.id}/customFields/{args.issueCustomFieldId}"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query issues_by_id_customFields_by_issueCustomFieldId($id: String!, $issueCustomFieldId: String!, $fields: String = \"$type,id,name,value($type,id,name)\") { issues_by_id_customFields_by_issueCustomFieldId(id: $id, issueCustomFieldId: $issueCustomFieldId, fields: $fields) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "issues_by_id_customFields_by_issueCustomFieldId"
      type: "IssueCustomField"
    )
  issues_by_id_links(
    id: String!
    fields: String = "$type,direction,id,linkType($type,id,localizedName,name)"
    _DOLLAR_skip: Int
    _DOLLAR_top: Int
  ): [IssueLink]
    @httpOperation(
      subgraph: "YouTrack"
      path: "/issues/{args.id}/links"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\",\\\"$skip\\\":\\\"_DOLLAR_skip\\\",\\\"$top\\\":\\\"_DOLLAR_top\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query issues_by_id_links($id: String!, $fields: String = \"$type,direction,id,linkType($type,id,localizedName,name)\", $_DOLLAR_skip: Int, $_DOLLAR_top: Int) { issues_by_id_links(id: $id, fields: $fields, _DOLLAR_skip: $_DOLLAR_skip, _DOLLAR_top: $_DOLLAR_top) }"
    )
    @source(subgraph: "YouTrack", name: "issues_by_id_links", type: "[IssueLink]")
  issues_by_id_links_by_issueLinkId(
    id: String!
    issueLinkId: String!
    fields: String = "$type,direction,id,linkType($type,id,localizedName,name)"
  ): IssueLink
    @httpOperation(
      subgraph: "YouTrack"
      path: "/issues/{args.id}/links/{args.issueLinkId}"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query issues_by_id_links_by_issueLinkId($id: String!, $issueLinkId: String!, $fields: String = \"$type,direction,id,linkType($type,id,localizedName,name)\") { issues_by_id_links_by_issueLinkId(id: $id, issueLinkId: $issueLinkId, fields: $fields) }"
    )
    @source(subgraph: "YouTrack", name: "issues_by_id_links_by_issueLinkId", type: "IssueLink")
  issues_by_id_links_by_issueLinkId_issues(
    id: String!
    issueLinkId: String!
    fields: String = "$type,created,customFields($type,id,name,value($type,id,name)),description,id,idReadable,links($type,direction,id,linkType($type,id,localizedName,name)),numberInProject,project($type,id,name,shortName),reporter($type,id,login,ringId),resolved,summary,updated,updater($type,id,login,ringId),visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,ringId))"
    _DOLLAR_skip: Int
    _DOLLAR_top: Int
  ): [Issue]
    @httpOperation(
      subgraph: "YouTrack"
      path: "/issues/{args.id}/links/{args.issueLinkId}/issues"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\",\\\"$skip\\\":\\\"_DOLLAR_skip\\\",\\\"$top\\\":\\\"_DOLLAR_top\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query issues_by_id_links_by_issueLinkId_issues($id: String!, $issueLinkId: String!, $fields: String = \"$type,created,customFields($type,id,name,value($type,id,name)),description,id,idReadable,links($type,direction,id,linkType($type,id,localizedName,name)),numberInProject,project($type,id,name,shortName),reporter($type,id,login,ringId),resolved,summary,updated,updater($type,id,login,ringId),visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,ringId))\", $_DOLLAR_skip: Int, $_DOLLAR_top: Int) { issues_by_id_links_by_issueLinkId_issues(id: $id, issueLinkId: $issueLinkId, fields: $fields, _DOLLAR_skip: $_DOLLAR_skip, _DOLLAR_top: $_DOLLAR_top) }"
    )
    @source(subgraph: "YouTrack", name: "issues_by_id_links_by_issueLinkId_issues", type: "[Issue]")
  issues_by_id_project(
    id: String!
    fields: String = "$type,archived,customFields,id,leader($type,id,login,ringId),name,shortName"
  ): Project
    @httpOperation(
      subgraph: "YouTrack"
      path: "/issues/{args.id}/project"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query issues_by_id_project($id: String!, $fields: String = \"$type,archived,customFields,id,leader($type,id,login,ringId),name,shortName\") { issues_by_id_project(id: $id, fields: $fields) }"
    )
    @source(subgraph: "YouTrack", name: "issues_by_id_project", type: "Project")
  issues_by_id_sprints(
    id: String!
    fields: String = "$type,archived,finish,id,isDefault,name,start"
    _DOLLAR_skip: Int
    _DOLLAR_top: Int
  ): [Sprint]
    @httpOperation(
      subgraph: "YouTrack"
      path: "/issues/{args.id}/sprints"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\",\\\"$skip\\\":\\\"_DOLLAR_skip\\\",\\\"$top\\\":\\\"_DOLLAR_top\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query issues_by_id_sprints($id: String!, $fields: String = \"$type,archived,finish,id,isDefault,name,start\", $_DOLLAR_skip: Int, $_DOLLAR_top: Int) { issues_by_id_sprints(id: $id, fields: $fields, _DOLLAR_skip: $_DOLLAR_skip, _DOLLAR_top: $_DOLLAR_top) }"
    )
    @source(subgraph: "YouTrack", name: "issues_by_id_sprints", type: "[Sprint]")
  issues_by_id_tags(
    id: String!
    fields: String = "$type,id,name,owner($type,id,login,ringId)"
    _DOLLAR_skip: Int
    _DOLLAR_top: Int
  ): [Tag]
    @httpOperation(
      subgraph: "YouTrack"
      path: "/issues/{args.id}/tags"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\",\\\"$skip\\\":\\\"_DOLLAR_skip\\\",\\\"$top\\\":\\\"_DOLLAR_top\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query issues_by_id_tags($id: String!, $fields: String = \"$type,id,name,owner($type,id,login,ringId)\", $_DOLLAR_skip: Int, $_DOLLAR_top: Int) { issues_by_id_tags(id: $id, fields: $fields, _DOLLAR_skip: $_DOLLAR_skip, _DOLLAR_top: $_DOLLAR_top) }"
    )
    @source(subgraph: "YouTrack", name: "issues_by_id_tags", type: "[Tag]")
  issues_by_id_tags_by_tagId(
    id: String!
    tagId: String!
    fields: String = "$type,id,name,owner($type,id,login,ringId)"
  ): Tag
    @httpOperation(
      subgraph: "YouTrack"
      path: "/issues/{args.id}/tags/{args.tagId}"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query issues_by_id_tags_by_tagId($id: String!, $tagId: String!, $fields: String = \"$type,id,name,owner($type,id,login,ringId)\") { issues_by_id_tags_by_tagId(id: $id, tagId: $tagId, fields: $fields) }"
    )
    @source(subgraph: "YouTrack", name: "issues_by_id_tags_by_tagId", type: "Tag")
  issues_by_id_timeTracking(id: String!, fields: String = "$type,enabled,id"): IssueTimeTracker
    @httpOperation(
      subgraph: "YouTrack"
      path: "/issues/{args.id}/timeTracking"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query issues_by_id_timeTracking($id: String!, $fields: String = \"$type,enabled,id\") { issues_by_id_timeTracking(id: $id, fields: $fields) }"
    )
    @source(subgraph: "YouTrack", name: "issues_by_id_timeTracking", type: "IssueTimeTracker")
  issues_by_id_timeTracking_workItems(
    id: String!
    fields: String = "$type,author($type,id,login,ringId),created,creator($type,id,login,ringId),date,duration($type,id),id,text,updated"
    _DOLLAR_skip: Int
    _DOLLAR_top: Int
  ): [IssueWorkItem]
    @httpOperation(
      subgraph: "YouTrack"
      path: "/issues/{args.id}/timeTracking/workItems"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\",\\\"$skip\\\":\\\"_DOLLAR_skip\\\",\\\"$top\\\":\\\"_DOLLAR_top\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query issues_by_id_timeTracking_workItems($id: String!, $fields: String = \"$type,author($type,id,login,ringId),created,creator($type,id,login,ringId),date,duration($type,id),id,text,updated\", $_DOLLAR_skip: Int, $_DOLLAR_top: Int) { issues_by_id_timeTracking_workItems(id: $id, fields: $fields, _DOLLAR_skip: $_DOLLAR_skip, _DOLLAR_top: $_DOLLAR_top) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "issues_by_id_timeTracking_workItems"
      type: "[IssueWorkItem]"
    )
  issues_by_id_timeTracking_workItems_by_issueWorkItemId(
    id: String!
    issueWorkItemId: String!
    fields: String = "$type,author($type,id,login,ringId),created,creator($type,id,login,ringId),date,duration($type,id),id,text,updated"
  ): IssueWorkItem
    @httpOperation(
      subgraph: "YouTrack"
      path: "/issues/{args.id}/timeTracking/workItems/{args.issueWorkItemId}"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query issues_by_id_timeTracking_workItems_by_issueWorkItemId($id: String!, $issueWorkItemId: String!, $fields: String = \"$type,author($type,id,login,ringId),created,creator($type,id,login,ringId),date,duration($type,id),id,text,updated\") { issues_by_id_timeTracking_workItems_by_issueWorkItemId(id: $id, issueWorkItemId: $issueWorkItemId, fields: $fields) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "issues_by_id_timeTracking_workItems_by_issueWorkItemId"
      type: "IssueWorkItem"
    )
  issues_by_id_vcsChanges(
    id: String!
    fields: String = "$type,id"
    _DOLLAR_skip: Int
    _DOLLAR_top: Int
  ): [VcsChange]
    @httpOperation(
      subgraph: "YouTrack"
      path: "/issues/{args.id}/vcsChanges"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\",\\\"$skip\\\":\\\"_DOLLAR_skip\\\",\\\"$top\\\":\\\"_DOLLAR_top\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query issues_by_id_vcsChanges($id: String!, $fields: String = \"$type,id\", $_DOLLAR_skip: Int, $_DOLLAR_top: Int) { issues_by_id_vcsChanges(id: $id, fields: $fields, _DOLLAR_skip: $_DOLLAR_skip, _DOLLAR_top: $_DOLLAR_top) }"
    )
    @source(subgraph: "YouTrack", name: "issues_by_id_vcsChanges", type: "[VcsChange]")
  issues_by_id_vcsChanges_by_vcsChangeId(
    id: String!
    vcsChangeId: String!
    fields: String = "$type,id"
  ): VcsChange
    @httpOperation(
      subgraph: "YouTrack"
      path: "/issues/{args.id}/vcsChanges/{args.vcsChangeId}"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query issues_by_id_vcsChanges_by_vcsChangeId($id: String!, $vcsChangeId: String!, $fields: String = \"$type,id\") { issues_by_id_vcsChanges_by_vcsChangeId(id: $id, vcsChangeId: $vcsChangeId, fields: $fields) }"
    )
    @source(subgraph: "YouTrack", name: "issues_by_id_vcsChanges_by_vcsChangeId", type: "VcsChange")
  savedQueries(
    fields: String = "$type,id,name,owner($type,id,login,ringId),query"
    _DOLLAR_skip: Int
    _DOLLAR_top: Int
  ): [SavedQuery]
    @httpOperation(
      subgraph: "YouTrack"
      path: "/savedQueries"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\",\\\"$skip\\\":\\\"_DOLLAR_skip\\\",\\\"$top\\\":\\\"_DOLLAR_top\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query savedQueries($fields: String = \"$type,id,name,owner($type,id,login,ringId),query\", $_DOLLAR_skip: Int, $_DOLLAR_top: Int) { savedQueries(fields: $fields, _DOLLAR_skip: $_DOLLAR_skip, _DOLLAR_top: $_DOLLAR_top) }"
    )
    @source(subgraph: "YouTrack", name: "savedQueries", type: "[SavedQuery]")
  savedQueries_by_id(
    id: String!
    fields: String = "$type,id,name,owner($type,id,login,ringId),query"
  ): SavedQuery
    @httpOperation(
      subgraph: "YouTrack"
      path: "/savedQueries/{args.id}"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query savedQueries_by_id($id: String!, $fields: String = \"$type,id,name,owner($type,id,login,ringId),query\") { savedQueries_by_id(id: $id, fields: $fields) }"
    )
    @source(subgraph: "YouTrack", name: "savedQueries_by_id", type: "SavedQuery")
  tags(
    fields: String = "$type,id,name,owner($type,id,login,ringId)"
    _DOLLAR_skip: Int
    _DOLLAR_top: Int
  ): [Tag]
    @httpOperation(
      subgraph: "YouTrack"
      path: "/tags"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\",\\\"$skip\\\":\\\"_DOLLAR_skip\\\",\\\"$top\\\":\\\"_DOLLAR_top\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query tags($fields: String = \"$type,id,name,owner($type,id,login,ringId)\", $_DOLLAR_skip: Int, $_DOLLAR_top: Int) { tags(fields: $fields, _DOLLAR_skip: $_DOLLAR_skip, _DOLLAR_top: $_DOLLAR_top) }"
    )
    @source(subgraph: "YouTrack", name: "tags", type: "[Tag]")
  tags_by_id(id: String!, fields: String = "$type,id,name,owner($type,id,login,ringId)"): Tag
    @httpOperation(
      subgraph: "YouTrack"
      path: "/tags/{args.id}"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query tags_by_id($id: String!, $fields: String = \"$type,id,name,owner($type,id,login,ringId)\") { tags_by_id(id: $id, fields: $fields) }"
    )
    @source(subgraph: "YouTrack", name: "tags_by_id", type: "Tag")
  tags_by_id_issues(
    id: String!
    "<p>The name of the custom field to show in the response. When you use this parameter and request the custom field data in the request URL, the response only shows the requested custom fields instead of all of them.</p><p>To show more than one custom field, use this parameter several times.</p><p>See Sample 2 for reference.</p>"
    customFields: String
    fields: String = "$type,created,customFields($type,id,name,value($type,id,name)),description,id,idReadable,links($type,direction,id,linkType($type,id,localizedName,name)),numberInProject,project($type,id,name,shortName),reporter($type,id,login,ringId),resolved,summary,updated,updater($type,id,login,ringId),visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,ringId))"
    _DOLLAR_skip: Int
    _DOLLAR_top: Int
  ): [Issue]
    @httpOperation(
      subgraph: "YouTrack"
      path: "/tags/{args.id}/issues"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"customFields\\\":\\\"customFields\\\",\\\"fields\\\":\\\"fields\\\",\\\"$skip\\\":\\\"_DOLLAR_skip\\\",\\\"$top\\\":\\\"_DOLLAR_top\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query tags_by_id_issues($id: String!, $customFields: String, $fields: String = \"$type,created,customFields($type,id,name,value($type,id,name)),description,id,idReadable,links($type,direction,id,linkType($type,id,localizedName,name)),numberInProject,project($type,id,name,shortName),reporter($type,id,login,ringId),resolved,summary,updated,updater($type,id,login,ringId),visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,ringId))\", $_DOLLAR_skip: Int, $_DOLLAR_top: Int) { tags_by_id_issues(id: $id, customFields: $customFields, fields: $fields, _DOLLAR_skip: $_DOLLAR_skip, _DOLLAR_top: $_DOLLAR_top) }"
    )
    @source(subgraph: "YouTrack", name: "tags_by_id_issues", type: "[Issue]")
  users(
    fields: String = "$type,banned,email,fullName,guest,id,login,ringId"
    _DOLLAR_skip: Int
    _DOLLAR_top: Int
  ): [User]
    @httpOperation(
      subgraph: "YouTrack"
      path: "/users"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\",\\\"$skip\\\":\\\"_DOLLAR_skip\\\",\\\"$top\\\":\\\"_DOLLAR_top\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query users($fields: String = \"$type,banned,email,fullName,guest,id,login,ringId\", $_DOLLAR_skip: Int, $_DOLLAR_top: Int) { users(fields: $fields, _DOLLAR_skip: $_DOLLAR_skip, _DOLLAR_top: $_DOLLAR_top) }"
    )
    @source(subgraph: "YouTrack", name: "users", type: "[User]")
  users_by_id(
    id: String!
    fields: String = "$type,banned,email,fullName,guest,id,login,ringId"
  ): User
    @httpOperation(
      subgraph: "YouTrack"
      path: "/users/{args.id}"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query users_by_id($id: String!, $fields: String = \"$type,banned,email,fullName,guest,id,login,ringId\") { users_by_id(id: $id, fields: $fields) }"
    )
    @source(subgraph: "YouTrack", name: "users_by_id", type: "User")
  users_by_id_profiles_general(
    id: String!
    fields: String = "$type,dateFieldFormat($type,datePattern,id,pattern,presentation),id,locale($type,community,id,language,locale,name),timezone($type,id,offset,presentation)"
  ): GeneralUserProfile
    @httpOperation(
      subgraph: "YouTrack"
      path: "/users/{args.id}/profiles/general"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query users_by_id_profiles_general($id: String!, $fields: String = \"$type,dateFieldFormat($type,datePattern,id,pattern,presentation),id,locale($type,community,id,language,locale,name),timezone($type,id,offset,presentation)\") { users_by_id_profiles_general(id: $id, fields: $fields) }"
    )
    @source(subgraph: "YouTrack", name: "users_by_id_profiles_general", type: "GeneralUserProfile")
  users_by_id_profiles_notifications(
    id: String!
    fields: String = "$type,id"
  ): NotificationsUserProfile
    @httpOperation(
      subgraph: "YouTrack"
      path: "/users/{args.id}/profiles/notifications"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query users_by_id_profiles_notifications($id: String!, $fields: String = \"$type,id\") { users_by_id_profiles_notifications(id: $id, fields: $fields) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "users_by_id_profiles_notifications"
      type: "NotificationsUserProfile"
    )
  users_by_id_profiles_timetracking(
    id: String!
    fields: String = "$type,id,periodFormat($type,id)"
  ): TimeTrackingUserProfile
    @httpOperation(
      subgraph: "YouTrack"
      path: "/users/{args.id}/profiles/timetracking"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query users_by_id_profiles_timetracking($id: String!, $fields: String = \"$type,id,periodFormat($type,id)\") { users_by_id_profiles_timetracking(id: $id, fields: $fields) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "users_by_id_profiles_timetracking"
      type: "TimeTrackingUserProfile"
    )
  users_by_id_savedQueries(
    id: String!
    fields: String = "$type,id,name,owner($type,id,login,ringId),query"
    _DOLLAR_skip: Int
    _DOLLAR_top: Int
  ): [SavedQuery]
    @httpOperation(
      subgraph: "YouTrack"
      path: "/users/{args.id}/savedQueries"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\",\\\"$skip\\\":\\\"_DOLLAR_skip\\\",\\\"$top\\\":\\\"_DOLLAR_top\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query users_by_id_savedQueries($id: String!, $fields: String = \"$type,id,name,owner($type,id,login,ringId),query\", $_DOLLAR_skip: Int, $_DOLLAR_top: Int) { users_by_id_savedQueries(id: $id, fields: $fields, _DOLLAR_skip: $_DOLLAR_skip, _DOLLAR_top: $_DOLLAR_top) }"
    )
    @source(subgraph: "YouTrack", name: "users_by_id_savedQueries", type: "[SavedQuery]")
  users_by_id_tags(
    id: String!
    fields: String = "$type,id,name,owner($type,id,login,ringId)"
    _DOLLAR_skip: Int
    _DOLLAR_top: Int
  ): [Tag]
    @httpOperation(
      subgraph: "YouTrack"
      path: "/users/{args.id}/tags"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\",\\\"$skip\\\":\\\"_DOLLAR_skip\\\",\\\"$top\\\":\\\"_DOLLAR_top\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query users_by_id_tags($id: String!, $fields: String = \"$type,id,name,owner($type,id,login,ringId)\", $_DOLLAR_skip: Int, $_DOLLAR_top: Int) { users_by_id_tags(id: $id, fields: $fields, _DOLLAR_skip: $_DOLLAR_skip, _DOLLAR_top: $_DOLLAR_top) }"
    )
    @source(subgraph: "YouTrack", name: "users_by_id_tags", type: "[Tag]")
  users_me(fields: String = "$type,banned,email,fullName,guest,id,login,ringId"): Me
    @httpOperation(
      subgraph: "YouTrack"
      path: "/users/me"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query users_me($fields: String = \"$type,banned,email,fullName,guest,id,login,ringId\") { users_me(fields: $fields) }"
    )
    @source(subgraph: "YouTrack", name: "users_me", type: "Me")
  workItems(
    "Issues search query. Read more about search syntax here: <a href=\"https://www.jetbrains.com/help/youtrack/cloud/?Search-and-Command-Attributes\">Search Query Reference</a>"
    query: String
    "The start date of the interval for work items date."
    startDate: Date
    "The end date of the interval for work items date."
    endDate: Date
    "The start timestamp of the interval for work items date."
    start: Int
    "The end timestamp of the interval for work items date."
    end: Int
    "The start timestamp of the interval for work items created date."
    createdStart: Int
    "The end timestamp of the interval for work items created date."
    createdEnd: Int
    "The start timestamp of the interval for work items updated date."
    updatedStart: Int
    "The end timestamp of the interval for work items updated date."
    updatedEnd: Int
    author: String
    creator: String
    fields: String = "$type,author($type,id,login,ringId),created,creator($type,id,login,ringId),date,duration($type,id),id,text,updated"
    _DOLLAR_skip: Int
    _DOLLAR_top: Int
  ): [IssueWorkItem]
    @httpOperation(
      subgraph: "YouTrack"
      path: "/workItems"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"query\\\":\\\"query\\\",\\\"startDate\\\":\\\"startDate\\\",\\\"endDate\\\":\\\"endDate\\\",\\\"start\\\":\\\"start\\\",\\\"end\\\":\\\"end\\\",\\\"createdStart\\\":\\\"createdStart\\\",\\\"createdEnd\\\":\\\"createdEnd\\\",\\\"updatedStart\\\":\\\"updatedStart\\\",\\\"updatedEnd\\\":\\\"updatedEnd\\\",\\\"author\\\":\\\"author\\\",\\\"creator\\\":\\\"creator\\\",\\\"fields\\\":\\\"fields\\\",\\\"$skip\\\":\\\"_DOLLAR_skip\\\",\\\"$top\\\":\\\"_DOLLAR_top\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query workItems($query: String, $startDate: Date, $endDate: Date, $start: Int, $end: Int, $createdStart: Int, $createdEnd: Int, $updatedStart: Int, $updatedEnd: Int, $author: String, $creator: String, $fields: String = \"$type,author($type,id,login,ringId),created,creator($type,id,login,ringId),date,duration($type,id),id,text,updated\", $_DOLLAR_skip: Int, $_DOLLAR_top: Int) { workItems(query: $query, startDate: $startDate, endDate: $endDate, start: $start, end: $end, createdStart: $createdStart, createdEnd: $createdEnd, updatedStart: $updatedStart, updatedEnd: $updatedEnd, author: $author, creator: $creator, fields: $fields, _DOLLAR_skip: $_DOLLAR_skip, _DOLLAR_top: $_DOLLAR_top) }"
    )
    @source(subgraph: "YouTrack", name: "workItems", type: "[IssueWorkItem]")
  workItems_by_id(
    id: String!
    fields: String = "$type,author($type,id,login,ringId),created,creator($type,id,login,ringId),date,duration($type,id),id,text,updated"
  ): IssueWorkItem
    @httpOperation(
      subgraph: "YouTrack"
      path: "/workItems/{args.id}"
      operationSpecificHeaders: "\"{\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: GET
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "query workItems_by_id($id: String!, $fields: String = \"$type,author($type,id,login,ringId),created,creator($type,id,login,ringId),date,duration($type,id),id,text,updated\") { workItems_by_id(id: $id, fields: $fields) }"
    )
    @source(subgraph: "YouTrack", name: "workItems_by_id", type: "IssueWorkItem")
}

type ActivityCursorPage
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "ActivityCursorPage") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  activities: [ActivityItem]
    @source(subgraph: "YouTrack", name: "activities", type: "[ActivityItem]")
  afterCursor: String @source(subgraph: "YouTrack", name: "afterCursor", type: "String")
  beforeCursor: String @source(subgraph: "YouTrack", name: "beforeCursor", type: "String")
  hasAfter: Boolean @source(subgraph: "YouTrack", name: "hasAfter", type: "Boolean")
  hasBefore: Boolean @source(subgraph: "YouTrack", name: "hasBefore", type: "Boolean")
  reverse: Boolean @source(subgraph: "YouTrack", name: "reverse", type: "Boolean")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

type BuildBundle @source(subgraph: "YouTrack", name: "BuildBundle") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  values: [BuildBundleElement]
    @source(subgraph: "YouTrack", name: "values", type: "[BuildBundleElement]")
  isUpdateable: Boolean @source(subgraph: "YouTrack", name: "isUpdateable", type: "Boolean")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

type EnumBundle @source(subgraph: "YouTrack", name: "EnumBundle") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  values: [EnumBundleElement]
    @source(subgraph: "YouTrack", name: "values", type: "[EnumBundleElement]")
  isUpdateable: Boolean @source(subgraph: "YouTrack", name: "isUpdateable", type: "Boolean")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

type EnumBundleElement @source(subgraph: "YouTrack", name: "EnumBundleElement") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  localizedName: String @source(subgraph: "YouTrack", name: "localizedName", type: "String")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  bundle: Bundle @source(subgraph: "YouTrack", name: "bundle", type: "Bundle")
  description: String @source(subgraph: "YouTrack", name: "description", type: "String")
  archived: Boolean @source(subgraph: "YouTrack", name: "archived", type: "Boolean")
  ordinal: Int @source(subgraph: "YouTrack", name: "ordinal", type: "Int")
  color: FieldStyle @source(subgraph: "YouTrack", name: "color", type: "FieldStyle")
  hasRunningJob: Boolean @source(subgraph: "YouTrack", name: "hasRunningJob", type: "Boolean")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

type OwnedBundle @source(subgraph: "YouTrack", name: "OwnedBundle") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  values: [OwnedBundleElement]
    @source(subgraph: "YouTrack", name: "values", type: "[OwnedBundleElement]")
  isUpdateable: Boolean @source(subgraph: "YouTrack", name: "isUpdateable", type: "Boolean")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

type StateBundle @source(subgraph: "YouTrack", name: "StateBundle") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  values: [StateBundleElement]
    @source(subgraph: "YouTrack", name: "values", type: "[StateBundleElement]")
  isUpdateable: Boolean @source(subgraph: "YouTrack", name: "isUpdateable", type: "Boolean")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

type StateBundleElement @source(subgraph: "YouTrack", name: "StateBundleElement") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  localizedName: String @source(subgraph: "YouTrack", name: "localizedName", type: "String")
  isResolved: Boolean @source(subgraph: "YouTrack", name: "isResolved", type: "Boolean")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  bundle: Bundle @source(subgraph: "YouTrack", name: "bundle", type: "Bundle")
  description: String @source(subgraph: "YouTrack", name: "description", type: "String")
  archived: Boolean @source(subgraph: "YouTrack", name: "archived", type: "Boolean")
  ordinal: Int @source(subgraph: "YouTrack", name: "ordinal", type: "Int")
  color: FieldStyle @source(subgraph: "YouTrack", name: "color", type: "FieldStyle")
  hasRunningJob: Boolean @source(subgraph: "YouTrack", name: "hasRunningJob", type: "Boolean")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

type VersionBundle @source(subgraph: "YouTrack", name: "VersionBundle") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  values: [VersionBundleElement]
    @source(subgraph: "YouTrack", name: "values", type: "[VersionBundleElement]")
  isUpdateable: Boolean @source(subgraph: "YouTrack", name: "isUpdateable", type: "Boolean")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

type BackupFile
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "BackupFile") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  size: BigInt @source(subgraph: "YouTrack", name: "size", type: "BigInt")
  creationDate: BigInt @source(subgraph: "YouTrack", name: "creationDate", type: "BigInt")
  link: String @source(subgraph: "YouTrack", name: "link", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

type DatabaseBackupSettings
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "DatabaseBackupSettings") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  location: String @source(subgraph: "YouTrack", name: "location", type: "String")
  filesToKeep: Int @source(subgraph: "YouTrack", name: "filesToKeep", type: "Int")
  cronExpression: String @source(subgraph: "YouTrack", name: "cronExpression", type: "String")
  archiveFormat: query_admin_databaseBackup_settings_archiveFormat
    @source(
      subgraph: "YouTrack"
      name: "archiveFormat"
      type: "query_admin_databaseBackup_settings_archiveFormat"
    )
  isOn: Boolean @source(subgraph: "YouTrack", name: "isOn", type: "Boolean")
  availableDiskSpace: BigInt
    @source(subgraph: "YouTrack", name: "availableDiskSpace", type: "BigInt")
  notifiedUsers: [User] @source(subgraph: "YouTrack", name: "notifiedUsers", type: "[User]")
  backupStatus: BackupStatus
    @source(subgraph: "YouTrack", name: "backupStatus", type: "BackupStatus")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

enum query_admin_databaseBackup_settings_archiveFormat
  @source(subgraph: "YouTrack", name: "query_admin_databaseBackup_settings_archiveFormat") {
  TAR_GZ @source(subgraph: "YouTrack", name: "TAR_GZ")
  ZIP @source(subgraph: "YouTrack", name: "ZIP")
}

type BackupStatus
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "BackupStatus") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  backupInProgress: Boolean @source(subgraph: "YouTrack", name: "backupInProgress", type: "Boolean")
  backupCancelled: Boolean @source(subgraph: "YouTrack", name: "backupCancelled", type: "Boolean")
  backupError: BackupError @source(subgraph: "YouTrack", name: "backupError", type: "BackupError")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents an error that appeared during the backup."
type BackupError
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "BackupError") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  date: BigInt @source(subgraph: "YouTrack", name: "date", type: "BigInt")
  errorMessage: String @source(subgraph: "YouTrack", name: "errorMessage", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

type GlobalSettings
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "GlobalSettings") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  systemSettings: SystemSettings
    @source(subgraph: "YouTrack", name: "systemSettings", type: "SystemSettings")
  notificationSettings: NotificationSettings
    @source(subgraph: "YouTrack", name: "notificationSettings", type: "NotificationSettings")
  restSettings: RestCorsSettings
    @source(subgraph: "YouTrack", name: "restSettings", type: "RestCorsSettings")
  appearanceSettings: AppearanceSettings
    @source(subgraph: "YouTrack", name: "appearanceSettings", type: "AppearanceSettings")
  localeSettings: LocaleSettings
    @source(subgraph: "YouTrack", name: "localeSettings", type: "LocaleSettings")
  license: License @source(subgraph: "YouTrack", name: "license", type: "License")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

type SystemSettings
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "SystemSettings") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  baseUrl: String @source(subgraph: "YouTrack", name: "baseUrl", type: "String")
  maxUploadFileSize: BigInt @source(subgraph: "YouTrack", name: "maxUploadFileSize", type: "BigInt")
  maxExportItems: Int @source(subgraph: "YouTrack", name: "maxExportItems", type: "Int")
  administratorEmail: String
    @source(subgraph: "YouTrack", name: "administratorEmail", type: "String")
  allowStatisticsCollection: Boolean
    @source(subgraph: "YouTrack", name: "allowStatisticsCollection", type: "Boolean")
  isApplicationReadOnly: Boolean
    @source(subgraph: "YouTrack", name: "isApplicationReadOnly", type: "Boolean")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

type NotificationSettings
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "NotificationSettings") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  emailSettings: EmailSettings
    @source(subgraph: "YouTrack", name: "emailSettings", type: "EmailSettings")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents email settings for this YouTrack installation."
type EmailSettings
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "EmailSettings") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  isEnabled: Boolean @source(subgraph: "YouTrack", name: "isEnabled", type: "Boolean")
  host: String @source(subgraph: "YouTrack", name: "host", type: "String")
  port: Int @source(subgraph: "YouTrack", name: "port", type: "Int")
  mailProtocol: query_admin_globalSettings_notificationSettings_emailSettings_mailProtocol
    @source(
      subgraph: "YouTrack"
      name: "mailProtocol"
      type: "query_admin_globalSettings_notificationSettings_emailSettings_mailProtocol"
    )
  anonymous: Boolean @source(subgraph: "YouTrack", name: "anonymous", type: "Boolean")
  login: String @source(subgraph: "YouTrack", name: "login", type: "String")
  sslKey: StorageEntry @source(subgraph: "YouTrack", name: "sslKey", type: "StorageEntry")
  from: String @source(subgraph: "YouTrack", name: "from", type: "String")
  replyTo: String @source(subgraph: "YouTrack", name: "replyTo", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

enum query_admin_globalSettings_notificationSettings_emailSettings_mailProtocol
  @source(
    subgraph: "YouTrack"
    name: "query_admin_globalSettings_notificationSettings_emailSettings_mailProtocol"
  ) {
  SMTP @source(subgraph: "YouTrack", name: "SMTP")
  SMTPS @source(subgraph: "YouTrack", name: "SMTPS")
  SMTP_TLS @source(subgraph: "YouTrack", name: "SMTP_TLS")
}

"SSL key representation."
type StorageEntry
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "StorageEntry") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

type RestCorsSettings
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "RestCorsSettings") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  allowedOrigins: [String] @source(subgraph: "YouTrack", name: "allowedOrigins", type: "[String]")
  allowAllOrigins: Boolean @source(subgraph: "YouTrack", name: "allowAllOrigins", type: "Boolean")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

type AppearanceSettings
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "AppearanceSettings") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  timeZone: TimeZoneDescriptor
    @source(subgraph: "YouTrack", name: "timeZone", type: "TimeZoneDescriptor")
  dateFieldFormat: DateFormatDescriptor
    @source(subgraph: "YouTrack", name: "dateFieldFormat", type: "DateFormatDescriptor")
  logo: Logo @source(subgraph: "YouTrack", name: "logo", type: "Logo")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Company logo that is used in YouTrack."
type Logo
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "Logo") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  url: String @source(subgraph: "YouTrack", name: "url", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

type LocaleSettings
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "LocaleSettings") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  locale: LocaleDescriptor @source(subgraph: "YouTrack", name: "locale", type: "LocaleDescriptor")
  isRTL: Boolean @source(subgraph: "YouTrack", name: "isRTL", type: "Boolean")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

type License
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "License") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  username: String @source(subgraph: "YouTrack", name: "username", type: "String")
  license: String @source(subgraph: "YouTrack", name: "license", type: "String")
  error: String @source(subgraph: "YouTrack", name: "error", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

type Telemetry
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "Telemetry") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  installationFolder: String
    @source(subgraph: "YouTrack", name: "installationFolder", type: "String")
  databaseLocation: String @source(subgraph: "YouTrack", name: "databaseLocation", type: "String")
  logsLocation: String @source(subgraph: "YouTrack", name: "logsLocation", type: "String")
  availableProcessors: Int @source(subgraph: "YouTrack", name: "availableProcessors", type: "Int")
  availableMemory: String @source(subgraph: "YouTrack", name: "availableMemory", type: "String")
  allocatedMemory: String @source(subgraph: "YouTrack", name: "allocatedMemory", type: "String")
  usedMemory: String @source(subgraph: "YouTrack", name: "usedMemory", type: "String")
  uptime: String @source(subgraph: "YouTrack", name: "uptime", type: "String")
  startedTime: BigInt @source(subgraph: "YouTrack", name: "startedTime", type: "BigInt")
  databaseBackgroundThreads: Int
    @source(subgraph: "YouTrack", name: "databaseBackgroundThreads", type: "Int")
  pendingAsyncJobs: Int @source(subgraph: "YouTrack", name: "pendingAsyncJobs", type: "Int")
  cachedResultsCountInDBQueriesCache: Int
    @source(subgraph: "YouTrack", name: "cachedResultsCountInDBQueriesCache", type: "Int")
  databaseQueriesCacheHitRate: String
    @source(subgraph: "YouTrack", name: "databaseQueriesCacheHitRate", type: "String")
  blobStringsCacheHitRate: String
    @source(subgraph: "YouTrack", name: "blobStringsCacheHitRate", type: "String")
  totalTransactions: BigInt @source(subgraph: "YouTrack", name: "totalTransactions", type: "BigInt")
  transactionsPerSecond: String
    @source(subgraph: "YouTrack", name: "transactionsPerSecond", type: "String")
  requestsPerSecond: String @source(subgraph: "YouTrack", name: "requestsPerSecond", type: "String")
  databaseSize: String @source(subgraph: "YouTrack", name: "databaseSize", type: "String")
  fullDatabaseSize: String @source(subgraph: "YouTrack", name: "fullDatabaseSize", type: "String")
  textIndexSize: String @source(subgraph: "YouTrack", name: "textIndexSize", type: "String")
  onlineUsers: OnlineUsers @source(subgraph: "YouTrack", name: "onlineUsers", type: "OnlineUsers")
  reportCalculatorThreads: Int
    @source(subgraph: "YouTrack", name: "reportCalculatorThreads", type: "Int")
  notificationAnalyzerThreads: Int
    @source(subgraph: "YouTrack", name: "notificationAnalyzerThreads", type: "Int")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Stores number of online user."
type OnlineUsers
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "OnlineUsers") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  users: Int @source(subgraph: "YouTrack", name: "users", type: "Int")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

type GlobalTimeTrackingSettings
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "GlobalTimeTrackingSettings") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  workItemTypes: [WorkItemType]
    @source(subgraph: "YouTrack", name: "workItemTypes", type: "[WorkItemType]")
  workTimeSettings: WorkTimeSettings
    @source(subgraph: "YouTrack", name: "workTimeSettings", type: "WorkTimeSettings")
  attributePrototypes: [WorkItemAttributePrototype]
    @source(subgraph: "YouTrack", name: "attributePrototypes", type: "[WorkItemAttributePrototype]")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

type WorkTimeSettings
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "WorkTimeSettings") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  minutesADay: Int @source(subgraph: "YouTrack", name: "minutesADay", type: "Int")
  workDays: [Int] @source(subgraph: "YouTrack", name: "workDays", type: "[Int]")
  firstDayOfWeek: Int @source(subgraph: "YouTrack", name: "firstDayOfWeek", type: "Int")
  daysAWeek: Int @source(subgraph: "YouTrack", name: "daysAWeek", type: "Int")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

type Agile
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "Agile")
  @resolver(
    subgraph: "YouTrack"
    operation: "query AgilesByIds($Agile_id: String) { agiles(fields: $Agile_id) }"
    kind: "BATCH"
  )
  @resolver(
    subgraph: "YouTrack"
    operation: "query AgilesByNames($Agile_name: String) { agiles(fields: $Agile_name) }"
    kind: "BATCH"
  )
  @resolver(
    subgraph: "YouTrack"
    operation: "query AgilesByDollarTypes($Agile__DOLLAR_type: String) { agiles(fields: $Agile__DOLLAR_type) }"
    kind: "BATCH"
  )
  @resolver(
    subgraph: "YouTrack"
    operation: "query AgilesByIds($Agile_id: String!) { agiles_by_id(id: $Agile_id) }"
    kind: "BATCH"
  )
  @variable(subgraph: "YouTrack", name: "Agile_id", select: "id")
  @variable(subgraph: "YouTrack", name: "Agile_name", select: "name")
  @variable(subgraph: "YouTrack", name: "Agile__DOLLAR_type", select: "_DOLLAR_type") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  owner: User @source(subgraph: "YouTrack", name: "owner", type: "User")
  visibleFor: UserGroup @source(subgraph: "YouTrack", name: "visibleFor", type: "UserGroup")
  visibleForProjectBased: Boolean
    @source(subgraph: "YouTrack", name: "visibleForProjectBased", type: "Boolean")
  updateableBy: UserGroup @source(subgraph: "YouTrack", name: "updateableBy", type: "UserGroup")
  updateableByProjectBased: Boolean
    @source(subgraph: "YouTrack", name: "updateableByProjectBased", type: "Boolean")
  readSharingSettings: AgileSharingSettings
    @source(subgraph: "YouTrack", name: "readSharingSettings", type: "AgileSharingSettings")
  updateSharingSettings: AgileSharingSettings
    @source(subgraph: "YouTrack", name: "updateSharingSettings", type: "AgileSharingSettings")
  orphansAtTheTop: Boolean @source(subgraph: "YouTrack", name: "orphansAtTheTop", type: "Boolean")
  hideOrphansSwimlane: Boolean
    @source(subgraph: "YouTrack", name: "hideOrphansSwimlane", type: "Boolean")
  estimationField: CustomField
    @source(subgraph: "YouTrack", name: "estimationField", type: "CustomField")
  originalEstimationField: CustomField
    @source(subgraph: "YouTrack", name: "originalEstimationField", type: "CustomField")
  projects: [Project] @source(subgraph: "YouTrack", name: "projects", type: "[Project]")
  sprints: [Sprint] @source(subgraph: "YouTrack", name: "sprints", type: "[Sprint]")
  currentSprint: Sprint @source(subgraph: "YouTrack", name: "currentSprint", type: "Sprint")
  columnSettings: ColumnSettings
    @source(subgraph: "YouTrack", name: "columnSettings", type: "ColumnSettings")
  swimlaneSettings: SwimlaneSettings
    @source(subgraph: "YouTrack", name: "swimlaneSettings", type: "SwimlaneSettings")
  sprintsSettings: SprintsSettings
    @source(subgraph: "YouTrack", name: "sprintsSettings", type: "SprintsSettings")
  colorCoding: ColorCoding @source(subgraph: "YouTrack", name: "colorCoding", type: "ColorCoding")
  status: AgileStatus @source(subgraph: "YouTrack", name: "status", type: "AgileStatus")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Stores users and groups that have access to an agile board."
type AgileSharingSettings
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "AgileSharingSettings") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  permittedGroups: [UserGroup]
    @source(subgraph: "YouTrack", name: "permittedGroups", type: "[UserGroup]")
  permittedUsers: [User] @source(subgraph: "YouTrack", name: "permittedUsers", type: "[User]")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

type Sprint
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "Sprint") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  agile: Agile @source(subgraph: "YouTrack", name: "agile", type: "Agile")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  goal: String @source(subgraph: "YouTrack", name: "goal", type: "String")
  start: BigInt @source(subgraph: "YouTrack", name: "start", type: "BigInt")
  finish: BigInt @source(subgraph: "YouTrack", name: "finish", type: "BigInt")
  archived: Boolean @source(subgraph: "YouTrack", name: "archived", type: "Boolean")
  isDefault: Boolean @source(subgraph: "YouTrack", name: "isDefault", type: "Boolean")
  issues: [Issue] @source(subgraph: "YouTrack", name: "issues", type: "[Issue]")
  unresolvedIssuesCount: Int
    @source(subgraph: "YouTrack", name: "unresolvedIssuesCount", type: "Int")
  previousSprint: Sprint @source(subgraph: "YouTrack", name: "previousSprint", type: "Sprint")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Agile board columns settings."
type ColumnSettings
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "ColumnSettings") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  field: CustomField @source(subgraph: "YouTrack", name: "field", type: "CustomField")
  columns: [AgileColumn] @source(subgraph: "YouTrack", name: "columns", type: "[AgileColumn]")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents settings for a single board column"
type AgileColumn
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "AgileColumn") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  presentation: String @source(subgraph: "YouTrack", name: "presentation", type: "String")
  isResolved: Boolean @source(subgraph: "YouTrack", name: "isResolved", type: "Boolean")
  ordinal: Int @source(subgraph: "YouTrack", name: "ordinal", type: "Int")
  "Agile board columns settings."
  parent: ColumnSettings @source(subgraph: "YouTrack", name: "parent", type: "ColumnSettings")
  wipLimit: WIPLimit @source(subgraph: "YouTrack", name: "wipLimit", type: "WIPLimit")
  fieldValues: [AgileColumnFieldValue]
    @source(subgraph: "YouTrack", name: "fieldValues", type: "[AgileColumnFieldValue]")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents WIP limits for particular column. If they are not satisfied, the column will be highlighted in UI."
type WIPLimit
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "WIPLimit") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  max: Int @source(subgraph: "YouTrack", name: "max", type: "Int")
  min: Int @source(subgraph: "YouTrack", name: "min", type: "Int")
  "Represents settings for a single board column"
  column: AgileColumn @source(subgraph: "YouTrack", name: "column", type: "AgileColumn")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Describes sprints configuration."
type SprintsSettings
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "SprintsSettings") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  isExplicit: Boolean @source(subgraph: "YouTrack", name: "isExplicit", type: "Boolean")
  cardOnSeveralSprints: Boolean
    @source(subgraph: "YouTrack", name: "cardOnSeveralSprints", type: "Boolean")
  defaultSprint: Sprint @source(subgraph: "YouTrack", name: "defaultSprint", type: "Sprint")
  disableSprints: Boolean @source(subgraph: "YouTrack", name: "disableSprints", type: "Boolean")
  explicitQuery: String @source(subgraph: "YouTrack", name: "explicitQuery", type: "String")
  sprintSyncField: CustomField
    @source(subgraph: "YouTrack", name: "sprintSyncField", type: "CustomField")
  hideSubtasksOfCards: Boolean
    @source(subgraph: "YouTrack", name: "hideSubtasksOfCards", type: "Boolean")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Shows if the board has any configuration problems."
type AgileStatus
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "AgileStatus") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  valid: Boolean @source(subgraph: "YouTrack", name: "valid", type: "Boolean")
  hasJobs: Boolean @source(subgraph: "YouTrack", name: "hasJobs", type: "Boolean")
  errors: [String] @source(subgraph: "YouTrack", name: "errors", type: "[String]")
  warnings: [String] @source(subgraph: "YouTrack", name: "warnings", type: "[String]")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

type IssueTimeTracker
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "IssueTimeTracker") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  workItems: [IssueWorkItem]
    @source(subgraph: "YouTrack", name: "workItems", type: "[IssueWorkItem]")
  enabled: Boolean @source(subgraph: "YouTrack", name: "enabled", type: "Boolean")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

type VcsChange
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "VcsChange") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  date: BigInt @source(subgraph: "YouTrack", name: "date", type: "BigInt")
  fetched: BigInt @source(subgraph: "YouTrack", name: "fetched", type: "BigInt")
  files: Int @source(subgraph: "YouTrack", name: "files", type: "Int")
  author: User @source(subgraph: "YouTrack", name: "author", type: "User")
  processors: [ChangesProcessor]
    @source(subgraph: "YouTrack", name: "processors", type: "[ChangesProcessor]")
  text: String @source(subgraph: "YouTrack", name: "text", type: "String")
  urls: [String] @source(subgraph: "YouTrack", name: "urls", type: "[String]")
  version: String @source(subgraph: "YouTrack", name: "version", type: "String")
  issue: Issue @source(subgraph: "YouTrack", name: "issue", type: "Issue")
  state: Int @source(subgraph: "YouTrack", name: "state", type: "Int")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents date values"
scalar Date @source(subgraph: "YouTrack", name: "Date") @source(subgraph: "YouTrack", name: "Date")

type Mutation {
  post_admin_customFieldSettings_bundles_build(
    fields: String = "$type,id"
    input: BuildBundle_Input
  ): BuildBundle
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/build"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_admin_customFieldSettings_bundles_build($fields: String = \"$type,id\", $input: BuildBundle_Input) { post_admin_customFieldSettings_bundles_build(fields: $fields, input: $input) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "post_admin_customFieldSettings_bundles_build"
      type: "BuildBundle"
    )
  post_admin_customFieldSettings_bundles_build_by_id(
    id: String!
    fields: String = "$type,id"
    input: BuildBundle_Input
  ): BuildBundle
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/build/{args.id}"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_admin_customFieldSettings_bundles_build_by_id($id: String!, $fields: String = \"$type,id\", $input: BuildBundle_Input) { post_admin_customFieldSettings_bundles_build_by_id(id: $id, fields: $fields, input: $input) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "post_admin_customFieldSettings_bundles_build_by_id"
      type: "BuildBundle"
    )
  delete_admin_customFieldSettings_bundles_build_by_id(id: String!): JSON
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/build/{args.id}"
      httpMethod: DELETE
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationdelete_admin_customFieldSettings_bundles_build_by_id($id: String!) { delete_admin_customFieldSettings_bundles_build_by_id(id: $id) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "delete_admin_customFieldSettings_bundles_build_by_id"
      type: "JSON"
    )
  post_admin_customFieldSettings_bundles_build_by_id_values(
    id: String!
    fields: String = "$type,assembleDate,color($type,background,foreground,id),id,name,ordinal"
    input: BuildBundleElement_Input
  ): BuildBundleElement
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/build/{args.id}/values"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_admin_customFieldSettings_bundles_build_by_id_values($id: String!, $fields: String = \"$type,assembleDate,color($type,background,foreground,id),id,name,ordinal\", $input: BuildBundleElement_Input) { post_admin_customFieldSettings_bundles_build_by_id_values(id: $id, fields: $fields, input: $input) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "post_admin_customFieldSettings_bundles_build_by_id_values"
      type: "BuildBundleElement"
    )
  post_admin_customFieldSettings_bundles_build_by_id_values_by_buildBundleElementId(
    id: String!
    buildBundleElementId: String!
    fields: String = "$type,assembleDate,color($type,background,foreground,id),id,name,ordinal"
    input: BuildBundleElement_Input
  ): BuildBundleElement
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/build/{args.id}/values/{args.buildBundleElementId}"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_admin_customFieldSettings_bundles_build_by_id_values_by_buildBundleElementId($id: String!, $buildBundleElementId: String!, $fields: String = \"$type,assembleDate,color($type,background,foreground,id),id,name,ordinal\", $input: BuildBundleElement_Input) { post_admin_customFieldSettings_bundles_build_by_id_values_by_buildBundleElementId(id: $id, buildBundleElementId: $buildBundleElementId, fields: $fields, input: $input) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "post_admin_customFieldSettings_bundles_build_by_id_values_by_buildBundleElementId"
      type: "BuildBundleElement"
    )
  delete_admin_customFieldSettings_bundles_build_by_id_values_by_buildBundleElementId(
    id: String!
    buildBundleElementId: String!
  ): JSON
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/build/{args.id}/values/{args.buildBundleElementId}"
      httpMethod: DELETE
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationdelete_admin_customFieldSettings_bundles_build_by_id_values_by_buildBundleElementId($id: String!, $buildBundleElementId: String!) { delete_admin_customFieldSettings_bundles_build_by_id_values_by_buildBundleElementId(id: $id, buildBundleElementId: $buildBundleElementId) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "delete_admin_customFieldSettings_bundles_build_by_id_values_by_buildBundleElementId"
      type: "JSON"
    )
  post_admin_customFieldSettings_bundles_enum(
    fields: String = "$type,id"
    input: EnumBundle_Input
  ): EnumBundle
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/enum"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_admin_customFieldSettings_bundles_enum($fields: String = \"$type,id\", $input: EnumBundle_Input) { post_admin_customFieldSettings_bundles_enum(fields: $fields, input: $input) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "post_admin_customFieldSettings_bundles_enum"
      type: "EnumBundle"
    )
  post_admin_customFieldSettings_bundles_enum_by_id(
    id: String!
    fields: String = "$type,id"
    input: EnumBundle_Input
  ): EnumBundle
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/enum/{args.id}"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_admin_customFieldSettings_bundles_enum_by_id($id: String!, $fields: String = \"$type,id\", $input: EnumBundle_Input) { post_admin_customFieldSettings_bundles_enum_by_id(id: $id, fields: $fields, input: $input) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "post_admin_customFieldSettings_bundles_enum_by_id"
      type: "EnumBundle"
    )
  delete_admin_customFieldSettings_bundles_enum_by_id(id: String!): JSON
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/enum/{args.id}"
      httpMethod: DELETE
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationdelete_admin_customFieldSettings_bundles_enum_by_id($id: String!) { delete_admin_customFieldSettings_bundles_enum_by_id(id: $id) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "delete_admin_customFieldSettings_bundles_enum_by_id"
      type: "JSON"
    )
  post_admin_customFieldSettings_bundles_enum_by_id_values(
    id: String!
    fields: String = "$type,color($type,background,foreground,id),id,localizedName,name,ordinal"
    input: EnumBundleElement_Input
  ): EnumBundleElement
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/enum/{args.id}/values"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_admin_customFieldSettings_bundles_enum_by_id_values($id: String!, $fields: String = \"$type,color($type,background,foreground,id),id,localizedName,name,ordinal\", $input: EnumBundleElement_Input) { post_admin_customFieldSettings_bundles_enum_by_id_values(id: $id, fields: $fields, input: $input) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "post_admin_customFieldSettings_bundles_enum_by_id_values"
      type: "EnumBundleElement"
    )
  post_admin_customFieldSettings_bundles_enum_by_id_values_by_enumBundleElementId(
    id: String!
    enumBundleElementId: String!
    fields: String = "$type,color($type,background,foreground,id),id,localizedName,name,ordinal"
    input: EnumBundleElement_Input
  ): EnumBundleElement
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/enum/{args.id}/values/{args.enumBundleElementId}"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_admin_customFieldSettings_bundles_enum_by_id_values_by_enumBundleElementId($id: String!, $enumBundleElementId: String!, $fields: String = \"$type,color($type,background,foreground,id),id,localizedName,name,ordinal\", $input: EnumBundleElement_Input) { post_admin_customFieldSettings_bundles_enum_by_id_values_by_enumBundleElementId(id: $id, enumBundleElementId: $enumBundleElementId, fields: $fields, input: $input) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "post_admin_customFieldSettings_bundles_enum_by_id_values_by_enumBundleElementId"
      type: "EnumBundleElement"
    )
  delete_admin_customFieldSettings_bundles_enum_by_id_values_by_enumBundleElementId(
    id: String!
    enumBundleElementId: String!
  ): JSON
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/enum/{args.id}/values/{args.enumBundleElementId}"
      httpMethod: DELETE
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationdelete_admin_customFieldSettings_bundles_enum_by_id_values_by_enumBundleElementId($id: String!, $enumBundleElementId: String!) { delete_admin_customFieldSettings_bundles_enum_by_id_values_by_enumBundleElementId(id: $id, enumBundleElementId: $enumBundleElementId) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "delete_admin_customFieldSettings_bundles_enum_by_id_values_by_enumBundleElementId"
      type: "JSON"
    )
  post_admin_customFieldSettings_bundles_ownedField(
    fields: String = "$type,id"
    input: OwnedBundle_Input
  ): OwnedBundle
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/ownedField"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_admin_customFieldSettings_bundles_ownedField($fields: String = \"$type,id\", $input: OwnedBundle_Input) { post_admin_customFieldSettings_bundles_ownedField(fields: $fields, input: $input) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "post_admin_customFieldSettings_bundles_ownedField"
      type: "OwnedBundle"
    )
  post_admin_customFieldSettings_bundles_ownedField_by_id(
    id: String!
    fields: String = "$type,id"
    input: OwnedBundle_Input
  ): OwnedBundle
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/ownedField/{args.id}"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_admin_customFieldSettings_bundles_ownedField_by_id($id: String!, $fields: String = \"$type,id\", $input: OwnedBundle_Input) { post_admin_customFieldSettings_bundles_ownedField_by_id(id: $id, fields: $fields, input: $input) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "post_admin_customFieldSettings_bundles_ownedField_by_id"
      type: "OwnedBundle"
    )
  delete_admin_customFieldSettings_bundles_ownedField_by_id(id: String!): JSON
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/ownedField/{args.id}"
      httpMethod: DELETE
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationdelete_admin_customFieldSettings_bundles_ownedField_by_id($id: String!) { delete_admin_customFieldSettings_bundles_ownedField_by_id(id: $id) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "delete_admin_customFieldSettings_bundles_ownedField_by_id"
      type: "JSON"
    )
  post_admin_customFieldSettings_bundles_ownedField_by_id_values(
    id: String!
    fields: String = "$type,color($type,background,foreground,id),id,name,ordinal,owner($type,id,login,ringId)"
    input: OwnedBundleElement_Input
  ): OwnedBundleElement
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/ownedField/{args.id}/values"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_admin_customFieldSettings_bundles_ownedField_by_id_values($id: String!, $fields: String = \"$type,color($type,background,foreground,id),id,name,ordinal,owner($type,id,login,ringId)\", $input: OwnedBundleElement_Input) { post_admin_customFieldSettings_bundles_ownedField_by_id_values(id: $id, fields: $fields, input: $input) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "post_admin_customFieldSettings_bundles_ownedField_by_id_values"
      type: "OwnedBundleElement"
    )
  post_admin_customFieldSettings_bundles_ownedField_by_id_values_by_ownedBundleElementId(
    id: String!
    ownedBundleElementId: String!
    fields: String = "$type,color($type,background,foreground,id),id,name,ordinal,owner($type,id,login,ringId)"
    input: OwnedBundleElement_Input
  ): OwnedBundleElement
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/ownedField/{args.id}/values/{args.ownedBundleElementId}"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_admin_customFieldSettings_bundles_ownedField_by_id_values_by_ownedBundleElementId($id: String!, $ownedBundleElementId: String!, $fields: String = \"$type,color($type,background,foreground,id),id,name,ordinal,owner($type,id,login,ringId)\", $input: OwnedBundleElement_Input) { post_admin_customFieldSettings_bundles_ownedField_by_id_values_by_ownedBundleElementId(id: $id, ownedBundleElementId: $ownedBundleElementId, fields: $fields, input: $input) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "post_admin_customFieldSettings_bundles_ownedField_by_id_values_by_ownedBundleElementId"
      type: "OwnedBundleElement"
    )
  delete_admin_customFieldSettings_bundles_ownedField_by_id_values_by_ownedBundleElementId(
    id: String!
    ownedBundleElementId: String!
  ): JSON
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/ownedField/{args.id}/values/{args.ownedBundleElementId}"
      httpMethod: DELETE
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationdelete_admin_customFieldSettings_bundles_ownedField_by_id_values_by_ownedBundleElementId($id: String!, $ownedBundleElementId: String!) { delete_admin_customFieldSettings_bundles_ownedField_by_id_values_by_ownedBundleElementId(id: $id, ownedBundleElementId: $ownedBundleElementId) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "delete_admin_customFieldSettings_bundles_ownedField_by_id_values_by_ownedBundleElementId"
      type: "JSON"
    )
  post_admin_customFieldSettings_bundles_state(
    fields: String = "$type,id"
    input: StateBundle_Input
  ): StateBundle
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/state"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_admin_customFieldSettings_bundles_state($fields: String = \"$type,id\", $input: StateBundle_Input) { post_admin_customFieldSettings_bundles_state(fields: $fields, input: $input) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "post_admin_customFieldSettings_bundles_state"
      type: "StateBundle"
    )
  post_admin_customFieldSettings_bundles_state_by_id(
    id: String!
    fields: String = "$type,id"
    input: StateBundle_Input
  ): StateBundle
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/state/{args.id}"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_admin_customFieldSettings_bundles_state_by_id($id: String!, $fields: String = \"$type,id\", $input: StateBundle_Input) { post_admin_customFieldSettings_bundles_state_by_id(id: $id, fields: $fields, input: $input) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "post_admin_customFieldSettings_bundles_state_by_id"
      type: "StateBundle"
    )
  delete_admin_customFieldSettings_bundles_state_by_id(id: String!): JSON
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/state/{args.id}"
      httpMethod: DELETE
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationdelete_admin_customFieldSettings_bundles_state_by_id($id: String!) { delete_admin_customFieldSettings_bundles_state_by_id(id: $id) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "delete_admin_customFieldSettings_bundles_state_by_id"
      type: "JSON"
    )
  post_admin_customFieldSettings_bundles_state_by_id_values(
    id: String!
    fields: String = "$type,color($type,background,foreground,id),id,isResolved,localizedName,name,ordinal"
    input: StateBundleElement_Input
  ): StateBundleElement
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/state/{args.id}/values"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_admin_customFieldSettings_bundles_state_by_id_values($id: String!, $fields: String = \"$type,color($type,background,foreground,id),id,isResolved,localizedName,name,ordinal\", $input: StateBundleElement_Input) { post_admin_customFieldSettings_bundles_state_by_id_values(id: $id, fields: $fields, input: $input) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "post_admin_customFieldSettings_bundles_state_by_id_values"
      type: "StateBundleElement"
    )
  post_admin_customFieldSettings_bundles_state_by_id_values_by_stateBundleElementId(
    id: String!
    stateBundleElementId: String!
    fields: String = "$type,color($type,background,foreground,id),id,isResolved,localizedName,name,ordinal"
    input: StateBundleElement_Input
  ): StateBundleElement
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/state/{args.id}/values/{args.stateBundleElementId}"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_admin_customFieldSettings_bundles_state_by_id_values_by_stateBundleElementId($id: String!, $stateBundleElementId: String!, $fields: String = \"$type,color($type,background,foreground,id),id,isResolved,localizedName,name,ordinal\", $input: StateBundleElement_Input) { post_admin_customFieldSettings_bundles_state_by_id_values_by_stateBundleElementId(id: $id, stateBundleElementId: $stateBundleElementId, fields: $fields, input: $input) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "post_admin_customFieldSettings_bundles_state_by_id_values_by_stateBundleElementId"
      type: "StateBundleElement"
    )
  delete_admin_customFieldSettings_bundles_state_by_id_values_by_stateBundleElementId(
    id: String!
    stateBundleElementId: String!
  ): JSON
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/state/{args.id}/values/{args.stateBundleElementId}"
      httpMethod: DELETE
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationdelete_admin_customFieldSettings_bundles_state_by_id_values_by_stateBundleElementId($id: String!, $stateBundleElementId: String!) { delete_admin_customFieldSettings_bundles_state_by_id_values_by_stateBundleElementId(id: $id, stateBundleElementId: $stateBundleElementId) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "delete_admin_customFieldSettings_bundles_state_by_id_values_by_stateBundleElementId"
      type: "JSON"
    )
  post_admin_customFieldSettings_bundles_user(
    fields: String = "$type,id"
    input: UserBundle_Input
  ): UserBundle
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/user"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_admin_customFieldSettings_bundles_user($fields: String = \"$type,id\", $input: UserBundle_Input) { post_admin_customFieldSettings_bundles_user(fields: $fields, input: $input) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "post_admin_customFieldSettings_bundles_user"
      type: "UserBundle"
    )
  post_admin_customFieldSettings_bundles_user_by_id(
    id: String!
    fields: String = "$type,id"
    input: UserBundle_Input
  ): UserBundle
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/user/{args.id}"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_admin_customFieldSettings_bundles_user_by_id($id: String!, $fields: String = \"$type,id\", $input: UserBundle_Input) { post_admin_customFieldSettings_bundles_user_by_id(id: $id, fields: $fields, input: $input) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "post_admin_customFieldSettings_bundles_user_by_id"
      type: "UserBundle"
    )
  delete_admin_customFieldSettings_bundles_user_by_id(id: String!): JSON
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/user/{args.id}"
      httpMethod: DELETE
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationdelete_admin_customFieldSettings_bundles_user_by_id($id: String!) { delete_admin_customFieldSettings_bundles_user_by_id(id: $id) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "delete_admin_customFieldSettings_bundles_user_by_id"
      type: "JSON"
    )
  post_admin_customFieldSettings_bundles_user_by_id_groups(
    id: String!
    fields: String = "$type,allUsersGroup,id,name,ringId"
    input: UserGroup_Input
  ): UserGroup
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/user/{args.id}/groups"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_admin_customFieldSettings_bundles_user_by_id_groups($id: String!, $fields: String = \"$type,allUsersGroup,id,name,ringId\", $input: UserGroup_Input) { post_admin_customFieldSettings_bundles_user_by_id_groups(id: $id, fields: $fields, input: $input) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "post_admin_customFieldSettings_bundles_user_by_id_groups"
      type: "UserGroup"
    )
  delete_admin_customFieldSettings_bundles_user_by_id_groups_by_userGroupId(
    id: String!
    userGroupId: String!
  ): JSON
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/user/{args.id}/groups/{args.userGroupId}"
      httpMethod: DELETE
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationdelete_admin_customFieldSettings_bundles_user_by_id_groups_by_userGroupId($id: String!, $userGroupId: String!) { delete_admin_customFieldSettings_bundles_user_by_id_groups_by_userGroupId(id: $id, userGroupId: $userGroupId) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "delete_admin_customFieldSettings_bundles_user_by_id_groups_by_userGroupId"
      type: "JSON"
    )
  post_admin_customFieldSettings_bundles_user_by_id_individuals(
    id: String!
    fields: String = "$type,banned,email,fullName,guest,id,login,ringId"
    input: User_Input
  ): User
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/user/{args.id}/individuals"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_admin_customFieldSettings_bundles_user_by_id_individuals($id: String!, $fields: String = \"$type,banned,email,fullName,guest,id,login,ringId\", $input: User_Input) { post_admin_customFieldSettings_bundles_user_by_id_individuals(id: $id, fields: $fields, input: $input) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "post_admin_customFieldSettings_bundles_user_by_id_individuals"
      type: "User"
    )
  delete_admin_customFieldSettings_bundles_user_by_id_individuals_by_userId(
    id: String!
    userId: String!
  ): JSON
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/user/{args.id}/individuals/{args.userId}"
      httpMethod: DELETE
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationdelete_admin_customFieldSettings_bundles_user_by_id_individuals_by_userId($id: String!, $userId: String!) { delete_admin_customFieldSettings_bundles_user_by_id_individuals_by_userId(id: $id, userId: $userId) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "delete_admin_customFieldSettings_bundles_user_by_id_individuals_by_userId"
      type: "JSON"
    )
  post_admin_customFieldSettings_bundles_version(
    fields: String = "$type,id"
    input: VersionBundle_Input
  ): VersionBundle
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/version"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_admin_customFieldSettings_bundles_version($fields: String = \"$type,id\", $input: VersionBundle_Input) { post_admin_customFieldSettings_bundles_version(fields: $fields, input: $input) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "post_admin_customFieldSettings_bundles_version"
      type: "VersionBundle"
    )
  post_admin_customFieldSettings_bundles_version_by_id(
    id: String!
    fields: String = "$type,id"
    input: VersionBundle_Input
  ): VersionBundle
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/version/{args.id}"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_admin_customFieldSettings_bundles_version_by_id($id: String!, $fields: String = \"$type,id\", $input: VersionBundle_Input) { post_admin_customFieldSettings_bundles_version_by_id(id: $id, fields: $fields, input: $input) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "post_admin_customFieldSettings_bundles_version_by_id"
      type: "VersionBundle"
    )
  delete_admin_customFieldSettings_bundles_version_by_id(id: String!): JSON
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/version/{args.id}"
      httpMethod: DELETE
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationdelete_admin_customFieldSettings_bundles_version_by_id($id: String!) { delete_admin_customFieldSettings_bundles_version_by_id(id: $id) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "delete_admin_customFieldSettings_bundles_version_by_id"
      type: "JSON"
    )
  post_admin_customFieldSettings_bundles_version_by_id_values(
    id: String!
    fields: String = "$type,archived,color($type,background,foreground,id),id,name,ordinal,releaseDate,released"
    input: VersionBundleElement_Input
  ): VersionBundleElement
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/version/{args.id}/values"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_admin_customFieldSettings_bundles_version_by_id_values($id: String!, $fields: String = \"$type,archived,color($type,background,foreground,id),id,name,ordinal,releaseDate,released\", $input: VersionBundleElement_Input) { post_admin_customFieldSettings_bundles_version_by_id_values(id: $id, fields: $fields, input: $input) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "post_admin_customFieldSettings_bundles_version_by_id_values"
      type: "VersionBundleElement"
    )
  post_admin_customFieldSettings_bundles_version_by_id_values_by_versionBundleElementId(
    id: String!
    versionBundleElementId: String!
    fields: String = "$type,archived,color($type,background,foreground,id),id,name,ordinal,releaseDate,released"
    input: VersionBundleElement_Input
  ): VersionBundleElement
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/version/{args.id}/values/{args.versionBundleElementId}"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_admin_customFieldSettings_bundles_version_by_id_values_by_versionBundleElementId($id: String!, $versionBundleElementId: String!, $fields: String = \"$type,archived,color($type,background,foreground,id),id,name,ordinal,releaseDate,released\", $input: VersionBundleElement_Input) { post_admin_customFieldSettings_bundles_version_by_id_values_by_versionBundleElementId(id: $id, versionBundleElementId: $versionBundleElementId, fields: $fields, input: $input) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "post_admin_customFieldSettings_bundles_version_by_id_values_by_versionBundleElementId"
      type: "VersionBundleElement"
    )
  delete_admin_customFieldSettings_bundles_version_by_id_values_by_versionBundleElementId(
    id: String!
    versionBundleElementId: String!
  ): JSON
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/bundles/version/{args.id}/values/{args.versionBundleElementId}"
      httpMethod: DELETE
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationdelete_admin_customFieldSettings_bundles_version_by_id_values_by_versionBundleElementId($id: String!, $versionBundleElementId: String!) { delete_admin_customFieldSettings_bundles_version_by_id_values_by_versionBundleElementId(id: $id, versionBundleElementId: $versionBundleElementId) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "delete_admin_customFieldSettings_bundles_version_by_id_values_by_versionBundleElementId"
      type: "JSON"
    )
  post_admin_customFieldSettings_customFields(
    fields: String = "$type,fieldType($type,id),id,isAutoAttached,isUpdateable,localizedName,name,ordinal"
    input: CustomField_Input
  ): CustomField
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/customFields"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_admin_customFieldSettings_customFields($fields: String = \"$type,fieldType($type,id),id,isAutoAttached,isUpdateable,localizedName,name,ordinal\", $input: CustomField_Input) { post_admin_customFieldSettings_customFields(fields: $fields, input: $input) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "post_admin_customFieldSettings_customFields"
      type: "CustomField"
    )
  post_admin_customFieldSettings_customFields_by_id(
    id: String!
    fields: String = "$type,fieldType($type,id),id,isAutoAttached,isUpdateable,localizedName,name,ordinal"
    input: CustomField_Input
  ): CustomField
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/customFields/{args.id}"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_admin_customFieldSettings_customFields_by_id($id: String!, $fields: String = \"$type,fieldType($type,id),id,isAutoAttached,isUpdateable,localizedName,name,ordinal\", $input: CustomField_Input) { post_admin_customFieldSettings_customFields_by_id(id: $id, fields: $fields, input: $input) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "post_admin_customFieldSettings_customFields_by_id"
      type: "CustomField"
    )
  delete_admin_customFieldSettings_customFields_by_id(id: String!): JSON
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/customFields/{args.id}"
      httpMethod: DELETE
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationdelete_admin_customFieldSettings_customFields_by_id($id: String!) { delete_admin_customFieldSettings_customFields_by_id(id: $id) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "delete_admin_customFieldSettings_customFields_by_id"
      type: "JSON"
    )
  post_admin_customFieldSettings_customFields_by_id_fieldDefaults(
    id: String!
    fields: String = "$type,bundle($type,id),canBeEmpty,defaultValues($type,id,name),emptyFieldText,id,isPublic"
    input: CustomFieldDefaults_Input
  ): CustomFieldDefaults
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/customFieldSettings/customFields/{args.id}/fieldDefaults"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_admin_customFieldSettings_customFields_by_id_fieldDefaults($id: String!, $fields: String = \"$type,bundle($type,id),canBeEmpty,defaultValues($type,id,name),emptyFieldText,id,isPublic\", $input: CustomFieldDefaults_Input) { post_admin_customFieldSettings_customFields_by_id_fieldDefaults(id: $id, fields: $fields, input: $input) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "post_admin_customFieldSettings_customFields_by_id_fieldDefaults"
      type: "CustomFieldDefaults"
    )
  post_admin_databaseBackup_settings(
    fields: String = "$type,availableDiskSpace,backupStatus($type,backupCancelled,backupError($type,date,errorMessage,id),backupInProgress,id),id,isOn,location"
    input: DatabaseBackupSettings_Input
  ): DatabaseBackupSettings
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/databaseBackup/settings"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_admin_databaseBackup_settings($fields: String = \"$type,availableDiskSpace,backupStatus($type,backupCancelled,backupError($type,date,errorMessage,id),backupInProgress,id),id,isOn,location\", $input: DatabaseBackupSettings_Input) { post_admin_databaseBackup_settings(fields: $fields, input: $input) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "post_admin_databaseBackup_settings"
      type: "DatabaseBackupSettings"
    )
  post_admin_globalSettings(
    fields: String = "$type,appearanceSettings($type,dateFieldFormat($type,datePattern,id,pattern,presentation),id,timeZone($type,id,offset,presentation)),id,license($type,error,id,license,username),localeSettings($type,id,isRTL,locale($type,community,id,language,locale,name)),notificationSettings($type,emailSettings($type,id,isEnabled),id),restSettings($type,allowAllOrigins,allowedOrigins,id),systemSettings($type,baseUrl,id,isApplicationReadOnly,maxExportItems,maxUploadFileSize)"
    input: GlobalSettings_Input
  ): GlobalSettings
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/globalSettings"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_admin_globalSettings($fields: String = \"$type,appearanceSettings($type,dateFieldFormat($type,datePattern,id,pattern,presentation),id,timeZone($type,id,offset,presentation)),id,license($type,error,id,license,username),localeSettings($type,id,isRTL,locale($type,community,id,language,locale,name)),notificationSettings($type,emailSettings($type,id,isEnabled),id),restSettings($type,allowAllOrigins,allowedOrigins,id),systemSettings($type,baseUrl,id,isApplicationReadOnly,maxExportItems,maxUploadFileSize)\", $input: GlobalSettings_Input) { post_admin_globalSettings(fields: $fields, input: $input) }"
    )
    @source(subgraph: "YouTrack", name: "post_admin_globalSettings", type: "GlobalSettings")
  post_admin_globalSettings_appearanceSettings(
    fields: String = "$type,dateFieldFormat($type,datePattern,id,pattern,presentation),id,timeZone($type,id,offset,presentation)"
    input: AppearanceSettings_Input
  ): AppearanceSettings
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/globalSettings/appearanceSettings"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_admin_globalSettings_appearanceSettings($fields: String = \"$type,dateFieldFormat($type,datePattern,id,pattern,presentation),id,timeZone($type,id,offset,presentation)\", $input: AppearanceSettings_Input) { post_admin_globalSettings_appearanceSettings(fields: $fields, input: $input) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "post_admin_globalSettings_appearanceSettings"
      type: "AppearanceSettings"
    )
  post_admin_globalSettings_license(
    fields: String = "$type,error,id,license,username"
    input: License_Input
  ): License
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/globalSettings/license"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_admin_globalSettings_license($fields: String = \"$type,error,id,license,username\", $input: License_Input) { post_admin_globalSettings_license(fields: $fields, input: $input) }"
    )
    @source(subgraph: "YouTrack", name: "post_admin_globalSettings_license", type: "License")
  post_admin_globalSettings_localeSettings(
    fields: String = "$type,id,isRTL,locale($type,community,id,language,locale,name)"
    input: LocaleSettings_Input
  ): LocaleSettings
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/globalSettings/localeSettings"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_admin_globalSettings_localeSettings($fields: String = \"$type,id,isRTL,locale($type,community,id,language,locale,name)\", $input: LocaleSettings_Input) { post_admin_globalSettings_localeSettings(fields: $fields, input: $input) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "post_admin_globalSettings_localeSettings"
      type: "LocaleSettings"
    )
  post_admin_globalSettings_notificationSettings(
    fields: String = "$type,emailSettings($type,id,isEnabled),id"
    input: NotificationSettings_Input
  ): NotificationSettings
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/globalSettings/notificationSettings"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_admin_globalSettings_notificationSettings($fields: String = \"$type,emailSettings($type,id,isEnabled),id\", $input: NotificationSettings_Input) { post_admin_globalSettings_notificationSettings(fields: $fields, input: $input) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "post_admin_globalSettings_notificationSettings"
      type: "NotificationSettings"
    )
  post_admin_globalSettings_restSettings(
    fields: String = "$type,allowAllOrigins,allowedOrigins,id"
    input: RestCorsSettings_Input
  ): RestCorsSettings
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/globalSettings/restSettings"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_admin_globalSettings_restSettings($fields: String = \"$type,allowAllOrigins,allowedOrigins,id\", $input: RestCorsSettings_Input) { post_admin_globalSettings_restSettings(fields: $fields, input: $input) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "post_admin_globalSettings_restSettings"
      type: "RestCorsSettings"
    )
  post_admin_globalSettings_systemSettings(
    fields: String = "$type,baseUrl,id,isApplicationReadOnly,maxExportItems,maxUploadFileSize"
    input: SystemSettings_Input
  ): SystemSettings
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/globalSettings/systemSettings"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_admin_globalSettings_systemSettings($fields: String = \"$type,baseUrl,id,isApplicationReadOnly,maxExportItems,maxUploadFileSize\", $input: SystemSettings_Input) { post_admin_globalSettings_systemSettings(fields: $fields, input: $input) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "post_admin_globalSettings_systemSettings"
      type: "SystemSettings"
    )
  post_admin_projects(
    "If the `template` is not specified, then the new project will use the default settings.\n<emphasis>Optional</emphasis>. Lets you specify the template to use for the new project.\nPossible values: `scrum`, `kanban`."
    template: String
    fields: String = "$type,archived,customFields,id,leader($type,id,login,ringId),name,shortName"
    input: Project_Input
  ): Project
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/projects"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"template\\\":\\\"template\\\",\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_admin_projects($template: String, $fields: String = \"$type,archived,customFields,id,leader($type,id,login,ringId),name,shortName\", $input: Project_Input) { post_admin_projects(template: $template, fields: $fields, input: $input) }"
    )
    @source(subgraph: "YouTrack", name: "post_admin_projects", type: "Project")
  post_admin_projects_by_id(
    id: String!
    fields: String = "$type,archived,customFields,id,leader($type,id,login,ringId),name,shortName"
    input: Project_Input
  ): Project
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/projects/{args.id}"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_admin_projects_by_id($id: String!, $fields: String = \"$type,archived,customFields,id,leader($type,id,login,ringId),name,shortName\", $input: Project_Input) { post_admin_projects_by_id(id: $id, fields: $fields, input: $input) }"
    )
    @source(subgraph: "YouTrack", name: "post_admin_projects_by_id", type: "Project")
  delete_admin_projects_by_id(id: String!): JSON
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/projects/{args.id}"
      httpMethod: DELETE
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationdelete_admin_projects_by_id($id: String!) { delete_admin_projects_by_id(id: $id) }"
    )
    @source(subgraph: "YouTrack", name: "delete_admin_projects_by_id", type: "JSON")
  post_admin_projects_by_id_customFields(
    id: String!
    fields: String = "$type,bundle($type,id),canBeEmpty,defaultValues($type,id,name),emptyFieldText,field($type,fieldType($type,id),id,localizedName,name),id,isPublic,ordinal"
    input: ProjectCustomField_Input
  ): ProjectCustomField
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/projects/{args.id}/customFields"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_admin_projects_by_id_customFields($id: String!, $fields: String = \"$type,bundle($type,id),canBeEmpty,defaultValues($type,id,name),emptyFieldText,field($type,fieldType($type,id),id,localizedName,name),id,isPublic,ordinal\", $input: ProjectCustomField_Input) { post_admin_projects_by_id_customFields(id: $id, fields: $fields, input: $input) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "post_admin_projects_by_id_customFields"
      type: "ProjectCustomField"
    )
  post_admin_projects_by_id_customFields_by_projectCustomFieldId(
    id: String!
    projectCustomFieldId: String!
    fields: String = "$type,bundle($type,id),canBeEmpty,defaultValues($type,id,name),emptyFieldText,field($type,fieldType($type,id),id,localizedName,name),id,isPublic,ordinal"
    input: ProjectCustomField_Input
  ): ProjectCustomField
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/projects/{args.id}/customFields/{args.projectCustomFieldId}"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_admin_projects_by_id_customFields_by_projectCustomFieldId($id: String!, $projectCustomFieldId: String!, $fields: String = \"$type,bundle($type,id),canBeEmpty,defaultValues($type,id,name),emptyFieldText,field($type,fieldType($type,id),id,localizedName,name),id,isPublic,ordinal\", $input: ProjectCustomField_Input) { post_admin_projects_by_id_customFields_by_projectCustomFieldId(id: $id, projectCustomFieldId: $projectCustomFieldId, fields: $fields, input: $input) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "post_admin_projects_by_id_customFields_by_projectCustomFieldId"
      type: "ProjectCustomField"
    )
  delete_admin_projects_by_id_customFields_by_projectCustomFieldId(
    id: String!
    projectCustomFieldId: String!
  ): JSON
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/projects/{args.id}/customFields/{args.projectCustomFieldId}"
      httpMethod: DELETE
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationdelete_admin_projects_by_id_customFields_by_projectCustomFieldId($id: String!, $projectCustomFieldId: String!) { delete_admin_projects_by_id_customFields_by_projectCustomFieldId(id: $id, projectCustomFieldId: $projectCustomFieldId) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "delete_admin_projects_by_id_customFields_by_projectCustomFieldId"
      type: "JSON"
    )
  post_admin_projects_by_id_issues(
    id: String!
    "Set this parameter to `true` if no notifications should be sent on changes made by this request. This doesn't mute notifications sent by any workflow rules. Using this parameter requires <control>Apply Commands Silently</control> permission in all projects affected by the request. Available since 2021.3."
    muteUpdateNotifications: Boolean
    fields: String = "$type,created,customFields($type,id,name,value($type,id,name)),description,id,idReadable,links($type,direction,id,linkType($type,id,localizedName,name)),numberInProject,project($type,id,name,shortName),reporter($type,id,login,ringId),resolved,summary,updated,updater($type,id,login,ringId),visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,ringId))"
    input: Issue_Input
  ): Issue
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/projects/{args.id}/issues"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"muteUpdateNotifications\\\":\\\"muteUpdateNotifications\\\",\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_admin_projects_by_id_issues($id: String!, $muteUpdateNotifications: Boolean, $fields: String = \"$type,created,customFields($type,id,name,value($type,id,name)),description,id,idReadable,links($type,direction,id,linkType($type,id,localizedName,name)),numberInProject,project($type,id,name,shortName),reporter($type,id,login,ringId),resolved,summary,updated,updater($type,id,login,ringId),visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,ringId))\", $input: Issue_Input) { post_admin_projects_by_id_issues(id: $id, muteUpdateNotifications: $muteUpdateNotifications, fields: $fields, input: $input) }"
    )
    @source(subgraph: "YouTrack", name: "post_admin_projects_by_id_issues", type: "Issue")
  post_admin_projects_by_id_issues_by_issueId(
    id: String!
    issueId: String!
    "Set this parameter to `true` if no notifications should be sent on changes made by this request. This doesn't mute notifications sent by any workflow rules. Using this parameter requires <control>Apply Commands Silently</control> permission in all projects affected by the request. Available since 2021.3."
    muteUpdateNotifications: Boolean
    fields: String = "$type,created,customFields($type,id,name,value($type,id,name)),description,id,idReadable,links($type,direction,id,linkType($type,id,localizedName,name)),numberInProject,project($type,id,name,shortName),reporter($type,id,login,ringId),resolved,summary,updated,updater($type,id,login,ringId),visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,ringId))"
    input: Issue_Input
  ): Issue
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/projects/{args.id}/issues/{args.issueId}"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"muteUpdateNotifications\\\":\\\"muteUpdateNotifications\\\",\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_admin_projects_by_id_issues_by_issueId($id: String!, $issueId: String!, $muteUpdateNotifications: Boolean, $fields: String = \"$type,created,customFields($type,id,name,value($type,id,name)),description,id,idReadable,links($type,direction,id,linkType($type,id,localizedName,name)),numberInProject,project($type,id,name,shortName),reporter($type,id,login,ringId),resolved,summary,updated,updater($type,id,login,ringId),visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,ringId))\", $input: Issue_Input) { post_admin_projects_by_id_issues_by_issueId(id: $id, issueId: $issueId, muteUpdateNotifications: $muteUpdateNotifications, fields: $fields, input: $input) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "post_admin_projects_by_id_issues_by_issueId"
      type: "Issue"
    )
  delete_admin_projects_by_id_issues_by_issueId(id: String!, issueId: String!): JSON
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/projects/{args.id}/issues/{args.issueId}"
      httpMethod: DELETE
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationdelete_admin_projects_by_id_issues_by_issueId($id: String!, $issueId: String!) { delete_admin_projects_by_id_issues_by_issueId(id: $id, issueId: $issueId) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "delete_admin_projects_by_id_issues_by_issueId"
      type: "JSON"
    )
  post_admin_projects_by_id_timeTrackingSettings(
    id: String!
    fields: String = "$type,enabled,estimate($type,field($type,fieldType($type,id),id,localizedName,name),id),id,timeSpent($type,field($type,fieldType($type,id),id,localizedName,name),id)"
    input: ProjectTimeTrackingSettings_Input
  ): ProjectTimeTrackingSettings
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/projects/{args.id}/timeTrackingSettings"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_admin_projects_by_id_timeTrackingSettings($id: String!, $fields: String = \"$type,enabled,estimate($type,field($type,fieldType($type,id),id,localizedName,name),id),id,timeSpent($type,field($type,fieldType($type,id),id,localizedName,name),id)\", $input: ProjectTimeTrackingSettings_Input) { post_admin_projects_by_id_timeTrackingSettings(id: $id, fields: $fields, input: $input) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "post_admin_projects_by_id_timeTrackingSettings"
      type: "ProjectTimeTrackingSettings"
    )
  post_admin_projects_by_id_timeTrackingSettings_workItemTypes(
    id: String!
    fields: String = "$type,autoAttached,id,name"
    input: WorkItemType_Input
  ): WorkItemType
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/projects/{args.id}/timeTrackingSettings/workItemTypes"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_admin_projects_by_id_timeTrackingSettings_workItemTypes($id: String!, $fields: String = \"$type,autoAttached,id,name\", $input: WorkItemType_Input) { post_admin_projects_by_id_timeTrackingSettings_workItemTypes(id: $id, fields: $fields, input: $input) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "post_admin_projects_by_id_timeTrackingSettings_workItemTypes"
      type: "WorkItemType"
    )
  delete_admin_projects_by_id_timeTrackingSettings_workItemTypes_by_workItemTypeId(
    id: String!
    workItemTypeId: String!
  ): JSON
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/projects/{args.id}/timeTrackingSettings/workItemTypes/{args.workItemTypeId}"
      httpMethod: DELETE
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationdelete_admin_projects_by_id_timeTrackingSettings_workItemTypes_by_workItemTypeId($id: String!, $workItemTypeId: String!) { delete_admin_projects_by_id_timeTrackingSettings_workItemTypes_by_workItemTypeId(id: $id, workItemTypeId: $workItemTypeId) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "delete_admin_projects_by_id_timeTrackingSettings_workItemTypes_by_workItemTypeId"
      type: "JSON"
    )
  post_admin_timeTrackingSettings_workItemTypes(
    fields: String = "$type,autoAttached,id,name"
    input: WorkItemType_Input
  ): WorkItemType
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/timeTrackingSettings/workItemTypes"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_admin_timeTrackingSettings_workItemTypes($fields: String = \"$type,autoAttached,id,name\", $input: WorkItemType_Input) { post_admin_timeTrackingSettings_workItemTypes(fields: $fields, input: $input) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "post_admin_timeTrackingSettings_workItemTypes"
      type: "WorkItemType"
    )
  post_admin_timeTrackingSettings_workItemTypes_by_workItemTypeId(
    workItemTypeId: String!
    fields: String = "$type,autoAttached,id,name"
    input: WorkItemType_Input
  ): WorkItemType
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/timeTrackingSettings/workItemTypes/{args.workItemTypeId}"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_admin_timeTrackingSettings_workItemTypes_by_workItemTypeId($workItemTypeId: String!, $fields: String = \"$type,autoAttached,id,name\", $input: WorkItemType_Input) { post_admin_timeTrackingSettings_workItemTypes_by_workItemTypeId(workItemTypeId: $workItemTypeId, fields: $fields, input: $input) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "post_admin_timeTrackingSettings_workItemTypes_by_workItemTypeId"
      type: "WorkItemType"
    )
  delete_admin_timeTrackingSettings_workItemTypes_by_workItemTypeId(workItemTypeId: String!): JSON
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/timeTrackingSettings/workItemTypes/{args.workItemTypeId}"
      httpMethod: DELETE
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationdelete_admin_timeTrackingSettings_workItemTypes_by_workItemTypeId($workItemTypeId: String!) { delete_admin_timeTrackingSettings_workItemTypes_by_workItemTypeId(workItemTypeId: $workItemTypeId) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "delete_admin_timeTrackingSettings_workItemTypes_by_workItemTypeId"
      type: "JSON"
    )
  post_admin_timeTrackingSettings_workTimeSettings(
    fields: String = "$type,daysAWeek,firstDayOfWeek,id,minutesADay,workDays"
    input: WorkTimeSettings_Input
  ): WorkTimeSettings
    @httpOperation(
      subgraph: "YouTrack"
      path: "/admin/timeTrackingSettings/workTimeSettings"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_admin_timeTrackingSettings_workTimeSettings($fields: String = \"$type,daysAWeek,firstDayOfWeek,id,minutesADay,workDays\", $input: WorkTimeSettings_Input) { post_admin_timeTrackingSettings_workTimeSettings(fields: $fields, input: $input) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "post_admin_timeTrackingSettings_workTimeSettings"
      type: "WorkTimeSettings"
    )
  post_agiles(
    "The name of the board template that should be used. Possible values: `kanban`, `scrum`, `version`, `custom`, `personal`."
    template: String
    fields: String = "$type,columnSettings($type,columns($type,id),field($type,fieldType($type,id),id,localizedName,name),id),id,name,owner($type,id,login,ringId),projects($type,id,name,shortName),status($type,id,valid),swimlaneSettings($type,enabled,field($type,customField($type,fieldType($type,id),id,localizedName,name),id,name),id,values($type,id,name))"
    input: Agile_Input
  ): Agile
    @httpOperation(
      subgraph: "YouTrack"
      path: "/agiles"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"template\\\":\\\"template\\\",\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_agiles($template: String, $fields: String = \"$type,columnSettings($type,columns($type,id),field($type,fieldType($type,id),id,localizedName,name),id),id,name,owner($type,id,login,ringId),projects($type,id,name,shortName),status($type,id,valid),swimlaneSettings($type,enabled,field($type,customField($type,fieldType($type,id),id,localizedName,name),id,name),id,values($type,id,name))\", $input: Agile_Input) { post_agiles(template: $template, fields: $fields, input: $input) }"
    )
    @source(subgraph: "YouTrack", name: "post_agiles", type: "Agile")
  post_agiles_by_id(
    id: String!
    fields: String = "$type,columnSettings($type,columns($type,id),field($type,fieldType($type,id),id,localizedName,name),id),id,name,owner($type,id,login,ringId),projects($type,id,name,shortName),status($type,id,valid),swimlaneSettings($type,enabled,field($type,customField($type,fieldType($type,id),id,localizedName,name),id,name),id,values($type,id,name))"
    input: Agile_Input
  ): Agile
    @httpOperation(
      subgraph: "YouTrack"
      path: "/agiles/{args.id}"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_agiles_by_id($id: String!, $fields: String = \"$type,columnSettings($type,columns($type,id),field($type,fieldType($type,id),id,localizedName,name),id),id,name,owner($type,id,login,ringId),projects($type,id,name,shortName),status($type,id,valid),swimlaneSettings($type,enabled,field($type,customField($type,fieldType($type,id),id,localizedName,name),id,name),id,values($type,id,name))\", $input: Agile_Input) { post_agiles_by_id(id: $id, fields: $fields, input: $input) }"
    )
    @source(subgraph: "YouTrack", name: "post_agiles_by_id", type: "Agile")
  delete_agiles_by_id(id: String!): JSON
    @httpOperation(
      subgraph: "YouTrack"
      path: "/agiles/{args.id}"
      httpMethod: DELETE
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationdelete_agiles_by_id($id: String!) { delete_agiles_by_id(id: $id) }"
    )
    @source(subgraph: "YouTrack", name: "delete_agiles_by_id", type: "JSON")
  post_agiles_by_id_sprints(
    id: String!
    "Set this parameter to `true` if no notifications should be sent on changes made by this request. This doesn't mute notifications sent by any workflow rules. Using this parameter requires <control>Apply Commands Silently</control> permission in all projects affected by the request. Available since 2021.3."
    muteUpdateNotifications: Boolean
    fields: String = "$type,archived,finish,id,isDefault,name,start"
    input: Sprint_Input
  ): Sprint
    @httpOperation(
      subgraph: "YouTrack"
      path: "/agiles/{args.id}/sprints"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"muteUpdateNotifications\\\":\\\"muteUpdateNotifications\\\",\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_agiles_by_id_sprints($id: String!, $muteUpdateNotifications: Boolean, $fields: String = \"$type,archived,finish,id,isDefault,name,start\", $input: Sprint_Input) { post_agiles_by_id_sprints(id: $id, muteUpdateNotifications: $muteUpdateNotifications, fields: $fields, input: $input) }"
    )
    @source(subgraph: "YouTrack", name: "post_agiles_by_id_sprints", type: "Sprint")
  post_agiles_by_id_sprints_by_sprintId(
    id: String!
    sprintId: String!
    fields: String = "$type,archived,finish,id,isDefault,name,start"
    input: Sprint_Input
  ): Sprint
    @httpOperation(
      subgraph: "YouTrack"
      path: "/agiles/{args.id}/sprints/{args.sprintId}"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_agiles_by_id_sprints_by_sprintId($id: String!, $sprintId: String!, $fields: String = \"$type,archived,finish,id,isDefault,name,start\", $input: Sprint_Input) { post_agiles_by_id_sprints_by_sprintId(id: $id, sprintId: $sprintId, fields: $fields, input: $input) }"
    )
    @source(subgraph: "YouTrack", name: "post_agiles_by_id_sprints_by_sprintId", type: "Sprint")
  delete_agiles_by_id_sprints_by_sprintId(id: String!, sprintId: String!): JSON
    @httpOperation(
      subgraph: "YouTrack"
      path: "/agiles/{args.id}/sprints/{args.sprintId}"
      httpMethod: DELETE
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationdelete_agiles_by_id_sprints_by_sprintId($id: String!, $sprintId: String!) { delete_agiles_by_id_sprints_by_sprintId(id: $id, sprintId: $sprintId) }"
    )
    @source(subgraph: "YouTrack", name: "delete_agiles_by_id_sprints_by_sprintId", type: "JSON")
  post_articles(
    "ID of a draft to publish as a new article. If no `draftId` is provided, the article is created from scratch. In this case, you must specify the project in the request payload."
    draftId: String
    "Set this parameter to `true` if no notifications should be sent on changes made by this request. This doesn't mute notifications sent by any workflow rules. Using this parameter requires Apply Commands Silently permission in all projects affected by the request. Available since 2021.3."
    muteUpdateNotifications: Boolean
    fields: String = "$type,content,created,id,idReadable,parentArticle($type,id,idReadable),project($type,id,name,shortName),summary,updated,updatedBy($type,id,login,ringId)"
    input: Article_Input
  ): Article
    @httpOperation(
      subgraph: "YouTrack"
      path: "/articles"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"draftId\\\":\\\"draftId\\\",\\\"muteUpdateNotifications\\\":\\\"muteUpdateNotifications\\\",\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_articles($draftId: String, $muteUpdateNotifications: Boolean, $fields: String = \"$type,content,created,id,idReadable,parentArticle($type,id,idReadable),project($type,id,name,shortName),summary,updated,updatedBy($type,id,login,ringId)\", $input: Article_Input) { post_articles(draftId: $draftId, muteUpdateNotifications: $muteUpdateNotifications, fields: $fields, input: $input) }"
    )
    @source(subgraph: "YouTrack", name: "post_articles", type: "Article")
  post_articles_by_id(
    id: String!
    "Set this parameter to `true` if no notifications should be sent on changes made by this request. This doesn't mute notifications sent by any workflow rules. Using this parameter requires Apply Commands Silently permission in all projects affected by the request. Available since 2021.3."
    muteUpdateNotifications: Boolean
    fields: String = "$type,content,created,id,idReadable,parentArticle($type,id,idReadable),project($type,id,name,shortName),summary,updated,updatedBy($type,id,login,ringId)"
    input: Article_Input
  ): Article
    @httpOperation(
      subgraph: "YouTrack"
      path: "/articles/{args.id}"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"muteUpdateNotifications\\\":\\\"muteUpdateNotifications\\\",\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_articles_by_id($id: String!, $muteUpdateNotifications: Boolean, $fields: String = \"$type,content,created,id,idReadable,parentArticle($type,id,idReadable),project($type,id,name,shortName),summary,updated,updatedBy($type,id,login,ringId)\", $input: Article_Input) { post_articles_by_id(id: $id, muteUpdateNotifications: $muteUpdateNotifications, fields: $fields, input: $input) }"
    )
    @source(subgraph: "YouTrack", name: "post_articles_by_id", type: "Article")
  delete_articles_by_id(id: String!): JSON
    @httpOperation(
      subgraph: "YouTrack"
      path: "/articles/{args.id}"
      httpMethod: DELETE
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationdelete_articles_by_id($id: String!) { delete_articles_by_id(id: $id) }"
    )
    @source(subgraph: "YouTrack", name: "delete_articles_by_id", type: "JSON")
  post_articles_by_id_attachments(
    id: String!
    "Set this parameter to `true` if no notifications should be sent on changes made by this request. This doesn't mute notifications sent by any workflow rules. Using this parameter requires <control>Apply Commands Silently</control> permission in all projects affected by the request. Available since 2021.3."
    muteUpdateNotifications: Boolean
    fields: String = "$type,author($type,id,login,ringId),charset,created,extension,id,metaData,mimeType,name,size,updated,url"
    input: ArticleAttachment_Input
  ): ArticleAttachment
    @httpOperation(
      subgraph: "YouTrack"
      path: "/articles/{args.id}/attachments"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"muteUpdateNotifications\\\":\\\"muteUpdateNotifications\\\",\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_articles_by_id_attachments($id: String!, $muteUpdateNotifications: Boolean, $fields: String = \"$type,author($type,id,login,ringId),charset,created,extension,id,metaData,mimeType,name,size,updated,url\", $input: ArticleAttachment_Input) { post_articles_by_id_attachments(id: $id, muteUpdateNotifications: $muteUpdateNotifications, fields: $fields, input: $input) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "post_articles_by_id_attachments"
      type: "ArticleAttachment"
    )
  post_articles_by_id_attachments_by_articleAttachmentId(
    id: String!
    articleAttachmentId: String!
    fields: String = "$type,author($type,id,login,ringId),charset,created,extension,id,metaData,mimeType,name,size,updated,url"
    input: ArticleAttachment_Input
  ): ArticleAttachment
    @httpOperation(
      subgraph: "YouTrack"
      path: "/articles/{args.id}/attachments/{args.articleAttachmentId}"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_articles_by_id_attachments_by_articleAttachmentId($id: String!, $articleAttachmentId: String!, $fields: String = \"$type,author($type,id,login,ringId),charset,created,extension,id,metaData,mimeType,name,size,updated,url\", $input: ArticleAttachment_Input) { post_articles_by_id_attachments_by_articleAttachmentId(id: $id, articleAttachmentId: $articleAttachmentId, fields: $fields, input: $input) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "post_articles_by_id_attachments_by_articleAttachmentId"
      type: "ArticleAttachment"
    )
  delete_articles_by_id_attachments_by_articleAttachmentId(
    id: String!
    articleAttachmentId: String!
  ): JSON
    @httpOperation(
      subgraph: "YouTrack"
      path: "/articles/{args.id}/attachments/{args.articleAttachmentId}"
      httpMethod: DELETE
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationdelete_articles_by_id_attachments_by_articleAttachmentId($id: String!, $articleAttachmentId: String!) { delete_articles_by_id_attachments_by_articleAttachmentId(id: $id, articleAttachmentId: $articleAttachmentId) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "delete_articles_by_id_attachments_by_articleAttachmentId"
      type: "JSON"
    )
  post_articles_by_id_childArticles(
    id: String!
    "Set this parameter to `true` if no notifications should be sent on changes made by this request. This doesn't mute notifications sent by any workflow rules. Using this parameter requires Apply Commands Silently permission in all projects affected by the request. Available since 2021.3."
    muteUpdateNotifications: Boolean
    fields: String = "$type,content,created,id,idReadable,parentArticle($type,id,idReadable),project($type,id,name,shortName),summary,updated,updatedBy($type,id,login,ringId)"
    input: Article_Input
  ): Article
    @httpOperation(
      subgraph: "YouTrack"
      path: "/articles/{args.id}/childArticles"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"muteUpdateNotifications\\\":\\\"muteUpdateNotifications\\\",\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_articles_by_id_childArticles($id: String!, $muteUpdateNotifications: Boolean, $fields: String = \"$type,content,created,id,idReadable,parentArticle($type,id,idReadable),project($type,id,name,shortName),summary,updated,updatedBy($type,id,login,ringId)\", $input: Article_Input) { post_articles_by_id_childArticles(id: $id, muteUpdateNotifications: $muteUpdateNotifications, fields: $fields, input: $input) }"
    )
    @source(subgraph: "YouTrack", name: "post_articles_by_id_childArticles", type: "Article")
  post_articles_by_id_childArticles_by_articleId(
    id: String!
    articleId: String!
    "Set this parameter to `true` if no notifications should be sent on changes made by this request. This doesn't mute notifications sent by any workflow rules. Using this parameter requires Apply Commands Silently permission in all projects affected by the request. Available since 2021.3."
    muteUpdateNotifications: Boolean
    fields: String = "$type,content,created,id,idReadable,parentArticle($type,id,idReadable),project($type,id,name,shortName),summary,updated,updatedBy($type,id,login,ringId)"
    input: Article_Input
  ): Article
    @httpOperation(
      subgraph: "YouTrack"
      path: "/articles/{args.id}/childArticles/{args.articleId}"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"muteUpdateNotifications\\\":\\\"muteUpdateNotifications\\\",\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_articles_by_id_childArticles_by_articleId($id: String!, $articleId: String!, $muteUpdateNotifications: Boolean, $fields: String = \"$type,content,created,id,idReadable,parentArticle($type,id,idReadable),project($type,id,name,shortName),summary,updated,updatedBy($type,id,login,ringId)\", $input: Article_Input) { post_articles_by_id_childArticles_by_articleId(id: $id, articleId: $articleId, muteUpdateNotifications: $muteUpdateNotifications, fields: $fields, input: $input) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "post_articles_by_id_childArticles_by_articleId"
      type: "Article"
    )
  delete_articles_by_id_childArticles_by_articleId(id: String!, articleId: String!): JSON
    @httpOperation(
      subgraph: "YouTrack"
      path: "/articles/{args.id}/childArticles/{args.articleId}"
      httpMethod: DELETE
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationdelete_articles_by_id_childArticles_by_articleId($id: String!, $articleId: String!) { delete_articles_by_id_childArticles_by_articleId(id: $id, articleId: $articleId) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "delete_articles_by_id_childArticles_by_articleId"
      type: "JSON"
    )
  post_articles_by_id_comments(
    id: String!
    "The ID of an existing draft that should be published. This parameter is optional."
    draftId: String
    "Set this parameter to `true` if no notifications should be sent on changes made by this request. This doesn't mute notifications sent by any workflow rules. Using this parameter requires <control>Apply Commands Silently</control> permission in all projects affected by the request. Available since 2021.3."
    muteUpdateNotifications: Boolean
    fields: String = "$type,attachments($type,id),author($type,id,login,ringId),created,id,text,updated,visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,ringId))"
    input: ArticleComment_Input
  ): ArticleComment
    @httpOperation(
      subgraph: "YouTrack"
      path: "/articles/{args.id}/comments"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"draftId\\\":\\\"draftId\\\",\\\"muteUpdateNotifications\\\":\\\"muteUpdateNotifications\\\",\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_articles_by_id_comments($id: String!, $draftId: String, $muteUpdateNotifications: Boolean, $fields: String = \"$type,attachments($type,id),author($type,id,login,ringId),created,id,text,updated,visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,ringId))\", $input: ArticleComment_Input) { post_articles_by_id_comments(id: $id, draftId: $draftId, muteUpdateNotifications: $muteUpdateNotifications, fields: $fields, input: $input) }"
    )
    @source(subgraph: "YouTrack", name: "post_articles_by_id_comments", type: "ArticleComment")
  post_articles_by_id_comments_by_articleCommentId(
    id: String!
    articleCommentId: String!
    "Set this parameter to `true` if no notifications should be sent on changes made by this request. This doesn't mute notifications sent by any workflow rules. Using this parameter requires <control>Apply Commands Silently</control> permission in all projects affected by the request. Available since 2021.3."
    muteUpdateNotifications: Boolean
    fields: String = "$type,attachments($type,id),author($type,id,login,ringId),created,id,text,updated,visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,ringId))"
    input: ArticleComment_Input
  ): ArticleComment
    @httpOperation(
      subgraph: "YouTrack"
      path: "/articles/{args.id}/comments/{args.articleCommentId}"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"muteUpdateNotifications\\\":\\\"muteUpdateNotifications\\\",\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_articles_by_id_comments_by_articleCommentId($id: String!, $articleCommentId: String!, $muteUpdateNotifications: Boolean, $fields: String = \"$type,attachments($type,id),author($type,id,login,ringId),created,id,text,updated,visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,ringId))\", $input: ArticleComment_Input) { post_articles_by_id_comments_by_articleCommentId(id: $id, articleCommentId: $articleCommentId, muteUpdateNotifications: $muteUpdateNotifications, fields: $fields, input: $input) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "post_articles_by_id_comments_by_articleCommentId"
      type: "ArticleComment"
    )
  delete_articles_by_id_comments_by_articleCommentId(id: String!, articleCommentId: String!): JSON
    @httpOperation(
      subgraph: "YouTrack"
      path: "/articles/{args.id}/comments/{args.articleCommentId}"
      httpMethod: DELETE
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationdelete_articles_by_id_comments_by_articleCommentId($id: String!, $articleCommentId: String!) { delete_articles_by_id_comments_by_articleCommentId(id: $id, articleCommentId: $articleCommentId) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "delete_articles_by_id_comments_by_articleCommentId"
      type: "JSON"
    )
  post_articles_by_id_comments_by_articleCommentId_reactions(
    id: String!
    articleCommentId: String!
    fields: String = "$type,id"
    input: Reaction_Input
  ): Reaction
    @httpOperation(
      subgraph: "YouTrack"
      path: "/articles/{args.id}/comments/{args.articleCommentId}/reactions"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_articles_by_id_comments_by_articleCommentId_reactions($id: String!, $articleCommentId: String!, $fields: String = \"$type,id\", $input: Reaction_Input) { post_articles_by_id_comments_by_articleCommentId_reactions(id: $id, articleCommentId: $articleCommentId, fields: $fields, input: $input) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "post_articles_by_id_comments_by_articleCommentId_reactions"
      type: "Reaction"
    )
  delete_articles_by_id_comments_by_articleCommentId_reactions_by_reactionId(
    id: String!
    articleCommentId: String!
    reactionId: String!
  ): JSON
    @httpOperation(
      subgraph: "YouTrack"
      path: "/articles/{args.id}/comments/{args.articleCommentId}/reactions/{args.reactionId}"
      httpMethod: DELETE
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationdelete_articles_by_id_comments_by_articleCommentId_reactions_by_reactionId($id: String!, $articleCommentId: String!, $reactionId: String!) { delete_articles_by_id_comments_by_articleCommentId_reactions_by_reactionId(id: $id, articleCommentId: $articleCommentId, reactionId: $reactionId) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "delete_articles_by_id_comments_by_articleCommentId_reactions_by_reactionId"
      type: "JSON"
    )
  post_articles_by_id_tags(
    id: String!
    fields: String = "$type,id,name,owner($type,id,login,ringId)"
    input: Tag_Input
  ): Tag
    @httpOperation(
      subgraph: "YouTrack"
      path: "/articles/{args.id}/tags"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_articles_by_id_tags($id: String!, $fields: String = \"$type,id,name,owner($type,id,login,ringId)\", $input: Tag_Input) { post_articles_by_id_tags(id: $id, fields: $fields, input: $input) }"
    )
    @source(subgraph: "YouTrack", name: "post_articles_by_id_tags", type: "Tag")
  delete_articles_by_id_tags_by_tagId(id: String!, tagId: String!): JSON
    @httpOperation(
      subgraph: "YouTrack"
      path: "/articles/{args.id}/tags/{args.tagId}"
      httpMethod: DELETE
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationdelete_articles_by_id_tags_by_tagId($id: String!, $tagId: String!) { delete_articles_by_id_tags_by_tagId(id: $id, tagId: $tagId) }"
    )
    @source(subgraph: "YouTrack", name: "delete_articles_by_id_tags_by_tagId", type: "JSON")
  post_commands(
    "Set this parameter to `true` if no notifications should be sent on changes made by this request. This doesn't mute notifications sent by any workflow rules. Using this parameter requires <control>Apply Commands Silently</control> permission in all projects affected by the request. Available since 2021.3."
    muteUpdateNotifications: Boolean
    fields: String = "$type,caret,commands($type,description,error,id),comment,id,issues($type,id,idReadable,numberInProject),query,suggestions($type,caret,completionEnd,completionStart,description,id,matchingEnd,matchingStart,option,prefix,suffix)"
    input: CommandList_Input
  ): CommandList
    @httpOperation(
      subgraph: "YouTrack"
      path: "/commands"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"muteUpdateNotifications\\\":\\\"muteUpdateNotifications\\\",\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_commands($muteUpdateNotifications: Boolean, $fields: String = \"$type,caret,commands($type,description,error,id),comment,id,issues($type,id,idReadable,numberInProject),query,suggestions($type,caret,completionEnd,completionStart,description,id,matchingEnd,matchingStart,option,prefix,suffix)\", $input: CommandList_Input) { post_commands(muteUpdateNotifications: $muteUpdateNotifications, fields: $fields, input: $input) }"
    )
    @source(subgraph: "YouTrack", name: "post_commands", type: "CommandList")
  post_commands_assist(
    fields: String = "$type,caret,commands($type,description,error,id),comment,id,issues($type,id,idReadable,numberInProject),query,suggestions($type,caret,completionEnd,completionStart,description,id,matchingEnd,matchingStart,option,prefix,suffix)"
    input: CommandList_Input
  ): CommandList
    @httpOperation(
      subgraph: "YouTrack"
      path: "/commands/assist"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_commands_assist($fields: String = \"$type,caret,commands($type,description,error,id),comment,id,issues($type,id,idReadable,numberInProject),query,suggestions($type,caret,completionEnd,completionStart,description,id,matchingEnd,matchingStart,option,prefix,suffix)\", $input: CommandList_Input) { post_commands_assist(fields: $fields, input: $input) }"
    )
    @source(subgraph: "YouTrack", name: "post_commands_assist", type: "CommandList")
  post_issueLinkTypes(
    fields: String = "$type,aggregation,directed,id,localizedName,localizedSourceToTarget,localizedTargetToSource,name,readOnly,sourceToTarget,targetToSource"
    input: IssueLinkType_Input
  ): IssueLinkType
    @httpOperation(
      subgraph: "YouTrack"
      path: "/issueLinkTypes"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_issueLinkTypes($fields: String = \"$type,aggregation,directed,id,localizedName,localizedSourceToTarget,localizedTargetToSource,name,readOnly,sourceToTarget,targetToSource\", $input: IssueLinkType_Input) { post_issueLinkTypes(fields: $fields, input: $input) }"
    )
    @source(subgraph: "YouTrack", name: "post_issueLinkTypes", type: "IssueLinkType")
  post_issueLinkTypes_by_id(
    id: String!
    fields: String = "$type,aggregation,directed,id,localizedName,localizedSourceToTarget,localizedTargetToSource,name,readOnly,sourceToTarget,targetToSource"
    input: IssueLinkType_Input
  ): IssueLinkType
    @httpOperation(
      subgraph: "YouTrack"
      path: "/issueLinkTypes/{args.id}"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_issueLinkTypes_by_id($id: String!, $fields: String = \"$type,aggregation,directed,id,localizedName,localizedSourceToTarget,localizedTargetToSource,name,readOnly,sourceToTarget,targetToSource\", $input: IssueLinkType_Input) { post_issueLinkTypes_by_id(id: $id, fields: $fields, input: $input) }"
    )
    @source(subgraph: "YouTrack", name: "post_issueLinkTypes_by_id", type: "IssueLinkType")
  delete_issueLinkTypes_by_id(id: String!): JSON
    @httpOperation(
      subgraph: "YouTrack"
      path: "/issueLinkTypes/{args.id}"
      httpMethod: DELETE
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationdelete_issueLinkTypes_by_id($id: String!) { delete_issueLinkTypes_by_id(id: $id) }"
    )
    @source(subgraph: "YouTrack", name: "delete_issueLinkTypes_by_id", type: "JSON")
  post_issues(
    "ID of a draft to report as the new issue. If no `draftId` is provided, the issue is created from scratch. In this case, you must specify the summary and the project in the request payload."
    draftId: String
    "Set this parameter to `true` if no notifications should be sent on changes made by this request. This doesn't mute notifications sent by any workflow rules. Using this parameter requires <control>Apply Commands Silently</control> permission in all projects affected by the request. Available since 2021.3."
    muteUpdateNotifications: Boolean
    fields: String = "$type,created,customFields($type,id,name,value($type,id,name)),description,id,idReadable,links($type,direction,id,linkType($type,id,localizedName,name)),numberInProject,project($type,id,name,shortName),reporter($type,id,login,ringId),resolved,summary,updated,updater($type,id,login,ringId),visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,ringId))"
    input: Issue_Input
  ): Issue
    @httpOperation(
      subgraph: "YouTrack"
      path: "/issues"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"draftId\\\":\\\"draftId\\\",\\\"muteUpdateNotifications\\\":\\\"muteUpdateNotifications\\\",\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_issues($draftId: String, $muteUpdateNotifications: Boolean, $fields: String = \"$type,created,customFields($type,id,name,value($type,id,name)),description,id,idReadable,links($type,direction,id,linkType($type,id,localizedName,name)),numberInProject,project($type,id,name,shortName),reporter($type,id,login,ringId),resolved,summary,updated,updater($type,id,login,ringId),visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,ringId))\", $input: Issue_Input) { post_issues(draftId: $draftId, muteUpdateNotifications: $muteUpdateNotifications, fields: $fields, input: $input) }"
    )
    @source(subgraph: "YouTrack", name: "post_issues", type: "Issue")
  post_issues_by_id(
    id: String!
    "Set this parameter to `true` if no notifications should be sent on changes made by this request. This doesn't mute notifications sent by any workflow rules. Using this parameter requires <control>Apply Commands Silently</control> permission in all projects affected by the request. Available since 2021.3."
    muteUpdateNotifications: Boolean
    fields: String = "$type,created,customFields($type,id,name,value($type,id,name)),description,id,idReadable,links($type,direction,id,linkType($type,id,localizedName,name)),numberInProject,project($type,id,name,shortName),reporter($type,id,login,ringId),resolved,summary,updated,updater($type,id,login,ringId),visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,ringId))"
    input: Issue_Input
  ): Issue
    @httpOperation(
      subgraph: "YouTrack"
      path: "/issues/{args.id}"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"muteUpdateNotifications\\\":\\\"muteUpdateNotifications\\\",\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_issues_by_id($id: String!, $muteUpdateNotifications: Boolean, $fields: String = \"$type,created,customFields($type,id,name,value($type,id,name)),description,id,idReadable,links($type,direction,id,linkType($type,id,localizedName,name)),numberInProject,project($type,id,name,shortName),reporter($type,id,login,ringId),resolved,summary,updated,updater($type,id,login,ringId),visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,ringId))\", $input: Issue_Input) { post_issues_by_id(id: $id, muteUpdateNotifications: $muteUpdateNotifications, fields: $fields, input: $input) }"
    )
    @source(subgraph: "YouTrack", name: "post_issues_by_id", type: "Issue")
  delete_issues_by_id(id: String!): JSON
    @httpOperation(
      subgraph: "YouTrack"
      path: "/issues/{args.id}"
      httpMethod: DELETE
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationdelete_issues_by_id($id: String!) { delete_issues_by_id(id: $id) }"
    )
    @source(subgraph: "YouTrack", name: "delete_issues_by_id", type: "JSON")
  post_issues_by_id_attachments(
    id: String!
    "Set this parameter to `true` if no notifications should be sent on changes made by this request. This doesn't mute notifications sent by any workflow rules. Using this parameter requires <control>Apply Commands Silently</control> permission in all projects affected by the request. Available since 2021.3."
    muteUpdateNotifications: Boolean
    fields: String = "$type,author($type,id,login,ringId),charset,created,extension,id,metaData,mimeType,name,size,updated,url"
    input: post_issues_by_id_attachments_request_Input
  ): [IssueAttachment]
    @httpOperation(
      subgraph: "YouTrack"
      path: "/issues/{args.id}/attachments"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"multipart/form-data\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"muteUpdateNotifications\\\":\\\"muteUpdateNotifications\\\",\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_issues_by_id_attachments($id: String!, $muteUpdateNotifications: Boolean, $fields: String = \"$type,author($type,id,login,ringId),charset,created,extension,id,metaData,mimeType,name,size,updated,url\", $input: post_issues_by_id_attachments_request_Input) { post_issues_by_id_attachments(id: $id, muteUpdateNotifications: $muteUpdateNotifications, fields: $fields, input: $input) }"
    )
    @source(subgraph: "YouTrack", name: "post_issues_by_id_attachments", type: "[IssueAttachment]")
  post_issues_by_id_attachments_by_issueAttachmentId(
    id: String!
    issueAttachmentId: String!
    fields: String = "$type,author($type,id,login,ringId),charset,created,extension,id,metaData,mimeType,name,size,updated,url"
    input: IssueAttachment_Input
  ): IssueAttachment
    @httpOperation(
      subgraph: "YouTrack"
      path: "/issues/{args.id}/attachments/{args.issueAttachmentId}"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_issues_by_id_attachments_by_issueAttachmentId($id: String!, $issueAttachmentId: String!, $fields: String = \"$type,author($type,id,login,ringId),charset,created,extension,id,metaData,mimeType,name,size,updated,url\", $input: IssueAttachment_Input) { post_issues_by_id_attachments_by_issueAttachmentId(id: $id, issueAttachmentId: $issueAttachmentId, fields: $fields, input: $input) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "post_issues_by_id_attachments_by_issueAttachmentId"
      type: "IssueAttachment"
    )
  delete_issues_by_id_attachments_by_issueAttachmentId(
    id: String!
    issueAttachmentId: String!
  ): JSON
    @httpOperation(
      subgraph: "YouTrack"
      path: "/issues/{args.id}/attachments/{args.issueAttachmentId}"
      httpMethod: DELETE
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationdelete_issues_by_id_attachments_by_issueAttachmentId($id: String!, $issueAttachmentId: String!) { delete_issues_by_id_attachments_by_issueAttachmentId(id: $id, issueAttachmentId: $issueAttachmentId) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "delete_issues_by_id_attachments_by_issueAttachmentId"
      type: "JSON"
    )
  post_issues_by_id_comments(
    id: String!
    "ID of an existing draft that should be published. This parameter is optional."
    draftId: String
    "Set this parameter to `true` if no notifications should be sent on changes made by this request. This doesn't mute notifications sent by any workflow rules. Using this parameter requires <control>Apply Commands Silently</control> permission in all projects affected by the request. Available since 2021.3."
    muteUpdateNotifications: Boolean
    fields: String = "$type,attachments($type,id),author($type,id,login,ringId),created,deleted,id,text,updated,visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,ringId))"
    input: IssueComment_Input
  ): IssueComment
    @httpOperation(
      subgraph: "YouTrack"
      path: "/issues/{args.id}/comments"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"draftId\\\":\\\"draftId\\\",\\\"muteUpdateNotifications\\\":\\\"muteUpdateNotifications\\\",\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_issues_by_id_comments($id: String!, $draftId: String, $muteUpdateNotifications: Boolean, $fields: String = \"$type,attachments($type,id),author($type,id,login,ringId),created,deleted,id,text,updated,visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,ringId))\", $input: IssueComment_Input) { post_issues_by_id_comments(id: $id, draftId: $draftId, muteUpdateNotifications: $muteUpdateNotifications, fields: $fields, input: $input) }"
    )
    @source(subgraph: "YouTrack", name: "post_issues_by_id_comments", type: "IssueComment")
  post_issues_by_id_comments_by_issueCommentId(
    id: String!
    issueCommentId: String!
    "Set this parameter to `true` if no notifications should be sent on changes made by this request. This doesn't mute notifications sent by any workflow rules. Using this parameter requires <control>Apply Commands Silently</control> permission in all projects affected by the request. Available since 2021.3."
    muteUpdateNotifications: Boolean
    fields: String = "$type,attachments($type,id),author($type,id,login,ringId),created,deleted,id,text,updated,visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,ringId))"
    input: IssueComment_Input
  ): IssueComment
    @httpOperation(
      subgraph: "YouTrack"
      path: "/issues/{args.id}/comments/{args.issueCommentId}"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"muteUpdateNotifications\\\":\\\"muteUpdateNotifications\\\",\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_issues_by_id_comments_by_issueCommentId($id: String!, $issueCommentId: String!, $muteUpdateNotifications: Boolean, $fields: String = \"$type,attachments($type,id),author($type,id,login,ringId),created,deleted,id,text,updated,visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,ringId))\", $input: IssueComment_Input) { post_issues_by_id_comments_by_issueCommentId(id: $id, issueCommentId: $issueCommentId, muteUpdateNotifications: $muteUpdateNotifications, fields: $fields, input: $input) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "post_issues_by_id_comments_by_issueCommentId"
      type: "IssueComment"
    )
  delete_issues_by_id_comments_by_issueCommentId(id: String!, issueCommentId: String!): JSON
    @httpOperation(
      subgraph: "YouTrack"
      path: "/issues/{args.id}/comments/{args.issueCommentId}"
      httpMethod: DELETE
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationdelete_issues_by_id_comments_by_issueCommentId($id: String!, $issueCommentId: String!) { delete_issues_by_id_comments_by_issueCommentId(id: $id, issueCommentId: $issueCommentId) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "delete_issues_by_id_comments_by_issueCommentId"
      type: "JSON"
    )
  post_issues_by_id_comments_by_issueCommentId_reactions(
    id: String!
    issueCommentId: String!
    fields: String = "$type,id"
    input: Reaction_Input
  ): Reaction
    @httpOperation(
      subgraph: "YouTrack"
      path: "/issues/{args.id}/comments/{args.issueCommentId}/reactions"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_issues_by_id_comments_by_issueCommentId_reactions($id: String!, $issueCommentId: String!, $fields: String = \"$type,id\", $input: Reaction_Input) { post_issues_by_id_comments_by_issueCommentId_reactions(id: $id, issueCommentId: $issueCommentId, fields: $fields, input: $input) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "post_issues_by_id_comments_by_issueCommentId_reactions"
      type: "Reaction"
    )
  delete_issues_by_id_comments_by_issueCommentId_reactions_by_reactionId(
    id: String!
    issueCommentId: String!
    reactionId: String!
  ): JSON
    @httpOperation(
      subgraph: "YouTrack"
      path: "/issues/{args.id}/comments/{args.issueCommentId}/reactions/{args.reactionId}"
      httpMethod: DELETE
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationdelete_issues_by_id_comments_by_issueCommentId_reactions_by_reactionId($id: String!, $issueCommentId: String!, $reactionId: String!) { delete_issues_by_id_comments_by_issueCommentId_reactions_by_reactionId(id: $id, issueCommentId: $issueCommentId, reactionId: $reactionId) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "delete_issues_by_id_comments_by_issueCommentId_reactions_by_reactionId"
      type: "JSON"
    )
  post_issues_by_id_customFields_by_issueCustomFieldId(
    id: String!
    issueCustomFieldId: String!
    "Set this parameter to `true` if no notifications should be sent on changes made by this request. This doesn't mute notifications sent by any workflow rules. Using this parameter requires <control>Apply Commands Silently</control> permission in all projects affected by the request. Available since 2021.3."
    muteUpdateNotifications: Boolean
    fields: String = "$type,id,name,value($type,id,name)"
    input: IssueCustomField_Input
  ): IssueCustomField
    @httpOperation(
      subgraph: "YouTrack"
      path: "/issues/{args.id}/customFields/{args.issueCustomFieldId}"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"muteUpdateNotifications\\\":\\\"muteUpdateNotifications\\\",\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_issues_by_id_customFields_by_issueCustomFieldId($id: String!, $issueCustomFieldId: String!, $muteUpdateNotifications: Boolean, $fields: String = \"$type,id,name,value($type,id,name)\", $input: IssueCustomField_Input) { post_issues_by_id_customFields_by_issueCustomFieldId(id: $id, issueCustomFieldId: $issueCustomFieldId, muteUpdateNotifications: $muteUpdateNotifications, fields: $fields, input: $input) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "post_issues_by_id_customFields_by_issueCustomFieldId"
      type: "IssueCustomField"
    )
  post_issues_by_id_links_by_issueLinkId_issues(
    id: String!
    issueLinkId: String!
    "Set this parameter to `true` if no notifications should be sent on changes made by this request. This doesn't mute notifications sent by any workflow rules. Using this parameter requires <control>Apply Commands Silently</control> permission in all projects affected by the request. Available since 2021.3."
    muteUpdateNotifications: Boolean
    fields: String = "$type,created,customFields($type,id,name,value($type,id,name)),description,id,idReadable,links($type,direction,id,linkType($type,id,localizedName,name)),numberInProject,project($type,id,name,shortName),reporter($type,id,login,ringId),resolved,summary,updated,updater($type,id,login,ringId),visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,ringId))"
    input: Issue_Input
  ): Issue
    @httpOperation(
      subgraph: "YouTrack"
      path: "/issues/{args.id}/links/{args.issueLinkId}/issues"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"muteUpdateNotifications\\\":\\\"muteUpdateNotifications\\\",\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_issues_by_id_links_by_issueLinkId_issues($id: String!, $issueLinkId: String!, $muteUpdateNotifications: Boolean, $fields: String = \"$type,created,customFields($type,id,name,value($type,id,name)),description,id,idReadable,links($type,direction,id,linkType($type,id,localizedName,name)),numberInProject,project($type,id,name,shortName),reporter($type,id,login,ringId),resolved,summary,updated,updater($type,id,login,ringId),visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,ringId))\", $input: Issue_Input) { post_issues_by_id_links_by_issueLinkId_issues(id: $id, issueLinkId: $issueLinkId, muteUpdateNotifications: $muteUpdateNotifications, fields: $fields, input: $input) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "post_issues_by_id_links_by_issueLinkId_issues"
      type: "Issue"
    )
  delete_issues_by_id_links_by_issueLinkId_issues_by_issueId(
    id: String!
    issueLinkId: String!
    issueId: String!
  ): JSON
    @httpOperation(
      subgraph: "YouTrack"
      path: "/issues/{args.id}/links/{args.issueLinkId}/issues/{args.issueId}"
      httpMethod: DELETE
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationdelete_issues_by_id_links_by_issueLinkId_issues_by_issueId($id: String!, $issueLinkId: String!, $issueId: String!) { delete_issues_by_id_links_by_issueLinkId_issues_by_issueId(id: $id, issueLinkId: $issueLinkId, issueId: $issueId) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "delete_issues_by_id_links_by_issueLinkId_issues_by_issueId"
      type: "JSON"
    )
  post_issues_by_id_project(
    id: String!
    "Set this parameter to `true` if no notifications should be sent on changes made by this request. This doesn't mute notifications sent by any workflow rules. Using this parameter requires <control>Apply Commands Silently</control> permission in all projects affected by the request. Available since 2021.3."
    muteUpdateNotifications: Boolean
    fields: String = "$type,archived,customFields,id,leader($type,id,login,ringId),name,shortName"
    input: Project_Input
  ): Project
    @httpOperation(
      subgraph: "YouTrack"
      path: "/issues/{args.id}/project"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"muteUpdateNotifications\\\":\\\"muteUpdateNotifications\\\",\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_issues_by_id_project($id: String!, $muteUpdateNotifications: Boolean, $fields: String = \"$type,archived,customFields,id,leader($type,id,login,ringId),name,shortName\", $input: Project_Input) { post_issues_by_id_project(id: $id, muteUpdateNotifications: $muteUpdateNotifications, fields: $fields, input: $input) }"
    )
    @source(subgraph: "YouTrack", name: "post_issues_by_id_project", type: "Project")
  post_issues_by_id_tags(
    id: String!
    fields: String = "$type,id,name,owner($type,id,login,ringId)"
    input: Tag_Input
  ): Tag
    @httpOperation(
      subgraph: "YouTrack"
      path: "/issues/{args.id}/tags"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_issues_by_id_tags($id: String!, $fields: String = \"$type,id,name,owner($type,id,login,ringId)\", $input: Tag_Input) { post_issues_by_id_tags(id: $id, fields: $fields, input: $input) }"
    )
    @source(subgraph: "YouTrack", name: "post_issues_by_id_tags", type: "Tag")
  delete_issues_by_id_tags_by_tagId(id: String!, tagId: String!): JSON
    @httpOperation(
      subgraph: "YouTrack"
      path: "/issues/{args.id}/tags/{args.tagId}"
      httpMethod: DELETE
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationdelete_issues_by_id_tags_by_tagId($id: String!, $tagId: String!) { delete_issues_by_id_tags_by_tagId(id: $id, tagId: $tagId) }"
    )
    @source(subgraph: "YouTrack", name: "delete_issues_by_id_tags_by_tagId", type: "JSON")
  post_issues_by_id_timeTracking_workItems(
    id: String!
    "Set this parameter to `true` if no notifications should be sent on changes made by this request. This doesn't mute notifications sent by any workflow rules. Using this parameter requires <control>Apply Commands Silently</control> permission in all projects affected by the request. Available since 2021.3."
    muteUpdateNotifications: Boolean
    fields: String = "$type,author($type,id,login,ringId),created,creator($type,id,login,ringId),date,duration($type,id),id,text,updated"
    input: IssueWorkItem_Input
  ): IssueWorkItem
    @httpOperation(
      subgraph: "YouTrack"
      path: "/issues/{args.id}/timeTracking/workItems"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"muteUpdateNotifications\\\":\\\"muteUpdateNotifications\\\",\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_issues_by_id_timeTracking_workItems($id: String!, $muteUpdateNotifications: Boolean, $fields: String = \"$type,author($type,id,login,ringId),created,creator($type,id,login,ringId),date,duration($type,id),id,text,updated\", $input: IssueWorkItem_Input) { post_issues_by_id_timeTracking_workItems(id: $id, muteUpdateNotifications: $muteUpdateNotifications, fields: $fields, input: $input) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "post_issues_by_id_timeTracking_workItems"
      type: "IssueWorkItem"
    )
  post_issues_by_id_timeTracking_workItems_by_issueWorkItemId(
    id: String!
    issueWorkItemId: String!
    "Set this parameter to `true` if no notifications should be sent on changes made by this request. This doesn't mute notifications sent by any workflow rules. Using this parameter requires <control>Apply Commands Silently</control> permission in all projects affected by the request. Available since 2021.3."
    muteUpdateNotifications: Boolean
    fields: String = "$type,author($type,id,login,ringId),created,creator($type,id,login,ringId),date,duration($type,id),id,text,updated"
    input: IssueWorkItem_Input
  ): IssueWorkItem
    @httpOperation(
      subgraph: "YouTrack"
      path: "/issues/{args.id}/timeTracking/workItems/{args.issueWorkItemId}"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"muteUpdateNotifications\\\":\\\"muteUpdateNotifications\\\",\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_issues_by_id_timeTracking_workItems_by_issueWorkItemId($id: String!, $issueWorkItemId: String!, $muteUpdateNotifications: Boolean, $fields: String = \"$type,author($type,id,login,ringId),created,creator($type,id,login,ringId),date,duration($type,id),id,text,updated\", $input: IssueWorkItem_Input) { post_issues_by_id_timeTracking_workItems_by_issueWorkItemId(id: $id, issueWorkItemId: $issueWorkItemId, muteUpdateNotifications: $muteUpdateNotifications, fields: $fields, input: $input) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "post_issues_by_id_timeTracking_workItems_by_issueWorkItemId"
      type: "IssueWorkItem"
    )
  delete_issues_by_id_timeTracking_workItems_by_issueWorkItemId(
    id: String!
    issueWorkItemId: String!
  ): JSON
    @httpOperation(
      subgraph: "YouTrack"
      path: "/issues/{args.id}/timeTracking/workItems/{args.issueWorkItemId}"
      httpMethod: DELETE
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationdelete_issues_by_id_timeTracking_workItems_by_issueWorkItemId($id: String!, $issueWorkItemId: String!) { delete_issues_by_id_timeTracking_workItems_by_issueWorkItemId(id: $id, issueWorkItemId: $issueWorkItemId) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "delete_issues_by_id_timeTracking_workItems_by_issueWorkItemId"
      type: "JSON"
    )
  post_issues_by_id_vcsChanges(
    id: String!
    "Set this parameter to `true` if no notifications should be sent on issue changes caused by this request. This doesn't mute notifications sent by any workflow rules. Using this parameter requires <control>Apply Commands Silently</control> permission in all projects affected by the request. Available since 2021.3."
    muteUpdateNotifications: Boolean
    fields: String = "$type,id"
    input: VcsChange_Input
  ): VcsChange
    @httpOperation(
      subgraph: "YouTrack"
      path: "/issues/{args.id}/vcsChanges"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"muteUpdateNotifications\\\":\\\"muteUpdateNotifications\\\",\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_issues_by_id_vcsChanges($id: String!, $muteUpdateNotifications: Boolean, $fields: String = \"$type,id\", $input: VcsChange_Input) { post_issues_by_id_vcsChanges(id: $id, muteUpdateNotifications: $muteUpdateNotifications, fields: $fields, input: $input) }"
    )
    @source(subgraph: "YouTrack", name: "post_issues_by_id_vcsChanges", type: "VcsChange")
  post_issues_by_id_vcsChanges_by_vcsChangeId(
    id: String!
    vcsChangeId: String!
    "Set this parameter to `true` if no notifications should be sent on changes made by this request. This doesn't mute notifications sent by any workflow rules. Using this parameter requires <control>Apply Commands Silently</control> permission in all projects affected by the request. Available since 2021.3."
    muteUpdateNotifications: Boolean
    fields: String = "$type,id"
    input: VcsChange_Input
  ): VcsChange
    @httpOperation(
      subgraph: "YouTrack"
      path: "/issues/{args.id}/vcsChanges/{args.vcsChangeId}"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"muteUpdateNotifications\\\":\\\"muteUpdateNotifications\\\",\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_issues_by_id_vcsChanges_by_vcsChangeId($id: String!, $vcsChangeId: String!, $muteUpdateNotifications: Boolean, $fields: String = \"$type,id\", $input: VcsChange_Input) { post_issues_by_id_vcsChanges_by_vcsChangeId(id: $id, vcsChangeId: $vcsChangeId, muteUpdateNotifications: $muteUpdateNotifications, fields: $fields, input: $input) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "post_issues_by_id_vcsChanges_by_vcsChangeId"
      type: "VcsChange"
    )
  delete_issues_by_id_vcsChanges_by_vcsChangeId(id: String!, vcsChangeId: String!): JSON
    @httpOperation(
      subgraph: "YouTrack"
      path: "/issues/{args.id}/vcsChanges/{args.vcsChangeId}"
      httpMethod: DELETE
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationdelete_issues_by_id_vcsChanges_by_vcsChangeId($id: String!, $vcsChangeId: String!) { delete_issues_by_id_vcsChanges_by_vcsChangeId(id: $id, vcsChangeId: $vcsChangeId) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "delete_issues_by_id_vcsChanges_by_vcsChangeId"
      type: "JSON"
    )
  post_issuesGetter_count(
    fields: String = "$type,count,id"
    input: IssueCountResponse_Input
  ): IssueCountResponse
    @httpOperation(
      subgraph: "YouTrack"
      path: "/issuesGetter/count"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_issuesGetter_count($fields: String = \"$type,count,id\", $input: IssueCountResponse_Input) { post_issuesGetter_count(fields: $fields, input: $input) }"
    )
    @source(subgraph: "YouTrack", name: "post_issuesGetter_count", type: "IssueCountResponse")
  post_savedQueries(
    fields: String = "$type,id,name,owner($type,id,login,ringId),query"
    input: SavedQuery_Input
  ): SavedQuery
    @httpOperation(
      subgraph: "YouTrack"
      path: "/savedQueries"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_savedQueries($fields: String = \"$type,id,name,owner($type,id,login,ringId),query\", $input: SavedQuery_Input) { post_savedQueries(fields: $fields, input: $input) }"
    )
    @source(subgraph: "YouTrack", name: "post_savedQueries", type: "SavedQuery")
  post_savedQueries_by_id(
    id: String!
    fields: String = "$type,id,name,owner($type,id,login,ringId),query"
    input: SavedQuery_Input
  ): SavedQuery
    @httpOperation(
      subgraph: "YouTrack"
      path: "/savedQueries/{args.id}"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_savedQueries_by_id($id: String!, $fields: String = \"$type,id,name,owner($type,id,login,ringId),query\", $input: SavedQuery_Input) { post_savedQueries_by_id(id: $id, fields: $fields, input: $input) }"
    )
    @source(subgraph: "YouTrack", name: "post_savedQueries_by_id", type: "SavedQuery")
  delete_savedQueries_by_id(id: String!): JSON
    @httpOperation(
      subgraph: "YouTrack"
      path: "/savedQueries/{args.id}"
      httpMethod: DELETE
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationdelete_savedQueries_by_id($id: String!) { delete_savedQueries_by_id(id: $id) }"
    )
    @source(subgraph: "YouTrack", name: "delete_savedQueries_by_id", type: "JSON")
  post_search_assist(
    fields: String = "$type,id,suggestions($type,caret,completionEnd,completionStart,description,id,matchingEnd,matchingStart,option,prefix,suffix)"
    input: SearchSuggestions_Input
  ): SearchSuggestions
    @httpOperation(
      subgraph: "YouTrack"
      path: "/search/assist"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_search_assist($fields: String = \"$type,id,suggestions($type,caret,completionEnd,completionStart,description,id,matchingEnd,matchingStart,option,prefix,suffix)\", $input: SearchSuggestions_Input) { post_search_assist(fields: $fields, input: $input) }"
    )
    @source(subgraph: "YouTrack", name: "post_search_assist", type: "SearchSuggestions")
  post_tags(fields: String = "$type,id,name,owner($type,id,login,ringId)", input: Tag_Input): Tag
    @httpOperation(
      subgraph: "YouTrack"
      path: "/tags"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_tags($fields: String = \"$type,id,name,owner($type,id,login,ringId)\", $input: Tag_Input) { post_tags(fields: $fields, input: $input) }"
    )
    @source(subgraph: "YouTrack", name: "post_tags", type: "Tag")
  post_tags_by_id(
    id: String!
    fields: String = "$type,id,name,owner($type,id,login,ringId)"
    input: Tag_Input
  ): Tag
    @httpOperation(
      subgraph: "YouTrack"
      path: "/tags/{args.id}"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_tags_by_id($id: String!, $fields: String = \"$type,id,name,owner($type,id,login,ringId)\", $input: Tag_Input) { post_tags_by_id(id: $id, fields: $fields, input: $input) }"
    )
    @source(subgraph: "YouTrack", name: "post_tags_by_id", type: "Tag")
  delete_tags_by_id(id: String!): JSON
    @httpOperation(
      subgraph: "YouTrack"
      path: "/tags/{args.id}"
      httpMethod: DELETE
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationdelete_tags_by_id($id: String!) { delete_tags_by_id(id: $id) }"
    )
    @source(subgraph: "YouTrack", name: "delete_tags_by_id", type: "JSON")
  post_users_by_id_profiles_general(
    id: String!
    fields: String = "$type,dateFieldFormat($type,datePattern,id,pattern,presentation),id,locale($type,community,id,language,locale,name),timezone($type,id,offset,presentation)"
    input: GeneralUserProfile_Input
  ): GeneralUserProfile
    @httpOperation(
      subgraph: "YouTrack"
      path: "/users/{args.id}/profiles/general"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_users_by_id_profiles_general($id: String!, $fields: String = \"$type,dateFieldFormat($type,datePattern,id,pattern,presentation),id,locale($type,community,id,language,locale,name),timezone($type,id,offset,presentation)\", $input: GeneralUserProfile_Input) { post_users_by_id_profiles_general(id: $id, fields: $fields, input: $input) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "post_users_by_id_profiles_general"
      type: "GeneralUserProfile"
    )
  post_users_by_id_profiles_notifications(
    id: String!
    fields: String = "$type,id"
    input: NotificationsUserProfile_Input
  ): NotificationsUserProfile
    @httpOperation(
      subgraph: "YouTrack"
      path: "/users/{args.id}/profiles/notifications"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_users_by_id_profiles_notifications($id: String!, $fields: String = \"$type,id\", $input: NotificationsUserProfile_Input) { post_users_by_id_profiles_notifications(id: $id, fields: $fields, input: $input) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "post_users_by_id_profiles_notifications"
      type: "NotificationsUserProfile"
    )
  post_users_by_id_profiles_timetracking(
    id: String!
    fields: String = "$type,id,periodFormat($type,id)"
    input: TimeTrackingUserProfile_Input
  ): TimeTrackingUserProfile
    @httpOperation(
      subgraph: "YouTrack"
      path: "/users/{args.id}/profiles/timetracking"
      operationSpecificHeaders: "\"{\\\"Content-Type\\\":\\\"application/json\\\",\\\"accept\\\":\\\"application/json\\\"}\""
      httpMethod: POST
      queryParamArgMap: "\"{\\\"fields\\\":\\\"fields\\\"}\""
      jsonApiFields: true
    )
    @resolver(
      subgraph: "YouTrack"
      operation: "mutation mutationpost_users_by_id_profiles_timetracking($id: String!, $fields: String = \"$type,id,periodFormat($type,id)\", $input: TimeTrackingUserProfile_Input) { post_users_by_id_profiles_timetracking(id: $id, fields: $fields, input: $input) }"
    )
    @source(
      subgraph: "YouTrack"
      name: "post_users_by_id_profiles_timetracking"
      type: "TimeTrackingUserProfile"
    )
}

input BuildBundle_Input @source(subgraph: "YouTrack", name: "BuildBundle_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  values: [BuildBundleElement_Input]
    @source(subgraph: "YouTrack", name: "values", type: "[BuildBundleElement_Input]")
}

input BuildBundleElement_Input @source(subgraph: "YouTrack", name: "BuildBundleElement_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  assembleDate: BigInt @source(subgraph: "YouTrack", name: "assembleDate", type: "BigInt")
}

input EnumBundle_Input @source(subgraph: "YouTrack", name: "EnumBundle_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  values: [EnumBundleElement_Input]
    @source(subgraph: "YouTrack", name: "values", type: "[EnumBundleElement_Input]")
}

input EnumBundleElement_Input @source(subgraph: "YouTrack", name: "EnumBundleElement_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  localizedName: String @source(subgraph: "YouTrack", name: "localizedName", type: "String")
}

input OwnedBundle_Input @source(subgraph: "YouTrack", name: "OwnedBundle_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  values: [OwnedBundleElement_Input]
    @source(subgraph: "YouTrack", name: "values", type: "[OwnedBundleElement_Input]")
}

input OwnedBundleElement_Input @source(subgraph: "YouTrack", name: "OwnedBundleElement_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  owner: User_Input @source(subgraph: "YouTrack", name: "owner", type: "User_Input")
}

input User_Input @source(subgraph: "YouTrack", name: "User_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  login: String @source(subgraph: "YouTrack", name: "login", type: "String")
  fullName: String @source(subgraph: "YouTrack", name: "fullName", type: "String")
  email: String @source(subgraph: "YouTrack", name: "email", type: "String")
  ringId: String @source(subgraph: "YouTrack", name: "ringId", type: "String")
  guest: Boolean @source(subgraph: "YouTrack", name: "guest", type: "Boolean")
  online: Boolean @source(subgraph: "YouTrack", name: "online", type: "Boolean")
  banned: Boolean @source(subgraph: "YouTrack", name: "banned", type: "Boolean")
  tags: [Tag_Input] @source(subgraph: "YouTrack", name: "tags", type: "[Tag_Input]")
  savedQueries: [SavedQuery_Input]
    @source(subgraph: "YouTrack", name: "savedQueries", type: "[SavedQuery_Input]")
  avatarUrl: String @source(subgraph: "YouTrack", name: "avatarUrl", type: "String")
  profiles: UserProfiles_Input
    @source(subgraph: "YouTrack", name: "profiles", type: "UserProfiles_Input")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

input Tag_Input @source(subgraph: "YouTrack", name: "Tag_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
  owner: User_Input @source(subgraph: "YouTrack", name: "owner", type: "User_Input")
  visibleFor: UserGroup_Input
    @source(subgraph: "YouTrack", name: "visibleFor", type: "UserGroup_Input")
  updateableBy: UserGroup_Input
    @source(subgraph: "YouTrack", name: "updateableBy", type: "UserGroup_Input")
  readSharingSettings: WatchFolderSharingSettings_Input
    @source(
      subgraph: "YouTrack"
      name: "readSharingSettings"
      type: "WatchFolderSharingSettings_Input"
    )
  updateSharingSettings: WatchFolderSharingSettings_Input
    @source(
      subgraph: "YouTrack"
      name: "updateSharingSettings"
      type: "WatchFolderSharingSettings_Input"
    )
  issues: [Issue_Input] @source(subgraph: "YouTrack", name: "issues", type: "[Issue_Input]")
  color: FieldStyle_Input @source(subgraph: "YouTrack", name: "color", type: "FieldStyle_Input")
  untagOnResolve: Boolean @source(subgraph: "YouTrack", name: "untagOnResolve", type: "Boolean")
  tagSharingSettings: TagSharingSettings_Input
    @source(subgraph: "YouTrack", name: "tagSharingSettings", type: "TagSharingSettings_Input")
}

input UserGroup_Input @source(subgraph: "YouTrack", name: "UserGroup_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  ringId: String @source(subgraph: "YouTrack", name: "ringId", type: "String")
  usersCount: BigInt @source(subgraph: "YouTrack", name: "usersCount", type: "BigInt")
  icon: String @source(subgraph: "YouTrack", name: "icon", type: "String")
  allUsersGroup: Boolean @source(subgraph: "YouTrack", name: "allUsersGroup", type: "Boolean")
  teamForProject: Project_Input
    @source(subgraph: "YouTrack", name: "teamForProject", type: "Project_Input")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

input Project_Input @source(subgraph: "YouTrack", name: "Project_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  archived: Boolean @source(subgraph: "YouTrack", name: "archived", type: "Boolean")
  createdBy: User_Input @source(subgraph: "YouTrack", name: "createdBy", type: "User_Input")
  customFields: JSON @source(subgraph: "YouTrack", name: "customFields", type: "JSON")
  description: String @source(subgraph: "YouTrack", name: "description", type: "String")
  fromEmail: String @source(subgraph: "YouTrack", name: "fromEmail", type: "String")
  iconUrl: String @source(subgraph: "YouTrack", name: "iconUrl", type: "String")
  issues: [Issue_Input] @source(subgraph: "YouTrack", name: "issues", type: "[Issue_Input]")
  leader: User_Input @source(subgraph: "YouTrack", name: "leader", type: "User_Input")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  replyToEmail: String @source(subgraph: "YouTrack", name: "replyToEmail", type: "String")
  shortName: String @source(subgraph: "YouTrack", name: "shortName", type: "String")
  startingNumber: BigInt @source(subgraph: "YouTrack", name: "startingNumber", type: "BigInt")
  team: UserGroup_Input @source(subgraph: "YouTrack", name: "team", type: "UserGroup_Input")
  template: Boolean @source(subgraph: "YouTrack", name: "template", type: "Boolean")
}

input Issue_Input @source(subgraph: "YouTrack", name: "Issue_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  attachments: [IssueAttachment_Input]
    @source(subgraph: "YouTrack", name: "attachments", type: "[IssueAttachment_Input]")
  comments: [IssueComment_Input]
    @source(subgraph: "YouTrack", name: "comments", type: "[IssueComment_Input]")
  commentsCount: Int @source(subgraph: "YouTrack", name: "commentsCount", type: "Int")
  created: BigInt @source(subgraph: "YouTrack", name: "created", type: "BigInt")
  customFields: [IssueCustomField_Input]
    @source(subgraph: "YouTrack", name: "customFields", type: "[IssueCustomField_Input]")
  description: String @source(subgraph: "YouTrack", name: "description", type: "String")
  draftOwner: User_Input @source(subgraph: "YouTrack", name: "draftOwner", type: "User_Input")
  externalIssue: ExternalIssue_Input
    @source(subgraph: "YouTrack", name: "externalIssue", type: "ExternalIssue_Input")
  idReadable: String @source(subgraph: "YouTrack", name: "idReadable", type: "String")
  isDraft: Boolean @source(subgraph: "YouTrack", name: "isDraft", type: "Boolean")
  links: [IssueLink_Input] @source(subgraph: "YouTrack", name: "links", type: "[IssueLink_Input]")
  numberInProject: BigInt @source(subgraph: "YouTrack", name: "numberInProject", type: "BigInt")
  parent: IssueLink_Input @source(subgraph: "YouTrack", name: "parent", type: "IssueLink_Input")
  project: Project_Input @source(subgraph: "YouTrack", name: "project", type: "Project_Input")
  reporter: User_Input @source(subgraph: "YouTrack", name: "reporter", type: "User_Input")
  resolved: BigInt @source(subgraph: "YouTrack", name: "resolved", type: "BigInt")
  subtasks: IssueLink_Input @source(subgraph: "YouTrack", name: "subtasks", type: "IssueLink_Input")
  summary: String @source(subgraph: "YouTrack", name: "summary", type: "String")
  tags: [Tag_Input] @source(subgraph: "YouTrack", name: "tags", type: "[Tag_Input]")
  updated: BigInt @source(subgraph: "YouTrack", name: "updated", type: "BigInt")
  updater: User_Input @source(subgraph: "YouTrack", name: "updater", type: "User_Input")
  visibility: Visibility_Input
    @source(subgraph: "YouTrack", name: "visibility", type: "Visibility_Input")
  voters: IssueVoters_Input @source(subgraph: "YouTrack", name: "voters", type: "IssueVoters_Input")
  votes: Int @source(subgraph: "YouTrack", name: "votes", type: "Int")
  watchers: IssueWatchers_Input
    @source(subgraph: "YouTrack", name: "watchers", type: "IssueWatchers_Input")
  wikifiedDescription: String
    @source(subgraph: "YouTrack", name: "wikifiedDescription", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

input IssueAttachment_Input @source(subgraph: "YouTrack", name: "IssueAttachment_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  author: User_Input @source(subgraph: "YouTrack", name: "author", type: "User_Input")
  created: BigInt @source(subgraph: "YouTrack", name: "created", type: "BigInt")
  updated: BigInt @source(subgraph: "YouTrack", name: "updated", type: "BigInt")
  size: BigInt @source(subgraph: "YouTrack", name: "size", type: "BigInt")
  extension: String @source(subgraph: "YouTrack", name: "extension", type: "String")
  charset: String @source(subgraph: "YouTrack", name: "charset", type: "String")
  mimeType: String @source(subgraph: "YouTrack", name: "mimeType", type: "String")
  metaData: String @source(subgraph: "YouTrack", name: "metaData", type: "String")
  draft: Boolean @source(subgraph: "YouTrack", name: "draft", type: "Boolean")
  removed: Boolean @source(subgraph: "YouTrack", name: "removed", type: "Boolean")
  base64Content: String @source(subgraph: "YouTrack", name: "base64Content", type: "String")
  url: String @source(subgraph: "YouTrack", name: "url", type: "String")
  visibility: Visibility_Input
    @source(subgraph: "YouTrack", name: "visibility", type: "Visibility_Input")
  issue: Issue_Input @source(subgraph: "YouTrack", name: "issue", type: "Issue_Input")
  comment: IssueComment_Input
    @source(subgraph: "YouTrack", name: "comment", type: "IssueComment_Input")
  thumbnailURL: String @source(subgraph: "YouTrack", name: "thumbnailURL", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents visibility settings of an entity, for example, an issue or a comment."
input Visibility_Input @source(subgraph: "YouTrack", name: "Visibility_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

input IssueComment_Input @source(subgraph: "YouTrack", name: "IssueComment_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  attachments: [IssueAttachment_Input]
    @source(subgraph: "YouTrack", name: "attachments", type: "[IssueAttachment_Input]")
  author: User_Input @source(subgraph: "YouTrack", name: "author", type: "User_Input")
  created: BigInt @source(subgraph: "YouTrack", name: "created", type: "BigInt")
  deleted: Boolean @source(subgraph: "YouTrack", name: "deleted", type: "Boolean")
  issue: Issue_Input @source(subgraph: "YouTrack", name: "issue", type: "Issue_Input")
  reactions: [Reaction_Input]
    @source(subgraph: "YouTrack", name: "reactions", type: "[Reaction_Input]")
  text: String @source(subgraph: "YouTrack", name: "text", type: "String")
  textPreview: String @source(subgraph: "YouTrack", name: "textPreview", type: "String")
  updated: BigInt @source(subgraph: "YouTrack", name: "updated", type: "BigInt")
  visibility: Visibility_Input
    @source(subgraph: "YouTrack", name: "visibility", type: "Visibility_Input")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

input Reaction_Input @source(subgraph: "YouTrack", name: "Reaction_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  author: User_Input @source(subgraph: "YouTrack", name: "author", type: "User_Input")
  reaction: String @source(subgraph: "YouTrack", name: "reaction", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

input IssueCustomField_Input @source(subgraph: "YouTrack", name: "IssueCustomField_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  projectCustomField: ProjectCustomField_Input
    @source(subgraph: "YouTrack", name: "projectCustomField", type: "ProjectCustomField_Input")
  value: JSON @source(subgraph: "YouTrack", name: "value", type: "JSON")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

input ProjectCustomField_Input @source(subgraph: "YouTrack", name: "ProjectCustomField_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  field: CustomField_Input @source(subgraph: "YouTrack", name: "field", type: "CustomField_Input")
  project: Project_Input @source(subgraph: "YouTrack", name: "project", type: "Project_Input")
  canBeEmpty: Boolean @source(subgraph: "YouTrack", name: "canBeEmpty", type: "Boolean")
  emptyFieldText: String @source(subgraph: "YouTrack", name: "emptyFieldText", type: "String")
  ordinal: Int @source(subgraph: "YouTrack", name: "ordinal", type: "Int")
  isPublic: Boolean @source(subgraph: "YouTrack", name: "isPublic", type: "Boolean")
  hasRunningJob: Boolean @source(subgraph: "YouTrack", name: "hasRunningJob", type: "Boolean")
  condition: CustomFieldCondition_Input
    @source(subgraph: "YouTrack", name: "condition", type: "CustomFieldCondition_Input")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

input CustomField_Input @source(subgraph: "YouTrack", name: "CustomField_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  localizedName: String @source(subgraph: "YouTrack", name: "localizedName", type: "String")
  fieldType: FieldType_Input
    @source(subgraph: "YouTrack", name: "fieldType", type: "FieldType_Input")
  isAutoAttached: Boolean @source(subgraph: "YouTrack", name: "isAutoAttached", type: "Boolean")
  isDisplayedInIssueList: Boolean
    @source(subgraph: "YouTrack", name: "isDisplayedInIssueList", type: "Boolean")
  ordinal: Int @source(subgraph: "YouTrack", name: "ordinal", type: "Int")
  aliases: String @source(subgraph: "YouTrack", name: "aliases", type: "String")
  fieldDefaults: CustomFieldDefaults_Input
    @source(subgraph: "YouTrack", name: "fieldDefaults", type: "CustomFieldDefaults_Input")
  hasRunningJob: Boolean @source(subgraph: "YouTrack", name: "hasRunningJob", type: "Boolean")
  isUpdateable: Boolean @source(subgraph: "YouTrack", name: "isUpdateable", type: "Boolean")
  instances: [ProjectCustomField_Input]
    @source(subgraph: "YouTrack", name: "instances", type: "[ProjectCustomField_Input]")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

input FieldType_Input @source(subgraph: "YouTrack", name: "FieldType_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

input CustomFieldDefaults_Input @source(subgraph: "YouTrack", name: "CustomFieldDefaults_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  canBeEmpty: Boolean @source(subgraph: "YouTrack", name: "canBeEmpty", type: "Boolean")
  emptyFieldText: String @source(subgraph: "YouTrack", name: "emptyFieldText", type: "String")
  isPublic: Boolean @source(subgraph: "YouTrack", name: "isPublic", type: "Boolean")
  parent: CustomField_Input @source(subgraph: "YouTrack", name: "parent", type: "CustomField_Input")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents the condition for showing a custom field."
input CustomFieldCondition_Input @source(subgraph: "YouTrack", name: "CustomFieldCondition_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  parent: ProjectCustomField_Input
    @source(subgraph: "YouTrack", name: "parent", type: "ProjectCustomField_Input")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"For an issue that was imported from another service, represents the reference to the issue in the external system."
input ExternalIssue_Input @source(subgraph: "YouTrack", name: "ExternalIssue_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  url: String @source(subgraph: "YouTrack", name: "url", type: "String")
  key: String @source(subgraph: "YouTrack", name: "key", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

input IssueLink_Input @source(subgraph: "YouTrack", name: "IssueLink_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  direction: query_activities_items_author_tags_items_allOf_0_allOf_0_discriminatorMapping_SavedQuery_allOf_1_issues_items_links_items_direction
    @source(
      subgraph: "YouTrack"
      name: "direction"
      type: "query_activities_items_author_tags_items_allOf_0_allOf_0_discriminatorMapping_SavedQuery_allOf_1_issues_items_links_items_direction"
    )
  linkType: IssueLinkType_Input
    @source(subgraph: "YouTrack", name: "linkType", type: "IssueLinkType_Input")
  issues: [Issue_Input] @source(subgraph: "YouTrack", name: "issues", type: "[Issue_Input]")
  trimmedIssues: [Issue_Input]
    @source(subgraph: "YouTrack", name: "trimmedIssues", type: "[Issue_Input]")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

input IssueLinkType_Input @source(subgraph: "YouTrack", name: "IssueLinkType_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  localizedName: String @source(subgraph: "YouTrack", name: "localizedName", type: "String")
  sourceToTarget: String @source(subgraph: "YouTrack", name: "sourceToTarget", type: "String")
  localizedSourceToTarget: String
    @source(subgraph: "YouTrack", name: "localizedSourceToTarget", type: "String")
  targetToSource: String @source(subgraph: "YouTrack", name: "targetToSource", type: "String")
  localizedTargetToSource: String
    @source(subgraph: "YouTrack", name: "localizedTargetToSource", type: "String")
  directed: Boolean @source(subgraph: "YouTrack", name: "directed", type: "Boolean")
  aggregation: Boolean @source(subgraph: "YouTrack", name: "aggregation", type: "Boolean")
  readOnly: Boolean @source(subgraph: "YouTrack", name: "readOnly", type: "Boolean")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents users that have voted for the issue or its duplicates."
input IssueVoters_Input @source(subgraph: "YouTrack", name: "IssueVoters_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  hasVote: Boolean @source(subgraph: "YouTrack", name: "hasVote", type: "Boolean")
  original: [User_Input] @source(subgraph: "YouTrack", name: "original", type: "[User_Input]")
  duplicate: [DuplicateVote_Input]
    @source(subgraph: "YouTrack", name: "duplicate", type: "[DuplicateVote_Input]")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents a vote for duplicates of the issue."
input DuplicateVote_Input @source(subgraph: "YouTrack", name: "DuplicateVote_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  issue: Issue_Input @source(subgraph: "YouTrack", name: "issue", type: "Issue_Input")
  user: User_Input @source(subgraph: "YouTrack", name: "user", type: "User_Input")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents users that are subscribed to notifications about the issue."
input IssueWatchers_Input @source(subgraph: "YouTrack", name: "IssueWatchers_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  hasStar: Boolean @source(subgraph: "YouTrack", name: "hasStar", type: "Boolean")
  issueWatchers: [IssueWatcher_Input]
    @source(subgraph: "YouTrack", name: "issueWatchers", type: "[IssueWatcher_Input]")
  duplicateWatchers: [IssueWatcher_Input]
    @source(subgraph: "YouTrack", name: "duplicateWatchers", type: "[IssueWatcher_Input]")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents a user who subscribed for notifications about an issue."
input IssueWatcher_Input @source(subgraph: "YouTrack", name: "IssueWatcher_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  user: User_Input @source(subgraph: "YouTrack", name: "user", type: "User_Input")
  issue: Issue_Input @source(subgraph: "YouTrack", name: "issue", type: "Issue_Input")
  isStarred: Boolean @source(subgraph: "YouTrack", name: "isStarred", type: "Boolean")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Stores users and groups that have access to a tag or a saved search."
input WatchFolderSharingSettings_Input
  @source(subgraph: "YouTrack", name: "WatchFolderSharingSettings_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  permittedGroups: [UserGroup_Input]
    @source(subgraph: "YouTrack", name: "permittedGroups", type: "[UserGroup_Input]")
  permittedUsers: [User_Input]
    @source(subgraph: "YouTrack", name: "permittedUsers", type: "[User_Input]")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents the style settings of the field in YouTrack."
input FieldStyle_Input @source(subgraph: "YouTrack", name: "FieldStyle_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  background: String @source(subgraph: "YouTrack", name: "background", type: "String")
  foreground: String @source(subgraph: "YouTrack", name: "foreground", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Stores users and groups that have access to a tag."
input TagSharingSettings_Input @source(subgraph: "YouTrack", name: "TagSharingSettings_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  permittedGroups: [UserGroup_Input]
    @source(subgraph: "YouTrack", name: "permittedGroups", type: "[UserGroup_Input]")
  permittedUsers: [User_Input]
    @source(subgraph: "YouTrack", name: "permittedUsers", type: "[User_Input]")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

input SavedQuery_Input @source(subgraph: "YouTrack", name: "SavedQuery_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  query: String @source(subgraph: "YouTrack", name: "query", type: "String")
  issues: [Issue_Input] @source(subgraph: "YouTrack", name: "issues", type: "[Issue_Input]")
  visibleFor: UserGroup_Input
    @source(subgraph: "YouTrack", name: "visibleFor", type: "UserGroup_Input")
  updateableBy: UserGroup_Input
    @source(subgraph: "YouTrack", name: "updateableBy", type: "UserGroup_Input")
  readSharingSettings: WatchFolderSharingSettings_Input
    @source(
      subgraph: "YouTrack"
      name: "readSharingSettings"
      type: "WatchFolderSharingSettings_Input"
    )
  updateSharingSettings: WatchFolderSharingSettings_Input
    @source(
      subgraph: "YouTrack"
      name: "updateSharingSettings"
      type: "WatchFolderSharingSettings_Input"
    )
}

"Represents a group of settings of a user profile in YouTrack."
input UserProfiles_Input @source(subgraph: "YouTrack", name: "UserProfiles_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  general: GeneralUserProfile_Input
    @source(subgraph: "YouTrack", name: "general", type: "GeneralUserProfile_Input")
  notifications: NotificationsUserProfile_Input
    @source(subgraph: "YouTrack", name: "notifications", type: "NotificationsUserProfile_Input")
  timetracking: TimeTrackingUserProfile_Input
    @source(subgraph: "YouTrack", name: "timetracking", type: "TimeTrackingUserProfile_Input")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

input GeneralUserProfile_Input @source(subgraph: "YouTrack", name: "GeneralUserProfile_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  dateFieldFormat: DateFormatDescriptor_Input
    @source(subgraph: "YouTrack", name: "dateFieldFormat", type: "DateFormatDescriptor_Input")
  timezone: TimeZoneDescriptor_Input
    @source(subgraph: "YouTrack", name: "timezone", type: "TimeZoneDescriptor_Input")
  locale: LocaleDescriptor_Input
    @source(subgraph: "YouTrack", name: "locale", type: "LocaleDescriptor_Input")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents date format."
input DateFormatDescriptor_Input @source(subgraph: "YouTrack", name: "DateFormatDescriptor_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  presentation: String @source(subgraph: "YouTrack", name: "presentation", type: "String")
  pattern: String @source(subgraph: "YouTrack", name: "pattern", type: "String")
  datePattern: String @source(subgraph: "YouTrack", name: "datePattern", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents a time zone."
input TimeZoneDescriptor_Input @source(subgraph: "YouTrack", name: "TimeZoneDescriptor_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  presentation: String @source(subgraph: "YouTrack", name: "presentation", type: "String")
  offset: Int @source(subgraph: "YouTrack", name: "offset", type: "Int")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents a language locale that is used in UI."
input LocaleDescriptor_Input @source(subgraph: "YouTrack", name: "LocaleDescriptor_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  locale: String @source(subgraph: "YouTrack", name: "locale", type: "String")
  language: String @source(subgraph: "YouTrack", name: "language", type: "String")
  community: Boolean @source(subgraph: "YouTrack", name: "community", type: "Boolean")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

input NotificationsUserProfile_Input
  @source(subgraph: "YouTrack", name: "NotificationsUserProfile_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  notifyOnOwnChanges: Boolean
    @source(subgraph: "YouTrack", name: "notifyOnOwnChanges", type: "Boolean")
  emailNotificationsEnabled: Boolean
    @source(subgraph: "YouTrack", name: "emailNotificationsEnabled", type: "Boolean")
  mentionNotificationsEnabled: Boolean
    @source(subgraph: "YouTrack", name: "mentionNotificationsEnabled", type: "Boolean")
  duplicateClusterNotificationsEnabled: Boolean
    @source(subgraph: "YouTrack", name: "duplicateClusterNotificationsEnabled", type: "Boolean")
  mailboxIntegrationNotificationsEnabled: Boolean
    @source(subgraph: "YouTrack", name: "mailboxIntegrationNotificationsEnabled", type: "Boolean")
  usePlainTextEmails: Boolean
    @source(subgraph: "YouTrack", name: "usePlainTextEmails", type: "Boolean")
  autoWatchOnComment: Boolean
    @source(subgraph: "YouTrack", name: "autoWatchOnComment", type: "Boolean")
  autoWatchOnCreate: Boolean
    @source(subgraph: "YouTrack", name: "autoWatchOnCreate", type: "Boolean")
  autoWatchOnVote: Boolean @source(subgraph: "YouTrack", name: "autoWatchOnVote", type: "Boolean")
  autoWatchOnUpdate: Boolean
    @source(subgraph: "YouTrack", name: "autoWatchOnUpdate", type: "Boolean")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

input TimeTrackingUserProfile_Input
  @source(subgraph: "YouTrack", name: "TimeTrackingUserProfile_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  periodFormat: PeriodFieldFormat_Input
    @source(subgraph: "YouTrack", name: "periodFormat", type: "PeriodFieldFormat_Input")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents the format, in which the period values are displayed to the user."
input PeriodFieldFormat_Input @source(subgraph: "YouTrack", name: "PeriodFieldFormat_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

input StateBundle_Input @source(subgraph: "YouTrack", name: "StateBundle_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  values: [StateBundleElement_Input]
    @source(subgraph: "YouTrack", name: "values", type: "[StateBundleElement_Input]")
}

input StateBundleElement_Input @source(subgraph: "YouTrack", name: "StateBundleElement_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  localizedName: String @source(subgraph: "YouTrack", name: "localizedName", type: "String")
  isResolved: Boolean @source(subgraph: "YouTrack", name: "isResolved", type: "Boolean")
}

input UserBundle_Input @source(subgraph: "YouTrack", name: "UserBundle_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  isUpdateable: Boolean @source(subgraph: "YouTrack", name: "isUpdateable", type: "Boolean")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
  groups: [UserGroup_Input] @source(subgraph: "YouTrack", name: "groups", type: "[UserGroup_Input]")
  individuals: [User_Input] @source(subgraph: "YouTrack", name: "individuals", type: "[User_Input]")
  aggregatedUsers: [User_Input]
    @source(subgraph: "YouTrack", name: "aggregatedUsers", type: "[User_Input]")
}

input VersionBundle_Input @source(subgraph: "YouTrack", name: "VersionBundle_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  values: [VersionBundleElement_Input]
    @source(subgraph: "YouTrack", name: "values", type: "[VersionBundleElement_Input]")
}

input VersionBundleElement_Input @source(subgraph: "YouTrack", name: "VersionBundleElement_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  archived: Boolean @source(subgraph: "YouTrack", name: "archived", type: "Boolean")
  released: Boolean @source(subgraph: "YouTrack", name: "released", type: "Boolean")
  releaseDate: BigInt @source(subgraph: "YouTrack", name: "releaseDate", type: "BigInt")
  startDate: BigInt @source(subgraph: "YouTrack", name: "startDate", type: "BigInt")
}

input DatabaseBackupSettings_Input
  @source(subgraph: "YouTrack", name: "DatabaseBackupSettings_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  location: String @source(subgraph: "YouTrack", name: "location", type: "String")
  filesToKeep: Int @source(subgraph: "YouTrack", name: "filesToKeep", type: "Int")
  cronExpression: String @source(subgraph: "YouTrack", name: "cronExpression", type: "String")
  archiveFormat: query_admin_databaseBackup_settings_archiveFormat
    @source(
      subgraph: "YouTrack"
      name: "archiveFormat"
      type: "query_admin_databaseBackup_settings_archiveFormat"
    )
  isOn: Boolean @source(subgraph: "YouTrack", name: "isOn", type: "Boolean")
  availableDiskSpace: BigInt
    @source(subgraph: "YouTrack", name: "availableDiskSpace", type: "BigInt")
  notifiedUsers: [User_Input]
    @source(subgraph: "YouTrack", name: "notifiedUsers", type: "[User_Input]")
  backupStatus: BackupStatus_Input
    @source(subgraph: "YouTrack", name: "backupStatus", type: "BackupStatus_Input")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

input BackupStatus_Input @source(subgraph: "YouTrack", name: "BackupStatus_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  backupInProgress: Boolean @source(subgraph: "YouTrack", name: "backupInProgress", type: "Boolean")
  backupCancelled: Boolean @source(subgraph: "YouTrack", name: "backupCancelled", type: "Boolean")
  backupError: BackupError_Input
    @source(subgraph: "YouTrack", name: "backupError", type: "BackupError_Input")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents an error that appeared during the backup."
input BackupError_Input @source(subgraph: "YouTrack", name: "BackupError_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  date: BigInt @source(subgraph: "YouTrack", name: "date", type: "BigInt")
  errorMessage: String @source(subgraph: "YouTrack", name: "errorMessage", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

input GlobalSettings_Input @source(subgraph: "YouTrack", name: "GlobalSettings_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  systemSettings: SystemSettings_Input
    @source(subgraph: "YouTrack", name: "systemSettings", type: "SystemSettings_Input")
  notificationSettings: NotificationSettings_Input
    @source(subgraph: "YouTrack", name: "notificationSettings", type: "NotificationSettings_Input")
  restSettings: RestCorsSettings_Input
    @source(subgraph: "YouTrack", name: "restSettings", type: "RestCorsSettings_Input")
  appearanceSettings: AppearanceSettings_Input
    @source(subgraph: "YouTrack", name: "appearanceSettings", type: "AppearanceSettings_Input")
  localeSettings: LocaleSettings_Input
    @source(subgraph: "YouTrack", name: "localeSettings", type: "LocaleSettings_Input")
  license: License_Input @source(subgraph: "YouTrack", name: "license", type: "License_Input")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

input SystemSettings_Input @source(subgraph: "YouTrack", name: "SystemSettings_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  baseUrl: String @source(subgraph: "YouTrack", name: "baseUrl", type: "String")
  maxUploadFileSize: BigInt @source(subgraph: "YouTrack", name: "maxUploadFileSize", type: "BigInt")
  maxExportItems: Int @source(subgraph: "YouTrack", name: "maxExportItems", type: "Int")
  administratorEmail: String
    @source(subgraph: "YouTrack", name: "administratorEmail", type: "String")
  allowStatisticsCollection: Boolean
    @source(subgraph: "YouTrack", name: "allowStatisticsCollection", type: "Boolean")
  isApplicationReadOnly: Boolean
    @source(subgraph: "YouTrack", name: "isApplicationReadOnly", type: "Boolean")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

input NotificationSettings_Input @source(subgraph: "YouTrack", name: "NotificationSettings_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  emailSettings: EmailSettings_Input
    @source(subgraph: "YouTrack", name: "emailSettings", type: "EmailSettings_Input")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents email settings for this YouTrack installation."
input EmailSettings_Input @source(subgraph: "YouTrack", name: "EmailSettings_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  isEnabled: Boolean @source(subgraph: "YouTrack", name: "isEnabled", type: "Boolean")
  host: String @source(subgraph: "YouTrack", name: "host", type: "String")
  port: Int @source(subgraph: "YouTrack", name: "port", type: "Int")
  mailProtocol: query_admin_globalSettings_notificationSettings_emailSettings_mailProtocol
    @source(
      subgraph: "YouTrack"
      name: "mailProtocol"
      type: "query_admin_globalSettings_notificationSettings_emailSettings_mailProtocol"
    )
  anonymous: Boolean @source(subgraph: "YouTrack", name: "anonymous", type: "Boolean")
  login: String @source(subgraph: "YouTrack", name: "login", type: "String")
  sslKey: StorageEntry_Input
    @source(subgraph: "YouTrack", name: "sslKey", type: "StorageEntry_Input")
  from: String @source(subgraph: "YouTrack", name: "from", type: "String")
  replyTo: String @source(subgraph: "YouTrack", name: "replyTo", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"SSL key representation."
input StorageEntry_Input @source(subgraph: "YouTrack", name: "StorageEntry_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

input RestCorsSettings_Input @source(subgraph: "YouTrack", name: "RestCorsSettings_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  allowedOrigins: [String] @source(subgraph: "YouTrack", name: "allowedOrigins", type: "[String]")
  allowAllOrigins: Boolean @source(subgraph: "YouTrack", name: "allowAllOrigins", type: "Boolean")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

input AppearanceSettings_Input @source(subgraph: "YouTrack", name: "AppearanceSettings_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  timeZone: TimeZoneDescriptor_Input
    @source(subgraph: "YouTrack", name: "timeZone", type: "TimeZoneDescriptor_Input")
  dateFieldFormat: DateFormatDescriptor_Input
    @source(subgraph: "YouTrack", name: "dateFieldFormat", type: "DateFormatDescriptor_Input")
  logo: Logo_Input @source(subgraph: "YouTrack", name: "logo", type: "Logo_Input")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Company logo that is used in YouTrack."
input Logo_Input @source(subgraph: "YouTrack", name: "Logo_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  url: String @source(subgraph: "YouTrack", name: "url", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

input LocaleSettings_Input @source(subgraph: "YouTrack", name: "LocaleSettings_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  locale: LocaleDescriptor_Input
    @source(subgraph: "YouTrack", name: "locale", type: "LocaleDescriptor_Input")
  isRTL: Boolean @source(subgraph: "YouTrack", name: "isRTL", type: "Boolean")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

input License_Input @source(subgraph: "YouTrack", name: "License_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  username: String @source(subgraph: "YouTrack", name: "username", type: "String")
  license: String @source(subgraph: "YouTrack", name: "license", type: "String")
  error: String @source(subgraph: "YouTrack", name: "error", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

input ProjectTimeTrackingSettings_Input
  @source(subgraph: "YouTrack", name: "ProjectTimeTrackingSettings_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  enabled: Boolean @source(subgraph: "YouTrack", name: "enabled", type: "Boolean")
  estimate: ProjectCustomField_Input
    @source(subgraph: "YouTrack", name: "estimate", type: "ProjectCustomField_Input")
  timeSpent: ProjectCustomField_Input
    @source(subgraph: "YouTrack", name: "timeSpent", type: "ProjectCustomField_Input")
  workItemTypes: [WorkItemType_Input]
    @source(subgraph: "YouTrack", name: "workItemTypes", type: "[WorkItemType_Input]")
  project: Project_Input @source(subgraph: "YouTrack", name: "project", type: "Project_Input")
  attributes: [WorkItemProjectAttribute_Input]
    @source(subgraph: "YouTrack", name: "attributes", type: "[WorkItemProjectAttribute_Input]")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

input WorkItemType_Input @source(subgraph: "YouTrack", name: "WorkItemType_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  autoAttached: Boolean @source(subgraph: "YouTrack", name: "autoAttached", type: "Boolean")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents the project-related settings of a work item attribute."
input WorkItemProjectAttribute_Input
  @source(subgraph: "YouTrack", name: "WorkItemProjectAttribute_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  timeTrackingSettings: ProjectTimeTrackingSettings_Input
    @source(
      subgraph: "YouTrack"
      name: "timeTrackingSettings"
      type: "ProjectTimeTrackingSettings_Input"
    )
  prototype: WorkItemAttributePrototype_Input
    @source(subgraph: "YouTrack", name: "prototype", type: "WorkItemAttributePrototype_Input")
  values: [WorkItemAttributeValue_Input]
    @source(subgraph: "YouTrack", name: "values", type: "[WorkItemAttributeValue_Input]")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  ordinal: Int @source(subgraph: "YouTrack", name: "ordinal", type: "Int")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents a work item attribute prototype that is common for all projects. The project-related settings for work item attributes are stored in the `WorkItemProjectAttribute` entities."
input WorkItemAttributePrototype_Input
  @source(subgraph: "YouTrack", name: "WorkItemAttributePrototype_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  instances: [WorkItemProjectAttribute_Input]
    @source(subgraph: "YouTrack", name: "instances", type: "[WorkItemProjectAttribute_Input]")
  values: [WorkItemAttributeValue_Input]
    @source(subgraph: "YouTrack", name: "values", type: "[WorkItemAttributeValue_Input]")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents a value of a work item attribute."
input WorkItemAttributeValue_Input
  @source(subgraph: "YouTrack", name: "WorkItemAttributeValue_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  description: String @source(subgraph: "YouTrack", name: "description", type: "String")
  autoAttach: Boolean @source(subgraph: "YouTrack", name: "autoAttach", type: "Boolean")
  "Represents a work item attribute prototype that is common for all projects. The project-related settings for work item attributes are stored in the `WorkItemProjectAttribute` entities."
  prototype: WorkItemAttributePrototype_Input
    @source(subgraph: "YouTrack", name: "prototype", type: "WorkItemAttributePrototype_Input")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

input WorkTimeSettings_Input @source(subgraph: "YouTrack", name: "WorkTimeSettings_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  minutesADay: Int @source(subgraph: "YouTrack", name: "minutesADay", type: "Int")
  workDays: [Int] @source(subgraph: "YouTrack", name: "workDays", type: "[Int]")
  firstDayOfWeek: Int @source(subgraph: "YouTrack", name: "firstDayOfWeek", type: "Int")
  daysAWeek: Int @source(subgraph: "YouTrack", name: "daysAWeek", type: "Int")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

input Agile_Input @source(subgraph: "YouTrack", name: "Agile_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  owner: User_Input @source(subgraph: "YouTrack", name: "owner", type: "User_Input")
  visibleFor: UserGroup_Input
    @source(subgraph: "YouTrack", name: "visibleFor", type: "UserGroup_Input")
  visibleForProjectBased: Boolean
    @source(subgraph: "YouTrack", name: "visibleForProjectBased", type: "Boolean")
  updateableBy: UserGroup_Input
    @source(subgraph: "YouTrack", name: "updateableBy", type: "UserGroup_Input")
  updateableByProjectBased: Boolean
    @source(subgraph: "YouTrack", name: "updateableByProjectBased", type: "Boolean")
  readSharingSettings: AgileSharingSettings_Input
    @source(subgraph: "YouTrack", name: "readSharingSettings", type: "AgileSharingSettings_Input")
  updateSharingSettings: AgileSharingSettings_Input
    @source(subgraph: "YouTrack", name: "updateSharingSettings", type: "AgileSharingSettings_Input")
  orphansAtTheTop: Boolean @source(subgraph: "YouTrack", name: "orphansAtTheTop", type: "Boolean")
  hideOrphansSwimlane: Boolean
    @source(subgraph: "YouTrack", name: "hideOrphansSwimlane", type: "Boolean")
  estimationField: CustomField_Input
    @source(subgraph: "YouTrack", name: "estimationField", type: "CustomField_Input")
  originalEstimationField: CustomField_Input
    @source(subgraph: "YouTrack", name: "originalEstimationField", type: "CustomField_Input")
  projects: [Project_Input] @source(subgraph: "YouTrack", name: "projects", type: "[Project_Input]")
  sprints: [Sprint_Input] @source(subgraph: "YouTrack", name: "sprints", type: "[Sprint_Input]")
  currentSprint: Sprint_Input
    @source(subgraph: "YouTrack", name: "currentSprint", type: "Sprint_Input")
  columnSettings: ColumnSettings_Input
    @source(subgraph: "YouTrack", name: "columnSettings", type: "ColumnSettings_Input")
  swimlaneSettings: SwimlaneSettings_Input
    @source(subgraph: "YouTrack", name: "swimlaneSettings", type: "SwimlaneSettings_Input")
  sprintsSettings: SprintsSettings_Input
    @source(subgraph: "YouTrack", name: "sprintsSettings", type: "SprintsSettings_Input")
  colorCoding: ColorCoding_Input
    @source(subgraph: "YouTrack", name: "colorCoding", type: "ColorCoding_Input")
  status: AgileStatus_Input @source(subgraph: "YouTrack", name: "status", type: "AgileStatus_Input")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Stores users and groups that have access to an agile board."
input AgileSharingSettings_Input @source(subgraph: "YouTrack", name: "AgileSharingSettings_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  permittedGroups: [UserGroup_Input]
    @source(subgraph: "YouTrack", name: "permittedGroups", type: "[UserGroup_Input]")
  permittedUsers: [User_Input]
    @source(subgraph: "YouTrack", name: "permittedUsers", type: "[User_Input]")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

input Sprint_Input @source(subgraph: "YouTrack", name: "Sprint_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  agile: Agile_Input @source(subgraph: "YouTrack", name: "agile", type: "Agile_Input")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  goal: String @source(subgraph: "YouTrack", name: "goal", type: "String")
  start: BigInt @source(subgraph: "YouTrack", name: "start", type: "BigInt")
  finish: BigInt @source(subgraph: "YouTrack", name: "finish", type: "BigInt")
  archived: Boolean @source(subgraph: "YouTrack", name: "archived", type: "Boolean")
  isDefault: Boolean @source(subgraph: "YouTrack", name: "isDefault", type: "Boolean")
  issues: [Issue_Input] @source(subgraph: "YouTrack", name: "issues", type: "[Issue_Input]")
  unresolvedIssuesCount: Int
    @source(subgraph: "YouTrack", name: "unresolvedIssuesCount", type: "Int")
  previousSprint: Sprint_Input
    @source(subgraph: "YouTrack", name: "previousSprint", type: "Sprint_Input")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Agile board columns settings."
input ColumnSettings_Input @source(subgraph: "YouTrack", name: "ColumnSettings_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  field: CustomField_Input @source(subgraph: "YouTrack", name: "field", type: "CustomField_Input")
  columns: [AgileColumn_Input]
    @source(subgraph: "YouTrack", name: "columns", type: "[AgileColumn_Input]")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents settings for a single board column"
input AgileColumn_Input @source(subgraph: "YouTrack", name: "AgileColumn_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  presentation: String @source(subgraph: "YouTrack", name: "presentation", type: "String")
  isResolved: Boolean @source(subgraph: "YouTrack", name: "isResolved", type: "Boolean")
  ordinal: Int @source(subgraph: "YouTrack", name: "ordinal", type: "Int")
  "Agile board columns settings."
  parent: ColumnSettings_Input
    @source(subgraph: "YouTrack", name: "parent", type: "ColumnSettings_Input")
  wipLimit: WIPLimit_Input @source(subgraph: "YouTrack", name: "wipLimit", type: "WIPLimit_Input")
  fieldValues: [AgileColumnFieldValue_Input]
    @source(subgraph: "YouTrack", name: "fieldValues", type: "[AgileColumnFieldValue_Input]")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents WIP limits for particular column. If they are not satisfied, the column will be highlighted in UI."
input WIPLimit_Input @source(subgraph: "YouTrack", name: "WIPLimit_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  max: Int @source(subgraph: "YouTrack", name: "max", type: "Int")
  min: Int @source(subgraph: "YouTrack", name: "min", type: "Int")
  "Represents settings for a single board column"
  column: AgileColumn_Input @source(subgraph: "YouTrack", name: "column", type: "AgileColumn_Input")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents a field value or values, parameterizing agile column."
input AgileColumnFieldValue_Input
  @source(subgraph: "YouTrack", name: "AgileColumnFieldValue_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  isResolved: Boolean @source(subgraph: "YouTrack", name: "isResolved", type: "Boolean")
}

"Base entity for different swimlane settings"
input SwimlaneSettings_Input @source(subgraph: "YouTrack", name: "SwimlaneSettings_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  enabled: Boolean @source(subgraph: "YouTrack", name: "enabled", type: "Boolean")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Describes sprints configuration."
input SprintsSettings_Input @source(subgraph: "YouTrack", name: "SprintsSettings_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  isExplicit: Boolean @source(subgraph: "YouTrack", name: "isExplicit", type: "Boolean")
  cardOnSeveralSprints: Boolean
    @source(subgraph: "YouTrack", name: "cardOnSeveralSprints", type: "Boolean")
  defaultSprint: Sprint_Input
    @source(subgraph: "YouTrack", name: "defaultSprint", type: "Sprint_Input")
  disableSprints: Boolean @source(subgraph: "YouTrack", name: "disableSprints", type: "Boolean")
  explicitQuery: String @source(subgraph: "YouTrack", name: "explicitQuery", type: "String")
  sprintSyncField: CustomField_Input
    @source(subgraph: "YouTrack", name: "sprintSyncField", type: "CustomField_Input")
  hideSubtasksOfCards: Boolean
    @source(subgraph: "YouTrack", name: "hideSubtasksOfCards", type: "Boolean")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Describes rules that define which colors are used for cards on the agile board."
input ColorCoding_Input @source(subgraph: "YouTrack", name: "ColorCoding_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Shows if the board has any configuration problems."
input AgileStatus_Input @source(subgraph: "YouTrack", name: "AgileStatus_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  valid: Boolean @source(subgraph: "YouTrack", name: "valid", type: "Boolean")
  hasJobs: Boolean @source(subgraph: "YouTrack", name: "hasJobs", type: "Boolean")
  errors: [String] @source(subgraph: "YouTrack", name: "errors", type: "[String]")
  warnings: [String] @source(subgraph: "YouTrack", name: "warnings", type: "[String]")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

input Article_Input @source(subgraph: "YouTrack", name: "Article_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  attachments: [ArticleAttachment_Input]
    @source(subgraph: "YouTrack", name: "attachments", type: "[ArticleAttachment_Input]")
  content: String @source(subgraph: "YouTrack", name: "content", type: "String")
  reporter: User_Input @source(subgraph: "YouTrack", name: "reporter", type: "User_Input")
  summary: String @source(subgraph: "YouTrack", name: "summary", type: "String")
  visibility: Visibility_Input
    @source(subgraph: "YouTrack", name: "visibility", type: "Visibility_Input")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
  childArticles: [Article_Input]
    @source(subgraph: "YouTrack", name: "childArticles", type: "[Article_Input]")
  comments: [ArticleComment_Input]
    @source(subgraph: "YouTrack", name: "comments", type: "[ArticleComment_Input]")
  created: BigInt @source(subgraph: "YouTrack", name: "created", type: "BigInt")
  externalArticle: ExternalArticle_Input
    @source(subgraph: "YouTrack", name: "externalArticle", type: "ExternalArticle_Input")
  hasChildren: Boolean @source(subgraph: "YouTrack", name: "hasChildren", type: "Boolean")
  hasStar: Boolean @source(subgraph: "YouTrack", name: "hasStar", type: "Boolean")
  idReadable: String @source(subgraph: "YouTrack", name: "idReadable", type: "String")
  ordinal: BigInt @source(subgraph: "YouTrack", name: "ordinal", type: "BigInt")
  parentArticle: Article_Input
    @source(subgraph: "YouTrack", name: "parentArticle", type: "Article_Input")
  project: Project_Input @source(subgraph: "YouTrack", name: "project", type: "Project_Input")
  tags: [Tag_Input] @source(subgraph: "YouTrack", name: "tags", type: "[Tag_Input]")
  updated: BigInt @source(subgraph: "YouTrack", name: "updated", type: "BigInt")
  updatedBy: User_Input @source(subgraph: "YouTrack", name: "updatedBy", type: "User_Input")
}

input ArticleAttachment_Input @source(subgraph: "YouTrack", name: "ArticleAttachment_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  author: User_Input @source(subgraph: "YouTrack", name: "author", type: "User_Input")
  created: BigInt @source(subgraph: "YouTrack", name: "created", type: "BigInt")
  updated: BigInt @source(subgraph: "YouTrack", name: "updated", type: "BigInt")
  size: BigInt @source(subgraph: "YouTrack", name: "size", type: "BigInt")
  extension: String @source(subgraph: "YouTrack", name: "extension", type: "String")
  charset: String @source(subgraph: "YouTrack", name: "charset", type: "String")
  mimeType: String @source(subgraph: "YouTrack", name: "mimeType", type: "String")
  metaData: String @source(subgraph: "YouTrack", name: "metaData", type: "String")
  draft: Boolean @source(subgraph: "YouTrack", name: "draft", type: "Boolean")
  removed: Boolean @source(subgraph: "YouTrack", name: "removed", type: "Boolean")
  base64Content: String @source(subgraph: "YouTrack", name: "base64Content", type: "String")
  url: String @source(subgraph: "YouTrack", name: "url", type: "String")
  visibility: Visibility_Input
    @source(subgraph: "YouTrack", name: "visibility", type: "Visibility_Input")
  "Represents a base article entity."
  article: BaseArticle_Input
    @source(subgraph: "YouTrack", name: "article", type: "BaseArticle_Input")
  comment: ArticleComment_Input
    @source(subgraph: "YouTrack", name: "comment", type: "ArticleComment_Input")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents a base article entity."
input BaseArticle_Input @source(subgraph: "YouTrack", name: "BaseArticle_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  attachments: [ArticleAttachment_Input]
    @source(subgraph: "YouTrack", name: "attachments", type: "[ArticleAttachment_Input]")
  content: String @source(subgraph: "YouTrack", name: "content", type: "String")
  reporter: User_Input @source(subgraph: "YouTrack", name: "reporter", type: "User_Input")
  summary: String @source(subgraph: "YouTrack", name: "summary", type: "String")
  visibility: Visibility_Input
    @source(subgraph: "YouTrack", name: "visibility", type: "Visibility_Input")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

input ArticleComment_Input @source(subgraph: "YouTrack", name: "ArticleComment_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  article: Article_Input @source(subgraph: "YouTrack", name: "article", type: "Article_Input")
  attachments: [ArticleAttachment_Input]
    @source(subgraph: "YouTrack", name: "attachments", type: "[ArticleAttachment_Input]")
  author: User_Input @source(subgraph: "YouTrack", name: "author", type: "User_Input")
  created: BigInt @source(subgraph: "YouTrack", name: "created", type: "BigInt")
  reactions: [Reaction_Input]
    @source(subgraph: "YouTrack", name: "reactions", type: "[Reaction_Input]")
  text: String @source(subgraph: "YouTrack", name: "text", type: "String")
  updated: BigInt @source(subgraph: "YouTrack", name: "updated", type: "BigInt")
  visibility: Visibility_Input
    @source(subgraph: "YouTrack", name: "visibility", type: "Visibility_Input")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"For an article that was imported from another service, this entity represents the reference to the article in the external system."
input ExternalArticle_Input @source(subgraph: "YouTrack", name: "ExternalArticle_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  url: String @source(subgraph: "YouTrack", name: "url", type: "String")
  key: String @source(subgraph: "YouTrack", name: "key", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

type CommandList
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "CommandList") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  comment: String @source(subgraph: "YouTrack", name: "comment", type: "String")
  visibility: CommandVisibility
    @source(subgraph: "YouTrack", name: "visibility", type: "CommandVisibility")
  query: String @source(subgraph: "YouTrack", name: "query", type: "String")
  caret: Int @source(subgraph: "YouTrack", name: "caret", type: "Int")
  silent: Boolean @source(subgraph: "YouTrack", name: "silent", type: "Boolean")
  runAs: String @source(subgraph: "YouTrack", name: "runAs", type: "String")
  commands: [ParsedCommand] @source(subgraph: "YouTrack", name: "commands", type: "[ParsedCommand]")
  issues: [Issue] @source(subgraph: "YouTrack", name: "issues", type: "[Issue]")
  suggestions: [Suggestion] @source(subgraph: "YouTrack", name: "suggestions", type: "[Suggestion]")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents the command that was parsed from the provided query."
type ParsedCommand
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "ParsedCommand") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  description: String @source(subgraph: "YouTrack", name: "description", type: "String")
  error: Boolean @source(subgraph: "YouTrack", name: "error", type: "Boolean")
  delete: Boolean @source(subgraph: "YouTrack", name: "delete", type: "Boolean")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents query suggestion."
type Suggestion
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "Suggestion") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  completionStart: Int @source(subgraph: "YouTrack", name: "completionStart", type: "Int")
  completionEnd: Int @source(subgraph: "YouTrack", name: "completionEnd", type: "Int")
  matchingStart: Int @source(subgraph: "YouTrack", name: "matchingStart", type: "Int")
  matchingEnd: Int @source(subgraph: "YouTrack", name: "matchingEnd", type: "Int")
  caret: Int @source(subgraph: "YouTrack", name: "caret", type: "Int")
  description: String @source(subgraph: "YouTrack", name: "description", type: "String")
  option: String @source(subgraph: "YouTrack", name: "option", type: "String")
  prefix: String @source(subgraph: "YouTrack", name: "prefix", type: "String")
  suffix: String @source(subgraph: "YouTrack", name: "suffix", type: "String")
  group: String @source(subgraph: "YouTrack", name: "group", type: "String")
  icon: String @source(subgraph: "YouTrack", name: "icon", type: "String")
  auxiliaryIcon: String @source(subgraph: "YouTrack", name: "auxiliaryIcon", type: "String")
  className: String @source(subgraph: "YouTrack", name: "className", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

input CommandList_Input @source(subgraph: "YouTrack", name: "CommandList_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  comment: String @source(subgraph: "YouTrack", name: "comment", type: "String")
  visibility: CommandVisibility_Input
    @source(subgraph: "YouTrack", name: "visibility", type: "CommandVisibility_Input")
  query: String @source(subgraph: "YouTrack", name: "query", type: "String")
  caret: Int @source(subgraph: "YouTrack", name: "caret", type: "Int")
  silent: Boolean @source(subgraph: "YouTrack", name: "silent", type: "Boolean")
  runAs: String @source(subgraph: "YouTrack", name: "runAs", type: "String")
  commands: [ParsedCommand_Input]
    @source(subgraph: "YouTrack", name: "commands", type: "[ParsedCommand_Input]")
  issues: [Issue_Input] @source(subgraph: "YouTrack", name: "issues", type: "[Issue_Input]")
  suggestions: [Suggestion_Input]
    @source(subgraph: "YouTrack", name: "suggestions", type: "[Suggestion_Input]")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Visibility settings of the comment that is added along with the command."
input CommandVisibility_Input @source(subgraph: "YouTrack", name: "CommandVisibility_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents the command that was parsed from the provided query."
input ParsedCommand_Input @source(subgraph: "YouTrack", name: "ParsedCommand_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  description: String @source(subgraph: "YouTrack", name: "description", type: "String")
  error: Boolean @source(subgraph: "YouTrack", name: "error", type: "Boolean")
  delete: Boolean @source(subgraph: "YouTrack", name: "delete", type: "Boolean")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents query suggestion."
input Suggestion_Input @source(subgraph: "YouTrack", name: "Suggestion_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  completionStart: Int @source(subgraph: "YouTrack", name: "completionStart", type: "Int")
  completionEnd: Int @source(subgraph: "YouTrack", name: "completionEnd", type: "Int")
  matchingStart: Int @source(subgraph: "YouTrack", name: "matchingStart", type: "Int")
  matchingEnd: Int @source(subgraph: "YouTrack", name: "matchingEnd", type: "Int")
  caret: Int @source(subgraph: "YouTrack", name: "caret", type: "Int")
  description: String @source(subgraph: "YouTrack", name: "description", type: "String")
  option: String @source(subgraph: "YouTrack", name: "option", type: "String")
  prefix: String @source(subgraph: "YouTrack", name: "prefix", type: "String")
  suffix: String @source(subgraph: "YouTrack", name: "suffix", type: "String")
  group: String @source(subgraph: "YouTrack", name: "group", type: "String")
  icon: String @source(subgraph: "YouTrack", name: "icon", type: "String")
  auxiliaryIcon: String @source(subgraph: "YouTrack", name: "auxiliaryIcon", type: "String")
  className: String @source(subgraph: "YouTrack", name: "className", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

input post_issues_by_id_attachments_request_Input
  @source(subgraph: "YouTrack", name: "post_issues_by_id_attachments_request_Input") {
  files_LEFT_SQUARE_BRACE_0_RIGHT_SQUARE_BRACE_: File
    @resolveRootField(subgraph: "YouTrack", field: "files[0]")
    @source(
      subgraph: "YouTrack"
      name: "files_LEFT_SQUARE_BRACE_0_RIGHT_SQUARE_BRACE_"
      type: "File"
    )
}

"The `File` scalar type represents a file upload."
scalar File @source(subgraph: "YouTrack", name: "File") @source(subgraph: "YouTrack", name: "File")

input IssueWorkItem_Input @source(subgraph: "YouTrack", name: "IssueWorkItem_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
  author: User_Input @source(subgraph: "YouTrack", name: "author", type: "User_Input")
  creator: User_Input @source(subgraph: "YouTrack", name: "creator", type: "User_Input")
  text: String @source(subgraph: "YouTrack", name: "text", type: "String")
  textPreview: String @source(subgraph: "YouTrack", name: "textPreview", type: "String")
  type: WorkItemType_Input @source(subgraph: "YouTrack", name: "type", type: "WorkItemType_Input")
  created: BigInt @source(subgraph: "YouTrack", name: "created", type: "BigInt")
  updated: BigInt @source(subgraph: "YouTrack", name: "updated", type: "BigInt")
  duration: DurationValue_Input
    @source(subgraph: "YouTrack", name: "duration", type: "DurationValue_Input")
  date: BigInt @source(subgraph: "YouTrack", name: "date", type: "BigInt")
  issue: Issue_Input @source(subgraph: "YouTrack", name: "issue", type: "Issue_Input")
  attributes: [WorkItemAttribute_Input]
    @source(subgraph: "YouTrack", name: "attributes", type: "[WorkItemAttribute_Input]")
}

"Represents the duration value and its visual presentation."
input DurationValue_Input @source(subgraph: "YouTrack", name: "DurationValue_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  minutes: Int @source(subgraph: "YouTrack", name: "minutes", type: "Int")
  presentation: String @source(subgraph: "YouTrack", name: "presentation", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents the attribute of a specific work item."
input WorkItemAttribute_Input @source(subgraph: "YouTrack", name: "WorkItemAttribute_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  workItem: BaseWorkItem_Input
    @source(subgraph: "YouTrack", name: "workItem", type: "BaseWorkItem_Input")
  projectAttribute: WorkItemProjectAttribute_Input
    @source(subgraph: "YouTrack", name: "projectAttribute", type: "WorkItemProjectAttribute_Input")
  value: WorkItemAttributeValue_Input
    @source(subgraph: "YouTrack", name: "value", type: "WorkItemAttributeValue_Input")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents a basic ancestor for work items."
input BaseWorkItem_Input @source(subgraph: "YouTrack", name: "BaseWorkItem_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

input VcsChange_Input @source(subgraph: "YouTrack", name: "VcsChange_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  date: BigInt @source(subgraph: "YouTrack", name: "date", type: "BigInt")
  fetched: BigInt @source(subgraph: "YouTrack", name: "fetched", type: "BigInt")
  files: Int @source(subgraph: "YouTrack", name: "files", type: "Int")
  author: User_Input @source(subgraph: "YouTrack", name: "author", type: "User_Input")
  processors: [ChangesProcessor_Input]
    @source(subgraph: "YouTrack", name: "processors", type: "[ChangesProcessor_Input]")
  text: String @source(subgraph: "YouTrack", name: "text", type: "String")
  urls: [String] @source(subgraph: "YouTrack", name: "urls", type: "[String]")
  version: String @source(subgraph: "YouTrack", name: "version", type: "String")
  issue: Issue_Input @source(subgraph: "YouTrack", name: "issue", type: "Issue_Input")
  state: Int @source(subgraph: "YouTrack", name: "state", type: "Int")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"The basic entity that represents a VCS or a build server integration configured for a project."
input ChangesProcessor_Input @source(subgraph: "YouTrack", name: "ChangesProcessor_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  server: VcsServer_Input @source(subgraph: "YouTrack", name: "server", type: "VcsServer_Input")
  project: Project_Input @source(subgraph: "YouTrack", name: "project", type: "Project_Input")
  relatedProjects: [Project_Input]
    @source(subgraph: "YouTrack", name: "relatedProjects", type: "[Project_Input]")
  enabled: Boolean @source(subgraph: "YouTrack", name: "enabled", type: "Boolean")
  visibleForGroups: [UserGroup_Input]
    @source(subgraph: "YouTrack", name: "visibleForGroups", type: "[UserGroup_Input]")
  addComments: Boolean @source(subgraph: "YouTrack", name: "addComments", type: "Boolean")
  lookupIssuesInBranchName: Boolean
    @source(subgraph: "YouTrack", name: "lookupIssuesInBranchName", type: "Boolean")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"The basic entity that represents a VCS or a build server."
input VcsServer_Input @source(subgraph: "YouTrack", name: "VcsServer_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  url: String @source(subgraph: "YouTrack", name: "url", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

type IssueCountResponse
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "IssueCountResponse") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  count: BigInt @source(subgraph: "YouTrack", name: "count", type: "BigInt")
  unresolvedOnly: Boolean @source(subgraph: "YouTrack", name: "unresolvedOnly", type: "Boolean")
  query: String @source(subgraph: "YouTrack", name: "query", type: "String")
  folder: IssueFolder @source(subgraph: "YouTrack", name: "folder", type: "IssueFolder")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

input IssueCountResponse_Input @source(subgraph: "YouTrack", name: "IssueCountResponse_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  count: BigInt @source(subgraph: "YouTrack", name: "count", type: "BigInt")
  unresolvedOnly: Boolean @source(subgraph: "YouTrack", name: "unresolvedOnly", type: "Boolean")
  query: String @source(subgraph: "YouTrack", name: "query", type: "String")
  folder: IssueFolder_Input @source(subgraph: "YouTrack", name: "folder", type: "IssueFolder_Input")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

"Represents an issue folder, such as a project, a saved search, or a tag."
input IssueFolder_Input @source(subgraph: "YouTrack", name: "IssueFolder_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  name: String @source(subgraph: "YouTrack", name: "name", type: "String")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

type SearchSuggestions
  @discriminator(subgraph: "YouTrack", field: "$type")
  @source(subgraph: "YouTrack", name: "SearchSuggestions") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  caret: Int @source(subgraph: "YouTrack", name: "caret", type: "Int")
  ignoreUnresolvedSetting: Boolean
    @source(subgraph: "YouTrack", name: "ignoreUnresolvedSetting", type: "Boolean")
  query: String @source(subgraph: "YouTrack", name: "query", type: "String")
  suggestions: [Suggestion] @source(subgraph: "YouTrack", name: "suggestions", type: "[Suggestion]")
  folders: [IssueFolder] @source(subgraph: "YouTrack", name: "folders", type: "[IssueFolder]")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

input SearchSuggestions_Input @source(subgraph: "YouTrack", name: "SearchSuggestions_Input") {
  id: String @source(subgraph: "YouTrack", name: "id", type: "String")
  caret: Int @source(subgraph: "YouTrack", name: "caret", type: "Int")
  ignoreUnresolvedSetting: Boolean
    @source(subgraph: "YouTrack", name: "ignoreUnresolvedSetting", type: "Boolean")
  query: String @source(subgraph: "YouTrack", name: "query", type: "String")
  suggestions: [Suggestion_Input]
    @source(subgraph: "YouTrack", name: "suggestions", type: "[Suggestion_Input]")
  folders: [IssueFolder_Input]
    @source(subgraph: "YouTrack", name: "folders", type: "[IssueFolder_Input]")
  _DOLLAR_type: String
    @resolveRootField(subgraph: "YouTrack", field: "$type")
    @source(subgraph: "YouTrack", name: "_DOLLAR_type", type: "String")
}

scalar ObjMap
  @source(subgraph: "YouTrack", name: "ObjMap")
  @source(subgraph: "YouTrack", name: "ObjMap")

enum HTTPMethod @source(subgraph: "YouTrack", name: "HTTPMethod") {
  GET @source(subgraph: "YouTrack", name: "GET")
  HEAD @source(subgraph: "YouTrack", name: "HEAD")
  POST @source(subgraph: "YouTrack", name: "POST")
  PUT @source(subgraph: "YouTrack", name: "PUT")
  DELETE @source(subgraph: "YouTrack", name: "DELETE")
  CONNECT @source(subgraph: "YouTrack", name: "CONNECT")
  OPTIONS @source(subgraph: "YouTrack", name: "OPTIONS")
  TRACE @source(subgraph: "YouTrack", name: "TRACE")
  PATCH @source(subgraph: "YouTrack", name: "PATCH")
}
