export default 'schema @transport(subgraph: "OpenBreweryDB", kind: "rest", location: "https://api.openbrewerydb.org") {\n  query: Query\n}\n\ndirective @example(subgraph: String, value: ObjMap) repeatable on FIELD_DEFINITION | OBJECT | INPUT_OBJECT | ENUM | SCALAR\n\ndirective @httpOperation(subgraph: String, path: String, operationSpecificHeaders: ObjMap, httpMethod: HTTPMethod, isBinary: Boolean, requestBaseBody: ObjMap, queryParamArgMap: ObjMap, queryStringOptionsByParam: ObjMap, jsonApiFields: Boolean) on FIELD_DEFINITION\n\ndirective @transport(subgraph: String, kind: String, location: String, headers: ObjMap, queryStringOptions: ObjMap, queryParams: ObjMap) on OBJECT\n\ntype Query {\n  breweries(input: queryInput_breweries_input_Input): [query_breweries_items] @httpOperation(subgraph: "OpenBreweryDB", path: "/breweries", httpMethod: GET) @resolver(subgraph: "OpenBreweryDB", operation: "query breweries($input: queryInput_breweries_input_Input) { breweries(input: $input) }") @source(subgraph: "OpenBreweryDB", name: "breweries", type: "[query_breweries_items]")\n}\n\ntype query_breweries_items @source(subgraph: "OpenBreweryDB", name: "query_breweries_items") {\n  id: String @source(subgraph: "OpenBreweryDB", name: "id", type: "String")\n  name: String @source(subgraph: "OpenBreweryDB", name: "name", type: "String")\n  brewery_type: String @source(subgraph: "OpenBreweryDB", name: "brewery_type", type: "String")\n  street: String @source(subgraph: "OpenBreweryDB", name: "street", type: "String")\n  city: String @source(subgraph: "OpenBreweryDB", name: "city", type: "String")\n  state: String @source(subgraph: "OpenBreweryDB", name: "state", type: "String")\n  postal_code: String @source(subgraph: "OpenBreweryDB", name: "postal_code", type: "String")\n  country: String @source(subgraph: "OpenBreweryDB", name: "country", type: "String")\n  longitude: String @source(subgraph: "OpenBreweryDB", name: "longitude", type: "String")\n  latitude: String @source(subgraph: "OpenBreweryDB", name: "latitude", type: "String")\n  phone: String @source(subgraph: "OpenBreweryDB", name: "phone", type: "String")\n  website_url: URL @source(subgraph: "OpenBreweryDB", name: "website_url", type: "URL")\n  updated_at: DateTime @source(subgraph: "OpenBreweryDB", name: "updated_at", type: "DateTime")\n  tag_list: [String] @source(subgraph: "OpenBreweryDB", name: "tag_list", type: "[String]")\n}\n\n"""\nA field whose value conforms to the standard URL format as specified in RFC3986: https://www.ietf.org/rfc/rfc3986.txt.\n"""\nscalar URL @source(subgraph: "OpenBreweryDB", name: "URL") @source(subgraph: "OpenBreweryDB", name: "URL")\n\n"""\nA date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.\n"""\nscalar DateTime @source(subgraph: "OpenBreweryDB", name: "DateTime") @source(subgraph: "OpenBreweryDB", name: "DateTime")\n\ninput queryInput_breweries_input_Input @example(subgraph: "OpenBreweryDB", value: "\\"{\\\\\\"by_city\\\\\\":\\\\\\"san diego\\\\\\",\\\\\\"by_name\\\\\\":\\\\\\"cooper\\\\\\",\\\\\\"by_state\\\\\\":\\\\\\"ohio\\\\\\",\\\\\\"by_postal\\\\\\":\\\\\\"44107\\\\\\",\\\\\\"by_type\\\\\\":\\\\\\"micro\\\\\\",\\\\\\"by_tag\\\\\\":\\\\\\"patio\\\\\\",\\\\\\"by_tags\\\\\\":[\\\\\\"patio\\\\\\",\\\\\\"dog-friendly\\\\\\"],\\\\\\"page\\\\\\":15,\\\\\\"per_page\\\\\\":25,\\\\\\"sort\\\\\\":\\\\\\"-\\\\\\"}\\"") @source(subgraph: "OpenBreweryDB", name: "queryInput_breweries_input_Input") {\n  by_city: String @source(subgraph: "OpenBreweryDB", name: "by_city", type: "String")\n  by_name: String @source(subgraph: "OpenBreweryDB", name: "by_name", type: "String")\n  by_state: String @source(subgraph: "OpenBreweryDB", name: "by_state", type: "String")\n  by_postal: String @source(subgraph: "OpenBreweryDB", name: "by_postal", type: "String")\n  by_type: String @source(subgraph: "OpenBreweryDB", name: "by_type", type: "String")\n  by_tag: String @source(subgraph: "OpenBreweryDB", name: "by_tag", type: "String")\n  by_tags: [String] @source(subgraph: "OpenBreweryDB", name: "by_tags", type: "[String]")\n  page: Int @source(subgraph: "OpenBreweryDB", name: "page", type: "Int")\n  per_page: Int @source(subgraph: "OpenBreweryDB", name: "per_page", type: "Int")\n  sort: String @source(subgraph: "OpenBreweryDB", name: "sort", type: "String")\n}\n\nscalar ObjMap @source(subgraph: "OpenBreweryDB", name: "ObjMap") @source(subgraph: "OpenBreweryDB", name: "ObjMap")\n\nenum HTTPMethod @source(subgraph: "OpenBreweryDB", name: "HTTPMethod") {\n  GET @source(subgraph: "OpenBreweryDB", name: "GET")\n  HEAD @source(subgraph: "OpenBreweryDB", name: "HEAD")\n  POST @source(subgraph: "OpenBreweryDB", name: "POST")\n  PUT @source(subgraph: "OpenBreweryDB", name: "PUT")\n  DELETE @source(subgraph: "OpenBreweryDB", name: "DELETE")\n  CONNECT @source(subgraph: "OpenBreweryDB", name: "CONNECT")\n  OPTIONS @source(subgraph: "OpenBreweryDB", name: "OPTIONS")\n  TRACE @source(subgraph: "OpenBreweryDB", name: "TRACE")\n  PATCH @source(subgraph: "OpenBreweryDB", name: "PATCH")\n}';
