// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Orbit should generate correct schema 1`] = `
"schema {
  query: Query
  mutation: Mutation
}

directive @oneOf on INPUT_OBJECT | FIELD_DEFINITION

type Query {
  "Get info about the current user"
  user: user_200_response
  "List activities for a workspace"
  by_workspace_slug_activities(workspace_slug: String!, activity_tags: String, affiliation: queryInput_by_workspace_slug_activities_affiliation, member_tags: String, orbit_level: queryInput_by_workspace_slug_activities_orbit_level, activity_type: queryInput_by_workspace_slug_activities_activity_type, weight: String, identity: queryInput_by_workspace_slug_activities_identity, location: String, company: String, start_date: String, end_date: String, page: String, direction: queryInput_by_workspace_slug_activities_direction, items: queryInput_by_workspace_slug_activities_items, sort: queryInput_by_workspace_slug_activities_sort, type: String): by_workspace_slug_activities_200_response
  "Get an activity in the workspace"
  by_workspace_slug_activities_by_id(workspace_slug: String!, id: String!): by_workspace_slug_activities_by_id_200_response
  "List all activity types for a workspace"
  by_workspace_slug_activity_types(workspace_slug: String!): by_workspace_slug_activity_types_200_response
  "List activities for a member"
  by_workspace_slug_members_by_member_slug_activities(workspace_slug: String!, member_slug: String!, page: String, direction: queryInput_by_workspace_slug_members_by_member_slug_activities_direction, items: queryInput_by_workspace_slug_members_by_member_slug_activities_items, sort: queryInput_by_workspace_slug_members_by_member_slug_activities_sort, activity_type: String, type: String): by_workspace_slug_members_by_member_slug_activities_200_response
  "Get the member's notes"
  by_workspace_slug_members_by_member_slug_notes(workspace_slug: String!, member_slug: String!, page: String): by_workspace_slug_members_by_member_slug_notes_200_response
  "List members in a workspace"
  by_workspace_slug_members(workspace_slug: String!, activity_tags: String, affiliation: queryInput_by_workspace_slug_members_affiliation, member_tags: String, orbit_level: queryInput_by_workspace_slug_members_orbit_level, activity_type: queryInput_by_workspace_slug_members_activity_type, weight: String, identity: queryInput_by_workspace_slug_members_identity, location: String, company: String, start_date: String, end_date: String, query: String, page: String, direction: queryInput_by_workspace_slug_members_direction, items: queryInput_by_workspace_slug_members_items, activities_count_min: String, activities_count_max: String, sort: queryInput_by_workspace_slug_members_sort, type: String): by_workspace_slug_members_200_response
  "Get a member"
  by_workspace_slug_members_by_member_slug(workspace_slug: String!, member_slug: String!): by_workspace_slug_members_by_member_slug_200_response
  "Provide a source and one of username/uid/email params to return a member with that identity, if one exists. Common values for source include github, twitter, and email."
  by_workspace_slug_members_find(
    workspace_slug: String!
    source: String
    source_host: String
    uid: String
    username: String
    email: String
    "Deprecated, please use source=github and username=<username> instead"
    github: String
  ): by_workspace_slug_members_find_response
  "List member activities in an organization"
  by_workspace_slug_organizations_by_organization_id_activities(workspace_slug: String!, organization_id: String!, page: String, direction: queryInput_by_workspace_slug_organizations_by_organization_id_activities_direction, items: queryInput_by_workspace_slug_organizations_by_organization_id_activities_items, sort: queryInput_by_workspace_slug_organizations_by_organization_id_activities_sort, activity_type: queryInput_by_workspace_slug_organizations_by_organization_id_activities_activity_type): by_workspace_slug_organizations_by_organization_id_activities_200_response
  "List members in an organization"
  by_workspace_slug_organizations_by_organization_id_members(workspace_slug: String!, organization_id: String!, page: String, items: queryInput_by_workspace_slug_organizations_by_organization_id_members_items): by_workspace_slug_organizations_by_organization_id_members_200_response
  "List organizations in a workspace"
  by_workspace_slug_organizations(workspace_slug: String!, query: String, page: String, direction: queryInput_by_workspace_slug_organizations_direction, items: queryInput_by_workspace_slug_organizations_items, sort: queryInput_by_workspace_slug_organizations_sort): by_workspace_slug_organizations_200_response
  "Get an organization"
  by_workspace_slug_organizations_by_organization_id(workspace_slug: String!, organization_id: String!): by_workspace_slug_organizations_by_organization_id_200_response
  "Get a workspace stats"
  by_workspace_slug_reports(workspace_slug: String!, start_date: String, end_date: String, properties: String, activity_type: String, type: String): by_workspace_slug_reports_200_response
  "List destinations in a workspace"
  by_workspace_slug_webhooks(workspace_slug: String!): by_workspace_slug_webhooks_200_response
  "Get a destination"
  by_workspace_slug_webhooks_by_id(workspace_slug: String!, id: String!): by_workspace_slug_webhooks_by_id_200_response
  "Get all workspaces for the current user"
  workspaces: workspaces_200_response
  "Get a workspace"
  workspaces_by_workspace_slug(workspace_slug: String!): workspaces_by_workspace_slug_200_response
}

type user_200_response {
  data: query_user_data
}

type query_user_data {
  id: String
  type: String
  attributes: query_user_data_attributes
}

type query_user_data_attributes {
  name: String
  updated_at: DateTime
  created_at: DateTime
  email: EmailAddress
}

"A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the \`date-time\` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar."
scalar DateTime

"A field whose value conforms to the standard internet email address format as specified in RFC822: https://www.w3.org/Protocols/rfc822/."
scalar EmailAddress @specifiedBy(url: "https://www.w3.org/Protocols/rfc822/")

type by_workspace_slug_activities_200_response {
  data: [query_by_workspace_slug_activities_data_items]
  included: [query_by_workspace_slug_activities_included_items]
  links: query_by_workspace_slug_activities_links
}

type query_by_workspace_slug_activities_data_items {
  id: String
  type: String
  attributes: query_by_workspace_slug_activities_data_items_attributes
  relationships: query_by_workspace_slug_activities_data_items_relationships
}

type query_by_workspace_slug_activities_data_items_attributes {
  action: String
  created_at: DateTime
  key: String
  occurred_at: DateTime
  updated_at: DateTime
  type: String
  properties: query_by_workspace_slug_activities_data_items_attributes2
  tags: [URL]
  orbit_url: URL
  weight: String
  activity_link: URL
  g_title: String
  g_number: Int
  g_html_url: URL
  g_created_at: DateTime
  is_pull_request: Void
}

type query_by_workspace_slug_activities_data_items_attributes2 {
  github_issue: String
  github_repository: String
  github_organization: String
}

"A field whose value conforms to the standard URL format as specified in RFC3986: https://www.ietf.org/rfc/rfc3986.txt."
scalar URL

"Represents empty values"
scalar Void

type query_by_workspace_slug_activities_data_items_relationships {
  activity_type: query_by_workspace_slug_activities_data_items_relationships_activity_type
  member: query_by_workspace_slug_activities_data_items_relationships_member
  repository: query_by_workspace_slug_activities_data_items_relationships_repository
}

type query_by_workspace_slug_activities_data_items_relationships_activity_type {
  data: query_by_workspace_slug_activities_data_items_relationships_activity_type_data
}

type query_by_workspace_slug_activities_data_items_relationships_activity_type_data {
  id: String
  type: String
}

type query_by_workspace_slug_activities_data_items_relationships_member {
  data: query_by_workspace_slug_activities_data_items_relationships_member_data
}

type query_by_workspace_slug_activities_data_items_relationships_member_data {
  id: String
  type: String
}

type query_by_workspace_slug_activities_data_items_relationships_repository {
  data: query_by_workspace_slug_activities_data_items_relationships_repository_data
}

type query_by_workspace_slug_activities_data_items_relationships_repository_data {
  id: String
  type: String
}

type query_by_workspace_slug_activities_included_items {
  id: String
  type: String
  attributes: query_by_workspace_slug_activities_included_items_attributes
}

type query_by_workspace_slug_activities_included_items_attributes {
  name: String
  short_name: String
  key: URL
  channel: String
  source: String
  weight: String
}

type query_by_workspace_slug_activities_links {
  first: URL
  prev: Void
  next: Void
}

enum queryInput_by_workspace_slug_activities_affiliation {
  member
  teammate
}

enum queryInput_by_workspace_slug_activities_orbit_level {
  _1
  _2
  _3
  _4
  n
}

enum queryInput_by_workspace_slug_activities_activity_type {
  twitter_COLON_followed
  discord_COLON_thread_COLON_replied
  discord_COLON_message_COLON_replied
  discord_COLON_server_COLON_joined
  custom_COLON_happened
  note_COLON_created
  discourse_COLON_topic_COLON_created
  post_COLON_created
  discourse_COLON_post_COLON_created
  discourse_COLON_post_COLON_liked
  discourse_COLON_user_COLON_created
  issues_COLON_opened
  slack_COLON_message_COLON_sent
  issue_comment_COLON_created
  slack_COLON_channel_COLON_joined
  slack_COLON_thread_COLON_replied
  pull_requests_COLON_opened
  pull_requests_COLON_merged
  fork_COLON_created
  discussions_COLON_comment
  discussions_COLON_reply
  star_COLON_created
  discussions_COLON_discussion_created
  tweet_COLON_sent
  discord_COLON_message_COLON_sent
}

enum queryInput_by_workspace_slug_activities_identity {
  github
  twitter
  email
  discourse
  linkedin
  devto
  slack
  discord
}

enum queryInput_by_workspace_slug_activities_direction {
  ASC
  DESC
}

enum queryInput_by_workspace_slug_activities_items {
  _10
  _50
  _100
}

enum queryInput_by_workspace_slug_activities_sort {
  occurred_at
  member
}

type by_workspace_slug_activities_by_id_200_response {
  data: query_by_workspace_slug_activities_by_id_data
  included: [query_by_workspace_slug_activities_by_id_included_items]
}

type query_by_workspace_slug_activities_by_id_data {
  id: String
  type: String
  attributes: query_by_workspace_slug_activities_by_id_data_attributes
  relationships: query_by_workspace_slug_activities_by_id_data_relationships
}

type query_by_workspace_slug_activities_by_id_data_attributes {
  action: String
  created_at: DateTime
  key: String
  occurred_at: DateTime
  updated_at: DateTime
  type: String
  properties: query_by_workspace_slug_activities_by_id_data_attributes2
  tags: [String]
  orbit_url: URL
  weight: String
}

type query_by_workspace_slug_activities_by_id_data_attributes2 {
  prop_1: String
  prop_2: String
}

type query_by_workspace_slug_activities_by_id_data_relationships {
  activity_type: query_by_workspace_slug_activities_by_id_data_relationships_activity_type
  member: query_by_workspace_slug_activities_by_id_data_relationships_member
  repository: query_by_workspace_slug_activities_by_id_data_relationships_repository
  user: query_by_workspace_slug_activities_by_id_data_relationships_user
}

type query_by_workspace_slug_activities_by_id_data_relationships_activity_type {
  data: query_by_workspace_slug_activities_by_id_data_relationships_activity_type_data
}

type query_by_workspace_slug_activities_by_id_data_relationships_activity_type_data {
  id: String
  type: String
}

type query_by_workspace_slug_activities_by_id_data_relationships_member {
  data: query_by_workspace_slug_activities_by_id_data_relationships_member_data
}

type query_by_workspace_slug_activities_by_id_data_relationships_member_data {
  id: String
  type: String
}

type query_by_workspace_slug_activities_by_id_data_relationships_repository {
  data: query_by_workspace_slug_activities_by_id_data_relationships_repository_data
}

type query_by_workspace_slug_activities_by_id_data_relationships_repository_data {
  id: String
  type: String
}

type query_by_workspace_slug_activities_by_id_data_relationships_user {
  data: query_by_workspace_slug_activities_by_id_data_relationships_user_data
}

type query_by_workspace_slug_activities_by_id_data_relationships_user_data {
  id: String
  type: String
}

type query_by_workspace_slug_activities_by_id_included_items {
  id: String
  type: String
  attributes: query_by_workspace_slug_activities_by_id_included_items_attributes
}

type query_by_workspace_slug_activities_by_id_included_items_attributes {
  name: String
  short_name: String
  key: URL
  channel: String
  source: String
  weight: String
}

type by_workspace_slug_activity_types_200_response {
  data: [query_by_workspace_slug_activity_types_data_items]
  links: query_by_workspace_slug_activity_types_links
}

type query_by_workspace_slug_activity_types_data_items {
  id: String
  type: String
  attributes: query_by_workspace_slug_activity_types_data_items_attributes
}

type query_by_workspace_slug_activity_types_data_items_attributes {
  name: String
  short_name: String
  key: URL
  channel: String
  source: String
  weight: String
}

type query_by_workspace_slug_activity_types_links {
  first: String
  last: String
  prev: Void
  next: Void
}

type by_workspace_slug_members_by_member_slug_activities_200_response {
  data: [query_by_workspace_slug_members_by_member_slug_activities_data_items]
  included: [query_by_workspace_slug_members_by_member_slug_activities_included_items]
  links: query_by_workspace_slug_members_by_member_slug_activities_links
}

type query_by_workspace_slug_members_by_member_slug_activities_data_items {
  id: String
  type: String
  attributes: query_by_workspace_slug_members_by_member_slug_activities_data_items_attributes
  relationships: query_by_workspace_slug_members_by_member_slug_activities_data_items_relationships
}

type query_by_workspace_slug_members_by_member_slug_activities_data_items_attributes {
  action: String
  created_at: DateTime
  key: String
  occurred_at: DateTime
  updated_at: DateTime
  type: String
  properties: query_by_workspace_slug_members_by_member_slug_activities_data_items_attributes2
  tags: [String]
  orbit_url: URL
  weight: String
}

type query_by_workspace_slug_members_by_member_slug_activities_data_items_attributes2 {
  prop_1: String
  prop_2: String
}

type query_by_workspace_slug_members_by_member_slug_activities_data_items_relationships {
  activity_type: query_by_workspace_slug_members_by_member_slug_activities_data_items_relationships_activity_type
  member: query_by_workspace_slug_members_by_member_slug_activities_data_items_relationships_member
}

type query_by_workspace_slug_members_by_member_slug_activities_data_items_relationships_activity_type {
  data: query_by_workspace_slug_members_by_member_slug_activities_data_items_relationships_activity_type_data
}

type query_by_workspace_slug_members_by_member_slug_activities_data_items_relationships_activity_type_data {
  id: String
  type: String
}

type query_by_workspace_slug_members_by_member_slug_activities_data_items_relationships_member {
  data: query_by_workspace_slug_members_by_member_slug_activities_data_items_relationships_member_data
}

type query_by_workspace_slug_members_by_member_slug_activities_data_items_relationships_member_data {
  id: String
  type: String
}

type query_by_workspace_slug_members_by_member_slug_activities_included_items {
  id: String
  type: String
  attributes: query_by_workspace_slug_members_by_member_slug_activities_included_items_attributes
}

type query_by_workspace_slug_members_by_member_slug_activities_included_items_attributes {
  name: String
  short_name: String
  key: URL
  channel: String
  source: String
  weight: String
}

type query_by_workspace_slug_members_by_member_slug_activities_links {
  first: String
  last: String
  prev: Void
  next: Void
}

enum queryInput_by_workspace_slug_members_by_member_slug_activities_direction {
  ASC
  DESC
}

enum queryInput_by_workspace_slug_members_by_member_slug_activities_items {
  _10
  _50
  _100
}

enum queryInput_by_workspace_slug_members_by_member_slug_activities_sort {
  occurred_at
  member
}

type by_workspace_slug_members_by_member_slug_notes_200_response {
  data: [query_by_workspace_slug_members_by_member_slug_notes_data_items]
  included: [query_by_workspace_slug_members_by_member_slug_notes_included_items]
  links: query_by_workspace_slug_members_by_member_slug_notes_links
}

type query_by_workspace_slug_members_by_member_slug_notes_data_items {
  id: String
  type: String
  attributes: query_by_workspace_slug_members_by_member_slug_notes_data_items_attributes
  relationships: query_by_workspace_slug_members_by_member_slug_notes_data_items_relationships
}

type query_by_workspace_slug_members_by_member_slug_notes_data_items_attributes {
  id: String
  created_at: DateTime
  body: String
  updated_at: DateTime
}

type query_by_workspace_slug_members_by_member_slug_notes_data_items_relationships {
  member: query_by_workspace_slug_members_by_member_slug_notes_data_items_relationships_member
  user: query_by_workspace_slug_members_by_member_slug_notes_data_items_relationships_user
}

type query_by_workspace_slug_members_by_member_slug_notes_data_items_relationships_member {
  data: query_by_workspace_slug_members_by_member_slug_notes_data_items_relationships_member_data
}

type query_by_workspace_slug_members_by_member_slug_notes_data_items_relationships_member_data {
  id: String
  type: String
}

type query_by_workspace_slug_members_by_member_slug_notes_data_items_relationships_user {
  data: query_by_workspace_slug_members_by_member_slug_notes_data_items_relationships_user_data
}

type query_by_workspace_slug_members_by_member_slug_notes_data_items_relationships_user_data {
  id: String
  type: String
}

type query_by_workspace_slug_members_by_member_slug_notes_included_items {
  id: String
  type: String
  attributes: query_by_workspace_slug_members_by_member_slug_notes_included_items_attributes
  relationships: query_by_workspace_slug_members_by_member_slug_notes_included_items_relationships
}

type query_by_workspace_slug_members_by_member_slug_notes_included_items_attributes {
  activities_count: Int
  activities_score: Int
  avatar_url: URL
  bio: Void
  birthday: Void
  company: Void
  title: Void
  created_at: DateTime
  deleted_at: Void
  first_activity_occurred_at: Void
  last_activity_occurred_at: Void
  location: Void
  name: String
  pronouns: Void
  reach: Int
  shipping_address: Void
  slug: String
  source: String
  tag_list: [JSON]
  tags: [JSON]
  teammate: Boolean
  tshirt: Void
  updated_at: DateTime
  merged_at: Void
  url: Void
  orbit_url: URL
  created: Boolean
  id: String
  orbit_level: Void
  love: Void
  twitter: Void
  github: Void
  discourse: Void
  email: Void
  devto: Void
  linkedin: Void
  discord: Void
  github_followers: Void
  twitter_followers: Void
  topics: Void
  languages: Void
}

"The \`JSON\` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf)."
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type query_by_workspace_slug_members_by_member_slug_notes_included_items_relationships {
  identities: query_by_workspace_slug_members_by_member_slug_notes_included_items_relationships_identities
}

type query_by_workspace_slug_members_by_member_slug_notes_included_items_relationships_identities {
  data: [JSON]
}

type query_by_workspace_slug_members_by_member_slug_notes_links {
  first: String
  last: String
  prev: Void
  next: Void
}

type by_workspace_slug_members_200_response {
  data: [query_by_workspace_slug_members_data_items]
  included: [query_by_workspace_slug_members_included_items]
  links: query_by_workspace_slug_members_links
}

type query_by_workspace_slug_members_data_items {
  id: String
  type: String
  attributes: query_by_workspace_slug_members_data_items_attributes
  relationships: query_by_workspace_slug_members_data_items_relationships
}

type query_by_workspace_slug_members_data_items_attributes {
  activities_count: Int
  activities_score: Int
  avatar_url: URL
  bio: Void
  birthday: Void
  company: Void
  title: Void
  created_at: DateTime
  deleted_at: Void
  first_activity_occurred_at: Void
  last_activity_occurred_at: Void
  location: Void
  name: String
  pronouns: Void
  reach: Int
  shipping_address: Void
  slug: String
  source: String
  tag_list: [String]
  tags: [String]
  teammate: Boolean
  tshirt: Void
  updated_at: DateTime
  merged_at: Void
  url: Void
  orbit_url: URL
  created: Boolean
  id: String
  orbit_level: Void
  love: Void
  twitter: Void
  github: Void
  discourse: Void
  email: Void
  devto: Void
  linkedin: Void
  discord: Void
  github_followers: Void
  twitter_followers: Void
  topics: Void
  languages: Void
}

type query_by_workspace_slug_members_data_items_relationships {
  identities: query_by_workspace_slug_members_data_items_relationships_identities
}

type query_by_workspace_slug_members_data_items_relationships_identities {
  data: [query_by_workspace_slug_members_data_items_relationships_identities_data_items]
}

type query_by_workspace_slug_members_data_items_relationships_identities_data_items {
  id: String
  type: String
}

type query_by_workspace_slug_members_included_items {
  id: String
  type: String
}

type query_by_workspace_slug_members_links {
  first: URL
  prev: Void
  next: Void
}

enum queryInput_by_workspace_slug_members_affiliation {
  member
  teammate
}

enum queryInput_by_workspace_slug_members_orbit_level {
  _1
  _2
  _3
  _4
  n
}

enum queryInput_by_workspace_slug_members_activity_type {
  twitter_COLON_followed
  discord_COLON_thread_COLON_replied
  discord_COLON_message_COLON_replied
  discord_COLON_server_COLON_joined
  custom_COLON_happened
  note_COLON_created
  discourse_COLON_topic_COLON_created
  post_COLON_created
  discourse_COLON_post_COLON_created
  discourse_COLON_post_COLON_liked
  discourse_COLON_user_COLON_created
  issues_COLON_opened
  slack_COLON_message_COLON_sent
  issue_comment_COLON_created
  slack_COLON_channel_COLON_joined
  slack_COLON_thread_COLON_replied
  pull_requests_COLON_opened
  pull_requests_COLON_merged
  fork_COLON_created
  discussions_COLON_comment
  discussions_COLON_reply
  star_COLON_created
  discussions_COLON_discussion_created
  tweet_COLON_sent
  discord_COLON_message_COLON_sent
}

enum queryInput_by_workspace_slug_members_identity {
  github
  twitter
  email
  discourse
  linkedin
  devto
  slack
  discord
}

enum queryInput_by_workspace_slug_members_direction {
  ASC
  DESC
}

enum queryInput_by_workspace_slug_members_items {
  _10
  _50
  _100
}

enum queryInput_by_workspace_slug_members_sort {
  activities_count
  company
  created_at
  first_activity
  github_followers
  id
  last_activity
  location
  love
  name
  orbit
  reach
  title
  twitter_followers
  updated_at
}

type by_workspace_slug_members_by_member_slug_200_response {
  data: query_by_workspace_slug_members_by_member_slug_data
  included: [query_by_workspace_slug_members_by_member_slug_included_items]
}

type query_by_workspace_slug_members_by_member_slug_data {
  id: String
  type: String
  attributes: query_by_workspace_slug_members_by_member_slug_data_attributes
  relationships: query_by_workspace_slug_members_by_member_slug_data_relationships
}

type query_by_workspace_slug_members_by_member_slug_data_attributes {
  activities_count: Int
  activities_score: Int
  avatar_url: URL
  bio: Void
  birthday: Void
  company: Void
  title: Void
  created_at: DateTime
  deleted_at: Void
  first_activity_occurred_at: Void
  last_activity_occurred_at: Void
  location: Void
  name: String
  pronouns: Void
  reach: Int
  shipping_address: Void
  slug: String
  source: String
  tag_list: [JSON]
  tags: [JSON]
  teammate: Boolean
  tshirt: Void
  updated_at: DateTime
  merged_at: Void
  url: Void
  orbit_url: URL
  created: Boolean
  id: String
  orbit_level: Void
  love: Void
  twitter: Void
  github: Void
  discourse: Void
  email: Void
  devto: Void
  linkedin: Void
  discord: Void
  github_followers: Void
  twitter_followers: Void
  topics: Void
  languages: Void
}

type query_by_workspace_slug_members_by_member_slug_data_relationships {
  identities: query_by_workspace_slug_members_by_member_slug_data_relationships_identities
}

type query_by_workspace_slug_members_by_member_slug_data_relationships_identities {
  data: [query_by_workspace_slug_members_by_member_slug_data_relationships_identities_data_items]
}

type query_by_workspace_slug_members_by_member_slug_data_relationships_identities_data_items {
  id: String
  type: String
}

type query_by_workspace_slug_members_by_member_slug_included_items {
  id: String
  type: String
}

union by_workspace_slug_members_find_response = by_workspace_slug_members_find_200_response | by_workspace_slug_members_find_404_response

type by_workspace_slug_members_find_200_response {
  data: query_by_workspace_slug_members_find_oneOf_0_data
  included: [query_by_workspace_slug_members_find_oneOf_0_included_items]
}

type query_by_workspace_slug_members_find_oneOf_0_data {
  id: String
  type: String
  attributes: query_by_workspace_slug_members_find_oneOf_0_data_attributes
  relationships: query_by_workspace_slug_members_find_oneOf_0_data_relationships
}

type query_by_workspace_slug_members_find_oneOf_0_data_attributes {
  activities_count: Int
  activities_score: Int
  avatar_url: URL
  bio: Void
  birthday: Void
  company: Void
  title: Void
  created_at: DateTime
  deleted_at: Void
  first_activity_occurred_at: Void
  last_activity_occurred_at: Void
  location: Void
  name: String
  pronouns: Void
  reach: Int
  shipping_address: Void
  slug: String
  source: String
  tag_list: [JSON]
  tags: [JSON]
  teammate: Boolean
  tshirt: Void
  updated_at: DateTime
  merged_at: Void
  url: Void
  orbit_url: URL
  created: Boolean
  id: String
  orbit_level: Void
  love: Void
  twitter: Void
  github: String
  discourse: Void
  email: Void
  devto: Void
  linkedin: Void
  discord: Void
  github_followers: Void
  twitter_followers: Void
  topics: Void
  languages: Void
}

type query_by_workspace_slug_members_find_oneOf_0_data_relationships {
  identities: query_by_workspace_slug_members_find_oneOf_0_data_relationships_identities
}

type query_by_workspace_slug_members_find_oneOf_0_data_relationships_identities {
  data: [query_by_workspace_slug_members_find_oneOf_0_data_relationships_identities_data_items]
}

type query_by_workspace_slug_members_find_oneOf_0_data_relationships_identities_data_items {
  id: String
  type: String
}

type query_by_workspace_slug_members_find_oneOf_0_included_items {
  id: String
  type: String
  attributes: query_by_workspace_slug_members_find_oneOf_0_included_items_attributes
}

type query_by_workspace_slug_members_find_oneOf_0_included_items_attributes {
  uid: String
  email: Void
  username: String
  name: Void
  source: String
  source_host: String
}

type by_workspace_slug_members_find_404_response {
  errors: String
}

type by_workspace_slug_organizations_by_organization_id_activities_200_response {
  data: [query_by_workspace_slug_organizations_by_organization_id_activities_data_items]
  included: [query_by_workspace_slug_organizations_by_organization_id_activities_included_items]
  links: query_by_workspace_slug_organizations_by_organization_id_activities_links
}

type query_by_workspace_slug_organizations_by_organization_id_activities_data_items {
  id: String
  type: String
  attributes: query_by_workspace_slug_organizations_by_organization_id_activities_data_items_attributes
  relationships: query_by_workspace_slug_organizations_by_organization_id_activities_data_items_relationships
}

type query_by_workspace_slug_organizations_by_organization_id_activities_data_items_attributes {
  action: String
  created_at: DateTime
  key: String
  occurred_at: DateTime
  updated_at: DateTime
  type: String
  properties: query_by_workspace_slug_organizations_by_organization_id_activities_data_items_attributes2
  tags: [URL]
  orbit_url: URL
  weight: String
  activity_link: URL
}

type query_by_workspace_slug_organizations_by_organization_id_activities_data_items_attributes2 {
  discord_server: String
  discord_channel: String
}

type query_by_workspace_slug_organizations_by_organization_id_activities_data_items_relationships {
  activity_type: query_by_workspace_slug_organizations_by_organization_id_activities_data_items_relationships_activity_type
  member: query_by_workspace_slug_organizations_by_organization_id_activities_data_items_relationships_member
}

type query_by_workspace_slug_organizations_by_organization_id_activities_data_items_relationships_activity_type {
  data: query_by_workspace_slug_organizations_by_organization_id_activities_data_items_relationships_activity_type_data
}

type query_by_workspace_slug_organizations_by_organization_id_activities_data_items_relationships_activity_type_data {
  id: String
  type: String
}

type query_by_workspace_slug_organizations_by_organization_id_activities_data_items_relationships_member {
  data: query_by_workspace_slug_organizations_by_organization_id_activities_data_items_relationships_member_data
}

type query_by_workspace_slug_organizations_by_organization_id_activities_data_items_relationships_member_data {
  id: String
  type: String
}

type query_by_workspace_slug_organizations_by_organization_id_activities_included_items {
  id: String
  type: String
  attributes: query_by_workspace_slug_organizations_by_organization_id_activities_included_items_attributes
}

type query_by_workspace_slug_organizations_by_organization_id_activities_included_items_attributes {
  name: String
  short_name: String
  key: URL
  channel: String
  source: String
  weight: String
}

type query_by_workspace_slug_organizations_by_organization_id_activities_links {
  first: String
  last: String
  prev: Void
  next: Void
}

enum queryInput_by_workspace_slug_organizations_by_organization_id_activities_direction {
  ASC
  DESC
}

enum queryInput_by_workspace_slug_organizations_by_organization_id_activities_items {
  _10
  _50
  _100
}

enum queryInput_by_workspace_slug_organizations_by_organization_id_activities_sort {
  occurred_at
  member
}

enum queryInput_by_workspace_slug_organizations_by_organization_id_activities_activity_type {
  content
  custom
  discord
  discourse
  github
  slack
  twitter
}

type by_workspace_slug_organizations_by_organization_id_members_200_response {
  data: [query_by_workspace_slug_organizations_by_organization_id_members_data_items]
  links: query_by_workspace_slug_organizations_by_organization_id_members_links
}

type query_by_workspace_slug_organizations_by_organization_id_members_data_items {
  id: String
  type: String
  attributes: query_by_workspace_slug_organizations_by_organization_id_members_data_items_attributes
  relationships: JSON
}

type query_by_workspace_slug_organizations_by_organization_id_members_data_items_attributes {
  id: String
  slug: String
  name: String
  last_activity_occurred_at: Void
  activities_score: Int
}

type query_by_workspace_slug_organizations_by_organization_id_members_links {
  first: String
  last: String
  prev: Void
  next: Void
}

enum queryInput_by_workspace_slug_organizations_by_organization_id_members_items {
  _10
  _50
  _100
}

type by_workspace_slug_organizations_200_response {
  data: [query_by_workspace_slug_organizations_data_items]
  links: query_by_workspace_slug_organizations_links
}

type query_by_workspace_slug_organizations_data_items {
  id: String
  type: String
  attributes: query_by_workspace_slug_organizations_data_items_attributes
}

type query_by_workspace_slug_organizations_data_items_attributes {
  id: String
  name: String
  website: String
  members_count: Int
  employees_count: Int
  organization_type: Void
  industry: Void
  estimated_annual_revenue: Void
  founded_in: Void
  location: Void
  twitter: Void
  twitter_followers: Int
  facebook: Void
  facebook_followers: Int
  linkedin: Void
  crunchbase: Void
  email_addresses: Void
  last_active: Void
  active_since: Void
  created_at: DateTime
  updated_at: DateTime
}

type query_by_workspace_slug_organizations_links {
  first: URL
  prev: Void
  next: Void
}

enum queryInput_by_workspace_slug_organizations_direction {
  ASC
  DESC
}

enum queryInput_by_workspace_slug_organizations_items {
  _10
  _50
  _100
}

enum queryInput_by_workspace_slug_organizations_sort {
  name
  website
  members_count
  employees_count
}

type by_workspace_slug_organizations_by_organization_id_200_response {
  data: query_by_workspace_slug_organizations_by_organization_id_data
}

type query_by_workspace_slug_organizations_by_organization_id_data {
  id: String
  type: String
  attributes: query_by_workspace_slug_organizations_by_organization_id_data_attributes
}

type query_by_workspace_slug_organizations_by_organization_id_data_attributes {
  id: String
  name: String
  website: URL
  members_count: Int
  employees_count: Int
  organization_type: Void
  industry: Void
  estimated_annual_revenue: Void
  founded_in: Void
  location: Void
  twitter: Void
  twitter_followers: Int
  facebook: Void
  facebook_followers: Int
  linkedin: Void
  crunchbase: Void
  email_addresses: Void
  last_active: Void
  active_since: Void
  created_at: DateTime
  updated_at: DateTime
}

type by_workspace_slug_reports_200_response {
  data: query_by_workspace_slug_reports_data
}

type query_by_workspace_slug_reports_data {
  id: String
  type: String
  attributes: query_by_workspace_slug_reports_data_attributes
}

type query_by_workspace_slug_reports_data_attributes {
  workspace_id: String
  timeframe: query_by_workspace_slug_reports_data_attributes_timeframe
  overview: query_by_workspace_slug_reports_data_attributes_overview
  members: query_by_workspace_slug_reports_data_attributes_members
  activities: query_by_workspace_slug_reports_data_attributes_activities
}

type query_by_workspace_slug_reports_data_attributes_timeframe {
  start_date: Date
  end_date: Date
  start_date_last: Date
  end_date_last: Date
}

"Represents date values"
scalar Date

type query_by_workspace_slug_reports_data_attributes_overview {
  total_members_count: Int
  members_on_orbit_level_1_count: Int
  members_on_orbit_level_2_count: Int
  members_on_orbit_level_3_count: Int
  members_on_orbit_level_4_count: Int
  members_on_orbit_level_none_count: Int
}

type query_by_workspace_slug_reports_data_attributes_members {
  active_count: Int
  active_delta: Int
  new_count: Int
  new_delta: Int
  returning_count: Int
  returning_delta: Int
}

type query_by_workspace_slug_reports_data_attributes_activities {
  total_count: Int
  total_delta: Int
  spec_COLON_activity: query_by_workspace_slug_reports_data_attributes_activities_spec_COLON_activity
  foo_COLON_activity: query_by_workspace_slug_reports_data_attributes_activities_foo_COLON_activity
}

type query_by_workspace_slug_reports_data_attributes_activities_spec_COLON_activity {
  source: String
  count: Int
  delta: Int
  members: query_by_workspace_slug_reports_data_attributes_activities_spec_COLON_activity_members
}

type query_by_workspace_slug_reports_data_attributes_activities_spec_COLON_activity_members {
  active_count: Int
  active_delta: Int
  new_count: Int
  new_delta: Int
  returning_count: Int
  returning_delta: Int
}

type query_by_workspace_slug_reports_data_attributes_activities_foo_COLON_activity {
  source: String
  count: Int
  delta: Int
  members: query_by_workspace_slug_reports_data_attributes_activities_foo_COLON_activity_members
}

type query_by_workspace_slug_reports_data_attributes_activities_foo_COLON_activity_members {
  active_count: Int
  active_delta: Int
  new_count: Int
  new_delta: Int
  returning_count: Int
  returning_delta: Int
}

type by_workspace_slug_webhooks_200_response {
  data: [query_by_workspace_slug_webhooks_data_items]
  links: query_by_workspace_slug_webhooks_links
}

type query_by_workspace_slug_webhooks_data_items {
  id: String
  type: String
  attributes: query_by_workspace_slug_webhooks_data_items_attributes
}

type query_by_workspace_slug_webhooks_data_items_attributes {
  name: String
  enabled: Boolean
  updated_at: DateTime
  created_at: DateTime
  event_type: Void
  url: URL
}

type query_by_workspace_slug_webhooks_links {
  first: String
  last: String
  prev: Void
  next: Void
}

type by_workspace_slug_webhooks_by_id_200_response {
  data: query_by_workspace_slug_webhooks_by_id_data
}

type query_by_workspace_slug_webhooks_by_id_data {
  id: String
  type: String
  attributes: query_by_workspace_slug_webhooks_by_id_data_attributes
}

type query_by_workspace_slug_webhooks_by_id_data_attributes {
  name: String
  enabled: Boolean
  updated_at: DateTime
  created_at: DateTime
  event_type: Void
  url: URL
}

type workspaces_200_response {
  data: [query_workspaces_data_items]
  included: [JSON]
}

type query_workspaces_data_items {
  id: String
  type: String
  attributes: query_workspaces_data_items_attributes
  relationships: query_workspaces_data_items_relationships
}

type query_workspaces_data_items_attributes {
  name: String
  slug: String
  updated_at: DateTime
  created_at: DateTime
}

type query_workspaces_data_items_relationships {
  repositories: query_workspaces_data_items_relationships_repositories
}

type query_workspaces_data_items_relationships_repositories {
  data: [JSON]
}

type workspaces_by_workspace_slug_200_response {
  data: query_workspaces_by_workspace_slug_data
  included: [query_workspaces_by_workspace_slug_included_items]
}

type query_workspaces_by_workspace_slug_data {
  id: String
  type: String
  attributes: query_workspaces_by_workspace_slug_data_attributes
  relationships: query_workspaces_by_workspace_slug_data_relationships
}

type query_workspaces_by_workspace_slug_data_attributes {
  name: String
  slug: String
  updated_at: DateTime
  created_at: DateTime
  members_count: Int
  activities_count: Int
  tags: JSON
}

type query_workspaces_by_workspace_slug_data_relationships {
  last_member: query_workspaces_by_workspace_slug_data_relationships_last_member
  last_activity: query_workspaces_by_workspace_slug_data_relationships_last_activity
  repositories: query_workspaces_by_workspace_slug_data_relationships_repositories
}

type query_workspaces_by_workspace_slug_data_relationships_last_member {
  data: query_workspaces_by_workspace_slug_data_relationships_last_member_data
}

type query_workspaces_by_workspace_slug_data_relationships_last_member_data {
  id: String
  type: String
}

type query_workspaces_by_workspace_slug_data_relationships_last_activity {
  data: query_workspaces_by_workspace_slug_data_relationships_last_activity_data
}

type query_workspaces_by_workspace_slug_data_relationships_last_activity_data {
  id: String
  type: String
}

type query_workspaces_by_workspace_slug_data_relationships_repositories {
  data: [JSON]
}

type query_workspaces_by_workspace_slug_included_items {
  id: String
  type: String
  attributes: query_workspaces_by_workspace_slug_included_items_attributes
  relationships: query_workspaces_by_workspace_slug_included_items_relationships
}

type query_workspaces_by_workspace_slug_included_items_attributes {
  activities_count: Int
  activities_score: Int
  avatar_url: URL
  bio: Void
  birthday: Void
  company: Void
  title: Void
  created_at: DateTime
  deleted_at: Void
  first_activity_occurred_at: Void
  last_activity_occurred_at: Void
  location: Void
  name: String
  pronouns: Void
  reach: Int
  shipping_address: Void
  slug: String
  source: String
  tag_list: [JSON]
  tags: [JSON]
  teammate: Boolean
  tshirt: Void
  updated_at: DateTime
  merged_at: Void
  url: Void
  orbit_url: URL
  created: Boolean
  id: String
  orbit_level: Void
  love: Void
  twitter: Void
  github: Void
  discourse: Void
  email: Void
  devto: Void
  linkedin: Void
  discord: Void
  github_followers: Void
  twitter_followers: Void
  topics: Void
  languages: Void
}

type query_workspaces_by_workspace_slug_included_items_relationships {
  identities: query_workspaces_by_workspace_slug_included_items_relationships_identities
}

type query_workspaces_by_workspace_slug_included_items_relationships_identities {
  data: [JSON]
}

type Mutation {
  "Use this method when you know an identity of the member (github, email, twitter, etc.) but not their Orbit ID. Pass fields in the member object to update the member in addition to creating the activity."
  post_by_workspace_slug_activities(workspace_slug: String!, input: activity_and_identity_Input): post_by_workspace_slug_activities_response
  "Create a Custom or a Content activity for a member"
  post_by_workspace_slug_members_by_member_slug_activities(workspace_slug: String!, member_slug: String!, input: custom_or_post_activity_Input): post_by_workspace_slug_members_by_member_slug_activities_response
  "Delete a post activity"
  delete_by_workspace_slug_members_by_member_slug_activities_by_id(workspace_slug: String!, member_slug: String!, id: String!): Void
  "Update a custom activity for a member"
  put_by_workspace_slug_members_by_member_slug_activities_by_id(workspace_slug: String!, member_slug: String!, id: String!, input: activity_Input): put_by_workspace_slug_members_by_member_slug_activities_by_id_response
  "Add identity to a member"
  post_by_workspace_slug_members_by_member_slug_identities(workspace_slug: String!, member_slug: String!, input: identity_Input): post_by_workspace_slug_members_by_member_slug_identities_response
  "Remove identity from a member"
  delete_by_workspace_slug_members_by_member_slug_identities(workspace_slug: String!, member_slug: String!, input: identity_Input): delete_by_workspace_slug_members_by_member_slug_identities_response
  "Create a note"
  post_by_workspace_slug_members_by_member_slug_notes(workspace_slug: String!, member_slug: String!, input: note_Input): post_by_workspace_slug_members_by_member_slug_notes_201_response
  "Update a note"
  put_by_workspace_slug_members_by_member_slug_notes_by_id(workspace_slug: String!, member_slug: String!, id: String!, input: note_Input): Void
  "This method is useful when you know a member's identity in another system and want to create or update the corresponding Orbit member. Identities can be specified in the identity object or member attributes like member.github. If no member exists, a new member will be created and linked to any provided identities."
  post_by_workspace_slug_members(workspace_slug: String!, input: member_and_identity_Input): post_by_workspace_slug_members_response
  "Update a member"
  put_by_workspace_slug_members_by_member_slug(workspace_slug: String!, member_slug: String!, input: member_Input): Void
  "Delete a member"
  delete_by_workspace_slug_members_by_member_slug(workspace_slug: String!, member_slug: String!): Void
  "Create a destination"
  post_by_workspace_slug_webhooks(workspace_slug: String!, input: destination_Input): post_by_workspace_slug_webhooks_201_response
  "Update a destination"
  put_by_workspace_slug_webhooks_by_id(workspace_slug: String!, id: String!, input: destination_Input): Void
  "Delete a destination"
  delete_by_workspace_slug_webhooks_by_id(workspace_slug: String!, id: String!): Void
}

union post_by_workspace_slug_activities_response = post_by_workspace_slug_activities_201_response | post_by_workspace_slug_activities_422_response

type post_by_workspace_slug_activities_201_response {
  data: mutation_post_by_workspace_slug_activities_oneOf_0_data
  included: [mutation_post_by_workspace_slug_activities_oneOf_0_included_items]
}

type mutation_post_by_workspace_slug_activities_oneOf_0_data {
  id: String
  type: String
  attributes: mutation_post_by_workspace_slug_activities_oneOf_0_data_attributes
  relationships: mutation_post_by_workspace_slug_activities_oneOf_0_data_relationships
}

type mutation_post_by_workspace_slug_activities_oneOf_0_data_attributes {
  action: String
  created_at: DateTime
  key: String
  occurred_at: DateTime
  updated_at: DateTime
  type: String
  properties: JSON
  tags: [String]
  orbit_url: URL
  weight: String
  custom_description: String
  custom_link: URL
  custom_link_text: String
  custom_title: String
  custom_type: String
  custom_context: Void
}

type mutation_post_by_workspace_slug_activities_oneOf_0_data_relationships {
  activity_type: mutation_post_by_workspace_slug_activities_oneOf_0_data_relationships_activity_type
  member: mutation_post_by_workspace_slug_activities_oneOf_0_data_relationships_member
  user: mutation_post_by_workspace_slug_activities_oneOf_0_data_relationships_user
}

type mutation_post_by_workspace_slug_activities_oneOf_0_data_relationships_activity_type {
  data: mutation_post_by_workspace_slug_activities_oneOf_0_data_relationships_activity_type_data
}

type mutation_post_by_workspace_slug_activities_oneOf_0_data_relationships_activity_type_data {
  id: String
  type: String
}

type mutation_post_by_workspace_slug_activities_oneOf_0_data_relationships_member {
  data: mutation_post_by_workspace_slug_activities_oneOf_0_data_relationships_member_data
}

type mutation_post_by_workspace_slug_activities_oneOf_0_data_relationships_member_data {
  id: String
  type: String
}

type mutation_post_by_workspace_slug_activities_oneOf_0_data_relationships_user {
  data: mutation_post_by_workspace_slug_activities_oneOf_0_data_relationships_user_data
}

type mutation_post_by_workspace_slug_activities_oneOf_0_data_relationships_user_data {
  id: String
  type: String
}

type mutation_post_by_workspace_slug_activities_oneOf_0_included_items {
  id: String
  type: String
  attributes: mutation_post_by_workspace_slug_activities_oneOf_0_included_items_attributes
}

type mutation_post_by_workspace_slug_activities_oneOf_0_included_items_attributes {
  name: String
  short_name: String
  key: URL
  channel: String
  source: String
  weight: String
}

type post_by_workspace_slug_activities_422_response {
  errors: mutation_post_by_workspace_slug_activities_oneOf_1_errors
}

type mutation_post_by_workspace_slug_activities_oneOf_1_errors {
  base: [String]
}

input activity_and_identity_Input {
  activity: mutationInput_post_by_workspace_slug_activities_input_activity_Input
  identity: identity_Input
}

input mutationInput_post_by_workspace_slug_activities_input_activity_Input @oneOf {
  activity_with_member_Input: activity_with_member_Input
  post_activity_with_member_Input: post_activity_with_member_Input
}

input activity_with_member_Input {
  "A description of the activity; displayed in the timeline"
  description: String
  "A URL for the activity; displayed in the timeline"
  link: String
  "The text for the timeline link"
  link_text: String
  "A title for the activity; displayed in the timeline"
  title: String!
  "A custom weight to be used in filters and reports; defaults to 1."
  weight: String
  "The type of activity - what action was done by the member. This is a legacy field, use activity_type_key instead."
  activity_type: String
  "The key for a custom activity type for the workspace. Will create a new activity type if it does not exist."
  activity_type_key: String
  "Supply a key that must be unique or leave blank to have one generated."
  key: String
  "The date and time the activity occurred; defaults to now"
  occurred_at: String
  properties: JSON
  member: member_Input
}

input member_Input {
  bio: String
  birthday: String
  company: String
  title: String
  location: String
  name: String
  pronouns: String
  shipping_address: String
  slug: String
  "Adds tags to member; comma-separated string or array"
  tags_to_add: String
  "Replaces all tags for the member; comma-separated string or array"
  tags: String
  "Deprecated: Please use the tags attribute instead"
  tag_list: String
  tshirt: String
  teammate: Boolean
  url: String
  "The member's GitHub username"
  github: String
  "The member's Twitter username"
  twitter: String
  "The member's email"
  email: String
  "The member's LinkedIn username, without the in/ or pub/"
  linkedin: String
  "The member's DEV username"
  devto: String
}

input post_activity_with_member_Input {
  "The url representing the post"
  url: String!
  "The date and time at which the content was published; defaults to now"
  occurred_at: String
  activity_type: mutationInput_post_by_workspace_slug_activities_input_activity_oneOf_1_allOf_0_activity_type!
  member: member_Input
}

enum mutationInput_post_by_workspace_slug_activities_input_activity_oneOf_1_allOf_0_activity_type {
  content
}

"Represents an email address, a profile on networks like github and twitter, or a record in another system."
input identity_Input {
  "The name of the person in the source system"
  name: String
  "The type of source: known values include github, twitter, discourse, email, linkedin, devto. Custom values can also be used"
  source: String!
  "Specifies the location of the source, such as the host of a Discourse instance"
  source_host: String
  "The username of the person in the source system"
  username: String
  "The uid of the person in the source system"
  uid: String
  "The email of the person in the source system"
  email: String
  "For custom identities, an optional link to the profile on the source system"
  url: String
}

union post_by_workspace_slug_members_by_member_slug_activities_response = post_by_workspace_slug_members_by_member_slug_activities_201_response | post_by_workspace_slug_members_by_member_slug_activities_422_response

type post_by_workspace_slug_members_by_member_slug_activities_201_response {
  data: mutation_post_by_workspace_slug_members_by_member_slug_activities_oneOf_0_data
  included: [mutation_post_by_workspace_slug_members_by_member_slug_activities_oneOf_0_included_items]
}

type mutation_post_by_workspace_slug_members_by_member_slug_activities_oneOf_0_data {
  id: String
  type: String
  attributes: mutation_post_by_workspace_slug_members_by_member_slug_activities_oneOf_0_data_attributes
  relationships: mutation_post_by_workspace_slug_members_by_member_slug_activities_oneOf_0_data_relationships
}

type mutation_post_by_workspace_slug_members_by_member_slug_activities_oneOf_0_data_attributes {
  action: String
  created_at: DateTime
  key: String
  occurred_at: DateTime
  updated_at: DateTime
  type: String
  properties: JSON
  tags: [String]
  orbit_url: URL
  weight: String
  custom_description: String
  custom_link: URL
  custom_link_text: String
  custom_title: String
  custom_type: String
  custom_context: Void
}

type mutation_post_by_workspace_slug_members_by_member_slug_activities_oneOf_0_data_relationships {
  activity_type: mutation_post_by_workspace_slug_members_by_member_slug_activities_oneOf_0_data_relationships_activity_type
  member: mutation_post_by_workspace_slug_members_by_member_slug_activities_oneOf_0_data_relationships_member
  user: mutation_post_by_workspace_slug_members_by_member_slug_activities_oneOf_0_data_relationships_user
}

type mutation_post_by_workspace_slug_members_by_member_slug_activities_oneOf_0_data_relationships_activity_type {
  data: mutation_post_by_workspace_slug_members_by_member_slug_activities_oneOf_0_data_relationships_activity_type_data
}

type mutation_post_by_workspace_slug_members_by_member_slug_activities_oneOf_0_data_relationships_activity_type_data {
  id: String
  type: String
}

type mutation_post_by_workspace_slug_members_by_member_slug_activities_oneOf_0_data_relationships_member {
  data: mutation_post_by_workspace_slug_members_by_member_slug_activities_oneOf_0_data_relationships_member_data
}

type mutation_post_by_workspace_slug_members_by_member_slug_activities_oneOf_0_data_relationships_member_data {
  id: String
  type: String
}

type mutation_post_by_workspace_slug_members_by_member_slug_activities_oneOf_0_data_relationships_user {
  data: mutation_post_by_workspace_slug_members_by_member_slug_activities_oneOf_0_data_relationships_user_data
}

type mutation_post_by_workspace_slug_members_by_member_slug_activities_oneOf_0_data_relationships_user_data {
  id: String
  type: String
}

type mutation_post_by_workspace_slug_members_by_member_slug_activities_oneOf_0_included_items {
  id: String
  type: String
  attributes: mutation_post_by_workspace_slug_members_by_member_slug_activities_oneOf_0_included_items_attributes
}

type mutation_post_by_workspace_slug_members_by_member_slug_activities_oneOf_0_included_items_attributes {
  name: String
  short_name: String
  key: URL
  channel: String
  source: String
  weight: String
}

type post_by_workspace_slug_members_by_member_slug_activities_422_response {
  errors: mutation_post_by_workspace_slug_members_by_member_slug_activities_oneOf_1_errors
}

type mutation_post_by_workspace_slug_members_by_member_slug_activities_oneOf_1_errors {
  custom_title: [String]
}

input custom_or_post_activity_Input @oneOf {
  activity_Input: activity_Input
  post_activity_Input: post_activity_Input
}

input activity_Input {
  "A description of the activity; displayed in the timeline"
  description: String
  "A URL for the activity; displayed in the timeline"
  link: String
  "The text for the timeline link"
  link_text: String
  "A title for the activity; displayed in the timeline"
  title: String!
  "A custom weight to be used in filters and reports; defaults to 1."
  weight: String
  "The type of activity - what action was done by the member. This is a legacy field, use activity_type_key instead."
  activity_type: String
  "The key for a custom activity type for the workspace. Will create a new activity type if it does not exist."
  activity_type_key: String
  "Supply a key that must be unique or leave blank to have one generated."
  key: String
  "The date and time the activity occurred; defaults to now"
  occurred_at: String
  properties: JSON
}

input post_activity_Input {
  "The url representing the post"
  url: String!
  "The date and time at which the content was published; defaults to now"
  occurred_at: String
  activity_type: mutationInput_post_by_workspace_slug_activities_input_activity_oneOf_1_allOf_0_activity_type!
}

union put_by_workspace_slug_members_by_member_slug_activities_by_id_response = Void_container | put_by_workspace_slug_members_by_member_slug_activities_by_id_422_response

type Void_container {
  Void: Void
}

type put_by_workspace_slug_members_by_member_slug_activities_by_id_422_response {
  errors: mutation_put_by_workspace_slug_members_by_member_slug_activities_by_id_oneOf_1_errors
}

type mutation_put_by_workspace_slug_members_by_member_slug_activities_by_id_oneOf_1_errors {
  custom_title: [String]
}

union post_by_workspace_slug_members_by_member_slug_identities_response = post_by_workspace_slug_members_by_member_slug_identities_201_response | post_by_workspace_slug_members_by_member_slug_identities_422_response

type post_by_workspace_slug_members_by_member_slug_identities_201_response {
  data: mutation_post_by_workspace_slug_members_by_member_slug_identities_oneOf_0_data
}

type mutation_post_by_workspace_slug_members_by_member_slug_identities_oneOf_0_data {
  id: String
  type: String
  attributes: mutation_post_by_workspace_slug_members_by_member_slug_identities_oneOf_0_data_attributes
}

type mutation_post_by_workspace_slug_members_by_member_slug_identities_oneOf_0_data_attributes {
  uid: String
  email: EmailAddress
  username: String
  name: String
  source: String
  source_host: String
}

type post_by_workspace_slug_members_by_member_slug_identities_422_response {
  errors: mutation_post_by_workspace_slug_members_by_member_slug_identities_oneOf_1_errors
}

type mutation_post_by_workspace_slug_members_by_member_slug_identities_oneOf_1_errors {
  identity_id: [String]
}

union delete_by_workspace_slug_members_by_member_slug_identities_response = Void_container | delete_by_workspace_slug_members_by_member_slug_identities_422_response

type delete_by_workspace_slug_members_by_member_slug_identities_422_response {
  errors: mutation_delete_by_workspace_slug_members_by_member_slug_identities_oneOf_1_errors
}

type mutation_delete_by_workspace_slug_members_by_member_slug_identities_oneOf_1_errors {
  identity: [String]
}

type post_by_workspace_slug_members_by_member_slug_notes_201_response {
  data: mutation_post_by_workspace_slug_members_by_member_slug_notes_data
}

type mutation_post_by_workspace_slug_members_by_member_slug_notes_data {
  id: String
  type: String
  attributes: mutation_post_by_workspace_slug_members_by_member_slug_notes_data_attributes
  relationships: mutation_post_by_workspace_slug_members_by_member_slug_notes_data_relationships
}

type mutation_post_by_workspace_slug_members_by_member_slug_notes_data_attributes {
  id: String
  created_at: DateTime
  body: String
  updated_at: DateTime
}

type mutation_post_by_workspace_slug_members_by_member_slug_notes_data_relationships {
  member: mutation_post_by_workspace_slug_members_by_member_slug_notes_data_relationships_member
  user: mutation_post_by_workspace_slug_members_by_member_slug_notes_data_relationships_user
}

type mutation_post_by_workspace_slug_members_by_member_slug_notes_data_relationships_member {
  data: mutation_post_by_workspace_slug_members_by_member_slug_notes_data_relationships_member_data
}

type mutation_post_by_workspace_slug_members_by_member_slug_notes_data_relationships_member_data {
  id: String
  type: String
}

type mutation_post_by_workspace_slug_members_by_member_slug_notes_data_relationships_user {
  data: mutation_post_by_workspace_slug_members_by_member_slug_notes_data_relationships_user_data
}

type mutation_post_by_workspace_slug_members_by_member_slug_notes_data_relationships_user_data {
  id: String
  type: String
}

input note_Input {
  body: String!
}

union post_by_workspace_slug_members_response = post_by_workspace_slug_members_200_response | post_by_workspace_slug_members_201_response | post_by_workspace_slug_members_422_response

type post_by_workspace_slug_members_200_response {
  data: mutation_post_by_workspace_slug_members_oneOf_0_data
  included: [mutation_post_by_workspace_slug_members_oneOf_0_included_items]
}

type mutation_post_by_workspace_slug_members_oneOf_0_data {
  id: String
  type: String
  attributes: mutation_post_by_workspace_slug_members_oneOf_0_data_attributes
  relationships: mutation_post_by_workspace_slug_members_oneOf_0_data_relationships
}

type mutation_post_by_workspace_slug_members_oneOf_0_data_attributes {
  activities_count: Int
  activities_score: Int
  avatar_url: URL
  bio: Void
  birthday: Void
  company: Void
  title: Void
  created_at: DateTime
  deleted_at: Void
  first_activity_occurred_at: Void
  last_activity_occurred_at: Void
  location: Void
  name: String
  pronouns: Void
  reach: Int
  shipping_address: Void
  slug: String
  source: String
  tag_list: [String]
  tags: [String]
  teammate: Boolean
  tshirt: Void
  updated_at: DateTime
  merged_at: Void
  url: Void
  orbit_url: URL
  created: Boolean
  id: String
  orbit_level: Void
  love: Void
  twitter: String
  github: String
  discourse: Void
  email: EmailAddress
  devto: Void
  linkedin: Void
  discord: Void
  github_followers: Void
  twitter_followers: Void
  topics: Void
  languages: Void
}

type mutation_post_by_workspace_slug_members_oneOf_0_data_relationships {
  identities: mutation_post_by_workspace_slug_members_oneOf_0_data_relationships_identities
}

type mutation_post_by_workspace_slug_members_oneOf_0_data_relationships_identities {
  data: [mutation_post_by_workspace_slug_members_oneOf_0_data_relationships_identities_data_items]
}

type mutation_post_by_workspace_slug_members_oneOf_0_data_relationships_identities_data_items {
  id: String
  type: String
}

type mutation_post_by_workspace_slug_members_oneOf_0_included_items {
  id: String
  type: String
  attributes: mutation_post_by_workspace_slug_members_oneOf_0_included_items_attributes
}

type mutation_post_by_workspace_slug_members_oneOf_0_included_items_attributes {
  uid: String
  email: Void
  username: String
  name: Void
  source: String
  source_host: String
}

type post_by_workspace_slug_members_201_response {
  data: mutation_post_by_workspace_slug_members_oneOf_1_data
  included: [mutation_post_by_workspace_slug_members_oneOf_1_included_items]
}

type mutation_post_by_workspace_slug_members_oneOf_1_data {
  id: String
  type: String
  attributes: mutation_post_by_workspace_slug_members_oneOf_1_data_attributes
  relationships: mutation_post_by_workspace_slug_members_oneOf_1_data_relationships
}

type mutation_post_by_workspace_slug_members_oneOf_1_data_attributes {
  activities_count: Int
  activities_score: Int
  avatar_url: URL
  bio: String
  birthday: Void
  company: String
  title: Void
  created_at: DateTime
  deleted_at: Void
  first_activity_occurred_at: Void
  last_activity_occurred_at: Void
  location: String
  name: String
  pronouns: Void
  reach: Int
  shipping_address: Void
  slug: String
  source: String
  tag_list: [String]
  tags: [String]
  teammate: Boolean
  tshirt: Void
  updated_at: DateTime
  merged_at: Void
  url: URL
  orbit_url: URL
  created: Boolean
  id: String
  orbit_level: Void
  love: Void
  twitter: String
  github: String
  discourse: Void
  email: EmailAddress
  devto: Void
  linkedin: Void
  discord: Void
  github_followers: Int
  twitter_followers: Void
  topics: Void
  languages: Void
}

type mutation_post_by_workspace_slug_members_oneOf_1_data_relationships {
  identities: mutation_post_by_workspace_slug_members_oneOf_1_data_relationships_identities
}

type mutation_post_by_workspace_slug_members_oneOf_1_data_relationships_identities {
  data: [mutation_post_by_workspace_slug_members_oneOf_1_data_relationships_identities_data_items]
}

type mutation_post_by_workspace_slug_members_oneOf_1_data_relationships_identities_data_items {
  id: String
  type: String
}

type mutation_post_by_workspace_slug_members_oneOf_1_included_items {
  id: String
  type: String
  attributes: mutation_post_by_workspace_slug_members_oneOf_1_included_items_attributes
}

type mutation_post_by_workspace_slug_members_oneOf_1_included_items_attributes {
  uid: String
  email: Void
  username: String
  name: String
  source: String
  source_host: String
}

type post_by_workspace_slug_members_422_response {
  errors: mutation_post_by_workspace_slug_members_oneOf_2_errors
}

type mutation_post_by_workspace_slug_members_oneOf_2_errors {
  email: [String]
  name: [String]
}

input member_and_identity_Input {
  member: member_Input
  identity: identity_Input
}

type post_by_workspace_slug_webhooks_201_response {
  data: mutation_post_by_workspace_slug_webhooks_data
}

type mutation_post_by_workspace_slug_webhooks_data {
  id: String
  type: String
  attributes: mutation_post_by_workspace_slug_webhooks_data_attributes
}

type mutation_post_by_workspace_slug_webhooks_data_attributes {
  name: String
  enabled: Boolean
  updated_at: DateTime
  created_at: DateTime
  event_type: URL
  url: URL
  secret: Void
  activity_types: [String]
  activity_tags: [String]
  member_tags: [String]
  activity_keywords: [String]
  include_teammates: Boolean
}

input destination_Input {
  name: String!
  url: String!
  alerts: [alert_Input]
}

input alert_Input {
  name: String!
  event_type: String
  activity_types: [String]
  activity_tags: [String]
  member_tags: [String]
}"
`;
