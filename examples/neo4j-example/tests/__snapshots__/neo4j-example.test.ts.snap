// Jest Snapshot v1, https://jestjs.io/docs/snapshot-testing

exports[`Neo4j should generate correct schema 1`] = `
"schema @transport(kind: "neo4j", subgraph: "Neo4j", location: "neo4j+s://demo.neo4jlabs.com", options: {database: "recommendations", auth: {type: "basic", username: "recommendations", password: "recommendations"}}) {
  query: Query
  mutation: Mutation
}

directive @introspection(subgraph: String) on ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION

directive @node on OBJECT

directive @relationship(direction: _RelationDirections, properties: String, type: String) on FIELD_DEFINITION

directive @relationshipProperties on OBJECT

directive @transport(kind: String, location: String, options: TransportOptions, subgraph: String) on SCHEMA

"""
The edge properties for the following fields:
* Actor.actedInMovies
* Actor2.actedInMovies
* Movie.actor2SActedIn
* Movie.actorsActedIn
"""
type ActedInProperties @relationshipProperties @introspection {
  role: String @introspection
}

input ActedInPropertiesAggregationWhereInput {
  AND: [ActedInPropertiesAggregationWhereInput!]
  NOT: ActedInPropertiesAggregationWhereInput
  OR: [ActedInPropertiesAggregationWhereInput!]
  role: StringScalarAggregationFilters
  role_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'role: { averageLength: { eq: ... } } }' instead.")
  role_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'role: { averageLength: { gt: ... } } }' instead.")
  role_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'role: { averageLength: { gte: ... } } }' instead.")
  role_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'role: { averageLength: { lt: ... } } }' instead.")
  role_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'role: { averageLength: { lte: ... } } }' instead.")
  role_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'role: { longestLength: { eq: ... } } }' instead.")
  role_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'role: { longestLength: { gt: ... } } }' instead.")
  role_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'role: { longestLength: { gte: ... } } }' instead.")
  role_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'role: { longestLength: { lt: ... } } }' instead.")
  role_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'role: { longestLength: { lte: ... } } }' instead.")
  role_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'role: { shortestLength: { eq: ... } } }' instead.")
  role_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'role: { shortestLength: { gt: ... } } }' instead.")
  role_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'role: { shortestLength: { gte: ... } } }' instead.")
  role_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'role: { shortestLength: { lt: ... } } }' instead.")
  role_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'role: { shortestLength: { lte: ... } } }' instead.")
}

input ActedInPropertiesCreateInput {
  role: String
}

input ActedInPropertiesSort {
  role: SortDirection
}

input ActedInPropertiesUpdateInput {
  role: StringScalarMutations
  role_SET: String
}

input ActedInPropertiesWhere {
  AND: [ActedInPropertiesWhere!]
  NOT: ActedInPropertiesWhere
  OR: [ActedInPropertiesWhere!]
  role: StringScalarFilters
  role_CONTAINS: String @deprecated(reason: "Please use the relevant generic filter role: { contains: ... }")
  role_ENDS_WITH: String @deprecated(reason: "Please use the relevant generic filter role: { endsWith: ... }")
  role_EQ: String @deprecated(reason: "Please use the relevant generic filter role: { eq: ... }")
  role_IN: [String] @deprecated(reason: "Please use the relevant generic filter role: { in: ... }")
  role_STARTS_WITH: String @deprecated(reason: "Please use the relevant generic filter role: { startsWith: ... }")
}

type Actor @introspection @node(labels: ["Actor", "Person"]) {
  actedInMovies(limit: Int, offset: Int, sort: [MovieSort!], where: MovieWhere): [Movie!]! @introspection @relationship(type: "ACTED_IN", direction: OUT, properties: "ActedInProperties")
  actedInMoviesConnection(after: String, first: Int, sort: [ActorActedInMoviesConnectionSort!], where: ActorActedInMoviesConnectionWhere): ActorActedInMoviesConnection!
  bio: String @introspection
  born: Date @introspection
  bornIn: String @introspection
  died: Date @introspection
  imdbId: String @introspection
  name: String! @introspection
  poster: String @introspection
  tmdbId: String! @introspection
  url: String! @introspection
}

type Actor2 @introspection @node(labels: ["Actor", "Director", "Person"]) {
  actedInMovies(limit: Int, offset: Int, sort: [MovieSort!], where: MovieWhere): [Movie!]! @introspection @relationship(type: "ACTED_IN", direction: OUT, properties: "ActedInProperties")
  actedInMoviesConnection(after: String, first: Int, sort: [Actor2ActedInMoviesConnectionSort!], where: Actor2ActedInMoviesConnectionWhere): Actor2ActedInMoviesConnection!
  bio: String @introspection
  born: Date @introspection
  bornIn: String @introspection
  died: Date @introspection
  directedMovies(limit: Int, offset: Int, sort: [MovieSort!], where: MovieWhere): [Movie!]! @introspection @relationship(type: "DIRECTED", direction: OUT, properties: "DirectedProperties")
  directedMoviesConnection(after: String, first: Int, sort: [Actor2DirectedMoviesConnectionSort!], where: Actor2DirectedMoviesConnectionWhere): Actor2DirectedMoviesConnection!
  imdbId: String @introspection
  name: String! @introspection
  poster: String @introspection
  tmdbId: String! @introspection
  url: String! @introspection
}

input Actor2ActedInMoviesAggregateInput {
  AND: [Actor2ActedInMoviesAggregateInput!]
  NOT: Actor2ActedInMoviesAggregateInput
  OR: [Actor2ActedInMoviesAggregateInput!]
  count: IntScalarFilters
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  edge: ActedInPropertiesAggregationWhereInput
  node: Actor2ActedInMoviesNodeAggregationWhereInput
}

input Actor2ActedInMoviesConnectFieldInput {
  connect: [MovieConnectInput!]
  edge: ActedInPropertiesCreateInput
  where: MovieConnectWhere
}

type Actor2ActedInMoviesConnection {
  aggregate: Actor2MovieActedInMoviesAggregateSelection!
  edges: [Actor2ActedInMoviesRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input Actor2ActedInMoviesConnectionAggregateInput {
  AND: [Actor2ActedInMoviesConnectionAggregateInput!]
  NOT: Actor2ActedInMoviesConnectionAggregateInput
  OR: [Actor2ActedInMoviesConnectionAggregateInput!]
  count: ConnectionAggregationCountFilterInput
  edge: ActedInPropertiesAggregationWhereInput
  node: Actor2ActedInMoviesNodeAggregationWhereInput
}

input Actor2ActedInMoviesConnectionFilters {
  """
  Filter Actor2s by aggregating results on related Actor2ActedInMoviesConnections
  """
  aggregate: Actor2ActedInMoviesConnectionAggregateInput
  """
  Return Actor2s where all of the related Actor2ActedInMoviesConnections match this filter
  """
  all: Actor2ActedInMoviesConnectionWhere
  """
  Return Actor2s where none of the related Actor2ActedInMoviesConnections match this filter
  """
  none: Actor2ActedInMoviesConnectionWhere
  """
  Return Actor2s where one of the related Actor2ActedInMoviesConnections match this filter
  """
  single: Actor2ActedInMoviesConnectionWhere
  """
  Return Actor2s where some of the related Actor2ActedInMoviesConnections match this filter
  """
  some: Actor2ActedInMoviesConnectionWhere
}

input Actor2ActedInMoviesConnectionSort {
  edge: ActedInPropertiesSort
  node: MovieSort
}

input Actor2ActedInMoviesConnectionWhere {
  AND: [Actor2ActedInMoviesConnectionWhere!]
  NOT: Actor2ActedInMoviesConnectionWhere
  OR: [Actor2ActedInMoviesConnectionWhere!]
  edge: ActedInPropertiesWhere
  node: MovieWhere
}

input Actor2ActedInMoviesCreateFieldInput {
  edge: ActedInPropertiesCreateInput
  node: MovieCreateInput!
}

input Actor2ActedInMoviesDeleteFieldInput {
  delete: MovieDeleteInput
  where: Actor2ActedInMoviesConnectionWhere
}

input Actor2ActedInMoviesDisconnectFieldInput {
  disconnect: MovieDisconnectInput
  where: Actor2ActedInMoviesConnectionWhere
}

input Actor2ActedInMoviesFieldInput {
  connect: [Actor2ActedInMoviesConnectFieldInput!]
  create: [Actor2ActedInMoviesCreateFieldInput!]
}

input Actor2ActedInMoviesNodeAggregationWhereInput {
  AND: [Actor2ActedInMoviesNodeAggregationWhereInput!]
  NOT: Actor2ActedInMoviesNodeAggregationWhereInput
  OR: [Actor2ActedInMoviesNodeAggregationWhereInput!]
  budget: BigIntScalarAggregationFilters
  budget_AVERAGE_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { average: { eq: ... } } }' instead.")
  budget_AVERAGE_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { average: { gt: ... } } }' instead.")
  budget_AVERAGE_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { average: { gte: ... } } }' instead.")
  budget_AVERAGE_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { average: { lt: ... } } }' instead.")
  budget_AVERAGE_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { average: { lte: ... } } }' instead.")
  budget_MAX_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { max: { eq: ... } } }' instead.")
  budget_MAX_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { max: { gt: ... } } }' instead.")
  budget_MAX_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { max: { gte: ... } } }' instead.")
  budget_MAX_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { max: { lt: ... } } }' instead.")
  budget_MAX_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { max: { lte: ... } } }' instead.")
  budget_MIN_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { min: { eq: ... } } }' instead.")
  budget_MIN_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { min: { gt: ... } } }' instead.")
  budget_MIN_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { min: { gte: ... } } }' instead.")
  budget_MIN_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { min: { lt: ... } } }' instead.")
  budget_MIN_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { min: { lte: ... } } }' instead.")
  budget_SUM_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { sum: { eq: ... } } }' instead.")
  budget_SUM_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { sum: { gt: ... } } }' instead.")
  budget_SUM_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { sum: { gte: ... } } }' instead.")
  budget_SUM_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { sum: { lt: ... } } }' instead.")
  budget_SUM_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { sum: { lte: ... } } }' instead.")
  imdbId: StringScalarAggregationFilters
  imdbId_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'imdbId: { averageLength: { eq: ... } } }' instead.")
  imdbId_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbId: { averageLength: { gt: ... } } }' instead.")
  imdbId_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbId: { averageLength: { gte: ... } } }' instead.")
  imdbId_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbId: { averageLength: { lt: ... } } }' instead.")
  imdbId_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbId: { averageLength: { lte: ... } } }' instead.")
  imdbId_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { longestLength: { eq: ... } } }' instead.")
  imdbId_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { longestLength: { gt: ... } } }' instead.")
  imdbId_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { longestLength: { gte: ... } } }' instead.")
  imdbId_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { longestLength: { lt: ... } } }' instead.")
  imdbId_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { longestLength: { lte: ... } } }' instead.")
  imdbId_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { shortestLength: { eq: ... } } }' instead.")
  imdbId_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { shortestLength: { gt: ... } } }' instead.")
  imdbId_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { shortestLength: { gte: ... } } }' instead.")
  imdbId_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { shortestLength: { lt: ... } } }' instead.")
  imdbId_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { shortestLength: { lte: ... } } }' instead.")
  imdbRating: FloatScalarAggregationFilters
  imdbRating_AVERAGE_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { average: { eq: ... } } }' instead.")
  imdbRating_AVERAGE_GT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { average: { gt: ... } } }' instead.")
  imdbRating_AVERAGE_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { average: { gte: ... } } }' instead.")
  imdbRating_AVERAGE_LT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { average: { lt: ... } } }' instead.")
  imdbRating_AVERAGE_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { average: { lte: ... } } }' instead.")
  imdbRating_MAX_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { max: { eq: ... } } }' instead.")
  imdbRating_MAX_GT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { max: { gt: ... } } }' instead.")
  imdbRating_MAX_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { max: { gte: ... } } }' instead.")
  imdbRating_MAX_LT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { max: { lt: ... } } }' instead.")
  imdbRating_MAX_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { max: { lte: ... } } }' instead.")
  imdbRating_MIN_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { min: { eq: ... } } }' instead.")
  imdbRating_MIN_GT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { min: { gt: ... } } }' instead.")
  imdbRating_MIN_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { min: { gte: ... } } }' instead.")
  imdbRating_MIN_LT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { min: { lt: ... } } }' instead.")
  imdbRating_MIN_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { min: { lte: ... } } }' instead.")
  imdbRating_SUM_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { sum: { eq: ... } } }' instead.")
  imdbRating_SUM_GT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { sum: { gt: ... } } }' instead.")
  imdbRating_SUM_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { sum: { gte: ... } } }' instead.")
  imdbRating_SUM_LT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { sum: { lt: ... } } }' instead.")
  imdbRating_SUM_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { sum: { lte: ... } } }' instead.")
  imdbVotes: BigIntScalarAggregationFilters
  imdbVotes_AVERAGE_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { average: { eq: ... } } }' instead.")
  imdbVotes_AVERAGE_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { average: { gt: ... } } }' instead.")
  imdbVotes_AVERAGE_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { average: { gte: ... } } }' instead.")
  imdbVotes_AVERAGE_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { average: { lt: ... } } }' instead.")
  imdbVotes_AVERAGE_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { average: { lte: ... } } }' instead.")
  imdbVotes_MAX_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { max: { eq: ... } } }' instead.")
  imdbVotes_MAX_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { max: { gt: ... } } }' instead.")
  imdbVotes_MAX_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { max: { gte: ... } } }' instead.")
  imdbVotes_MAX_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { max: { lt: ... } } }' instead.")
  imdbVotes_MAX_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { max: { lte: ... } } }' instead.")
  imdbVotes_MIN_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { min: { eq: ... } } }' instead.")
  imdbVotes_MIN_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { min: { gt: ... } } }' instead.")
  imdbVotes_MIN_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { min: { gte: ... } } }' instead.")
  imdbVotes_MIN_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { min: { lt: ... } } }' instead.")
  imdbVotes_MIN_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { min: { lte: ... } } }' instead.")
  imdbVotes_SUM_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { sum: { eq: ... } } }' instead.")
  imdbVotes_SUM_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { sum: { gt: ... } } }' instead.")
  imdbVotes_SUM_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { sum: { gte: ... } } }' instead.")
  imdbVotes_SUM_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { sum: { lt: ... } } }' instead.")
  imdbVotes_SUM_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { sum: { lte: ... } } }' instead.")
  movieId: StringScalarAggregationFilters
  movieId_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'movieId: { averageLength: { eq: ... } } }' instead.")
  movieId_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'movieId: { averageLength: { gt: ... } } }' instead.")
  movieId_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'movieId: { averageLength: { gte: ... } } }' instead.")
  movieId_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'movieId: { averageLength: { lt: ... } } }' instead.")
  movieId_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'movieId: { averageLength: { lte: ... } } }' instead.")
  movieId_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { longestLength: { eq: ... } } }' instead.")
  movieId_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { longestLength: { gt: ... } } }' instead.")
  movieId_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { longestLength: { gte: ... } } }' instead.")
  movieId_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { longestLength: { lt: ... } } }' instead.")
  movieId_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { longestLength: { lte: ... } } }' instead.")
  movieId_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { shortestLength: { eq: ... } } }' instead.")
  movieId_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { shortestLength: { gt: ... } } }' instead.")
  movieId_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { shortestLength: { gte: ... } } }' instead.")
  movieId_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { shortestLength: { lt: ... } } }' instead.")
  movieId_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { shortestLength: { lte: ... } } }' instead.")
  plot: StringScalarAggregationFilters
  plot_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'plot: { averageLength: { eq: ... } } }' instead.")
  plot_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'plot: { averageLength: { gt: ... } } }' instead.")
  plot_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'plot: { averageLength: { gte: ... } } }' instead.")
  plot_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'plot: { averageLength: { lt: ... } } }' instead.")
  plot_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'plot: { averageLength: { lte: ... } } }' instead.")
  plot_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { longestLength: { eq: ... } } }' instead.")
  plot_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { longestLength: { gt: ... } } }' instead.")
  plot_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { longestLength: { gte: ... } } }' instead.")
  plot_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { longestLength: { lt: ... } } }' instead.")
  plot_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { longestLength: { lte: ... } } }' instead.")
  plot_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { shortestLength: { eq: ... } } }' instead.")
  plot_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { shortestLength: { gt: ... } } }' instead.")
  plot_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { shortestLength: { gte: ... } } }' instead.")
  plot_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { shortestLength: { lt: ... } } }' instead.")
  plot_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { shortestLength: { lte: ... } } }' instead.")
  poster: StringScalarAggregationFilters
  poster_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'poster: { averageLength: { eq: ... } } }' instead.")
  poster_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'poster: { averageLength: { gt: ... } } }' instead.")
  poster_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'poster: { averageLength: { gte: ... } } }' instead.")
  poster_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'poster: { averageLength: { lt: ... } } }' instead.")
  poster_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'poster: { averageLength: { lte: ... } } }' instead.")
  poster_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { longestLength: { eq: ... } } }' instead.")
  poster_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { longestLength: { gt: ... } } }' instead.")
  poster_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { longestLength: { gte: ... } } }' instead.")
  poster_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { longestLength: { lt: ... } } }' instead.")
  poster_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { longestLength: { lte: ... } } }' instead.")
  poster_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { shortestLength: { eq: ... } } }' instead.")
  poster_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { shortestLength: { gt: ... } } }' instead.")
  poster_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { shortestLength: { gte: ... } } }' instead.")
  poster_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { shortestLength: { lt: ... } } }' instead.")
  poster_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { shortestLength: { lte: ... } } }' instead.")
  released: StringScalarAggregationFilters
  released_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'released: { averageLength: { eq: ... } } }' instead.")
  released_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'released: { averageLength: { gt: ... } } }' instead.")
  released_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'released: { averageLength: { gte: ... } } }' instead.")
  released_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'released: { averageLength: { lt: ... } } }' instead.")
  released_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'released: { averageLength: { lte: ... } } }' instead.")
  released_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'released: { longestLength: { eq: ... } } }' instead.")
  released_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'released: { longestLength: { gt: ... } } }' instead.")
  released_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'released: { longestLength: { gte: ... } } }' instead.")
  released_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'released: { longestLength: { lt: ... } } }' instead.")
  released_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'released: { longestLength: { lte: ... } } }' instead.")
  released_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'released: { shortestLength: { eq: ... } } }' instead.")
  released_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'released: { shortestLength: { gt: ... } } }' instead.")
  released_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'released: { shortestLength: { gte: ... } } }' instead.")
  released_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'released: { shortestLength: { lt: ... } } }' instead.")
  released_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'released: { shortestLength: { lte: ... } } }' instead.")
  revenue: BigIntScalarAggregationFilters
  revenue_AVERAGE_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { average: { eq: ... } } }' instead.")
  revenue_AVERAGE_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { average: { gt: ... } } }' instead.")
  revenue_AVERAGE_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { average: { gte: ... } } }' instead.")
  revenue_AVERAGE_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { average: { lt: ... } } }' instead.")
  revenue_AVERAGE_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { average: { lte: ... } } }' instead.")
  revenue_MAX_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { max: { eq: ... } } }' instead.")
  revenue_MAX_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { max: { gt: ... } } }' instead.")
  revenue_MAX_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { max: { gte: ... } } }' instead.")
  revenue_MAX_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { max: { lt: ... } } }' instead.")
  revenue_MAX_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { max: { lte: ... } } }' instead.")
  revenue_MIN_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { min: { eq: ... } } }' instead.")
  revenue_MIN_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { min: { gt: ... } } }' instead.")
  revenue_MIN_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { min: { gte: ... } } }' instead.")
  revenue_MIN_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { min: { lt: ... } } }' instead.")
  revenue_MIN_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { min: { lte: ... } } }' instead.")
  revenue_SUM_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { sum: { eq: ... } } }' instead.")
  revenue_SUM_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { sum: { gt: ... } } }' instead.")
  revenue_SUM_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { sum: { gte: ... } } }' instead.")
  revenue_SUM_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { sum: { lt: ... } } }' instead.")
  revenue_SUM_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { sum: { lte: ... } } }' instead.")
  runtime: BigIntScalarAggregationFilters
  runtime_AVERAGE_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { average: { eq: ... } } }' instead.")
  runtime_AVERAGE_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { average: { gt: ... } } }' instead.")
  runtime_AVERAGE_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { average: { gte: ... } } }' instead.")
  runtime_AVERAGE_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { average: { lt: ... } } }' instead.")
  runtime_AVERAGE_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { average: { lte: ... } } }' instead.")
  runtime_MAX_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { max: { eq: ... } } }' instead.")
  runtime_MAX_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { max: { gt: ... } } }' instead.")
  runtime_MAX_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { max: { gte: ... } } }' instead.")
  runtime_MAX_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { max: { lt: ... } } }' instead.")
  runtime_MAX_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { max: { lte: ... } } }' instead.")
  runtime_MIN_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { min: { eq: ... } } }' instead.")
  runtime_MIN_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { min: { gt: ... } } }' instead.")
  runtime_MIN_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { min: { gte: ... } } }' instead.")
  runtime_MIN_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { min: { lt: ... } } }' instead.")
  runtime_MIN_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { min: { lte: ... } } }' instead.")
  runtime_SUM_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { sum: { eq: ... } } }' instead.")
  runtime_SUM_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { sum: { gt: ... } } }' instead.")
  runtime_SUM_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { sum: { gte: ... } } }' instead.")
  runtime_SUM_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { sum: { lt: ... } } }' instead.")
  runtime_SUM_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { sum: { lte: ... } } }' instead.")
  title: StringScalarAggregationFilters
  title_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'title: { averageLength: { eq: ... } } }' instead.")
  title_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'title: { averageLength: { gt: ... } } }' instead.")
  title_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'title: { averageLength: { gte: ... } } }' instead.")
  title_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'title: { averageLength: { lt: ... } } }' instead.")
  title_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'title: { averageLength: { lte: ... } } }' instead.")
  title_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'title: { longestLength: { eq: ... } } }' instead.")
  title_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'title: { longestLength: { gt: ... } } }' instead.")
  title_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'title: { longestLength: { gte: ... } } }' instead.")
  title_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'title: { longestLength: { lt: ... } } }' instead.")
  title_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'title: { longestLength: { lte: ... } } }' instead.")
  title_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'title: { shortestLength: { eq: ... } } }' instead.")
  title_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'title: { shortestLength: { gt: ... } } }' instead.")
  title_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'title: { shortestLength: { gte: ... } } }' instead.")
  title_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'title: { shortestLength: { lt: ... } } }' instead.")
  title_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'title: { shortestLength: { lte: ... } } }' instead.")
  tmdbId: StringScalarAggregationFilters
  tmdbId_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { averageLength: { eq: ... } } }' instead.")
  tmdbId_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { averageLength: { gt: ... } } }' instead.")
  tmdbId_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { averageLength: { gte: ... } } }' instead.")
  tmdbId_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { averageLength: { lt: ... } } }' instead.")
  tmdbId_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { averageLength: { lte: ... } } }' instead.")
  tmdbId_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { longestLength: { eq: ... } } }' instead.")
  tmdbId_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { longestLength: { gt: ... } } }' instead.")
  tmdbId_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { longestLength: { gte: ... } } }' instead.")
  tmdbId_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { longestLength: { lt: ... } } }' instead.")
  tmdbId_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { longestLength: { lte: ... } } }' instead.")
  tmdbId_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { shortestLength: { eq: ... } } }' instead.")
  tmdbId_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { shortestLength: { gt: ... } } }' instead.")
  tmdbId_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { shortestLength: { gte: ... } } }' instead.")
  tmdbId_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { shortestLength: { lt: ... } } }' instead.")
  tmdbId_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { shortestLength: { lte: ... } } }' instead.")
  url: StringScalarAggregationFilters
  url_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'url: { averageLength: { eq: ... } } }' instead.")
  url_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'url: { averageLength: { gt: ... } } }' instead.")
  url_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'url: { averageLength: { gte: ... } } }' instead.")
  url_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'url: { averageLength: { lt: ... } } }' instead.")
  url_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'url: { averageLength: { lte: ... } } }' instead.")
  url_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'url: { longestLength: { eq: ... } } }' instead.")
  url_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'url: { longestLength: { gt: ... } } }' instead.")
  url_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'url: { longestLength: { gte: ... } } }' instead.")
  url_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'url: { longestLength: { lt: ... } } }' instead.")
  url_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'url: { longestLength: { lte: ... } } }' instead.")
  url_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'url: { shortestLength: { eq: ... } } }' instead.")
  url_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'url: { shortestLength: { gt: ... } } }' instead.")
  url_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'url: { shortestLength: { gte: ... } } }' instead.")
  url_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'url: { shortestLength: { lt: ... } } }' instead.")
  url_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'url: { shortestLength: { lte: ... } } }' instead.")
  year: BigIntScalarAggregationFilters
  year_AVERAGE_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { average: { eq: ... } } }' instead.")
  year_AVERAGE_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { average: { gt: ... } } }' instead.")
  year_AVERAGE_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { average: { gte: ... } } }' instead.")
  year_AVERAGE_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { average: { lt: ... } } }' instead.")
  year_AVERAGE_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { average: { lte: ... } } }' instead.")
  year_MAX_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { max: { eq: ... } } }' instead.")
  year_MAX_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { max: { gt: ... } } }' instead.")
  year_MAX_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { max: { gte: ... } } }' instead.")
  year_MAX_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { max: { lt: ... } } }' instead.")
  year_MAX_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { max: { lte: ... } } }' instead.")
  year_MIN_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { min: { eq: ... } } }' instead.")
  year_MIN_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { min: { gt: ... } } }' instead.")
  year_MIN_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { min: { gte: ... } } }' instead.")
  year_MIN_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { min: { lt: ... } } }' instead.")
  year_MIN_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { min: { lte: ... } } }' instead.")
  year_SUM_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { sum: { eq: ... } } }' instead.")
  year_SUM_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { sum: { gt: ... } } }' instead.")
  year_SUM_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { sum: { gte: ... } } }' instead.")
  year_SUM_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { sum: { lt: ... } } }' instead.")
  year_SUM_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { sum: { lte: ... } } }' instead.")
}

type Actor2ActedInMoviesRelationship {
  cursor: String!
  node: Movie!
  properties: ActedInProperties!
}

input Actor2ActedInMoviesUpdateConnectionInput {
  edge: ActedInPropertiesUpdateInput
  node: MovieUpdateInput
  where: Actor2ActedInMoviesConnectionWhere
}

input Actor2ActedInMoviesUpdateFieldInput {
  connect: [Actor2ActedInMoviesConnectFieldInput!]
  create: [Actor2ActedInMoviesCreateFieldInput!]
  delete: [Actor2ActedInMoviesDeleteFieldInput!]
  disconnect: [Actor2ActedInMoviesDisconnectFieldInput!]
  update: Actor2ActedInMoviesUpdateConnectionInput
}

type Actor2Aggregate {
  count: Count!
  node: Actor2AggregateNode!
}

type Actor2AggregateNode {
  bio: StringAggregateSelection!
  bornIn: StringAggregateSelection!
  imdbId: StringAggregateSelection!
  name: StringAggregateSelection!
  poster: StringAggregateSelection!
  tmdbId: StringAggregateSelection!
  url: StringAggregateSelection!
}

input Actor2ConnectInput {
  actedInMovies: [Actor2ActedInMoviesConnectFieldInput!]
  directedMovies: [Actor2DirectedMoviesConnectFieldInput!]
}

input Actor2ConnectWhere {
  node: Actor2Where!
}

input Actor2CreateInput {
  actedInMovies: Actor2ActedInMoviesFieldInput
  bio: String
  born: Date
  bornIn: String
  died: Date
  directedMovies: Actor2DirectedMoviesFieldInput
  imdbId: String
  name: String!
  poster: String
  tmdbId: String!
  url: String!
}

input Actor2DeleteInput {
  actedInMovies: [Actor2ActedInMoviesDeleteFieldInput!]
  directedMovies: [Actor2DirectedMoviesDeleteFieldInput!]
}

input Actor2DirectedMoviesAggregateInput {
  AND: [Actor2DirectedMoviesAggregateInput!]
  NOT: Actor2DirectedMoviesAggregateInput
  OR: [Actor2DirectedMoviesAggregateInput!]
  count: IntScalarFilters
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  edge: DirectedPropertiesAggregationWhereInput
  node: Actor2DirectedMoviesNodeAggregationWhereInput
}

input Actor2DirectedMoviesConnectFieldInput {
  connect: [MovieConnectInput!]
  edge: DirectedPropertiesCreateInput
  where: MovieConnectWhere
}

type Actor2DirectedMoviesConnection {
  aggregate: Actor2MovieDirectedMoviesAggregateSelection!
  edges: [Actor2DirectedMoviesRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input Actor2DirectedMoviesConnectionAggregateInput {
  AND: [Actor2DirectedMoviesConnectionAggregateInput!]
  NOT: Actor2DirectedMoviesConnectionAggregateInput
  OR: [Actor2DirectedMoviesConnectionAggregateInput!]
  count: ConnectionAggregationCountFilterInput
  edge: DirectedPropertiesAggregationWhereInput
  node: Actor2DirectedMoviesNodeAggregationWhereInput
}

input Actor2DirectedMoviesConnectionFilters {
  """
  Filter Actor2s by aggregating results on related Actor2DirectedMoviesConnections
  """
  aggregate: Actor2DirectedMoviesConnectionAggregateInput
  """
  Return Actor2s where all of the related Actor2DirectedMoviesConnections match this filter
  """
  all: Actor2DirectedMoviesConnectionWhere
  """
  Return Actor2s where none of the related Actor2DirectedMoviesConnections match this filter
  """
  none: Actor2DirectedMoviesConnectionWhere
  """
  Return Actor2s where one of the related Actor2DirectedMoviesConnections match this filter
  """
  single: Actor2DirectedMoviesConnectionWhere
  """
  Return Actor2s where some of the related Actor2DirectedMoviesConnections match this filter
  """
  some: Actor2DirectedMoviesConnectionWhere
}

input Actor2DirectedMoviesConnectionSort {
  edge: DirectedPropertiesSort
  node: MovieSort
}

input Actor2DirectedMoviesConnectionWhere {
  AND: [Actor2DirectedMoviesConnectionWhere!]
  NOT: Actor2DirectedMoviesConnectionWhere
  OR: [Actor2DirectedMoviesConnectionWhere!]
  edge: DirectedPropertiesWhere
  node: MovieWhere
}

input Actor2DirectedMoviesCreateFieldInput {
  edge: DirectedPropertiesCreateInput
  node: MovieCreateInput!
}

input Actor2DirectedMoviesDeleteFieldInput {
  delete: MovieDeleteInput
  where: Actor2DirectedMoviesConnectionWhere
}

input Actor2DirectedMoviesDisconnectFieldInput {
  disconnect: MovieDisconnectInput
  where: Actor2DirectedMoviesConnectionWhere
}

input Actor2DirectedMoviesFieldInput {
  connect: [Actor2DirectedMoviesConnectFieldInput!]
  create: [Actor2DirectedMoviesCreateFieldInput!]
}

input Actor2DirectedMoviesNodeAggregationWhereInput {
  AND: [Actor2DirectedMoviesNodeAggregationWhereInput!]
  NOT: Actor2DirectedMoviesNodeAggregationWhereInput
  OR: [Actor2DirectedMoviesNodeAggregationWhereInput!]
  budget: BigIntScalarAggregationFilters
  budget_AVERAGE_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { average: { eq: ... } } }' instead.")
  budget_AVERAGE_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { average: { gt: ... } } }' instead.")
  budget_AVERAGE_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { average: { gte: ... } } }' instead.")
  budget_AVERAGE_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { average: { lt: ... } } }' instead.")
  budget_AVERAGE_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { average: { lte: ... } } }' instead.")
  budget_MAX_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { max: { eq: ... } } }' instead.")
  budget_MAX_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { max: { gt: ... } } }' instead.")
  budget_MAX_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { max: { gte: ... } } }' instead.")
  budget_MAX_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { max: { lt: ... } } }' instead.")
  budget_MAX_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { max: { lte: ... } } }' instead.")
  budget_MIN_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { min: { eq: ... } } }' instead.")
  budget_MIN_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { min: { gt: ... } } }' instead.")
  budget_MIN_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { min: { gte: ... } } }' instead.")
  budget_MIN_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { min: { lt: ... } } }' instead.")
  budget_MIN_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { min: { lte: ... } } }' instead.")
  budget_SUM_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { sum: { eq: ... } } }' instead.")
  budget_SUM_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { sum: { gt: ... } } }' instead.")
  budget_SUM_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { sum: { gte: ... } } }' instead.")
  budget_SUM_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { sum: { lt: ... } } }' instead.")
  budget_SUM_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { sum: { lte: ... } } }' instead.")
  imdbId: StringScalarAggregationFilters
  imdbId_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'imdbId: { averageLength: { eq: ... } } }' instead.")
  imdbId_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbId: { averageLength: { gt: ... } } }' instead.")
  imdbId_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbId: { averageLength: { gte: ... } } }' instead.")
  imdbId_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbId: { averageLength: { lt: ... } } }' instead.")
  imdbId_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbId: { averageLength: { lte: ... } } }' instead.")
  imdbId_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { longestLength: { eq: ... } } }' instead.")
  imdbId_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { longestLength: { gt: ... } } }' instead.")
  imdbId_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { longestLength: { gte: ... } } }' instead.")
  imdbId_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { longestLength: { lt: ... } } }' instead.")
  imdbId_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { longestLength: { lte: ... } } }' instead.")
  imdbId_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { shortestLength: { eq: ... } } }' instead.")
  imdbId_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { shortestLength: { gt: ... } } }' instead.")
  imdbId_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { shortestLength: { gte: ... } } }' instead.")
  imdbId_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { shortestLength: { lt: ... } } }' instead.")
  imdbId_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { shortestLength: { lte: ... } } }' instead.")
  imdbRating: FloatScalarAggregationFilters
  imdbRating_AVERAGE_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { average: { eq: ... } } }' instead.")
  imdbRating_AVERAGE_GT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { average: { gt: ... } } }' instead.")
  imdbRating_AVERAGE_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { average: { gte: ... } } }' instead.")
  imdbRating_AVERAGE_LT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { average: { lt: ... } } }' instead.")
  imdbRating_AVERAGE_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { average: { lte: ... } } }' instead.")
  imdbRating_MAX_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { max: { eq: ... } } }' instead.")
  imdbRating_MAX_GT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { max: { gt: ... } } }' instead.")
  imdbRating_MAX_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { max: { gte: ... } } }' instead.")
  imdbRating_MAX_LT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { max: { lt: ... } } }' instead.")
  imdbRating_MAX_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { max: { lte: ... } } }' instead.")
  imdbRating_MIN_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { min: { eq: ... } } }' instead.")
  imdbRating_MIN_GT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { min: { gt: ... } } }' instead.")
  imdbRating_MIN_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { min: { gte: ... } } }' instead.")
  imdbRating_MIN_LT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { min: { lt: ... } } }' instead.")
  imdbRating_MIN_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { min: { lte: ... } } }' instead.")
  imdbRating_SUM_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { sum: { eq: ... } } }' instead.")
  imdbRating_SUM_GT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { sum: { gt: ... } } }' instead.")
  imdbRating_SUM_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { sum: { gte: ... } } }' instead.")
  imdbRating_SUM_LT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { sum: { lt: ... } } }' instead.")
  imdbRating_SUM_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { sum: { lte: ... } } }' instead.")
  imdbVotes: BigIntScalarAggregationFilters
  imdbVotes_AVERAGE_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { average: { eq: ... } } }' instead.")
  imdbVotes_AVERAGE_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { average: { gt: ... } } }' instead.")
  imdbVotes_AVERAGE_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { average: { gte: ... } } }' instead.")
  imdbVotes_AVERAGE_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { average: { lt: ... } } }' instead.")
  imdbVotes_AVERAGE_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { average: { lte: ... } } }' instead.")
  imdbVotes_MAX_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { max: { eq: ... } } }' instead.")
  imdbVotes_MAX_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { max: { gt: ... } } }' instead.")
  imdbVotes_MAX_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { max: { gte: ... } } }' instead.")
  imdbVotes_MAX_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { max: { lt: ... } } }' instead.")
  imdbVotes_MAX_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { max: { lte: ... } } }' instead.")
  imdbVotes_MIN_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { min: { eq: ... } } }' instead.")
  imdbVotes_MIN_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { min: { gt: ... } } }' instead.")
  imdbVotes_MIN_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { min: { gte: ... } } }' instead.")
  imdbVotes_MIN_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { min: { lt: ... } } }' instead.")
  imdbVotes_MIN_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { min: { lte: ... } } }' instead.")
  imdbVotes_SUM_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { sum: { eq: ... } } }' instead.")
  imdbVotes_SUM_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { sum: { gt: ... } } }' instead.")
  imdbVotes_SUM_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { sum: { gte: ... } } }' instead.")
  imdbVotes_SUM_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { sum: { lt: ... } } }' instead.")
  imdbVotes_SUM_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { sum: { lte: ... } } }' instead.")
  movieId: StringScalarAggregationFilters
  movieId_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'movieId: { averageLength: { eq: ... } } }' instead.")
  movieId_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'movieId: { averageLength: { gt: ... } } }' instead.")
  movieId_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'movieId: { averageLength: { gte: ... } } }' instead.")
  movieId_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'movieId: { averageLength: { lt: ... } } }' instead.")
  movieId_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'movieId: { averageLength: { lte: ... } } }' instead.")
  movieId_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { longestLength: { eq: ... } } }' instead.")
  movieId_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { longestLength: { gt: ... } } }' instead.")
  movieId_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { longestLength: { gte: ... } } }' instead.")
  movieId_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { longestLength: { lt: ... } } }' instead.")
  movieId_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { longestLength: { lte: ... } } }' instead.")
  movieId_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { shortestLength: { eq: ... } } }' instead.")
  movieId_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { shortestLength: { gt: ... } } }' instead.")
  movieId_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { shortestLength: { gte: ... } } }' instead.")
  movieId_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { shortestLength: { lt: ... } } }' instead.")
  movieId_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { shortestLength: { lte: ... } } }' instead.")
  plot: StringScalarAggregationFilters
  plot_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'plot: { averageLength: { eq: ... } } }' instead.")
  plot_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'plot: { averageLength: { gt: ... } } }' instead.")
  plot_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'plot: { averageLength: { gte: ... } } }' instead.")
  plot_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'plot: { averageLength: { lt: ... } } }' instead.")
  plot_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'plot: { averageLength: { lte: ... } } }' instead.")
  plot_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { longestLength: { eq: ... } } }' instead.")
  plot_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { longestLength: { gt: ... } } }' instead.")
  plot_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { longestLength: { gte: ... } } }' instead.")
  plot_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { longestLength: { lt: ... } } }' instead.")
  plot_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { longestLength: { lte: ... } } }' instead.")
  plot_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { shortestLength: { eq: ... } } }' instead.")
  plot_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { shortestLength: { gt: ... } } }' instead.")
  plot_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { shortestLength: { gte: ... } } }' instead.")
  plot_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { shortestLength: { lt: ... } } }' instead.")
  plot_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { shortestLength: { lte: ... } } }' instead.")
  poster: StringScalarAggregationFilters
  poster_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'poster: { averageLength: { eq: ... } } }' instead.")
  poster_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'poster: { averageLength: { gt: ... } } }' instead.")
  poster_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'poster: { averageLength: { gte: ... } } }' instead.")
  poster_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'poster: { averageLength: { lt: ... } } }' instead.")
  poster_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'poster: { averageLength: { lte: ... } } }' instead.")
  poster_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { longestLength: { eq: ... } } }' instead.")
  poster_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { longestLength: { gt: ... } } }' instead.")
  poster_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { longestLength: { gte: ... } } }' instead.")
  poster_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { longestLength: { lt: ... } } }' instead.")
  poster_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { longestLength: { lte: ... } } }' instead.")
  poster_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { shortestLength: { eq: ... } } }' instead.")
  poster_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { shortestLength: { gt: ... } } }' instead.")
  poster_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { shortestLength: { gte: ... } } }' instead.")
  poster_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { shortestLength: { lt: ... } } }' instead.")
  poster_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { shortestLength: { lte: ... } } }' instead.")
  released: StringScalarAggregationFilters
  released_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'released: { averageLength: { eq: ... } } }' instead.")
  released_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'released: { averageLength: { gt: ... } } }' instead.")
  released_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'released: { averageLength: { gte: ... } } }' instead.")
  released_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'released: { averageLength: { lt: ... } } }' instead.")
  released_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'released: { averageLength: { lte: ... } } }' instead.")
  released_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'released: { longestLength: { eq: ... } } }' instead.")
  released_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'released: { longestLength: { gt: ... } } }' instead.")
  released_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'released: { longestLength: { gte: ... } } }' instead.")
  released_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'released: { longestLength: { lt: ... } } }' instead.")
  released_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'released: { longestLength: { lte: ... } } }' instead.")
  released_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'released: { shortestLength: { eq: ... } } }' instead.")
  released_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'released: { shortestLength: { gt: ... } } }' instead.")
  released_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'released: { shortestLength: { gte: ... } } }' instead.")
  released_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'released: { shortestLength: { lt: ... } } }' instead.")
  released_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'released: { shortestLength: { lte: ... } } }' instead.")
  revenue: BigIntScalarAggregationFilters
  revenue_AVERAGE_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { average: { eq: ... } } }' instead.")
  revenue_AVERAGE_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { average: { gt: ... } } }' instead.")
  revenue_AVERAGE_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { average: { gte: ... } } }' instead.")
  revenue_AVERAGE_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { average: { lt: ... } } }' instead.")
  revenue_AVERAGE_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { average: { lte: ... } } }' instead.")
  revenue_MAX_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { max: { eq: ... } } }' instead.")
  revenue_MAX_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { max: { gt: ... } } }' instead.")
  revenue_MAX_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { max: { gte: ... } } }' instead.")
  revenue_MAX_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { max: { lt: ... } } }' instead.")
  revenue_MAX_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { max: { lte: ... } } }' instead.")
  revenue_MIN_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { min: { eq: ... } } }' instead.")
  revenue_MIN_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { min: { gt: ... } } }' instead.")
  revenue_MIN_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { min: { gte: ... } } }' instead.")
  revenue_MIN_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { min: { lt: ... } } }' instead.")
  revenue_MIN_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { min: { lte: ... } } }' instead.")
  revenue_SUM_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { sum: { eq: ... } } }' instead.")
  revenue_SUM_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { sum: { gt: ... } } }' instead.")
  revenue_SUM_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { sum: { gte: ... } } }' instead.")
  revenue_SUM_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { sum: { lt: ... } } }' instead.")
  revenue_SUM_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { sum: { lte: ... } } }' instead.")
  runtime: BigIntScalarAggregationFilters
  runtime_AVERAGE_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { average: { eq: ... } } }' instead.")
  runtime_AVERAGE_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { average: { gt: ... } } }' instead.")
  runtime_AVERAGE_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { average: { gte: ... } } }' instead.")
  runtime_AVERAGE_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { average: { lt: ... } } }' instead.")
  runtime_AVERAGE_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { average: { lte: ... } } }' instead.")
  runtime_MAX_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { max: { eq: ... } } }' instead.")
  runtime_MAX_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { max: { gt: ... } } }' instead.")
  runtime_MAX_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { max: { gte: ... } } }' instead.")
  runtime_MAX_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { max: { lt: ... } } }' instead.")
  runtime_MAX_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { max: { lte: ... } } }' instead.")
  runtime_MIN_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { min: { eq: ... } } }' instead.")
  runtime_MIN_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { min: { gt: ... } } }' instead.")
  runtime_MIN_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { min: { gte: ... } } }' instead.")
  runtime_MIN_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { min: { lt: ... } } }' instead.")
  runtime_MIN_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { min: { lte: ... } } }' instead.")
  runtime_SUM_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { sum: { eq: ... } } }' instead.")
  runtime_SUM_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { sum: { gt: ... } } }' instead.")
  runtime_SUM_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { sum: { gte: ... } } }' instead.")
  runtime_SUM_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { sum: { lt: ... } } }' instead.")
  runtime_SUM_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { sum: { lte: ... } } }' instead.")
  title: StringScalarAggregationFilters
  title_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'title: { averageLength: { eq: ... } } }' instead.")
  title_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'title: { averageLength: { gt: ... } } }' instead.")
  title_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'title: { averageLength: { gte: ... } } }' instead.")
  title_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'title: { averageLength: { lt: ... } } }' instead.")
  title_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'title: { averageLength: { lte: ... } } }' instead.")
  title_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'title: { longestLength: { eq: ... } } }' instead.")
  title_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'title: { longestLength: { gt: ... } } }' instead.")
  title_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'title: { longestLength: { gte: ... } } }' instead.")
  title_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'title: { longestLength: { lt: ... } } }' instead.")
  title_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'title: { longestLength: { lte: ... } } }' instead.")
  title_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'title: { shortestLength: { eq: ... } } }' instead.")
  title_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'title: { shortestLength: { gt: ... } } }' instead.")
  title_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'title: { shortestLength: { gte: ... } } }' instead.")
  title_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'title: { shortestLength: { lt: ... } } }' instead.")
  title_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'title: { shortestLength: { lte: ... } } }' instead.")
  tmdbId: StringScalarAggregationFilters
  tmdbId_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { averageLength: { eq: ... } } }' instead.")
  tmdbId_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { averageLength: { gt: ... } } }' instead.")
  tmdbId_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { averageLength: { gte: ... } } }' instead.")
  tmdbId_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { averageLength: { lt: ... } } }' instead.")
  tmdbId_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { averageLength: { lte: ... } } }' instead.")
  tmdbId_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { longestLength: { eq: ... } } }' instead.")
  tmdbId_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { longestLength: { gt: ... } } }' instead.")
  tmdbId_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { longestLength: { gte: ... } } }' instead.")
  tmdbId_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { longestLength: { lt: ... } } }' instead.")
  tmdbId_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { longestLength: { lte: ... } } }' instead.")
  tmdbId_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { shortestLength: { eq: ... } } }' instead.")
  tmdbId_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { shortestLength: { gt: ... } } }' instead.")
  tmdbId_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { shortestLength: { gte: ... } } }' instead.")
  tmdbId_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { shortestLength: { lt: ... } } }' instead.")
  tmdbId_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { shortestLength: { lte: ... } } }' instead.")
  url: StringScalarAggregationFilters
  url_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'url: { averageLength: { eq: ... } } }' instead.")
  url_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'url: { averageLength: { gt: ... } } }' instead.")
  url_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'url: { averageLength: { gte: ... } } }' instead.")
  url_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'url: { averageLength: { lt: ... } } }' instead.")
  url_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'url: { averageLength: { lte: ... } } }' instead.")
  url_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'url: { longestLength: { eq: ... } } }' instead.")
  url_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'url: { longestLength: { gt: ... } } }' instead.")
  url_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'url: { longestLength: { gte: ... } } }' instead.")
  url_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'url: { longestLength: { lt: ... } } }' instead.")
  url_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'url: { longestLength: { lte: ... } } }' instead.")
  url_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'url: { shortestLength: { eq: ... } } }' instead.")
  url_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'url: { shortestLength: { gt: ... } } }' instead.")
  url_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'url: { shortestLength: { gte: ... } } }' instead.")
  url_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'url: { shortestLength: { lt: ... } } }' instead.")
  url_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'url: { shortestLength: { lte: ... } } }' instead.")
  year: BigIntScalarAggregationFilters
  year_AVERAGE_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { average: { eq: ... } } }' instead.")
  year_AVERAGE_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { average: { gt: ... } } }' instead.")
  year_AVERAGE_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { average: { gte: ... } } }' instead.")
  year_AVERAGE_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { average: { lt: ... } } }' instead.")
  year_AVERAGE_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { average: { lte: ... } } }' instead.")
  year_MAX_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { max: { eq: ... } } }' instead.")
  year_MAX_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { max: { gt: ... } } }' instead.")
  year_MAX_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { max: { gte: ... } } }' instead.")
  year_MAX_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { max: { lt: ... } } }' instead.")
  year_MAX_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { max: { lte: ... } } }' instead.")
  year_MIN_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { min: { eq: ... } } }' instead.")
  year_MIN_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { min: { gt: ... } } }' instead.")
  year_MIN_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { min: { gte: ... } } }' instead.")
  year_MIN_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { min: { lt: ... } } }' instead.")
  year_MIN_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { min: { lte: ... } } }' instead.")
  year_SUM_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { sum: { eq: ... } } }' instead.")
  year_SUM_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { sum: { gt: ... } } }' instead.")
  year_SUM_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { sum: { gte: ... } } }' instead.")
  year_SUM_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { sum: { lt: ... } } }' instead.")
  year_SUM_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { sum: { lte: ... } } }' instead.")
}

type Actor2DirectedMoviesRelationship {
  cursor: String!
  node: Movie!
  properties: DirectedProperties!
}

input Actor2DirectedMoviesUpdateConnectionInput {
  edge: DirectedPropertiesUpdateInput
  node: MovieUpdateInput
  where: Actor2DirectedMoviesConnectionWhere
}

input Actor2DirectedMoviesUpdateFieldInput {
  connect: [Actor2DirectedMoviesConnectFieldInput!]
  create: [Actor2DirectedMoviesCreateFieldInput!]
  delete: [Actor2DirectedMoviesDeleteFieldInput!]
  disconnect: [Actor2DirectedMoviesDisconnectFieldInput!]
  update: Actor2DirectedMoviesUpdateConnectionInput
}

input Actor2DisconnectInput {
  actedInMovies: [Actor2ActedInMoviesDisconnectFieldInput!]
  directedMovies: [Actor2DirectedMoviesDisconnectFieldInput!]
}

type Actor2Edge {
  cursor: String!
  node: Actor2!
}

type Actor2MovieActedInMoviesAggregateSelection {
  count: CountConnection!
  edge: Actor2MovieActedInMoviesEdgeAggregateSelection
  node: Actor2MovieActedInMoviesNodeAggregateSelection
}

type Actor2MovieActedInMoviesEdgeAggregateSelection {
  role: StringAggregateSelection!
}

type Actor2MovieActedInMoviesNodeAggregateSelection {
  budget: BigIntAggregateSelection!
  imdbId: StringAggregateSelection!
  imdbRating: FloatAggregateSelection!
  imdbVotes: BigIntAggregateSelection!
  movieId: StringAggregateSelection!
  plot: StringAggregateSelection!
  poster: StringAggregateSelection!
  released: StringAggregateSelection!
  revenue: BigIntAggregateSelection!
  runtime: BigIntAggregateSelection!
  title: StringAggregateSelection!
  tmdbId: StringAggregateSelection!
  url: StringAggregateSelection!
  year: BigIntAggregateSelection!
}

type Actor2MovieDirectedMoviesAggregateSelection {
  count: CountConnection!
  edge: Actor2MovieDirectedMoviesEdgeAggregateSelection
  node: Actor2MovieDirectedMoviesNodeAggregateSelection
}

type Actor2MovieDirectedMoviesEdgeAggregateSelection {
  role: StringAggregateSelection!
}

type Actor2MovieDirectedMoviesNodeAggregateSelection {
  budget: BigIntAggregateSelection!
  imdbId: StringAggregateSelection!
  imdbRating: FloatAggregateSelection!
  imdbVotes: BigIntAggregateSelection!
  movieId: StringAggregateSelection!
  plot: StringAggregateSelection!
  poster: StringAggregateSelection!
  released: StringAggregateSelection!
  revenue: BigIntAggregateSelection!
  runtime: BigIntAggregateSelection!
  title: StringAggregateSelection!
  tmdbId: StringAggregateSelection!
  url: StringAggregateSelection!
  year: BigIntAggregateSelection!
}

input Actor2RelationshipFilters {
  """Filter type where all of the related Actor2s match this filter"""
  all: Actor2Where
  """Filter type where none of the related Actor2s match this filter"""
  none: Actor2Where
  """Filter type where one of the related Actor2s match this filter"""
  single: Actor2Where
  """Filter type where some of the related Actor2s match this filter"""
  some: Actor2Where
}

"""
Fields to sort Actor2s by. The order in which sorts are applied is not guaranteed when specifying many fields in one Actor2Sort object.
"""
input Actor2Sort {
  bio: SortDirection
  born: SortDirection
  bornIn: SortDirection
  died: SortDirection
  imdbId: SortDirection
  name: SortDirection
  poster: SortDirection
  tmdbId: SortDirection
  url: SortDirection
}

input Actor2UpdateInput {
  actedInMovies: [Actor2ActedInMoviesUpdateFieldInput!]
  bio: StringScalarMutations
  bio_SET: String
  born: DateScalarMutations
  bornIn: StringScalarMutations
  bornIn_SET: String
  born_SET: Date
  died: DateScalarMutations
  died_SET: Date
  directedMovies: [Actor2DirectedMoviesUpdateFieldInput!]
  imdbId: StringScalarMutations
  imdbId_SET: String
  name: StringScalarMutations
  name_SET: String
  poster: StringScalarMutations
  poster_SET: String
  tmdbId: StringScalarMutations
  tmdbId_SET: String
  url: StringScalarMutations
  url_SET: String
}

input Actor2Where {
  AND: [Actor2Where!]
  NOT: Actor2Where
  OR: [Actor2Where!]
  actedInMovies: MovieRelationshipFilters
  actedInMoviesAggregate: Actor2ActedInMoviesAggregateInput @deprecated(reason: "Aggregate filters are moved inside the actedInMoviesConnection filter, please use { actedInMoviesConnection: { aggregate: {...} } } instead")
  actedInMoviesConnection: Actor2ActedInMoviesConnectionFilters
  """
  Return Actor2s where all of the related Actor2ActedInMoviesConnections match this filter
  """
  actedInMoviesConnection_ALL: Actor2ActedInMoviesConnectionWhere @deprecated(reason: "Please use the relevant generic filter 'actedInMoviesConnection: { all: { node: ... } } }' instead.")
  """
  Return Actor2s where none of the related Actor2ActedInMoviesConnections match this filter
  """
  actedInMoviesConnection_NONE: Actor2ActedInMoviesConnectionWhere @deprecated(reason: "Please use the relevant generic filter 'actedInMoviesConnection: { none: { node: ... } } }' instead.")
  """
  Return Actor2s where one of the related Actor2ActedInMoviesConnections match this filter
  """
  actedInMoviesConnection_SINGLE: Actor2ActedInMoviesConnectionWhere @deprecated(reason: "Please use the relevant generic filter 'actedInMoviesConnection: { single: { node: ... } } }' instead.")
  """
  Return Actor2s where some of the related Actor2ActedInMoviesConnections match this filter
  """
  actedInMoviesConnection_SOME: Actor2ActedInMoviesConnectionWhere @deprecated(reason: "Please use the relevant generic filter 'actedInMoviesConnection: { some: { node: ... } } }' instead.")
  """Return Actor2s where all of the related Movies match this filter"""
  actedInMovies_ALL: MovieWhere @deprecated(reason: "Please use the relevant generic filter 'actedInMovies: { all: ... }' instead.")
  """Return Actor2s where none of the related Movies match this filter"""
  actedInMovies_NONE: MovieWhere @deprecated(reason: "Please use the relevant generic filter 'actedInMovies: { none: ... }' instead.")
  """Return Actor2s where one of the related Movies match this filter"""
  actedInMovies_SINGLE: MovieWhere @deprecated(reason: "Please use the relevant generic filter 'actedInMovies: {  single: ... }' instead.")
  """Return Actor2s where some of the related Movies match this filter"""
  actedInMovies_SOME: MovieWhere @deprecated(reason: "Please use the relevant generic filter 'actedInMovies: {  some: ... }' instead.")
  bio: StringScalarFilters
  bio_CONTAINS: String @deprecated(reason: "Please use the relevant generic filter bio: { contains: ... }")
  bio_ENDS_WITH: String @deprecated(reason: "Please use the relevant generic filter bio: { endsWith: ... }")
  bio_EQ: String @deprecated(reason: "Please use the relevant generic filter bio: { eq: ... }")
  bio_IN: [String] @deprecated(reason: "Please use the relevant generic filter bio: { in: ... }")
  bio_STARTS_WITH: String @deprecated(reason: "Please use the relevant generic filter bio: { startsWith: ... }")
  born: DateScalarFilters
  bornIn: StringScalarFilters
  bornIn_CONTAINS: String @deprecated(reason: "Please use the relevant generic filter bornIn: { contains: ... }")
  bornIn_ENDS_WITH: String @deprecated(reason: "Please use the relevant generic filter bornIn: { endsWith: ... }")
  bornIn_EQ: String @deprecated(reason: "Please use the relevant generic filter bornIn: { eq: ... }")
  bornIn_IN: [String] @deprecated(reason: "Please use the relevant generic filter bornIn: { in: ... }")
  bornIn_STARTS_WITH: String @deprecated(reason: "Please use the relevant generic filter bornIn: { startsWith: ... }")
  born_EQ: Date @deprecated(reason: "Please use the relevant generic filter born: { eq: ... }")
  born_GT: Date @deprecated(reason: "Please use the relevant generic filter born: { gt: ... }")
  born_GTE: Date @deprecated(reason: "Please use the relevant generic filter born: { gte: ... }")
  born_IN: [Date] @deprecated(reason: "Please use the relevant generic filter born: { in: ... }")
  born_LT: Date @deprecated(reason: "Please use the relevant generic filter born: { lt: ... }")
  born_LTE: Date @deprecated(reason: "Please use the relevant generic filter born: { lte: ... }")
  died: DateScalarFilters
  died_EQ: Date @deprecated(reason: "Please use the relevant generic filter died: { eq: ... }")
  died_GT: Date @deprecated(reason: "Please use the relevant generic filter died: { gt: ... }")
  died_GTE: Date @deprecated(reason: "Please use the relevant generic filter died: { gte: ... }")
  died_IN: [Date] @deprecated(reason: "Please use the relevant generic filter died: { in: ... }")
  died_LT: Date @deprecated(reason: "Please use the relevant generic filter died: { lt: ... }")
  died_LTE: Date @deprecated(reason: "Please use the relevant generic filter died: { lte: ... }")
  directedMovies: MovieRelationshipFilters
  directedMoviesAggregate: Actor2DirectedMoviesAggregateInput @deprecated(reason: "Aggregate filters are moved inside the directedMoviesConnection filter, please use { directedMoviesConnection: { aggregate: {...} } } instead")
  directedMoviesConnection: Actor2DirectedMoviesConnectionFilters
  """
  Return Actor2s where all of the related Actor2DirectedMoviesConnections match this filter
  """
  directedMoviesConnection_ALL: Actor2DirectedMoviesConnectionWhere @deprecated(reason: "Please use the relevant generic filter 'directedMoviesConnection: { all: { node: ... } } }' instead.")
  """
  Return Actor2s where none of the related Actor2DirectedMoviesConnections match this filter
  """
  directedMoviesConnection_NONE: Actor2DirectedMoviesConnectionWhere @deprecated(reason: "Please use the relevant generic filter 'directedMoviesConnection: { none: { node: ... } } }' instead.")
  """
  Return Actor2s where one of the related Actor2DirectedMoviesConnections match this filter
  """
  directedMoviesConnection_SINGLE: Actor2DirectedMoviesConnectionWhere @deprecated(reason: "Please use the relevant generic filter 'directedMoviesConnection: { single: { node: ... } } }' instead.")
  """
  Return Actor2s where some of the related Actor2DirectedMoviesConnections match this filter
  """
  directedMoviesConnection_SOME: Actor2DirectedMoviesConnectionWhere @deprecated(reason: "Please use the relevant generic filter 'directedMoviesConnection: { some: { node: ... } } }' instead.")
  """Return Actor2s where all of the related Movies match this filter"""
  directedMovies_ALL: MovieWhere @deprecated(reason: "Please use the relevant generic filter 'directedMovies: { all: ... }' instead.")
  """Return Actor2s where none of the related Movies match this filter"""
  directedMovies_NONE: MovieWhere @deprecated(reason: "Please use the relevant generic filter 'directedMovies: { none: ... }' instead.")
  """Return Actor2s where one of the related Movies match this filter"""
  directedMovies_SINGLE: MovieWhere @deprecated(reason: "Please use the relevant generic filter 'directedMovies: {  single: ... }' instead.")
  """Return Actor2s where some of the related Movies match this filter"""
  directedMovies_SOME: MovieWhere @deprecated(reason: "Please use the relevant generic filter 'directedMovies: {  some: ... }' instead.")
  imdbId: StringScalarFilters
  imdbId_CONTAINS: String @deprecated(reason: "Please use the relevant generic filter imdbId: { contains: ... }")
  imdbId_ENDS_WITH: String @deprecated(reason: "Please use the relevant generic filter imdbId: { endsWith: ... }")
  imdbId_EQ: String @deprecated(reason: "Please use the relevant generic filter imdbId: { eq: ... }")
  imdbId_IN: [String] @deprecated(reason: "Please use the relevant generic filter imdbId: { in: ... }")
  imdbId_STARTS_WITH: String @deprecated(reason: "Please use the relevant generic filter imdbId: { startsWith: ... }")
  name: StringScalarFilters
  name_CONTAINS: String @deprecated(reason: "Please use the relevant generic filter name: { contains: ... }")
  name_ENDS_WITH: String @deprecated(reason: "Please use the relevant generic filter name: { endsWith: ... }")
  name_EQ: String @deprecated(reason: "Please use the relevant generic filter name: { eq: ... }")
  name_IN: [String!] @deprecated(reason: "Please use the relevant generic filter name: { in: ... }")
  name_STARTS_WITH: String @deprecated(reason: "Please use the relevant generic filter name: { startsWith: ... }")
  poster: StringScalarFilters
  poster_CONTAINS: String @deprecated(reason: "Please use the relevant generic filter poster: { contains: ... }")
  poster_ENDS_WITH: String @deprecated(reason: "Please use the relevant generic filter poster: { endsWith: ... }")
  poster_EQ: String @deprecated(reason: "Please use the relevant generic filter poster: { eq: ... }")
  poster_IN: [String] @deprecated(reason: "Please use the relevant generic filter poster: { in: ... }")
  poster_STARTS_WITH: String @deprecated(reason: "Please use the relevant generic filter poster: { startsWith: ... }")
  tmdbId: StringScalarFilters
  tmdbId_CONTAINS: String @deprecated(reason: "Please use the relevant generic filter tmdbId: { contains: ... }")
  tmdbId_ENDS_WITH: String @deprecated(reason: "Please use the relevant generic filter tmdbId: { endsWith: ... }")
  tmdbId_EQ: String @deprecated(reason: "Please use the relevant generic filter tmdbId: { eq: ... }")
  tmdbId_IN: [String!] @deprecated(reason: "Please use the relevant generic filter tmdbId: { in: ... }")
  tmdbId_STARTS_WITH: String @deprecated(reason: "Please use the relevant generic filter tmdbId: { startsWith: ... }")
  url: StringScalarFilters
  url_CONTAINS: String @deprecated(reason: "Please use the relevant generic filter url: { contains: ... }")
  url_ENDS_WITH: String @deprecated(reason: "Please use the relevant generic filter url: { endsWith: ... }")
  url_EQ: String @deprecated(reason: "Please use the relevant generic filter url: { eq: ... }")
  url_IN: [String!] @deprecated(reason: "Please use the relevant generic filter url: { in: ... }")
  url_STARTS_WITH: String @deprecated(reason: "Please use the relevant generic filter url: { startsWith: ... }")
}

type Actor2sConnection {
  aggregate: Actor2Aggregate!
  edges: [Actor2Edge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input ActorActedInMoviesAggregateInput {
  AND: [ActorActedInMoviesAggregateInput!]
  NOT: ActorActedInMoviesAggregateInput
  OR: [ActorActedInMoviesAggregateInput!]
  count: IntScalarFilters
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  edge: ActedInPropertiesAggregationWhereInput
  node: ActorActedInMoviesNodeAggregationWhereInput
}

input ActorActedInMoviesConnectFieldInput {
  connect: [MovieConnectInput!]
  edge: ActedInPropertiesCreateInput
  where: MovieConnectWhere
}

type ActorActedInMoviesConnection {
  aggregate: ActorMovieActedInMoviesAggregateSelection!
  edges: [ActorActedInMoviesRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input ActorActedInMoviesConnectionAggregateInput {
  AND: [ActorActedInMoviesConnectionAggregateInput!]
  NOT: ActorActedInMoviesConnectionAggregateInput
  OR: [ActorActedInMoviesConnectionAggregateInput!]
  count: ConnectionAggregationCountFilterInput
  edge: ActedInPropertiesAggregationWhereInput
  node: ActorActedInMoviesNodeAggregationWhereInput
}

input ActorActedInMoviesConnectionFilters {
  """
  Filter Actors by aggregating results on related ActorActedInMoviesConnections
  """
  aggregate: ActorActedInMoviesConnectionAggregateInput
  """
  Return Actors where all of the related ActorActedInMoviesConnections match this filter
  """
  all: ActorActedInMoviesConnectionWhere
  """
  Return Actors where none of the related ActorActedInMoviesConnections match this filter
  """
  none: ActorActedInMoviesConnectionWhere
  """
  Return Actors where one of the related ActorActedInMoviesConnections match this filter
  """
  single: ActorActedInMoviesConnectionWhere
  """
  Return Actors where some of the related ActorActedInMoviesConnections match this filter
  """
  some: ActorActedInMoviesConnectionWhere
}

input ActorActedInMoviesConnectionSort {
  edge: ActedInPropertiesSort
  node: MovieSort
}

input ActorActedInMoviesConnectionWhere {
  AND: [ActorActedInMoviesConnectionWhere!]
  NOT: ActorActedInMoviesConnectionWhere
  OR: [ActorActedInMoviesConnectionWhere!]
  edge: ActedInPropertiesWhere
  node: MovieWhere
}

input ActorActedInMoviesCreateFieldInput {
  edge: ActedInPropertiesCreateInput
  node: MovieCreateInput!
}

input ActorActedInMoviesDeleteFieldInput {
  delete: MovieDeleteInput
  where: ActorActedInMoviesConnectionWhere
}

input ActorActedInMoviesDisconnectFieldInput {
  disconnect: MovieDisconnectInput
  where: ActorActedInMoviesConnectionWhere
}

input ActorActedInMoviesFieldInput {
  connect: [ActorActedInMoviesConnectFieldInput!]
  create: [ActorActedInMoviesCreateFieldInput!]
}

input ActorActedInMoviesNodeAggregationWhereInput {
  AND: [ActorActedInMoviesNodeAggregationWhereInput!]
  NOT: ActorActedInMoviesNodeAggregationWhereInput
  OR: [ActorActedInMoviesNodeAggregationWhereInput!]
  budget: BigIntScalarAggregationFilters
  budget_AVERAGE_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { average: { eq: ... } } }' instead.")
  budget_AVERAGE_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { average: { gt: ... } } }' instead.")
  budget_AVERAGE_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { average: { gte: ... } } }' instead.")
  budget_AVERAGE_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { average: { lt: ... } } }' instead.")
  budget_AVERAGE_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { average: { lte: ... } } }' instead.")
  budget_MAX_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { max: { eq: ... } } }' instead.")
  budget_MAX_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { max: { gt: ... } } }' instead.")
  budget_MAX_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { max: { gte: ... } } }' instead.")
  budget_MAX_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { max: { lt: ... } } }' instead.")
  budget_MAX_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { max: { lte: ... } } }' instead.")
  budget_MIN_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { min: { eq: ... } } }' instead.")
  budget_MIN_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { min: { gt: ... } } }' instead.")
  budget_MIN_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { min: { gte: ... } } }' instead.")
  budget_MIN_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { min: { lt: ... } } }' instead.")
  budget_MIN_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { min: { lte: ... } } }' instead.")
  budget_SUM_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { sum: { eq: ... } } }' instead.")
  budget_SUM_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { sum: { gt: ... } } }' instead.")
  budget_SUM_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { sum: { gte: ... } } }' instead.")
  budget_SUM_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { sum: { lt: ... } } }' instead.")
  budget_SUM_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { sum: { lte: ... } } }' instead.")
  imdbId: StringScalarAggregationFilters
  imdbId_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'imdbId: { averageLength: { eq: ... } } }' instead.")
  imdbId_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbId: { averageLength: { gt: ... } } }' instead.")
  imdbId_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbId: { averageLength: { gte: ... } } }' instead.")
  imdbId_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbId: { averageLength: { lt: ... } } }' instead.")
  imdbId_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbId: { averageLength: { lte: ... } } }' instead.")
  imdbId_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { longestLength: { eq: ... } } }' instead.")
  imdbId_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { longestLength: { gt: ... } } }' instead.")
  imdbId_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { longestLength: { gte: ... } } }' instead.")
  imdbId_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { longestLength: { lt: ... } } }' instead.")
  imdbId_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { longestLength: { lte: ... } } }' instead.")
  imdbId_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { shortestLength: { eq: ... } } }' instead.")
  imdbId_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { shortestLength: { gt: ... } } }' instead.")
  imdbId_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { shortestLength: { gte: ... } } }' instead.")
  imdbId_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { shortestLength: { lt: ... } } }' instead.")
  imdbId_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { shortestLength: { lte: ... } } }' instead.")
  imdbRating: FloatScalarAggregationFilters
  imdbRating_AVERAGE_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { average: { eq: ... } } }' instead.")
  imdbRating_AVERAGE_GT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { average: { gt: ... } } }' instead.")
  imdbRating_AVERAGE_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { average: { gte: ... } } }' instead.")
  imdbRating_AVERAGE_LT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { average: { lt: ... } } }' instead.")
  imdbRating_AVERAGE_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { average: { lte: ... } } }' instead.")
  imdbRating_MAX_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { max: { eq: ... } } }' instead.")
  imdbRating_MAX_GT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { max: { gt: ... } } }' instead.")
  imdbRating_MAX_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { max: { gte: ... } } }' instead.")
  imdbRating_MAX_LT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { max: { lt: ... } } }' instead.")
  imdbRating_MAX_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { max: { lte: ... } } }' instead.")
  imdbRating_MIN_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { min: { eq: ... } } }' instead.")
  imdbRating_MIN_GT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { min: { gt: ... } } }' instead.")
  imdbRating_MIN_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { min: { gte: ... } } }' instead.")
  imdbRating_MIN_LT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { min: { lt: ... } } }' instead.")
  imdbRating_MIN_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { min: { lte: ... } } }' instead.")
  imdbRating_SUM_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { sum: { eq: ... } } }' instead.")
  imdbRating_SUM_GT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { sum: { gt: ... } } }' instead.")
  imdbRating_SUM_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { sum: { gte: ... } } }' instead.")
  imdbRating_SUM_LT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { sum: { lt: ... } } }' instead.")
  imdbRating_SUM_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { sum: { lte: ... } } }' instead.")
  imdbVotes: BigIntScalarAggregationFilters
  imdbVotes_AVERAGE_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { average: { eq: ... } } }' instead.")
  imdbVotes_AVERAGE_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { average: { gt: ... } } }' instead.")
  imdbVotes_AVERAGE_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { average: { gte: ... } } }' instead.")
  imdbVotes_AVERAGE_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { average: { lt: ... } } }' instead.")
  imdbVotes_AVERAGE_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { average: { lte: ... } } }' instead.")
  imdbVotes_MAX_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { max: { eq: ... } } }' instead.")
  imdbVotes_MAX_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { max: { gt: ... } } }' instead.")
  imdbVotes_MAX_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { max: { gte: ... } } }' instead.")
  imdbVotes_MAX_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { max: { lt: ... } } }' instead.")
  imdbVotes_MAX_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { max: { lte: ... } } }' instead.")
  imdbVotes_MIN_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { min: { eq: ... } } }' instead.")
  imdbVotes_MIN_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { min: { gt: ... } } }' instead.")
  imdbVotes_MIN_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { min: { gte: ... } } }' instead.")
  imdbVotes_MIN_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { min: { lt: ... } } }' instead.")
  imdbVotes_MIN_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { min: { lte: ... } } }' instead.")
  imdbVotes_SUM_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { sum: { eq: ... } } }' instead.")
  imdbVotes_SUM_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { sum: { gt: ... } } }' instead.")
  imdbVotes_SUM_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { sum: { gte: ... } } }' instead.")
  imdbVotes_SUM_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { sum: { lt: ... } } }' instead.")
  imdbVotes_SUM_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { sum: { lte: ... } } }' instead.")
  movieId: StringScalarAggregationFilters
  movieId_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'movieId: { averageLength: { eq: ... } } }' instead.")
  movieId_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'movieId: { averageLength: { gt: ... } } }' instead.")
  movieId_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'movieId: { averageLength: { gte: ... } } }' instead.")
  movieId_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'movieId: { averageLength: { lt: ... } } }' instead.")
  movieId_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'movieId: { averageLength: { lte: ... } } }' instead.")
  movieId_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { longestLength: { eq: ... } } }' instead.")
  movieId_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { longestLength: { gt: ... } } }' instead.")
  movieId_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { longestLength: { gte: ... } } }' instead.")
  movieId_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { longestLength: { lt: ... } } }' instead.")
  movieId_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { longestLength: { lte: ... } } }' instead.")
  movieId_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { shortestLength: { eq: ... } } }' instead.")
  movieId_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { shortestLength: { gt: ... } } }' instead.")
  movieId_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { shortestLength: { gte: ... } } }' instead.")
  movieId_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { shortestLength: { lt: ... } } }' instead.")
  movieId_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { shortestLength: { lte: ... } } }' instead.")
  plot: StringScalarAggregationFilters
  plot_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'plot: { averageLength: { eq: ... } } }' instead.")
  plot_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'plot: { averageLength: { gt: ... } } }' instead.")
  plot_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'plot: { averageLength: { gte: ... } } }' instead.")
  plot_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'plot: { averageLength: { lt: ... } } }' instead.")
  plot_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'plot: { averageLength: { lte: ... } } }' instead.")
  plot_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { longestLength: { eq: ... } } }' instead.")
  plot_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { longestLength: { gt: ... } } }' instead.")
  plot_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { longestLength: { gte: ... } } }' instead.")
  plot_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { longestLength: { lt: ... } } }' instead.")
  plot_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { longestLength: { lte: ... } } }' instead.")
  plot_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { shortestLength: { eq: ... } } }' instead.")
  plot_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { shortestLength: { gt: ... } } }' instead.")
  plot_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { shortestLength: { gte: ... } } }' instead.")
  plot_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { shortestLength: { lt: ... } } }' instead.")
  plot_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { shortestLength: { lte: ... } } }' instead.")
  poster: StringScalarAggregationFilters
  poster_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'poster: { averageLength: { eq: ... } } }' instead.")
  poster_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'poster: { averageLength: { gt: ... } } }' instead.")
  poster_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'poster: { averageLength: { gte: ... } } }' instead.")
  poster_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'poster: { averageLength: { lt: ... } } }' instead.")
  poster_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'poster: { averageLength: { lte: ... } } }' instead.")
  poster_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { longestLength: { eq: ... } } }' instead.")
  poster_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { longestLength: { gt: ... } } }' instead.")
  poster_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { longestLength: { gte: ... } } }' instead.")
  poster_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { longestLength: { lt: ... } } }' instead.")
  poster_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { longestLength: { lte: ... } } }' instead.")
  poster_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { shortestLength: { eq: ... } } }' instead.")
  poster_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { shortestLength: { gt: ... } } }' instead.")
  poster_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { shortestLength: { gte: ... } } }' instead.")
  poster_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { shortestLength: { lt: ... } } }' instead.")
  poster_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { shortestLength: { lte: ... } } }' instead.")
  released: StringScalarAggregationFilters
  released_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'released: { averageLength: { eq: ... } } }' instead.")
  released_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'released: { averageLength: { gt: ... } } }' instead.")
  released_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'released: { averageLength: { gte: ... } } }' instead.")
  released_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'released: { averageLength: { lt: ... } } }' instead.")
  released_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'released: { averageLength: { lte: ... } } }' instead.")
  released_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'released: { longestLength: { eq: ... } } }' instead.")
  released_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'released: { longestLength: { gt: ... } } }' instead.")
  released_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'released: { longestLength: { gte: ... } } }' instead.")
  released_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'released: { longestLength: { lt: ... } } }' instead.")
  released_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'released: { longestLength: { lte: ... } } }' instead.")
  released_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'released: { shortestLength: { eq: ... } } }' instead.")
  released_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'released: { shortestLength: { gt: ... } } }' instead.")
  released_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'released: { shortestLength: { gte: ... } } }' instead.")
  released_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'released: { shortestLength: { lt: ... } } }' instead.")
  released_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'released: { shortestLength: { lte: ... } } }' instead.")
  revenue: BigIntScalarAggregationFilters
  revenue_AVERAGE_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { average: { eq: ... } } }' instead.")
  revenue_AVERAGE_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { average: { gt: ... } } }' instead.")
  revenue_AVERAGE_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { average: { gte: ... } } }' instead.")
  revenue_AVERAGE_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { average: { lt: ... } } }' instead.")
  revenue_AVERAGE_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { average: { lte: ... } } }' instead.")
  revenue_MAX_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { max: { eq: ... } } }' instead.")
  revenue_MAX_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { max: { gt: ... } } }' instead.")
  revenue_MAX_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { max: { gte: ... } } }' instead.")
  revenue_MAX_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { max: { lt: ... } } }' instead.")
  revenue_MAX_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { max: { lte: ... } } }' instead.")
  revenue_MIN_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { min: { eq: ... } } }' instead.")
  revenue_MIN_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { min: { gt: ... } } }' instead.")
  revenue_MIN_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { min: { gte: ... } } }' instead.")
  revenue_MIN_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { min: { lt: ... } } }' instead.")
  revenue_MIN_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { min: { lte: ... } } }' instead.")
  revenue_SUM_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { sum: { eq: ... } } }' instead.")
  revenue_SUM_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { sum: { gt: ... } } }' instead.")
  revenue_SUM_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { sum: { gte: ... } } }' instead.")
  revenue_SUM_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { sum: { lt: ... } } }' instead.")
  revenue_SUM_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { sum: { lte: ... } } }' instead.")
  runtime: BigIntScalarAggregationFilters
  runtime_AVERAGE_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { average: { eq: ... } } }' instead.")
  runtime_AVERAGE_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { average: { gt: ... } } }' instead.")
  runtime_AVERAGE_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { average: { gte: ... } } }' instead.")
  runtime_AVERAGE_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { average: { lt: ... } } }' instead.")
  runtime_AVERAGE_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { average: { lte: ... } } }' instead.")
  runtime_MAX_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { max: { eq: ... } } }' instead.")
  runtime_MAX_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { max: { gt: ... } } }' instead.")
  runtime_MAX_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { max: { gte: ... } } }' instead.")
  runtime_MAX_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { max: { lt: ... } } }' instead.")
  runtime_MAX_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { max: { lte: ... } } }' instead.")
  runtime_MIN_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { min: { eq: ... } } }' instead.")
  runtime_MIN_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { min: { gt: ... } } }' instead.")
  runtime_MIN_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { min: { gte: ... } } }' instead.")
  runtime_MIN_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { min: { lt: ... } } }' instead.")
  runtime_MIN_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { min: { lte: ... } } }' instead.")
  runtime_SUM_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { sum: { eq: ... } } }' instead.")
  runtime_SUM_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { sum: { gt: ... } } }' instead.")
  runtime_SUM_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { sum: { gte: ... } } }' instead.")
  runtime_SUM_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { sum: { lt: ... } } }' instead.")
  runtime_SUM_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { sum: { lte: ... } } }' instead.")
  title: StringScalarAggregationFilters
  title_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'title: { averageLength: { eq: ... } } }' instead.")
  title_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'title: { averageLength: { gt: ... } } }' instead.")
  title_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'title: { averageLength: { gte: ... } } }' instead.")
  title_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'title: { averageLength: { lt: ... } } }' instead.")
  title_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'title: { averageLength: { lte: ... } } }' instead.")
  title_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'title: { longestLength: { eq: ... } } }' instead.")
  title_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'title: { longestLength: { gt: ... } } }' instead.")
  title_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'title: { longestLength: { gte: ... } } }' instead.")
  title_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'title: { longestLength: { lt: ... } } }' instead.")
  title_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'title: { longestLength: { lte: ... } } }' instead.")
  title_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'title: { shortestLength: { eq: ... } } }' instead.")
  title_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'title: { shortestLength: { gt: ... } } }' instead.")
  title_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'title: { shortestLength: { gte: ... } } }' instead.")
  title_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'title: { shortestLength: { lt: ... } } }' instead.")
  title_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'title: { shortestLength: { lte: ... } } }' instead.")
  tmdbId: StringScalarAggregationFilters
  tmdbId_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { averageLength: { eq: ... } } }' instead.")
  tmdbId_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { averageLength: { gt: ... } } }' instead.")
  tmdbId_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { averageLength: { gte: ... } } }' instead.")
  tmdbId_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { averageLength: { lt: ... } } }' instead.")
  tmdbId_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { averageLength: { lte: ... } } }' instead.")
  tmdbId_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { longestLength: { eq: ... } } }' instead.")
  tmdbId_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { longestLength: { gt: ... } } }' instead.")
  tmdbId_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { longestLength: { gte: ... } } }' instead.")
  tmdbId_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { longestLength: { lt: ... } } }' instead.")
  tmdbId_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { longestLength: { lte: ... } } }' instead.")
  tmdbId_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { shortestLength: { eq: ... } } }' instead.")
  tmdbId_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { shortestLength: { gt: ... } } }' instead.")
  tmdbId_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { shortestLength: { gte: ... } } }' instead.")
  tmdbId_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { shortestLength: { lt: ... } } }' instead.")
  tmdbId_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { shortestLength: { lte: ... } } }' instead.")
  url: StringScalarAggregationFilters
  url_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'url: { averageLength: { eq: ... } } }' instead.")
  url_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'url: { averageLength: { gt: ... } } }' instead.")
  url_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'url: { averageLength: { gte: ... } } }' instead.")
  url_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'url: { averageLength: { lt: ... } } }' instead.")
  url_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'url: { averageLength: { lte: ... } } }' instead.")
  url_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'url: { longestLength: { eq: ... } } }' instead.")
  url_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'url: { longestLength: { gt: ... } } }' instead.")
  url_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'url: { longestLength: { gte: ... } } }' instead.")
  url_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'url: { longestLength: { lt: ... } } }' instead.")
  url_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'url: { longestLength: { lte: ... } } }' instead.")
  url_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'url: { shortestLength: { eq: ... } } }' instead.")
  url_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'url: { shortestLength: { gt: ... } } }' instead.")
  url_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'url: { shortestLength: { gte: ... } } }' instead.")
  url_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'url: { shortestLength: { lt: ... } } }' instead.")
  url_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'url: { shortestLength: { lte: ... } } }' instead.")
  year: BigIntScalarAggregationFilters
  year_AVERAGE_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { average: { eq: ... } } }' instead.")
  year_AVERAGE_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { average: { gt: ... } } }' instead.")
  year_AVERAGE_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { average: { gte: ... } } }' instead.")
  year_AVERAGE_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { average: { lt: ... } } }' instead.")
  year_AVERAGE_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { average: { lte: ... } } }' instead.")
  year_MAX_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { max: { eq: ... } } }' instead.")
  year_MAX_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { max: { gt: ... } } }' instead.")
  year_MAX_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { max: { gte: ... } } }' instead.")
  year_MAX_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { max: { lt: ... } } }' instead.")
  year_MAX_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { max: { lte: ... } } }' instead.")
  year_MIN_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { min: { eq: ... } } }' instead.")
  year_MIN_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { min: { gt: ... } } }' instead.")
  year_MIN_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { min: { gte: ... } } }' instead.")
  year_MIN_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { min: { lt: ... } } }' instead.")
  year_MIN_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { min: { lte: ... } } }' instead.")
  year_SUM_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { sum: { eq: ... } } }' instead.")
  year_SUM_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { sum: { gt: ... } } }' instead.")
  year_SUM_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { sum: { gte: ... } } }' instead.")
  year_SUM_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { sum: { lt: ... } } }' instead.")
  year_SUM_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { sum: { lte: ... } } }' instead.")
}

type ActorActedInMoviesRelationship {
  cursor: String!
  node: Movie!
  properties: ActedInProperties!
}

input ActorActedInMoviesUpdateConnectionInput {
  edge: ActedInPropertiesUpdateInput
  node: MovieUpdateInput
  where: ActorActedInMoviesConnectionWhere
}

input ActorActedInMoviesUpdateFieldInput {
  connect: [ActorActedInMoviesConnectFieldInput!]
  create: [ActorActedInMoviesCreateFieldInput!]
  delete: [ActorActedInMoviesDeleteFieldInput!]
  disconnect: [ActorActedInMoviesDisconnectFieldInput!]
  update: ActorActedInMoviesUpdateConnectionInput
}

type ActorAggregate {
  count: Count!
  node: ActorAggregateNode!
}

type ActorAggregateNode {
  bio: StringAggregateSelection!
  bornIn: StringAggregateSelection!
  imdbId: StringAggregateSelection!
  name: StringAggregateSelection!
  poster: StringAggregateSelection!
  tmdbId: StringAggregateSelection!
  url: StringAggregateSelection!
}

input ActorConnectInput {
  actedInMovies: [ActorActedInMoviesConnectFieldInput!]
}

input ActorConnectWhere {
  node: ActorWhere!
}

input ActorCreateInput {
  actedInMovies: ActorActedInMoviesFieldInput
  bio: String
  born: Date
  bornIn: String
  died: Date
  imdbId: String
  name: String!
  poster: String
  tmdbId: String!
  url: String!
}

input ActorDeleteInput {
  actedInMovies: [ActorActedInMoviesDeleteFieldInput!]
}

input ActorDisconnectInput {
  actedInMovies: [ActorActedInMoviesDisconnectFieldInput!]
}

type ActorEdge {
  cursor: String!
  node: Actor!
}

type ActorMovieActedInMoviesAggregateSelection {
  count: CountConnection!
  edge: ActorMovieActedInMoviesEdgeAggregateSelection
  node: ActorMovieActedInMoviesNodeAggregateSelection
}

type ActorMovieActedInMoviesEdgeAggregateSelection {
  role: StringAggregateSelection!
}

type ActorMovieActedInMoviesNodeAggregateSelection {
  budget: BigIntAggregateSelection!
  imdbId: StringAggregateSelection!
  imdbRating: FloatAggregateSelection!
  imdbVotes: BigIntAggregateSelection!
  movieId: StringAggregateSelection!
  plot: StringAggregateSelection!
  poster: StringAggregateSelection!
  released: StringAggregateSelection!
  revenue: BigIntAggregateSelection!
  runtime: BigIntAggregateSelection!
  title: StringAggregateSelection!
  tmdbId: StringAggregateSelection!
  url: StringAggregateSelection!
  year: BigIntAggregateSelection!
}

input ActorRelationshipFilters {
  """Filter type where all of the related Actors match this filter"""
  all: ActorWhere
  """Filter type where none of the related Actors match this filter"""
  none: ActorWhere
  """Filter type where one of the related Actors match this filter"""
  single: ActorWhere
  """Filter type where some of the related Actors match this filter"""
  some: ActorWhere
}

"""
Fields to sort Actors by. The order in which sorts are applied is not guaranteed when specifying many fields in one ActorSort object.
"""
input ActorSort {
  bio: SortDirection
  born: SortDirection
  bornIn: SortDirection
  died: SortDirection
  imdbId: SortDirection
  name: SortDirection
  poster: SortDirection
  tmdbId: SortDirection
  url: SortDirection
}

input ActorUpdateInput {
  actedInMovies: [ActorActedInMoviesUpdateFieldInput!]
  bio: StringScalarMutations
  bio_SET: String
  born: DateScalarMutations
  bornIn: StringScalarMutations
  bornIn_SET: String
  born_SET: Date
  died: DateScalarMutations
  died_SET: Date
  imdbId: StringScalarMutations
  imdbId_SET: String
  name: StringScalarMutations
  name_SET: String
  poster: StringScalarMutations
  poster_SET: String
  tmdbId: StringScalarMutations
  tmdbId_SET: String
  url: StringScalarMutations
  url_SET: String
}

input ActorWhere {
  AND: [ActorWhere!]
  NOT: ActorWhere
  OR: [ActorWhere!]
  actedInMovies: MovieRelationshipFilters
  actedInMoviesAggregate: ActorActedInMoviesAggregateInput @deprecated(reason: "Aggregate filters are moved inside the actedInMoviesConnection filter, please use { actedInMoviesConnection: { aggregate: {...} } } instead")
  actedInMoviesConnection: ActorActedInMoviesConnectionFilters
  """
  Return Actors where all of the related ActorActedInMoviesConnections match this filter
  """
  actedInMoviesConnection_ALL: ActorActedInMoviesConnectionWhere @deprecated(reason: "Please use the relevant generic filter 'actedInMoviesConnection: { all: { node: ... } } }' instead.")
  """
  Return Actors where none of the related ActorActedInMoviesConnections match this filter
  """
  actedInMoviesConnection_NONE: ActorActedInMoviesConnectionWhere @deprecated(reason: "Please use the relevant generic filter 'actedInMoviesConnection: { none: { node: ... } } }' instead.")
  """
  Return Actors where one of the related ActorActedInMoviesConnections match this filter
  """
  actedInMoviesConnection_SINGLE: ActorActedInMoviesConnectionWhere @deprecated(reason: "Please use the relevant generic filter 'actedInMoviesConnection: { single: { node: ... } } }' instead.")
  """
  Return Actors where some of the related ActorActedInMoviesConnections match this filter
  """
  actedInMoviesConnection_SOME: ActorActedInMoviesConnectionWhere @deprecated(reason: "Please use the relevant generic filter 'actedInMoviesConnection: { some: { node: ... } } }' instead.")
  """Return Actors where all of the related Movies match this filter"""
  actedInMovies_ALL: MovieWhere @deprecated(reason: "Please use the relevant generic filter 'actedInMovies: { all: ... }' instead.")
  """Return Actors where none of the related Movies match this filter"""
  actedInMovies_NONE: MovieWhere @deprecated(reason: "Please use the relevant generic filter 'actedInMovies: { none: ... }' instead.")
  """Return Actors where one of the related Movies match this filter"""
  actedInMovies_SINGLE: MovieWhere @deprecated(reason: "Please use the relevant generic filter 'actedInMovies: {  single: ... }' instead.")
  """Return Actors where some of the related Movies match this filter"""
  actedInMovies_SOME: MovieWhere @deprecated(reason: "Please use the relevant generic filter 'actedInMovies: {  some: ... }' instead.")
  bio: StringScalarFilters
  bio_CONTAINS: String @deprecated(reason: "Please use the relevant generic filter bio: { contains: ... }")
  bio_ENDS_WITH: String @deprecated(reason: "Please use the relevant generic filter bio: { endsWith: ... }")
  bio_EQ: String @deprecated(reason: "Please use the relevant generic filter bio: { eq: ... }")
  bio_IN: [String] @deprecated(reason: "Please use the relevant generic filter bio: { in: ... }")
  bio_STARTS_WITH: String @deprecated(reason: "Please use the relevant generic filter bio: { startsWith: ... }")
  born: DateScalarFilters
  bornIn: StringScalarFilters
  bornIn_CONTAINS: String @deprecated(reason: "Please use the relevant generic filter bornIn: { contains: ... }")
  bornIn_ENDS_WITH: String @deprecated(reason: "Please use the relevant generic filter bornIn: { endsWith: ... }")
  bornIn_EQ: String @deprecated(reason: "Please use the relevant generic filter bornIn: { eq: ... }")
  bornIn_IN: [String] @deprecated(reason: "Please use the relevant generic filter bornIn: { in: ... }")
  bornIn_STARTS_WITH: String @deprecated(reason: "Please use the relevant generic filter bornIn: { startsWith: ... }")
  born_EQ: Date @deprecated(reason: "Please use the relevant generic filter born: { eq: ... }")
  born_GT: Date @deprecated(reason: "Please use the relevant generic filter born: { gt: ... }")
  born_GTE: Date @deprecated(reason: "Please use the relevant generic filter born: { gte: ... }")
  born_IN: [Date] @deprecated(reason: "Please use the relevant generic filter born: { in: ... }")
  born_LT: Date @deprecated(reason: "Please use the relevant generic filter born: { lt: ... }")
  born_LTE: Date @deprecated(reason: "Please use the relevant generic filter born: { lte: ... }")
  died: DateScalarFilters
  died_EQ: Date @deprecated(reason: "Please use the relevant generic filter died: { eq: ... }")
  died_GT: Date @deprecated(reason: "Please use the relevant generic filter died: { gt: ... }")
  died_GTE: Date @deprecated(reason: "Please use the relevant generic filter died: { gte: ... }")
  died_IN: [Date] @deprecated(reason: "Please use the relevant generic filter died: { in: ... }")
  died_LT: Date @deprecated(reason: "Please use the relevant generic filter died: { lt: ... }")
  died_LTE: Date @deprecated(reason: "Please use the relevant generic filter died: { lte: ... }")
  imdbId: StringScalarFilters
  imdbId_CONTAINS: String @deprecated(reason: "Please use the relevant generic filter imdbId: { contains: ... }")
  imdbId_ENDS_WITH: String @deprecated(reason: "Please use the relevant generic filter imdbId: { endsWith: ... }")
  imdbId_EQ: String @deprecated(reason: "Please use the relevant generic filter imdbId: { eq: ... }")
  imdbId_IN: [String] @deprecated(reason: "Please use the relevant generic filter imdbId: { in: ... }")
  imdbId_STARTS_WITH: String @deprecated(reason: "Please use the relevant generic filter imdbId: { startsWith: ... }")
  name: StringScalarFilters
  name_CONTAINS: String @deprecated(reason: "Please use the relevant generic filter name: { contains: ... }")
  name_ENDS_WITH: String @deprecated(reason: "Please use the relevant generic filter name: { endsWith: ... }")
  name_EQ: String @deprecated(reason: "Please use the relevant generic filter name: { eq: ... }")
  name_IN: [String!] @deprecated(reason: "Please use the relevant generic filter name: { in: ... }")
  name_STARTS_WITH: String @deprecated(reason: "Please use the relevant generic filter name: { startsWith: ... }")
  poster: StringScalarFilters
  poster_CONTAINS: String @deprecated(reason: "Please use the relevant generic filter poster: { contains: ... }")
  poster_ENDS_WITH: String @deprecated(reason: "Please use the relevant generic filter poster: { endsWith: ... }")
  poster_EQ: String @deprecated(reason: "Please use the relevant generic filter poster: { eq: ... }")
  poster_IN: [String] @deprecated(reason: "Please use the relevant generic filter poster: { in: ... }")
  poster_STARTS_WITH: String @deprecated(reason: "Please use the relevant generic filter poster: { startsWith: ... }")
  tmdbId: StringScalarFilters
  tmdbId_CONTAINS: String @deprecated(reason: "Please use the relevant generic filter tmdbId: { contains: ... }")
  tmdbId_ENDS_WITH: String @deprecated(reason: "Please use the relevant generic filter tmdbId: { endsWith: ... }")
  tmdbId_EQ: String @deprecated(reason: "Please use the relevant generic filter tmdbId: { eq: ... }")
  tmdbId_IN: [String!] @deprecated(reason: "Please use the relevant generic filter tmdbId: { in: ... }")
  tmdbId_STARTS_WITH: String @deprecated(reason: "Please use the relevant generic filter tmdbId: { startsWith: ... }")
  url: StringScalarFilters
  url_CONTAINS: String @deprecated(reason: "Please use the relevant generic filter url: { contains: ... }")
  url_ENDS_WITH: String @deprecated(reason: "Please use the relevant generic filter url: { endsWith: ... }")
  url_EQ: String @deprecated(reason: "Please use the relevant generic filter url: { eq: ... }")
  url_IN: [String!] @deprecated(reason: "Please use the relevant generic filter url: { in: ... }")
  url_STARTS_WITH: String @deprecated(reason: "Please use the relevant generic filter url: { startsWith: ... }")
}

type ActorsConnection {
  aggregate: ActorAggregate!
  edges: [ActorEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

"""
A BigInt value up to 64 bits in size, which can be a number or a string if used inline, or a string only if used as a variable. Always returned as a string.
"""
scalar BigInt

type BigIntAggregateSelection {
  average: BigInt
  max: BigInt
  min: BigInt
  sum: BigInt
}

"""Filters for an aggregation of an BigInt field"""
input BigIntScalarAggregationFilters {
  average: BigIntScalarFilters
  max: BigIntScalarFilters
  min: BigIntScalarFilters
  sum: BigIntScalarFilters
}

"""BigInt filters"""
input BigIntScalarFilters {
  eq: BigInt
  gt: BigInt
  gte: BigInt
  in: [BigInt!]
  lt: BigInt
  lte: BigInt
}

"""BigInt mutations"""
input BigIntScalarMutations {
  add: BigInt
  set: BigInt
  subtract: BigInt
}

input ConnectionAggregationCountFilterInput {
  edges: IntScalarFilters
  nodes: IntScalarFilters
}

type Count {
  nodes: Int!
}

type CountConnection {
  edges: Int!
  nodes: Int!
}

type CreateActor2sMutationResponse {
  actor2s: [Actor2!]!
  info: CreateInfo!
}

type CreateActorsMutationResponse {
  actors: [Actor!]!
  info: CreateInfo!
}

type CreateDirectorsMutationResponse {
  directors: [Director!]!
  info: CreateInfo!
}

type CreateGenresMutationResponse {
  genres: [Genre!]!
  info: CreateInfo!
}

"""
Information about the number of nodes and relationships created during a create mutation
"""
type CreateInfo {
  nodesCreated: Int!
  relationshipsCreated: Int!
}

type CreateMoviesMutationResponse {
  info: CreateInfo!
  movies: [Movie!]!
}

type CreateUsersMutationResponse {
  info: CreateInfo!
  users: [User!]!
}

type Create_bloomPerspectivesMutationResponse {
  _bloomPerspectives: [_Bloom_Perspective_!]!
  info: CreateInfo!
}

type Create_bloomScenesMutationResponse {
  _bloomScenes: [_Bloom_Scene_!]!
  info: CreateInfo!
}

"""A date, represented as a 'yyyy-mm-dd' string"""
scalar Date

"""Date filters"""
input DateScalarFilters {
  eq: Date
  gt: Date
  gte: Date
  in: [Date!]
  lt: Date
  lte: Date
}

"""Date mutations"""
input DateScalarMutations {
  set: Date
}

"""
Information about the number of nodes and relationships deleted during a delete mutation
"""
type DeleteInfo {
  nodesDeleted: Int!
  relationshipsDeleted: Int!
}

"""
The edge properties for the following fields:
* Actor2.directedMovies
* Director.directedMovies
* Movie.actor2SDirected
* Movie.directorsDirected
"""
type DirectedProperties @relationshipProperties @introspection {
  role: String @introspection
}

input DirectedPropertiesAggregationWhereInput {
  AND: [DirectedPropertiesAggregationWhereInput!]
  NOT: DirectedPropertiesAggregationWhereInput
  OR: [DirectedPropertiesAggregationWhereInput!]
  role: StringScalarAggregationFilters
  role_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'role: { averageLength: { eq: ... } } }' instead.")
  role_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'role: { averageLength: { gt: ... } } }' instead.")
  role_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'role: { averageLength: { gte: ... } } }' instead.")
  role_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'role: { averageLength: { lt: ... } } }' instead.")
  role_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'role: { averageLength: { lte: ... } } }' instead.")
  role_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'role: { longestLength: { eq: ... } } }' instead.")
  role_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'role: { longestLength: { gt: ... } } }' instead.")
  role_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'role: { longestLength: { gte: ... } } }' instead.")
  role_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'role: { longestLength: { lt: ... } } }' instead.")
  role_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'role: { longestLength: { lte: ... } } }' instead.")
  role_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'role: { shortestLength: { eq: ... } } }' instead.")
  role_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'role: { shortestLength: { gt: ... } } }' instead.")
  role_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'role: { shortestLength: { gte: ... } } }' instead.")
  role_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'role: { shortestLength: { lt: ... } } }' instead.")
  role_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'role: { shortestLength: { lte: ... } } }' instead.")
}

input DirectedPropertiesCreateInput {
  role: String
}

input DirectedPropertiesSort {
  role: SortDirection
}

input DirectedPropertiesUpdateInput {
  role: StringScalarMutations
  role_SET: String
}

input DirectedPropertiesWhere {
  AND: [DirectedPropertiesWhere!]
  NOT: DirectedPropertiesWhere
  OR: [DirectedPropertiesWhere!]
  role: StringScalarFilters
  role_CONTAINS: String @deprecated(reason: "Please use the relevant generic filter role: { contains: ... }")
  role_ENDS_WITH: String @deprecated(reason: "Please use the relevant generic filter role: { endsWith: ... }")
  role_EQ: String @deprecated(reason: "Please use the relevant generic filter role: { eq: ... }")
  role_IN: [String] @deprecated(reason: "Please use the relevant generic filter role: { in: ... }")
  role_STARTS_WITH: String @deprecated(reason: "Please use the relevant generic filter role: { startsWith: ... }")
}

type Director @introspection @node(labels: ["Director", "Person"]) {
  bio: String @introspection
  born: Date @introspection
  bornIn: String @introspection
  died: Date @introspection
  directedMovies(limit: Int, offset: Int, sort: [MovieSort!], where: MovieWhere): [Movie!]! @introspection @relationship(type: "DIRECTED", direction: OUT, properties: "DirectedProperties")
  directedMoviesConnection(after: String, first: Int, sort: [DirectorDirectedMoviesConnectionSort!], where: DirectorDirectedMoviesConnectionWhere): DirectorDirectedMoviesConnection!
  imdbId: String @introspection
  name: String! @introspection
  poster: String @introspection
  tmdbId: String! @introspection
  url: String! @introspection
}

type DirectorAggregate {
  count: Count!
  node: DirectorAggregateNode!
}

type DirectorAggregateNode {
  bio: StringAggregateSelection!
  bornIn: StringAggregateSelection!
  imdbId: StringAggregateSelection!
  name: StringAggregateSelection!
  poster: StringAggregateSelection!
  tmdbId: StringAggregateSelection!
  url: StringAggregateSelection!
}

input DirectorConnectInput {
  directedMovies: [DirectorDirectedMoviesConnectFieldInput!]
}

input DirectorConnectWhere {
  node: DirectorWhere!
}

input DirectorCreateInput {
  bio: String
  born: Date
  bornIn: String
  died: Date
  directedMovies: DirectorDirectedMoviesFieldInput
  imdbId: String
  name: String!
  poster: String
  tmdbId: String!
  url: String!
}

input DirectorDeleteInput {
  directedMovies: [DirectorDirectedMoviesDeleteFieldInput!]
}

input DirectorDirectedMoviesAggregateInput {
  AND: [DirectorDirectedMoviesAggregateInput!]
  NOT: DirectorDirectedMoviesAggregateInput
  OR: [DirectorDirectedMoviesAggregateInput!]
  count: IntScalarFilters
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  edge: DirectedPropertiesAggregationWhereInput
  node: DirectorDirectedMoviesNodeAggregationWhereInput
}

input DirectorDirectedMoviesConnectFieldInput {
  connect: [MovieConnectInput!]
  edge: DirectedPropertiesCreateInput
  where: MovieConnectWhere
}

type DirectorDirectedMoviesConnection {
  aggregate: DirectorMovieDirectedMoviesAggregateSelection!
  edges: [DirectorDirectedMoviesRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input DirectorDirectedMoviesConnectionAggregateInput {
  AND: [DirectorDirectedMoviesConnectionAggregateInput!]
  NOT: DirectorDirectedMoviesConnectionAggregateInput
  OR: [DirectorDirectedMoviesConnectionAggregateInput!]
  count: ConnectionAggregationCountFilterInput
  edge: DirectedPropertiesAggregationWhereInput
  node: DirectorDirectedMoviesNodeAggregationWhereInput
}

input DirectorDirectedMoviesConnectionFilters {
  """
  Filter Directors by aggregating results on related DirectorDirectedMoviesConnections
  """
  aggregate: DirectorDirectedMoviesConnectionAggregateInput
  """
  Return Directors where all of the related DirectorDirectedMoviesConnections match this filter
  """
  all: DirectorDirectedMoviesConnectionWhere
  """
  Return Directors where none of the related DirectorDirectedMoviesConnections match this filter
  """
  none: DirectorDirectedMoviesConnectionWhere
  """
  Return Directors where one of the related DirectorDirectedMoviesConnections match this filter
  """
  single: DirectorDirectedMoviesConnectionWhere
  """
  Return Directors where some of the related DirectorDirectedMoviesConnections match this filter
  """
  some: DirectorDirectedMoviesConnectionWhere
}

input DirectorDirectedMoviesConnectionSort {
  edge: DirectedPropertiesSort
  node: MovieSort
}

input DirectorDirectedMoviesConnectionWhere {
  AND: [DirectorDirectedMoviesConnectionWhere!]
  NOT: DirectorDirectedMoviesConnectionWhere
  OR: [DirectorDirectedMoviesConnectionWhere!]
  edge: DirectedPropertiesWhere
  node: MovieWhere
}

input DirectorDirectedMoviesCreateFieldInput {
  edge: DirectedPropertiesCreateInput
  node: MovieCreateInput!
}

input DirectorDirectedMoviesDeleteFieldInput {
  delete: MovieDeleteInput
  where: DirectorDirectedMoviesConnectionWhere
}

input DirectorDirectedMoviesDisconnectFieldInput {
  disconnect: MovieDisconnectInput
  where: DirectorDirectedMoviesConnectionWhere
}

input DirectorDirectedMoviesFieldInput {
  connect: [DirectorDirectedMoviesConnectFieldInput!]
  create: [DirectorDirectedMoviesCreateFieldInput!]
}

input DirectorDirectedMoviesNodeAggregationWhereInput {
  AND: [DirectorDirectedMoviesNodeAggregationWhereInput!]
  NOT: DirectorDirectedMoviesNodeAggregationWhereInput
  OR: [DirectorDirectedMoviesNodeAggregationWhereInput!]
  budget: BigIntScalarAggregationFilters
  budget_AVERAGE_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { average: { eq: ... } } }' instead.")
  budget_AVERAGE_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { average: { gt: ... } } }' instead.")
  budget_AVERAGE_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { average: { gte: ... } } }' instead.")
  budget_AVERAGE_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { average: { lt: ... } } }' instead.")
  budget_AVERAGE_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { average: { lte: ... } } }' instead.")
  budget_MAX_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { max: { eq: ... } } }' instead.")
  budget_MAX_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { max: { gt: ... } } }' instead.")
  budget_MAX_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { max: { gte: ... } } }' instead.")
  budget_MAX_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { max: { lt: ... } } }' instead.")
  budget_MAX_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { max: { lte: ... } } }' instead.")
  budget_MIN_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { min: { eq: ... } } }' instead.")
  budget_MIN_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { min: { gt: ... } } }' instead.")
  budget_MIN_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { min: { gte: ... } } }' instead.")
  budget_MIN_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { min: { lt: ... } } }' instead.")
  budget_MIN_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { min: { lte: ... } } }' instead.")
  budget_SUM_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { sum: { eq: ... } } }' instead.")
  budget_SUM_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { sum: { gt: ... } } }' instead.")
  budget_SUM_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { sum: { gte: ... } } }' instead.")
  budget_SUM_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { sum: { lt: ... } } }' instead.")
  budget_SUM_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { sum: { lte: ... } } }' instead.")
  imdbId: StringScalarAggregationFilters
  imdbId_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'imdbId: { averageLength: { eq: ... } } }' instead.")
  imdbId_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbId: { averageLength: { gt: ... } } }' instead.")
  imdbId_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbId: { averageLength: { gte: ... } } }' instead.")
  imdbId_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbId: { averageLength: { lt: ... } } }' instead.")
  imdbId_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbId: { averageLength: { lte: ... } } }' instead.")
  imdbId_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { longestLength: { eq: ... } } }' instead.")
  imdbId_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { longestLength: { gt: ... } } }' instead.")
  imdbId_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { longestLength: { gte: ... } } }' instead.")
  imdbId_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { longestLength: { lt: ... } } }' instead.")
  imdbId_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { longestLength: { lte: ... } } }' instead.")
  imdbId_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { shortestLength: { eq: ... } } }' instead.")
  imdbId_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { shortestLength: { gt: ... } } }' instead.")
  imdbId_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { shortestLength: { gte: ... } } }' instead.")
  imdbId_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { shortestLength: { lt: ... } } }' instead.")
  imdbId_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { shortestLength: { lte: ... } } }' instead.")
  imdbRating: FloatScalarAggregationFilters
  imdbRating_AVERAGE_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { average: { eq: ... } } }' instead.")
  imdbRating_AVERAGE_GT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { average: { gt: ... } } }' instead.")
  imdbRating_AVERAGE_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { average: { gte: ... } } }' instead.")
  imdbRating_AVERAGE_LT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { average: { lt: ... } } }' instead.")
  imdbRating_AVERAGE_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { average: { lte: ... } } }' instead.")
  imdbRating_MAX_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { max: { eq: ... } } }' instead.")
  imdbRating_MAX_GT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { max: { gt: ... } } }' instead.")
  imdbRating_MAX_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { max: { gte: ... } } }' instead.")
  imdbRating_MAX_LT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { max: { lt: ... } } }' instead.")
  imdbRating_MAX_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { max: { lte: ... } } }' instead.")
  imdbRating_MIN_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { min: { eq: ... } } }' instead.")
  imdbRating_MIN_GT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { min: { gt: ... } } }' instead.")
  imdbRating_MIN_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { min: { gte: ... } } }' instead.")
  imdbRating_MIN_LT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { min: { lt: ... } } }' instead.")
  imdbRating_MIN_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { min: { lte: ... } } }' instead.")
  imdbRating_SUM_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { sum: { eq: ... } } }' instead.")
  imdbRating_SUM_GT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { sum: { gt: ... } } }' instead.")
  imdbRating_SUM_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { sum: { gte: ... } } }' instead.")
  imdbRating_SUM_LT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { sum: { lt: ... } } }' instead.")
  imdbRating_SUM_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { sum: { lte: ... } } }' instead.")
  imdbVotes: BigIntScalarAggregationFilters
  imdbVotes_AVERAGE_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { average: { eq: ... } } }' instead.")
  imdbVotes_AVERAGE_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { average: { gt: ... } } }' instead.")
  imdbVotes_AVERAGE_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { average: { gte: ... } } }' instead.")
  imdbVotes_AVERAGE_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { average: { lt: ... } } }' instead.")
  imdbVotes_AVERAGE_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { average: { lte: ... } } }' instead.")
  imdbVotes_MAX_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { max: { eq: ... } } }' instead.")
  imdbVotes_MAX_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { max: { gt: ... } } }' instead.")
  imdbVotes_MAX_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { max: { gte: ... } } }' instead.")
  imdbVotes_MAX_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { max: { lt: ... } } }' instead.")
  imdbVotes_MAX_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { max: { lte: ... } } }' instead.")
  imdbVotes_MIN_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { min: { eq: ... } } }' instead.")
  imdbVotes_MIN_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { min: { gt: ... } } }' instead.")
  imdbVotes_MIN_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { min: { gte: ... } } }' instead.")
  imdbVotes_MIN_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { min: { lt: ... } } }' instead.")
  imdbVotes_MIN_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { min: { lte: ... } } }' instead.")
  imdbVotes_SUM_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { sum: { eq: ... } } }' instead.")
  imdbVotes_SUM_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { sum: { gt: ... } } }' instead.")
  imdbVotes_SUM_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { sum: { gte: ... } } }' instead.")
  imdbVotes_SUM_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { sum: { lt: ... } } }' instead.")
  imdbVotes_SUM_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { sum: { lte: ... } } }' instead.")
  movieId: StringScalarAggregationFilters
  movieId_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'movieId: { averageLength: { eq: ... } } }' instead.")
  movieId_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'movieId: { averageLength: { gt: ... } } }' instead.")
  movieId_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'movieId: { averageLength: { gte: ... } } }' instead.")
  movieId_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'movieId: { averageLength: { lt: ... } } }' instead.")
  movieId_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'movieId: { averageLength: { lte: ... } } }' instead.")
  movieId_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { longestLength: { eq: ... } } }' instead.")
  movieId_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { longestLength: { gt: ... } } }' instead.")
  movieId_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { longestLength: { gte: ... } } }' instead.")
  movieId_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { longestLength: { lt: ... } } }' instead.")
  movieId_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { longestLength: { lte: ... } } }' instead.")
  movieId_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { shortestLength: { eq: ... } } }' instead.")
  movieId_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { shortestLength: { gt: ... } } }' instead.")
  movieId_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { shortestLength: { gte: ... } } }' instead.")
  movieId_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { shortestLength: { lt: ... } } }' instead.")
  movieId_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { shortestLength: { lte: ... } } }' instead.")
  plot: StringScalarAggregationFilters
  plot_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'plot: { averageLength: { eq: ... } } }' instead.")
  plot_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'plot: { averageLength: { gt: ... } } }' instead.")
  plot_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'plot: { averageLength: { gte: ... } } }' instead.")
  plot_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'plot: { averageLength: { lt: ... } } }' instead.")
  plot_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'plot: { averageLength: { lte: ... } } }' instead.")
  plot_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { longestLength: { eq: ... } } }' instead.")
  plot_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { longestLength: { gt: ... } } }' instead.")
  plot_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { longestLength: { gte: ... } } }' instead.")
  plot_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { longestLength: { lt: ... } } }' instead.")
  plot_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { longestLength: { lte: ... } } }' instead.")
  plot_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { shortestLength: { eq: ... } } }' instead.")
  plot_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { shortestLength: { gt: ... } } }' instead.")
  plot_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { shortestLength: { gte: ... } } }' instead.")
  plot_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { shortestLength: { lt: ... } } }' instead.")
  plot_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { shortestLength: { lte: ... } } }' instead.")
  poster: StringScalarAggregationFilters
  poster_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'poster: { averageLength: { eq: ... } } }' instead.")
  poster_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'poster: { averageLength: { gt: ... } } }' instead.")
  poster_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'poster: { averageLength: { gte: ... } } }' instead.")
  poster_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'poster: { averageLength: { lt: ... } } }' instead.")
  poster_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'poster: { averageLength: { lte: ... } } }' instead.")
  poster_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { longestLength: { eq: ... } } }' instead.")
  poster_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { longestLength: { gt: ... } } }' instead.")
  poster_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { longestLength: { gte: ... } } }' instead.")
  poster_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { longestLength: { lt: ... } } }' instead.")
  poster_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { longestLength: { lte: ... } } }' instead.")
  poster_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { shortestLength: { eq: ... } } }' instead.")
  poster_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { shortestLength: { gt: ... } } }' instead.")
  poster_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { shortestLength: { gte: ... } } }' instead.")
  poster_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { shortestLength: { lt: ... } } }' instead.")
  poster_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { shortestLength: { lte: ... } } }' instead.")
  released: StringScalarAggregationFilters
  released_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'released: { averageLength: { eq: ... } } }' instead.")
  released_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'released: { averageLength: { gt: ... } } }' instead.")
  released_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'released: { averageLength: { gte: ... } } }' instead.")
  released_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'released: { averageLength: { lt: ... } } }' instead.")
  released_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'released: { averageLength: { lte: ... } } }' instead.")
  released_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'released: { longestLength: { eq: ... } } }' instead.")
  released_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'released: { longestLength: { gt: ... } } }' instead.")
  released_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'released: { longestLength: { gte: ... } } }' instead.")
  released_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'released: { longestLength: { lt: ... } } }' instead.")
  released_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'released: { longestLength: { lte: ... } } }' instead.")
  released_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'released: { shortestLength: { eq: ... } } }' instead.")
  released_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'released: { shortestLength: { gt: ... } } }' instead.")
  released_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'released: { shortestLength: { gte: ... } } }' instead.")
  released_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'released: { shortestLength: { lt: ... } } }' instead.")
  released_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'released: { shortestLength: { lte: ... } } }' instead.")
  revenue: BigIntScalarAggregationFilters
  revenue_AVERAGE_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { average: { eq: ... } } }' instead.")
  revenue_AVERAGE_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { average: { gt: ... } } }' instead.")
  revenue_AVERAGE_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { average: { gte: ... } } }' instead.")
  revenue_AVERAGE_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { average: { lt: ... } } }' instead.")
  revenue_AVERAGE_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { average: { lte: ... } } }' instead.")
  revenue_MAX_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { max: { eq: ... } } }' instead.")
  revenue_MAX_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { max: { gt: ... } } }' instead.")
  revenue_MAX_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { max: { gte: ... } } }' instead.")
  revenue_MAX_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { max: { lt: ... } } }' instead.")
  revenue_MAX_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { max: { lte: ... } } }' instead.")
  revenue_MIN_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { min: { eq: ... } } }' instead.")
  revenue_MIN_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { min: { gt: ... } } }' instead.")
  revenue_MIN_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { min: { gte: ... } } }' instead.")
  revenue_MIN_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { min: { lt: ... } } }' instead.")
  revenue_MIN_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { min: { lte: ... } } }' instead.")
  revenue_SUM_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { sum: { eq: ... } } }' instead.")
  revenue_SUM_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { sum: { gt: ... } } }' instead.")
  revenue_SUM_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { sum: { gte: ... } } }' instead.")
  revenue_SUM_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { sum: { lt: ... } } }' instead.")
  revenue_SUM_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { sum: { lte: ... } } }' instead.")
  runtime: BigIntScalarAggregationFilters
  runtime_AVERAGE_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { average: { eq: ... } } }' instead.")
  runtime_AVERAGE_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { average: { gt: ... } } }' instead.")
  runtime_AVERAGE_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { average: { gte: ... } } }' instead.")
  runtime_AVERAGE_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { average: { lt: ... } } }' instead.")
  runtime_AVERAGE_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { average: { lte: ... } } }' instead.")
  runtime_MAX_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { max: { eq: ... } } }' instead.")
  runtime_MAX_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { max: { gt: ... } } }' instead.")
  runtime_MAX_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { max: { gte: ... } } }' instead.")
  runtime_MAX_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { max: { lt: ... } } }' instead.")
  runtime_MAX_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { max: { lte: ... } } }' instead.")
  runtime_MIN_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { min: { eq: ... } } }' instead.")
  runtime_MIN_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { min: { gt: ... } } }' instead.")
  runtime_MIN_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { min: { gte: ... } } }' instead.")
  runtime_MIN_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { min: { lt: ... } } }' instead.")
  runtime_MIN_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { min: { lte: ... } } }' instead.")
  runtime_SUM_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { sum: { eq: ... } } }' instead.")
  runtime_SUM_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { sum: { gt: ... } } }' instead.")
  runtime_SUM_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { sum: { gte: ... } } }' instead.")
  runtime_SUM_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { sum: { lt: ... } } }' instead.")
  runtime_SUM_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { sum: { lte: ... } } }' instead.")
  title: StringScalarAggregationFilters
  title_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'title: { averageLength: { eq: ... } } }' instead.")
  title_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'title: { averageLength: { gt: ... } } }' instead.")
  title_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'title: { averageLength: { gte: ... } } }' instead.")
  title_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'title: { averageLength: { lt: ... } } }' instead.")
  title_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'title: { averageLength: { lte: ... } } }' instead.")
  title_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'title: { longestLength: { eq: ... } } }' instead.")
  title_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'title: { longestLength: { gt: ... } } }' instead.")
  title_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'title: { longestLength: { gte: ... } } }' instead.")
  title_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'title: { longestLength: { lt: ... } } }' instead.")
  title_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'title: { longestLength: { lte: ... } } }' instead.")
  title_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'title: { shortestLength: { eq: ... } } }' instead.")
  title_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'title: { shortestLength: { gt: ... } } }' instead.")
  title_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'title: { shortestLength: { gte: ... } } }' instead.")
  title_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'title: { shortestLength: { lt: ... } } }' instead.")
  title_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'title: { shortestLength: { lte: ... } } }' instead.")
  tmdbId: StringScalarAggregationFilters
  tmdbId_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { averageLength: { eq: ... } } }' instead.")
  tmdbId_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { averageLength: { gt: ... } } }' instead.")
  tmdbId_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { averageLength: { gte: ... } } }' instead.")
  tmdbId_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { averageLength: { lt: ... } } }' instead.")
  tmdbId_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { averageLength: { lte: ... } } }' instead.")
  tmdbId_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { longestLength: { eq: ... } } }' instead.")
  tmdbId_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { longestLength: { gt: ... } } }' instead.")
  tmdbId_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { longestLength: { gte: ... } } }' instead.")
  tmdbId_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { longestLength: { lt: ... } } }' instead.")
  tmdbId_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { longestLength: { lte: ... } } }' instead.")
  tmdbId_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { shortestLength: { eq: ... } } }' instead.")
  tmdbId_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { shortestLength: { gt: ... } } }' instead.")
  tmdbId_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { shortestLength: { gte: ... } } }' instead.")
  tmdbId_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { shortestLength: { lt: ... } } }' instead.")
  tmdbId_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { shortestLength: { lte: ... } } }' instead.")
  url: StringScalarAggregationFilters
  url_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'url: { averageLength: { eq: ... } } }' instead.")
  url_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'url: { averageLength: { gt: ... } } }' instead.")
  url_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'url: { averageLength: { gte: ... } } }' instead.")
  url_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'url: { averageLength: { lt: ... } } }' instead.")
  url_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'url: { averageLength: { lte: ... } } }' instead.")
  url_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'url: { longestLength: { eq: ... } } }' instead.")
  url_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'url: { longestLength: { gt: ... } } }' instead.")
  url_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'url: { longestLength: { gte: ... } } }' instead.")
  url_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'url: { longestLength: { lt: ... } } }' instead.")
  url_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'url: { longestLength: { lte: ... } } }' instead.")
  url_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'url: { shortestLength: { eq: ... } } }' instead.")
  url_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'url: { shortestLength: { gt: ... } } }' instead.")
  url_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'url: { shortestLength: { gte: ... } } }' instead.")
  url_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'url: { shortestLength: { lt: ... } } }' instead.")
  url_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'url: { shortestLength: { lte: ... } } }' instead.")
  year: BigIntScalarAggregationFilters
  year_AVERAGE_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { average: { eq: ... } } }' instead.")
  year_AVERAGE_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { average: { gt: ... } } }' instead.")
  year_AVERAGE_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { average: { gte: ... } } }' instead.")
  year_AVERAGE_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { average: { lt: ... } } }' instead.")
  year_AVERAGE_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { average: { lte: ... } } }' instead.")
  year_MAX_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { max: { eq: ... } } }' instead.")
  year_MAX_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { max: { gt: ... } } }' instead.")
  year_MAX_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { max: { gte: ... } } }' instead.")
  year_MAX_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { max: { lt: ... } } }' instead.")
  year_MAX_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { max: { lte: ... } } }' instead.")
  year_MIN_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { min: { eq: ... } } }' instead.")
  year_MIN_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { min: { gt: ... } } }' instead.")
  year_MIN_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { min: { gte: ... } } }' instead.")
  year_MIN_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { min: { lt: ... } } }' instead.")
  year_MIN_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { min: { lte: ... } } }' instead.")
  year_SUM_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { sum: { eq: ... } } }' instead.")
  year_SUM_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { sum: { gt: ... } } }' instead.")
  year_SUM_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { sum: { gte: ... } } }' instead.")
  year_SUM_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { sum: { lt: ... } } }' instead.")
  year_SUM_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { sum: { lte: ... } } }' instead.")
}

type DirectorDirectedMoviesRelationship {
  cursor: String!
  node: Movie!
  properties: DirectedProperties!
}

input DirectorDirectedMoviesUpdateConnectionInput {
  edge: DirectedPropertiesUpdateInput
  node: MovieUpdateInput
  where: DirectorDirectedMoviesConnectionWhere
}

input DirectorDirectedMoviesUpdateFieldInput {
  connect: [DirectorDirectedMoviesConnectFieldInput!]
  create: [DirectorDirectedMoviesCreateFieldInput!]
  delete: [DirectorDirectedMoviesDeleteFieldInput!]
  disconnect: [DirectorDirectedMoviesDisconnectFieldInput!]
  update: DirectorDirectedMoviesUpdateConnectionInput
}

input DirectorDisconnectInput {
  directedMovies: [DirectorDirectedMoviesDisconnectFieldInput!]
}

type DirectorEdge {
  cursor: String!
  node: Director!
}

type DirectorMovieDirectedMoviesAggregateSelection {
  count: CountConnection!
  edge: DirectorMovieDirectedMoviesEdgeAggregateSelection
  node: DirectorMovieDirectedMoviesNodeAggregateSelection
}

type DirectorMovieDirectedMoviesEdgeAggregateSelection {
  role: StringAggregateSelection!
}

type DirectorMovieDirectedMoviesNodeAggregateSelection {
  budget: BigIntAggregateSelection!
  imdbId: StringAggregateSelection!
  imdbRating: FloatAggregateSelection!
  imdbVotes: BigIntAggregateSelection!
  movieId: StringAggregateSelection!
  plot: StringAggregateSelection!
  poster: StringAggregateSelection!
  released: StringAggregateSelection!
  revenue: BigIntAggregateSelection!
  runtime: BigIntAggregateSelection!
  title: StringAggregateSelection!
  tmdbId: StringAggregateSelection!
  url: StringAggregateSelection!
  year: BigIntAggregateSelection!
}

input DirectorRelationshipFilters {
  """Filter type where all of the related Directors match this filter"""
  all: DirectorWhere
  """Filter type where none of the related Directors match this filter"""
  none: DirectorWhere
  """Filter type where one of the related Directors match this filter"""
  single: DirectorWhere
  """Filter type where some of the related Directors match this filter"""
  some: DirectorWhere
}

"""
Fields to sort Directors by. The order in which sorts are applied is not guaranteed when specifying many fields in one DirectorSort object.
"""
input DirectorSort {
  bio: SortDirection
  born: SortDirection
  bornIn: SortDirection
  died: SortDirection
  imdbId: SortDirection
  name: SortDirection
  poster: SortDirection
  tmdbId: SortDirection
  url: SortDirection
}

input DirectorUpdateInput {
  bio: StringScalarMutations
  bio_SET: String
  born: DateScalarMutations
  bornIn: StringScalarMutations
  bornIn_SET: String
  born_SET: Date
  died: DateScalarMutations
  died_SET: Date
  directedMovies: [DirectorDirectedMoviesUpdateFieldInput!]
  imdbId: StringScalarMutations
  imdbId_SET: String
  name: StringScalarMutations
  name_SET: String
  poster: StringScalarMutations
  poster_SET: String
  tmdbId: StringScalarMutations
  tmdbId_SET: String
  url: StringScalarMutations
  url_SET: String
}

input DirectorWhere {
  AND: [DirectorWhere!]
  NOT: DirectorWhere
  OR: [DirectorWhere!]
  bio: StringScalarFilters
  bio_CONTAINS: String @deprecated(reason: "Please use the relevant generic filter bio: { contains: ... }")
  bio_ENDS_WITH: String @deprecated(reason: "Please use the relevant generic filter bio: { endsWith: ... }")
  bio_EQ: String @deprecated(reason: "Please use the relevant generic filter bio: { eq: ... }")
  bio_IN: [String] @deprecated(reason: "Please use the relevant generic filter bio: { in: ... }")
  bio_STARTS_WITH: String @deprecated(reason: "Please use the relevant generic filter bio: { startsWith: ... }")
  born: DateScalarFilters
  bornIn: StringScalarFilters
  bornIn_CONTAINS: String @deprecated(reason: "Please use the relevant generic filter bornIn: { contains: ... }")
  bornIn_ENDS_WITH: String @deprecated(reason: "Please use the relevant generic filter bornIn: { endsWith: ... }")
  bornIn_EQ: String @deprecated(reason: "Please use the relevant generic filter bornIn: { eq: ... }")
  bornIn_IN: [String] @deprecated(reason: "Please use the relevant generic filter bornIn: { in: ... }")
  bornIn_STARTS_WITH: String @deprecated(reason: "Please use the relevant generic filter bornIn: { startsWith: ... }")
  born_EQ: Date @deprecated(reason: "Please use the relevant generic filter born: { eq: ... }")
  born_GT: Date @deprecated(reason: "Please use the relevant generic filter born: { gt: ... }")
  born_GTE: Date @deprecated(reason: "Please use the relevant generic filter born: { gte: ... }")
  born_IN: [Date] @deprecated(reason: "Please use the relevant generic filter born: { in: ... }")
  born_LT: Date @deprecated(reason: "Please use the relevant generic filter born: { lt: ... }")
  born_LTE: Date @deprecated(reason: "Please use the relevant generic filter born: { lte: ... }")
  died: DateScalarFilters
  died_EQ: Date @deprecated(reason: "Please use the relevant generic filter died: { eq: ... }")
  died_GT: Date @deprecated(reason: "Please use the relevant generic filter died: { gt: ... }")
  died_GTE: Date @deprecated(reason: "Please use the relevant generic filter died: { gte: ... }")
  died_IN: [Date] @deprecated(reason: "Please use the relevant generic filter died: { in: ... }")
  died_LT: Date @deprecated(reason: "Please use the relevant generic filter died: { lt: ... }")
  died_LTE: Date @deprecated(reason: "Please use the relevant generic filter died: { lte: ... }")
  directedMovies: MovieRelationshipFilters
  directedMoviesAggregate: DirectorDirectedMoviesAggregateInput @deprecated(reason: "Aggregate filters are moved inside the directedMoviesConnection filter, please use { directedMoviesConnection: { aggregate: {...} } } instead")
  directedMoviesConnection: DirectorDirectedMoviesConnectionFilters
  """
  Return Directors where all of the related DirectorDirectedMoviesConnections match this filter
  """
  directedMoviesConnection_ALL: DirectorDirectedMoviesConnectionWhere @deprecated(reason: "Please use the relevant generic filter 'directedMoviesConnection: { all: { node: ... } } }' instead.")
  """
  Return Directors where none of the related DirectorDirectedMoviesConnections match this filter
  """
  directedMoviesConnection_NONE: DirectorDirectedMoviesConnectionWhere @deprecated(reason: "Please use the relevant generic filter 'directedMoviesConnection: { none: { node: ... } } }' instead.")
  """
  Return Directors where one of the related DirectorDirectedMoviesConnections match this filter
  """
  directedMoviesConnection_SINGLE: DirectorDirectedMoviesConnectionWhere @deprecated(reason: "Please use the relevant generic filter 'directedMoviesConnection: { single: { node: ... } } }' instead.")
  """
  Return Directors where some of the related DirectorDirectedMoviesConnections match this filter
  """
  directedMoviesConnection_SOME: DirectorDirectedMoviesConnectionWhere @deprecated(reason: "Please use the relevant generic filter 'directedMoviesConnection: { some: { node: ... } } }' instead.")
  """Return Directors where all of the related Movies match this filter"""
  directedMovies_ALL: MovieWhere @deprecated(reason: "Please use the relevant generic filter 'directedMovies: { all: ... }' instead.")
  """Return Directors where none of the related Movies match this filter"""
  directedMovies_NONE: MovieWhere @deprecated(reason: "Please use the relevant generic filter 'directedMovies: { none: ... }' instead.")
  """Return Directors where one of the related Movies match this filter"""
  directedMovies_SINGLE: MovieWhere @deprecated(reason: "Please use the relevant generic filter 'directedMovies: {  single: ... }' instead.")
  """Return Directors where some of the related Movies match this filter"""
  directedMovies_SOME: MovieWhere @deprecated(reason: "Please use the relevant generic filter 'directedMovies: {  some: ... }' instead.")
  imdbId: StringScalarFilters
  imdbId_CONTAINS: String @deprecated(reason: "Please use the relevant generic filter imdbId: { contains: ... }")
  imdbId_ENDS_WITH: String @deprecated(reason: "Please use the relevant generic filter imdbId: { endsWith: ... }")
  imdbId_EQ: String @deprecated(reason: "Please use the relevant generic filter imdbId: { eq: ... }")
  imdbId_IN: [String] @deprecated(reason: "Please use the relevant generic filter imdbId: { in: ... }")
  imdbId_STARTS_WITH: String @deprecated(reason: "Please use the relevant generic filter imdbId: { startsWith: ... }")
  name: StringScalarFilters
  name_CONTAINS: String @deprecated(reason: "Please use the relevant generic filter name: { contains: ... }")
  name_ENDS_WITH: String @deprecated(reason: "Please use the relevant generic filter name: { endsWith: ... }")
  name_EQ: String @deprecated(reason: "Please use the relevant generic filter name: { eq: ... }")
  name_IN: [String!] @deprecated(reason: "Please use the relevant generic filter name: { in: ... }")
  name_STARTS_WITH: String @deprecated(reason: "Please use the relevant generic filter name: { startsWith: ... }")
  poster: StringScalarFilters
  poster_CONTAINS: String @deprecated(reason: "Please use the relevant generic filter poster: { contains: ... }")
  poster_ENDS_WITH: String @deprecated(reason: "Please use the relevant generic filter poster: { endsWith: ... }")
  poster_EQ: String @deprecated(reason: "Please use the relevant generic filter poster: { eq: ... }")
  poster_IN: [String] @deprecated(reason: "Please use the relevant generic filter poster: { in: ... }")
  poster_STARTS_WITH: String @deprecated(reason: "Please use the relevant generic filter poster: { startsWith: ... }")
  tmdbId: StringScalarFilters
  tmdbId_CONTAINS: String @deprecated(reason: "Please use the relevant generic filter tmdbId: { contains: ... }")
  tmdbId_ENDS_WITH: String @deprecated(reason: "Please use the relevant generic filter tmdbId: { endsWith: ... }")
  tmdbId_EQ: String @deprecated(reason: "Please use the relevant generic filter tmdbId: { eq: ... }")
  tmdbId_IN: [String!] @deprecated(reason: "Please use the relevant generic filter tmdbId: { in: ... }")
  tmdbId_STARTS_WITH: String @deprecated(reason: "Please use the relevant generic filter tmdbId: { startsWith: ... }")
  url: StringScalarFilters
  url_CONTAINS: String @deprecated(reason: "Please use the relevant generic filter url: { contains: ... }")
  url_ENDS_WITH: String @deprecated(reason: "Please use the relevant generic filter url: { endsWith: ... }")
  url_EQ: String @deprecated(reason: "Please use the relevant generic filter url: { eq: ... }")
  url_IN: [String!] @deprecated(reason: "Please use the relevant generic filter url: { in: ... }")
  url_STARTS_WITH: String @deprecated(reason: "Please use the relevant generic filter url: { startsWith: ... }")
}

type DirectorsConnection {
  aggregate: DirectorAggregate!
  edges: [DirectorEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type FloatAggregateSelection {
  average: Float
  max: Float
  min: Float
  sum: Float
}

"""Float list filters"""
input FloatListFilters {
  eq: [Float!]
  includes: Float
}

"""Filters for an aggregation of a float field"""
input FloatScalarAggregationFilters {
  average: FloatScalarFilters
  max: FloatScalarFilters
  min: FloatScalarFilters
  sum: FloatScalarFilters
}

"""Float filters"""
input FloatScalarFilters {
  eq: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
}

"""Float mutations"""
input FloatScalarMutations {
  add: Float
  divide: Float
  multiply: Float
  set: Float
  subtract: Float
}

type Genre @introspection @node {
  moviesInGenre(limit: Int, offset: Int, sort: [MovieSort!], where: MovieWhere): [Movie!]! @introspection @relationship(type: "IN_GENRE", direction: IN)
  moviesInGenreConnection(after: String, first: Int, sort: [GenreMoviesInGenreConnectionSort!], where: GenreMoviesInGenreConnectionWhere): GenreMoviesInGenreConnection!
  name: String! @introspection
}

type GenreAggregate {
  count: Count!
  node: GenreAggregateNode!
}

type GenreAggregateNode {
  name: StringAggregateSelection!
}

input GenreConnectInput {
  moviesInGenre: [GenreMoviesInGenreConnectFieldInput!]
}

input GenreConnectWhere {
  node: GenreWhere!
}

input GenreCreateInput {
  moviesInGenre: GenreMoviesInGenreFieldInput
  name: String!
}

input GenreDeleteInput {
  moviesInGenre: [GenreMoviesInGenreDeleteFieldInput!]
}

input GenreDisconnectInput {
  moviesInGenre: [GenreMoviesInGenreDisconnectFieldInput!]
}

type GenreEdge {
  cursor: String!
  node: Genre!
}

type GenreMovieMoviesInGenreAggregateSelection {
  count: CountConnection!
  node: GenreMovieMoviesInGenreNodeAggregateSelection
}

type GenreMovieMoviesInGenreNodeAggregateSelection {
  budget: BigIntAggregateSelection!
  imdbId: StringAggregateSelection!
  imdbRating: FloatAggregateSelection!
  imdbVotes: BigIntAggregateSelection!
  movieId: StringAggregateSelection!
  plot: StringAggregateSelection!
  poster: StringAggregateSelection!
  released: StringAggregateSelection!
  revenue: BigIntAggregateSelection!
  runtime: BigIntAggregateSelection!
  title: StringAggregateSelection!
  tmdbId: StringAggregateSelection!
  url: StringAggregateSelection!
  year: BigIntAggregateSelection!
}

input GenreMoviesInGenreAggregateInput {
  AND: [GenreMoviesInGenreAggregateInput!]
  NOT: GenreMoviesInGenreAggregateInput
  OR: [GenreMoviesInGenreAggregateInput!]
  count: IntScalarFilters
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: GenreMoviesInGenreNodeAggregationWhereInput
}

input GenreMoviesInGenreConnectFieldInput {
  connect: [MovieConnectInput!]
  where: MovieConnectWhere
}

type GenreMoviesInGenreConnection {
  aggregate: GenreMovieMoviesInGenreAggregateSelection!
  edges: [GenreMoviesInGenreRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input GenreMoviesInGenreConnectionAggregateInput {
  AND: [GenreMoviesInGenreConnectionAggregateInput!]
  NOT: GenreMoviesInGenreConnectionAggregateInput
  OR: [GenreMoviesInGenreConnectionAggregateInput!]
  count: ConnectionAggregationCountFilterInput
  node: GenreMoviesInGenreNodeAggregationWhereInput
}

input GenreMoviesInGenreConnectionFilters {
  """
  Filter Genres by aggregating results on related GenreMoviesInGenreConnections
  """
  aggregate: GenreMoviesInGenreConnectionAggregateInput
  """
  Return Genres where all of the related GenreMoviesInGenreConnections match this filter
  """
  all: GenreMoviesInGenreConnectionWhere
  """
  Return Genres where none of the related GenreMoviesInGenreConnections match this filter
  """
  none: GenreMoviesInGenreConnectionWhere
  """
  Return Genres where one of the related GenreMoviesInGenreConnections match this filter
  """
  single: GenreMoviesInGenreConnectionWhere
  """
  Return Genres where some of the related GenreMoviesInGenreConnections match this filter
  """
  some: GenreMoviesInGenreConnectionWhere
}

input GenreMoviesInGenreConnectionSort {
  node: MovieSort
}

input GenreMoviesInGenreConnectionWhere {
  AND: [GenreMoviesInGenreConnectionWhere!]
  NOT: GenreMoviesInGenreConnectionWhere
  OR: [GenreMoviesInGenreConnectionWhere!]
  node: MovieWhere
}

input GenreMoviesInGenreCreateFieldInput {
  node: MovieCreateInput!
}

input GenreMoviesInGenreDeleteFieldInput {
  delete: MovieDeleteInput
  where: GenreMoviesInGenreConnectionWhere
}

input GenreMoviesInGenreDisconnectFieldInput {
  disconnect: MovieDisconnectInput
  where: GenreMoviesInGenreConnectionWhere
}

input GenreMoviesInGenreFieldInput {
  connect: [GenreMoviesInGenreConnectFieldInput!]
  create: [GenreMoviesInGenreCreateFieldInput!]
}

input GenreMoviesInGenreNodeAggregationWhereInput {
  AND: [GenreMoviesInGenreNodeAggregationWhereInput!]
  NOT: GenreMoviesInGenreNodeAggregationWhereInput
  OR: [GenreMoviesInGenreNodeAggregationWhereInput!]
  budget: BigIntScalarAggregationFilters
  budget_AVERAGE_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { average: { eq: ... } } }' instead.")
  budget_AVERAGE_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { average: { gt: ... } } }' instead.")
  budget_AVERAGE_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { average: { gte: ... } } }' instead.")
  budget_AVERAGE_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { average: { lt: ... } } }' instead.")
  budget_AVERAGE_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { average: { lte: ... } } }' instead.")
  budget_MAX_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { max: { eq: ... } } }' instead.")
  budget_MAX_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { max: { gt: ... } } }' instead.")
  budget_MAX_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { max: { gte: ... } } }' instead.")
  budget_MAX_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { max: { lt: ... } } }' instead.")
  budget_MAX_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { max: { lte: ... } } }' instead.")
  budget_MIN_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { min: { eq: ... } } }' instead.")
  budget_MIN_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { min: { gt: ... } } }' instead.")
  budget_MIN_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { min: { gte: ... } } }' instead.")
  budget_MIN_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { min: { lt: ... } } }' instead.")
  budget_MIN_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { min: { lte: ... } } }' instead.")
  budget_SUM_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { sum: { eq: ... } } }' instead.")
  budget_SUM_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { sum: { gt: ... } } }' instead.")
  budget_SUM_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { sum: { gte: ... } } }' instead.")
  budget_SUM_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { sum: { lt: ... } } }' instead.")
  budget_SUM_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { sum: { lte: ... } } }' instead.")
  imdbId: StringScalarAggregationFilters
  imdbId_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'imdbId: { averageLength: { eq: ... } } }' instead.")
  imdbId_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbId: { averageLength: { gt: ... } } }' instead.")
  imdbId_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbId: { averageLength: { gte: ... } } }' instead.")
  imdbId_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbId: { averageLength: { lt: ... } } }' instead.")
  imdbId_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbId: { averageLength: { lte: ... } } }' instead.")
  imdbId_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { longestLength: { eq: ... } } }' instead.")
  imdbId_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { longestLength: { gt: ... } } }' instead.")
  imdbId_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { longestLength: { gte: ... } } }' instead.")
  imdbId_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { longestLength: { lt: ... } } }' instead.")
  imdbId_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { longestLength: { lte: ... } } }' instead.")
  imdbId_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { shortestLength: { eq: ... } } }' instead.")
  imdbId_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { shortestLength: { gt: ... } } }' instead.")
  imdbId_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { shortestLength: { gte: ... } } }' instead.")
  imdbId_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { shortestLength: { lt: ... } } }' instead.")
  imdbId_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { shortestLength: { lte: ... } } }' instead.")
  imdbRating: FloatScalarAggregationFilters
  imdbRating_AVERAGE_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { average: { eq: ... } } }' instead.")
  imdbRating_AVERAGE_GT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { average: { gt: ... } } }' instead.")
  imdbRating_AVERAGE_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { average: { gte: ... } } }' instead.")
  imdbRating_AVERAGE_LT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { average: { lt: ... } } }' instead.")
  imdbRating_AVERAGE_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { average: { lte: ... } } }' instead.")
  imdbRating_MAX_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { max: { eq: ... } } }' instead.")
  imdbRating_MAX_GT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { max: { gt: ... } } }' instead.")
  imdbRating_MAX_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { max: { gte: ... } } }' instead.")
  imdbRating_MAX_LT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { max: { lt: ... } } }' instead.")
  imdbRating_MAX_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { max: { lte: ... } } }' instead.")
  imdbRating_MIN_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { min: { eq: ... } } }' instead.")
  imdbRating_MIN_GT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { min: { gt: ... } } }' instead.")
  imdbRating_MIN_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { min: { gte: ... } } }' instead.")
  imdbRating_MIN_LT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { min: { lt: ... } } }' instead.")
  imdbRating_MIN_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { min: { lte: ... } } }' instead.")
  imdbRating_SUM_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { sum: { eq: ... } } }' instead.")
  imdbRating_SUM_GT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { sum: { gt: ... } } }' instead.")
  imdbRating_SUM_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { sum: { gte: ... } } }' instead.")
  imdbRating_SUM_LT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { sum: { lt: ... } } }' instead.")
  imdbRating_SUM_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { sum: { lte: ... } } }' instead.")
  imdbVotes: BigIntScalarAggregationFilters
  imdbVotes_AVERAGE_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { average: { eq: ... } } }' instead.")
  imdbVotes_AVERAGE_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { average: { gt: ... } } }' instead.")
  imdbVotes_AVERAGE_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { average: { gte: ... } } }' instead.")
  imdbVotes_AVERAGE_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { average: { lt: ... } } }' instead.")
  imdbVotes_AVERAGE_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { average: { lte: ... } } }' instead.")
  imdbVotes_MAX_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { max: { eq: ... } } }' instead.")
  imdbVotes_MAX_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { max: { gt: ... } } }' instead.")
  imdbVotes_MAX_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { max: { gte: ... } } }' instead.")
  imdbVotes_MAX_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { max: { lt: ... } } }' instead.")
  imdbVotes_MAX_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { max: { lte: ... } } }' instead.")
  imdbVotes_MIN_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { min: { eq: ... } } }' instead.")
  imdbVotes_MIN_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { min: { gt: ... } } }' instead.")
  imdbVotes_MIN_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { min: { gte: ... } } }' instead.")
  imdbVotes_MIN_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { min: { lt: ... } } }' instead.")
  imdbVotes_MIN_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { min: { lte: ... } } }' instead.")
  imdbVotes_SUM_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { sum: { eq: ... } } }' instead.")
  imdbVotes_SUM_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { sum: { gt: ... } } }' instead.")
  imdbVotes_SUM_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { sum: { gte: ... } } }' instead.")
  imdbVotes_SUM_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { sum: { lt: ... } } }' instead.")
  imdbVotes_SUM_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { sum: { lte: ... } } }' instead.")
  movieId: StringScalarAggregationFilters
  movieId_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'movieId: { averageLength: { eq: ... } } }' instead.")
  movieId_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'movieId: { averageLength: { gt: ... } } }' instead.")
  movieId_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'movieId: { averageLength: { gte: ... } } }' instead.")
  movieId_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'movieId: { averageLength: { lt: ... } } }' instead.")
  movieId_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'movieId: { averageLength: { lte: ... } } }' instead.")
  movieId_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { longestLength: { eq: ... } } }' instead.")
  movieId_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { longestLength: { gt: ... } } }' instead.")
  movieId_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { longestLength: { gte: ... } } }' instead.")
  movieId_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { longestLength: { lt: ... } } }' instead.")
  movieId_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { longestLength: { lte: ... } } }' instead.")
  movieId_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { shortestLength: { eq: ... } } }' instead.")
  movieId_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { shortestLength: { gt: ... } } }' instead.")
  movieId_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { shortestLength: { gte: ... } } }' instead.")
  movieId_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { shortestLength: { lt: ... } } }' instead.")
  movieId_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { shortestLength: { lte: ... } } }' instead.")
  plot: StringScalarAggregationFilters
  plot_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'plot: { averageLength: { eq: ... } } }' instead.")
  plot_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'plot: { averageLength: { gt: ... } } }' instead.")
  plot_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'plot: { averageLength: { gte: ... } } }' instead.")
  plot_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'plot: { averageLength: { lt: ... } } }' instead.")
  plot_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'plot: { averageLength: { lte: ... } } }' instead.")
  plot_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { longestLength: { eq: ... } } }' instead.")
  plot_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { longestLength: { gt: ... } } }' instead.")
  plot_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { longestLength: { gte: ... } } }' instead.")
  plot_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { longestLength: { lt: ... } } }' instead.")
  plot_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { longestLength: { lte: ... } } }' instead.")
  plot_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { shortestLength: { eq: ... } } }' instead.")
  plot_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { shortestLength: { gt: ... } } }' instead.")
  plot_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { shortestLength: { gte: ... } } }' instead.")
  plot_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { shortestLength: { lt: ... } } }' instead.")
  plot_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { shortestLength: { lte: ... } } }' instead.")
  poster: StringScalarAggregationFilters
  poster_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'poster: { averageLength: { eq: ... } } }' instead.")
  poster_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'poster: { averageLength: { gt: ... } } }' instead.")
  poster_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'poster: { averageLength: { gte: ... } } }' instead.")
  poster_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'poster: { averageLength: { lt: ... } } }' instead.")
  poster_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'poster: { averageLength: { lte: ... } } }' instead.")
  poster_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { longestLength: { eq: ... } } }' instead.")
  poster_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { longestLength: { gt: ... } } }' instead.")
  poster_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { longestLength: { gte: ... } } }' instead.")
  poster_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { longestLength: { lt: ... } } }' instead.")
  poster_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { longestLength: { lte: ... } } }' instead.")
  poster_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { shortestLength: { eq: ... } } }' instead.")
  poster_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { shortestLength: { gt: ... } } }' instead.")
  poster_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { shortestLength: { gte: ... } } }' instead.")
  poster_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { shortestLength: { lt: ... } } }' instead.")
  poster_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { shortestLength: { lte: ... } } }' instead.")
  released: StringScalarAggregationFilters
  released_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'released: { averageLength: { eq: ... } } }' instead.")
  released_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'released: { averageLength: { gt: ... } } }' instead.")
  released_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'released: { averageLength: { gte: ... } } }' instead.")
  released_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'released: { averageLength: { lt: ... } } }' instead.")
  released_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'released: { averageLength: { lte: ... } } }' instead.")
  released_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'released: { longestLength: { eq: ... } } }' instead.")
  released_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'released: { longestLength: { gt: ... } } }' instead.")
  released_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'released: { longestLength: { gte: ... } } }' instead.")
  released_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'released: { longestLength: { lt: ... } } }' instead.")
  released_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'released: { longestLength: { lte: ... } } }' instead.")
  released_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'released: { shortestLength: { eq: ... } } }' instead.")
  released_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'released: { shortestLength: { gt: ... } } }' instead.")
  released_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'released: { shortestLength: { gte: ... } } }' instead.")
  released_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'released: { shortestLength: { lt: ... } } }' instead.")
  released_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'released: { shortestLength: { lte: ... } } }' instead.")
  revenue: BigIntScalarAggregationFilters
  revenue_AVERAGE_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { average: { eq: ... } } }' instead.")
  revenue_AVERAGE_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { average: { gt: ... } } }' instead.")
  revenue_AVERAGE_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { average: { gte: ... } } }' instead.")
  revenue_AVERAGE_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { average: { lt: ... } } }' instead.")
  revenue_AVERAGE_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { average: { lte: ... } } }' instead.")
  revenue_MAX_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { max: { eq: ... } } }' instead.")
  revenue_MAX_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { max: { gt: ... } } }' instead.")
  revenue_MAX_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { max: { gte: ... } } }' instead.")
  revenue_MAX_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { max: { lt: ... } } }' instead.")
  revenue_MAX_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { max: { lte: ... } } }' instead.")
  revenue_MIN_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { min: { eq: ... } } }' instead.")
  revenue_MIN_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { min: { gt: ... } } }' instead.")
  revenue_MIN_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { min: { gte: ... } } }' instead.")
  revenue_MIN_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { min: { lt: ... } } }' instead.")
  revenue_MIN_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { min: { lte: ... } } }' instead.")
  revenue_SUM_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { sum: { eq: ... } } }' instead.")
  revenue_SUM_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { sum: { gt: ... } } }' instead.")
  revenue_SUM_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { sum: { gte: ... } } }' instead.")
  revenue_SUM_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { sum: { lt: ... } } }' instead.")
  revenue_SUM_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { sum: { lte: ... } } }' instead.")
  runtime: BigIntScalarAggregationFilters
  runtime_AVERAGE_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { average: { eq: ... } } }' instead.")
  runtime_AVERAGE_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { average: { gt: ... } } }' instead.")
  runtime_AVERAGE_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { average: { gte: ... } } }' instead.")
  runtime_AVERAGE_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { average: { lt: ... } } }' instead.")
  runtime_AVERAGE_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { average: { lte: ... } } }' instead.")
  runtime_MAX_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { max: { eq: ... } } }' instead.")
  runtime_MAX_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { max: { gt: ... } } }' instead.")
  runtime_MAX_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { max: { gte: ... } } }' instead.")
  runtime_MAX_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { max: { lt: ... } } }' instead.")
  runtime_MAX_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { max: { lte: ... } } }' instead.")
  runtime_MIN_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { min: { eq: ... } } }' instead.")
  runtime_MIN_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { min: { gt: ... } } }' instead.")
  runtime_MIN_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { min: { gte: ... } } }' instead.")
  runtime_MIN_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { min: { lt: ... } } }' instead.")
  runtime_MIN_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { min: { lte: ... } } }' instead.")
  runtime_SUM_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { sum: { eq: ... } } }' instead.")
  runtime_SUM_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { sum: { gt: ... } } }' instead.")
  runtime_SUM_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { sum: { gte: ... } } }' instead.")
  runtime_SUM_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { sum: { lt: ... } } }' instead.")
  runtime_SUM_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { sum: { lte: ... } } }' instead.")
  title: StringScalarAggregationFilters
  title_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'title: { averageLength: { eq: ... } } }' instead.")
  title_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'title: { averageLength: { gt: ... } } }' instead.")
  title_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'title: { averageLength: { gte: ... } } }' instead.")
  title_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'title: { averageLength: { lt: ... } } }' instead.")
  title_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'title: { averageLength: { lte: ... } } }' instead.")
  title_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'title: { longestLength: { eq: ... } } }' instead.")
  title_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'title: { longestLength: { gt: ... } } }' instead.")
  title_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'title: { longestLength: { gte: ... } } }' instead.")
  title_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'title: { longestLength: { lt: ... } } }' instead.")
  title_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'title: { longestLength: { lte: ... } } }' instead.")
  title_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'title: { shortestLength: { eq: ... } } }' instead.")
  title_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'title: { shortestLength: { gt: ... } } }' instead.")
  title_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'title: { shortestLength: { gte: ... } } }' instead.")
  title_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'title: { shortestLength: { lt: ... } } }' instead.")
  title_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'title: { shortestLength: { lte: ... } } }' instead.")
  tmdbId: StringScalarAggregationFilters
  tmdbId_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { averageLength: { eq: ... } } }' instead.")
  tmdbId_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { averageLength: { gt: ... } } }' instead.")
  tmdbId_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { averageLength: { gte: ... } } }' instead.")
  tmdbId_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { averageLength: { lt: ... } } }' instead.")
  tmdbId_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { averageLength: { lte: ... } } }' instead.")
  tmdbId_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { longestLength: { eq: ... } } }' instead.")
  tmdbId_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { longestLength: { gt: ... } } }' instead.")
  tmdbId_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { longestLength: { gte: ... } } }' instead.")
  tmdbId_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { longestLength: { lt: ... } } }' instead.")
  tmdbId_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { longestLength: { lte: ... } } }' instead.")
  tmdbId_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { shortestLength: { eq: ... } } }' instead.")
  tmdbId_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { shortestLength: { gt: ... } } }' instead.")
  tmdbId_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { shortestLength: { gte: ... } } }' instead.")
  tmdbId_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { shortestLength: { lt: ... } } }' instead.")
  tmdbId_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { shortestLength: { lte: ... } } }' instead.")
  url: StringScalarAggregationFilters
  url_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'url: { averageLength: { eq: ... } } }' instead.")
  url_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'url: { averageLength: { gt: ... } } }' instead.")
  url_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'url: { averageLength: { gte: ... } } }' instead.")
  url_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'url: { averageLength: { lt: ... } } }' instead.")
  url_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'url: { averageLength: { lte: ... } } }' instead.")
  url_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'url: { longestLength: { eq: ... } } }' instead.")
  url_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'url: { longestLength: { gt: ... } } }' instead.")
  url_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'url: { longestLength: { gte: ... } } }' instead.")
  url_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'url: { longestLength: { lt: ... } } }' instead.")
  url_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'url: { longestLength: { lte: ... } } }' instead.")
  url_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'url: { shortestLength: { eq: ... } } }' instead.")
  url_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'url: { shortestLength: { gt: ... } } }' instead.")
  url_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'url: { shortestLength: { gte: ... } } }' instead.")
  url_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'url: { shortestLength: { lt: ... } } }' instead.")
  url_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'url: { shortestLength: { lte: ... } } }' instead.")
  year: BigIntScalarAggregationFilters
  year_AVERAGE_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { average: { eq: ... } } }' instead.")
  year_AVERAGE_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { average: { gt: ... } } }' instead.")
  year_AVERAGE_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { average: { gte: ... } } }' instead.")
  year_AVERAGE_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { average: { lt: ... } } }' instead.")
  year_AVERAGE_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { average: { lte: ... } } }' instead.")
  year_MAX_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { max: { eq: ... } } }' instead.")
  year_MAX_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { max: { gt: ... } } }' instead.")
  year_MAX_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { max: { gte: ... } } }' instead.")
  year_MAX_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { max: { lt: ... } } }' instead.")
  year_MAX_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { max: { lte: ... } } }' instead.")
  year_MIN_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { min: { eq: ... } } }' instead.")
  year_MIN_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { min: { gt: ... } } }' instead.")
  year_MIN_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { min: { gte: ... } } }' instead.")
  year_MIN_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { min: { lt: ... } } }' instead.")
  year_MIN_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { min: { lte: ... } } }' instead.")
  year_SUM_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { sum: { eq: ... } } }' instead.")
  year_SUM_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { sum: { gt: ... } } }' instead.")
  year_SUM_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { sum: { gte: ... } } }' instead.")
  year_SUM_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { sum: { lt: ... } } }' instead.")
  year_SUM_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { sum: { lte: ... } } }' instead.")
}

type GenreMoviesInGenreRelationship {
  cursor: String!
  node: Movie!
}

input GenreMoviesInGenreUpdateConnectionInput {
  node: MovieUpdateInput
  where: GenreMoviesInGenreConnectionWhere
}

input GenreMoviesInGenreUpdateFieldInput {
  connect: [GenreMoviesInGenreConnectFieldInput!]
  create: [GenreMoviesInGenreCreateFieldInput!]
  delete: [GenreMoviesInGenreDeleteFieldInput!]
  disconnect: [GenreMoviesInGenreDisconnectFieldInput!]
  update: GenreMoviesInGenreUpdateConnectionInput
}

input GenreRelationshipFilters {
  """Filter type where all of the related Genres match this filter"""
  all: GenreWhere
  """Filter type where none of the related Genres match this filter"""
  none: GenreWhere
  """Filter type where one of the related Genres match this filter"""
  single: GenreWhere
  """Filter type where some of the related Genres match this filter"""
  some: GenreWhere
}

"""
Fields to sort Genres by. The order in which sorts are applied is not guaranteed when specifying many fields in one GenreSort object.
"""
input GenreSort {
  name: SortDirection
}

input GenreUpdateInput {
  moviesInGenre: [GenreMoviesInGenreUpdateFieldInput!]
  name: StringScalarMutations
  name_SET: String
}

input GenreWhere {
  AND: [GenreWhere!]
  NOT: GenreWhere
  OR: [GenreWhere!]
  moviesInGenre: MovieRelationshipFilters
  moviesInGenreAggregate: GenreMoviesInGenreAggregateInput @deprecated(reason: "Aggregate filters are moved inside the moviesInGenreConnection filter, please use { moviesInGenreConnection: { aggregate: {...} } } instead")
  moviesInGenreConnection: GenreMoviesInGenreConnectionFilters
  """
  Return Genres where all of the related GenreMoviesInGenreConnections match this filter
  """
  moviesInGenreConnection_ALL: GenreMoviesInGenreConnectionWhere @deprecated(reason: "Please use the relevant generic filter 'moviesInGenreConnection: { all: { node: ... } } }' instead.")
  """
  Return Genres where none of the related GenreMoviesInGenreConnections match this filter
  """
  moviesInGenreConnection_NONE: GenreMoviesInGenreConnectionWhere @deprecated(reason: "Please use the relevant generic filter 'moviesInGenreConnection: { none: { node: ... } } }' instead.")
  """
  Return Genres where one of the related GenreMoviesInGenreConnections match this filter
  """
  moviesInGenreConnection_SINGLE: GenreMoviesInGenreConnectionWhere @deprecated(reason: "Please use the relevant generic filter 'moviesInGenreConnection: { single: { node: ... } } }' instead.")
  """
  Return Genres where some of the related GenreMoviesInGenreConnections match this filter
  """
  moviesInGenreConnection_SOME: GenreMoviesInGenreConnectionWhere @deprecated(reason: "Please use the relevant generic filter 'moviesInGenreConnection: { some: { node: ... } } }' instead.")
  """Return Genres where all of the related Movies match this filter"""
  moviesInGenre_ALL: MovieWhere @deprecated(reason: "Please use the relevant generic filter 'moviesInGenre: { all: ... }' instead.")
  """Return Genres where none of the related Movies match this filter"""
  moviesInGenre_NONE: MovieWhere @deprecated(reason: "Please use the relevant generic filter 'moviesInGenre: { none: ... }' instead.")
  """Return Genres where one of the related Movies match this filter"""
  moviesInGenre_SINGLE: MovieWhere @deprecated(reason: "Please use the relevant generic filter 'moviesInGenre: {  single: ... }' instead.")
  """Return Genres where some of the related Movies match this filter"""
  moviesInGenre_SOME: MovieWhere @deprecated(reason: "Please use the relevant generic filter 'moviesInGenre: {  some: ... }' instead.")
  name: StringScalarFilters
  name_CONTAINS: String @deprecated(reason: "Please use the relevant generic filter name: { contains: ... }")
  name_ENDS_WITH: String @deprecated(reason: "Please use the relevant generic filter name: { endsWith: ... }")
  name_EQ: String @deprecated(reason: "Please use the relevant generic filter name: { eq: ... }")
  name_IN: [String!] @deprecated(reason: "Please use the relevant generic filter name: { in: ... }")
  name_STARTS_WITH: String @deprecated(reason: "Please use the relevant generic filter name: { startsWith: ... }")
}

type GenresConnection {
  aggregate: GenreAggregate!
  edges: [GenreEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

"""Int filters"""
input IntScalarFilters {
  eq: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
}

"""Mutations for a list for Float"""
input ListFloatMutations {
  pop: Int
  push: [Float!]
  set: [Float!]
}

"""Mutations for a list for String"""
input ListStringMutations {
  pop: Int
  push: [String!]
  set: [String!]
}

type Movie @introspection @node {
  actor2SActedIn(limit: Int, offset: Int, sort: [Actor2Sort!], where: Actor2Where): [Actor2!]! @introspection @relationship(type: "ACTED_IN", direction: IN, properties: "ActedInProperties")
  actor2SActedInConnection(after: String, first: Int, sort: [MovieActor2SActedInConnectionSort!], where: MovieActor2SActedInConnectionWhere): MovieActor2SActedInConnection!
  actor2SDirected(limit: Int, offset: Int, sort: [Actor2Sort!], where: Actor2Where): [Actor2!]! @introspection @relationship(type: "DIRECTED", direction: IN, properties: "DirectedProperties")
  actor2SDirectedConnection(after: String, first: Int, sort: [MovieActor2SDirectedConnectionSort!], where: MovieActor2SDirectedConnectionWhere): MovieActor2SDirectedConnection!
  actorsActedIn(limit: Int, offset: Int, sort: [ActorSort!], where: ActorWhere): [Actor!]! @introspection @relationship(type: "ACTED_IN", direction: IN, properties: "ActedInProperties")
  actorsActedInConnection(after: String, first: Int, sort: [MovieActorsActedInConnectionSort!], where: MovieActorsActedInConnectionWhere): MovieActorsActedInConnection!
  budget: BigInt @introspection
  countries: [String!] @introspection
  directorsDirected(limit: Int, offset: Int, sort: [DirectorSort!], where: DirectorWhere): [Director!]! @introspection @relationship(type: "DIRECTED", direction: IN, properties: "DirectedProperties")
  directorsDirectedConnection(after: String, first: Int, sort: [MovieDirectorsDirectedConnectionSort!], where: MovieDirectorsDirectedConnectionWhere): MovieDirectorsDirectedConnection!
  imdbId: String! @introspection
  imdbRating: Float @introspection
  imdbVotes: BigInt @introspection
  inGenreGenres(limit: Int, offset: Int, sort: [GenreSort!], where: GenreWhere): [Genre!]! @introspection @relationship(type: "IN_GENRE", direction: OUT)
  inGenreGenresConnection(after: String, first: Int, sort: [MovieInGenreGenresConnectionSort!], where: MovieInGenreGenresConnectionWhere): MovieInGenreGenresConnection!
  languages: [String!] @introspection
  movieId: String! @introspection
  plot: String @introspection
  plotEmbedding: [Float!] @introspection
  poster: String @introspection
  posterEmbedding: [Float!] @introspection
  released: String @introspection
  revenue: BigInt @introspection
  runtime: BigInt @introspection
  title: String! @introspection
  tmdbId: String @introspection
  url: String @introspection
  usersRated(limit: Int, offset: Int, sort: [UserSort!], where: UserWhere): [User!]! @introspection @relationship(type: "RATED", direction: IN, properties: "RatedProperties")
  usersRatedConnection(after: String, first: Int, sort: [MovieUsersRatedConnectionSort!], where: MovieUsersRatedConnectionWhere): MovieUsersRatedConnection!
  year: BigInt @introspection
}

type MovieActor2Actor2SActedInAggregateSelection {
  count: CountConnection!
  edge: MovieActor2Actor2SActedInEdgeAggregateSelection
  node: MovieActor2Actor2SActedInNodeAggregateSelection
}

type MovieActor2Actor2SActedInEdgeAggregateSelection {
  role: StringAggregateSelection!
}

type MovieActor2Actor2SActedInNodeAggregateSelection {
  bio: StringAggregateSelection!
  bornIn: StringAggregateSelection!
  imdbId: StringAggregateSelection!
  name: StringAggregateSelection!
  poster: StringAggregateSelection!
  tmdbId: StringAggregateSelection!
  url: StringAggregateSelection!
}

type MovieActor2Actor2SDirectedAggregateSelection {
  count: CountConnection!
  edge: MovieActor2Actor2SDirectedEdgeAggregateSelection
  node: MovieActor2Actor2SDirectedNodeAggregateSelection
}

type MovieActor2Actor2SDirectedEdgeAggregateSelection {
  role: StringAggregateSelection!
}

type MovieActor2Actor2SDirectedNodeAggregateSelection {
  bio: StringAggregateSelection!
  bornIn: StringAggregateSelection!
  imdbId: StringAggregateSelection!
  name: StringAggregateSelection!
  poster: StringAggregateSelection!
  tmdbId: StringAggregateSelection!
  url: StringAggregateSelection!
}

input MovieActor2SActedInAggregateInput {
  AND: [MovieActor2SActedInAggregateInput!]
  NOT: MovieActor2SActedInAggregateInput
  OR: [MovieActor2SActedInAggregateInput!]
  count: IntScalarFilters
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  edge: ActedInPropertiesAggregationWhereInput
  node: MovieActor2SActedInNodeAggregationWhereInput
}

input MovieActor2SActedInConnectFieldInput {
  connect: [Actor2ConnectInput!]
  edge: ActedInPropertiesCreateInput
  where: Actor2ConnectWhere
}

type MovieActor2SActedInConnection {
  aggregate: MovieActor2Actor2SActedInAggregateSelection!
  edges: [MovieActor2SActedInRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input MovieActor2SActedInConnectionAggregateInput {
  AND: [MovieActor2SActedInConnectionAggregateInput!]
  NOT: MovieActor2SActedInConnectionAggregateInput
  OR: [MovieActor2SActedInConnectionAggregateInput!]
  count: ConnectionAggregationCountFilterInput
  edge: ActedInPropertiesAggregationWhereInput
  node: MovieActor2SActedInNodeAggregationWhereInput
}

input MovieActor2SActedInConnectionFilters {
  """
  Filter Movies by aggregating results on related MovieActor2SActedInConnections
  """
  aggregate: MovieActor2SActedInConnectionAggregateInput
  """
  Return Movies where all of the related MovieActor2SActedInConnections match this filter
  """
  all: MovieActor2SActedInConnectionWhere
  """
  Return Movies where none of the related MovieActor2SActedInConnections match this filter
  """
  none: MovieActor2SActedInConnectionWhere
  """
  Return Movies where one of the related MovieActor2SActedInConnections match this filter
  """
  single: MovieActor2SActedInConnectionWhere
  """
  Return Movies where some of the related MovieActor2SActedInConnections match this filter
  """
  some: MovieActor2SActedInConnectionWhere
}

input MovieActor2SActedInConnectionSort {
  edge: ActedInPropertiesSort
  node: Actor2Sort
}

input MovieActor2SActedInConnectionWhere {
  AND: [MovieActor2SActedInConnectionWhere!]
  NOT: MovieActor2SActedInConnectionWhere
  OR: [MovieActor2SActedInConnectionWhere!]
  edge: ActedInPropertiesWhere
  node: Actor2Where
}

input MovieActor2SActedInCreateFieldInput {
  edge: ActedInPropertiesCreateInput
  node: Actor2CreateInput!
}

input MovieActor2SActedInDeleteFieldInput {
  delete: Actor2DeleteInput
  where: MovieActor2SActedInConnectionWhere
}

input MovieActor2SActedInDisconnectFieldInput {
  disconnect: Actor2DisconnectInput
  where: MovieActor2SActedInConnectionWhere
}

input MovieActor2SActedInFieldInput {
  connect: [MovieActor2SActedInConnectFieldInput!]
  create: [MovieActor2SActedInCreateFieldInput!]
}

input MovieActor2SActedInNodeAggregationWhereInput {
  AND: [MovieActor2SActedInNodeAggregationWhereInput!]
  NOT: MovieActor2SActedInNodeAggregationWhereInput
  OR: [MovieActor2SActedInNodeAggregationWhereInput!]
  bio: StringScalarAggregationFilters
  bio_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'bio: { averageLength: { eq: ... } } }' instead.")
  bio_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'bio: { averageLength: { gt: ... } } }' instead.")
  bio_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'bio: { averageLength: { gte: ... } } }' instead.")
  bio_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'bio: { averageLength: { lt: ... } } }' instead.")
  bio_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'bio: { averageLength: { lte: ... } } }' instead.")
  bio_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'bio: { longestLength: { eq: ... } } }' instead.")
  bio_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'bio: { longestLength: { gt: ... } } }' instead.")
  bio_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'bio: { longestLength: { gte: ... } } }' instead.")
  bio_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'bio: { longestLength: { lt: ... } } }' instead.")
  bio_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'bio: { longestLength: { lte: ... } } }' instead.")
  bio_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'bio: { shortestLength: { eq: ... } } }' instead.")
  bio_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'bio: { shortestLength: { gt: ... } } }' instead.")
  bio_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'bio: { shortestLength: { gte: ... } } }' instead.")
  bio_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'bio: { shortestLength: { lt: ... } } }' instead.")
  bio_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'bio: { shortestLength: { lte: ... } } }' instead.")
  bornIn: StringScalarAggregationFilters
  bornIn_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'bornIn: { averageLength: { eq: ... } } }' instead.")
  bornIn_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'bornIn: { averageLength: { gt: ... } } }' instead.")
  bornIn_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'bornIn: { averageLength: { gte: ... } } }' instead.")
  bornIn_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'bornIn: { averageLength: { lt: ... } } }' instead.")
  bornIn_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'bornIn: { averageLength: { lte: ... } } }' instead.")
  bornIn_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'bornIn: { longestLength: { eq: ... } } }' instead.")
  bornIn_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'bornIn: { longestLength: { gt: ... } } }' instead.")
  bornIn_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'bornIn: { longestLength: { gte: ... } } }' instead.")
  bornIn_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'bornIn: { longestLength: { lt: ... } } }' instead.")
  bornIn_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'bornIn: { longestLength: { lte: ... } } }' instead.")
  bornIn_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'bornIn: { shortestLength: { eq: ... } } }' instead.")
  bornIn_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'bornIn: { shortestLength: { gt: ... } } }' instead.")
  bornIn_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'bornIn: { shortestLength: { gte: ... } } }' instead.")
  bornIn_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'bornIn: { shortestLength: { lt: ... } } }' instead.")
  bornIn_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'bornIn: { shortestLength: { lte: ... } } }' instead.")
  imdbId: StringScalarAggregationFilters
  imdbId_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'imdbId: { averageLength: { eq: ... } } }' instead.")
  imdbId_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbId: { averageLength: { gt: ... } } }' instead.")
  imdbId_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbId: { averageLength: { gte: ... } } }' instead.")
  imdbId_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbId: { averageLength: { lt: ... } } }' instead.")
  imdbId_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbId: { averageLength: { lte: ... } } }' instead.")
  imdbId_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { longestLength: { eq: ... } } }' instead.")
  imdbId_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { longestLength: { gt: ... } } }' instead.")
  imdbId_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { longestLength: { gte: ... } } }' instead.")
  imdbId_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { longestLength: { lt: ... } } }' instead.")
  imdbId_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { longestLength: { lte: ... } } }' instead.")
  imdbId_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { shortestLength: { eq: ... } } }' instead.")
  imdbId_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { shortestLength: { gt: ... } } }' instead.")
  imdbId_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { shortestLength: { gte: ... } } }' instead.")
  imdbId_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { shortestLength: { lt: ... } } }' instead.")
  imdbId_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { shortestLength: { lte: ... } } }' instead.")
  name: StringScalarAggregationFilters
  name_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'name: { averageLength: { eq: ... } } }' instead.")
  name_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'name: { averageLength: { gt: ... } } }' instead.")
  name_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'name: { averageLength: { gte: ... } } }' instead.")
  name_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'name: { averageLength: { lt: ... } } }' instead.")
  name_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'name: { averageLength: { lte: ... } } }' instead.")
  name_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'name: { longestLength: { eq: ... } } }' instead.")
  name_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'name: { longestLength: { gt: ... } } }' instead.")
  name_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'name: { longestLength: { gte: ... } } }' instead.")
  name_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'name: { longestLength: { lt: ... } } }' instead.")
  name_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'name: { longestLength: { lte: ... } } }' instead.")
  name_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'name: { shortestLength: { eq: ... } } }' instead.")
  name_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'name: { shortestLength: { gt: ... } } }' instead.")
  name_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'name: { shortestLength: { gte: ... } } }' instead.")
  name_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'name: { shortestLength: { lt: ... } } }' instead.")
  name_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'name: { shortestLength: { lte: ... } } }' instead.")
  poster: StringScalarAggregationFilters
  poster_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'poster: { averageLength: { eq: ... } } }' instead.")
  poster_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'poster: { averageLength: { gt: ... } } }' instead.")
  poster_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'poster: { averageLength: { gte: ... } } }' instead.")
  poster_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'poster: { averageLength: { lt: ... } } }' instead.")
  poster_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'poster: { averageLength: { lte: ... } } }' instead.")
  poster_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { longestLength: { eq: ... } } }' instead.")
  poster_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { longestLength: { gt: ... } } }' instead.")
  poster_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { longestLength: { gte: ... } } }' instead.")
  poster_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { longestLength: { lt: ... } } }' instead.")
  poster_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { longestLength: { lte: ... } } }' instead.")
  poster_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { shortestLength: { eq: ... } } }' instead.")
  poster_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { shortestLength: { gt: ... } } }' instead.")
  poster_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { shortestLength: { gte: ... } } }' instead.")
  poster_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { shortestLength: { lt: ... } } }' instead.")
  poster_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { shortestLength: { lte: ... } } }' instead.")
  tmdbId: StringScalarAggregationFilters
  tmdbId_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { averageLength: { eq: ... } } }' instead.")
  tmdbId_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { averageLength: { gt: ... } } }' instead.")
  tmdbId_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { averageLength: { gte: ... } } }' instead.")
  tmdbId_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { averageLength: { lt: ... } } }' instead.")
  tmdbId_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { averageLength: { lte: ... } } }' instead.")
  tmdbId_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { longestLength: { eq: ... } } }' instead.")
  tmdbId_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { longestLength: { gt: ... } } }' instead.")
  tmdbId_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { longestLength: { gte: ... } } }' instead.")
  tmdbId_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { longestLength: { lt: ... } } }' instead.")
  tmdbId_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { longestLength: { lte: ... } } }' instead.")
  tmdbId_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { shortestLength: { eq: ... } } }' instead.")
  tmdbId_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { shortestLength: { gt: ... } } }' instead.")
  tmdbId_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { shortestLength: { gte: ... } } }' instead.")
  tmdbId_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { shortestLength: { lt: ... } } }' instead.")
  tmdbId_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { shortestLength: { lte: ... } } }' instead.")
  url: StringScalarAggregationFilters
  url_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'url: { averageLength: { eq: ... } } }' instead.")
  url_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'url: { averageLength: { gt: ... } } }' instead.")
  url_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'url: { averageLength: { gte: ... } } }' instead.")
  url_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'url: { averageLength: { lt: ... } } }' instead.")
  url_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'url: { averageLength: { lte: ... } } }' instead.")
  url_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'url: { longestLength: { eq: ... } } }' instead.")
  url_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'url: { longestLength: { gt: ... } } }' instead.")
  url_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'url: { longestLength: { gte: ... } } }' instead.")
  url_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'url: { longestLength: { lt: ... } } }' instead.")
  url_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'url: { longestLength: { lte: ... } } }' instead.")
  url_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'url: { shortestLength: { eq: ... } } }' instead.")
  url_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'url: { shortestLength: { gt: ... } } }' instead.")
  url_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'url: { shortestLength: { gte: ... } } }' instead.")
  url_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'url: { shortestLength: { lt: ... } } }' instead.")
  url_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'url: { shortestLength: { lte: ... } } }' instead.")
}

type MovieActor2SActedInRelationship {
  cursor: String!
  node: Actor2!
  properties: ActedInProperties!
}

input MovieActor2SActedInUpdateConnectionInput {
  edge: ActedInPropertiesUpdateInput
  node: Actor2UpdateInput
  where: MovieActor2SActedInConnectionWhere
}

input MovieActor2SActedInUpdateFieldInput {
  connect: [MovieActor2SActedInConnectFieldInput!]
  create: [MovieActor2SActedInCreateFieldInput!]
  delete: [MovieActor2SActedInDeleteFieldInput!]
  disconnect: [MovieActor2SActedInDisconnectFieldInput!]
  update: MovieActor2SActedInUpdateConnectionInput
}

input MovieActor2SDirectedAggregateInput {
  AND: [MovieActor2SDirectedAggregateInput!]
  NOT: MovieActor2SDirectedAggregateInput
  OR: [MovieActor2SDirectedAggregateInput!]
  count: IntScalarFilters
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  edge: DirectedPropertiesAggregationWhereInput
  node: MovieActor2SDirectedNodeAggregationWhereInput
}

input MovieActor2SDirectedConnectFieldInput {
  connect: [Actor2ConnectInput!]
  edge: DirectedPropertiesCreateInput
  where: Actor2ConnectWhere
}

type MovieActor2SDirectedConnection {
  aggregate: MovieActor2Actor2SDirectedAggregateSelection!
  edges: [MovieActor2SDirectedRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input MovieActor2SDirectedConnectionAggregateInput {
  AND: [MovieActor2SDirectedConnectionAggregateInput!]
  NOT: MovieActor2SDirectedConnectionAggregateInput
  OR: [MovieActor2SDirectedConnectionAggregateInput!]
  count: ConnectionAggregationCountFilterInput
  edge: DirectedPropertiesAggregationWhereInput
  node: MovieActor2SDirectedNodeAggregationWhereInput
}

input MovieActor2SDirectedConnectionFilters {
  """
  Filter Movies by aggregating results on related MovieActor2SDirectedConnections
  """
  aggregate: MovieActor2SDirectedConnectionAggregateInput
  """
  Return Movies where all of the related MovieActor2SDirectedConnections match this filter
  """
  all: MovieActor2SDirectedConnectionWhere
  """
  Return Movies where none of the related MovieActor2SDirectedConnections match this filter
  """
  none: MovieActor2SDirectedConnectionWhere
  """
  Return Movies where one of the related MovieActor2SDirectedConnections match this filter
  """
  single: MovieActor2SDirectedConnectionWhere
  """
  Return Movies where some of the related MovieActor2SDirectedConnections match this filter
  """
  some: MovieActor2SDirectedConnectionWhere
}

input MovieActor2SDirectedConnectionSort {
  edge: DirectedPropertiesSort
  node: Actor2Sort
}

input MovieActor2SDirectedConnectionWhere {
  AND: [MovieActor2SDirectedConnectionWhere!]
  NOT: MovieActor2SDirectedConnectionWhere
  OR: [MovieActor2SDirectedConnectionWhere!]
  edge: DirectedPropertiesWhere
  node: Actor2Where
}

input MovieActor2SDirectedCreateFieldInput {
  edge: DirectedPropertiesCreateInput
  node: Actor2CreateInput!
}

input MovieActor2SDirectedDeleteFieldInput {
  delete: Actor2DeleteInput
  where: MovieActor2SDirectedConnectionWhere
}

input MovieActor2SDirectedDisconnectFieldInput {
  disconnect: Actor2DisconnectInput
  where: MovieActor2SDirectedConnectionWhere
}

input MovieActor2SDirectedFieldInput {
  connect: [MovieActor2SDirectedConnectFieldInput!]
  create: [MovieActor2SDirectedCreateFieldInput!]
}

input MovieActor2SDirectedNodeAggregationWhereInput {
  AND: [MovieActor2SDirectedNodeAggregationWhereInput!]
  NOT: MovieActor2SDirectedNodeAggregationWhereInput
  OR: [MovieActor2SDirectedNodeAggregationWhereInput!]
  bio: StringScalarAggregationFilters
  bio_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'bio: { averageLength: { eq: ... } } }' instead.")
  bio_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'bio: { averageLength: { gt: ... } } }' instead.")
  bio_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'bio: { averageLength: { gte: ... } } }' instead.")
  bio_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'bio: { averageLength: { lt: ... } } }' instead.")
  bio_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'bio: { averageLength: { lte: ... } } }' instead.")
  bio_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'bio: { longestLength: { eq: ... } } }' instead.")
  bio_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'bio: { longestLength: { gt: ... } } }' instead.")
  bio_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'bio: { longestLength: { gte: ... } } }' instead.")
  bio_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'bio: { longestLength: { lt: ... } } }' instead.")
  bio_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'bio: { longestLength: { lte: ... } } }' instead.")
  bio_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'bio: { shortestLength: { eq: ... } } }' instead.")
  bio_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'bio: { shortestLength: { gt: ... } } }' instead.")
  bio_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'bio: { shortestLength: { gte: ... } } }' instead.")
  bio_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'bio: { shortestLength: { lt: ... } } }' instead.")
  bio_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'bio: { shortestLength: { lte: ... } } }' instead.")
  bornIn: StringScalarAggregationFilters
  bornIn_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'bornIn: { averageLength: { eq: ... } } }' instead.")
  bornIn_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'bornIn: { averageLength: { gt: ... } } }' instead.")
  bornIn_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'bornIn: { averageLength: { gte: ... } } }' instead.")
  bornIn_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'bornIn: { averageLength: { lt: ... } } }' instead.")
  bornIn_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'bornIn: { averageLength: { lte: ... } } }' instead.")
  bornIn_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'bornIn: { longestLength: { eq: ... } } }' instead.")
  bornIn_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'bornIn: { longestLength: { gt: ... } } }' instead.")
  bornIn_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'bornIn: { longestLength: { gte: ... } } }' instead.")
  bornIn_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'bornIn: { longestLength: { lt: ... } } }' instead.")
  bornIn_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'bornIn: { longestLength: { lte: ... } } }' instead.")
  bornIn_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'bornIn: { shortestLength: { eq: ... } } }' instead.")
  bornIn_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'bornIn: { shortestLength: { gt: ... } } }' instead.")
  bornIn_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'bornIn: { shortestLength: { gte: ... } } }' instead.")
  bornIn_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'bornIn: { shortestLength: { lt: ... } } }' instead.")
  bornIn_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'bornIn: { shortestLength: { lte: ... } } }' instead.")
  imdbId: StringScalarAggregationFilters
  imdbId_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'imdbId: { averageLength: { eq: ... } } }' instead.")
  imdbId_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbId: { averageLength: { gt: ... } } }' instead.")
  imdbId_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbId: { averageLength: { gte: ... } } }' instead.")
  imdbId_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbId: { averageLength: { lt: ... } } }' instead.")
  imdbId_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbId: { averageLength: { lte: ... } } }' instead.")
  imdbId_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { longestLength: { eq: ... } } }' instead.")
  imdbId_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { longestLength: { gt: ... } } }' instead.")
  imdbId_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { longestLength: { gte: ... } } }' instead.")
  imdbId_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { longestLength: { lt: ... } } }' instead.")
  imdbId_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { longestLength: { lte: ... } } }' instead.")
  imdbId_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { shortestLength: { eq: ... } } }' instead.")
  imdbId_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { shortestLength: { gt: ... } } }' instead.")
  imdbId_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { shortestLength: { gte: ... } } }' instead.")
  imdbId_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { shortestLength: { lt: ... } } }' instead.")
  imdbId_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { shortestLength: { lte: ... } } }' instead.")
  name: StringScalarAggregationFilters
  name_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'name: { averageLength: { eq: ... } } }' instead.")
  name_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'name: { averageLength: { gt: ... } } }' instead.")
  name_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'name: { averageLength: { gte: ... } } }' instead.")
  name_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'name: { averageLength: { lt: ... } } }' instead.")
  name_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'name: { averageLength: { lte: ... } } }' instead.")
  name_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'name: { longestLength: { eq: ... } } }' instead.")
  name_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'name: { longestLength: { gt: ... } } }' instead.")
  name_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'name: { longestLength: { gte: ... } } }' instead.")
  name_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'name: { longestLength: { lt: ... } } }' instead.")
  name_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'name: { longestLength: { lte: ... } } }' instead.")
  name_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'name: { shortestLength: { eq: ... } } }' instead.")
  name_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'name: { shortestLength: { gt: ... } } }' instead.")
  name_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'name: { shortestLength: { gte: ... } } }' instead.")
  name_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'name: { shortestLength: { lt: ... } } }' instead.")
  name_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'name: { shortestLength: { lte: ... } } }' instead.")
  poster: StringScalarAggregationFilters
  poster_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'poster: { averageLength: { eq: ... } } }' instead.")
  poster_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'poster: { averageLength: { gt: ... } } }' instead.")
  poster_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'poster: { averageLength: { gte: ... } } }' instead.")
  poster_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'poster: { averageLength: { lt: ... } } }' instead.")
  poster_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'poster: { averageLength: { lte: ... } } }' instead.")
  poster_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { longestLength: { eq: ... } } }' instead.")
  poster_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { longestLength: { gt: ... } } }' instead.")
  poster_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { longestLength: { gte: ... } } }' instead.")
  poster_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { longestLength: { lt: ... } } }' instead.")
  poster_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { longestLength: { lte: ... } } }' instead.")
  poster_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { shortestLength: { eq: ... } } }' instead.")
  poster_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { shortestLength: { gt: ... } } }' instead.")
  poster_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { shortestLength: { gte: ... } } }' instead.")
  poster_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { shortestLength: { lt: ... } } }' instead.")
  poster_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { shortestLength: { lte: ... } } }' instead.")
  tmdbId: StringScalarAggregationFilters
  tmdbId_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { averageLength: { eq: ... } } }' instead.")
  tmdbId_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { averageLength: { gt: ... } } }' instead.")
  tmdbId_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { averageLength: { gte: ... } } }' instead.")
  tmdbId_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { averageLength: { lt: ... } } }' instead.")
  tmdbId_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { averageLength: { lte: ... } } }' instead.")
  tmdbId_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { longestLength: { eq: ... } } }' instead.")
  tmdbId_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { longestLength: { gt: ... } } }' instead.")
  tmdbId_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { longestLength: { gte: ... } } }' instead.")
  tmdbId_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { longestLength: { lt: ... } } }' instead.")
  tmdbId_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { longestLength: { lte: ... } } }' instead.")
  tmdbId_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { shortestLength: { eq: ... } } }' instead.")
  tmdbId_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { shortestLength: { gt: ... } } }' instead.")
  tmdbId_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { shortestLength: { gte: ... } } }' instead.")
  tmdbId_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { shortestLength: { lt: ... } } }' instead.")
  tmdbId_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { shortestLength: { lte: ... } } }' instead.")
  url: StringScalarAggregationFilters
  url_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'url: { averageLength: { eq: ... } } }' instead.")
  url_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'url: { averageLength: { gt: ... } } }' instead.")
  url_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'url: { averageLength: { gte: ... } } }' instead.")
  url_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'url: { averageLength: { lt: ... } } }' instead.")
  url_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'url: { averageLength: { lte: ... } } }' instead.")
  url_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'url: { longestLength: { eq: ... } } }' instead.")
  url_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'url: { longestLength: { gt: ... } } }' instead.")
  url_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'url: { longestLength: { gte: ... } } }' instead.")
  url_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'url: { longestLength: { lt: ... } } }' instead.")
  url_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'url: { longestLength: { lte: ... } } }' instead.")
  url_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'url: { shortestLength: { eq: ... } } }' instead.")
  url_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'url: { shortestLength: { gt: ... } } }' instead.")
  url_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'url: { shortestLength: { gte: ... } } }' instead.")
  url_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'url: { shortestLength: { lt: ... } } }' instead.")
  url_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'url: { shortestLength: { lte: ... } } }' instead.")
}

type MovieActor2SDirectedRelationship {
  cursor: String!
  node: Actor2!
  properties: DirectedProperties!
}

input MovieActor2SDirectedUpdateConnectionInput {
  edge: DirectedPropertiesUpdateInput
  node: Actor2UpdateInput
  where: MovieActor2SDirectedConnectionWhere
}

input MovieActor2SDirectedUpdateFieldInput {
  connect: [MovieActor2SDirectedConnectFieldInput!]
  create: [MovieActor2SDirectedCreateFieldInput!]
  delete: [MovieActor2SDirectedDeleteFieldInput!]
  disconnect: [MovieActor2SDirectedDisconnectFieldInput!]
  update: MovieActor2SDirectedUpdateConnectionInput
}

type MovieActorActorsActedInAggregateSelection {
  count: CountConnection!
  edge: MovieActorActorsActedInEdgeAggregateSelection
  node: MovieActorActorsActedInNodeAggregateSelection
}

type MovieActorActorsActedInEdgeAggregateSelection {
  role: StringAggregateSelection!
}

type MovieActorActorsActedInNodeAggregateSelection {
  bio: StringAggregateSelection!
  bornIn: StringAggregateSelection!
  imdbId: StringAggregateSelection!
  name: StringAggregateSelection!
  poster: StringAggregateSelection!
  tmdbId: StringAggregateSelection!
  url: StringAggregateSelection!
}

input MovieActorsActedInAggregateInput {
  AND: [MovieActorsActedInAggregateInput!]
  NOT: MovieActorsActedInAggregateInput
  OR: [MovieActorsActedInAggregateInput!]
  count: IntScalarFilters
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  edge: ActedInPropertiesAggregationWhereInput
  node: MovieActorsActedInNodeAggregationWhereInput
}

input MovieActorsActedInConnectFieldInput {
  connect: [ActorConnectInput!]
  edge: ActedInPropertiesCreateInput
  where: ActorConnectWhere
}

type MovieActorsActedInConnection {
  aggregate: MovieActorActorsActedInAggregateSelection!
  edges: [MovieActorsActedInRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input MovieActorsActedInConnectionAggregateInput {
  AND: [MovieActorsActedInConnectionAggregateInput!]
  NOT: MovieActorsActedInConnectionAggregateInput
  OR: [MovieActorsActedInConnectionAggregateInput!]
  count: ConnectionAggregationCountFilterInput
  edge: ActedInPropertiesAggregationWhereInput
  node: MovieActorsActedInNodeAggregationWhereInput
}

input MovieActorsActedInConnectionFilters {
  """
  Filter Movies by aggregating results on related MovieActorsActedInConnections
  """
  aggregate: MovieActorsActedInConnectionAggregateInput
  """
  Return Movies where all of the related MovieActorsActedInConnections match this filter
  """
  all: MovieActorsActedInConnectionWhere
  """
  Return Movies where none of the related MovieActorsActedInConnections match this filter
  """
  none: MovieActorsActedInConnectionWhere
  """
  Return Movies where one of the related MovieActorsActedInConnections match this filter
  """
  single: MovieActorsActedInConnectionWhere
  """
  Return Movies where some of the related MovieActorsActedInConnections match this filter
  """
  some: MovieActorsActedInConnectionWhere
}

input MovieActorsActedInConnectionSort {
  edge: ActedInPropertiesSort
  node: ActorSort
}

input MovieActorsActedInConnectionWhere {
  AND: [MovieActorsActedInConnectionWhere!]
  NOT: MovieActorsActedInConnectionWhere
  OR: [MovieActorsActedInConnectionWhere!]
  edge: ActedInPropertiesWhere
  node: ActorWhere
}

input MovieActorsActedInCreateFieldInput {
  edge: ActedInPropertiesCreateInput
  node: ActorCreateInput!
}

input MovieActorsActedInDeleteFieldInput {
  delete: ActorDeleteInput
  where: MovieActorsActedInConnectionWhere
}

input MovieActorsActedInDisconnectFieldInput {
  disconnect: ActorDisconnectInput
  where: MovieActorsActedInConnectionWhere
}

input MovieActorsActedInFieldInput {
  connect: [MovieActorsActedInConnectFieldInput!]
  create: [MovieActorsActedInCreateFieldInput!]
}

input MovieActorsActedInNodeAggregationWhereInput {
  AND: [MovieActorsActedInNodeAggregationWhereInput!]
  NOT: MovieActorsActedInNodeAggregationWhereInput
  OR: [MovieActorsActedInNodeAggregationWhereInput!]
  bio: StringScalarAggregationFilters
  bio_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'bio: { averageLength: { eq: ... } } }' instead.")
  bio_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'bio: { averageLength: { gt: ... } } }' instead.")
  bio_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'bio: { averageLength: { gte: ... } } }' instead.")
  bio_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'bio: { averageLength: { lt: ... } } }' instead.")
  bio_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'bio: { averageLength: { lte: ... } } }' instead.")
  bio_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'bio: { longestLength: { eq: ... } } }' instead.")
  bio_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'bio: { longestLength: { gt: ... } } }' instead.")
  bio_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'bio: { longestLength: { gte: ... } } }' instead.")
  bio_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'bio: { longestLength: { lt: ... } } }' instead.")
  bio_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'bio: { longestLength: { lte: ... } } }' instead.")
  bio_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'bio: { shortestLength: { eq: ... } } }' instead.")
  bio_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'bio: { shortestLength: { gt: ... } } }' instead.")
  bio_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'bio: { shortestLength: { gte: ... } } }' instead.")
  bio_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'bio: { shortestLength: { lt: ... } } }' instead.")
  bio_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'bio: { shortestLength: { lte: ... } } }' instead.")
  bornIn: StringScalarAggregationFilters
  bornIn_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'bornIn: { averageLength: { eq: ... } } }' instead.")
  bornIn_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'bornIn: { averageLength: { gt: ... } } }' instead.")
  bornIn_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'bornIn: { averageLength: { gte: ... } } }' instead.")
  bornIn_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'bornIn: { averageLength: { lt: ... } } }' instead.")
  bornIn_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'bornIn: { averageLength: { lte: ... } } }' instead.")
  bornIn_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'bornIn: { longestLength: { eq: ... } } }' instead.")
  bornIn_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'bornIn: { longestLength: { gt: ... } } }' instead.")
  bornIn_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'bornIn: { longestLength: { gte: ... } } }' instead.")
  bornIn_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'bornIn: { longestLength: { lt: ... } } }' instead.")
  bornIn_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'bornIn: { longestLength: { lte: ... } } }' instead.")
  bornIn_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'bornIn: { shortestLength: { eq: ... } } }' instead.")
  bornIn_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'bornIn: { shortestLength: { gt: ... } } }' instead.")
  bornIn_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'bornIn: { shortestLength: { gte: ... } } }' instead.")
  bornIn_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'bornIn: { shortestLength: { lt: ... } } }' instead.")
  bornIn_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'bornIn: { shortestLength: { lte: ... } } }' instead.")
  imdbId: StringScalarAggregationFilters
  imdbId_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'imdbId: { averageLength: { eq: ... } } }' instead.")
  imdbId_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbId: { averageLength: { gt: ... } } }' instead.")
  imdbId_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbId: { averageLength: { gte: ... } } }' instead.")
  imdbId_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbId: { averageLength: { lt: ... } } }' instead.")
  imdbId_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbId: { averageLength: { lte: ... } } }' instead.")
  imdbId_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { longestLength: { eq: ... } } }' instead.")
  imdbId_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { longestLength: { gt: ... } } }' instead.")
  imdbId_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { longestLength: { gte: ... } } }' instead.")
  imdbId_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { longestLength: { lt: ... } } }' instead.")
  imdbId_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { longestLength: { lte: ... } } }' instead.")
  imdbId_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { shortestLength: { eq: ... } } }' instead.")
  imdbId_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { shortestLength: { gt: ... } } }' instead.")
  imdbId_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { shortestLength: { gte: ... } } }' instead.")
  imdbId_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { shortestLength: { lt: ... } } }' instead.")
  imdbId_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { shortestLength: { lte: ... } } }' instead.")
  name: StringScalarAggregationFilters
  name_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'name: { averageLength: { eq: ... } } }' instead.")
  name_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'name: { averageLength: { gt: ... } } }' instead.")
  name_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'name: { averageLength: { gte: ... } } }' instead.")
  name_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'name: { averageLength: { lt: ... } } }' instead.")
  name_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'name: { averageLength: { lte: ... } } }' instead.")
  name_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'name: { longestLength: { eq: ... } } }' instead.")
  name_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'name: { longestLength: { gt: ... } } }' instead.")
  name_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'name: { longestLength: { gte: ... } } }' instead.")
  name_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'name: { longestLength: { lt: ... } } }' instead.")
  name_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'name: { longestLength: { lte: ... } } }' instead.")
  name_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'name: { shortestLength: { eq: ... } } }' instead.")
  name_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'name: { shortestLength: { gt: ... } } }' instead.")
  name_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'name: { shortestLength: { gte: ... } } }' instead.")
  name_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'name: { shortestLength: { lt: ... } } }' instead.")
  name_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'name: { shortestLength: { lte: ... } } }' instead.")
  poster: StringScalarAggregationFilters
  poster_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'poster: { averageLength: { eq: ... } } }' instead.")
  poster_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'poster: { averageLength: { gt: ... } } }' instead.")
  poster_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'poster: { averageLength: { gte: ... } } }' instead.")
  poster_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'poster: { averageLength: { lt: ... } } }' instead.")
  poster_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'poster: { averageLength: { lte: ... } } }' instead.")
  poster_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { longestLength: { eq: ... } } }' instead.")
  poster_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { longestLength: { gt: ... } } }' instead.")
  poster_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { longestLength: { gte: ... } } }' instead.")
  poster_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { longestLength: { lt: ... } } }' instead.")
  poster_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { longestLength: { lte: ... } } }' instead.")
  poster_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { shortestLength: { eq: ... } } }' instead.")
  poster_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { shortestLength: { gt: ... } } }' instead.")
  poster_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { shortestLength: { gte: ... } } }' instead.")
  poster_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { shortestLength: { lt: ... } } }' instead.")
  poster_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { shortestLength: { lte: ... } } }' instead.")
  tmdbId: StringScalarAggregationFilters
  tmdbId_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { averageLength: { eq: ... } } }' instead.")
  tmdbId_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { averageLength: { gt: ... } } }' instead.")
  tmdbId_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { averageLength: { gte: ... } } }' instead.")
  tmdbId_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { averageLength: { lt: ... } } }' instead.")
  tmdbId_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { averageLength: { lte: ... } } }' instead.")
  tmdbId_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { longestLength: { eq: ... } } }' instead.")
  tmdbId_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { longestLength: { gt: ... } } }' instead.")
  tmdbId_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { longestLength: { gte: ... } } }' instead.")
  tmdbId_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { longestLength: { lt: ... } } }' instead.")
  tmdbId_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { longestLength: { lte: ... } } }' instead.")
  tmdbId_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { shortestLength: { eq: ... } } }' instead.")
  tmdbId_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { shortestLength: { gt: ... } } }' instead.")
  tmdbId_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { shortestLength: { gte: ... } } }' instead.")
  tmdbId_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { shortestLength: { lt: ... } } }' instead.")
  tmdbId_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { shortestLength: { lte: ... } } }' instead.")
  url: StringScalarAggregationFilters
  url_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'url: { averageLength: { eq: ... } } }' instead.")
  url_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'url: { averageLength: { gt: ... } } }' instead.")
  url_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'url: { averageLength: { gte: ... } } }' instead.")
  url_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'url: { averageLength: { lt: ... } } }' instead.")
  url_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'url: { averageLength: { lte: ... } } }' instead.")
  url_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'url: { longestLength: { eq: ... } } }' instead.")
  url_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'url: { longestLength: { gt: ... } } }' instead.")
  url_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'url: { longestLength: { gte: ... } } }' instead.")
  url_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'url: { longestLength: { lt: ... } } }' instead.")
  url_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'url: { longestLength: { lte: ... } } }' instead.")
  url_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'url: { shortestLength: { eq: ... } } }' instead.")
  url_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'url: { shortestLength: { gt: ... } } }' instead.")
  url_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'url: { shortestLength: { gte: ... } } }' instead.")
  url_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'url: { shortestLength: { lt: ... } } }' instead.")
  url_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'url: { shortestLength: { lte: ... } } }' instead.")
}

type MovieActorsActedInRelationship {
  cursor: String!
  node: Actor!
  properties: ActedInProperties!
}

input MovieActorsActedInUpdateConnectionInput {
  edge: ActedInPropertiesUpdateInput
  node: ActorUpdateInput
  where: MovieActorsActedInConnectionWhere
}

input MovieActorsActedInUpdateFieldInput {
  connect: [MovieActorsActedInConnectFieldInput!]
  create: [MovieActorsActedInCreateFieldInput!]
  delete: [MovieActorsActedInDeleteFieldInput!]
  disconnect: [MovieActorsActedInDisconnectFieldInput!]
  update: MovieActorsActedInUpdateConnectionInput
}

type MovieAggregate {
  count: Count!
  node: MovieAggregateNode!
}

type MovieAggregateNode {
  budget: BigIntAggregateSelection!
  imdbId: StringAggregateSelection!
  imdbRating: FloatAggregateSelection!
  imdbVotes: BigIntAggregateSelection!
  movieId: StringAggregateSelection!
  plot: StringAggregateSelection!
  poster: StringAggregateSelection!
  released: StringAggregateSelection!
  revenue: BigIntAggregateSelection!
  runtime: BigIntAggregateSelection!
  title: StringAggregateSelection!
  tmdbId: StringAggregateSelection!
  url: StringAggregateSelection!
  year: BigIntAggregateSelection!
}

input MovieConnectInput {
  actor2SActedIn: [MovieActor2SActedInConnectFieldInput!]
  actor2SDirected: [MovieActor2SDirectedConnectFieldInput!]
  actorsActedIn: [MovieActorsActedInConnectFieldInput!]
  directorsDirected: [MovieDirectorsDirectedConnectFieldInput!]
  inGenreGenres: [MovieInGenreGenresConnectFieldInput!]
  usersRated: [MovieUsersRatedConnectFieldInput!]
}

input MovieConnectWhere {
  node: MovieWhere!
}

input MovieCreateInput {
  actor2SActedIn: MovieActor2SActedInFieldInput
  actor2SDirected: MovieActor2SDirectedFieldInput
  actorsActedIn: MovieActorsActedInFieldInput
  budget: BigInt
  countries: [String!]
  directorsDirected: MovieDirectorsDirectedFieldInput
  imdbId: String!
  imdbRating: Float
  imdbVotes: BigInt
  inGenreGenres: MovieInGenreGenresFieldInput
  languages: [String!]
  movieId: String!
  plot: String
  plotEmbedding: [Float!]
  poster: String
  posterEmbedding: [Float!]
  released: String
  revenue: BigInt
  runtime: BigInt
  title: String!
  tmdbId: String
  url: String
  usersRated: MovieUsersRatedFieldInput
  year: BigInt
}

input MovieDeleteInput {
  actor2SActedIn: [MovieActor2SActedInDeleteFieldInput!]
  actor2SDirected: [MovieActor2SDirectedDeleteFieldInput!]
  actorsActedIn: [MovieActorsActedInDeleteFieldInput!]
  directorsDirected: [MovieDirectorsDirectedDeleteFieldInput!]
  inGenreGenres: [MovieInGenreGenresDeleteFieldInput!]
  usersRated: [MovieUsersRatedDeleteFieldInput!]
}

type MovieDirectorDirectorsDirectedAggregateSelection {
  count: CountConnection!
  edge: MovieDirectorDirectorsDirectedEdgeAggregateSelection
  node: MovieDirectorDirectorsDirectedNodeAggregateSelection
}

type MovieDirectorDirectorsDirectedEdgeAggregateSelection {
  role: StringAggregateSelection!
}

type MovieDirectorDirectorsDirectedNodeAggregateSelection {
  bio: StringAggregateSelection!
  bornIn: StringAggregateSelection!
  imdbId: StringAggregateSelection!
  name: StringAggregateSelection!
  poster: StringAggregateSelection!
  tmdbId: StringAggregateSelection!
  url: StringAggregateSelection!
}

input MovieDirectorsDirectedAggregateInput {
  AND: [MovieDirectorsDirectedAggregateInput!]
  NOT: MovieDirectorsDirectedAggregateInput
  OR: [MovieDirectorsDirectedAggregateInput!]
  count: IntScalarFilters
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  edge: DirectedPropertiesAggregationWhereInput
  node: MovieDirectorsDirectedNodeAggregationWhereInput
}

input MovieDirectorsDirectedConnectFieldInput {
  connect: [DirectorConnectInput!]
  edge: DirectedPropertiesCreateInput
  where: DirectorConnectWhere
}

type MovieDirectorsDirectedConnection {
  aggregate: MovieDirectorDirectorsDirectedAggregateSelection!
  edges: [MovieDirectorsDirectedRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input MovieDirectorsDirectedConnectionAggregateInput {
  AND: [MovieDirectorsDirectedConnectionAggregateInput!]
  NOT: MovieDirectorsDirectedConnectionAggregateInput
  OR: [MovieDirectorsDirectedConnectionAggregateInput!]
  count: ConnectionAggregationCountFilterInput
  edge: DirectedPropertiesAggregationWhereInput
  node: MovieDirectorsDirectedNodeAggregationWhereInput
}

input MovieDirectorsDirectedConnectionFilters {
  """
  Filter Movies by aggregating results on related MovieDirectorsDirectedConnections
  """
  aggregate: MovieDirectorsDirectedConnectionAggregateInput
  """
  Return Movies where all of the related MovieDirectorsDirectedConnections match this filter
  """
  all: MovieDirectorsDirectedConnectionWhere
  """
  Return Movies where none of the related MovieDirectorsDirectedConnections match this filter
  """
  none: MovieDirectorsDirectedConnectionWhere
  """
  Return Movies where one of the related MovieDirectorsDirectedConnections match this filter
  """
  single: MovieDirectorsDirectedConnectionWhere
  """
  Return Movies where some of the related MovieDirectorsDirectedConnections match this filter
  """
  some: MovieDirectorsDirectedConnectionWhere
}

input MovieDirectorsDirectedConnectionSort {
  edge: DirectedPropertiesSort
  node: DirectorSort
}

input MovieDirectorsDirectedConnectionWhere {
  AND: [MovieDirectorsDirectedConnectionWhere!]
  NOT: MovieDirectorsDirectedConnectionWhere
  OR: [MovieDirectorsDirectedConnectionWhere!]
  edge: DirectedPropertiesWhere
  node: DirectorWhere
}

input MovieDirectorsDirectedCreateFieldInput {
  edge: DirectedPropertiesCreateInput
  node: DirectorCreateInput!
}

input MovieDirectorsDirectedDeleteFieldInput {
  delete: DirectorDeleteInput
  where: MovieDirectorsDirectedConnectionWhere
}

input MovieDirectorsDirectedDisconnectFieldInput {
  disconnect: DirectorDisconnectInput
  where: MovieDirectorsDirectedConnectionWhere
}

input MovieDirectorsDirectedFieldInput {
  connect: [MovieDirectorsDirectedConnectFieldInput!]
  create: [MovieDirectorsDirectedCreateFieldInput!]
}

input MovieDirectorsDirectedNodeAggregationWhereInput {
  AND: [MovieDirectorsDirectedNodeAggregationWhereInput!]
  NOT: MovieDirectorsDirectedNodeAggregationWhereInput
  OR: [MovieDirectorsDirectedNodeAggregationWhereInput!]
  bio: StringScalarAggregationFilters
  bio_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'bio: { averageLength: { eq: ... } } }' instead.")
  bio_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'bio: { averageLength: { gt: ... } } }' instead.")
  bio_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'bio: { averageLength: { gte: ... } } }' instead.")
  bio_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'bio: { averageLength: { lt: ... } } }' instead.")
  bio_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'bio: { averageLength: { lte: ... } } }' instead.")
  bio_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'bio: { longestLength: { eq: ... } } }' instead.")
  bio_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'bio: { longestLength: { gt: ... } } }' instead.")
  bio_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'bio: { longestLength: { gte: ... } } }' instead.")
  bio_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'bio: { longestLength: { lt: ... } } }' instead.")
  bio_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'bio: { longestLength: { lte: ... } } }' instead.")
  bio_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'bio: { shortestLength: { eq: ... } } }' instead.")
  bio_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'bio: { shortestLength: { gt: ... } } }' instead.")
  bio_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'bio: { shortestLength: { gte: ... } } }' instead.")
  bio_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'bio: { shortestLength: { lt: ... } } }' instead.")
  bio_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'bio: { shortestLength: { lte: ... } } }' instead.")
  bornIn: StringScalarAggregationFilters
  bornIn_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'bornIn: { averageLength: { eq: ... } } }' instead.")
  bornIn_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'bornIn: { averageLength: { gt: ... } } }' instead.")
  bornIn_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'bornIn: { averageLength: { gte: ... } } }' instead.")
  bornIn_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'bornIn: { averageLength: { lt: ... } } }' instead.")
  bornIn_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'bornIn: { averageLength: { lte: ... } } }' instead.")
  bornIn_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'bornIn: { longestLength: { eq: ... } } }' instead.")
  bornIn_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'bornIn: { longestLength: { gt: ... } } }' instead.")
  bornIn_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'bornIn: { longestLength: { gte: ... } } }' instead.")
  bornIn_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'bornIn: { longestLength: { lt: ... } } }' instead.")
  bornIn_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'bornIn: { longestLength: { lte: ... } } }' instead.")
  bornIn_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'bornIn: { shortestLength: { eq: ... } } }' instead.")
  bornIn_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'bornIn: { shortestLength: { gt: ... } } }' instead.")
  bornIn_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'bornIn: { shortestLength: { gte: ... } } }' instead.")
  bornIn_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'bornIn: { shortestLength: { lt: ... } } }' instead.")
  bornIn_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'bornIn: { shortestLength: { lte: ... } } }' instead.")
  imdbId: StringScalarAggregationFilters
  imdbId_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'imdbId: { averageLength: { eq: ... } } }' instead.")
  imdbId_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbId: { averageLength: { gt: ... } } }' instead.")
  imdbId_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbId: { averageLength: { gte: ... } } }' instead.")
  imdbId_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbId: { averageLength: { lt: ... } } }' instead.")
  imdbId_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbId: { averageLength: { lte: ... } } }' instead.")
  imdbId_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { longestLength: { eq: ... } } }' instead.")
  imdbId_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { longestLength: { gt: ... } } }' instead.")
  imdbId_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { longestLength: { gte: ... } } }' instead.")
  imdbId_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { longestLength: { lt: ... } } }' instead.")
  imdbId_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { longestLength: { lte: ... } } }' instead.")
  imdbId_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { shortestLength: { eq: ... } } }' instead.")
  imdbId_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { shortestLength: { gt: ... } } }' instead.")
  imdbId_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { shortestLength: { gte: ... } } }' instead.")
  imdbId_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { shortestLength: { lt: ... } } }' instead.")
  imdbId_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { shortestLength: { lte: ... } } }' instead.")
  name: StringScalarAggregationFilters
  name_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'name: { averageLength: { eq: ... } } }' instead.")
  name_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'name: { averageLength: { gt: ... } } }' instead.")
  name_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'name: { averageLength: { gte: ... } } }' instead.")
  name_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'name: { averageLength: { lt: ... } } }' instead.")
  name_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'name: { averageLength: { lte: ... } } }' instead.")
  name_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'name: { longestLength: { eq: ... } } }' instead.")
  name_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'name: { longestLength: { gt: ... } } }' instead.")
  name_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'name: { longestLength: { gte: ... } } }' instead.")
  name_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'name: { longestLength: { lt: ... } } }' instead.")
  name_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'name: { longestLength: { lte: ... } } }' instead.")
  name_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'name: { shortestLength: { eq: ... } } }' instead.")
  name_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'name: { shortestLength: { gt: ... } } }' instead.")
  name_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'name: { shortestLength: { gte: ... } } }' instead.")
  name_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'name: { shortestLength: { lt: ... } } }' instead.")
  name_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'name: { shortestLength: { lte: ... } } }' instead.")
  poster: StringScalarAggregationFilters
  poster_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'poster: { averageLength: { eq: ... } } }' instead.")
  poster_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'poster: { averageLength: { gt: ... } } }' instead.")
  poster_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'poster: { averageLength: { gte: ... } } }' instead.")
  poster_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'poster: { averageLength: { lt: ... } } }' instead.")
  poster_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'poster: { averageLength: { lte: ... } } }' instead.")
  poster_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { longestLength: { eq: ... } } }' instead.")
  poster_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { longestLength: { gt: ... } } }' instead.")
  poster_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { longestLength: { gte: ... } } }' instead.")
  poster_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { longestLength: { lt: ... } } }' instead.")
  poster_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { longestLength: { lte: ... } } }' instead.")
  poster_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { shortestLength: { eq: ... } } }' instead.")
  poster_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { shortestLength: { gt: ... } } }' instead.")
  poster_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { shortestLength: { gte: ... } } }' instead.")
  poster_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { shortestLength: { lt: ... } } }' instead.")
  poster_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { shortestLength: { lte: ... } } }' instead.")
  tmdbId: StringScalarAggregationFilters
  tmdbId_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { averageLength: { eq: ... } } }' instead.")
  tmdbId_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { averageLength: { gt: ... } } }' instead.")
  tmdbId_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { averageLength: { gte: ... } } }' instead.")
  tmdbId_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { averageLength: { lt: ... } } }' instead.")
  tmdbId_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { averageLength: { lte: ... } } }' instead.")
  tmdbId_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { longestLength: { eq: ... } } }' instead.")
  tmdbId_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { longestLength: { gt: ... } } }' instead.")
  tmdbId_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { longestLength: { gte: ... } } }' instead.")
  tmdbId_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { longestLength: { lt: ... } } }' instead.")
  tmdbId_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { longestLength: { lte: ... } } }' instead.")
  tmdbId_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { shortestLength: { eq: ... } } }' instead.")
  tmdbId_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { shortestLength: { gt: ... } } }' instead.")
  tmdbId_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { shortestLength: { gte: ... } } }' instead.")
  tmdbId_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { shortestLength: { lt: ... } } }' instead.")
  tmdbId_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { shortestLength: { lte: ... } } }' instead.")
  url: StringScalarAggregationFilters
  url_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'url: { averageLength: { eq: ... } } }' instead.")
  url_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'url: { averageLength: { gt: ... } } }' instead.")
  url_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'url: { averageLength: { gte: ... } } }' instead.")
  url_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'url: { averageLength: { lt: ... } } }' instead.")
  url_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'url: { averageLength: { lte: ... } } }' instead.")
  url_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'url: { longestLength: { eq: ... } } }' instead.")
  url_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'url: { longestLength: { gt: ... } } }' instead.")
  url_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'url: { longestLength: { gte: ... } } }' instead.")
  url_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'url: { longestLength: { lt: ... } } }' instead.")
  url_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'url: { longestLength: { lte: ... } } }' instead.")
  url_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'url: { shortestLength: { eq: ... } } }' instead.")
  url_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'url: { shortestLength: { gt: ... } } }' instead.")
  url_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'url: { shortestLength: { gte: ... } } }' instead.")
  url_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'url: { shortestLength: { lt: ... } } }' instead.")
  url_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'url: { shortestLength: { lte: ... } } }' instead.")
}

type MovieDirectorsDirectedRelationship {
  cursor: String!
  node: Director!
  properties: DirectedProperties!
}

input MovieDirectorsDirectedUpdateConnectionInput {
  edge: DirectedPropertiesUpdateInput
  node: DirectorUpdateInput
  where: MovieDirectorsDirectedConnectionWhere
}

input MovieDirectorsDirectedUpdateFieldInput {
  connect: [MovieDirectorsDirectedConnectFieldInput!]
  create: [MovieDirectorsDirectedCreateFieldInput!]
  delete: [MovieDirectorsDirectedDeleteFieldInput!]
  disconnect: [MovieDirectorsDirectedDisconnectFieldInput!]
  update: MovieDirectorsDirectedUpdateConnectionInput
}

input MovieDisconnectInput {
  actor2SActedIn: [MovieActor2SActedInDisconnectFieldInput!]
  actor2SDirected: [MovieActor2SDirectedDisconnectFieldInput!]
  actorsActedIn: [MovieActorsActedInDisconnectFieldInput!]
  directorsDirected: [MovieDirectorsDirectedDisconnectFieldInput!]
  inGenreGenres: [MovieInGenreGenresDisconnectFieldInput!]
  usersRated: [MovieUsersRatedDisconnectFieldInput!]
}

type MovieEdge {
  cursor: String!
  node: Movie!
}

type MovieGenreInGenreGenresAggregateSelection {
  count: CountConnection!
  node: MovieGenreInGenreGenresNodeAggregateSelection
}

type MovieGenreInGenreGenresNodeAggregateSelection {
  name: StringAggregateSelection!
}

input MovieInGenreGenresAggregateInput {
  AND: [MovieInGenreGenresAggregateInput!]
  NOT: MovieInGenreGenresAggregateInput
  OR: [MovieInGenreGenresAggregateInput!]
  count: IntScalarFilters
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: MovieInGenreGenresNodeAggregationWhereInput
}

input MovieInGenreGenresConnectFieldInput {
  connect: [GenreConnectInput!]
  where: GenreConnectWhere
}

type MovieInGenreGenresConnection {
  aggregate: MovieGenreInGenreGenresAggregateSelection!
  edges: [MovieInGenreGenresRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input MovieInGenreGenresConnectionAggregateInput {
  AND: [MovieInGenreGenresConnectionAggregateInput!]
  NOT: MovieInGenreGenresConnectionAggregateInput
  OR: [MovieInGenreGenresConnectionAggregateInput!]
  count: ConnectionAggregationCountFilterInput
  node: MovieInGenreGenresNodeAggregationWhereInput
}

input MovieInGenreGenresConnectionFilters {
  """
  Filter Movies by aggregating results on related MovieInGenreGenresConnections
  """
  aggregate: MovieInGenreGenresConnectionAggregateInput
  """
  Return Movies where all of the related MovieInGenreGenresConnections match this filter
  """
  all: MovieInGenreGenresConnectionWhere
  """
  Return Movies where none of the related MovieInGenreGenresConnections match this filter
  """
  none: MovieInGenreGenresConnectionWhere
  """
  Return Movies where one of the related MovieInGenreGenresConnections match this filter
  """
  single: MovieInGenreGenresConnectionWhere
  """
  Return Movies where some of the related MovieInGenreGenresConnections match this filter
  """
  some: MovieInGenreGenresConnectionWhere
}

input MovieInGenreGenresConnectionSort {
  node: GenreSort
}

input MovieInGenreGenresConnectionWhere {
  AND: [MovieInGenreGenresConnectionWhere!]
  NOT: MovieInGenreGenresConnectionWhere
  OR: [MovieInGenreGenresConnectionWhere!]
  node: GenreWhere
}

input MovieInGenreGenresCreateFieldInput {
  node: GenreCreateInput!
}

input MovieInGenreGenresDeleteFieldInput {
  delete: GenreDeleteInput
  where: MovieInGenreGenresConnectionWhere
}

input MovieInGenreGenresDisconnectFieldInput {
  disconnect: GenreDisconnectInput
  where: MovieInGenreGenresConnectionWhere
}

input MovieInGenreGenresFieldInput {
  connect: [MovieInGenreGenresConnectFieldInput!]
  create: [MovieInGenreGenresCreateFieldInput!]
}

input MovieInGenreGenresNodeAggregationWhereInput {
  AND: [MovieInGenreGenresNodeAggregationWhereInput!]
  NOT: MovieInGenreGenresNodeAggregationWhereInput
  OR: [MovieInGenreGenresNodeAggregationWhereInput!]
  name: StringScalarAggregationFilters
  name_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'name: { averageLength: { eq: ... } } }' instead.")
  name_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'name: { averageLength: { gt: ... } } }' instead.")
  name_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'name: { averageLength: { gte: ... } } }' instead.")
  name_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'name: { averageLength: { lt: ... } } }' instead.")
  name_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'name: { averageLength: { lte: ... } } }' instead.")
  name_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'name: { longestLength: { eq: ... } } }' instead.")
  name_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'name: { longestLength: { gt: ... } } }' instead.")
  name_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'name: { longestLength: { gte: ... } } }' instead.")
  name_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'name: { longestLength: { lt: ... } } }' instead.")
  name_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'name: { longestLength: { lte: ... } } }' instead.")
  name_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'name: { shortestLength: { eq: ... } } }' instead.")
  name_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'name: { shortestLength: { gt: ... } } }' instead.")
  name_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'name: { shortestLength: { gte: ... } } }' instead.")
  name_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'name: { shortestLength: { lt: ... } } }' instead.")
  name_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'name: { shortestLength: { lte: ... } } }' instead.")
}

type MovieInGenreGenresRelationship {
  cursor: String!
  node: Genre!
}

input MovieInGenreGenresUpdateConnectionInput {
  node: GenreUpdateInput
  where: MovieInGenreGenresConnectionWhere
}

input MovieInGenreGenresUpdateFieldInput {
  connect: [MovieInGenreGenresConnectFieldInput!]
  create: [MovieInGenreGenresCreateFieldInput!]
  delete: [MovieInGenreGenresDeleteFieldInput!]
  disconnect: [MovieInGenreGenresDisconnectFieldInput!]
  update: MovieInGenreGenresUpdateConnectionInput
}

input MovieRelationshipFilters {
  """Filter type where all of the related Movies match this filter"""
  all: MovieWhere
  """Filter type where none of the related Movies match this filter"""
  none: MovieWhere
  """Filter type where one of the related Movies match this filter"""
  single: MovieWhere
  """Filter type where some of the related Movies match this filter"""
  some: MovieWhere
}

"""
Fields to sort Movies by. The order in which sorts are applied is not guaranteed when specifying many fields in one MovieSort object.
"""
input MovieSort {
  budget: SortDirection
  imdbId: SortDirection
  imdbRating: SortDirection
  imdbVotes: SortDirection
  movieId: SortDirection
  plot: SortDirection
  poster: SortDirection
  released: SortDirection
  revenue: SortDirection
  runtime: SortDirection
  title: SortDirection
  tmdbId: SortDirection
  url: SortDirection
  year: SortDirection
}

input MovieUpdateInput {
  actor2SActedIn: [MovieActor2SActedInUpdateFieldInput!]
  actor2SDirected: [MovieActor2SDirectedUpdateFieldInput!]
  actorsActedIn: [MovieActorsActedInUpdateFieldInput!]
  budget: BigIntScalarMutations
  budget_DECREMENT: BigInt @deprecated(reason: "Please use the relevant generic mutation 'budget: { decrement: ... } }' instead.")
  budget_INCREMENT: BigInt @deprecated(reason: "Please use the relevant generic mutation 'budget: { increment: ... } }' instead.")
  budget_SET: BigInt
  countries: ListStringMutations
  countries_POP: Int @deprecated(reason: "Please use the generic mutation 'countries: { pop: ... } }' instead.")
  countries_PUSH: [String!] @deprecated(reason: "Please use the generic mutation 'countries: { push: ... } }' instead.")
  countries_SET: [String!]
  directorsDirected: [MovieDirectorsDirectedUpdateFieldInput!]
  imdbId: StringScalarMutations
  imdbId_SET: String
  imdbRating: FloatScalarMutations
  imdbRating_ADD: Float @deprecated(reason: "Please use the relevant generic mutation 'imdbRating: { add: ... } }' instead.")
  imdbRating_DIVIDE: Float @deprecated(reason: "Please use the relevant generic mutation 'imdbRating: { divide: ... } }' instead.")
  imdbRating_MULTIPLY: Float @deprecated(reason: "Please use the relevant generic mutation 'imdbRating: { multiply: ... } }' instead.")
  imdbRating_SET: Float
  imdbRating_SUBTRACT: Float @deprecated(reason: "Please use the relevant generic mutation 'imdbRating: { subtract: ... } }' instead.")
  imdbVotes: BigIntScalarMutations
  imdbVotes_DECREMENT: BigInt @deprecated(reason: "Please use the relevant generic mutation 'imdbVotes: { decrement: ... } }' instead.")
  imdbVotes_INCREMENT: BigInt @deprecated(reason: "Please use the relevant generic mutation 'imdbVotes: { increment: ... } }' instead.")
  imdbVotes_SET: BigInt
  inGenreGenres: [MovieInGenreGenresUpdateFieldInput!]
  languages: ListStringMutations
  languages_POP: Int @deprecated(reason: "Please use the generic mutation 'languages: { pop: ... } }' instead.")
  languages_PUSH: [String!] @deprecated(reason: "Please use the generic mutation 'languages: { push: ... } }' instead.")
  languages_SET: [String!]
  movieId: StringScalarMutations
  movieId_SET: String
  plot: StringScalarMutations
  plotEmbedding: ListFloatMutations
  plotEmbedding_POP: Int @deprecated(reason: "Please use the generic mutation 'plotEmbedding: { pop: ... } }' instead.")
  plotEmbedding_PUSH: [Float!] @deprecated(reason: "Please use the generic mutation 'plotEmbedding: { push: ... } }' instead.")
  plotEmbedding_SET: [Float!]
  plot_SET: String
  poster: StringScalarMutations
  posterEmbedding: ListFloatMutations
  posterEmbedding_POP: Int @deprecated(reason: "Please use the generic mutation 'posterEmbedding: { pop: ... } }' instead.")
  posterEmbedding_PUSH: [Float!] @deprecated(reason: "Please use the generic mutation 'posterEmbedding: { push: ... } }' instead.")
  posterEmbedding_SET: [Float!]
  poster_SET: String
  released: StringScalarMutations
  released_SET: String
  revenue: BigIntScalarMutations
  revenue_DECREMENT: BigInt @deprecated(reason: "Please use the relevant generic mutation 'revenue: { decrement: ... } }' instead.")
  revenue_INCREMENT: BigInt @deprecated(reason: "Please use the relevant generic mutation 'revenue: { increment: ... } }' instead.")
  revenue_SET: BigInt
  runtime: BigIntScalarMutations
  runtime_DECREMENT: BigInt @deprecated(reason: "Please use the relevant generic mutation 'runtime: { decrement: ... } }' instead.")
  runtime_INCREMENT: BigInt @deprecated(reason: "Please use the relevant generic mutation 'runtime: { increment: ... } }' instead.")
  runtime_SET: BigInt
  title: StringScalarMutations
  title_SET: String
  tmdbId: StringScalarMutations
  tmdbId_SET: String
  url: StringScalarMutations
  url_SET: String
  usersRated: [MovieUsersRatedUpdateFieldInput!]
  year: BigIntScalarMutations
  year_DECREMENT: BigInt @deprecated(reason: "Please use the relevant generic mutation 'year: { decrement: ... } }' instead.")
  year_INCREMENT: BigInt @deprecated(reason: "Please use the relevant generic mutation 'year: { increment: ... } }' instead.")
  year_SET: BigInt
}

type MovieUserUsersRatedAggregateSelection {
  count: CountConnection!
  edge: MovieUserUsersRatedEdgeAggregateSelection
  node: MovieUserUsersRatedNodeAggregateSelection
}

type MovieUserUsersRatedEdgeAggregateSelection {
  rating: FloatAggregateSelection!
  timestamp: BigIntAggregateSelection!
}

type MovieUserUsersRatedNodeAggregateSelection {
  name: StringAggregateSelection!
  userId: StringAggregateSelection!
}

input MovieUsersRatedAggregateInput {
  AND: [MovieUsersRatedAggregateInput!]
  NOT: MovieUsersRatedAggregateInput
  OR: [MovieUsersRatedAggregateInput!]
  count: IntScalarFilters
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  edge: RatedPropertiesAggregationWhereInput
  node: MovieUsersRatedNodeAggregationWhereInput
}

input MovieUsersRatedConnectFieldInput {
  connect: [UserConnectInput!]
  edge: RatedPropertiesCreateInput!
  where: UserConnectWhere
}

type MovieUsersRatedConnection {
  aggregate: MovieUserUsersRatedAggregateSelection!
  edges: [MovieUsersRatedRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input MovieUsersRatedConnectionAggregateInput {
  AND: [MovieUsersRatedConnectionAggregateInput!]
  NOT: MovieUsersRatedConnectionAggregateInput
  OR: [MovieUsersRatedConnectionAggregateInput!]
  count: ConnectionAggregationCountFilterInput
  edge: RatedPropertiesAggregationWhereInput
  node: MovieUsersRatedNodeAggregationWhereInput
}

input MovieUsersRatedConnectionFilters {
  """
  Filter Movies by aggregating results on related MovieUsersRatedConnections
  """
  aggregate: MovieUsersRatedConnectionAggregateInput
  """
  Return Movies where all of the related MovieUsersRatedConnections match this filter
  """
  all: MovieUsersRatedConnectionWhere
  """
  Return Movies where none of the related MovieUsersRatedConnections match this filter
  """
  none: MovieUsersRatedConnectionWhere
  """
  Return Movies where one of the related MovieUsersRatedConnections match this filter
  """
  single: MovieUsersRatedConnectionWhere
  """
  Return Movies where some of the related MovieUsersRatedConnections match this filter
  """
  some: MovieUsersRatedConnectionWhere
}

input MovieUsersRatedConnectionSort {
  edge: RatedPropertiesSort
  node: UserSort
}

input MovieUsersRatedConnectionWhere {
  AND: [MovieUsersRatedConnectionWhere!]
  NOT: MovieUsersRatedConnectionWhere
  OR: [MovieUsersRatedConnectionWhere!]
  edge: RatedPropertiesWhere
  node: UserWhere
}

input MovieUsersRatedCreateFieldInput {
  edge: RatedPropertiesCreateInput!
  node: UserCreateInput!
}

input MovieUsersRatedDeleteFieldInput {
  delete: UserDeleteInput
  where: MovieUsersRatedConnectionWhere
}

input MovieUsersRatedDisconnectFieldInput {
  disconnect: UserDisconnectInput
  where: MovieUsersRatedConnectionWhere
}

input MovieUsersRatedFieldInput {
  connect: [MovieUsersRatedConnectFieldInput!]
  create: [MovieUsersRatedCreateFieldInput!]
}

input MovieUsersRatedNodeAggregationWhereInput {
  AND: [MovieUsersRatedNodeAggregationWhereInput!]
  NOT: MovieUsersRatedNodeAggregationWhereInput
  OR: [MovieUsersRatedNodeAggregationWhereInput!]
  name: StringScalarAggregationFilters
  name_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'name: { averageLength: { eq: ... } } }' instead.")
  name_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'name: { averageLength: { gt: ... } } }' instead.")
  name_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'name: { averageLength: { gte: ... } } }' instead.")
  name_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'name: { averageLength: { lt: ... } } }' instead.")
  name_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'name: { averageLength: { lte: ... } } }' instead.")
  name_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'name: { longestLength: { eq: ... } } }' instead.")
  name_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'name: { longestLength: { gt: ... } } }' instead.")
  name_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'name: { longestLength: { gte: ... } } }' instead.")
  name_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'name: { longestLength: { lt: ... } } }' instead.")
  name_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'name: { longestLength: { lte: ... } } }' instead.")
  name_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'name: { shortestLength: { eq: ... } } }' instead.")
  name_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'name: { shortestLength: { gt: ... } } }' instead.")
  name_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'name: { shortestLength: { gte: ... } } }' instead.")
  name_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'name: { shortestLength: { lt: ... } } }' instead.")
  name_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'name: { shortestLength: { lte: ... } } }' instead.")
  userId: StringScalarAggregationFilters
  userId_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'userId: { averageLength: { eq: ... } } }' instead.")
  userId_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'userId: { averageLength: { gt: ... } } }' instead.")
  userId_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'userId: { averageLength: { gte: ... } } }' instead.")
  userId_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'userId: { averageLength: { lt: ... } } }' instead.")
  userId_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'userId: { averageLength: { lte: ... } } }' instead.")
  userId_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'userId: { longestLength: { eq: ... } } }' instead.")
  userId_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'userId: { longestLength: { gt: ... } } }' instead.")
  userId_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'userId: { longestLength: { gte: ... } } }' instead.")
  userId_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'userId: { longestLength: { lt: ... } } }' instead.")
  userId_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'userId: { longestLength: { lte: ... } } }' instead.")
  userId_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'userId: { shortestLength: { eq: ... } } }' instead.")
  userId_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'userId: { shortestLength: { gt: ... } } }' instead.")
  userId_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'userId: { shortestLength: { gte: ... } } }' instead.")
  userId_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'userId: { shortestLength: { lt: ... } } }' instead.")
  userId_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'userId: { shortestLength: { lte: ... } } }' instead.")
}

type MovieUsersRatedRelationship {
  cursor: String!
  node: User!
  properties: RatedProperties!
}

input MovieUsersRatedUpdateConnectionInput {
  edge: RatedPropertiesUpdateInput
  node: UserUpdateInput
  where: MovieUsersRatedConnectionWhere
}

input MovieUsersRatedUpdateFieldInput {
  connect: [MovieUsersRatedConnectFieldInput!]
  create: [MovieUsersRatedCreateFieldInput!]
  delete: [MovieUsersRatedDeleteFieldInput!]
  disconnect: [MovieUsersRatedDisconnectFieldInput!]
  update: MovieUsersRatedUpdateConnectionInput
}

input MovieWhere {
  AND: [MovieWhere!]
  NOT: MovieWhere
  OR: [MovieWhere!]
  actor2SActedIn: Actor2RelationshipFilters
  actor2SActedInAggregate: MovieActor2SActedInAggregateInput @deprecated(reason: "Aggregate filters are moved inside the actor2SActedInConnection filter, please use { actor2SActedInConnection: { aggregate: {...} } } instead")
  actor2SActedInConnection: MovieActor2SActedInConnectionFilters
  """
  Return Movies where all of the related MovieActor2SActedInConnections match this filter
  """
  actor2SActedInConnection_ALL: MovieActor2SActedInConnectionWhere @deprecated(reason: "Please use the relevant generic filter 'actor2SActedInConnection: { all: { node: ... } } }' instead.")
  """
  Return Movies where none of the related MovieActor2SActedInConnections match this filter
  """
  actor2SActedInConnection_NONE: MovieActor2SActedInConnectionWhere @deprecated(reason: "Please use the relevant generic filter 'actor2SActedInConnection: { none: { node: ... } } }' instead.")
  """
  Return Movies where one of the related MovieActor2SActedInConnections match this filter
  """
  actor2SActedInConnection_SINGLE: MovieActor2SActedInConnectionWhere @deprecated(reason: "Please use the relevant generic filter 'actor2SActedInConnection: { single: { node: ... } } }' instead.")
  """
  Return Movies where some of the related MovieActor2SActedInConnections match this filter
  """
  actor2SActedInConnection_SOME: MovieActor2SActedInConnectionWhere @deprecated(reason: "Please use the relevant generic filter 'actor2SActedInConnection: { some: { node: ... } } }' instead.")
  """Return Movies where all of the related Actor2s match this filter"""
  actor2SActedIn_ALL: Actor2Where @deprecated(reason: "Please use the relevant generic filter 'actor2SActedIn: { all: ... }' instead.")
  """Return Movies where none of the related Actor2s match this filter"""
  actor2SActedIn_NONE: Actor2Where @deprecated(reason: "Please use the relevant generic filter 'actor2SActedIn: { none: ... }' instead.")
  """Return Movies where one of the related Actor2s match this filter"""
  actor2SActedIn_SINGLE: Actor2Where @deprecated(reason: "Please use the relevant generic filter 'actor2SActedIn: {  single: ... }' instead.")
  """Return Movies where some of the related Actor2s match this filter"""
  actor2SActedIn_SOME: Actor2Where @deprecated(reason: "Please use the relevant generic filter 'actor2SActedIn: {  some: ... }' instead.")
  actor2SDirected: Actor2RelationshipFilters
  actor2SDirectedAggregate: MovieActor2SDirectedAggregateInput @deprecated(reason: "Aggregate filters are moved inside the actor2SDirectedConnection filter, please use { actor2SDirectedConnection: { aggregate: {...} } } instead")
  actor2SDirectedConnection: MovieActor2SDirectedConnectionFilters
  """
  Return Movies where all of the related MovieActor2SDirectedConnections match this filter
  """
  actor2SDirectedConnection_ALL: MovieActor2SDirectedConnectionWhere @deprecated(reason: "Please use the relevant generic filter 'actor2SDirectedConnection: { all: { node: ... } } }' instead.")
  """
  Return Movies where none of the related MovieActor2SDirectedConnections match this filter
  """
  actor2SDirectedConnection_NONE: MovieActor2SDirectedConnectionWhere @deprecated(reason: "Please use the relevant generic filter 'actor2SDirectedConnection: { none: { node: ... } } }' instead.")
  """
  Return Movies where one of the related MovieActor2SDirectedConnections match this filter
  """
  actor2SDirectedConnection_SINGLE: MovieActor2SDirectedConnectionWhere @deprecated(reason: "Please use the relevant generic filter 'actor2SDirectedConnection: { single: { node: ... } } }' instead.")
  """
  Return Movies where some of the related MovieActor2SDirectedConnections match this filter
  """
  actor2SDirectedConnection_SOME: MovieActor2SDirectedConnectionWhere @deprecated(reason: "Please use the relevant generic filter 'actor2SDirectedConnection: { some: { node: ... } } }' instead.")
  """Return Movies where all of the related Actor2s match this filter"""
  actor2SDirected_ALL: Actor2Where @deprecated(reason: "Please use the relevant generic filter 'actor2SDirected: { all: ... }' instead.")
  """Return Movies where none of the related Actor2s match this filter"""
  actor2SDirected_NONE: Actor2Where @deprecated(reason: "Please use the relevant generic filter 'actor2SDirected: { none: ... }' instead.")
  """Return Movies where one of the related Actor2s match this filter"""
  actor2SDirected_SINGLE: Actor2Where @deprecated(reason: "Please use the relevant generic filter 'actor2SDirected: {  single: ... }' instead.")
  """Return Movies where some of the related Actor2s match this filter"""
  actor2SDirected_SOME: Actor2Where @deprecated(reason: "Please use the relevant generic filter 'actor2SDirected: {  some: ... }' instead.")
  actorsActedIn: ActorRelationshipFilters
  actorsActedInAggregate: MovieActorsActedInAggregateInput @deprecated(reason: "Aggregate filters are moved inside the actorsActedInConnection filter, please use { actorsActedInConnection: { aggregate: {...} } } instead")
  actorsActedInConnection: MovieActorsActedInConnectionFilters
  """
  Return Movies where all of the related MovieActorsActedInConnections match this filter
  """
  actorsActedInConnection_ALL: MovieActorsActedInConnectionWhere @deprecated(reason: "Please use the relevant generic filter 'actorsActedInConnection: { all: { node: ... } } }' instead.")
  """
  Return Movies where none of the related MovieActorsActedInConnections match this filter
  """
  actorsActedInConnection_NONE: MovieActorsActedInConnectionWhere @deprecated(reason: "Please use the relevant generic filter 'actorsActedInConnection: { none: { node: ... } } }' instead.")
  """
  Return Movies where one of the related MovieActorsActedInConnections match this filter
  """
  actorsActedInConnection_SINGLE: MovieActorsActedInConnectionWhere @deprecated(reason: "Please use the relevant generic filter 'actorsActedInConnection: { single: { node: ... } } }' instead.")
  """
  Return Movies where some of the related MovieActorsActedInConnections match this filter
  """
  actorsActedInConnection_SOME: MovieActorsActedInConnectionWhere @deprecated(reason: "Please use the relevant generic filter 'actorsActedInConnection: { some: { node: ... } } }' instead.")
  """Return Movies where all of the related Actors match this filter"""
  actorsActedIn_ALL: ActorWhere @deprecated(reason: "Please use the relevant generic filter 'actorsActedIn: { all: ... }' instead.")
  """Return Movies where none of the related Actors match this filter"""
  actorsActedIn_NONE: ActorWhere @deprecated(reason: "Please use the relevant generic filter 'actorsActedIn: { none: ... }' instead.")
  """Return Movies where one of the related Actors match this filter"""
  actorsActedIn_SINGLE: ActorWhere @deprecated(reason: "Please use the relevant generic filter 'actorsActedIn: {  single: ... }' instead.")
  """Return Movies where some of the related Actors match this filter"""
  actorsActedIn_SOME: ActorWhere @deprecated(reason: "Please use the relevant generic filter 'actorsActedIn: {  some: ... }' instead.")
  budget: BigIntScalarFilters
  budget_EQ: BigInt @deprecated(reason: "Please use the relevant generic filter budget: { eq: ... }")
  budget_GT: BigInt @deprecated(reason: "Please use the relevant generic filter budget: { gt: ... }")
  budget_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter budget: { gte: ... }")
  budget_IN: [BigInt] @deprecated(reason: "Please use the relevant generic filter budget: { in: ... }")
  budget_LT: BigInt @deprecated(reason: "Please use the relevant generic filter budget: { lt: ... }")
  budget_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter budget: { lte: ... }")
  countries: StringListFilters
  countries_EQ: [String!] @deprecated(reason: "Please use the relevant generic filter countries: { eq: ... }")
  countries_INCLUDES: String @deprecated(reason: "Please use the relevant generic filter countries: { includes: ... }")
  directorsDirected: DirectorRelationshipFilters
  directorsDirectedAggregate: MovieDirectorsDirectedAggregateInput @deprecated(reason: "Aggregate filters are moved inside the directorsDirectedConnection filter, please use { directorsDirectedConnection: { aggregate: {...} } } instead")
  directorsDirectedConnection: MovieDirectorsDirectedConnectionFilters
  """
  Return Movies where all of the related MovieDirectorsDirectedConnections match this filter
  """
  directorsDirectedConnection_ALL: MovieDirectorsDirectedConnectionWhere @deprecated(reason: "Please use the relevant generic filter 'directorsDirectedConnection: { all: { node: ... } } }' instead.")
  """
  Return Movies where none of the related MovieDirectorsDirectedConnections match this filter
  """
  directorsDirectedConnection_NONE: MovieDirectorsDirectedConnectionWhere @deprecated(reason: "Please use the relevant generic filter 'directorsDirectedConnection: { none: { node: ... } } }' instead.")
  """
  Return Movies where one of the related MovieDirectorsDirectedConnections match this filter
  """
  directorsDirectedConnection_SINGLE: MovieDirectorsDirectedConnectionWhere @deprecated(reason: "Please use the relevant generic filter 'directorsDirectedConnection: { single: { node: ... } } }' instead.")
  """
  Return Movies where some of the related MovieDirectorsDirectedConnections match this filter
  """
  directorsDirectedConnection_SOME: MovieDirectorsDirectedConnectionWhere @deprecated(reason: "Please use the relevant generic filter 'directorsDirectedConnection: { some: { node: ... } } }' instead.")
  """Return Movies where all of the related Directors match this filter"""
  directorsDirected_ALL: DirectorWhere @deprecated(reason: "Please use the relevant generic filter 'directorsDirected: { all: ... }' instead.")
  """Return Movies where none of the related Directors match this filter"""
  directorsDirected_NONE: DirectorWhere @deprecated(reason: "Please use the relevant generic filter 'directorsDirected: { none: ... }' instead.")
  """Return Movies where one of the related Directors match this filter"""
  directorsDirected_SINGLE: DirectorWhere @deprecated(reason: "Please use the relevant generic filter 'directorsDirected: {  single: ... }' instead.")
  """Return Movies where some of the related Directors match this filter"""
  directorsDirected_SOME: DirectorWhere @deprecated(reason: "Please use the relevant generic filter 'directorsDirected: {  some: ... }' instead.")
  imdbId: StringScalarFilters
  imdbId_CONTAINS: String @deprecated(reason: "Please use the relevant generic filter imdbId: { contains: ... }")
  imdbId_ENDS_WITH: String @deprecated(reason: "Please use the relevant generic filter imdbId: { endsWith: ... }")
  imdbId_EQ: String @deprecated(reason: "Please use the relevant generic filter imdbId: { eq: ... }")
  imdbId_IN: [String!] @deprecated(reason: "Please use the relevant generic filter imdbId: { in: ... }")
  imdbId_STARTS_WITH: String @deprecated(reason: "Please use the relevant generic filter imdbId: { startsWith: ... }")
  imdbRating: FloatScalarFilters
  imdbRating_EQ: Float @deprecated(reason: "Please use the relevant generic filter imdbRating: { eq: ... }")
  imdbRating_GT: Float @deprecated(reason: "Please use the relevant generic filter imdbRating: { gt: ... }")
  imdbRating_GTE: Float @deprecated(reason: "Please use the relevant generic filter imdbRating: { gte: ... }")
  imdbRating_IN: [Float] @deprecated(reason: "Please use the relevant generic filter imdbRating: { in: ... }")
  imdbRating_LT: Float @deprecated(reason: "Please use the relevant generic filter imdbRating: { lt: ... }")
  imdbRating_LTE: Float @deprecated(reason: "Please use the relevant generic filter imdbRating: { lte: ... }")
  imdbVotes: BigIntScalarFilters
  imdbVotes_EQ: BigInt @deprecated(reason: "Please use the relevant generic filter imdbVotes: { eq: ... }")
  imdbVotes_GT: BigInt @deprecated(reason: "Please use the relevant generic filter imdbVotes: { gt: ... }")
  imdbVotes_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter imdbVotes: { gte: ... }")
  imdbVotes_IN: [BigInt] @deprecated(reason: "Please use the relevant generic filter imdbVotes: { in: ... }")
  imdbVotes_LT: BigInt @deprecated(reason: "Please use the relevant generic filter imdbVotes: { lt: ... }")
  imdbVotes_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter imdbVotes: { lte: ... }")
  inGenreGenres: GenreRelationshipFilters
  inGenreGenresAggregate: MovieInGenreGenresAggregateInput @deprecated(reason: "Aggregate filters are moved inside the inGenreGenresConnection filter, please use { inGenreGenresConnection: { aggregate: {...} } } instead")
  inGenreGenresConnection: MovieInGenreGenresConnectionFilters
  """
  Return Movies where all of the related MovieInGenreGenresConnections match this filter
  """
  inGenreGenresConnection_ALL: MovieInGenreGenresConnectionWhere @deprecated(reason: "Please use the relevant generic filter 'inGenreGenresConnection: { all: { node: ... } } }' instead.")
  """
  Return Movies where none of the related MovieInGenreGenresConnections match this filter
  """
  inGenreGenresConnection_NONE: MovieInGenreGenresConnectionWhere @deprecated(reason: "Please use the relevant generic filter 'inGenreGenresConnection: { none: { node: ... } } }' instead.")
  """
  Return Movies where one of the related MovieInGenreGenresConnections match this filter
  """
  inGenreGenresConnection_SINGLE: MovieInGenreGenresConnectionWhere @deprecated(reason: "Please use the relevant generic filter 'inGenreGenresConnection: { single: { node: ... } } }' instead.")
  """
  Return Movies where some of the related MovieInGenreGenresConnections match this filter
  """
  inGenreGenresConnection_SOME: MovieInGenreGenresConnectionWhere @deprecated(reason: "Please use the relevant generic filter 'inGenreGenresConnection: { some: { node: ... } } }' instead.")
  """Return Movies where all of the related Genres match this filter"""
  inGenreGenres_ALL: GenreWhere @deprecated(reason: "Please use the relevant generic filter 'inGenreGenres: { all: ... }' instead.")
  """Return Movies where none of the related Genres match this filter"""
  inGenreGenres_NONE: GenreWhere @deprecated(reason: "Please use the relevant generic filter 'inGenreGenres: { none: ... }' instead.")
  """Return Movies where one of the related Genres match this filter"""
  inGenreGenres_SINGLE: GenreWhere @deprecated(reason: "Please use the relevant generic filter 'inGenreGenres: {  single: ... }' instead.")
  """Return Movies where some of the related Genres match this filter"""
  inGenreGenres_SOME: GenreWhere @deprecated(reason: "Please use the relevant generic filter 'inGenreGenres: {  some: ... }' instead.")
  languages: StringListFilters
  languages_EQ: [String!] @deprecated(reason: "Please use the relevant generic filter languages: { eq: ... }")
  languages_INCLUDES: String @deprecated(reason: "Please use the relevant generic filter languages: { includes: ... }")
  movieId: StringScalarFilters
  movieId_CONTAINS: String @deprecated(reason: "Please use the relevant generic filter movieId: { contains: ... }")
  movieId_ENDS_WITH: String @deprecated(reason: "Please use the relevant generic filter movieId: { endsWith: ... }")
  movieId_EQ: String @deprecated(reason: "Please use the relevant generic filter movieId: { eq: ... }")
  movieId_IN: [String!] @deprecated(reason: "Please use the relevant generic filter movieId: { in: ... }")
  movieId_STARTS_WITH: String @deprecated(reason: "Please use the relevant generic filter movieId: { startsWith: ... }")
  plot: StringScalarFilters
  plotEmbedding: FloatListFilters
  plotEmbedding_EQ: [Float!] @deprecated(reason: "Please use the relevant generic filter plotEmbedding: { eq: ... }")
  plotEmbedding_INCLUDES: Float @deprecated(reason: "Please use the relevant generic filter plotEmbedding: { includes: ... }")
  plot_CONTAINS: String @deprecated(reason: "Please use the relevant generic filter plot: { contains: ... }")
  plot_ENDS_WITH: String @deprecated(reason: "Please use the relevant generic filter plot: { endsWith: ... }")
  plot_EQ: String @deprecated(reason: "Please use the relevant generic filter plot: { eq: ... }")
  plot_IN: [String] @deprecated(reason: "Please use the relevant generic filter plot: { in: ... }")
  plot_STARTS_WITH: String @deprecated(reason: "Please use the relevant generic filter plot: { startsWith: ... }")
  poster: StringScalarFilters
  posterEmbedding: FloatListFilters
  posterEmbedding_EQ: [Float!] @deprecated(reason: "Please use the relevant generic filter posterEmbedding: { eq: ... }")
  posterEmbedding_INCLUDES: Float @deprecated(reason: "Please use the relevant generic filter posterEmbedding: { includes: ... }")
  poster_CONTAINS: String @deprecated(reason: "Please use the relevant generic filter poster: { contains: ... }")
  poster_ENDS_WITH: String @deprecated(reason: "Please use the relevant generic filter poster: { endsWith: ... }")
  poster_EQ: String @deprecated(reason: "Please use the relevant generic filter poster: { eq: ... }")
  poster_IN: [String] @deprecated(reason: "Please use the relevant generic filter poster: { in: ... }")
  poster_STARTS_WITH: String @deprecated(reason: "Please use the relevant generic filter poster: { startsWith: ... }")
  released: StringScalarFilters
  released_CONTAINS: String @deprecated(reason: "Please use the relevant generic filter released: { contains: ... }")
  released_ENDS_WITH: String @deprecated(reason: "Please use the relevant generic filter released: { endsWith: ... }")
  released_EQ: String @deprecated(reason: "Please use the relevant generic filter released: { eq: ... }")
  released_IN: [String] @deprecated(reason: "Please use the relevant generic filter released: { in: ... }")
  released_STARTS_WITH: String @deprecated(reason: "Please use the relevant generic filter released: { startsWith: ... }")
  revenue: BigIntScalarFilters
  revenue_EQ: BigInt @deprecated(reason: "Please use the relevant generic filter revenue: { eq: ... }")
  revenue_GT: BigInt @deprecated(reason: "Please use the relevant generic filter revenue: { gt: ... }")
  revenue_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter revenue: { gte: ... }")
  revenue_IN: [BigInt] @deprecated(reason: "Please use the relevant generic filter revenue: { in: ... }")
  revenue_LT: BigInt @deprecated(reason: "Please use the relevant generic filter revenue: { lt: ... }")
  revenue_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter revenue: { lte: ... }")
  runtime: BigIntScalarFilters
  runtime_EQ: BigInt @deprecated(reason: "Please use the relevant generic filter runtime: { eq: ... }")
  runtime_GT: BigInt @deprecated(reason: "Please use the relevant generic filter runtime: { gt: ... }")
  runtime_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter runtime: { gte: ... }")
  runtime_IN: [BigInt] @deprecated(reason: "Please use the relevant generic filter runtime: { in: ... }")
  runtime_LT: BigInt @deprecated(reason: "Please use the relevant generic filter runtime: { lt: ... }")
  runtime_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter runtime: { lte: ... }")
  title: StringScalarFilters
  title_CONTAINS: String @deprecated(reason: "Please use the relevant generic filter title: { contains: ... }")
  title_ENDS_WITH: String @deprecated(reason: "Please use the relevant generic filter title: { endsWith: ... }")
  title_EQ: String @deprecated(reason: "Please use the relevant generic filter title: { eq: ... }")
  title_IN: [String!] @deprecated(reason: "Please use the relevant generic filter title: { in: ... }")
  title_STARTS_WITH: String @deprecated(reason: "Please use the relevant generic filter title: { startsWith: ... }")
  tmdbId: StringScalarFilters
  tmdbId_CONTAINS: String @deprecated(reason: "Please use the relevant generic filter tmdbId: { contains: ... }")
  tmdbId_ENDS_WITH: String @deprecated(reason: "Please use the relevant generic filter tmdbId: { endsWith: ... }")
  tmdbId_EQ: String @deprecated(reason: "Please use the relevant generic filter tmdbId: { eq: ... }")
  tmdbId_IN: [String] @deprecated(reason: "Please use the relevant generic filter tmdbId: { in: ... }")
  tmdbId_STARTS_WITH: String @deprecated(reason: "Please use the relevant generic filter tmdbId: { startsWith: ... }")
  url: StringScalarFilters
  url_CONTAINS: String @deprecated(reason: "Please use the relevant generic filter url: { contains: ... }")
  url_ENDS_WITH: String @deprecated(reason: "Please use the relevant generic filter url: { endsWith: ... }")
  url_EQ: String @deprecated(reason: "Please use the relevant generic filter url: { eq: ... }")
  url_IN: [String] @deprecated(reason: "Please use the relevant generic filter url: { in: ... }")
  url_STARTS_WITH: String @deprecated(reason: "Please use the relevant generic filter url: { startsWith: ... }")
  usersRated: UserRelationshipFilters
  usersRatedAggregate: MovieUsersRatedAggregateInput @deprecated(reason: "Aggregate filters are moved inside the usersRatedConnection filter, please use { usersRatedConnection: { aggregate: {...} } } instead")
  usersRatedConnection: MovieUsersRatedConnectionFilters
  """
  Return Movies where all of the related MovieUsersRatedConnections match this filter
  """
  usersRatedConnection_ALL: MovieUsersRatedConnectionWhere @deprecated(reason: "Please use the relevant generic filter 'usersRatedConnection: { all: { node: ... } } }' instead.")
  """
  Return Movies where none of the related MovieUsersRatedConnections match this filter
  """
  usersRatedConnection_NONE: MovieUsersRatedConnectionWhere @deprecated(reason: "Please use the relevant generic filter 'usersRatedConnection: { none: { node: ... } } }' instead.")
  """
  Return Movies where one of the related MovieUsersRatedConnections match this filter
  """
  usersRatedConnection_SINGLE: MovieUsersRatedConnectionWhere @deprecated(reason: "Please use the relevant generic filter 'usersRatedConnection: { single: { node: ... } } }' instead.")
  """
  Return Movies where some of the related MovieUsersRatedConnections match this filter
  """
  usersRatedConnection_SOME: MovieUsersRatedConnectionWhere @deprecated(reason: "Please use the relevant generic filter 'usersRatedConnection: { some: { node: ... } } }' instead.")
  """Return Movies where all of the related Users match this filter"""
  usersRated_ALL: UserWhere @deprecated(reason: "Please use the relevant generic filter 'usersRated: { all: ... }' instead.")
  """Return Movies where none of the related Users match this filter"""
  usersRated_NONE: UserWhere @deprecated(reason: "Please use the relevant generic filter 'usersRated: { none: ... }' instead.")
  """Return Movies where one of the related Users match this filter"""
  usersRated_SINGLE: UserWhere @deprecated(reason: "Please use the relevant generic filter 'usersRated: {  single: ... }' instead.")
  """Return Movies where some of the related Users match this filter"""
  usersRated_SOME: UserWhere @deprecated(reason: "Please use the relevant generic filter 'usersRated: {  some: ... }' instead.")
  year: BigIntScalarFilters
  year_EQ: BigInt @deprecated(reason: "Please use the relevant generic filter year: { eq: ... }")
  year_GT: BigInt @deprecated(reason: "Please use the relevant generic filter year: { gt: ... }")
  year_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter year: { gte: ... }")
  year_IN: [BigInt] @deprecated(reason: "Please use the relevant generic filter year: { in: ... }")
  year_LT: BigInt @deprecated(reason: "Please use the relevant generic filter year: { lt: ... }")
  year_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter year: { lte: ... }")
}

type MoviesConnection {
  aggregate: MovieAggregate!
  edges: [MovieEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type Mutation {
  createActor2s(input: [Actor2CreateInput!]!): CreateActor2sMutationResponse!
  createActors(input: [ActorCreateInput!]!): CreateActorsMutationResponse!
  createDirectors(input: [DirectorCreateInput!]!): CreateDirectorsMutationResponse!
  createGenres(input: [GenreCreateInput!]!): CreateGenresMutationResponse!
  createMovies(input: [MovieCreateInput!]!): CreateMoviesMutationResponse!
  createUsers(input: [UserCreateInput!]!): CreateUsersMutationResponse!
  create_bloomPerspectives(input: [_Bloom_Perspective_CreateInput!]!): Create_bloomPerspectivesMutationResponse!
  create_bloomScenes(input: [_Bloom_Scene_CreateInput!]!): Create_bloomScenesMutationResponse!
  deleteActor2s(delete: Actor2DeleteInput, where: Actor2Where): DeleteInfo!
  deleteActors(delete: ActorDeleteInput, where: ActorWhere): DeleteInfo!
  deleteDirectors(delete: DirectorDeleteInput, where: DirectorWhere): DeleteInfo!
  deleteGenres(delete: GenreDeleteInput, where: GenreWhere): DeleteInfo!
  deleteMovies(delete: MovieDeleteInput, where: MovieWhere): DeleteInfo!
  deleteUsers(delete: UserDeleteInput, where: UserWhere): DeleteInfo!
  delete_bloomPerspectives(delete: _Bloom_Perspective_DeleteInput, where: _Bloom_Perspective_Where): DeleteInfo!
  delete_bloomScenes(delete: _Bloom_Scene_DeleteInput, where: _Bloom_Scene_Where): DeleteInfo!
  updateActor2s(update: Actor2UpdateInput, where: Actor2Where): UpdateActor2sMutationResponse!
  updateActors(update: ActorUpdateInput, where: ActorWhere): UpdateActorsMutationResponse!
  updateDirectors(update: DirectorUpdateInput, where: DirectorWhere): UpdateDirectorsMutationResponse!
  updateGenres(update: GenreUpdateInput, where: GenreWhere): UpdateGenresMutationResponse!
  updateMovies(update: MovieUpdateInput, where: MovieWhere): UpdateMoviesMutationResponse!
  updateUsers(update: UserUpdateInput, where: UserWhere): UpdateUsersMutationResponse!
  update_bloomPerspectives(update: _Bloom_Perspective_UpdateInput, where: _Bloom_Perspective_Where): Update_bloomPerspectivesMutationResponse!
  update_bloomScenes(update: _Bloom_Scene_UpdateInput, where: _Bloom_Scene_Where): Update_bloomScenesMutationResponse!
}

"""Pagination information (Relay)"""
type PageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type Query {
  _bloomPerspectives(limit: Int, offset: Int, sort: [_Bloom_Perspective_Sort!], where: _Bloom_Perspective_Where): [_Bloom_Perspective_!]!
  _bloomPerspectivesConnection(after: String, first: Int, sort: [_Bloom_Perspective_Sort!], where: _Bloom_Perspective_Where): _bloomPerspectivesConnection!
  _bloomScenes(limit: Int, offset: Int, sort: [_Bloom_Scene_Sort!], where: _Bloom_Scene_Where): [_Bloom_Scene_!]!
  _bloomScenesConnection(after: String, first: Int, sort: [_Bloom_Scene_Sort!], where: _Bloom_Scene_Where): _bloomScenesConnection!
  actor2s(limit: Int, offset: Int, sort: [Actor2Sort!], where: Actor2Where): [Actor2!]!
  actor2sConnection(after: String, first: Int, sort: [Actor2Sort!], where: Actor2Where): Actor2sConnection!
  actors(limit: Int, offset: Int, sort: [ActorSort!], where: ActorWhere): [Actor!]!
  actorsConnection(after: String, first: Int, sort: [ActorSort!], where: ActorWhere): ActorsConnection!
  directors(limit: Int, offset: Int, sort: [DirectorSort!], where: DirectorWhere): [Director!]!
  directorsConnection(after: String, first: Int, sort: [DirectorSort!], where: DirectorWhere): DirectorsConnection!
  genres(limit: Int, offset: Int, sort: [GenreSort!], where: GenreWhere): [Genre!]!
  genresConnection(after: String, first: Int, sort: [GenreSort!], where: GenreWhere): GenresConnection!
  movies(limit: Int, offset: Int, sort: [MovieSort!], where: MovieWhere): [Movie!]!
  moviesConnection(after: String, first: Int, sort: [MovieSort!], where: MovieWhere): MoviesConnection!
  users(limit: Int, offset: Int, sort: [UserSort!], where: UserWhere): [User!]!
  usersConnection(after: String, first: Int, sort: [UserSort!], where: UserWhere): UsersConnection!
}

"""
The edge properties for the following fields:
* Movie.usersRated
* User.ratedMovies
"""
type RatedProperties @relationshipProperties @introspection {
  rating: Float! @introspection
  timestamp: BigInt! @introspection
}

input RatedPropertiesAggregationWhereInput {
  AND: [RatedPropertiesAggregationWhereInput!]
  NOT: RatedPropertiesAggregationWhereInput
  OR: [RatedPropertiesAggregationWhereInput!]
  rating: FloatScalarAggregationFilters
  rating_AVERAGE_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'rating: { average: { eq: ... } } }' instead.")
  rating_AVERAGE_GT: Float @deprecated(reason: "Please use the relevant generic filter 'rating: { average: { gt: ... } } }' instead.")
  rating_AVERAGE_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'rating: { average: { gte: ... } } }' instead.")
  rating_AVERAGE_LT: Float @deprecated(reason: "Please use the relevant generic filter 'rating: { average: { lt: ... } } }' instead.")
  rating_AVERAGE_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'rating: { average: { lte: ... } } }' instead.")
  rating_MAX_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'rating: { max: { eq: ... } } }' instead.")
  rating_MAX_GT: Float @deprecated(reason: "Please use the relevant generic filter 'rating: { max: { gt: ... } } }' instead.")
  rating_MAX_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'rating: { max: { gte: ... } } }' instead.")
  rating_MAX_LT: Float @deprecated(reason: "Please use the relevant generic filter 'rating: { max: { lt: ... } } }' instead.")
  rating_MAX_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'rating: { max: { lte: ... } } }' instead.")
  rating_MIN_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'rating: { min: { eq: ... } } }' instead.")
  rating_MIN_GT: Float @deprecated(reason: "Please use the relevant generic filter 'rating: { min: { gt: ... } } }' instead.")
  rating_MIN_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'rating: { min: { gte: ... } } }' instead.")
  rating_MIN_LT: Float @deprecated(reason: "Please use the relevant generic filter 'rating: { min: { lt: ... } } }' instead.")
  rating_MIN_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'rating: { min: { lte: ... } } }' instead.")
  rating_SUM_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'rating: { sum: { eq: ... } } }' instead.")
  rating_SUM_GT: Float @deprecated(reason: "Please use the relevant generic filter 'rating: { sum: { gt: ... } } }' instead.")
  rating_SUM_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'rating: { sum: { gte: ... } } }' instead.")
  rating_SUM_LT: Float @deprecated(reason: "Please use the relevant generic filter 'rating: { sum: { lt: ... } } }' instead.")
  rating_SUM_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'rating: { sum: { lte: ... } } }' instead.")
  timestamp: BigIntScalarAggregationFilters
  timestamp_AVERAGE_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'timestamp: { average: { eq: ... } } }' instead.")
  timestamp_AVERAGE_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'timestamp: { average: { gt: ... } } }' instead.")
  timestamp_AVERAGE_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'timestamp: { average: { gte: ... } } }' instead.")
  timestamp_AVERAGE_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'timestamp: { average: { lt: ... } } }' instead.")
  timestamp_AVERAGE_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'timestamp: { average: { lte: ... } } }' instead.")
  timestamp_MAX_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'timestamp: { max: { eq: ... } } }' instead.")
  timestamp_MAX_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'timestamp: { max: { gt: ... } } }' instead.")
  timestamp_MAX_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'timestamp: { max: { gte: ... } } }' instead.")
  timestamp_MAX_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'timestamp: { max: { lt: ... } } }' instead.")
  timestamp_MAX_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'timestamp: { max: { lte: ... } } }' instead.")
  timestamp_MIN_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'timestamp: { min: { eq: ... } } }' instead.")
  timestamp_MIN_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'timestamp: { min: { gt: ... } } }' instead.")
  timestamp_MIN_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'timestamp: { min: { gte: ... } } }' instead.")
  timestamp_MIN_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'timestamp: { min: { lt: ... } } }' instead.")
  timestamp_MIN_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'timestamp: { min: { lte: ... } } }' instead.")
  timestamp_SUM_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'timestamp: { sum: { eq: ... } } }' instead.")
  timestamp_SUM_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'timestamp: { sum: { gt: ... } } }' instead.")
  timestamp_SUM_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'timestamp: { sum: { gte: ... } } }' instead.")
  timestamp_SUM_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'timestamp: { sum: { lt: ... } } }' instead.")
  timestamp_SUM_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'timestamp: { sum: { lte: ... } } }' instead.")
}

input RatedPropertiesCreateInput {
  rating: Float!
  timestamp: BigInt!
}

input RatedPropertiesSort {
  rating: SortDirection
  timestamp: SortDirection
}

input RatedPropertiesUpdateInput {
  rating: FloatScalarMutations
  rating_ADD: Float @deprecated(reason: "Please use the relevant generic mutation 'rating: { add: ... } }' instead.")
  rating_DIVIDE: Float @deprecated(reason: "Please use the relevant generic mutation 'rating: { divide: ... } }' instead.")
  rating_MULTIPLY: Float @deprecated(reason: "Please use the relevant generic mutation 'rating: { multiply: ... } }' instead.")
  rating_SET: Float
  rating_SUBTRACT: Float @deprecated(reason: "Please use the relevant generic mutation 'rating: { subtract: ... } }' instead.")
  timestamp: BigIntScalarMutations
  timestamp_DECREMENT: BigInt @deprecated(reason: "Please use the relevant generic mutation 'timestamp: { decrement: ... } }' instead.")
  timestamp_INCREMENT: BigInt @deprecated(reason: "Please use the relevant generic mutation 'timestamp: { increment: ... } }' instead.")
  timestamp_SET: BigInt
}

input RatedPropertiesWhere {
  AND: [RatedPropertiesWhere!]
  NOT: RatedPropertiesWhere
  OR: [RatedPropertiesWhere!]
  rating: FloatScalarFilters
  rating_EQ: Float @deprecated(reason: "Please use the relevant generic filter rating: { eq: ... }")
  rating_GT: Float @deprecated(reason: "Please use the relevant generic filter rating: { gt: ... }")
  rating_GTE: Float @deprecated(reason: "Please use the relevant generic filter rating: { gte: ... }")
  rating_IN: [Float!] @deprecated(reason: "Please use the relevant generic filter rating: { in: ... }")
  rating_LT: Float @deprecated(reason: "Please use the relevant generic filter rating: { lt: ... }")
  rating_LTE: Float @deprecated(reason: "Please use the relevant generic filter rating: { lte: ... }")
  timestamp: BigIntScalarFilters
  timestamp_EQ: BigInt @deprecated(reason: "Please use the relevant generic filter timestamp: { eq: ... }")
  timestamp_GT: BigInt @deprecated(reason: "Please use the relevant generic filter timestamp: { gt: ... }")
  timestamp_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter timestamp: { gte: ... }")
  timestamp_IN: [BigInt!] @deprecated(reason: "Please use the relevant generic filter timestamp: { in: ... }")
  timestamp_LT: BigInt @deprecated(reason: "Please use the relevant generic filter timestamp: { lt: ... }")
  timestamp_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter timestamp: { lte: ... }")
}

"""An enum for sorting in either ascending or descending order."""
enum SortDirection {
  """Sort by field values in ascending order."""
  ASC
  """Sort by field values in descending order."""
  DESC
}

type StringAggregateSelection {
  longest: String
  shortest: String
}

"""String list filters"""
input StringListFilters {
  eq: [String!]
  includes: String
}

"""Filters for an aggregation of a string field"""
input StringScalarAggregationFilters {
  averageLength: FloatScalarFilters
  longestLength: IntScalarFilters
  shortestLength: IntScalarFilters
}

"""String filters"""
input StringScalarFilters {
  contains: String
  endsWith: String
  eq: String
  in: [String!]
  startsWith: String
}

"""String mutations"""
input StringScalarMutations {
  set: String
}

scalar TransportOptions

type UpdateActor2sMutationResponse {
  actor2s: [Actor2!]!
  info: UpdateInfo!
}

type UpdateActorsMutationResponse {
  actors: [Actor!]!
  info: UpdateInfo!
}

type UpdateDirectorsMutationResponse {
  directors: [Director!]!
  info: UpdateInfo!
}

type UpdateGenresMutationResponse {
  genres: [Genre!]!
  info: UpdateInfo!
}

"""
Information about the number of nodes and relationships created and deleted during an update mutation
"""
type UpdateInfo {
  nodesCreated: Int!
  nodesDeleted: Int!
  relationshipsCreated: Int!
  relationshipsDeleted: Int!
}

type UpdateMoviesMutationResponse {
  info: UpdateInfo!
  movies: [Movie!]!
}

type UpdateUsersMutationResponse {
  info: UpdateInfo!
  users: [User!]!
}

type Update_bloomPerspectivesMutationResponse {
  _bloomPerspectives: [_Bloom_Perspective_!]!
  info: UpdateInfo!
}

type Update_bloomScenesMutationResponse {
  _bloomScenes: [_Bloom_Scene_!]!
  info: UpdateInfo!
}

type User @introspection @node {
  name: String! @introspection
  ratedMovies(limit: Int, offset: Int, sort: [MovieSort!], where: MovieWhere): [Movie!]! @introspection @relationship(type: "RATED", direction: OUT, properties: "RatedProperties")
  ratedMoviesConnection(after: String, first: Int, sort: [UserRatedMoviesConnectionSort!], where: UserRatedMoviesConnectionWhere): UserRatedMoviesConnection!
  userId: String! @introspection
}

type UserAggregate {
  count: Count!
  node: UserAggregateNode!
}

type UserAggregateNode {
  name: StringAggregateSelection!
  userId: StringAggregateSelection!
}

input UserConnectInput {
  ratedMovies: [UserRatedMoviesConnectFieldInput!]
}

input UserConnectWhere {
  node: UserWhere!
}

input UserCreateInput {
  name: String!
  ratedMovies: UserRatedMoviesFieldInput
  userId: String!
}

input UserDeleteInput {
  ratedMovies: [UserRatedMoviesDeleteFieldInput!]
}

input UserDisconnectInput {
  ratedMovies: [UserRatedMoviesDisconnectFieldInput!]
}

type UserEdge {
  cursor: String!
  node: User!
}

type UserMovieRatedMoviesAggregateSelection {
  count: CountConnection!
  edge: UserMovieRatedMoviesEdgeAggregateSelection
  node: UserMovieRatedMoviesNodeAggregateSelection
}

type UserMovieRatedMoviesEdgeAggregateSelection {
  rating: FloatAggregateSelection!
  timestamp: BigIntAggregateSelection!
}

type UserMovieRatedMoviesNodeAggregateSelection {
  budget: BigIntAggregateSelection!
  imdbId: StringAggregateSelection!
  imdbRating: FloatAggregateSelection!
  imdbVotes: BigIntAggregateSelection!
  movieId: StringAggregateSelection!
  plot: StringAggregateSelection!
  poster: StringAggregateSelection!
  released: StringAggregateSelection!
  revenue: BigIntAggregateSelection!
  runtime: BigIntAggregateSelection!
  title: StringAggregateSelection!
  tmdbId: StringAggregateSelection!
  url: StringAggregateSelection!
  year: BigIntAggregateSelection!
}

input UserRatedMoviesAggregateInput {
  AND: [UserRatedMoviesAggregateInput!]
  NOT: UserRatedMoviesAggregateInput
  OR: [UserRatedMoviesAggregateInput!]
  count: IntScalarFilters
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  edge: RatedPropertiesAggregationWhereInput
  node: UserRatedMoviesNodeAggregationWhereInput
}

input UserRatedMoviesConnectFieldInput {
  connect: [MovieConnectInput!]
  edge: RatedPropertiesCreateInput!
  where: MovieConnectWhere
}

type UserRatedMoviesConnection {
  aggregate: UserMovieRatedMoviesAggregateSelection!
  edges: [UserRatedMoviesRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input UserRatedMoviesConnectionAggregateInput {
  AND: [UserRatedMoviesConnectionAggregateInput!]
  NOT: UserRatedMoviesConnectionAggregateInput
  OR: [UserRatedMoviesConnectionAggregateInput!]
  count: ConnectionAggregationCountFilterInput
  edge: RatedPropertiesAggregationWhereInput
  node: UserRatedMoviesNodeAggregationWhereInput
}

input UserRatedMoviesConnectionFilters {
  """
  Filter Users by aggregating results on related UserRatedMoviesConnections
  """
  aggregate: UserRatedMoviesConnectionAggregateInput
  """
  Return Users where all of the related UserRatedMoviesConnections match this filter
  """
  all: UserRatedMoviesConnectionWhere
  """
  Return Users where none of the related UserRatedMoviesConnections match this filter
  """
  none: UserRatedMoviesConnectionWhere
  """
  Return Users where one of the related UserRatedMoviesConnections match this filter
  """
  single: UserRatedMoviesConnectionWhere
  """
  Return Users where some of the related UserRatedMoviesConnections match this filter
  """
  some: UserRatedMoviesConnectionWhere
}

input UserRatedMoviesConnectionSort {
  edge: RatedPropertiesSort
  node: MovieSort
}

input UserRatedMoviesConnectionWhere {
  AND: [UserRatedMoviesConnectionWhere!]
  NOT: UserRatedMoviesConnectionWhere
  OR: [UserRatedMoviesConnectionWhere!]
  edge: RatedPropertiesWhere
  node: MovieWhere
}

input UserRatedMoviesCreateFieldInput {
  edge: RatedPropertiesCreateInput!
  node: MovieCreateInput!
}

input UserRatedMoviesDeleteFieldInput {
  delete: MovieDeleteInput
  where: UserRatedMoviesConnectionWhere
}

input UserRatedMoviesDisconnectFieldInput {
  disconnect: MovieDisconnectInput
  where: UserRatedMoviesConnectionWhere
}

input UserRatedMoviesFieldInput {
  connect: [UserRatedMoviesConnectFieldInput!]
  create: [UserRatedMoviesCreateFieldInput!]
}

input UserRatedMoviesNodeAggregationWhereInput {
  AND: [UserRatedMoviesNodeAggregationWhereInput!]
  NOT: UserRatedMoviesNodeAggregationWhereInput
  OR: [UserRatedMoviesNodeAggregationWhereInput!]
  budget: BigIntScalarAggregationFilters
  budget_AVERAGE_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { average: { eq: ... } } }' instead.")
  budget_AVERAGE_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { average: { gt: ... } } }' instead.")
  budget_AVERAGE_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { average: { gte: ... } } }' instead.")
  budget_AVERAGE_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { average: { lt: ... } } }' instead.")
  budget_AVERAGE_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { average: { lte: ... } } }' instead.")
  budget_MAX_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { max: { eq: ... } } }' instead.")
  budget_MAX_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { max: { gt: ... } } }' instead.")
  budget_MAX_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { max: { gte: ... } } }' instead.")
  budget_MAX_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { max: { lt: ... } } }' instead.")
  budget_MAX_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { max: { lte: ... } } }' instead.")
  budget_MIN_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { min: { eq: ... } } }' instead.")
  budget_MIN_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { min: { gt: ... } } }' instead.")
  budget_MIN_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { min: { gte: ... } } }' instead.")
  budget_MIN_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { min: { lt: ... } } }' instead.")
  budget_MIN_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { min: { lte: ... } } }' instead.")
  budget_SUM_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { sum: { eq: ... } } }' instead.")
  budget_SUM_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { sum: { gt: ... } } }' instead.")
  budget_SUM_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { sum: { gte: ... } } }' instead.")
  budget_SUM_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { sum: { lt: ... } } }' instead.")
  budget_SUM_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'budget: { sum: { lte: ... } } }' instead.")
  imdbId: StringScalarAggregationFilters
  imdbId_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'imdbId: { averageLength: { eq: ... } } }' instead.")
  imdbId_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbId: { averageLength: { gt: ... } } }' instead.")
  imdbId_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbId: { averageLength: { gte: ... } } }' instead.")
  imdbId_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbId: { averageLength: { lt: ... } } }' instead.")
  imdbId_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbId: { averageLength: { lte: ... } } }' instead.")
  imdbId_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { longestLength: { eq: ... } } }' instead.")
  imdbId_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { longestLength: { gt: ... } } }' instead.")
  imdbId_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { longestLength: { gte: ... } } }' instead.")
  imdbId_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { longestLength: { lt: ... } } }' instead.")
  imdbId_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { longestLength: { lte: ... } } }' instead.")
  imdbId_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { shortestLength: { eq: ... } } }' instead.")
  imdbId_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { shortestLength: { gt: ... } } }' instead.")
  imdbId_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { shortestLength: { gte: ... } } }' instead.")
  imdbId_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { shortestLength: { lt: ... } } }' instead.")
  imdbId_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'imdbId: { shortestLength: { lte: ... } } }' instead.")
  imdbRating: FloatScalarAggregationFilters
  imdbRating_AVERAGE_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { average: { eq: ... } } }' instead.")
  imdbRating_AVERAGE_GT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { average: { gt: ... } } }' instead.")
  imdbRating_AVERAGE_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { average: { gte: ... } } }' instead.")
  imdbRating_AVERAGE_LT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { average: { lt: ... } } }' instead.")
  imdbRating_AVERAGE_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { average: { lte: ... } } }' instead.")
  imdbRating_MAX_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { max: { eq: ... } } }' instead.")
  imdbRating_MAX_GT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { max: { gt: ... } } }' instead.")
  imdbRating_MAX_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { max: { gte: ... } } }' instead.")
  imdbRating_MAX_LT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { max: { lt: ... } } }' instead.")
  imdbRating_MAX_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { max: { lte: ... } } }' instead.")
  imdbRating_MIN_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { min: { eq: ... } } }' instead.")
  imdbRating_MIN_GT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { min: { gt: ... } } }' instead.")
  imdbRating_MIN_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { min: { gte: ... } } }' instead.")
  imdbRating_MIN_LT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { min: { lt: ... } } }' instead.")
  imdbRating_MIN_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { min: { lte: ... } } }' instead.")
  imdbRating_SUM_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { sum: { eq: ... } } }' instead.")
  imdbRating_SUM_GT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { sum: { gt: ... } } }' instead.")
  imdbRating_SUM_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { sum: { gte: ... } } }' instead.")
  imdbRating_SUM_LT: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { sum: { lt: ... } } }' instead.")
  imdbRating_SUM_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'imdbRating: { sum: { lte: ... } } }' instead.")
  imdbVotes: BigIntScalarAggregationFilters
  imdbVotes_AVERAGE_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { average: { eq: ... } } }' instead.")
  imdbVotes_AVERAGE_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { average: { gt: ... } } }' instead.")
  imdbVotes_AVERAGE_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { average: { gte: ... } } }' instead.")
  imdbVotes_AVERAGE_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { average: { lt: ... } } }' instead.")
  imdbVotes_AVERAGE_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { average: { lte: ... } } }' instead.")
  imdbVotes_MAX_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { max: { eq: ... } } }' instead.")
  imdbVotes_MAX_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { max: { gt: ... } } }' instead.")
  imdbVotes_MAX_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { max: { gte: ... } } }' instead.")
  imdbVotes_MAX_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { max: { lt: ... } } }' instead.")
  imdbVotes_MAX_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { max: { lte: ... } } }' instead.")
  imdbVotes_MIN_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { min: { eq: ... } } }' instead.")
  imdbVotes_MIN_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { min: { gt: ... } } }' instead.")
  imdbVotes_MIN_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { min: { gte: ... } } }' instead.")
  imdbVotes_MIN_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { min: { lt: ... } } }' instead.")
  imdbVotes_MIN_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { min: { lte: ... } } }' instead.")
  imdbVotes_SUM_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { sum: { eq: ... } } }' instead.")
  imdbVotes_SUM_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { sum: { gt: ... } } }' instead.")
  imdbVotes_SUM_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { sum: { gte: ... } } }' instead.")
  imdbVotes_SUM_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { sum: { lt: ... } } }' instead.")
  imdbVotes_SUM_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'imdbVotes: { sum: { lte: ... } } }' instead.")
  movieId: StringScalarAggregationFilters
  movieId_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'movieId: { averageLength: { eq: ... } } }' instead.")
  movieId_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'movieId: { averageLength: { gt: ... } } }' instead.")
  movieId_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'movieId: { averageLength: { gte: ... } } }' instead.")
  movieId_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'movieId: { averageLength: { lt: ... } } }' instead.")
  movieId_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'movieId: { averageLength: { lte: ... } } }' instead.")
  movieId_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { longestLength: { eq: ... } } }' instead.")
  movieId_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { longestLength: { gt: ... } } }' instead.")
  movieId_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { longestLength: { gte: ... } } }' instead.")
  movieId_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { longestLength: { lt: ... } } }' instead.")
  movieId_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { longestLength: { lte: ... } } }' instead.")
  movieId_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { shortestLength: { eq: ... } } }' instead.")
  movieId_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { shortestLength: { gt: ... } } }' instead.")
  movieId_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { shortestLength: { gte: ... } } }' instead.")
  movieId_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { shortestLength: { lt: ... } } }' instead.")
  movieId_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'movieId: { shortestLength: { lte: ... } } }' instead.")
  plot: StringScalarAggregationFilters
  plot_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'plot: { averageLength: { eq: ... } } }' instead.")
  plot_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'plot: { averageLength: { gt: ... } } }' instead.")
  plot_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'plot: { averageLength: { gte: ... } } }' instead.")
  plot_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'plot: { averageLength: { lt: ... } } }' instead.")
  plot_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'plot: { averageLength: { lte: ... } } }' instead.")
  plot_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { longestLength: { eq: ... } } }' instead.")
  plot_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { longestLength: { gt: ... } } }' instead.")
  plot_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { longestLength: { gte: ... } } }' instead.")
  plot_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { longestLength: { lt: ... } } }' instead.")
  plot_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { longestLength: { lte: ... } } }' instead.")
  plot_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { shortestLength: { eq: ... } } }' instead.")
  plot_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { shortestLength: { gt: ... } } }' instead.")
  plot_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { shortestLength: { gte: ... } } }' instead.")
  plot_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { shortestLength: { lt: ... } } }' instead.")
  plot_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'plot: { shortestLength: { lte: ... } } }' instead.")
  poster: StringScalarAggregationFilters
  poster_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'poster: { averageLength: { eq: ... } } }' instead.")
  poster_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'poster: { averageLength: { gt: ... } } }' instead.")
  poster_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'poster: { averageLength: { gte: ... } } }' instead.")
  poster_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'poster: { averageLength: { lt: ... } } }' instead.")
  poster_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'poster: { averageLength: { lte: ... } } }' instead.")
  poster_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { longestLength: { eq: ... } } }' instead.")
  poster_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { longestLength: { gt: ... } } }' instead.")
  poster_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { longestLength: { gte: ... } } }' instead.")
  poster_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { longestLength: { lt: ... } } }' instead.")
  poster_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { longestLength: { lte: ... } } }' instead.")
  poster_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { shortestLength: { eq: ... } } }' instead.")
  poster_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { shortestLength: { gt: ... } } }' instead.")
  poster_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { shortestLength: { gte: ... } } }' instead.")
  poster_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { shortestLength: { lt: ... } } }' instead.")
  poster_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'poster: { shortestLength: { lte: ... } } }' instead.")
  released: StringScalarAggregationFilters
  released_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'released: { averageLength: { eq: ... } } }' instead.")
  released_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'released: { averageLength: { gt: ... } } }' instead.")
  released_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'released: { averageLength: { gte: ... } } }' instead.")
  released_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'released: { averageLength: { lt: ... } } }' instead.")
  released_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'released: { averageLength: { lte: ... } } }' instead.")
  released_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'released: { longestLength: { eq: ... } } }' instead.")
  released_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'released: { longestLength: { gt: ... } } }' instead.")
  released_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'released: { longestLength: { gte: ... } } }' instead.")
  released_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'released: { longestLength: { lt: ... } } }' instead.")
  released_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'released: { longestLength: { lte: ... } } }' instead.")
  released_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'released: { shortestLength: { eq: ... } } }' instead.")
  released_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'released: { shortestLength: { gt: ... } } }' instead.")
  released_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'released: { shortestLength: { gte: ... } } }' instead.")
  released_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'released: { shortestLength: { lt: ... } } }' instead.")
  released_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'released: { shortestLength: { lte: ... } } }' instead.")
  revenue: BigIntScalarAggregationFilters
  revenue_AVERAGE_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { average: { eq: ... } } }' instead.")
  revenue_AVERAGE_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { average: { gt: ... } } }' instead.")
  revenue_AVERAGE_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { average: { gte: ... } } }' instead.")
  revenue_AVERAGE_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { average: { lt: ... } } }' instead.")
  revenue_AVERAGE_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { average: { lte: ... } } }' instead.")
  revenue_MAX_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { max: { eq: ... } } }' instead.")
  revenue_MAX_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { max: { gt: ... } } }' instead.")
  revenue_MAX_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { max: { gte: ... } } }' instead.")
  revenue_MAX_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { max: { lt: ... } } }' instead.")
  revenue_MAX_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { max: { lte: ... } } }' instead.")
  revenue_MIN_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { min: { eq: ... } } }' instead.")
  revenue_MIN_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { min: { gt: ... } } }' instead.")
  revenue_MIN_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { min: { gte: ... } } }' instead.")
  revenue_MIN_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { min: { lt: ... } } }' instead.")
  revenue_MIN_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { min: { lte: ... } } }' instead.")
  revenue_SUM_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { sum: { eq: ... } } }' instead.")
  revenue_SUM_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { sum: { gt: ... } } }' instead.")
  revenue_SUM_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { sum: { gte: ... } } }' instead.")
  revenue_SUM_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { sum: { lt: ... } } }' instead.")
  revenue_SUM_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'revenue: { sum: { lte: ... } } }' instead.")
  runtime: BigIntScalarAggregationFilters
  runtime_AVERAGE_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { average: { eq: ... } } }' instead.")
  runtime_AVERAGE_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { average: { gt: ... } } }' instead.")
  runtime_AVERAGE_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { average: { gte: ... } } }' instead.")
  runtime_AVERAGE_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { average: { lt: ... } } }' instead.")
  runtime_AVERAGE_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { average: { lte: ... } } }' instead.")
  runtime_MAX_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { max: { eq: ... } } }' instead.")
  runtime_MAX_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { max: { gt: ... } } }' instead.")
  runtime_MAX_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { max: { gte: ... } } }' instead.")
  runtime_MAX_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { max: { lt: ... } } }' instead.")
  runtime_MAX_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { max: { lte: ... } } }' instead.")
  runtime_MIN_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { min: { eq: ... } } }' instead.")
  runtime_MIN_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { min: { gt: ... } } }' instead.")
  runtime_MIN_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { min: { gte: ... } } }' instead.")
  runtime_MIN_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { min: { lt: ... } } }' instead.")
  runtime_MIN_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { min: { lte: ... } } }' instead.")
  runtime_SUM_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { sum: { eq: ... } } }' instead.")
  runtime_SUM_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { sum: { gt: ... } } }' instead.")
  runtime_SUM_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { sum: { gte: ... } } }' instead.")
  runtime_SUM_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { sum: { lt: ... } } }' instead.")
  runtime_SUM_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'runtime: { sum: { lte: ... } } }' instead.")
  title: StringScalarAggregationFilters
  title_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'title: { averageLength: { eq: ... } } }' instead.")
  title_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'title: { averageLength: { gt: ... } } }' instead.")
  title_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'title: { averageLength: { gte: ... } } }' instead.")
  title_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'title: { averageLength: { lt: ... } } }' instead.")
  title_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'title: { averageLength: { lte: ... } } }' instead.")
  title_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'title: { longestLength: { eq: ... } } }' instead.")
  title_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'title: { longestLength: { gt: ... } } }' instead.")
  title_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'title: { longestLength: { gte: ... } } }' instead.")
  title_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'title: { longestLength: { lt: ... } } }' instead.")
  title_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'title: { longestLength: { lte: ... } } }' instead.")
  title_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'title: { shortestLength: { eq: ... } } }' instead.")
  title_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'title: { shortestLength: { gt: ... } } }' instead.")
  title_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'title: { shortestLength: { gte: ... } } }' instead.")
  title_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'title: { shortestLength: { lt: ... } } }' instead.")
  title_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'title: { shortestLength: { lte: ... } } }' instead.")
  tmdbId: StringScalarAggregationFilters
  tmdbId_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { averageLength: { eq: ... } } }' instead.")
  tmdbId_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { averageLength: { gt: ... } } }' instead.")
  tmdbId_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { averageLength: { gte: ... } } }' instead.")
  tmdbId_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { averageLength: { lt: ... } } }' instead.")
  tmdbId_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { averageLength: { lte: ... } } }' instead.")
  tmdbId_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { longestLength: { eq: ... } } }' instead.")
  tmdbId_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { longestLength: { gt: ... } } }' instead.")
  tmdbId_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { longestLength: { gte: ... } } }' instead.")
  tmdbId_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { longestLength: { lt: ... } } }' instead.")
  tmdbId_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { longestLength: { lte: ... } } }' instead.")
  tmdbId_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { shortestLength: { eq: ... } } }' instead.")
  tmdbId_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { shortestLength: { gt: ... } } }' instead.")
  tmdbId_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { shortestLength: { gte: ... } } }' instead.")
  tmdbId_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { shortestLength: { lt: ... } } }' instead.")
  tmdbId_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'tmdbId: { shortestLength: { lte: ... } } }' instead.")
  url: StringScalarAggregationFilters
  url_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'url: { averageLength: { eq: ... } } }' instead.")
  url_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'url: { averageLength: { gt: ... } } }' instead.")
  url_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'url: { averageLength: { gte: ... } } }' instead.")
  url_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'url: { averageLength: { lt: ... } } }' instead.")
  url_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'url: { averageLength: { lte: ... } } }' instead.")
  url_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'url: { longestLength: { eq: ... } } }' instead.")
  url_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'url: { longestLength: { gt: ... } } }' instead.")
  url_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'url: { longestLength: { gte: ... } } }' instead.")
  url_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'url: { longestLength: { lt: ... } } }' instead.")
  url_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'url: { longestLength: { lte: ... } } }' instead.")
  url_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'url: { shortestLength: { eq: ... } } }' instead.")
  url_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'url: { shortestLength: { gt: ... } } }' instead.")
  url_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'url: { shortestLength: { gte: ... } } }' instead.")
  url_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'url: { shortestLength: { lt: ... } } }' instead.")
  url_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'url: { shortestLength: { lte: ... } } }' instead.")
  year: BigIntScalarAggregationFilters
  year_AVERAGE_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { average: { eq: ... } } }' instead.")
  year_AVERAGE_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { average: { gt: ... } } }' instead.")
  year_AVERAGE_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { average: { gte: ... } } }' instead.")
  year_AVERAGE_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { average: { lt: ... } } }' instead.")
  year_AVERAGE_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { average: { lte: ... } } }' instead.")
  year_MAX_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { max: { eq: ... } } }' instead.")
  year_MAX_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { max: { gt: ... } } }' instead.")
  year_MAX_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { max: { gte: ... } } }' instead.")
  year_MAX_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { max: { lt: ... } } }' instead.")
  year_MAX_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { max: { lte: ... } } }' instead.")
  year_MIN_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { min: { eq: ... } } }' instead.")
  year_MIN_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { min: { gt: ... } } }' instead.")
  year_MIN_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { min: { gte: ... } } }' instead.")
  year_MIN_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { min: { lt: ... } } }' instead.")
  year_MIN_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { min: { lte: ... } } }' instead.")
  year_SUM_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { sum: { eq: ... } } }' instead.")
  year_SUM_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { sum: { gt: ... } } }' instead.")
  year_SUM_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { sum: { gte: ... } } }' instead.")
  year_SUM_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { sum: { lt: ... } } }' instead.")
  year_SUM_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'year: { sum: { lte: ... } } }' instead.")
}

type UserRatedMoviesRelationship {
  cursor: String!
  node: Movie!
  properties: RatedProperties!
}

input UserRatedMoviesUpdateConnectionInput {
  edge: RatedPropertiesUpdateInput
  node: MovieUpdateInput
  where: UserRatedMoviesConnectionWhere
}

input UserRatedMoviesUpdateFieldInput {
  connect: [UserRatedMoviesConnectFieldInput!]
  create: [UserRatedMoviesCreateFieldInput!]
  delete: [UserRatedMoviesDeleteFieldInput!]
  disconnect: [UserRatedMoviesDisconnectFieldInput!]
  update: UserRatedMoviesUpdateConnectionInput
}

input UserRelationshipFilters {
  """Filter type where all of the related Users match this filter"""
  all: UserWhere
  """Filter type where none of the related Users match this filter"""
  none: UserWhere
  """Filter type where one of the related Users match this filter"""
  single: UserWhere
  """Filter type where some of the related Users match this filter"""
  some: UserWhere
}

"""
Fields to sort Users by. The order in which sorts are applied is not guaranteed when specifying many fields in one UserSort object.
"""
input UserSort {
  name: SortDirection
  userId: SortDirection
}

input UserUpdateInput {
  name: StringScalarMutations
  name_SET: String
  ratedMovies: [UserRatedMoviesUpdateFieldInput!]
  userId: StringScalarMutations
  userId_SET: String
}

input UserWhere {
  AND: [UserWhere!]
  NOT: UserWhere
  OR: [UserWhere!]
  name: StringScalarFilters
  name_CONTAINS: String @deprecated(reason: "Please use the relevant generic filter name: { contains: ... }")
  name_ENDS_WITH: String @deprecated(reason: "Please use the relevant generic filter name: { endsWith: ... }")
  name_EQ: String @deprecated(reason: "Please use the relevant generic filter name: { eq: ... }")
  name_IN: [String!] @deprecated(reason: "Please use the relevant generic filter name: { in: ... }")
  name_STARTS_WITH: String @deprecated(reason: "Please use the relevant generic filter name: { startsWith: ... }")
  ratedMovies: MovieRelationshipFilters
  ratedMoviesAggregate: UserRatedMoviesAggregateInput @deprecated(reason: "Aggregate filters are moved inside the ratedMoviesConnection filter, please use { ratedMoviesConnection: { aggregate: {...} } } instead")
  ratedMoviesConnection: UserRatedMoviesConnectionFilters
  """
  Return Users where all of the related UserRatedMoviesConnections match this filter
  """
  ratedMoviesConnection_ALL: UserRatedMoviesConnectionWhere @deprecated(reason: "Please use the relevant generic filter 'ratedMoviesConnection: { all: { node: ... } } }' instead.")
  """
  Return Users where none of the related UserRatedMoviesConnections match this filter
  """
  ratedMoviesConnection_NONE: UserRatedMoviesConnectionWhere @deprecated(reason: "Please use the relevant generic filter 'ratedMoviesConnection: { none: { node: ... } } }' instead.")
  """
  Return Users where one of the related UserRatedMoviesConnections match this filter
  """
  ratedMoviesConnection_SINGLE: UserRatedMoviesConnectionWhere @deprecated(reason: "Please use the relevant generic filter 'ratedMoviesConnection: { single: { node: ... } } }' instead.")
  """
  Return Users where some of the related UserRatedMoviesConnections match this filter
  """
  ratedMoviesConnection_SOME: UserRatedMoviesConnectionWhere @deprecated(reason: "Please use the relevant generic filter 'ratedMoviesConnection: { some: { node: ... } } }' instead.")
  """Return Users where all of the related Movies match this filter"""
  ratedMovies_ALL: MovieWhere @deprecated(reason: "Please use the relevant generic filter 'ratedMovies: { all: ... }' instead.")
  """Return Users where none of the related Movies match this filter"""
  ratedMovies_NONE: MovieWhere @deprecated(reason: "Please use the relevant generic filter 'ratedMovies: { none: ... }' instead.")
  """Return Users where one of the related Movies match this filter"""
  ratedMovies_SINGLE: MovieWhere @deprecated(reason: "Please use the relevant generic filter 'ratedMovies: {  single: ... }' instead.")
  """Return Users where some of the related Movies match this filter"""
  ratedMovies_SOME: MovieWhere @deprecated(reason: "Please use the relevant generic filter 'ratedMovies: {  some: ... }' instead.")
  userId: StringScalarFilters
  userId_CONTAINS: String @deprecated(reason: "Please use the relevant generic filter userId: { contains: ... }")
  userId_ENDS_WITH: String @deprecated(reason: "Please use the relevant generic filter userId: { endsWith: ... }")
  userId_EQ: String @deprecated(reason: "Please use the relevant generic filter userId: { eq: ... }")
  userId_IN: [String!] @deprecated(reason: "Please use the relevant generic filter userId: { in: ... }")
  userId_STARTS_WITH: String @deprecated(reason: "Please use the relevant generic filter userId: { startsWith: ... }")
}

type UsersConnection {
  aggregate: UserAggregate!
  edges: [UserEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type _Bloom_Perspective_ @introspection @node {
  bloomHasSceneBloomSceneS(limit: Int, offset: Int, sort: [_Bloom_Scene_Sort!], where: _Bloom_Scene_Where): [_Bloom_Scene_!]! @introspection @relationship(type: "_Bloom_HAS_SCENE_", direction: OUT)
  bloomHasSceneBloomSceneSConnection(after: String, first: Int, sort: [_Bloom_Perspective_BloomHasSceneBloomSceneSConnectionSort!], where: _Bloom_Perspective_BloomHasSceneBloomSceneSConnectionWhere): _Bloom_Perspective_BloomHasSceneBloomSceneSConnection!
  data: String! @introspection
  id: String! @introspection
  name: String! @introspection
  roles: [String!]! @introspection
  version: String! @introspection
}

type _Bloom_Perspective_Aggregate {
  count: Count!
  node: _Bloom_Perspective_AggregateNode!
}

type _Bloom_Perspective_AggregateNode {
  data: StringAggregateSelection!
  id: StringAggregateSelection!
  name: StringAggregateSelection!
  version: StringAggregateSelection!
}

input _Bloom_Perspective_BloomHasSceneBloomSceneSAggregateInput {
  AND: [_Bloom_Perspective_BloomHasSceneBloomSceneSAggregateInput!]
  NOT: _Bloom_Perspective_BloomHasSceneBloomSceneSAggregateInput
  OR: [_Bloom_Perspective_BloomHasSceneBloomSceneSAggregateInput!]
  count: IntScalarFilters
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: _Bloom_Perspective_BloomHasSceneBloomSceneSNodeAggregationWhereInput
}

input _Bloom_Perspective_BloomHasSceneBloomSceneSConnectFieldInput {
  connect: [_Bloom_Scene_ConnectInput!]
  where: _Bloom_Scene_ConnectWhere
}

type _Bloom_Perspective_BloomHasSceneBloomSceneSConnection {
  aggregate: _Bloom_Perspective__Bloom_Scene_BloomHasSceneBloomSceneSAggregateSelection!
  edges: [_Bloom_Perspective_BloomHasSceneBloomSceneSRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input _Bloom_Perspective_BloomHasSceneBloomSceneSConnectionAggregateInput {
  AND: [_Bloom_Perspective_BloomHasSceneBloomSceneSConnectionAggregateInput!]
  NOT: _Bloom_Perspective_BloomHasSceneBloomSceneSConnectionAggregateInput
  OR: [_Bloom_Perspective_BloomHasSceneBloomSceneSConnectionAggregateInput!]
  count: ConnectionAggregationCountFilterInput
  node: _Bloom_Perspective_BloomHasSceneBloomSceneSNodeAggregationWhereInput
}

input _Bloom_Perspective_BloomHasSceneBloomSceneSConnectionFilters {
  """
  Filter _Bloom_Perspective_s by aggregating results on related _Bloom_Perspective_BloomHasSceneBloomSceneSConnections
  """
  aggregate: _Bloom_Perspective_BloomHasSceneBloomSceneSConnectionAggregateInput
  """
  Return _Bloom_Perspective_s where all of the related _Bloom_Perspective_BloomHasSceneBloomSceneSConnections match this filter
  """
  all: _Bloom_Perspective_BloomHasSceneBloomSceneSConnectionWhere
  """
  Return _Bloom_Perspective_s where none of the related _Bloom_Perspective_BloomHasSceneBloomSceneSConnections match this filter
  """
  none: _Bloom_Perspective_BloomHasSceneBloomSceneSConnectionWhere
  """
  Return _Bloom_Perspective_s where one of the related _Bloom_Perspective_BloomHasSceneBloomSceneSConnections match this filter
  """
  single: _Bloom_Perspective_BloomHasSceneBloomSceneSConnectionWhere
  """
  Return _Bloom_Perspective_s where some of the related _Bloom_Perspective_BloomHasSceneBloomSceneSConnections match this filter
  """
  some: _Bloom_Perspective_BloomHasSceneBloomSceneSConnectionWhere
}

input _Bloom_Perspective_BloomHasSceneBloomSceneSConnectionSort {
  node: _Bloom_Scene_Sort
}

input _Bloom_Perspective_BloomHasSceneBloomSceneSConnectionWhere {
  AND: [_Bloom_Perspective_BloomHasSceneBloomSceneSConnectionWhere!]
  NOT: _Bloom_Perspective_BloomHasSceneBloomSceneSConnectionWhere
  OR: [_Bloom_Perspective_BloomHasSceneBloomSceneSConnectionWhere!]
  node: _Bloom_Scene_Where
}

input _Bloom_Perspective_BloomHasSceneBloomSceneSCreateFieldInput {
  node: _Bloom_Scene_CreateInput!
}

input _Bloom_Perspective_BloomHasSceneBloomSceneSDeleteFieldInput {
  delete: _Bloom_Scene_DeleteInput
  where: _Bloom_Perspective_BloomHasSceneBloomSceneSConnectionWhere
}

input _Bloom_Perspective_BloomHasSceneBloomSceneSDisconnectFieldInput {
  disconnect: _Bloom_Scene_DisconnectInput
  where: _Bloom_Perspective_BloomHasSceneBloomSceneSConnectionWhere
}

input _Bloom_Perspective_BloomHasSceneBloomSceneSFieldInput {
  connect: [_Bloom_Perspective_BloomHasSceneBloomSceneSConnectFieldInput!]
  create: [_Bloom_Perspective_BloomHasSceneBloomSceneSCreateFieldInput!]
}

input _Bloom_Perspective_BloomHasSceneBloomSceneSNodeAggregationWhereInput {
  AND: [_Bloom_Perspective_BloomHasSceneBloomSceneSNodeAggregationWhereInput!]
  NOT: _Bloom_Perspective_BloomHasSceneBloomSceneSNodeAggregationWhereInput
  OR: [_Bloom_Perspective_BloomHasSceneBloomSceneSNodeAggregationWhereInput!]
  createdAt: BigIntScalarAggregationFilters
  createdAt_AVERAGE_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'createdAt: { average: { eq: ... } } }' instead.")
  createdAt_AVERAGE_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'createdAt: { average: { gt: ... } } }' instead.")
  createdAt_AVERAGE_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'createdAt: { average: { gte: ... } } }' instead.")
  createdAt_AVERAGE_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'createdAt: { average: { lt: ... } } }' instead.")
  createdAt_AVERAGE_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'createdAt: { average: { lte: ... } } }' instead.")
  createdAt_MAX_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'createdAt: { max: { eq: ... } } }' instead.")
  createdAt_MAX_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'createdAt: { max: { gt: ... } } }' instead.")
  createdAt_MAX_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'createdAt: { max: { gte: ... } } }' instead.")
  createdAt_MAX_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'createdAt: { max: { lt: ... } } }' instead.")
  createdAt_MAX_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'createdAt: { max: { lte: ... } } }' instead.")
  createdAt_MIN_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'createdAt: { min: { eq: ... } } }' instead.")
  createdAt_MIN_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'createdAt: { min: { gt: ... } } }' instead.")
  createdAt_MIN_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'createdAt: { min: { gte: ... } } }' instead.")
  createdAt_MIN_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'createdAt: { min: { lt: ... } } }' instead.")
  createdAt_MIN_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'createdAt: { min: { lte: ... } } }' instead.")
  createdAt_SUM_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'createdAt: { sum: { eq: ... } } }' instead.")
  createdAt_SUM_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'createdAt: { sum: { gt: ... } } }' instead.")
  createdAt_SUM_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'createdAt: { sum: { gte: ... } } }' instead.")
  createdAt_SUM_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'createdAt: { sum: { lt: ... } } }' instead.")
  createdAt_SUM_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'createdAt: { sum: { lte: ... } } }' instead.")
  createdBy: StringScalarAggregationFilters
  createdBy_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'createdBy: { averageLength: { eq: ... } } }' instead.")
  createdBy_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'createdBy: { averageLength: { gt: ... } } }' instead.")
  createdBy_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'createdBy: { averageLength: { gte: ... } } }' instead.")
  createdBy_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'createdBy: { averageLength: { lt: ... } } }' instead.")
  createdBy_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'createdBy: { averageLength: { lte: ... } } }' instead.")
  createdBy_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'createdBy: { longestLength: { eq: ... } } }' instead.")
  createdBy_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'createdBy: { longestLength: { gt: ... } } }' instead.")
  createdBy_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'createdBy: { longestLength: { gte: ... } } }' instead.")
  createdBy_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'createdBy: { longestLength: { lt: ... } } }' instead.")
  createdBy_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'createdBy: { longestLength: { lte: ... } } }' instead.")
  createdBy_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'createdBy: { shortestLength: { eq: ... } } }' instead.")
  createdBy_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'createdBy: { shortestLength: { gt: ... } } }' instead.")
  createdBy_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'createdBy: { shortestLength: { gte: ... } } }' instead.")
  createdBy_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'createdBy: { shortestLength: { lt: ... } } }' instead.")
  createdBy_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'createdBy: { shortestLength: { lte: ... } } }' instead.")
  filters: StringScalarAggregationFilters
  filters_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'filters: { averageLength: { eq: ... } } }' instead.")
  filters_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'filters: { averageLength: { gt: ... } } }' instead.")
  filters_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'filters: { averageLength: { gte: ... } } }' instead.")
  filters_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'filters: { averageLength: { lt: ... } } }' instead.")
  filters_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'filters: { averageLength: { lte: ... } } }' instead.")
  filters_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'filters: { longestLength: { eq: ... } } }' instead.")
  filters_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'filters: { longestLength: { gt: ... } } }' instead.")
  filters_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'filters: { longestLength: { gte: ... } } }' instead.")
  filters_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'filters: { longestLength: { lt: ... } } }' instead.")
  filters_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'filters: { longestLength: { lte: ... } } }' instead.")
  filters_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'filters: { shortestLength: { eq: ... } } }' instead.")
  filters_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'filters: { shortestLength: { gt: ... } } }' instead.")
  filters_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'filters: { shortestLength: { gte: ... } } }' instead.")
  filters_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'filters: { shortestLength: { lt: ... } } }' instead.")
  filters_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'filters: { shortestLength: { lte: ... } } }' instead.")
  gds: StringScalarAggregationFilters
  gds_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'gds: { averageLength: { eq: ... } } }' instead.")
  gds_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'gds: { averageLength: { gt: ... } } }' instead.")
  gds_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'gds: { averageLength: { gte: ... } } }' instead.")
  gds_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'gds: { averageLength: { lt: ... } } }' instead.")
  gds_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'gds: { averageLength: { lte: ... } } }' instead.")
  gds_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'gds: { longestLength: { eq: ... } } }' instead.")
  gds_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'gds: { longestLength: { gt: ... } } }' instead.")
  gds_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'gds: { longestLength: { gte: ... } } }' instead.")
  gds_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'gds: { longestLength: { lt: ... } } }' instead.")
  gds_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'gds: { longestLength: { lte: ... } } }' instead.")
  gds_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'gds: { shortestLength: { eq: ... } } }' instead.")
  gds_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'gds: { shortestLength: { gt: ... } } }' instead.")
  gds_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'gds: { shortestLength: { gte: ... } } }' instead.")
  gds_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'gds: { shortestLength: { lt: ... } } }' instead.")
  gds_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'gds: { shortestLength: { lte: ... } } }' instead.")
  id: StringScalarAggregationFilters
  id_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'id: { averageLength: { eq: ... } } }' instead.")
  id_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'id: { averageLength: { gt: ... } } }' instead.")
  id_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'id: { averageLength: { gte: ... } } }' instead.")
  id_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'id: { averageLength: { lt: ... } } }' instead.")
  id_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'id: { averageLength: { lte: ... } } }' instead.")
  id_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'id: { longestLength: { eq: ... } } }' instead.")
  id_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'id: { longestLength: { gt: ... } } }' instead.")
  id_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'id: { longestLength: { gte: ... } } }' instead.")
  id_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'id: { longestLength: { lt: ... } } }' instead.")
  id_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'id: { longestLength: { lte: ... } } }' instead.")
  id_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'id: { shortestLength: { eq: ... } } }' instead.")
  id_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'id: { shortestLength: { gt: ... } } }' instead.")
  id_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'id: { shortestLength: { gte: ... } } }' instead.")
  id_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'id: { shortestLength: { lt: ... } } }' instead.")
  id_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'id: { shortestLength: { lte: ... } } }' instead.")
  lastModified: BigIntScalarAggregationFilters
  lastModified_AVERAGE_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'lastModified: { average: { eq: ... } } }' instead.")
  lastModified_AVERAGE_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'lastModified: { average: { gt: ... } } }' instead.")
  lastModified_AVERAGE_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'lastModified: { average: { gte: ... } } }' instead.")
  lastModified_AVERAGE_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'lastModified: { average: { lt: ... } } }' instead.")
  lastModified_AVERAGE_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'lastModified: { average: { lte: ... } } }' instead.")
  lastModified_MAX_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'lastModified: { max: { eq: ... } } }' instead.")
  lastModified_MAX_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'lastModified: { max: { gt: ... } } }' instead.")
  lastModified_MAX_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'lastModified: { max: { gte: ... } } }' instead.")
  lastModified_MAX_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'lastModified: { max: { lt: ... } } }' instead.")
  lastModified_MAX_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'lastModified: { max: { lte: ... } } }' instead.")
  lastModified_MIN_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'lastModified: { min: { eq: ... } } }' instead.")
  lastModified_MIN_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'lastModified: { min: { gt: ... } } }' instead.")
  lastModified_MIN_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'lastModified: { min: { gte: ... } } }' instead.")
  lastModified_MIN_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'lastModified: { min: { lt: ... } } }' instead.")
  lastModified_MIN_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'lastModified: { min: { lte: ... } } }' instead.")
  lastModified_SUM_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'lastModified: { sum: { eq: ... } } }' instead.")
  lastModified_SUM_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'lastModified: { sum: { gt: ... } } }' instead.")
  lastModified_SUM_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'lastModified: { sum: { gte: ... } } }' instead.")
  lastModified_SUM_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'lastModified: { sum: { lt: ... } } }' instead.")
  lastModified_SUM_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'lastModified: { sum: { lte: ... } } }' instead.")
  name: StringScalarAggregationFilters
  name_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'name: { averageLength: { eq: ... } } }' instead.")
  name_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'name: { averageLength: { gt: ... } } }' instead.")
  name_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'name: { averageLength: { gte: ... } } }' instead.")
  name_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'name: { averageLength: { lt: ... } } }' instead.")
  name_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'name: { averageLength: { lte: ... } } }' instead.")
  name_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'name: { longestLength: { eq: ... } } }' instead.")
  name_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'name: { longestLength: { gt: ... } } }' instead.")
  name_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'name: { longestLength: { gte: ... } } }' instead.")
  name_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'name: { longestLength: { lt: ... } } }' instead.")
  name_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'name: { longestLength: { lte: ... } } }' instead.")
  name_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'name: { shortestLength: { eq: ... } } }' instead.")
  name_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'name: { shortestLength: { gt: ... } } }' instead.")
  name_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'name: { shortestLength: { gte: ... } } }' instead.")
  name_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'name: { shortestLength: { lt: ... } } }' instead.")
  name_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'name: { shortestLength: { lte: ... } } }' instead.")
  nodes: StringScalarAggregationFilters
  nodes_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'nodes: { averageLength: { eq: ... } } }' instead.")
  nodes_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'nodes: { averageLength: { gt: ... } } }' instead.")
  nodes_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'nodes: { averageLength: { gte: ... } } }' instead.")
  nodes_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'nodes: { averageLength: { lt: ... } } }' instead.")
  nodes_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'nodes: { averageLength: { lte: ... } } }' instead.")
  nodes_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'nodes: { longestLength: { eq: ... } } }' instead.")
  nodes_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'nodes: { longestLength: { gt: ... } } }' instead.")
  nodes_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'nodes: { longestLength: { gte: ... } } }' instead.")
  nodes_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'nodes: { longestLength: { lt: ... } } }' instead.")
  nodes_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'nodes: { longestLength: { lte: ... } } }' instead.")
  nodes_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'nodes: { shortestLength: { eq: ... } } }' instead.")
  nodes_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'nodes: { shortestLength: { gt: ... } } }' instead.")
  nodes_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'nodes: { shortestLength: { gte: ... } } }' instead.")
  nodes_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'nodes: { shortestLength: { lt: ... } } }' instead.")
  nodes_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'nodes: { shortestLength: { lte: ... } } }' instead.")
  numOfNodes: BigIntScalarAggregationFilters
  numOfNodes_AVERAGE_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'numOfNodes: { average: { eq: ... } } }' instead.")
  numOfNodes_AVERAGE_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'numOfNodes: { average: { gt: ... } } }' instead.")
  numOfNodes_AVERAGE_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'numOfNodes: { average: { gte: ... } } }' instead.")
  numOfNodes_AVERAGE_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'numOfNodes: { average: { lt: ... } } }' instead.")
  numOfNodes_AVERAGE_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'numOfNodes: { average: { lte: ... } } }' instead.")
  numOfNodes_MAX_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'numOfNodes: { max: { eq: ... } } }' instead.")
  numOfNodes_MAX_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'numOfNodes: { max: { gt: ... } } }' instead.")
  numOfNodes_MAX_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'numOfNodes: { max: { gte: ... } } }' instead.")
  numOfNodes_MAX_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'numOfNodes: { max: { lt: ... } } }' instead.")
  numOfNodes_MAX_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'numOfNodes: { max: { lte: ... } } }' instead.")
  numOfNodes_MIN_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'numOfNodes: { min: { eq: ... } } }' instead.")
  numOfNodes_MIN_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'numOfNodes: { min: { gt: ... } } }' instead.")
  numOfNodes_MIN_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'numOfNodes: { min: { gte: ... } } }' instead.")
  numOfNodes_MIN_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'numOfNodes: { min: { lt: ... } } }' instead.")
  numOfNodes_MIN_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'numOfNodes: { min: { lte: ... } } }' instead.")
  numOfNodes_SUM_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'numOfNodes: { sum: { eq: ... } } }' instead.")
  numOfNodes_SUM_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'numOfNodes: { sum: { gt: ... } } }' instead.")
  numOfNodes_SUM_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'numOfNodes: { sum: { gte: ... } } }' instead.")
  numOfNodes_SUM_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'numOfNodes: { sum: { lt: ... } } }' instead.")
  numOfNodes_SUM_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'numOfNodes: { sum: { lte: ... } } }' instead.")
  numOfRels: BigIntScalarAggregationFilters
  numOfRels_AVERAGE_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'numOfRels: { average: { eq: ... } } }' instead.")
  numOfRels_AVERAGE_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'numOfRels: { average: { gt: ... } } }' instead.")
  numOfRels_AVERAGE_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'numOfRels: { average: { gte: ... } } }' instead.")
  numOfRels_AVERAGE_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'numOfRels: { average: { lt: ... } } }' instead.")
  numOfRels_AVERAGE_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'numOfRels: { average: { lte: ... } } }' instead.")
  numOfRels_MAX_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'numOfRels: { max: { eq: ... } } }' instead.")
  numOfRels_MAX_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'numOfRels: { max: { gt: ... } } }' instead.")
  numOfRels_MAX_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'numOfRels: { max: { gte: ... } } }' instead.")
  numOfRels_MAX_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'numOfRels: { max: { lt: ... } } }' instead.")
  numOfRels_MAX_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'numOfRels: { max: { lte: ... } } }' instead.")
  numOfRels_MIN_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'numOfRels: { min: { eq: ... } } }' instead.")
  numOfRels_MIN_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'numOfRels: { min: { gt: ... } } }' instead.")
  numOfRels_MIN_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'numOfRels: { min: { gte: ... } } }' instead.")
  numOfRels_MIN_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'numOfRels: { min: { lt: ... } } }' instead.")
  numOfRels_MIN_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'numOfRels: { min: { lte: ... } } }' instead.")
  numOfRels_SUM_EQUAL: BigInt @deprecated(reason: "Please use the relevant generic filter 'numOfRels: { sum: { eq: ... } } }' instead.")
  numOfRels_SUM_GT: BigInt @deprecated(reason: "Please use the relevant generic filter 'numOfRels: { sum: { gt: ... } } }' instead.")
  numOfRels_SUM_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'numOfRels: { sum: { gte: ... } } }' instead.")
  numOfRels_SUM_LT: BigInt @deprecated(reason: "Please use the relevant generic filter 'numOfRels: { sum: { lt: ... } } }' instead.")
  numOfRels_SUM_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter 'numOfRels: { sum: { lte: ... } } }' instead.")
  ranges: StringScalarAggregationFilters
  ranges_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'ranges: { averageLength: { eq: ... } } }' instead.")
  ranges_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'ranges: { averageLength: { gt: ... } } }' instead.")
  ranges_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'ranges: { averageLength: { gte: ... } } }' instead.")
  ranges_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'ranges: { averageLength: { lt: ... } } }' instead.")
  ranges_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'ranges: { averageLength: { lte: ... } } }' instead.")
  ranges_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'ranges: { longestLength: { eq: ... } } }' instead.")
  ranges_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'ranges: { longestLength: { gt: ... } } }' instead.")
  ranges_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'ranges: { longestLength: { gte: ... } } }' instead.")
  ranges_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'ranges: { longestLength: { lt: ... } } }' instead.")
  ranges_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'ranges: { longestLength: { lte: ... } } }' instead.")
  ranges_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'ranges: { shortestLength: { eq: ... } } }' instead.")
  ranges_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'ranges: { shortestLength: { gt: ... } } }' instead.")
  ranges_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'ranges: { shortestLength: { gte: ... } } }' instead.")
  ranges_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'ranges: { shortestLength: { lt: ... } } }' instead.")
  ranges_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'ranges: { shortestLength: { lte: ... } } }' instead.")
  relationships: StringScalarAggregationFilters
  relationships_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'relationships: { averageLength: { eq: ... } } }' instead.")
  relationships_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'relationships: { averageLength: { gt: ... } } }' instead.")
  relationships_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'relationships: { averageLength: { gte: ... } } }' instead.")
  relationships_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'relationships: { averageLength: { lt: ... } } }' instead.")
  relationships_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'relationships: { averageLength: { lte: ... } } }' instead.")
  relationships_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'relationships: { longestLength: { eq: ... } } }' instead.")
  relationships_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'relationships: { longestLength: { gt: ... } } }' instead.")
  relationships_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'relationships: { longestLength: { gte: ... } } }' instead.")
  relationships_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'relationships: { longestLength: { lt: ... } } }' instead.")
  relationships_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'relationships: { longestLength: { lte: ... } } }' instead.")
  relationships_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'relationships: { shortestLength: { eq: ... } } }' instead.")
  relationships_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'relationships: { shortestLength: { gt: ... } } }' instead.")
  relationships_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'relationships: { shortestLength: { gte: ... } } }' instead.")
  relationships_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'relationships: { shortestLength: { lt: ... } } }' instead.")
  relationships_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'relationships: { shortestLength: { lte: ... } } }' instead.")
  style: StringScalarAggregationFilters
  style_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'style: { averageLength: { eq: ... } } }' instead.")
  style_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'style: { averageLength: { gt: ... } } }' instead.")
  style_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'style: { averageLength: { gte: ... } } }' instead.")
  style_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'style: { averageLength: { lt: ... } } }' instead.")
  style_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'style: { averageLength: { lte: ... } } }' instead.")
  style_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'style: { longestLength: { eq: ... } } }' instead.")
  style_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'style: { longestLength: { gt: ... } } }' instead.")
  style_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'style: { longestLength: { gte: ... } } }' instead.")
  style_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'style: { longestLength: { lt: ... } } }' instead.")
  style_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'style: { longestLength: { lte: ... } } }' instead.")
  style_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'style: { shortestLength: { eq: ... } } }' instead.")
  style_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'style: { shortestLength: { gt: ... } } }' instead.")
  style_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'style: { shortestLength: { gte: ... } } }' instead.")
  style_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'style: { shortestLength: { lt: ... } } }' instead.")
  style_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'style: { shortestLength: { lte: ... } } }' instead.")
  version: StringScalarAggregationFilters
  version_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'version: { averageLength: { eq: ... } } }' instead.")
  version_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'version: { averageLength: { gt: ... } } }' instead.")
  version_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'version: { averageLength: { gte: ... } } }' instead.")
  version_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'version: { averageLength: { lt: ... } } }' instead.")
  version_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'version: { averageLength: { lte: ... } } }' instead.")
  version_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'version: { longestLength: { eq: ... } } }' instead.")
  version_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'version: { longestLength: { gt: ... } } }' instead.")
  version_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'version: { longestLength: { gte: ... } } }' instead.")
  version_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'version: { longestLength: { lt: ... } } }' instead.")
  version_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'version: { longestLength: { lte: ... } } }' instead.")
  version_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'version: { shortestLength: { eq: ... } } }' instead.")
  version_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'version: { shortestLength: { gt: ... } } }' instead.")
  version_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'version: { shortestLength: { gte: ... } } }' instead.")
  version_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'version: { shortestLength: { lt: ... } } }' instead.")
  version_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'version: { shortestLength: { lte: ... } } }' instead.")
  visualisation: StringScalarAggregationFilters
  visualisation_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'visualisation: { averageLength: { eq: ... } } }' instead.")
  visualisation_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'visualisation: { averageLength: { gt: ... } } }' instead.")
  visualisation_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'visualisation: { averageLength: { gte: ... } } }' instead.")
  visualisation_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'visualisation: { averageLength: { lt: ... } } }' instead.")
  visualisation_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'visualisation: { averageLength: { lte: ... } } }' instead.")
  visualisation_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'visualisation: { longestLength: { eq: ... } } }' instead.")
  visualisation_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'visualisation: { longestLength: { gt: ... } } }' instead.")
  visualisation_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'visualisation: { longestLength: { gte: ... } } }' instead.")
  visualisation_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'visualisation: { longestLength: { lt: ... } } }' instead.")
  visualisation_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'visualisation: { longestLength: { lte: ... } } }' instead.")
  visualisation_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'visualisation: { shortestLength: { eq: ... } } }' instead.")
  visualisation_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'visualisation: { shortestLength: { gt: ... } } }' instead.")
  visualisation_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'visualisation: { shortestLength: { gte: ... } } }' instead.")
  visualisation_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'visualisation: { shortestLength: { lt: ... } } }' instead.")
  visualisation_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'visualisation: { shortestLength: { lte: ... } } }' instead.")
}

type _Bloom_Perspective_BloomHasSceneBloomSceneSRelationship {
  cursor: String!
  node: _Bloom_Scene_!
}

input _Bloom_Perspective_BloomHasSceneBloomSceneSUpdateConnectionInput {
  node: _Bloom_Scene_UpdateInput
  where: _Bloom_Perspective_BloomHasSceneBloomSceneSConnectionWhere
}

input _Bloom_Perspective_BloomHasSceneBloomSceneSUpdateFieldInput {
  connect: [_Bloom_Perspective_BloomHasSceneBloomSceneSConnectFieldInput!]
  create: [_Bloom_Perspective_BloomHasSceneBloomSceneSCreateFieldInput!]
  delete: [_Bloom_Perspective_BloomHasSceneBloomSceneSDeleteFieldInput!]
  disconnect: [_Bloom_Perspective_BloomHasSceneBloomSceneSDisconnectFieldInput!]
  update: _Bloom_Perspective_BloomHasSceneBloomSceneSUpdateConnectionInput
}

input _Bloom_Perspective_ConnectInput {
  bloomHasSceneBloomSceneS: [_Bloom_Perspective_BloomHasSceneBloomSceneSConnectFieldInput!]
}

input _Bloom_Perspective_ConnectWhere {
  node: _Bloom_Perspective_Where!
}

input _Bloom_Perspective_CreateInput {
  bloomHasSceneBloomSceneS: _Bloom_Perspective_BloomHasSceneBloomSceneSFieldInput
  data: String!
  id: String!
  name: String!
  roles: [String!]!
  version: String!
}

input _Bloom_Perspective_DeleteInput {
  bloomHasSceneBloomSceneS: [_Bloom_Perspective_BloomHasSceneBloomSceneSDeleteFieldInput!]
}

input _Bloom_Perspective_DisconnectInput {
  bloomHasSceneBloomSceneS: [_Bloom_Perspective_BloomHasSceneBloomSceneSDisconnectFieldInput!]
}

type _Bloom_Perspective_Edge {
  cursor: String!
  node: _Bloom_Perspective_!
}

input _Bloom_Perspective_RelationshipFilters {
  """
  Filter type where all of the related _Bloom_Perspective_s match this filter
  """
  all: _Bloom_Perspective_Where
  """
  Filter type where none of the related _Bloom_Perspective_s match this filter
  """
  none: _Bloom_Perspective_Where
  """
  Filter type where one of the related _Bloom_Perspective_s match this filter
  """
  single: _Bloom_Perspective_Where
  """
  Filter type where some of the related _Bloom_Perspective_s match this filter
  """
  some: _Bloom_Perspective_Where
}

"""
Fields to sort _bloomPerspectives by. The order in which sorts are applied is not guaranteed when specifying many fields in one _Bloom_Perspective_Sort object.
"""
input _Bloom_Perspective_Sort {
  data: SortDirection
  id: SortDirection
  name: SortDirection
  version: SortDirection
}

input _Bloom_Perspective_UpdateInput {
  bloomHasSceneBloomSceneS: [_Bloom_Perspective_BloomHasSceneBloomSceneSUpdateFieldInput!]
  data: StringScalarMutations
  data_SET: String
  id: StringScalarMutations
  id_SET: String
  name: StringScalarMutations
  name_SET: String
  roles: ListStringMutations
  roles_POP: Int @deprecated(reason: "Please use the generic mutation 'roles: { pop: ... } }' instead.")
  roles_PUSH: [String!] @deprecated(reason: "Please use the generic mutation 'roles: { push: ... } }' instead.")
  roles_SET: [String!]
  version: StringScalarMutations
  version_SET: String
}

input _Bloom_Perspective_Where {
  AND: [_Bloom_Perspective_Where!]
  NOT: _Bloom_Perspective_Where
  OR: [_Bloom_Perspective_Where!]
  bloomHasSceneBloomSceneS: _Bloom_Scene_RelationshipFilters
  bloomHasSceneBloomSceneSAggregate: _Bloom_Perspective_BloomHasSceneBloomSceneSAggregateInput @deprecated(reason: "Aggregate filters are moved inside the bloomHasSceneBloomSceneSConnection filter, please use { bloomHasSceneBloomSceneSConnection: { aggregate: {...} } } instead")
  bloomHasSceneBloomSceneSConnection: _Bloom_Perspective_BloomHasSceneBloomSceneSConnectionFilters
  """
  Return _Bloom_Perspective_s where all of the related _Bloom_Perspective_BloomHasSceneBloomSceneSConnections match this filter
  """
  bloomHasSceneBloomSceneSConnection_ALL: _Bloom_Perspective_BloomHasSceneBloomSceneSConnectionWhere @deprecated(reason: "Please use the relevant generic filter 'bloomHasSceneBloomSceneSConnection: { all: { node: ... } } }' instead.")
  """
  Return _Bloom_Perspective_s where none of the related _Bloom_Perspective_BloomHasSceneBloomSceneSConnections match this filter
  """
  bloomHasSceneBloomSceneSConnection_NONE: _Bloom_Perspective_BloomHasSceneBloomSceneSConnectionWhere @deprecated(reason: "Please use the relevant generic filter 'bloomHasSceneBloomSceneSConnection: { none: { node: ... } } }' instead.")
  """
  Return _Bloom_Perspective_s where one of the related _Bloom_Perspective_BloomHasSceneBloomSceneSConnections match this filter
  """
  bloomHasSceneBloomSceneSConnection_SINGLE: _Bloom_Perspective_BloomHasSceneBloomSceneSConnectionWhere @deprecated(reason: "Please use the relevant generic filter 'bloomHasSceneBloomSceneSConnection: { single: { node: ... } } }' instead.")
  """
  Return _Bloom_Perspective_s where some of the related _Bloom_Perspective_BloomHasSceneBloomSceneSConnections match this filter
  """
  bloomHasSceneBloomSceneSConnection_SOME: _Bloom_Perspective_BloomHasSceneBloomSceneSConnectionWhere @deprecated(reason: "Please use the relevant generic filter 'bloomHasSceneBloomSceneSConnection: { some: { node: ... } } }' instead.")
  """
  Return _Bloom_Perspective_s where all of the related _Bloom_Scene_s match this filter
  """
  bloomHasSceneBloomSceneS_ALL: _Bloom_Scene_Where @deprecated(reason: "Please use the relevant generic filter 'bloomHasSceneBloomSceneS: { all: ... }' instead.")
  """
  Return _Bloom_Perspective_s where none of the related _Bloom_Scene_s match this filter
  """
  bloomHasSceneBloomSceneS_NONE: _Bloom_Scene_Where @deprecated(reason: "Please use the relevant generic filter 'bloomHasSceneBloomSceneS: { none: ... }' instead.")
  """
  Return _Bloom_Perspective_s where one of the related _Bloom_Scene_s match this filter
  """
  bloomHasSceneBloomSceneS_SINGLE: _Bloom_Scene_Where @deprecated(reason: "Please use the relevant generic filter 'bloomHasSceneBloomSceneS: {  single: ... }' instead.")
  """
  Return _Bloom_Perspective_s where some of the related _Bloom_Scene_s match this filter
  """
  bloomHasSceneBloomSceneS_SOME: _Bloom_Scene_Where @deprecated(reason: "Please use the relevant generic filter 'bloomHasSceneBloomSceneS: {  some: ... }' instead.")
  data: StringScalarFilters
  data_CONTAINS: String @deprecated(reason: "Please use the relevant generic filter data: { contains: ... }")
  data_ENDS_WITH: String @deprecated(reason: "Please use the relevant generic filter data: { endsWith: ... }")
  data_EQ: String @deprecated(reason: "Please use the relevant generic filter data: { eq: ... }")
  data_IN: [String!] @deprecated(reason: "Please use the relevant generic filter data: { in: ... }")
  data_STARTS_WITH: String @deprecated(reason: "Please use the relevant generic filter data: { startsWith: ... }")
  id: StringScalarFilters
  id_CONTAINS: String @deprecated(reason: "Please use the relevant generic filter id: { contains: ... }")
  id_ENDS_WITH: String @deprecated(reason: "Please use the relevant generic filter id: { endsWith: ... }")
  id_EQ: String @deprecated(reason: "Please use the relevant generic filter id: { eq: ... }")
  id_IN: [String!] @deprecated(reason: "Please use the relevant generic filter id: { in: ... }")
  id_STARTS_WITH: String @deprecated(reason: "Please use the relevant generic filter id: { startsWith: ... }")
  name: StringScalarFilters
  name_CONTAINS: String @deprecated(reason: "Please use the relevant generic filter name: { contains: ... }")
  name_ENDS_WITH: String @deprecated(reason: "Please use the relevant generic filter name: { endsWith: ... }")
  name_EQ: String @deprecated(reason: "Please use the relevant generic filter name: { eq: ... }")
  name_IN: [String!] @deprecated(reason: "Please use the relevant generic filter name: { in: ... }")
  name_STARTS_WITH: String @deprecated(reason: "Please use the relevant generic filter name: { startsWith: ... }")
  roles: StringListFilters
  roles_EQ: [String!] @deprecated(reason: "Please use the relevant generic filter roles: { eq: ... }")
  roles_INCLUDES: String @deprecated(reason: "Please use the relevant generic filter roles: { includes: ... }")
  version: StringScalarFilters
  version_CONTAINS: String @deprecated(reason: "Please use the relevant generic filter version: { contains: ... }")
  version_ENDS_WITH: String @deprecated(reason: "Please use the relevant generic filter version: { endsWith: ... }")
  version_EQ: String @deprecated(reason: "Please use the relevant generic filter version: { eq: ... }")
  version_IN: [String!] @deprecated(reason: "Please use the relevant generic filter version: { in: ... }")
  version_STARTS_WITH: String @deprecated(reason: "Please use the relevant generic filter version: { startsWith: ... }")
}

type _Bloom_Perspective__Bloom_Scene_BloomHasSceneBloomSceneSAggregateSelection {
  count: CountConnection!
  node: _Bloom_Perspective__Bloom_Scene_BloomHasSceneBloomSceneSNodeAggregateSelection
}

type _Bloom_Perspective__Bloom_Scene_BloomHasSceneBloomSceneSNodeAggregateSelection {
  createdAt: BigIntAggregateSelection!
  createdBy: StringAggregateSelection!
  filters: StringAggregateSelection!
  gds: StringAggregateSelection!
  id: StringAggregateSelection!
  lastModified: BigIntAggregateSelection!
  name: StringAggregateSelection!
  nodes: StringAggregateSelection!
  numOfNodes: BigIntAggregateSelection!
  numOfRels: BigIntAggregateSelection!
  ranges: StringAggregateSelection!
  relationships: StringAggregateSelection!
  style: StringAggregateSelection!
  version: StringAggregateSelection!
  visualisation: StringAggregateSelection!
}

type _Bloom_Scene_ @introspection @node {
  bloomPerspectiveSBloomHasScene(limit: Int, offset: Int, sort: [_Bloom_Perspective_Sort!], where: _Bloom_Perspective_Where): [_Bloom_Perspective_!]! @introspection @relationship(type: "_Bloom_HAS_SCENE_", direction: IN)
  bloomPerspectiveSBloomHasSceneConnection(after: String, first: Int, sort: [_Bloom_Scene_BloomPerspectiveSBloomHasSceneConnectionSort!], where: _Bloom_Scene_BloomPerspectiveSBloomHasSceneConnectionWhere): _Bloom_Scene_BloomPerspectiveSBloomHasSceneConnection!
  createdAt: BigInt! @introspection
  createdBy: String! @introspection
  filters: String! @introspection
  gds: String! @introspection
  id: String! @introspection
  lastModified: BigInt! @introspection
  name: String! @introspection
  nodes: String! @introspection
  numOfNodes: BigInt! @introspection
  numOfRels: BigInt! @introspection
  ranges: String! @introspection
  relationships: String! @introspection
  roles: [String!]! @introspection
  style: String! @introspection
  version: String! @introspection
  visualisation: String! @introspection
}

type _Bloom_Scene_Aggregate {
  count: Count!
  node: _Bloom_Scene_AggregateNode!
}

type _Bloom_Scene_AggregateNode {
  createdAt: BigIntAggregateSelection!
  createdBy: StringAggregateSelection!
  filters: StringAggregateSelection!
  gds: StringAggregateSelection!
  id: StringAggregateSelection!
  lastModified: BigIntAggregateSelection!
  name: StringAggregateSelection!
  nodes: StringAggregateSelection!
  numOfNodes: BigIntAggregateSelection!
  numOfRels: BigIntAggregateSelection!
  ranges: StringAggregateSelection!
  relationships: StringAggregateSelection!
  style: StringAggregateSelection!
  version: StringAggregateSelection!
  visualisation: StringAggregateSelection!
}

input _Bloom_Scene_BloomPerspectiveSBloomHasSceneAggregateInput {
  AND: [_Bloom_Scene_BloomPerspectiveSBloomHasSceneAggregateInput!]
  NOT: _Bloom_Scene_BloomPerspectiveSBloomHasSceneAggregateInput
  OR: [_Bloom_Scene_BloomPerspectiveSBloomHasSceneAggregateInput!]
  count: IntScalarFilters
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: _Bloom_Scene_BloomPerspectiveSBloomHasSceneNodeAggregationWhereInput
}

input _Bloom_Scene_BloomPerspectiveSBloomHasSceneConnectFieldInput {
  connect: [_Bloom_Perspective_ConnectInput!]
  where: _Bloom_Perspective_ConnectWhere
}

type _Bloom_Scene_BloomPerspectiveSBloomHasSceneConnection {
  aggregate: _Bloom_Scene__Bloom_Perspective_BloomPerspectiveSBloomHasSceneAggregateSelection!
  edges: [_Bloom_Scene_BloomPerspectiveSBloomHasSceneRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input _Bloom_Scene_BloomPerspectiveSBloomHasSceneConnectionAggregateInput {
  AND: [_Bloom_Scene_BloomPerspectiveSBloomHasSceneConnectionAggregateInput!]
  NOT: _Bloom_Scene_BloomPerspectiveSBloomHasSceneConnectionAggregateInput
  OR: [_Bloom_Scene_BloomPerspectiveSBloomHasSceneConnectionAggregateInput!]
  count: ConnectionAggregationCountFilterInput
  node: _Bloom_Scene_BloomPerspectiveSBloomHasSceneNodeAggregationWhereInput
}

input _Bloom_Scene_BloomPerspectiveSBloomHasSceneConnectionFilters {
  """
  Filter _Bloom_Scene_s by aggregating results on related _Bloom_Scene_BloomPerspectiveSBloomHasSceneConnections
  """
  aggregate: _Bloom_Scene_BloomPerspectiveSBloomHasSceneConnectionAggregateInput
  """
  Return _Bloom_Scene_s where all of the related _Bloom_Scene_BloomPerspectiveSBloomHasSceneConnections match this filter
  """
  all: _Bloom_Scene_BloomPerspectiveSBloomHasSceneConnectionWhere
  """
  Return _Bloom_Scene_s where none of the related _Bloom_Scene_BloomPerspectiveSBloomHasSceneConnections match this filter
  """
  none: _Bloom_Scene_BloomPerspectiveSBloomHasSceneConnectionWhere
  """
  Return _Bloom_Scene_s where one of the related _Bloom_Scene_BloomPerspectiveSBloomHasSceneConnections match this filter
  """
  single: _Bloom_Scene_BloomPerspectiveSBloomHasSceneConnectionWhere
  """
  Return _Bloom_Scene_s where some of the related _Bloom_Scene_BloomPerspectiveSBloomHasSceneConnections match this filter
  """
  some: _Bloom_Scene_BloomPerspectiveSBloomHasSceneConnectionWhere
}

input _Bloom_Scene_BloomPerspectiveSBloomHasSceneConnectionSort {
  node: _Bloom_Perspective_Sort
}

input _Bloom_Scene_BloomPerspectiveSBloomHasSceneConnectionWhere {
  AND: [_Bloom_Scene_BloomPerspectiveSBloomHasSceneConnectionWhere!]
  NOT: _Bloom_Scene_BloomPerspectiveSBloomHasSceneConnectionWhere
  OR: [_Bloom_Scene_BloomPerspectiveSBloomHasSceneConnectionWhere!]
  node: _Bloom_Perspective_Where
}

input _Bloom_Scene_BloomPerspectiveSBloomHasSceneCreateFieldInput {
  node: _Bloom_Perspective_CreateInput!
}

input _Bloom_Scene_BloomPerspectiveSBloomHasSceneDeleteFieldInput {
  delete: _Bloom_Perspective_DeleteInput
  where: _Bloom_Scene_BloomPerspectiveSBloomHasSceneConnectionWhere
}

input _Bloom_Scene_BloomPerspectiveSBloomHasSceneDisconnectFieldInput {
  disconnect: _Bloom_Perspective_DisconnectInput
  where: _Bloom_Scene_BloomPerspectiveSBloomHasSceneConnectionWhere
}

input _Bloom_Scene_BloomPerspectiveSBloomHasSceneFieldInput {
  connect: [_Bloom_Scene_BloomPerspectiveSBloomHasSceneConnectFieldInput!]
  create: [_Bloom_Scene_BloomPerspectiveSBloomHasSceneCreateFieldInput!]
}

input _Bloom_Scene_BloomPerspectiveSBloomHasSceneNodeAggregationWhereInput {
  AND: [_Bloom_Scene_BloomPerspectiveSBloomHasSceneNodeAggregationWhereInput!]
  NOT: _Bloom_Scene_BloomPerspectiveSBloomHasSceneNodeAggregationWhereInput
  OR: [_Bloom_Scene_BloomPerspectiveSBloomHasSceneNodeAggregationWhereInput!]
  data: StringScalarAggregationFilters
  data_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'data: { averageLength: { eq: ... } } }' instead.")
  data_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'data: { averageLength: { gt: ... } } }' instead.")
  data_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'data: { averageLength: { gte: ... } } }' instead.")
  data_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'data: { averageLength: { lt: ... } } }' instead.")
  data_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'data: { averageLength: { lte: ... } } }' instead.")
  data_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'data: { longestLength: { eq: ... } } }' instead.")
  data_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'data: { longestLength: { gt: ... } } }' instead.")
  data_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'data: { longestLength: { gte: ... } } }' instead.")
  data_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'data: { longestLength: { lt: ... } } }' instead.")
  data_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'data: { longestLength: { lte: ... } } }' instead.")
  data_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'data: { shortestLength: { eq: ... } } }' instead.")
  data_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'data: { shortestLength: { gt: ... } } }' instead.")
  data_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'data: { shortestLength: { gte: ... } } }' instead.")
  data_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'data: { shortestLength: { lt: ... } } }' instead.")
  data_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'data: { shortestLength: { lte: ... } } }' instead.")
  id: StringScalarAggregationFilters
  id_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'id: { averageLength: { eq: ... } } }' instead.")
  id_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'id: { averageLength: { gt: ... } } }' instead.")
  id_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'id: { averageLength: { gte: ... } } }' instead.")
  id_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'id: { averageLength: { lt: ... } } }' instead.")
  id_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'id: { averageLength: { lte: ... } } }' instead.")
  id_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'id: { longestLength: { eq: ... } } }' instead.")
  id_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'id: { longestLength: { gt: ... } } }' instead.")
  id_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'id: { longestLength: { gte: ... } } }' instead.")
  id_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'id: { longestLength: { lt: ... } } }' instead.")
  id_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'id: { longestLength: { lte: ... } } }' instead.")
  id_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'id: { shortestLength: { eq: ... } } }' instead.")
  id_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'id: { shortestLength: { gt: ... } } }' instead.")
  id_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'id: { shortestLength: { gte: ... } } }' instead.")
  id_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'id: { shortestLength: { lt: ... } } }' instead.")
  id_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'id: { shortestLength: { lte: ... } } }' instead.")
  name: StringScalarAggregationFilters
  name_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'name: { averageLength: { eq: ... } } }' instead.")
  name_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'name: { averageLength: { gt: ... } } }' instead.")
  name_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'name: { averageLength: { gte: ... } } }' instead.")
  name_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'name: { averageLength: { lt: ... } } }' instead.")
  name_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'name: { averageLength: { lte: ... } } }' instead.")
  name_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'name: { longestLength: { eq: ... } } }' instead.")
  name_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'name: { longestLength: { gt: ... } } }' instead.")
  name_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'name: { longestLength: { gte: ... } } }' instead.")
  name_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'name: { longestLength: { lt: ... } } }' instead.")
  name_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'name: { longestLength: { lte: ... } } }' instead.")
  name_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'name: { shortestLength: { eq: ... } } }' instead.")
  name_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'name: { shortestLength: { gt: ... } } }' instead.")
  name_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'name: { shortestLength: { gte: ... } } }' instead.")
  name_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'name: { shortestLength: { lt: ... } } }' instead.")
  name_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'name: { shortestLength: { lte: ... } } }' instead.")
  version: StringScalarAggregationFilters
  version_AVERAGE_LENGTH_EQUAL: Float @deprecated(reason: "Please use the relevant generic filter 'version: { averageLength: { eq: ... } } }' instead.")
  version_AVERAGE_LENGTH_GT: Float @deprecated(reason: "Please use the relevant generic filter 'version: { averageLength: { gt: ... } } }' instead.")
  version_AVERAGE_LENGTH_GTE: Float @deprecated(reason: "Please use the relevant generic filter 'version: { averageLength: { gte: ... } } }' instead.")
  version_AVERAGE_LENGTH_LT: Float @deprecated(reason: "Please use the relevant generic filter 'version: { averageLength: { lt: ... } } }' instead.")
  version_AVERAGE_LENGTH_LTE: Float @deprecated(reason: "Please use the relevant generic filter 'version: { averageLength: { lte: ... } } }' instead.")
  version_LONGEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'version: { longestLength: { eq: ... } } }' instead.")
  version_LONGEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'version: { longestLength: { gt: ... } } }' instead.")
  version_LONGEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'version: { longestLength: { gte: ... } } }' instead.")
  version_LONGEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'version: { longestLength: { lt: ... } } }' instead.")
  version_LONGEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'version: { longestLength: { lte: ... } } }' instead.")
  version_SHORTEST_LENGTH_EQUAL: Int @deprecated(reason: "Please use the relevant generic filter 'version: { shortestLength: { eq: ... } } }' instead.")
  version_SHORTEST_LENGTH_GT: Int @deprecated(reason: "Please use the relevant generic filter 'version: { shortestLength: { gt: ... } } }' instead.")
  version_SHORTEST_LENGTH_GTE: Int @deprecated(reason: "Please use the relevant generic filter 'version: { shortestLength: { gte: ... } } }' instead.")
  version_SHORTEST_LENGTH_LT: Int @deprecated(reason: "Please use the relevant generic filter 'version: { shortestLength: { lt: ... } } }' instead.")
  version_SHORTEST_LENGTH_LTE: Int @deprecated(reason: "Please use the relevant generic filter 'version: { shortestLength: { lte: ... } } }' instead.")
}

type _Bloom_Scene_BloomPerspectiveSBloomHasSceneRelationship {
  cursor: String!
  node: _Bloom_Perspective_!
}

input _Bloom_Scene_BloomPerspectiveSBloomHasSceneUpdateConnectionInput {
  node: _Bloom_Perspective_UpdateInput
  where: _Bloom_Scene_BloomPerspectiveSBloomHasSceneConnectionWhere
}

input _Bloom_Scene_BloomPerspectiveSBloomHasSceneUpdateFieldInput {
  connect: [_Bloom_Scene_BloomPerspectiveSBloomHasSceneConnectFieldInput!]
  create: [_Bloom_Scene_BloomPerspectiveSBloomHasSceneCreateFieldInput!]
  delete: [_Bloom_Scene_BloomPerspectiveSBloomHasSceneDeleteFieldInput!]
  disconnect: [_Bloom_Scene_BloomPerspectiveSBloomHasSceneDisconnectFieldInput!]
  update: _Bloom_Scene_BloomPerspectiveSBloomHasSceneUpdateConnectionInput
}

input _Bloom_Scene_ConnectInput {
  bloomPerspectiveSBloomHasScene: [_Bloom_Scene_BloomPerspectiveSBloomHasSceneConnectFieldInput!]
}

input _Bloom_Scene_ConnectWhere {
  node: _Bloom_Scene_Where!
}

input _Bloom_Scene_CreateInput {
  bloomPerspectiveSBloomHasScene: _Bloom_Scene_BloomPerspectiveSBloomHasSceneFieldInput
  createdAt: BigInt!
  createdBy: String!
  filters: String!
  gds: String!
  id: String!
  lastModified: BigInt!
  name: String!
  nodes: String!
  numOfNodes: BigInt!
  numOfRels: BigInt!
  ranges: String!
  relationships: String!
  roles: [String!]!
  style: String!
  version: String!
  visualisation: String!
}

input _Bloom_Scene_DeleteInput {
  bloomPerspectiveSBloomHasScene: [_Bloom_Scene_BloomPerspectiveSBloomHasSceneDeleteFieldInput!]
}

input _Bloom_Scene_DisconnectInput {
  bloomPerspectiveSBloomHasScene: [_Bloom_Scene_BloomPerspectiveSBloomHasSceneDisconnectFieldInput!]
}

type _Bloom_Scene_Edge {
  cursor: String!
  node: _Bloom_Scene_!
}

input _Bloom_Scene_RelationshipFilters {
  """Filter type where all of the related _Bloom_Scene_s match this filter"""
  all: _Bloom_Scene_Where
  """Filter type where none of the related _Bloom_Scene_s match this filter"""
  none: _Bloom_Scene_Where
  """Filter type where one of the related _Bloom_Scene_s match this filter"""
  single: _Bloom_Scene_Where
  """Filter type where some of the related _Bloom_Scene_s match this filter"""
  some: _Bloom_Scene_Where
}

"""
Fields to sort _bloomScenes by. The order in which sorts are applied is not guaranteed when specifying many fields in one _Bloom_Scene_Sort object.
"""
input _Bloom_Scene_Sort {
  createdAt: SortDirection
  createdBy: SortDirection
  filters: SortDirection
  gds: SortDirection
  id: SortDirection
  lastModified: SortDirection
  name: SortDirection
  nodes: SortDirection
  numOfNodes: SortDirection
  numOfRels: SortDirection
  ranges: SortDirection
  relationships: SortDirection
  style: SortDirection
  version: SortDirection
  visualisation: SortDirection
}

input _Bloom_Scene_UpdateInput {
  bloomPerspectiveSBloomHasScene: [_Bloom_Scene_BloomPerspectiveSBloomHasSceneUpdateFieldInput!]
  createdAt: BigIntScalarMutations
  createdAt_DECREMENT: BigInt @deprecated(reason: "Please use the relevant generic mutation 'createdAt: { decrement: ... } }' instead.")
  createdAt_INCREMENT: BigInt @deprecated(reason: "Please use the relevant generic mutation 'createdAt: { increment: ... } }' instead.")
  createdAt_SET: BigInt
  createdBy: StringScalarMutations
  createdBy_SET: String
  filters: StringScalarMutations
  filters_SET: String
  gds: StringScalarMutations
  gds_SET: String
  id: StringScalarMutations
  id_SET: String
  lastModified: BigIntScalarMutations
  lastModified_DECREMENT: BigInt @deprecated(reason: "Please use the relevant generic mutation 'lastModified: { decrement: ... } }' instead.")
  lastModified_INCREMENT: BigInt @deprecated(reason: "Please use the relevant generic mutation 'lastModified: { increment: ... } }' instead.")
  lastModified_SET: BigInt
  name: StringScalarMutations
  name_SET: String
  nodes: StringScalarMutations
  nodes_SET: String
  numOfNodes: BigIntScalarMutations
  numOfNodes_DECREMENT: BigInt @deprecated(reason: "Please use the relevant generic mutation 'numOfNodes: { decrement: ... } }' instead.")
  numOfNodes_INCREMENT: BigInt @deprecated(reason: "Please use the relevant generic mutation 'numOfNodes: { increment: ... } }' instead.")
  numOfNodes_SET: BigInt
  numOfRels: BigIntScalarMutations
  numOfRels_DECREMENT: BigInt @deprecated(reason: "Please use the relevant generic mutation 'numOfRels: { decrement: ... } }' instead.")
  numOfRels_INCREMENT: BigInt @deprecated(reason: "Please use the relevant generic mutation 'numOfRels: { increment: ... } }' instead.")
  numOfRels_SET: BigInt
  ranges: StringScalarMutations
  ranges_SET: String
  relationships: StringScalarMutations
  relationships_SET: String
  roles: ListStringMutations
  roles_POP: Int @deprecated(reason: "Please use the generic mutation 'roles: { pop: ... } }' instead.")
  roles_PUSH: [String!] @deprecated(reason: "Please use the generic mutation 'roles: { push: ... } }' instead.")
  roles_SET: [String!]
  style: StringScalarMutations
  style_SET: String
  version: StringScalarMutations
  version_SET: String
  visualisation: StringScalarMutations
  visualisation_SET: String
}

input _Bloom_Scene_Where {
  AND: [_Bloom_Scene_Where!]
  NOT: _Bloom_Scene_Where
  OR: [_Bloom_Scene_Where!]
  bloomPerspectiveSBloomHasScene: _Bloom_Perspective_RelationshipFilters
  bloomPerspectiveSBloomHasSceneAggregate: _Bloom_Scene_BloomPerspectiveSBloomHasSceneAggregateInput @deprecated(reason: "Aggregate filters are moved inside the bloomPerspectiveSBloomHasSceneConnection filter, please use { bloomPerspectiveSBloomHasSceneConnection: { aggregate: {...} } } instead")
  bloomPerspectiveSBloomHasSceneConnection: _Bloom_Scene_BloomPerspectiveSBloomHasSceneConnectionFilters
  """
  Return _Bloom_Scene_s where all of the related _Bloom_Scene_BloomPerspectiveSBloomHasSceneConnections match this filter
  """
  bloomPerspectiveSBloomHasSceneConnection_ALL: _Bloom_Scene_BloomPerspectiveSBloomHasSceneConnectionWhere @deprecated(reason: "Please use the relevant generic filter 'bloomPerspectiveSBloomHasSceneConnection: { all: { node: ... } } }' instead.")
  """
  Return _Bloom_Scene_s where none of the related _Bloom_Scene_BloomPerspectiveSBloomHasSceneConnections match this filter
  """
  bloomPerspectiveSBloomHasSceneConnection_NONE: _Bloom_Scene_BloomPerspectiveSBloomHasSceneConnectionWhere @deprecated(reason: "Please use the relevant generic filter 'bloomPerspectiveSBloomHasSceneConnection: { none: { node: ... } } }' instead.")
  """
  Return _Bloom_Scene_s where one of the related _Bloom_Scene_BloomPerspectiveSBloomHasSceneConnections match this filter
  """
  bloomPerspectiveSBloomHasSceneConnection_SINGLE: _Bloom_Scene_BloomPerspectiveSBloomHasSceneConnectionWhere @deprecated(reason: "Please use the relevant generic filter 'bloomPerspectiveSBloomHasSceneConnection: { single: { node: ... } } }' instead.")
  """
  Return _Bloom_Scene_s where some of the related _Bloom_Scene_BloomPerspectiveSBloomHasSceneConnections match this filter
  """
  bloomPerspectiveSBloomHasSceneConnection_SOME: _Bloom_Scene_BloomPerspectiveSBloomHasSceneConnectionWhere @deprecated(reason: "Please use the relevant generic filter 'bloomPerspectiveSBloomHasSceneConnection: { some: { node: ... } } }' instead.")
  """
  Return _Bloom_Scene_s where all of the related _Bloom_Perspective_s match this filter
  """
  bloomPerspectiveSBloomHasScene_ALL: _Bloom_Perspective_Where @deprecated(reason: "Please use the relevant generic filter 'bloomPerspectiveSBloomHasScene: { all: ... }' instead.")
  """
  Return _Bloom_Scene_s where none of the related _Bloom_Perspective_s match this filter
  """
  bloomPerspectiveSBloomHasScene_NONE: _Bloom_Perspective_Where @deprecated(reason: "Please use the relevant generic filter 'bloomPerspectiveSBloomHasScene: { none: ... }' instead.")
  """
  Return _Bloom_Scene_s where one of the related _Bloom_Perspective_s match this filter
  """
  bloomPerspectiveSBloomHasScene_SINGLE: _Bloom_Perspective_Where @deprecated(reason: "Please use the relevant generic filter 'bloomPerspectiveSBloomHasScene: {  single: ... }' instead.")
  """
  Return _Bloom_Scene_s where some of the related _Bloom_Perspective_s match this filter
  """
  bloomPerspectiveSBloomHasScene_SOME: _Bloom_Perspective_Where @deprecated(reason: "Please use the relevant generic filter 'bloomPerspectiveSBloomHasScene: {  some: ... }' instead.")
  createdAt: BigIntScalarFilters
  createdAt_EQ: BigInt @deprecated(reason: "Please use the relevant generic filter createdAt: { eq: ... }")
  createdAt_GT: BigInt @deprecated(reason: "Please use the relevant generic filter createdAt: { gt: ... }")
  createdAt_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter createdAt: { gte: ... }")
  createdAt_IN: [BigInt!] @deprecated(reason: "Please use the relevant generic filter createdAt: { in: ... }")
  createdAt_LT: BigInt @deprecated(reason: "Please use the relevant generic filter createdAt: { lt: ... }")
  createdAt_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter createdAt: { lte: ... }")
  createdBy: StringScalarFilters
  createdBy_CONTAINS: String @deprecated(reason: "Please use the relevant generic filter createdBy: { contains: ... }")
  createdBy_ENDS_WITH: String @deprecated(reason: "Please use the relevant generic filter createdBy: { endsWith: ... }")
  createdBy_EQ: String @deprecated(reason: "Please use the relevant generic filter createdBy: { eq: ... }")
  createdBy_IN: [String!] @deprecated(reason: "Please use the relevant generic filter createdBy: { in: ... }")
  createdBy_STARTS_WITH: String @deprecated(reason: "Please use the relevant generic filter createdBy: { startsWith: ... }")
  filters: StringScalarFilters
  filters_CONTAINS: String @deprecated(reason: "Please use the relevant generic filter filters: { contains: ... }")
  filters_ENDS_WITH: String @deprecated(reason: "Please use the relevant generic filter filters: { endsWith: ... }")
  filters_EQ: String @deprecated(reason: "Please use the relevant generic filter filters: { eq: ... }")
  filters_IN: [String!] @deprecated(reason: "Please use the relevant generic filter filters: { in: ... }")
  filters_STARTS_WITH: String @deprecated(reason: "Please use the relevant generic filter filters: { startsWith: ... }")
  gds: StringScalarFilters
  gds_CONTAINS: String @deprecated(reason: "Please use the relevant generic filter gds: { contains: ... }")
  gds_ENDS_WITH: String @deprecated(reason: "Please use the relevant generic filter gds: { endsWith: ... }")
  gds_EQ: String @deprecated(reason: "Please use the relevant generic filter gds: { eq: ... }")
  gds_IN: [String!] @deprecated(reason: "Please use the relevant generic filter gds: { in: ... }")
  gds_STARTS_WITH: String @deprecated(reason: "Please use the relevant generic filter gds: { startsWith: ... }")
  id: StringScalarFilters
  id_CONTAINS: String @deprecated(reason: "Please use the relevant generic filter id: { contains: ... }")
  id_ENDS_WITH: String @deprecated(reason: "Please use the relevant generic filter id: { endsWith: ... }")
  id_EQ: String @deprecated(reason: "Please use the relevant generic filter id: { eq: ... }")
  id_IN: [String!] @deprecated(reason: "Please use the relevant generic filter id: { in: ... }")
  id_STARTS_WITH: String @deprecated(reason: "Please use the relevant generic filter id: { startsWith: ... }")
  lastModified: BigIntScalarFilters
  lastModified_EQ: BigInt @deprecated(reason: "Please use the relevant generic filter lastModified: { eq: ... }")
  lastModified_GT: BigInt @deprecated(reason: "Please use the relevant generic filter lastModified: { gt: ... }")
  lastModified_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter lastModified: { gte: ... }")
  lastModified_IN: [BigInt!] @deprecated(reason: "Please use the relevant generic filter lastModified: { in: ... }")
  lastModified_LT: BigInt @deprecated(reason: "Please use the relevant generic filter lastModified: { lt: ... }")
  lastModified_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter lastModified: { lte: ... }")
  name: StringScalarFilters
  name_CONTAINS: String @deprecated(reason: "Please use the relevant generic filter name: { contains: ... }")
  name_ENDS_WITH: String @deprecated(reason: "Please use the relevant generic filter name: { endsWith: ... }")
  name_EQ: String @deprecated(reason: "Please use the relevant generic filter name: { eq: ... }")
  name_IN: [String!] @deprecated(reason: "Please use the relevant generic filter name: { in: ... }")
  name_STARTS_WITH: String @deprecated(reason: "Please use the relevant generic filter name: { startsWith: ... }")
  nodes: StringScalarFilters
  nodes_CONTAINS: String @deprecated(reason: "Please use the relevant generic filter nodes: { contains: ... }")
  nodes_ENDS_WITH: String @deprecated(reason: "Please use the relevant generic filter nodes: { endsWith: ... }")
  nodes_EQ: String @deprecated(reason: "Please use the relevant generic filter nodes: { eq: ... }")
  nodes_IN: [String!] @deprecated(reason: "Please use the relevant generic filter nodes: { in: ... }")
  nodes_STARTS_WITH: String @deprecated(reason: "Please use the relevant generic filter nodes: { startsWith: ... }")
  numOfNodes: BigIntScalarFilters
  numOfNodes_EQ: BigInt @deprecated(reason: "Please use the relevant generic filter numOfNodes: { eq: ... }")
  numOfNodes_GT: BigInt @deprecated(reason: "Please use the relevant generic filter numOfNodes: { gt: ... }")
  numOfNodes_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter numOfNodes: { gte: ... }")
  numOfNodes_IN: [BigInt!] @deprecated(reason: "Please use the relevant generic filter numOfNodes: { in: ... }")
  numOfNodes_LT: BigInt @deprecated(reason: "Please use the relevant generic filter numOfNodes: { lt: ... }")
  numOfNodes_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter numOfNodes: { lte: ... }")
  numOfRels: BigIntScalarFilters
  numOfRels_EQ: BigInt @deprecated(reason: "Please use the relevant generic filter numOfRels: { eq: ... }")
  numOfRels_GT: BigInt @deprecated(reason: "Please use the relevant generic filter numOfRels: { gt: ... }")
  numOfRels_GTE: BigInt @deprecated(reason: "Please use the relevant generic filter numOfRels: { gte: ... }")
  numOfRels_IN: [BigInt!] @deprecated(reason: "Please use the relevant generic filter numOfRels: { in: ... }")
  numOfRels_LT: BigInt @deprecated(reason: "Please use the relevant generic filter numOfRels: { lt: ... }")
  numOfRels_LTE: BigInt @deprecated(reason: "Please use the relevant generic filter numOfRels: { lte: ... }")
  ranges: StringScalarFilters
  ranges_CONTAINS: String @deprecated(reason: "Please use the relevant generic filter ranges: { contains: ... }")
  ranges_ENDS_WITH: String @deprecated(reason: "Please use the relevant generic filter ranges: { endsWith: ... }")
  ranges_EQ: String @deprecated(reason: "Please use the relevant generic filter ranges: { eq: ... }")
  ranges_IN: [String!] @deprecated(reason: "Please use the relevant generic filter ranges: { in: ... }")
  ranges_STARTS_WITH: String @deprecated(reason: "Please use the relevant generic filter ranges: { startsWith: ... }")
  relationships: StringScalarFilters
  relationships_CONTAINS: String @deprecated(reason: "Please use the relevant generic filter relationships: { contains: ... }")
  relationships_ENDS_WITH: String @deprecated(reason: "Please use the relevant generic filter relationships: { endsWith: ... }")
  relationships_EQ: String @deprecated(reason: "Please use the relevant generic filter relationships: { eq: ... }")
  relationships_IN: [String!] @deprecated(reason: "Please use the relevant generic filter relationships: { in: ... }")
  relationships_STARTS_WITH: String @deprecated(reason: "Please use the relevant generic filter relationships: { startsWith: ... }")
  roles: StringListFilters
  roles_EQ: [String!] @deprecated(reason: "Please use the relevant generic filter roles: { eq: ... }")
  roles_INCLUDES: String @deprecated(reason: "Please use the relevant generic filter roles: { includes: ... }")
  style: StringScalarFilters
  style_CONTAINS: String @deprecated(reason: "Please use the relevant generic filter style: { contains: ... }")
  style_ENDS_WITH: String @deprecated(reason: "Please use the relevant generic filter style: { endsWith: ... }")
  style_EQ: String @deprecated(reason: "Please use the relevant generic filter style: { eq: ... }")
  style_IN: [String!] @deprecated(reason: "Please use the relevant generic filter style: { in: ... }")
  style_STARTS_WITH: String @deprecated(reason: "Please use the relevant generic filter style: { startsWith: ... }")
  version: StringScalarFilters
  version_CONTAINS: String @deprecated(reason: "Please use the relevant generic filter version: { contains: ... }")
  version_ENDS_WITH: String @deprecated(reason: "Please use the relevant generic filter version: { endsWith: ... }")
  version_EQ: String @deprecated(reason: "Please use the relevant generic filter version: { eq: ... }")
  version_IN: [String!] @deprecated(reason: "Please use the relevant generic filter version: { in: ... }")
  version_STARTS_WITH: String @deprecated(reason: "Please use the relevant generic filter version: { startsWith: ... }")
  visualisation: StringScalarFilters
  visualisation_CONTAINS: String @deprecated(reason: "Please use the relevant generic filter visualisation: { contains: ... }")
  visualisation_ENDS_WITH: String @deprecated(reason: "Please use the relevant generic filter visualisation: { endsWith: ... }")
  visualisation_EQ: String @deprecated(reason: "Please use the relevant generic filter visualisation: { eq: ... }")
  visualisation_IN: [String!] @deprecated(reason: "Please use the relevant generic filter visualisation: { in: ... }")
  visualisation_STARTS_WITH: String @deprecated(reason: "Please use the relevant generic filter visualisation: { startsWith: ... }")
}

type _Bloom_Scene__Bloom_Perspective_BloomPerspectiveSBloomHasSceneAggregateSelection {
  count: CountConnection!
  node: _Bloom_Scene__Bloom_Perspective_BloomPerspectiveSBloomHasSceneNodeAggregateSelection
}

type _Bloom_Scene__Bloom_Perspective_BloomPerspectiveSBloomHasSceneNodeAggregateSelection {
  data: StringAggregateSelection!
  id: StringAggregateSelection!
  name: StringAggregateSelection!
  version: StringAggregateSelection!
}

enum _RelationDirections {
  IN
  OUT
}

type _bloomPerspectivesConnection {
  aggregate: _Bloom_Perspective_Aggregate!
  edges: [_Bloom_Perspective_Edge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type _bloomScenesConnection {
  aggregate: _Bloom_Scene_Aggregate!
  edges: [_Bloom_Scene_Edge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}"
`;

exports[`Neo4j should give correct response for example queries: example-query.graphql-query-result 1`] = `
{
  "data": {
    "movies": [
      {
        "released": "1995-11-22",
        "title": "Toy Story",
      },
      {
        "released": "1995-12-15",
        "title": "Jumanji",
      },
    ],
  },
}
`;
