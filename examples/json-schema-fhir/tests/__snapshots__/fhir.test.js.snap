// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FHIR should generate correct schema 1`] = `
"schema {
  query: Query
}

directive @oneOf on INPUT_OBJECT | FIELD_DEFINITION

directive @resolveTo(requiredSelectionSet: String, sourceName: String!, sourceTypeName: String!, sourceFieldName: String!, sourceSelectionSet: String, sourceArgs: ResolveToSourceArgs, keyField: String, keysArg: String, pubsubTopic: String, filterBy: String, additionalArgs: ResolveToSourceArgs, result: String, resultType: String) on FIELD_DEFINITION

type Query {
  resourceById(resourceType: String, id: String): ResourceList
  resourceByName(resourceType: String, name: String): Bundle
  resourceByOtherResourceId(resourceType: String, otherResourceType: String, otherResourceId: String): Bundle
}

union ResourceList = Account | ActivityDefinition | AdministrableProductDefinition | AdverseEvent | AllergyIntolerance | Appointment | AppointmentResponse | AuditEvent | Basic | Binary | BiologicallyDerivedProduct | BodyStructure | Bundle | CapabilityStatement | CarePlan | CareTeam | CatalogEntry | ChargeItem | ChargeItemDefinition | Citation | Claim | ClaimResponse | ClinicalImpression | ClinicalUseDefinition | CodeSystem | Communication | CommunicationRequest | CompartmentDefinition | Composition | ConceptMap | Condition | Consent | Contract | Coverage | CoverageEligibilityRequest | CoverageEligibilityResponse | DetectedIssue | Device | DeviceDefinition | DeviceMetric | DeviceRequest | DeviceUseStatement | DiagnosticReport | DocumentManifest | DocumentReference | Encounter | Endpoint | EnrollmentRequest | EnrollmentResponse | EpisodeOfCare | EventDefinition | Evidence | EvidenceReport | EvidenceVariable | ExampleScenario | ExplanationOfBenefit | FamilyMemberHistory | Flag | Goal | GraphDefinition | Group | GuidanceResponse | HealthcareService | ImagingStudy | Immunization | ImmunizationEvaluation | ImmunizationRecommendation | ImplementationGuide | Ingredient | InsurancePlan | Invoice | Library | Linkage | List | Location | ManufacturedItemDefinition | Measure | MeasureReport | Media | Medication | MedicationAdministration | MedicationDispense | MedicationKnowledge | MedicationRequest | MedicationStatement | MedicinalProductDefinition | MessageDefinition | MessageHeader | MolecularSequence | NamingSystem | NutritionOrder | NutritionProduct | Observation | ObservationDefinition | OperationDefinition | OperationOutcome | Organization | OrganizationAffiliation | PackagedProductDefinition | Parameters | Patient | PaymentNotice | PaymentReconciliation | Person | PlanDefinition | Practitioner | PractitionerRole | Procedure | Provenance | Questionnaire | QuestionnaireResponse | RegulatedAuthorization | RelatedPerson | RequestGroup | ResearchDefinition | ResearchElementDefinition | ResearchStudy | ResearchSubject | RiskAssessment | Schedule | SearchParameter | ServiceRequest | Slot | Specimen | SpecimenDefinition | StructureDefinition | StructureMap | Subscription_ | SubscriptionStatus | SubscriptionTopic | Substance | SubstanceDefinition | SupplyDelivery | SupplyRequest | Task | TerminologyCapabilities | TestReport | TestScript | ValueSet | VerificationResult | VisionPrescription

"A financial tool for tracking value accrued for a particular purpose.  In the healthcare field, used to track charges for a patient, cost centers, etc."
type Account {
  resourceType: Account_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Unique identifier used to reference the account.  Might or might not be intended for human use (e.g. credit card number)."
  identifier: [Identifier]
  status: code
  _status: Element
  type: CodeableConcept
  name: string
  _name: Element
  "Identifies the entity which incurs the expenses. While the immediate recipients of services or goods might be entities related to the subject, the expenses were ultimately incurred by the subject of the Account."
  subject: [Reference]
  servicePeriod: Period
  "The party(s) that are responsible for covering the payment of this account, and what order should they be applied to the account."
  coverage: [Account_Coverage]
  owner: Reference
  description: string
  _description: Element
  "The parties responsible for balancing the account if other payment options fall short."
  guarantor: [Account_Guarantor]
  partOf: Reference
}

enum Account_const {
  Account
}

"A sequence of Unicode characters"
scalar string

"The metadata about a resource. This is content in the resource that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource."
type Meta {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  versionId: id
  _versionId: Element
  lastUpdated: instant
  _lastUpdated: Element
  source: uri
  _source: Element
  "A list of profiles (references to [[[StructureDefinition]]] resources) that this resource claims to conform to. The URL is a reference to [[[StructureDefinition.url]]]."
  profile: [canonical]
  "Security labels applied to this resource. These tags connect specific resources to the overall security policy and infrastructure."
  security: [Coding]
  "Tags applied to this resource. Tags are intended to be used to identify and relate resources to process and workflow, and applications are not required to consider the tags when interpreting the meaning of a resource."
  tag: [Coding]
}

"Optional Extension Element - found in all resources."
type Extension {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  url: uri
  _url: Element
  valueBase64Binary: query_resourceById_oneOf_0_meta_extension_items_valueBase64Binary
  _valueBase64Binary: Element
  "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
  valueBoolean: Boolean
  _valueBoolean: Element
  valueCanonical: query_resourceById_oneOf_0_meta_extension_items_valueCanonical
  _valueCanonical: Element
  valueCode: query_resourceById_oneOf_0_meta_extension_items_valueCode
  _valueCode: Element
  valueDate: query_resourceById_oneOf_0_meta_extension_items_valueDate
  _valueDate: Element
  valueDateTime: query_resourceById_oneOf_0_meta_extension_items_valueDateTime
  _valueDateTime: Element
  valueDecimal: query_resourceById_oneOf_0_meta_extension_items_valueDecimal
  _valueDecimal: Element
  valueId: query_resourceById_oneOf_0_meta_extension_items_valueId
  _valueId: Element
  valueInstant: query_resourceById_oneOf_0_meta_extension_items_valueInstant
  _valueInstant: Element
  valueInteger: query_resourceById_oneOf_0_meta_extension_items_valueInteger
  _valueInteger: Element
  valueMarkdown: query_resourceById_oneOf_0_meta_extension_items_valueMarkdown
  _valueMarkdown: Element
  valueOid: query_resourceById_oneOf_0_meta_extension_items_valueOid
  _valueOid: Element
  valuePositiveInt: query_resourceById_oneOf_0_meta_extension_items_valuePositiveInt
  _valuePositiveInt: Element
  valueString: query_resourceById_oneOf_0_meta_extension_items_valueString
  _valueString: Element
  valueTime: query_resourceById_oneOf_0_meta_extension_items_valueTime
  _valueTime: Element
  valueUnsignedInt: query_resourceById_oneOf_0_meta_extension_items_valueUnsignedInt
  _valueUnsignedInt: Element
  valueUri: query_resourceById_oneOf_0_meta_extension_items_valueUri
  _valueUri: Element
  valueUrl: query_resourceById_oneOf_0_meta_extension_items_valueUrl
  _valueUrl: Element
  valueUuid: query_resourceById_oneOf_0_meta_extension_items_valueUuid
  _valueUuid: Element
  valueAddress: Address
  valueAge: Age
  valueAnnotation: Annotation
  valueAttachment: Attachment
  valueCodeableConcept: CodeableConcept
  valueCodeableReference: CodeableReference
  valueCoding: Coding
  valueContactPoint: ContactPoint
  valueCount: Count
  valueDistance: Distance
  valueDuration: Duration
  valueHumanName: HumanName
  valueIdentifier: Identifier
  valueMoney: Money
  valuePeriod: Period
  valueQuantity: Quantity
  valueRange: Range
  valueRatio: Ratio
  valueRatioRange: RatioRange
  valueReference: Reference
  valueSampledData: SampledData
  valueSignature: Signature
  valueTiming: Timing
  valueContactDetail: ContactDetail
  valueContributor: Contributor
  valueDataRequirement: DataRequirement
  valueExpression: Expression
  valueParameterDefinition: ParameterDefinition
  valueRelatedArtifact: RelatedArtifact
  valueTriggerDefinition: TriggerDefinition
  valueUsageContext: UsageContext
  valueDosage: Dosage
}

"String of characters used to identify a name or a resource"
scalar uri

"Base definition for all elements in a resource."
type Element {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
}

"Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
scalar query_resourceById_oneOf_0_meta_extension_items_valueBase64Binary

"Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
scalar query_resourceById_oneOf_0_meta_extension_items_valueCanonical

"Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
scalar query_resourceById_oneOf_0_meta_extension_items_valueCode

"Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
scalar query_resourceById_oneOf_0_meta_extension_items_valueDate

"Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
scalar query_resourceById_oneOf_0_meta_extension_items_valueDateTime

"Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
scalar query_resourceById_oneOf_0_meta_extension_items_valueDecimal

"Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
scalar query_resourceById_oneOf_0_meta_extension_items_valueId

"Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
scalar query_resourceById_oneOf_0_meta_extension_items_valueInstant

"Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
scalar query_resourceById_oneOf_0_meta_extension_items_valueInteger

"Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
scalar query_resourceById_oneOf_0_meta_extension_items_valueMarkdown

"Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
scalar query_resourceById_oneOf_0_meta_extension_items_valueOid

"Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
scalar query_resourceById_oneOf_0_meta_extension_items_valuePositiveInt

"Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
scalar query_resourceById_oneOf_0_meta_extension_items_valueString

"Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
scalar query_resourceById_oneOf_0_meta_extension_items_valueTime

"Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
scalar query_resourceById_oneOf_0_meta_extension_items_valueUnsignedInt

"Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
scalar query_resourceById_oneOf_0_meta_extension_items_valueUri

"Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
scalar query_resourceById_oneOf_0_meta_extension_items_valueUrl

"Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
scalar query_resourceById_oneOf_0_meta_extension_items_valueUuid

"An address expressed using postal conventions (as opposed to GPS or other location definition formats).  This data type may be used to convey addresses for use in delivering mail as well as for visiting locations which might not be valid for mail delivery.  There are a variety of postal address formats defined around the world."
type Address {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  use: query_resourceById_oneOf_0_meta_extension_items_valueAddress_use
  _use: Element
  type: query_resourceById_oneOf_0_meta_extension_items_valueAddress_type
  _type: Element
  text: string
  _text: Element
  "This component contains the house number, apartment number, street name, street direction,  P.O. Box number, delivery hints, and similar address information."
  line: [string]
  "Extensions for line"
  _line: [Element]
  city: string
  _city: Element
  district: string
  _district: Element
  state: string
  _state: Element
  postalCode: string
  _postalCode: Element
  country: string
  _country: Element
  period: Period
}

"The purpose of this address."
enum query_resourceById_oneOf_0_meta_extension_items_valueAddress_use {
  home
  work
  temp
  old
  billing
}

"Distinguishes between physical addresses (those you can visit) and mailing addresses (e.g. PO Boxes and care-of addresses). Most addresses are both."
enum query_resourceById_oneOf_0_meta_extension_items_valueAddress_type {
  postal
  physical
  both
}

"A time period defined by a start and end date and optionally time."
type Period {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  start: dateTime
  _start: Element
  end: dateTime
  _end: Element
}

"A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
scalar dateTime

"A duration of time during which an organism (or a process) has existed."
type Age {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  value: decimal
  _value: Element
  comparator: query_resourceById_oneOf_0_meta_extension_items_valueAge_comparator
  _comparator: Element
  unit: string
  _unit: Element
  system: uri
  _system: Element
  code: code
  _code: Element
}

"A rational number with implicit precision"
scalar decimal

"How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \\"<\\" , then the real value is < stated value."
enum query_resourceById_oneOf_0_meta_extension_items_valueAge_comparator {
  _LESS_THAN_
  _LESS_THAN__EQUALS_
  _GREATER_THAN__EQUALS_
  _GREATER_THAN_
}

"A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
scalar code

"A  text note which also  contains information about who made the statement and when."
type Annotation {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  authorReference: Reference
  authorString: query_resourceById_oneOf_0_meta_extension_items_valueAnnotation_authorString
  _authorString: Element
  time: dateTime
  _time: Element
  text: markdown
  _text: Element
}

"A reference from one resource to another."
type Reference {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  reference: string
  _reference: Element
  type: uri
  _type: Element
  identifier: Identifier
  display: string
  _display: Element
  resource: ResourceList @resolveTo(sourceName: "FHIR", sourceTypeName: "Query", sourceFieldName: "resourceById", sourceArgs: {resourceType: "{root.reference}"})
}

"An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers."
type Identifier {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  use: query_resourceById_oneOf_0_meta_extension_items_valueAnnotation_authorReference_identifier_use
  _use: Element
  type: CodeableConcept
  system: uri
  _system: Element
  value: string
  _value: Element
  period: Period
  "A reference from one resource to another."
  assigner: Reference
}

"The purpose of this identifier."
enum query_resourceById_oneOf_0_meta_extension_items_valueAnnotation_authorReference_identifier_use {
  usual
  official
  temp
  secondary
  old
}

"A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text."
type CodeableConcept {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "A reference to a code defined by a terminology system."
  coding: [Coding]
  text: string
  _text: Element
}

"A reference to a code defined by a terminology system."
type Coding {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  system: uri
  _system: Element
  version: string
  _version: Element
  code: code
  _code: Element
  display: string
  _display: Element
  userSelected: boolean
  _userSelected: Element
}

"Value of \\"true\\" or \\"false\\""
scalar boolean

"The individual responsible for making the annotation."
scalar query_resourceById_oneOf_0_meta_extension_items_valueAnnotation_authorString

"A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
scalar markdown

"For referring to data content defined in other formats."
type Attachment {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  contentType: code
  _contentType: Element
  language: code
  _language: Element
  "A stream of bytes"
  data: String
  _data: Element
  url: url
  _url: Element
  size: unsignedInt
  _size: Element
  "A stream of bytes"
  hash: String
  _hash: Element
  title: string
  _title: Element
  creation: dateTime
  _creation: Element
}

"A URI that is a literal reference"
scalar url

"An integer with a value that is not negative (e.g. >= 0)"
scalar unsignedInt

"A reference to a resource (by instance), or instead, a reference to a concept defined in a terminology or ontology (by class)."
type CodeableReference {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  concept: CodeableConcept
  reference: Reference
}

"Details for all kinds of technology mediated contact points for a person or organization, including telephone, email, etc."
type ContactPoint {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  system: query_resourceById_oneOf_0_meta_extension_items_valueContactPoint_system
  _system: Element
  value: string
  _value: Element
  use: query_resourceById_oneOf_0_meta_extension_items_valueContactPoint_use
  _use: Element
  rank: positiveInt
  _rank: Element
  period: Period
}

"Telecommunications form for contact point - what communications system is required to make use of the contact."
enum query_resourceById_oneOf_0_meta_extension_items_valueContactPoint_system {
  phone
  fax
  email
  pager
  url
  sms
  other
}

"Identifies the purpose for the contact point."
enum query_resourceById_oneOf_0_meta_extension_items_valueContactPoint_use {
  home
  work
  temp
  old
  mobile
}

"An integer with a value that is positive (e.g. >0)"
scalar positiveInt

"A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies."
type Count {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  value: decimal
  _value: Element
  comparator: query_resourceById_oneOf_0_meta_extension_items_valueCount_comparator
  _comparator: Element
  unit: string
  _unit: Element
  system: uri
  _system: Element
  code: code
  _code: Element
}

"How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \\"<\\" , then the real value is < stated value."
enum query_resourceById_oneOf_0_meta_extension_items_valueCount_comparator {
  _LESS_THAN_
  _LESS_THAN__EQUALS_
  _GREATER_THAN__EQUALS_
  _GREATER_THAN_
}

"A length - a value with a unit that is a physical distance."
type Distance {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  value: decimal
  _value: Element
  comparator: query_resourceById_oneOf_0_meta_extension_items_valueDistance_comparator
  _comparator: Element
  unit: string
  _unit: Element
  system: uri
  _system: Element
  code: code
  _code: Element
}

"How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \\"<\\" , then the real value is < stated value."
enum query_resourceById_oneOf_0_meta_extension_items_valueDistance_comparator {
  _LESS_THAN_
  _LESS_THAN__EQUALS_
  _GREATER_THAN__EQUALS_
  _GREATER_THAN_
}

"A length of time."
type Duration {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  value: decimal
  _value: Element
  comparator: query_resourceById_oneOf_0_meta_extension_items_valueDuration_comparator
  _comparator: Element
  unit: string
  _unit: Element
  system: uri
  _system: Element
  code: code
  _code: Element
}

"How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \\"<\\" , then the real value is < stated value."
enum query_resourceById_oneOf_0_meta_extension_items_valueDuration_comparator {
  _LESS_THAN_
  _LESS_THAN__EQUALS_
  _GREATER_THAN__EQUALS_
  _GREATER_THAN_
}

"A human's name with the ability to identify parts and usage."
type HumanName {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  use: query_resourceById_oneOf_0_meta_extension_items_valueHumanName_use
  _use: Element
  text: string
  _text: Element
  family: string
  _family: Element
  "Given name."
  given: [string]
  "Extensions for given"
  _given: [Element]
  "Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the start of the name."
  prefix: [string]
  "Extensions for prefix"
  _prefix: [Element]
  "Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the end of the name."
  suffix: [string]
  "Extensions for suffix"
  _suffix: [Element]
  period: Period
}

"Identifies the purpose for this name."
enum query_resourceById_oneOf_0_meta_extension_items_valueHumanName_use {
  usual
  official
  temp
  nickname
  anonymous
  old
  maiden
}

"An amount of economic utility in some recognized currency."
type Money {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  value: decimal
  _value: Element
  currency: code
  _currency: Element
}

"A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies."
type Quantity {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  value: decimal
  _value: Element
  comparator: query_resourceById_oneOf_0_meta_extension_items_valueQuantity_comparator
  _comparator: Element
  unit: string
  _unit: Element
  system: uri
  _system: Element
  code: code
  _code: Element
}

"How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \\"<\\" , then the real value is < stated value."
enum query_resourceById_oneOf_0_meta_extension_items_valueQuantity_comparator {
  _LESS_THAN_
  _LESS_THAN__EQUALS_
  _GREATER_THAN__EQUALS_
  _GREATER_THAN_
}

"A set of ordered Quantities defined by a low and high limit."
type Range {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  low: Quantity
  high: Quantity
}

"A relationship of two Quantity values - expressed as a numerator and a denominator."
type Ratio {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  numerator: Quantity
  denominator: Quantity
}

"A range of ratios expressed as a low and high numerator and a denominator."
type RatioRange {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  lowNumerator: Quantity
  highNumerator: Quantity
  denominator: Quantity
}

"A series of measurements taken by a device, with upper and lower limits. There may be more than one dimension in the data."
type SampledData {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  origin: Quantity!
  period: decimal
  _period: Element
  factor: decimal
  _factor: Element
  lowerLimit: decimal
  _lowerLimit: Element
  upperLimit: decimal
  _upperLimit: Element
  dimensions: positiveInt
  _dimensions: Element
  data: string
  _data: Element
}

"A signature along with supporting context. The signature may be a digital signature that is cryptographic in nature, or some other signature acceptable to the domain. This other signature may be as simple as a graphical image representing a hand-written signature, or a signature ceremony Different signature approaches have different utilities."
type Signature {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "An indication of the reason that the entity signed this document. This may be explicitly included as part of the signature information and can be used when determining accountability for various actions concerning the document."
  type: [Coding]!
  when: instant
  _when: Element
  who: Reference!
  onBehalfOf: Reference
  targetFormat: code
  _targetFormat: Element
  sigFormat: code
  _sigFormat: Element
  "A stream of bytes"
  data: String
  _data: Element
}

"An instant in time - known at least to the second"
scalar instant

"Specifies an event that may occur multiple times. Timing schedules are used to record when things are planned, expected or requested to occur. The most common usage is in dosage instructions for medications. They are also used when planning care of various kinds, and may be used for reporting the schedule to which past regular activities were carried out."
type Timing {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Identifies specific times when the event occurs."
  event: [dateTime]
  "Extensions for event"
  _event: [Element]
  repeat: Timing_Repeat
  code: CodeableConcept
}

"Specifies an event that may occur multiple times. Timing schedules are used to record when things are planned, expected or requested to occur. The most common usage is in dosage instructions for medications. They are also used when planning care of various kinds, and may be used for reporting the schedule to which past regular activities were carried out."
type Timing_Repeat {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  boundsDuration: Duration
  boundsRange: Range
  boundsPeriod: Period
  count: positiveInt
  _count: Element
  countMax: positiveInt
  _countMax: Element
  duration: decimal
  _duration: Element
  durationMax: decimal
  _durationMax: Element
  durationUnit: query_resourceById_oneOf_0_meta_extension_items_valueTiming_repeat_durationUnit
  _durationUnit: Element
  frequency: positiveInt
  _frequency: Element
  frequencyMax: positiveInt
  _frequencyMax: Element
  period: decimal
  _period: Element
  periodMax: decimal
  _periodMax: Element
  periodUnit: query_resourceById_oneOf_0_meta_extension_items_valueTiming_repeat_periodUnit
  _periodUnit: Element
  "If one or more days of week is provided, then the action happens only on the specified day(s)."
  dayOfWeek: [code]
  "Extensions for dayOfWeek"
  _dayOfWeek: [Element]
  "Specified time of day for action to take place."
  timeOfDay: [time]
  "Extensions for timeOfDay"
  _timeOfDay: [Element]
  "An approximate time period during the day, potentially linked to an event of daily living that indicates when the action should occur."
  when: [query_resourceById_oneOf_0_meta_extension_items_valueTiming_repeat_when_items]
  "Extensions for when"
  _when: [Element]
  offset: unsignedInt
  _offset: Element
}

"The units of time for the duration, in UCUM units."
enum query_resourceById_oneOf_0_meta_extension_items_valueTiming_repeat_durationUnit {
  s
  min
  h
  d
  wk
  mo
  a
}

"The units of time for the period in UCUM units."
enum query_resourceById_oneOf_0_meta_extension_items_valueTiming_repeat_periodUnit {
  s
  min
  h
  d
  wk
  mo
  a
}

"A time during the day, with no date specified"
scalar time

enum query_resourceById_oneOf_0_meta_extension_items_valueTiming_repeat_when_items {
  MORN
  MORN_early
  MORN_late
  NOON
  AFT
  AFT_early
  AFT_late
  EVE
  EVE_early
  EVE_late
  NIGHT
  PHS
  HS
  WAKE
  C
  CM
  CD
  CV
  AC
  ACM
  ACD
  ACV
  PC
  PCM
  PCD
  PCV
}

"Specifies contact information for a person or organization."
type ContactDetail {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  name: string
  _name: Element
  "The contact details for the individual (if a name was provided) or the organization."
  telecom: [ContactPoint]
}

"A contributor to the content of a knowledge asset, including authors, editors, reviewers, and endorsers."
type Contributor {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  type: query_resourceById_oneOf_0_meta_extension_items_valueContributor_type
  _type: Element
  name: string
  _name: Element
  "Contact details to assist a user in finding and communicating with the contributor."
  contact: [ContactDetail]
}

"The type of contributor."
enum query_resourceById_oneOf_0_meta_extension_items_valueContributor_type {
  author
  editor
  reviewer
  endorser
}

"Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data."
type DataRequirement {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  type: code
  _type: Element
  "The profile of the required data, specified as the uri of the profile definition."
  profile: [canonical]
  subjectCodeableConcept: CodeableConcept
  subjectReference: Reference
  "Indicates that specific elements of the type are referenced by the knowledge module and must be supported by the consumer in order to obtain an effective evaluation. This does not mean that a value is required for this element, only that the consuming system must understand the element and be able to provide values for it if they are available. \\n\\nThe value of mustSupport SHALL be a FHIRPath resolveable on the type of the DataRequirement. The path SHALL consist only of identifiers, constant indexers, and .resolve() (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details)."
  mustSupport: [string]
  "Extensions for mustSupport"
  _mustSupport: [Element]
  "Code filters specify additional constraints on the data, specifying the value set of interest for a particular element of the data. Each code filter defines an additional constraint on the data, i.e. code filters are AND'ed, not OR'ed."
  codeFilter: [DataRequirement_CodeFilter]
  "Date filters specify additional constraints on the data in terms of the applicable date range for specific elements. Each date filter specifies an additional constraint on the data, i.e. date filters are AND'ed, not OR'ed."
  dateFilter: [DataRequirement_DateFilter]
  limit: positiveInt
  _limit: Element
  "Specifies the order of the results to be returned."
  sort: [DataRequirement_Sort]
}

"A URI that is a reference to a canonical URL on a FHIR resource"
scalar canonical

"Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data."
type DataRequirement_CodeFilter {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  path: string
  _path: Element
  searchParam: string
  _searchParam: Element
  valueSet: canonical
  "The codes for the code filter. If values are given, the filter will return only those data items for which the code-valued attribute specified by the path has a value that is one of the specified codes. If codes are specified in addition to a value set, the filter returns items matching a code in the value set or one of the specified codes."
  code: [Coding]
}

"Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data."
type DataRequirement_DateFilter {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  path: string
  _path: Element
  searchParam: string
  _searchParam: Element
  valueDateTime: query_resourceById_oneOf_0_meta_extension_items_valueDataRequirement_dateFilter_items_valueDateTime
  _valueDateTime: Element
  valuePeriod: Period
  valueDuration: Duration
}

"The value of the filter. If period is specified, the filter will return only those data items that fall within the bounds determined by the Period, inclusive of the period boundaries. If dateTime is specified, the filter will return only those data items that are equal to the specified dateTime. If a Duration is specified, the filter will return only those data items that fall within Duration before now."
scalar query_resourceById_oneOf_0_meta_extension_items_valueDataRequirement_dateFilter_items_valueDateTime

"Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data."
type DataRequirement_Sort {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  path: string
  _path: Element
  direction: query_resourceById_oneOf_0_meta_extension_items_valueDataRequirement_sort_items_direction
  _direction: Element
}

"The direction of the sort, ascending or descending."
enum query_resourceById_oneOf_0_meta_extension_items_valueDataRequirement_sort_items_direction {
  ascending
  descending
}

"A expression that is evaluated in a specified context and returns a value. The context of use of the expression must specify the context in which the expression is evaluated, and how the result of the expression is used."
type Expression {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  description: string
  _description: Element
  name: id
  _name: Element
  language: query_resourceById_oneOf_0_meta_extension_items_valueExpression_language
  _language: Element
  expression: string
  _expression: Element
  reference: uri
  _reference: Element
}

"Any combination of letters, numerals, \\"-\\" and \\".\\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
scalar id

"The media type of the language for the expression."
enum query_resourceById_oneOf_0_meta_extension_items_valueExpression_language {
  text_cql
  text_fhirpath
  application_x_fhir_query
  text_cql_identifier
  text_cql_expression
}

"The parameters to the module. This collection specifies both the input and output parameters. Input parameters are provided by the caller as part of the $evaluate operation. Output parameters are included in the GuidanceResponse."
type ParameterDefinition {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  name: code
  _name: Element
  use: code
  _use: Element
  min: integer
  _min: Element
  max: string
  _max: Element
  documentation: string
  _documentation: Element
  type: code
  _type: Element
  profile: canonical
}

"A whole number"
scalar integer

"Related artifacts such as additional documentation, justification, or bibliographic references."
type RelatedArtifact {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  type: query_resourceById_oneOf_0_meta_extension_items_valueRelatedArtifact_type
  _type: Element
  label: string
  _label: Element
  display: string
  _display: Element
  citation: markdown
  _citation: Element
  url: url
  _url: Element
  document: Attachment
  resource: canonical
}

"The type of relationship to the related artifact."
enum query_resourceById_oneOf_0_meta_extension_items_valueRelatedArtifact_type {
  documentation
  justification
  citation
  predecessor
  successor
  derived_from
  depends_on
  composed_of
}

"A description of a triggering event. Triggering events can be named events, data events, or periodic, as determined by the type element."
type TriggerDefinition {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  type: query_resourceById_oneOf_0_meta_extension_items_valueTriggerDefinition_type
  _type: Element
  name: string
  _name: Element
  timingTiming: Timing
  timingReference: Reference
  timingDate: query_resourceById_oneOf_0_meta_extension_items_valueTriggerDefinition_timingDate
  _timingDate: Element
  timingDateTime: query_resourceById_oneOf_0_meta_extension_items_valueTriggerDefinition_timingDateTime
  _timingDateTime: Element
  "The triggering data of the event (if this is a data trigger). If more than one data is requirement is specified, then all the data requirements must be true."
  data: [DataRequirement]
  condition: Expression
}

"The type of triggering event."
enum query_resourceById_oneOf_0_meta_extension_items_valueTriggerDefinition_type {
  named_event
  periodic
  data_changed
  data_added
  data_modified
  data_removed
  data_accessed
  data_access_ended
}

"The timing of the event (if this is a periodic trigger)."
scalar query_resourceById_oneOf_0_meta_extension_items_valueTriggerDefinition_timingDate

"The timing of the event (if this is a periodic trigger)."
scalar query_resourceById_oneOf_0_meta_extension_items_valueTriggerDefinition_timingDateTime

"Specifies clinical/business/etc. metadata that can be used to retrieve, index and/or categorize an artifact. This metadata can either be specific to the applicable population (e.g., age category, DRG) or the specific context of care (e.g., venue, care setting, provider of care)."
type UsageContext {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  code: Coding!
  valueCodeableConcept: CodeableConcept
  valueQuantity: Quantity
  valueRange: Range
  valueReference: Reference
}

"Indicates how the medication is/was taken or should be taken by the patient."
type Dosage {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  sequence: integer
  _sequence: Element
  text: string
  _text: Element
  "Supplemental instructions to the patient on how to take the medication  (e.g. \\"with meals\\" or\\"take half to one hour before food\\") or warnings for the patient about the medication (e.g. \\"may cause drowsiness\\" or \\"avoid exposure of skin to direct sunlight or sunlamps\\")."
  additionalInstruction: [CodeableConcept]
  patientInstruction: string
  _patientInstruction: Element
  timing: Timing
  "Indicates whether the Medication is only taken when needed within a specific dosing schedule (Boolean option), or it indicates the precondition for taking the Medication (CodeableConcept)."
  asNeededBoolean: Boolean
  _asNeededBoolean: Element
  asNeededCodeableConcept: CodeableConcept
  site: CodeableConcept
  route: CodeableConcept
  method: CodeableConcept
  "The amount of medication administered."
  doseAndRate: [Dosage_DoseAndRate]
  maxDosePerPeriod: Ratio
  maxDosePerAdministration: Quantity
  maxDosePerLifetime: Quantity
}

"Indicates how the medication is/was taken or should be taken by the patient."
type Dosage_DoseAndRate {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: CodeableConcept
  doseRange: Range
  doseQuantity: Quantity
  rateRatio: Ratio
  rateRange: Range
  rateQuantity: Quantity
}

"A human-readable summary of the resource conveying the essential clinical and business information for the resource."
type Narrative {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  status: query_resourceById_oneOf_0_text_status
  _status: Element
  "xhtml - escaped html (see specfication)"
  div: JSON!
}

"The status of the narrative - whether it's entirely generated (from just the defined data or the extensions too), or whether a human authored it and it may contain additional data."
enum query_resourceById_oneOf_0_text_status {
  generated
  extensions
  additional
  empty
}

"The \`JSON\` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf)."
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

"A financial tool for tracking value accrued for a particular purpose.  In the healthcare field, used to track charges for a patient, cost centers, etc."
type Account_Coverage {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  coverage: Reference!
  priority: positiveInt
  _priority: Element
}

"A financial tool for tracking value accrued for a particular purpose.  In the healthcare field, used to track charges for a patient, cost centers, etc."
type Account_Guarantor {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  party: Reference!
  onHold: boolean
  _onHold: Element
  period: Period
}

"This resource allows for the definition of some activity to be performed, independent of a particular patient, practitioner, or other performance context."
type ActivityDefinition {
  resourceType: ActivityDefinition_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  url: uri
  _url: Element
  "A formal identifier that is used to identify this activity definition when it is represented in other formats, or referenced in a specification, model, design or an instance."
  identifier: [Identifier]
  version: string
  _version: Element
  name: string
  _name: Element
  title: string
  _title: Element
  subtitle: string
  _subtitle: Element
  status: code
  _status: Element
  experimental: boolean
  _experimental: Element
  subjectCodeableConcept: CodeableConcept
  subjectReference: Reference
  subjectCanonical: query_resourceById_oneOf_1_subjectCanonical
  _subjectCanonical: Element
  date: dateTime
  _date: Element
  publisher: string
  _publisher: Element
  "Contact details to assist a user in finding and communicating with the publisher."
  contact: [ContactDetail]
  description: markdown
  _description: Element
  "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate activity definition instances."
  useContext: [UsageContext]
  "A legal or geographic region in which the activity definition is intended to be used."
  jurisdiction: [CodeableConcept]
  purpose: markdown
  _purpose: Element
  usage: string
  _usage: Element
  copyright: markdown
  _copyright: Element
  approvalDate: date
  _approvalDate: Element
  lastReviewDate: date
  _lastReviewDate: Element
  effectivePeriod: Period
  "Descriptive topics related to the content of the activity. Topics provide a high-level categorization of the activity that can be useful for filtering and searching."
  topic: [CodeableConcept]
  "An individiual or organization primarily involved in the creation and maintenance of the content."
  author: [ContactDetail]
  "An individual or organization primarily responsible for internal coherence of the content."
  editor: [ContactDetail]
  "An individual or organization primarily responsible for review of some aspect of the content."
  reviewer: [ContactDetail]
  "An individual or organization responsible for officially endorsing the content for use in some setting."
  endorser: [ContactDetail]
  "Related artifacts such as additional documentation, justification, or bibliographic references."
  relatedArtifact: [RelatedArtifact]
  "A reference to a Library resource containing any formal logic used by the activity definition."
  library: [canonical]
  kind: code
  _kind: Element
  profile: canonical
  code: CodeableConcept
  intent: code
  _intent: Element
  priority: code
  _priority: Element
  doNotPerform: boolean
  _doNotPerform: Element
  timingTiming: Timing
  timingDateTime: query_resourceById_oneOf_1_timingDateTime
  _timingDateTime: Element
  timingAge: Age
  timingPeriod: Period
  timingRange: Range
  timingDuration: Duration
  location: Reference
  "Indicates who should participate in performing the action described."
  participant: [ActivityDefinition_Participant]
  productReference: Reference
  productCodeableConcept: CodeableConcept
  quantity: Quantity
  "Provides detailed dosage instructions in the same way that they are described for MedicationRequest resources."
  dosage: [Dosage]
  "Indicates the sites on the subject's body where the procedure should be performed (I.e. the target sites)."
  bodySite: [CodeableConcept]
  "Defines specimen requirements for the action to be performed, such as required specimens for a lab test."
  specimenRequirement: [Reference]
  "Defines observation requirements for the action to be performed, such as body weight or surface area."
  observationRequirement: [Reference]
  "Defines the observations that are expected to be produced by the action."
  observationResultRequirement: [Reference]
  transform: canonical
  "Dynamic values that will be evaluated to produce values for elements of the resulting resource. For example, if the dosage of a medication must be computed based on the patient's weight, a dynamic value would be used to specify an expression that calculated the weight, and the path on the request resource that would contain the result."
  dynamicValue: [ActivityDefinition_DynamicValue]
}

enum ActivityDefinition_const {
  ActivityDefinition
}

"A code, group definition, or canonical reference that describes  or identifies the intended subject of the activity being defined.  Canonical references are allowed to support the definition of protocols for drug and substance quality specifications, and is allowed to reference a MedicinalProductDefinition, SubstanceDefinition, AdministrableProductDefinition, ManufacturedItemDefinition, or PackagedProductDefinition resource."
scalar query_resourceById_oneOf_1_subjectCanonical

"A date or partial date (e.g. just year or year + month). There is no time zone. The format is a union of the schema types gYear, gYearMonth and date.  Dates SHALL be valid dates."
scalar date

"The period, timing or frequency upon which the described activity is to occur."
scalar query_resourceById_oneOf_1_timingDateTime

"This resource allows for the definition of some activity to be performed, independent of a particular patient, practitioner, or other performance context."
type ActivityDefinition_Participant {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: code
  _type: Element
  role: CodeableConcept
}

"This resource allows for the definition of some activity to be performed, independent of a particular patient, practitioner, or other performance context."
type ActivityDefinition_DynamicValue {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  path: string
  _path: Element
  expression: Expression!
}

"A medicinal product in the final form which is suitable for administering to a patient (after any mixing of multiple components, dissolution etc. has been performed)."
type AdministrableProductDefinition {
  resourceType: AdministrableProductDefinition_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "An identifier for the administrable product."
  identifier: [Identifier]
  status: code
  _status: Element
  "References a product from which one or more of the constituent parts of that product can be prepared and used as described by this administrable product.  If this administrable product describes the administration of a crushed tablet, the 'formOf' would be the product representing a distribution containing tablets and possibly also a cream.  This is distinct from the 'producedFrom' which refers to the specific components of the product that are used in this preparation, rather than the product as a whole."
  formOf: [Reference]
  administrableDoseForm: CodeableConcept
  unitOfPresentation: CodeableConcept
  "Indicates the specific manufactured items that are part of the 'formOf' product that are used in the preparation of this specific administrable form.  In some cases, an administrable form might use all of the items from the overall product (or there might only be one item), while in other cases, an administrable form might use only a subset of the items available in the overall product.  For example, an administrable form might involve combining a liquid and a powder available as part of an overall product, but not involve applying the also supplied cream."
  producedFrom: [Reference]
  "The ingredients of this administrable medicinal product. This is only needed if the ingredients are not specified either using ManufacturedItemDefiniton (via AdministrableProductDefinition.producedFrom) to state which component items are used to make this, or using by incoming references from the Ingredient resource, to state in detail which substances exist within this. This element allows a basic coded ingredient to be used."
  ingredient: [CodeableConcept]
  device: Reference
  "Characteristics e.g. a product's onset of action."
  property: [AdministrableProductDefinition_Property]
  "The path by which the product is taken into or makes contact with the body. In some regions this is referred to as the licenced or approved route. RouteOfAdministration cannot be used when the 'formOf' product already uses MedicinalProductDefinition.route (and vice versa)."
  routeOfAdministration: [AdministrableProductDefinition_RouteOfAdministration]!
}

enum AdministrableProductDefinition_const {
  AdministrableProductDefinition
}

"A medicinal product in the final form which is suitable for administering to a patient (after any mixing of multiple components, dissolution etc. has been performed)."
type AdministrableProductDefinition_Property {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: CodeableConcept!
  valueCodeableConcept: CodeableConcept
  valueQuantity: Quantity
  valueDate: query_resourceById_oneOf_2_property_items_valueDate
  _valueDate: Element
  "A value for the characteristic."
  valueBoolean: Boolean
  _valueBoolean: Element
  valueAttachment: Attachment
  status: CodeableConcept
}

"A value for the characteristic."
scalar query_resourceById_oneOf_2_property_items_valueDate

"A medicinal product in the final form which is suitable for administering to a patient (after any mixing of multiple components, dissolution etc. has been performed)."
type AdministrableProductDefinition_RouteOfAdministration {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  code: CodeableConcept!
  firstDose: Quantity
  maxSingleDose: Quantity
  maxDosePerDay: Quantity
  maxDosePerTreatmentPeriod: Ratio
  maxTreatmentPeriod: Duration
  "A species for which this route applies."
  targetSpecies: [AdministrableProductDefinition_TargetSpecies]
}

"A medicinal product in the final form which is suitable for administering to a patient (after any mixing of multiple components, dissolution etc. has been performed)."
type AdministrableProductDefinition_TargetSpecies {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  code: CodeableConcept!
  "A species specific time during which consumption of animal product is not appropriate."
  withdrawalPeriod: [AdministrableProductDefinition_WithdrawalPeriod]
}

"A medicinal product in the final form which is suitable for administering to a patient (after any mixing of multiple components, dissolution etc. has been performed)."
type AdministrableProductDefinition_WithdrawalPeriod {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  tissue: CodeableConcept!
  value: Quantity!
  supportingInformation: string
  _supportingInformation: Element
}

"Actual or  potential/avoided event causing unintended physical injury resulting from or contributed to by medical care, a research study or other healthcare setting factors that requires additional monitoring, treatment, or hospitalization, or that results in death."
type AdverseEvent {
  resourceType: AdverseEvent_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  identifier: Identifier
  actuality: code
  _actuality: Element
  "The overall type of event, intended for search and filtering purposes."
  category: [CodeableConcept]
  event: CodeableConcept
  subject: Reference!
  encounter: Reference
  date: dateTime
  _date: Element
  detected: dateTime
  _detected: Element
  recordedDate: dateTime
  _recordedDate: Element
  "Includes information about the reaction that occurred as a result of exposure to a substance (for example, a drug or a chemical)."
  resultingCondition: [Reference]
  location: Reference
  seriousness: CodeableConcept
  severity: CodeableConcept
  outcome: CodeableConcept
  recorder: Reference
  "Parties that may or should contribute or have contributed information to the adverse event, which can consist of one or more activities.  Such information includes information leading to the decision to perform the activity and how to perform the activity (e.g. consultant), information that the activity itself seeks to reveal (e.g. informant of clinical history), or information about what activity was performed (e.g. informant witness)."
  contributor: [Reference]
  "Describes the entity that is suspected to have caused the adverse event."
  suspectEntity: [AdverseEvent_SuspectEntity]
  "AdverseEvent.subjectMedicalHistory."
  subjectMedicalHistory: [Reference]
  "AdverseEvent.referenceDocument."
  referenceDocument: [Reference]
  "AdverseEvent.study."
  study: [Reference]
}

enum AdverseEvent_const {
  AdverseEvent
}

"Actual or  potential/avoided event causing unintended physical injury resulting from or contributed to by medical care, a research study or other healthcare setting factors that requires additional monitoring, treatment, or hospitalization, or that results in death."
type AdverseEvent_SuspectEntity {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  instance: Reference!
  "Information on the possible cause of the event."
  causality: [AdverseEvent_Causality]
}

"Actual or  potential/avoided event causing unintended physical injury resulting from or contributed to by medical care, a research study or other healthcare setting factors that requires additional monitoring, treatment, or hospitalization, or that results in death."
type AdverseEvent_Causality {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  assessment: CodeableConcept
  productRelatedness: string
  _productRelatedness: Element
  author: Reference
  method: CodeableConcept
}

"Risk of harmful or undesirable, physiological response which is unique to an individual and associated with exposure to a substance."
type AllergyIntolerance {
  resourceType: AllergyIntolerance_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Business identifiers assigned to this AllergyIntolerance by the performer or other systems which remain constant as the resource is updated and propagates from server to server."
  identifier: [Identifier]
  clinicalStatus: CodeableConcept
  verificationStatus: CodeableConcept
  type: code
  _type: Element
  "Category of the identified substance."
  category: [code]
  "Extensions for category"
  _category: [Element]
  criticality: code
  _criticality: Element
  code: CodeableConcept
  patient: Reference!
  encounter: Reference
  onsetDateTime: query_resourceById_oneOf_4_onsetDateTime
  _onsetDateTime: Element
  onsetAge: Age
  onsetPeriod: Period
  onsetRange: Range
  onsetString: query_resourceById_oneOf_4_onsetString
  _onsetString: Element
  recordedDate: dateTime
  _recordedDate: Element
  recorder: Reference
  asserter: Reference
  lastOccurrence: dateTime
  _lastOccurrence: Element
  "Additional narrative about the propensity for the Adverse Reaction, not captured in other fields."
  note: [Annotation]
  "Details about each adverse reaction event linked to exposure to the identified substance."
  reaction: [AllergyIntolerance_Reaction]
}

enum AllergyIntolerance_const {
  AllergyIntolerance
}

"Estimated or actual date,  date-time, or age when allergy or intolerance was identified."
scalar query_resourceById_oneOf_4_onsetDateTime

"Estimated or actual date,  date-time, or age when allergy or intolerance was identified."
scalar query_resourceById_oneOf_4_onsetString

"Risk of harmful or undesirable, physiological response which is unique to an individual and associated with exposure to a substance."
type AllergyIntolerance_Reaction {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  substance: CodeableConcept
  "Clinical symptoms and/or signs that are observed or associated with the adverse reaction event."
  manifestation: [CodeableConcept]!
  description: string
  _description: Element
  onset: dateTime
  _onset: Element
  severity: code
  _severity: Element
  exposureRoute: CodeableConcept
  "Additional text about the adverse reaction event not captured in other fields."
  note: [Annotation]
}

"A booking of a healthcare event among patient(s), practitioner(s), related person(s) and/or device(s) for a specific date/time. This may result in one or more Encounter(s)."
type Appointment {
  resourceType: Appointment_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "This records identifiers associated with this appointment concern that are defined by business processes and/or used to refer to it when a direct URL reference to the resource itself is not appropriate (e.g. in CDA documents, or in written / printed documentation)."
  identifier: [Identifier]
  status: code
  _status: Element
  cancelationReason: CodeableConcept
  "A broad categorization of the service that is to be performed during this appointment."
  serviceCategory: [CodeableConcept]
  "The specific service that is to be performed during this appointment."
  serviceType: [CodeableConcept]
  "The specialty of a practitioner that would be required to perform the service requested in this appointment."
  specialty: [CodeableConcept]
  appointmentType: CodeableConcept
  "The coded reason that this appointment is being scheduled. This is more clinical than administrative."
  reasonCode: [CodeableConcept]
  "Reason the appointment has been scheduled to take place, as specified using information from another resource. When the patient arrives and the encounter begins it may be used as the admission diagnosis. The indication will typically be a Condition (with other resources referenced in the evidence.detail), or a Procedure."
  reasonReference: [Reference]
  priority: unsignedInt
  _priority: Element
  description: string
  _description: Element
  "Additional information to support the appointment provided when making the appointment."
  supportingInformation: [Reference]
  start: instant
  _start: Element
  end: instant
  _end: Element
  minutesDuration: positiveInt
  _minutesDuration: Element
  "The slots from the participants' schedules that will be filled by the appointment."
  slot: [Reference]
  created: dateTime
  _created: Element
  comment: string
  _comment: Element
  patientInstruction: string
  _patientInstruction: Element
  "The service request this appointment is allocated to assess (e.g. incoming referral or procedure request)."
  basedOn: [Reference]
  "List of participants involved in the appointment."
  participant: [Appointment_Participant]!
  "A set of date ranges (potentially including times) that the appointment is preferred to be scheduled within.\\n\\nThe duration (usually in minutes) could also be provided to indicate the length of the appointment to fill and populate the start/end times for the actual allocated time. However, in other situations the duration may be calculated by the scheduling system."
  requestedPeriod: [Period]
}

enum Appointment_const {
  Appointment
}

"A booking of a healthcare event among patient(s), practitioner(s), related person(s) and/or device(s) for a specific date/time. This may result in one or more Encounter(s)."
type Appointment_Participant {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Role of participant in the appointment."
  type: [CodeableConcept]
  actor: Reference
  required: code
  _required: Element
  status: code
  _status: Element
  period: Period
}

"A reply to an appointment request for a patient and/or practitioner(s), such as a confirmation or rejection."
type AppointmentResponse {
  resourceType: AppointmentResponse_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "This records identifiers associated with this appointment response concern that are defined by business processes and/ or used to refer to it when a direct URL reference to the resource itself is not appropriate."
  identifier: [Identifier]
  appointment: Reference!
  start: instant
  _start: Element
  end: instant
  _end: Element
  "Role of participant in the appointment."
  participantType: [CodeableConcept]
  actor: Reference
  participantStatus: code
  _participantStatus: Element
  comment: string
  _comment: Element
}

enum AppointmentResponse_const {
  AppointmentResponse
}

"A record of an event made for purposes of maintaining a security log. Typical uses include detection of intrusion attempts and monitoring for inappropriate usage."
type AuditEvent {
  resourceType: AuditEvent_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: Coding!
  "Identifier for the category of event."
  subtype: [Coding]
  action: code
  _action: Element
  period: Period
  recorded: instant
  _recorded: Element
  outcome: code
  _outcome: Element
  outcomeDesc: string
  _outcomeDesc: Element
  "The purposeOfUse (reason) that was used during the event being recorded."
  purposeOfEvent: [CodeableConcept]
  "An actor taking an active role in the event or activity that is logged."
  agent: [AuditEvent_Agent]!
  source: AuditEvent_Source!
  "Specific instances of data or objects that have been accessed."
  entity: [AuditEvent_Entity]
}

enum AuditEvent_const {
  AuditEvent
}

"A record of an event made for purposes of maintaining a security log. Typical uses include detection of intrusion attempts and monitoring for inappropriate usage."
type AuditEvent_Agent {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: CodeableConcept
  "The security role that the user was acting under, that come from local codes defined by the access control security system (e.g. RBAC, ABAC) used in the local context."
  role: [CodeableConcept]
  who: Reference
  altId: string
  _altId: Element
  name: string
  _name: Element
  requestor: boolean
  _requestor: Element
  location: Reference
  "The policy or plan that authorized the activity being recorded. Typically, a single activity may have multiple applicable policies, such as patient consent, guarantor funding, etc. The policy would also indicate the security token used."
  policy: [uri]
  "Extensions for policy"
  _policy: [Element]
  media: Coding
  network: AuditEvent_Network
  "The reason (purpose of use), specific to this agent, that was used during the event being recorded."
  purposeOfUse: [CodeableConcept]
}

"A record of an event made for purposes of maintaining a security log. Typical uses include detection of intrusion attempts and monitoring for inappropriate usage."
type AuditEvent_Network {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  address: string
  _address: Element
  type: code
  _type: Element
}

"A record of an event made for purposes of maintaining a security log. Typical uses include detection of intrusion attempts and monitoring for inappropriate usage."
type AuditEvent_Source {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  site: string
  _site: Element
  observer: Reference!
  "Code specifying the type of source where event originated."
  type: [Coding]
}

"A record of an event made for purposes of maintaining a security log. Typical uses include detection of intrusion attempts and monitoring for inappropriate usage."
type AuditEvent_Entity {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  what: Reference
  type: Coding
  role: Coding
  lifecycle: Coding
  "Security labels for the identified entity."
  securityLabel: [Coding]
  name: string
  _name: Element
  description: string
  _description: Element
  "A stream of bytes"
  query: String
  _query: Element
  "Tagged value pairs for conveying additional information about the entity."
  detail: [AuditEvent_Detail]
}

"A record of an event made for purposes of maintaining a security log. Typical uses include detection of intrusion attempts and monitoring for inappropriate usage."
type AuditEvent_Detail {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: string
  _type: Element
  valueString: query_resourceById_oneOf_7_entity_items_detail_items_valueString
  _valueString: Element
  valueBase64Binary: query_resourceById_oneOf_7_entity_items_detail_items_valueBase64Binary
  _valueBase64Binary: Element
}

"The  value of the extra detail."
scalar query_resourceById_oneOf_7_entity_items_detail_items_valueString

"The  value of the extra detail."
scalar query_resourceById_oneOf_7_entity_items_detail_items_valueBase64Binary

"Basic is used for handling concepts not yet defined in FHIR, narrative-only resources that don't map to an existing resource, and custom resources not appropriate for inclusion in the FHIR specification."
type Basic {
  resourceType: Basic_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Identifier assigned to the resource for business purposes, outside the context of FHIR."
  identifier: [Identifier]
  code: CodeableConcept!
  subject: Reference
  created: date
  _created: Element
  author: Reference
}

enum Basic_const {
  Basic
}

"A resource that represents the data of a single raw artifact as digital content accessible in its native format.  A Binary resource can contain any content, whether text, image, pdf, zip archive, etc."
type Binary {
  resourceType: Binary_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  contentType: code
  _contentType: Element
  securityContext: Reference
  "A stream of bytes"
  data: String
  _data: Element
}

enum Binary_const {
  Binary
}

"A material substance originating from a biological entity intended to be transplanted or infused\\ninto another (possibly the same) biological entity."
type BiologicallyDerivedProduct {
  resourceType: BiologicallyDerivedProduct_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "This records identifiers associated with this biologically derived product instance that are defined by business processes and/or used to refer to it when a direct URL reference to the resource itself is not appropriate (e.g. in CDA documents, or in written / printed documentation)."
  identifier: [Identifier]
  productCategory: code
  _productCategory: Element
  productCode: CodeableConcept
  status: code
  _status: Element
  "Procedure request to obtain this biologically derived product."
  request: [Reference]
  quantity: integer
  _quantity: Element
  "Parent product (if any)."
  parent: [Reference]
  collection: BiologicallyDerivedProduct_Collection
  "Any processing of the product during collection that does not change the fundamental nature of the product. For example adding anti-coagulants during the collection of Peripheral Blood Stem Cells."
  processing: [BiologicallyDerivedProduct_Processing]
  manipulation: BiologicallyDerivedProduct_Manipulation
  "Product storage."
  storage: [BiologicallyDerivedProduct_Storage]
}

enum BiologicallyDerivedProduct_const {
  BiologicallyDerivedProduct
}

"A material substance originating from a biological entity intended to be transplanted or infused\\ninto another (possibly the same) biological entity."
type BiologicallyDerivedProduct_Collection {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  collector: Reference
  source: Reference
  collectedDateTime: query_resourceById_oneOf_10_collection_collectedDateTime
  _collectedDateTime: Element
  collectedPeriod: Period
}

"Time of product collection."
scalar query_resourceById_oneOf_10_collection_collectedDateTime

"A material substance originating from a biological entity intended to be transplanted or infused\\ninto another (possibly the same) biological entity."
type BiologicallyDerivedProduct_Processing {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  description: string
  _description: Element
  procedure: CodeableConcept
  additive: Reference
  timeDateTime: query_resourceById_oneOf_10_processing_items_timeDateTime
  _timeDateTime: Element
  timePeriod: Period
}

"Time of processing."
scalar query_resourceById_oneOf_10_processing_items_timeDateTime

"A material substance originating from a biological entity intended to be transplanted or infused\\ninto another (possibly the same) biological entity."
type BiologicallyDerivedProduct_Manipulation {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  description: string
  _description: Element
  timeDateTime: query_resourceById_oneOf_10_manipulation_timeDateTime
  _timeDateTime: Element
  timePeriod: Period
}

"Time of manipulation."
scalar query_resourceById_oneOf_10_manipulation_timeDateTime

"A material substance originating from a biological entity intended to be transplanted or infused\\ninto another (possibly the same) biological entity."
type BiologicallyDerivedProduct_Storage {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  description: string
  _description: Element
  temperature: decimal
  _temperature: Element
  scale: code
  _scale: Element
  duration: Period
}

"Record details about an anatomical structure.  This resource may be used when a coded concept does not provide the necessary detail needed for the use case."
type BodyStructure {
  resourceType: BodyStructure_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Identifier for this instance of the anatomical structure."
  identifier: [Identifier]
  active: boolean
  _active: Element
  morphology: CodeableConcept
  location: CodeableConcept
  "Qualifier to refine the anatomical location.  These include qualifiers for laterality, relative location, directionality, number, and plane."
  locationQualifier: [CodeableConcept]
  description: string
  _description: Element
  "Image or images used to identify a location."
  image: [Attachment]
  patient: Reference!
}

enum BodyStructure_const {
  BodyStructure
}

"A container for a collection of resources."
type Bundle {
  resourceType: Bundle_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  identifier: Identifier
  type: code
  _type: Element
  timestamp: instant
  _timestamp: Element
  total: unsignedInt
  _total: Element
  "A series of links that provide context to this bundle."
  link: [Bundle_Link]
  "An entry in a bundle resource - will either contain a resource or information about a resource (transactions and history only)."
  entry: [Bundle_Entry]
  signature: Signature
}

enum Bundle_const {
  Bundle
}

"A container for a collection of resources."
type Bundle_Link {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  relation: string
  _relation: Element
  url: uri
  _url: Element
}

"A container for a collection of resources."
type Bundle_Entry {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "A series of links that provide context to this entry."
  link: [Bundle_Link]
  fullUrl: uri
  _fullUrl: Element
  resource: ResourceList
  search: Bundle_Search
  request: Bundle_Request
  response: Bundle_Response
}

"A container for a collection of resources."
type Bundle_Search {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  mode: code
  _mode: Element
  score: decimal
  _score: Element
}

"A container for a collection of resources."
type Bundle_Request {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  method: code
  _method: Element
  url: uri
  _url: Element
  ifNoneMatch: string
  _ifNoneMatch: Element
  ifModifiedSince: instant
  _ifModifiedSince: Element
  ifMatch: string
  _ifMatch: Element
  ifNoneExist: string
  _ifNoneExist: Element
}

"A container for a collection of resources."
type Bundle_Response {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  status: string
  _status: Element
  location: uri
  _location: Element
  etag: string
  _etag: Element
  lastModified: instant
  _lastModified: Element
  outcome: ResourceList
}

"A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation."
type CapabilityStatement {
  resourceType: CapabilityStatement_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  url: uri
  _url: Element
  version: string
  _version: Element
  name: string
  _name: Element
  title: string
  _title: Element
  status: code
  _status: Element
  experimental: boolean
  _experimental: Element
  date: dateTime
  _date: Element
  publisher: string
  _publisher: Element
  "Contact details to assist a user in finding and communicating with the publisher."
  contact: [ContactDetail]
  description: markdown
  _description: Element
  "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate capability statement instances."
  useContext: [UsageContext]
  "A legal or geographic region in which the capability statement is intended to be used."
  jurisdiction: [CodeableConcept]
  purpose: markdown
  _purpose: Element
  copyright: markdown
  _copyright: Element
  kind: code
  _kind: Element
  "Reference to a canonical URL of another CapabilityStatement that this software implements. This capability statement is a published API description that corresponds to a business service. The server may actually implement a subset of the capability statement it claims to implement, so the capability statement must specify the full capability details."
  instantiates: [canonical]
  "Reference to a canonical URL of another CapabilityStatement that this software adds to. The capability statement automatically includes everything in the other statement, and it is not duplicated, though the server may repeat the same resources, interactions and operations to add additional details to them."
  imports: [canonical]
  software: CapabilityStatement_Software
  implementation: CapabilityStatement_Implementation
  fhirVersion: code
  _fhirVersion: Element
  "A list of the formats supported by this implementation using their content types."
  format: [code]
  "Extensions for format"
  _format: [Element]
  "A list of the patch formats supported by this implementation using their content types."
  patchFormat: [code]
  "Extensions for patchFormat"
  _patchFormat: [Element]
  "A list of implementation guides that the server does (or should) support in their entirety."
  implementationGuide: [canonical]
  "A definition of the restful capabilities of the solution, if any."
  rest: [CapabilityStatement_Rest]
  "A description of the messaging capabilities of the solution."
  messaging: [CapabilityStatement_Messaging]
  "A document definition."
  document: [CapabilityStatement_Document]
}

enum CapabilityStatement_const {
  CapabilityStatement
}

"A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation."
type CapabilityStatement_Software {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  name: string
  _name: Element
  version: string
  _version: Element
  releaseDate: dateTime
  _releaseDate: Element
}

"A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation."
type CapabilityStatement_Implementation {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  description: string
  _description: Element
  url: url
  _url: Element
  custodian: Reference
}

"A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation."
type CapabilityStatement_Rest {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  mode: code
  _mode: Element
  documentation: markdown
  _documentation: Element
  security: CapabilityStatement_Security
  "A specification of the restful capabilities of the solution for a specific resource type."
  resource: [CapabilityStatement_Resource]
  "A specification of restful operations supported by the system."
  interaction: [CapabilityStatement_Interaction1]
  "Search parameters that are supported for searching all resources for implementations to support and/or make use of - either references to ones defined in the specification, or additional ones defined for/by the implementation."
  searchParam: [CapabilityStatement_SearchParam]
  "Definition of an operation or a named query together with its parameters and their meaning and type."
  operation: [CapabilityStatement_Operation]
  "An absolute URI which is a reference to the definition of a compartment that the system supports. The reference is to a CompartmentDefinition resource by its canonical URL ."
  compartment: [canonical]
}

"A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation."
type CapabilityStatement_Security {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  cors: boolean
  _cors: Element
  "Types of security services that are supported/required by the system."
  service: [CodeableConcept]
  description: markdown
  _description: Element
}

"A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation."
type CapabilityStatement_Resource {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: code
  _type: Element
  profile: canonical
  "A list of profiles that represent different use cases supported by the system. For a server, \\"supported by the system\\" means the system hosts/produces a set of resources that are conformant to a particular profile, and allows clients that use its services to search using this profile and to find appropriate data. For a client, it means the system will search by this profile and process data according to the guidance implicit in the profile. See further discussion in [Using Profiles](profiling.html#profile-uses)."
  supportedProfile: [canonical]
  documentation: markdown
  _documentation: Element
  "Identifies a restful operation supported by the solution."
  interaction: [CapabilityStatement_Interaction]
  versioning: code
  _versioning: Element
  readHistory: boolean
  _readHistory: Element
  updateCreate: boolean
  _updateCreate: Element
  conditionalCreate: boolean
  _conditionalCreate: Element
  conditionalRead: code
  _conditionalRead: Element
  conditionalUpdate: boolean
  _conditionalUpdate: Element
  conditionalDelete: code
  _conditionalDelete: Element
  "A set of flags that defines how references are supported."
  referencePolicy: [code]
  "Extensions for referencePolicy"
  _referencePolicy: [Element]
  "A list of _include values supported by the server."
  searchInclude: [string]
  "Extensions for searchInclude"
  _searchInclude: [Element]
  "A list of _revinclude (reverse include) values supported by the server."
  searchRevInclude: [string]
  "Extensions for searchRevInclude"
  _searchRevInclude: [Element]
  "Search parameters for implementations to support and/or make use of - either references to ones defined in the specification, or additional ones defined for/by the implementation."
  searchParam: [CapabilityStatement_SearchParam]
  "Definition of an operation or a named query together with its parameters and their meaning and type. Consult the definition of the operation for details about how to invoke the operation, and the parameters."
  operation: [CapabilityStatement_Operation]
}

"A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation."
type CapabilityStatement_Interaction {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  code: code
  _code: Element
  documentation: markdown
  _documentation: Element
}

"A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation."
type CapabilityStatement_SearchParam {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  name: string
  _name: Element
  definition: canonical
  type: code
  _type: Element
  documentation: markdown
  _documentation: Element
}

"A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation."
type CapabilityStatement_Operation {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  name: string
  _name: Element
  definition: canonical!
  documentation: markdown
  _documentation: Element
}

"A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation."
type CapabilityStatement_Interaction1 {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  code: code
  _code: Element
  documentation: markdown
  _documentation: Element
}

"A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation."
type CapabilityStatement_Messaging {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "An endpoint (network accessible address) to which messages and/or replies are to be sent."
  endpoint: [CapabilityStatement_Endpoint]
  reliableCache: unsignedInt
  _reliableCache: Element
  documentation: markdown
  _documentation: Element
  "References to message definitions for messages this system can send or receive."
  supportedMessage: [CapabilityStatement_SupportedMessage]
}

"A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation."
type CapabilityStatement_Endpoint {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  protocol: Coding!
  address: url
  _address: Element
}

"A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation."
type CapabilityStatement_SupportedMessage {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  mode: code
  _mode: Element
  definition: canonical!
}

"A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation."
type CapabilityStatement_Document {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  mode: code
  _mode: Element
  documentation: markdown
  _documentation: Element
  profile: canonical!
}

"Describes the intention of how one or more practitioners intend to deliver care for a particular patient, group or community for a period of time, possibly limited to care for a specific condition or set of conditions."
type CarePlan {
  resourceType: CarePlan_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Business identifiers assigned to this care plan by the performer or other systems which remain constant as the resource is updated and propagates from server to server."
  identifier: [Identifier]
  "The URL pointing to a FHIR-defined protocol, guideline, questionnaire or other definition that is adhered to in whole or in part by this CarePlan."
  instantiatesCanonical: [canonical]
  "The URL pointing to an externally maintained protocol, guideline, questionnaire or other definition that is adhered to in whole or in part by this CarePlan."
  instantiatesUri: [uri]
  "Extensions for instantiatesUri"
  _instantiatesUri: [Element]
  "A care plan that is fulfilled in whole or in part by this care plan."
  basedOn: [Reference]
  "Completed or terminated care plan whose function is taken by this new care plan."
  replaces: [Reference]
  "A larger care plan of which this particular care plan is a component or step."
  partOf: [Reference]
  status: code
  _status: Element
  intent: code
  _intent: Element
  "Identifies what \\"kind\\" of plan this is to support differentiation between multiple co-existing plans; e.g. \\"Home health\\", \\"psychiatric\\", \\"asthma\\", \\"disease management\\", \\"wellness plan\\", etc."
  category: [CodeableConcept]
  title: string
  _title: Element
  description: string
  _description: Element
  subject: Reference!
  encounter: Reference
  period: Period
  created: dateTime
  _created: Element
  author: Reference
  "Identifies the individual(s) or organization who provided the contents of the care plan."
  contributor: [Reference]
  "Identifies all people and organizations who are expected to be involved in the care envisioned by this plan."
  careTeam: [Reference]
  "Identifies the conditions/problems/concerns/diagnoses/etc. whose management and/or mitigation are handled by this plan."
  addresses: [Reference]
  "Identifies portions of the patient's record that specifically influenced the formation of the plan.  These might include comorbidities, recent procedures, limitations, recent assessments, etc."
  supportingInfo: [Reference]
  "Describes the intended objective(s) of carrying out the care plan."
  goal: [Reference]
  "Identifies a planned action to occur as part of the plan.  For example, a medication to be used, lab tests to perform, self-monitoring, education, etc."
  activity: [CarePlan_Activity]
  "General notes about the care plan not covered elsewhere."
  note: [Annotation]
}

enum CarePlan_const {
  CarePlan
}

"Describes the intention of how one or more practitioners intend to deliver care for a particular patient, group or community for a period of time, possibly limited to care for a specific condition or set of conditions."
type CarePlan_Activity {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Identifies the outcome at the point when the status of the activity is assessed.  For example, the outcome of an education activity could be patient understands (or not)."
  outcomeCodeableConcept: [CodeableConcept]
  "Details of the outcome or action resulting from the activity.  The reference to an \\"event\\" resource, such as Procedure or Encounter or Observation, is the result/outcome of the activity itself.  The activity can be conveyed using CarePlan.activity.detail OR using the CarePlan.activity.reference (a reference to a “request” resource)."
  outcomeReference: [Reference]
  "Notes about the adherence/status/progress of the activity."
  progress: [Annotation]
  reference: Reference
  detail: CarePlan_Detail
}

"Describes the intention of how one or more practitioners intend to deliver care for a particular patient, group or community for a period of time, possibly limited to care for a specific condition or set of conditions."
type CarePlan_Detail {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  kind: code
  _kind: Element
  "The URL pointing to a FHIR-defined protocol, guideline, questionnaire or other definition that is adhered to in whole or in part by this CarePlan activity."
  instantiatesCanonical: [canonical]
  "The URL pointing to an externally maintained protocol, guideline, questionnaire or other definition that is adhered to in whole or in part by this CarePlan activity."
  instantiatesUri: [uri]
  "Extensions for instantiatesUri"
  _instantiatesUri: [Element]
  code: CodeableConcept
  "Provides the rationale that drove the inclusion of this particular activity as part of the plan or the reason why the activity was prohibited."
  reasonCode: [CodeableConcept]
  "Indicates another resource, such as the health condition(s), whose existence justifies this request and drove the inclusion of this particular activity as part of the plan."
  reasonReference: [Reference]
  "Internal reference that identifies the goals that this activity is intended to contribute towards meeting."
  goal: [Reference]
  status: code
  _status: Element
  statusReason: CodeableConcept
  doNotPerform: boolean
  _doNotPerform: Element
  scheduledTiming: Timing
  scheduledPeriod: Period
  scheduledString: query_resourceById_oneOf_14_activity_items_detail_scheduledString
  _scheduledString: Element
  location: Reference
  "Identifies who's expected to be involved in the activity."
  performer: [Reference]
  productCodeableConcept: CodeableConcept
  productReference: Reference
  dailyAmount: Quantity
  quantity: Quantity
  description: string
  _description: Element
}

"The period, timing or frequency upon which the described activity is to occur."
scalar query_resourceById_oneOf_14_activity_items_detail_scheduledString

"The Care Team includes all the people and organizations who plan to participate in the coordination and delivery of care for a patient."
type CareTeam {
  resourceType: CareTeam_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Business identifiers assigned to this care team by the performer or other systems which remain constant as the resource is updated and propagates from server to server."
  identifier: [Identifier]
  status: code
  _status: Element
  "Identifies what kind of team.  This is to support differentiation between multiple co-existing teams, such as care plan team, episode of care team, longitudinal care team."
  category: [CodeableConcept]
  name: string
  _name: Element
  subject: Reference
  encounter: Reference
  period: Period
  "Identifies all people and organizations who are expected to be involved in the care team."
  participant: [CareTeam_Participant]
  "Describes why the care team exists."
  reasonCode: [CodeableConcept]
  "Condition(s) that this care team addresses."
  reasonReference: [Reference]
  "The organization responsible for the care team."
  managingOrganization: [Reference]
  "A central contact detail for the care team (that applies to all members)."
  telecom: [ContactPoint]
  "Comments made about the CareTeam."
  note: [Annotation]
}

enum CareTeam_const {
  CareTeam
}

"The Care Team includes all the people and organizations who plan to participate in the coordination and delivery of care for a patient."
type CareTeam_Participant {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Indicates specific responsibility of an individual within the care team, such as \\"Primary care physician\\", \\"Trained social worker counselor\\", \\"Caregiver\\", etc."
  role: [CodeableConcept]
  member: Reference
  onBehalfOf: Reference
  period: Period
}

"Catalog entries are wrappers that contextualize items included in a catalog."
type CatalogEntry {
  resourceType: CatalogEntry_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Used in supporting different identifiers for the same product, e.g. manufacturer code and retailer code."
  identifier: [Identifier]
  type: CodeableConcept
  orderable: boolean
  _orderable: Element
  referencedItem: Reference!
  "Used in supporting related concepts, e.g. NDC to RxNorm."
  additionalIdentifier: [Identifier]
  "Classes of devices, or ATC for medication."
  classification: [CodeableConcept]
  status: code
  _status: Element
  validityPeriod: Period
  validTo: dateTime
  _validTo: Element
  lastUpdated: dateTime
  _lastUpdated: Element
  "Used for examplefor Out of Formulary, or any specifics."
  additionalCharacteristic: [CodeableConcept]
  "User for example for ATC classification, or."
  additionalClassification: [CodeableConcept]
  "Used for example, to point to a substance, or to a device used to administer a medication."
  relatedEntry: [CatalogEntry_RelatedEntry]
}

enum CatalogEntry_const {
  CatalogEntry
}

"Catalog entries are wrappers that contextualize items included in a catalog."
type CatalogEntry_RelatedEntry {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  relationtype: code
  _relationtype: Element
  item: Reference!
}

"The resource ChargeItem describes the provision of healthcare provider products for a certain patient, therefore referring not only to the product, but containing in addition details of the provision, like date, time, amounts and participating organizations and persons. Main Usage of the ChargeItem is to enable the billing process and internal cost allocation."
type ChargeItem {
  resourceType: ChargeItem_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Identifiers assigned to this event performer or other systems."
  identifier: [Identifier]
  "References the (external) source of pricing information, rules of application for the code this ChargeItem uses."
  definitionUri: [uri]
  "Extensions for definitionUri"
  _definitionUri: [Element]
  "References the source of pricing information, rules of application for the code this ChargeItem uses."
  definitionCanonical: [canonical]
  status: code
  _status: Element
  "ChargeItems can be grouped to larger ChargeItems covering the whole set."
  partOf: [Reference]
  code: CodeableConcept!
  subject: Reference!
  context: Reference
  occurrenceDateTime: query_resourceById_oneOf_17_occurrenceDateTime
  _occurrenceDateTime: Element
  occurrencePeriod: Period
  occurrenceTiming: Timing
  "Indicates who or what performed or participated in the charged service."
  performer: [ChargeItem_Performer]
  performingOrganization: Reference
  requestingOrganization: Reference
  costCenter: Reference
  quantity: Quantity
  "The anatomical location where the related service has been applied."
  bodysite: [CodeableConcept]
  factorOverride: decimal
  _factorOverride: Element
  priceOverride: Money
  overrideReason: string
  _overrideReason: Element
  enterer: Reference
  enteredDate: dateTime
  _enteredDate: Element
  "Describes why the event occurred in coded or textual form."
  reason: [CodeableConcept]
  "Indicated the rendered service that caused this charge."
  service: [Reference]
  productReference: Reference
  productCodeableConcept: CodeableConcept
  "Account into which this ChargeItems belongs."
  account: [Reference]
  "Comments made about the event by the performer, subject or other participants."
  note: [Annotation]
  "Further information supporting this charge."
  supportingInformation: [Reference]
}

enum ChargeItem_const {
  ChargeItem
}

"Date/time(s) or duration when the charged service was applied."
scalar query_resourceById_oneOf_17_occurrenceDateTime

"The resource ChargeItem describes the provision of healthcare provider products for a certain patient, therefore referring not only to the product, but containing in addition details of the provision, like date, time, amounts and participating organizations and persons. Main Usage of the ChargeItem is to enable the billing process and internal cost allocation."
type ChargeItem_Performer {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  function: CodeableConcept
  actor: Reference!
}

"The ChargeItemDefinition resource provides the properties that apply to the (billing) codes necessary to calculate costs and prices. The properties may differ largely depending on type and realm, therefore this resource gives only a rough structure and requires profiling for each type of billing code system."
type ChargeItemDefinition {
  resourceType: ChargeItemDefinition_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  url: uri
  _url: Element
  "A formal identifier that is used to identify this charge item definition when it is represented in other formats, or referenced in a specification, model, design or an instance."
  identifier: [Identifier]
  version: string
  _version: Element
  title: string
  _title: Element
  "The URL pointing to an externally-defined charge item definition that is adhered to in whole or in part by this definition."
  derivedFromUri: [uri]
  "Extensions for derivedFromUri"
  _derivedFromUri: [Element]
  "A larger definition of which this particular definition is a component or step."
  partOf: [canonical]
  "As new versions of a protocol or guideline are defined, allows identification of what versions are replaced by a new instance."
  replaces: [canonical]
  status: code
  _status: Element
  experimental: boolean
  _experimental: Element
  date: dateTime
  _date: Element
  publisher: string
  _publisher: Element
  "Contact details to assist a user in finding and communicating with the publisher."
  contact: [ContactDetail]
  description: markdown
  _description: Element
  "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate charge item definition instances."
  useContext: [UsageContext]
  "A legal or geographic region in which the charge item definition is intended to be used."
  jurisdiction: [CodeableConcept]
  copyright: markdown
  _copyright: Element
  approvalDate: date
  _approvalDate: Element
  lastReviewDate: date
  _lastReviewDate: Element
  effectivePeriod: Period
  code: CodeableConcept
  "The defined billing details in this resource pertain to the given product instance(s)."
  instance: [Reference]
  "Expressions that describe applicability criteria for the billing code."
  applicability: [ChargeItemDefinition_Applicability]
  "Group of properties which are applicable under the same conditions. If no applicability rules are established for the group, then all properties always apply."
  propertyGroup: [ChargeItemDefinition_PropertyGroup]
}

enum ChargeItemDefinition_const {
  ChargeItemDefinition
}

"The ChargeItemDefinition resource provides the properties that apply to the (billing) codes necessary to calculate costs and prices. The properties may differ largely depending on type and realm, therefore this resource gives only a rough structure and requires profiling for each type of billing code system."
type ChargeItemDefinition_Applicability {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  description: string
  _description: Element
  language: string
  _language: Element
  expression: string
  _expression: Element
}

"The ChargeItemDefinition resource provides the properties that apply to the (billing) codes necessary to calculate costs and prices. The properties may differ largely depending on type and realm, therefore this resource gives only a rough structure and requires profiling for each type of billing code system."
type ChargeItemDefinition_PropertyGroup {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Expressions that describe applicability criteria for the priceComponent."
  applicability: [ChargeItemDefinition_Applicability]
  "The price for a ChargeItem may be calculated as a base price with surcharges/deductions that apply in certain conditions. A ChargeItemDefinition resource that defines the prices, factors and conditions that apply to a billing code is currently under development. The priceComponent element can be used to offer transparency to the recipient of the Invoice of how the prices have been calculated."
  priceComponent: [ChargeItemDefinition_PriceComponent]
}

"The ChargeItemDefinition resource provides the properties that apply to the (billing) codes necessary to calculate costs and prices. The properties may differ largely depending on type and realm, therefore this resource gives only a rough structure and requires profiling for each type of billing code system."
type ChargeItemDefinition_PriceComponent {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: code
  _type: Element
  code: CodeableConcept
  factor: decimal
  _factor: Element
  amount: Money
}

"The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources."
type Citation {
  resourceType: Citation_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  url: uri
  _url: Element
  "A formal identifier that is used to identify this citation when it is represented in other formats, or referenced in a specification, model, design or an instance."
  identifier: [Identifier]
  version: string
  _version: Element
  name: string
  _name: Element
  title: string
  _title: Element
  status: code
  _status: Element
  experimental: boolean
  _experimental: Element
  date: dateTime
  _date: Element
  publisher: string
  _publisher: Element
  "Contact details to assist a user in finding and communicating with the publisher."
  contact: [ContactDetail]
  description: markdown
  _description: Element
  "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate citation instances."
  useContext: [UsageContext]
  "A legal or geographic region in which the citation is intended to be used."
  jurisdiction: [CodeableConcept]
  purpose: markdown
  _purpose: Element
  copyright: markdown
  _copyright: Element
  approvalDate: date
  _approvalDate: Element
  lastReviewDate: date
  _lastReviewDate: Element
  effectivePeriod: Period
  "Who authored the Citation."
  author: [ContactDetail]
  "Who edited the Citation."
  editor: [ContactDetail]
  "Who reviewed the Citation."
  reviewer: [ContactDetail]
  "Who endorsed the Citation."
  endorser: [ContactDetail]
  "A human-readable display of the citation."
  summary: [Citation_Summary]
  "The assignment to an organizing scheme."
  classification: [Citation_Classification]
  "Used for general notes and annotations not coded elsewhere."
  note: [Annotation]
  "The status of the citation."
  currentState: [CodeableConcept]
  "An effective date or period for a status of the citation."
  statusDate: [Citation_StatusDate]
  "Artifact related to the Citation Resource."
  relatesTo: [Citation_RelatesTo]
  citedArtifact: Citation_CitedArtifact
}

enum Citation_const {
  Citation
}

"The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources."
type Citation_Summary {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  style: CodeableConcept
  text: markdown
  _text: Element
}

"The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources."
type Citation_Classification {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: CodeableConcept
  "The specific classification value."
  classifier: [CodeableConcept]
}

"The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources."
type Citation_StatusDate {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  activity: CodeableConcept!
  actual: boolean
  _actual: Element
  period: Period!
}

"The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources."
type Citation_RelatesTo {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  relationshipType: CodeableConcept!
  "The clasification of the related artifact."
  targetClassifier: [CodeableConcept]
  targetUri: query_resourceById_oneOf_19_relatesTo_items_targetUri
  _targetUri: Element
  targetIdentifier: Identifier
  targetReference: Reference
  targetAttachment: Attachment
}

"The article or artifact that the Citation Resource is related to."
scalar query_resourceById_oneOf_19_relatesTo_items_targetUri

"The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources."
type Citation_CitedArtifact {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "A formal identifier that is used to identify this citation when it is represented in other formats, or referenced in a specification, model, design or an instance."
  identifier: [Identifier]
  "A formal identifier that is used to identify things closely related to this citation."
  relatedIdentifier: [Identifier]
  dateAccessed: dateTime
  _dateAccessed: Element
  version: Citation_Version
  "The status of the cited artifact."
  currentState: [CodeableConcept]
  "An effective date or period for a status of the cited artifact."
  statusDate: [Citation_StatusDate1]
  "The title details of the article or artifact."
  title: [Citation_Title]
  "Summary of the article or artifact."
  abstract: [Citation_Abstract]
  part: Citation_Part
  "The artifact related to the cited artifact."
  relatesTo: [Citation_RelatesTo1]
  "If multiple, used to represent alternative forms of the article that are not separate citations."
  publicationForm: [Citation_PublicationForm]
  "Used for any URL for the article or artifact cited."
  webLocation: [Citation_WebLocation]
  "The assignment to an organizing scheme."
  classification: [Citation_Classification1]
  contributorship: Citation_Contributorship
  "Any additional information or content for the article or artifact."
  note: [Annotation]
}

"The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources."
type Citation_Version {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  value: string
  _value: Element
  baseCitation: Reference
}

"The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources."
type Citation_StatusDate1 {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  activity: CodeableConcept!
  actual: boolean
  _actual: Element
  period: Period!
}

"The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources."
type Citation_Title {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Used to express the reason or specific aspect for the title."
  type: [CodeableConcept]
  language: CodeableConcept
  text: markdown
  _text: Element
}

"The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources."
type Citation_Abstract {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: CodeableConcept
  language: CodeableConcept
  text: markdown
  _text: Element
  copyright: markdown
  _copyright: Element
}

"The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources."
type Citation_Part {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: CodeableConcept
  value: string
  _value: Element
  baseCitation: Reference
}

"The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources."
type Citation_RelatesTo1 {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  relationshipType: CodeableConcept!
  "The clasification of the related artifact."
  targetClassifier: [CodeableConcept]
  targetUri: query_resourceById_oneOf_19_citedArtifact_relatesTo_items_targetUri
  _targetUri: Element
  targetIdentifier: Identifier
  targetReference: Reference
  targetAttachment: Attachment
}

"The article or artifact that the cited artifact is related to."
scalar query_resourceById_oneOf_19_citedArtifact_relatesTo_items_targetUri

"The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources."
type Citation_PublicationForm {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  publishedIn: Citation_PublishedIn
  periodicRelease: Citation_PeriodicRelease
  articleDate: dateTime
  _articleDate: Element
  lastRevisionDate: dateTime
  _lastRevisionDate: Element
  "Language in which this form of the article is published."
  language: [CodeableConcept]
  accessionNumber: string
  _accessionNumber: Element
  pageString: string
  _pageString: Element
  firstPage: string
  _firstPage: Element
  lastPage: string
  _lastPage: Element
  pageCount: string
  _pageCount: Element
  copyright: markdown
  _copyright: Element
}

"The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources."
type Citation_PublishedIn {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: CodeableConcept
  "Journal identifiers include ISSN, ISO Abbreviation and NLMuniqueID; Book identifiers include ISBN."
  identifier: [Identifier]
  title: string
  _title: Element
  publisher: Reference
  publisherLocation: string
  _publisherLocation: Element
}

"The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources."
type Citation_PeriodicRelease {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  citedMedium: CodeableConcept
  volume: string
  _volume: Element
  issue: string
  _issue: Element
  dateOfPublication: Citation_DateOfPublication
}

"The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources."
type Citation_DateOfPublication {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  date: date
  _date: Element
  year: string
  _year: Element
  month: string
  _month: Element
  day: string
  _day: Element
  season: string
  _season: Element
  text: string
  _text: Element
}

"The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources."
type Citation_WebLocation {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: CodeableConcept
  url: uri
  _url: Element
}

"The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources."
type Citation_Classification1 {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: CodeableConcept
  "The specific classification value."
  classifier: [CodeableConcept]
  whoClassified: Citation_WhoClassified
}

"The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources."
type Citation_WhoClassified {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  person: Reference
  organization: Reference
  publisher: Reference
  classifierCopyright: string
  _classifierCopyright: Element
  freeToShare: boolean
  _freeToShare: Element
}

"The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources."
type Citation_Contributorship {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  complete: boolean
  _complete: Element
  "An individual entity named in the author list or contributor list."
  entry: [Citation_Entry]
  "Used to record a display of the author/contributor list without separate coding for each list member."
  summary: [Citation_Summary1]
}

"The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources."
type Citation_Entry {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  name: HumanName
  initials: string
  _initials: Element
  collectiveName: string
  _collectiveName: Element
  "Unique person identifier."
  identifier: [Identifier]
  "Organization affiliated with the entity."
  affiliationInfo: [Citation_AffiliationInfo]
  "Physical mailing address for the author or contributor."
  address: [Address]
  "Email or telephone contact methods for the author or contributor."
  telecom: [ContactPoint]
  "This element identifies the specific nature of an individual’s contribution with respect to the cited work."
  contributionType: [CodeableConcept]
  role: CodeableConcept
  "Contributions with accounting for time or number."
  contributionInstance: [Citation_ContributionInstance]
  correspondingContact: boolean
  _correspondingContact: Element
  listOrder: positiveInt
  _listOrder: Element
}

"The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources."
type Citation_AffiliationInfo {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  affiliation: string
  _affiliation: Element
  role: string
  _role: Element
  "Identifier for the organization."
  identifier: [Identifier]
}

"The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources."
type Citation_ContributionInstance {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: CodeableConcept!
  time: dateTime
  _time: Element
}

"The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources."
type Citation_Summary1 {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: CodeableConcept
  style: CodeableConcept
  source: CodeableConcept
  value: markdown
  _value: Element
}

"A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement."
type Claim {
  resourceType: Claim_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "A unique identifier assigned to this claim."
  identifier: [Identifier]
  status: code
  _status: Element
  type: CodeableConcept!
  subType: CodeableConcept
  use: code
  _use: Element
  patient: Reference!
  billablePeriod: Period
  created: dateTime
  _created: Element
  enterer: Reference
  insurer: Reference
  provider: Reference!
  priority: CodeableConcept!
  fundsReserve: CodeableConcept
  "Other claims which are related to this claim such as prior submissions or claims for related services or for the same event."
  related: [Claim_Related]
  prescription: Reference
  originalPrescription: Reference
  payee: Claim_Payee
  referral: Reference
  facility: Reference
  "The members of the team who provided the products and services."
  careTeam: [Claim_CareTeam]
  "Additional information codes regarding exceptions, special considerations, the condition, situation, prior or concurrent issues."
  supportingInfo: [Claim_SupportingInfo]
  "Information about diagnoses relevant to the claim items."
  diagnosis: [Claim_Diagnosis]
  "Procedures performed on the patient relevant to the billing items with the claim."
  procedure: [Claim_Procedure]
  "Financial instruments for reimbursement for the health care products and services specified on the claim."
  insurance: [Claim_Insurance]!
  accident: Claim_Accident
  "A claim line. Either a simple  product or service or a 'group' of details which can each be a simple items or groups of sub-details."
  item: [Claim_Item]
  total: Money
}

enum Claim_const {
  Claim
}

"A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement."
type Claim_Related {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  claim: Reference
  relationship: CodeableConcept
  reference: Identifier
}

"A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement."
type Claim_Payee {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: CodeableConcept!
  party: Reference
}

"A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement."
type Claim_CareTeam {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  sequence: positiveInt
  _sequence: Element
  provider: Reference!
  responsible: boolean
  _responsible: Element
  role: CodeableConcept
  qualification: CodeableConcept
}

"A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement."
type Claim_SupportingInfo {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  sequence: positiveInt
  _sequence: Element
  category: CodeableConcept!
  code: CodeableConcept
  timingDate: query_resourceById_oneOf_20_supportingInfo_items_timingDate
  _timingDate: Element
  timingPeriod: Period
  "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data."
  valueBoolean: Boolean
  _valueBoolean: Element
  valueString: query_resourceById_oneOf_20_supportingInfo_items_valueString
  _valueString: Element
  valueQuantity: Quantity
  valueAttachment: Attachment
  valueReference: Reference
  reason: CodeableConcept
}

"The date when or period to which this information refers."
scalar query_resourceById_oneOf_20_supportingInfo_items_timingDate

"Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data."
scalar query_resourceById_oneOf_20_supportingInfo_items_valueString

"A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement."
type Claim_Diagnosis {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  sequence: positiveInt
  _sequence: Element
  diagnosisCodeableConcept: CodeableConcept
  diagnosisReference: Reference
  "When the condition was observed or the relative ranking."
  type: [CodeableConcept]
  onAdmission: CodeableConcept
  packageCode: CodeableConcept
}

"A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement."
type Claim_Procedure {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  sequence: positiveInt
  _sequence: Element
  "When the condition was observed or the relative ranking."
  type: [CodeableConcept]
  date: dateTime
  _date: Element
  procedureCodeableConcept: CodeableConcept
  procedureReference: Reference
  "Unique Device Identifiers associated with this line item."
  udi: [Reference]
}

"A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement."
type Claim_Insurance {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  sequence: positiveInt
  _sequence: Element
  focal: boolean
  _focal: Element
  identifier: Identifier
  coverage: Reference!
  businessArrangement: string
  _businessArrangement: Element
  "Reference numbers previously provided by the insurer to the provider to be quoted on subsequent claims containing services or products related to the prior authorization."
  preAuthRef: [string]
  "Extensions for preAuthRef"
  _preAuthRef: [Element]
  claimResponse: Reference
}

"A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement."
type Claim_Accident {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  date: date
  _date: Element
  type: CodeableConcept
  locationAddress: Address
  locationReference: Reference
}

"A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement."
type Claim_Item {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  sequence: positiveInt
  _sequence: Element
  "CareTeam members related to this service or product."
  careTeamSequence: [positiveInt]
  "Extensions for careTeamSequence"
  _careTeamSequence: [Element]
  "Diagnosis applicable for this service or product."
  diagnosisSequence: [positiveInt]
  "Extensions for diagnosisSequence"
  _diagnosisSequence: [Element]
  "Procedures applicable for this service or product."
  procedureSequence: [positiveInt]
  "Extensions for procedureSequence"
  _procedureSequence: [Element]
  "Exceptions, special conditions and supporting information applicable for this service or product."
  informationSequence: [positiveInt]
  "Extensions for informationSequence"
  _informationSequence: [Element]
  revenue: CodeableConcept
  category: CodeableConcept
  productOrService: CodeableConcept!
  "Item typification or modifiers codes to convey additional context for the product or service."
  modifier: [CodeableConcept]
  "Identifies the program under which this may be recovered."
  programCode: [CodeableConcept]
  servicedDate: query_resourceById_oneOf_20_item_items_servicedDate
  _servicedDate: Element
  servicedPeriod: Period
  locationCodeableConcept: CodeableConcept
  locationAddress: Address
  locationReference: Reference
  quantity: Quantity
  unitPrice: Money
  factor: decimal
  _factor: Element
  net: Money
  "Unique Device Identifiers associated with this line item."
  udi: [Reference]
  bodySite: CodeableConcept
  "A region or surface of the bodySite, e.g. limb region or tooth surface(s)."
  subSite: [CodeableConcept]
  "The Encounters during which this Claim was created or to which the creation of this record is tightly associated."
  encounter: [Reference]
  "A claim detail line. Either a simple (a product or service) or a 'group' of sub-details which are simple items."
  detail: [Claim_Detail]
}

"The date or dates when the service or product was supplied, performed or completed."
scalar query_resourceById_oneOf_20_item_items_servicedDate

"A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement."
type Claim_Detail {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  sequence: positiveInt
  _sequence: Element
  revenue: CodeableConcept
  category: CodeableConcept
  productOrService: CodeableConcept!
  "Item typification or modifiers codes to convey additional context for the product or service."
  modifier: [CodeableConcept]
  "Identifies the program under which this may be recovered."
  programCode: [CodeableConcept]
  quantity: Quantity
  unitPrice: Money
  factor: decimal
  _factor: Element
  net: Money
  "Unique Device Identifiers associated with this line item."
  udi: [Reference]
  "A claim detail line. Either a simple (a product or service) or a 'group' of sub-details which are simple items."
  subDetail: [Claim_SubDetail]
}

"A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement."
type Claim_SubDetail {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  sequence: positiveInt
  _sequence: Element
  revenue: CodeableConcept
  category: CodeableConcept
  productOrService: CodeableConcept!
  "Item typification or modifiers codes to convey additional context for the product or service."
  modifier: [CodeableConcept]
  "Identifies the program under which this may be recovered."
  programCode: [CodeableConcept]
  quantity: Quantity
  unitPrice: Money
  factor: decimal
  _factor: Element
  net: Money
  "Unique Device Identifiers associated with this line item."
  udi: [Reference]
}

"This resource provides the adjudication details from the processing of a Claim resource."
type ClaimResponse {
  resourceType: ClaimResponse_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "A unique identifier assigned to this claim response."
  identifier: [Identifier]
  status: code
  _status: Element
  type: CodeableConcept!
  subType: CodeableConcept
  use: code
  _use: Element
  patient: Reference!
  created: dateTime
  _created: Element
  insurer: Reference!
  requestor: Reference
  request: Reference
  outcome: code
  _outcome: Element
  disposition: string
  _disposition: Element
  preAuthRef: string
  _preAuthRef: Element
  preAuthPeriod: Period
  payeeType: CodeableConcept
  "A claim line. Either a simple (a product or service) or a 'group' of details which can also be a simple items or groups of sub-details."
  item: [ClaimResponse_Item]
  "The first-tier service adjudications for payor added product or service lines."
  addItem: [ClaimResponse_AddItem]
  "The adjudication results which are presented at the header level rather than at the line-item or add-item levels."
  adjudication: [ClaimResponse_Adjudication]
  "Categorized monetary totals for the adjudication."
  total: [ClaimResponse_Total]
  payment: ClaimResponse_Payment
  fundsReserve: CodeableConcept
  formCode: CodeableConcept
  form: Attachment
  "A note that describes or explains adjudication results in a human readable form."
  processNote: [ClaimResponse_ProcessNote]
  "Request for additional supporting or authorizing information."
  communicationRequest: [Reference]
  "Financial instruments for reimbursement for the health care products and services specified on the claim."
  insurance: [ClaimResponse_Insurance]
  "Errors encountered during the processing of the adjudication."
  error: [ClaimResponse_Error]
}

enum ClaimResponse_const {
  ClaimResponse
}

"This resource provides the adjudication details from the processing of a Claim resource."
type ClaimResponse_Item {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  itemSequence: positiveInt
  _itemSequence: Element
  "The numbers associated with notes below which apply to the adjudication of this item."
  noteNumber: [positiveInt]
  "Extensions for noteNumber"
  _noteNumber: [Element]
  "If this item is a group then the values here are a summary of the adjudication of the detail items. If this item is a simple product or service then this is the result of the adjudication of this item."
  adjudication: [ClaimResponse_Adjudication]!
  "A claim detail. Either a simple (a product or service) or a 'group' of sub-details which are simple items."
  detail: [ClaimResponse_Detail]
}

"This resource provides the adjudication details from the processing of a Claim resource."
type ClaimResponse_Adjudication {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  category: CodeableConcept!
  reason: CodeableConcept
  amount: Money
  value: decimal
  _value: Element
}

"This resource provides the adjudication details from the processing of a Claim resource."
type ClaimResponse_Detail {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  detailSequence: positiveInt
  _detailSequence: Element
  "The numbers associated with notes below which apply to the adjudication of this item."
  noteNumber: [positiveInt]
  "Extensions for noteNumber"
  _noteNumber: [Element]
  "The adjudication results."
  adjudication: [ClaimResponse_Adjudication]!
  "A sub-detail adjudication of a simple product or service."
  subDetail: [ClaimResponse_SubDetail]
}

"This resource provides the adjudication details from the processing of a Claim resource."
type ClaimResponse_SubDetail {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  subDetailSequence: positiveInt
  _subDetailSequence: Element
  "The numbers associated with notes below which apply to the adjudication of this item."
  noteNumber: [positiveInt]
  "Extensions for noteNumber"
  _noteNumber: [Element]
  "The adjudication results."
  adjudication: [ClaimResponse_Adjudication]
}

"This resource provides the adjudication details from the processing of a Claim resource."
type ClaimResponse_AddItem {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Claim items which this service line is intended to replace."
  itemSequence: [positiveInt]
  "Extensions for itemSequence"
  _itemSequence: [Element]
  "The sequence number of the details within the claim item which this line is intended to replace."
  detailSequence: [positiveInt]
  "Extensions for detailSequence"
  _detailSequence: [Element]
  "The sequence number of the sub-details within the details within the claim item which this line is intended to replace."
  subdetailSequence: [positiveInt]
  "Extensions for subdetailSequence"
  _subdetailSequence: [Element]
  "The providers who are authorized for the services rendered to the patient."
  provider: [Reference]
  productOrService: CodeableConcept!
  "Item typification or modifiers codes to convey additional context for the product or service."
  modifier: [CodeableConcept]
  "Identifies the program under which this may be recovered."
  programCode: [CodeableConcept]
  servicedDate: query_resourceById_oneOf_21_addItem_items_servicedDate
  _servicedDate: Element
  servicedPeriod: Period
  locationCodeableConcept: CodeableConcept
  locationAddress: Address
  locationReference: Reference
  quantity: Quantity
  unitPrice: Money
  factor: decimal
  _factor: Element
  net: Money
  bodySite: CodeableConcept
  "A region or surface of the bodySite, e.g. limb region or tooth surface(s)."
  subSite: [CodeableConcept]
  "The numbers associated with notes below which apply to the adjudication of this item."
  noteNumber: [positiveInt]
  "Extensions for noteNumber"
  _noteNumber: [Element]
  "The adjudication results."
  adjudication: [ClaimResponse_Adjudication]!
  "The second-tier service adjudications for payor added services."
  detail: [ClaimResponse_Detail1]
}

"The date or dates when the service or product was supplied, performed or completed."
scalar query_resourceById_oneOf_21_addItem_items_servicedDate

"This resource provides the adjudication details from the processing of a Claim resource."
type ClaimResponse_Detail1 {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  productOrService: CodeableConcept!
  "Item typification or modifiers codes to convey additional context for the product or service."
  modifier: [CodeableConcept]
  quantity: Quantity
  unitPrice: Money
  factor: decimal
  _factor: Element
  net: Money
  "The numbers associated with notes below which apply to the adjudication of this item."
  noteNumber: [positiveInt]
  "Extensions for noteNumber"
  _noteNumber: [Element]
  "The adjudication results."
  adjudication: [ClaimResponse_Adjudication]!
  "The third-tier service adjudications for payor added services."
  subDetail: [ClaimResponse_SubDetail1]
}

"This resource provides the adjudication details from the processing of a Claim resource."
type ClaimResponse_SubDetail1 {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  productOrService: CodeableConcept!
  "Item typification or modifiers codes to convey additional context for the product or service."
  modifier: [CodeableConcept]
  quantity: Quantity
  unitPrice: Money
  factor: decimal
  _factor: Element
  net: Money
  "The numbers associated with notes below which apply to the adjudication of this item."
  noteNumber: [positiveInt]
  "Extensions for noteNumber"
  _noteNumber: [Element]
  "The adjudication results."
  adjudication: [ClaimResponse_Adjudication]!
}

"This resource provides the adjudication details from the processing of a Claim resource."
type ClaimResponse_Total {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  category: CodeableConcept!
  amount: Money!
}

"This resource provides the adjudication details from the processing of a Claim resource."
type ClaimResponse_Payment {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: CodeableConcept!
  adjustment: Money
  adjustmentReason: CodeableConcept
  date: date
  _date: Element
  amount: Money!
  identifier: Identifier
}

"This resource provides the adjudication details from the processing of a Claim resource."
type ClaimResponse_ProcessNote {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  number: positiveInt
  _number: Element
  type: code
  _type: Element
  text: string
  _text: Element
  language: CodeableConcept
}

"This resource provides the adjudication details from the processing of a Claim resource."
type ClaimResponse_Insurance {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  sequence: positiveInt
  _sequence: Element
  focal: boolean
  _focal: Element
  coverage: Reference!
  businessArrangement: string
  _businessArrangement: Element
  claimResponse: Reference
}

"This resource provides the adjudication details from the processing of a Claim resource."
type ClaimResponse_Error {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  itemSequence: positiveInt
  _itemSequence: Element
  detailSequence: positiveInt
  _detailSequence: Element
  subDetailSequence: positiveInt
  _subDetailSequence: Element
  code: CodeableConcept!
}

"A record of a clinical assessment performed to determine what problem(s) may affect the patient and before planning the treatments or management strategies that are best to manage a patient's condition. Assessments are often 1:1 with a clinical consultation / encounter,  but this varies greatly depending on the clinical workflow. This resource is called \\"ClinicalImpression\\" rather than \\"ClinicalAssessment\\" to avoid confusion with the recording of assessment tools such as Apgar score."
type ClinicalImpression {
  resourceType: ClinicalImpression_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Business identifiers assigned to this clinical impression by the performer or other systems which remain constant as the resource is updated and propagates from server to server."
  identifier: [Identifier]
  status: code
  _status: Element
  statusReason: CodeableConcept
  code: CodeableConcept
  description: string
  _description: Element
  subject: Reference!
  encounter: Reference
  effectiveDateTime: query_resourceById_oneOf_22_effectiveDateTime
  _effectiveDateTime: Element
  effectivePeriod: Period
  date: dateTime
  _date: Element
  assessor: Reference
  previous: Reference
  "A list of the relevant problems/conditions for a patient."
  problem: [Reference]
  "One or more sets of investigations (signs, symptoms, etc.). The actual grouping of investigations varies greatly depending on the type and context of the assessment. These investigations may include data generated during the assessment process, or data previously generated and recorded that is pertinent to the outcomes."
  investigation: [ClinicalImpression_Investigation]
  "Reference to a specific published clinical protocol that was followed during this assessment, and/or that provides evidence in support of the diagnosis."
  protocol: [uri]
  "Extensions for protocol"
  _protocol: [Element]
  summary: string
  _summary: Element
  "Specific findings or diagnoses that were considered likely or relevant to ongoing treatment."
  finding: [ClinicalImpression_Finding]
  "Estimate of likely outcome."
  prognosisCodeableConcept: [CodeableConcept]
  "RiskAssessment expressing likely outcome."
  prognosisReference: [Reference]
  "Information supporting the clinical impression."
  supportingInfo: [Reference]
  "Commentary about the impression, typically recorded after the impression itself was made, though supplemental notes by the original author could also appear."
  note: [Annotation]
}

enum ClinicalImpression_const {
  ClinicalImpression
}

"The point in time or period over which the subject was assessed."
scalar query_resourceById_oneOf_22_effectiveDateTime

"A record of a clinical assessment performed to determine what problem(s) may affect the patient and before planning the treatments or management strategies that are best to manage a patient's condition. Assessments are often 1:1 with a clinical consultation / encounter,  but this varies greatly depending on the clinical workflow. This resource is called \\"ClinicalImpression\\" rather than \\"ClinicalAssessment\\" to avoid confusion with the recording of assessment tools such as Apgar score."
type ClinicalImpression_Investigation {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  code: CodeableConcept!
  "A record of a specific investigation that was undertaken."
  item: [Reference]
}

"A record of a clinical assessment performed to determine what problem(s) may affect the patient and before planning the treatments or management strategies that are best to manage a patient's condition. Assessments are often 1:1 with a clinical consultation / encounter,  but this varies greatly depending on the clinical workflow. This resource is called \\"ClinicalImpression\\" rather than \\"ClinicalAssessment\\" to avoid confusion with the recording of assessment tools such as Apgar score."
type ClinicalImpression_Finding {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  itemCodeableConcept: CodeableConcept
  itemReference: Reference
  basis: string
  _basis: Element
}

"A single issue - either an indication, contraindication, interaction or an undesirable effect for a medicinal product, medication, device or procedure."
type ClinicalUseDefinition {
  resourceType: ClinicalUseDefinition_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Business identifier for this issue."
  identifier: [Identifier]
  type: code
  _type: Element
  "A categorisation of the issue, primarily for dividing warnings into subject heading areas such as \\"Pregnancy and Lactation\\", \\"Overdose\\", \\"Effects on Ability to Drive and Use Machines\\"."
  category: [CodeableConcept]
  "The medication or procedure for which this is an indication."
  subject: [Reference]
  status: CodeableConcept
  contraindication: ClinicalUseDefinition_Contraindication
  indication: ClinicalUseDefinition_Indication
  interaction: ClinicalUseDefinition_Interaction
  "The population group to which this applies."
  population: [Reference]
  undesirableEffect: ClinicalUseDefinition_UndesirableEffect
  warning: ClinicalUseDefinition_Warning
}

enum ClinicalUseDefinition_const {
  ClinicalUseDefinition
}

"A single issue - either an indication, contraindication, interaction or an undesirable effect for a medicinal product, medication, device or procedure."
type ClinicalUseDefinition_Contraindication {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  diseaseSymptomProcedure: CodeableReference
  diseaseStatus: CodeableReference
  "A comorbidity (concurrent condition) or coinfection."
  comorbidity: [CodeableReference]
  "The indication which this is a contraidication for."
  indication: [Reference]
  "Information about the use of the medicinal product in relation to other therapies described as part of the contraindication."
  otherTherapy: [ClinicalUseDefinition_OtherTherapy]
}

"A single issue - either an indication, contraindication, interaction or an undesirable effect for a medicinal product, medication, device or procedure."
type ClinicalUseDefinition_OtherTherapy {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  relationshipType: CodeableConcept!
  therapy: CodeableReference!
}

"A single issue - either an indication, contraindication, interaction or an undesirable effect for a medicinal product, medication, device or procedure."
type ClinicalUseDefinition_Indication {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  diseaseSymptomProcedure: CodeableReference
  diseaseStatus: CodeableReference
  "A comorbidity (concurrent condition) or coinfection as part of the indication."
  comorbidity: [CodeableReference]
  intendedEffect: CodeableReference
  durationRange: Range
  durationString: query_resourceById_oneOf_23_indication_durationString
  _durationString: Element
  "An unwanted side effect or negative outcome that may happen if you use the drug (or other subject of this resource) for this indication."
  undesirableEffect: [Reference]
  "Information about the use of the medicinal product in relation to other therapies described as part of the indication."
  otherTherapy: [ClinicalUseDefinition_OtherTherapy]
}

"Timing or duration information, that may be associated with use with the indicated condition e.g. Adult patients suffering from myocardial infarction (from a few days until less than 35 days), ischaemic stroke (from 7 days until less than 6 months)."
scalar query_resourceById_oneOf_23_indication_durationString

"A single issue - either an indication, contraindication, interaction or an undesirable effect for a medicinal product, medication, device or procedure."
type ClinicalUseDefinition_Interaction {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "The specific medication, food, substance or laboratory test that interacts."
  interactant: [ClinicalUseDefinition_Interactant]
  type: CodeableConcept
  effect: CodeableReference
  incidence: CodeableConcept
  "Actions for managing the interaction."
  management: [CodeableConcept]
}

"A single issue - either an indication, contraindication, interaction or an undesirable effect for a medicinal product, medication, device or procedure."
type ClinicalUseDefinition_Interactant {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  itemReference: Reference
  itemCodeableConcept: CodeableConcept
}

"A single issue - either an indication, contraindication, interaction or an undesirable effect for a medicinal product, medication, device or procedure."
type ClinicalUseDefinition_UndesirableEffect {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  symptomConditionEffect: CodeableReference
  classification: CodeableConcept
  frequencyOfOccurrence: CodeableConcept
}

"A single issue - either an indication, contraindication, interaction or an undesirable effect for a medicinal product, medication, device or procedure."
type ClinicalUseDefinition_Warning {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  description: markdown
  _description: Element
  code: CodeableConcept
}

"The CodeSystem resource is used to declare the existence of and describe a code system or code system supplement and its key properties, and optionally define a part or all of its content."
type CodeSystem {
  resourceType: CodeSystem_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  url: uri
  _url: Element
  "A formal identifier that is used to identify this code system when it is represented in other formats, or referenced in a specification, model, design or an instance."
  identifier: [Identifier]
  version: string
  _version: Element
  name: string
  _name: Element
  title: string
  _title: Element
  status: code
  _status: Element
  experimental: boolean
  _experimental: Element
  date: dateTime
  _date: Element
  publisher: string
  _publisher: Element
  "Contact details to assist a user in finding and communicating with the publisher."
  contact: [ContactDetail]
  description: markdown
  _description: Element
  "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate code system instances."
  useContext: [UsageContext]
  "A legal or geographic region in which the code system is intended to be used."
  jurisdiction: [CodeableConcept]
  purpose: markdown
  _purpose: Element
  copyright: markdown
  _copyright: Element
  caseSensitive: boolean
  _caseSensitive: Element
  valueSet: canonical
  hierarchyMeaning: code
  _hierarchyMeaning: Element
  compositional: boolean
  _compositional: Element
  versionNeeded: boolean
  _versionNeeded: Element
  content: code
  _content: Element
  supplements: canonical
  count: unsignedInt
  _count: Element
  "A filter that can be used in a value set compose statement when selecting concepts using a filter."
  filter: [CodeSystem_Filter]
  "A property defines an additional slot through which additional information can be provided about a concept."
  property: [CodeSystem_Property]
  "Concepts that are in the code system. The concept definitions are inherently hierarchical, but the definitions must be consulted to determine what the meanings of the hierarchical relationships are."
  concept: [CodeSystem_Concept]
}

enum CodeSystem_const {
  CodeSystem
}

"The CodeSystem resource is used to declare the existence of and describe a code system or code system supplement and its key properties, and optionally define a part or all of its content."
type CodeSystem_Filter {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  code: code
  _code: Element
  description: string
  _description: Element
  "A list of operators that can be used with the filter."
  operator: [code]
  "Extensions for operator"
  _operator: [Element]
  value: string
  _value: Element
}

"The CodeSystem resource is used to declare the existence of and describe a code system or code system supplement and its key properties, and optionally define a part or all of its content."
type CodeSystem_Property {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  code: code
  _code: Element
  uri: uri
  _uri: Element
  description: string
  _description: Element
  type: code
  _type: Element
}

"The CodeSystem resource is used to declare the existence of and describe a code system or code system supplement and its key properties, and optionally define a part or all of its content."
type CodeSystem_Concept {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  code: code
  _code: Element
  display: string
  _display: Element
  definition: string
  _definition: Element
  "Additional representations for the concept - other languages, aliases, specialized purposes, used for particular purposes, etc."
  designation: [CodeSystem_Designation]
  "A property value for this concept."
  property: [CodeSystem_Property1]
  "Defines children of a concept to produce a hierarchy of concepts. The nature of the relationships is variable (is-a/contains/categorizes) - see hierarchyMeaning."
  concept: [CodeSystem_Concept]
}

"The CodeSystem resource is used to declare the existence of and describe a code system or code system supplement and its key properties, and optionally define a part or all of its content."
type CodeSystem_Designation {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  language: code
  _language: Element
  use: Coding
  value: string
  _value: Element
}

"The CodeSystem resource is used to declare the existence of and describe a code system or code system supplement and its key properties, and optionally define a part or all of its content."
type CodeSystem_Property1 {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  code: code
  _code: Element
  valueCode: query_resourceById_oneOf_24_concept_items_property_items_valueCode
  _valueCode: Element
  valueCoding: Coding
  valueString: query_resourceById_oneOf_24_concept_items_property_items_valueString
  _valueString: Element
  valueInteger: query_resourceById_oneOf_24_concept_items_property_items_valueInteger
  _valueInteger: Element
  "The value of this property."
  valueBoolean: Boolean
  _valueBoolean: Element
  valueDateTime: query_resourceById_oneOf_24_concept_items_property_items_valueDateTime
  _valueDateTime: Element
  valueDecimal: query_resourceById_oneOf_24_concept_items_property_items_valueDecimal
  _valueDecimal: Element
}

"The value of this property."
scalar query_resourceById_oneOf_24_concept_items_property_items_valueCode

"The value of this property."
scalar query_resourceById_oneOf_24_concept_items_property_items_valueString

"The value of this property."
scalar query_resourceById_oneOf_24_concept_items_property_items_valueInteger

"The value of this property."
scalar query_resourceById_oneOf_24_concept_items_property_items_valueDateTime

"The value of this property."
scalar query_resourceById_oneOf_24_concept_items_property_items_valueDecimal

"An occurrence of information being transmitted; e.g. an alert that was sent to a responsible provider, a public health agency that was notified about a reportable condition."
type Communication {
  resourceType: Communication_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Business identifiers assigned to this communication by the performer or other systems which remain constant as the resource is updated and propagates from server to server."
  identifier: [Identifier]
  "The URL pointing to a FHIR-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this Communication."
  instantiatesCanonical: [canonical]
  "The URL pointing to an externally maintained protocol, guideline, orderset or other definition that is adhered to in whole or in part by this Communication."
  instantiatesUri: [uri]
  "Extensions for instantiatesUri"
  _instantiatesUri: [Element]
  "An order, proposal or plan fulfilled in whole or in part by this Communication."
  basedOn: [Reference]
  "Part of this action."
  partOf: [Reference]
  "Prior communication that this communication is in response to."
  inResponseTo: [Reference]
  status: code
  _status: Element
  statusReason: CodeableConcept
  "The type of message conveyed such as alert, notification, reminder, instruction, etc."
  category: [CodeableConcept]
  priority: code
  _priority: Element
  "A channel that was used for this communication (e.g. email, fax)."
  medium: [CodeableConcept]
  subject: Reference
  topic: CodeableConcept
  "Other resources that pertain to this communication and to which this communication should be associated."
  about: [Reference]
  encounter: Reference
  sent: dateTime
  _sent: Element
  received: dateTime
  _received: Element
  "The entity (e.g. person, organization, clinical information system, care team or device) which was the target of the communication. If receipts need to be tracked by an individual, a separate resource instance will need to be created for each recipient.  Multiple recipient communications are intended where either receipts are not tracked (e.g. a mass mail-out) or a receipt is captured in aggregate (all emails confirmed received by a particular time)."
  recipient: [Reference]
  sender: Reference
  "The reason or justification for the communication."
  reasonCode: [CodeableConcept]
  "Indicates another resource whose existence justifies this communication."
  reasonReference: [Reference]
  "Text, attachment(s), or resource(s) that was communicated to the recipient."
  payload: [Communication_Payload]
  "Additional notes or commentary about the communication by the sender, receiver or other interested parties."
  note: [Annotation]
}

enum Communication_const {
  Communication
}

"An occurrence of information being transmitted; e.g. an alert that was sent to a responsible provider, a public health agency that was notified about a reportable condition."
type Communication_Payload {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  contentString: query_resourceById_oneOf_25_payload_items_contentString
  _contentString: Element
  contentAttachment: Attachment
  contentReference: Reference
}

"A communicated content (or for multi-part communications, one portion of the communication)."
scalar query_resourceById_oneOf_25_payload_items_contentString

"A request to convey information; e.g. the CDS system proposes that an alert be sent to a responsible provider, the CDS system proposes that the public health agency be notified about a reportable condition."
type CommunicationRequest {
  resourceType: CommunicationRequest_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Business identifiers assigned to this communication request by the performer or other systems which remain constant as the resource is updated and propagates from server to server."
  identifier: [Identifier]
  "A plan or proposal that is fulfilled in whole or in part by this request."
  basedOn: [Reference]
  "Completed or terminated request(s) whose function is taken by this new request."
  replaces: [Reference]
  groupIdentifier: Identifier
  status: code
  _status: Element
  statusReason: CodeableConcept
  "The type of message to be sent such as alert, notification, reminder, instruction, etc."
  category: [CodeableConcept]
  priority: code
  _priority: Element
  doNotPerform: boolean
  _doNotPerform: Element
  "A channel that was used for this communication (e.g. email, fax)."
  medium: [CodeableConcept]
  subject: Reference
  "Other resources that pertain to this communication request and to which this communication request should be associated."
  about: [Reference]
  encounter: Reference
  "Text, attachment(s), or resource(s) to be communicated to the recipient."
  payload: [CommunicationRequest_Payload]
  occurrenceDateTime: query_resourceById_oneOf_26_occurrenceDateTime
  _occurrenceDateTime: Element
  occurrencePeriod: Period
  authoredOn: dateTime
  _authoredOn: Element
  requester: Reference
  "The entity (e.g. person, organization, clinical information system, device, group, or care team) which is the intended target of the communication."
  recipient: [Reference]
  sender: Reference
  "Describes why the request is being made in coded or textual form."
  reasonCode: [CodeableConcept]
  "Indicates another resource whose existence justifies this request."
  reasonReference: [Reference]
  "Comments made about the request by the requester, sender, recipient, subject or other participants."
  note: [Annotation]
}

enum CommunicationRequest_const {
  CommunicationRequest
}

"A request to convey information; e.g. the CDS system proposes that an alert be sent to a responsible provider, the CDS system proposes that the public health agency be notified about a reportable condition."
type CommunicationRequest_Payload {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  contentString: query_resourceById_oneOf_26_payload_items_contentString
  _contentString: Element
  contentAttachment: Attachment
  contentReference: Reference
}

"The communicated content (or for multi-part communications, one portion of the communication)."
scalar query_resourceById_oneOf_26_payload_items_contentString

"The time when this communication is to occur."
scalar query_resourceById_oneOf_26_occurrenceDateTime

"A compartment definition that defines how resources are accessed on a server."
type CompartmentDefinition {
  resourceType: CompartmentDefinition_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  url: uri
  _url: Element
  version: string
  _version: Element
  name: string
  _name: Element
  status: code
  _status: Element
  experimental: boolean
  _experimental: Element
  date: dateTime
  _date: Element
  publisher: string
  _publisher: Element
  "Contact details to assist a user in finding and communicating with the publisher."
  contact: [ContactDetail]
  description: markdown
  _description: Element
  "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate compartment definition instances."
  useContext: [UsageContext]
  purpose: markdown
  _purpose: Element
  code: code
  _code: Element
  search: boolean
  _search: Element
  "Information about how a resource is related to the compartment."
  resource: [CompartmentDefinition_Resource]
}

enum CompartmentDefinition_const {
  CompartmentDefinition
}

"A compartment definition that defines how resources are accessed on a server."
type CompartmentDefinition_Resource {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  code: code
  _code: Element
  "The name of a search parameter that represents the link to the compartment. More than one may be listed because a resource may be linked to a compartment in more than one way,."
  param: [string]
  "Extensions for param"
  _param: [Element]
  documentation: string
  _documentation: Element
}

"A set of healthcare-related information that is assembled together into a single logical package that provides a single coherent statement of meaning, establishes its own context and that has clinical attestation with regard to who is making the statement. A Composition defines the structure and narrative content necessary for a document. However, a Composition alone does not constitute a document. Rather, the Composition must be the first entry in a Bundle where Bundle.type=document, and any other resources referenced from Composition must be included as subsequent entries in the Bundle (for example Patient, Practitioner, Encounter, etc.)."
type Composition {
  resourceType: Composition_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  identifier: Identifier
  status: code
  _status: Element
  type: CodeableConcept!
  "A categorization for the type of the composition - helps for indexing and searching. This may be implied by or derived from the code specified in the Composition Type."
  category: [CodeableConcept]
  subject: Reference
  encounter: Reference
  date: dateTime
  _date: Element
  "Identifies who is responsible for the information in the composition, not necessarily who typed it in."
  author: [Reference]!
  title: string
  _title: Element
  confidentiality: code
  _confidentiality: Element
  "A participant who has attested to the accuracy of the composition/document."
  attester: [Composition_Attester]
  custodian: Reference
  "Relationships that this composition has with other compositions or documents that already exist."
  relatesTo: [Composition_RelatesTo]
  "The clinical service, such as a colonoscopy or an appendectomy, being documented."
  event: [Composition_Event]
  "The root of the sections that make up the composition."
  section: [Composition_Section]
}

enum Composition_const {
  Composition
}

"A set of healthcare-related information that is assembled together into a single logical package that provides a single coherent statement of meaning, establishes its own context and that has clinical attestation with regard to who is making the statement. A Composition defines the structure and narrative content necessary for a document. However, a Composition alone does not constitute a document. Rather, the Composition must be the first entry in a Bundle where Bundle.type=document, and any other resources referenced from Composition must be included as subsequent entries in the Bundle (for example Patient, Practitioner, Encounter, etc.)."
type Composition_Attester {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  mode: code
  _mode: Element
  time: dateTime
  _time: Element
  party: Reference
}

"A set of healthcare-related information that is assembled together into a single logical package that provides a single coherent statement of meaning, establishes its own context and that has clinical attestation with regard to who is making the statement. A Composition defines the structure and narrative content necessary for a document. However, a Composition alone does not constitute a document. Rather, the Composition must be the first entry in a Bundle where Bundle.type=document, and any other resources referenced from Composition must be included as subsequent entries in the Bundle (for example Patient, Practitioner, Encounter, etc.)."
type Composition_RelatesTo {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  code: code
  _code: Element
  targetIdentifier: Identifier
  targetReference: Reference
}

"A set of healthcare-related information that is assembled together into a single logical package that provides a single coherent statement of meaning, establishes its own context and that has clinical attestation with regard to who is making the statement. A Composition defines the structure and narrative content necessary for a document. However, a Composition alone does not constitute a document. Rather, the Composition must be the first entry in a Bundle where Bundle.type=document, and any other resources referenced from Composition must be included as subsequent entries in the Bundle (for example Patient, Practitioner, Encounter, etc.)."
type Composition_Event {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "This list of codes represents the main clinical acts, such as a colonoscopy or an appendectomy, being documented. In some cases, the event is inherent in the typeCode, such as a \\"History and Physical Report\\" in which the procedure being documented is necessarily a \\"History and Physical\\" act."
  code: [CodeableConcept]
  period: Period
  "The description and/or reference of the event(s) being documented. For example, this could be used to document such a colonoscopy or an appendectomy."
  detail: [Reference]
}

"A set of healthcare-related information that is assembled together into a single logical package that provides a single coherent statement of meaning, establishes its own context and that has clinical attestation with regard to who is making the statement. A Composition defines the structure and narrative content necessary for a document. However, a Composition alone does not constitute a document. Rather, the Composition must be the first entry in a Bundle where Bundle.type=document, and any other resources referenced from Composition must be included as subsequent entries in the Bundle (for example Patient, Practitioner, Encounter, etc.)."
type Composition_Section {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  title: string
  _title: Element
  code: CodeableConcept
  "Identifies who is responsible for the information in this section, not necessarily who typed it in."
  author: [Reference]
  focus: Reference
  text: Narrative
  mode: code
  _mode: Element
  orderedBy: CodeableConcept
  "A reference to the actual resource from which the narrative in the section is derived."
  entry: [Reference]
  emptyReason: CodeableConcept
  "A nested sub-section within this section."
  section: [Composition_Section]
}

"A statement of relationships from one set of concepts to one or more other concepts - either concepts in code systems, or data element/data element concepts, or classes in class models."
type ConceptMap {
  resourceType: ConceptMap_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  url: uri
  _url: Element
  identifier: Identifier
  version: string
  _version: Element
  name: string
  _name: Element
  title: string
  _title: Element
  status: code
  _status: Element
  experimental: boolean
  _experimental: Element
  date: dateTime
  _date: Element
  publisher: string
  _publisher: Element
  "Contact details to assist a user in finding and communicating with the publisher."
  contact: [ContactDetail]
  description: markdown
  _description: Element
  "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate concept map instances."
  useContext: [UsageContext]
  "A legal or geographic region in which the concept map is intended to be used."
  jurisdiction: [CodeableConcept]
  purpose: markdown
  _purpose: Element
  copyright: markdown
  _copyright: Element
  sourceUri: query_resourceById_oneOf_29_sourceUri
  _sourceUri: Element
  sourceCanonical: query_resourceById_oneOf_29_sourceCanonical
  _sourceCanonical: Element
  targetUri: query_resourceById_oneOf_29_targetUri
  _targetUri: Element
  targetCanonical: query_resourceById_oneOf_29_targetCanonical
  _targetCanonical: Element
  "A group of mappings that all have the same source and target system."
  group: [ConceptMap_Group]
}

enum ConceptMap_const {
  ConceptMap
}

"Identifier for the source value set that contains the concepts that are being mapped and provides context for the mappings."
scalar query_resourceById_oneOf_29_sourceUri

"Identifier for the source value set that contains the concepts that are being mapped and provides context for the mappings."
scalar query_resourceById_oneOf_29_sourceCanonical

"The target value set provides context for the mappings. Note that the mapping is made between concepts, not between value sets, but the value set provides important context about how the concept mapping choices are made."
scalar query_resourceById_oneOf_29_targetUri

"The target value set provides context for the mappings. Note that the mapping is made between concepts, not between value sets, but the value set provides important context about how the concept mapping choices are made."
scalar query_resourceById_oneOf_29_targetCanonical

"A statement of relationships from one set of concepts to one or more other concepts - either concepts in code systems, or data element/data element concepts, or classes in class models."
type ConceptMap_Group {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  source: uri
  _source: Element
  sourceVersion: string
  _sourceVersion: Element
  target: uri
  _target: Element
  targetVersion: string
  _targetVersion: Element
  "Mappings for an individual concept in the source to one or more concepts in the target."
  element: [ConceptMap_Element]!
  unmapped: ConceptMap_Unmapped
}

"A statement of relationships from one set of concepts to one or more other concepts - either concepts in code systems, or data element/data element concepts, or classes in class models."
type ConceptMap_Element {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  code: code
  _code: Element
  display: string
  _display: Element
  "A concept from the target value set that this concept maps to."
  target: [ConceptMap_Target]
}

"A statement of relationships from one set of concepts to one or more other concepts - either concepts in code systems, or data element/data element concepts, or classes in class models."
type ConceptMap_Target {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  code: code
  _code: Element
  display: string
  _display: Element
  equivalence: code
  _equivalence: Element
  comment: string
  _comment: Element
  "A set of additional dependencies for this mapping to hold. This mapping is only applicable if the specified element can be resolved, and it has the specified value."
  dependsOn: [ConceptMap_DependsOn]
  "A set of additional outcomes from this mapping to other elements. To properly execute this mapping, the specified element must be mapped to some data element or source that is in context. The mapping may still be useful without a place for the additional data elements, but the equivalence cannot be relied on."
  product: [ConceptMap_DependsOn]
}

"A statement of relationships from one set of concepts to one or more other concepts - either concepts in code systems, or data element/data element concepts, or classes in class models."
type ConceptMap_DependsOn {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  property: uri
  _property: Element
  system: canonical
  value: string
  _value: Element
  display: string
  _display: Element
}

"A statement of relationships from one set of concepts to one or more other concepts - either concepts in code systems, or data element/data element concepts, or classes in class models."
type ConceptMap_Unmapped {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  mode: code
  _mode: Element
  code: code
  _code: Element
  display: string
  _display: Element
  url: canonical
}

"A clinical condition, problem, diagnosis, or other event, situation, issue, or clinical concept that has risen to a level of concern."
type Condition {
  resourceType: Condition_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Business identifiers assigned to this condition by the performer or other systems which remain constant as the resource is updated and propagates from server to server."
  identifier: [Identifier]
  clinicalStatus: CodeableConcept
  verificationStatus: CodeableConcept
  "A category assigned to the condition."
  category: [CodeableConcept]
  severity: CodeableConcept
  code: CodeableConcept
  "The anatomical location where this condition manifests itself."
  bodySite: [CodeableConcept]
  subject: Reference!
  encounter: Reference
  onsetDateTime: query_resourceById_oneOf_30_onsetDateTime
  _onsetDateTime: Element
  onsetAge: Age
  onsetPeriod: Period
  onsetRange: Range
  onsetString: query_resourceById_oneOf_30_onsetString
  _onsetString: Element
  abatementDateTime: query_resourceById_oneOf_30_abatementDateTime
  _abatementDateTime: Element
  abatementAge: Age
  abatementPeriod: Period
  abatementRange: Range
  abatementString: query_resourceById_oneOf_30_abatementString
  _abatementString: Element
  recordedDate: dateTime
  _recordedDate: Element
  recorder: Reference
  asserter: Reference
  "Clinical stage or grade of a condition. May include formal severity assessments."
  stage: [Condition_Stage]
  "Supporting evidence / manifestations that are the basis of the Condition's verification status, such as evidence that confirmed or refuted the condition."
  evidence: [Condition_Evidence]
  "Additional information about the Condition. This is a general notes/comments entry  for description of the Condition, its diagnosis and prognosis."
  note: [Annotation]
}

enum Condition_const {
  Condition
}

"Estimated or actual date or date-time  the condition began, in the opinion of the clinician."
scalar query_resourceById_oneOf_30_onsetDateTime

"Estimated or actual date or date-time  the condition began, in the opinion of the clinician."
scalar query_resourceById_oneOf_30_onsetString

"The date or estimated date that the condition resolved or went into remission. This is called \\"abatement\\" because of the many overloaded connotations associated with \\"remission\\" or \\"resolution\\" - Conditions are never really resolved, but they can abate."
scalar query_resourceById_oneOf_30_abatementDateTime

"The date or estimated date that the condition resolved or went into remission. This is called \\"abatement\\" because of the many overloaded connotations associated with \\"remission\\" or \\"resolution\\" - Conditions are never really resolved, but they can abate."
scalar query_resourceById_oneOf_30_abatementString

"A clinical condition, problem, diagnosis, or other event, situation, issue, or clinical concept that has risen to a level of concern."
type Condition_Stage {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  summary: CodeableConcept
  "Reference to a formal record of the evidence on which the staging assessment is based."
  assessment: [Reference]
  type: CodeableConcept
}

"A clinical condition, problem, diagnosis, or other event, situation, issue, or clinical concept that has risen to a level of concern."
type Condition_Evidence {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "A manifestation or symptom that led to the recording of this condition."
  code: [CodeableConcept]
  "Links to other relevant information, including pathology reports."
  detail: [Reference]
}

"A record of a healthcare consumer’s  choices, which permits or denies identified recipient(s) or recipient role(s) to perform one or more actions within a given policy context, for specific purposes and periods of time."
type Consent {
  resourceType: Consent_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Unique identifier for this copy of the Consent Statement."
  identifier: [Identifier]
  status: code
  _status: Element
  scope: CodeableConcept!
  "A classification of the type of consents found in the statement. This element supports indexing and retrieval of consent statements."
  category: [CodeableConcept]!
  patient: Reference
  dateTime: dateTime
  _dateTime: Element
  "Either the Grantor, which is the entity responsible for granting the rights listed in a Consent Directive or the Grantee, which is the entity responsible for complying with the Consent Directive, including any obligations or limitations on authorizations and enforcement of prohibitions."
  performer: [Reference]
  "The organization that manages the consent, and the framework within which it is executed."
  organization: [Reference]
  sourceAttachment: Attachment
  sourceReference: Reference
  "The references to the policies that are included in this consent scope. Policies may be organizational, but are often defined jurisdictionally, or in law."
  policy: [Consent_Policy]
  policyRule: CodeableConcept
  "Whether a treatment instruction (e.g. artificial respiration yes or no) was verified with the patient, his/her family or another authorized person."
  verification: [Consent_Verification]
  provision: Consent_Provision
}

enum Consent_const {
  Consent
}

"A record of a healthcare consumer’s  choices, which permits or denies identified recipient(s) or recipient role(s) to perform one or more actions within a given policy context, for specific purposes and periods of time."
type Consent_Policy {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  authority: uri
  _authority: Element
  uri: uri
  _uri: Element
}

"A record of a healthcare consumer’s  choices, which permits or denies identified recipient(s) or recipient role(s) to perform one or more actions within a given policy context, for specific purposes and periods of time."
type Consent_Verification {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  verified: boolean
  _verified: Element
  verifiedWith: Reference
  verificationDate: dateTime
  _verificationDate: Element
}

"A record of a healthcare consumer’s  choices, which permits or denies identified recipient(s) or recipient role(s) to perform one or more actions within a given policy context, for specific purposes and periods of time."
type Consent_Provision {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: code
  _type: Element
  period: Period
  "Who or what is controlled by this rule. Use group to identify a set of actors by some property they share (e.g. 'admitting officers')."
  actor: [Consent_Actor]
  "Actions controlled by this Rule."
  action: [CodeableConcept]
  "A security label, comprised of 0..* security label fields (Privacy tags), which define which resources are controlled by this exception."
  securityLabel: [Coding]
  "The context of the activities a user is taking - why the user is accessing the data - that are controlled by this rule."
  purpose: [Coding]
  "The class of information covered by this rule. The type can be a FHIR resource type, a profile on a type, or a CDA document, or some other type that indicates what sort of information the consent relates to."
  class: [Coding]
  "If this code is found in an instance, then the rule applies."
  code: [CodeableConcept]
  dataPeriod: Period
  "The resources controlled by this rule if specific resources are referenced."
  data: [Consent_Data]
  "Rules which provide exceptions to the base rule or subrules."
  provision: [Consent_Provision]
}

"A record of a healthcare consumer’s  choices, which permits or denies identified recipient(s) or recipient role(s) to perform one or more actions within a given policy context, for specific purposes and periods of time."
type Consent_Actor {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  role: CodeableConcept!
  reference: Reference!
}

"A record of a healthcare consumer’s  choices, which permits or denies identified recipient(s) or recipient role(s) to perform one or more actions within a given policy context, for specific purposes and periods of time."
type Consent_Data {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  meaning: code
  _meaning: Element
  reference: Reference!
}

"Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement."
type Contract {
  resourceType: Contract_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Unique identifier for this Contract or a derivative that references a Source Contract."
  identifier: [Identifier]
  url: uri
  _url: Element
  version: string
  _version: Element
  status: code
  _status: Element
  legalState: CodeableConcept
  instantiatesCanonical: Reference
  instantiatesUri: uri
  _instantiatesUri: Element
  contentDerivative: CodeableConcept
  issued: dateTime
  _issued: Element
  applies: Period
  expirationType: CodeableConcept
  "The target entity impacted by or of interest to parties to the agreement."
  subject: [Reference]
  "A formally or informally recognized grouping of people, principals, organizations, or jurisdictions formed for the purpose of achieving some form of collective action such as the promulgation, administration and enforcement of contracts and policies."
  authority: [Reference]
  "Recognized governance framework or system operating with a circumscribed scope in accordance with specified principles, policies, processes or procedures for managing rights, actions, or behaviors of parties or principals relative to resources."
  domain: [Reference]
  "Sites in which the contract is complied with,  exercised, or in force."
  site: [Reference]
  name: string
  _name: Element
  title: string
  _title: Element
  subtitle: string
  _subtitle: Element
  "Alternative representation of the title for this Contract definition, derivative, or instance in any legal state., e.g., a domain specific contract number related to legislation."
  alias: [string]
  "Extensions for alias"
  _alias: [Element]
  author: Reference
  scope: CodeableConcept
  topicCodeableConcept: CodeableConcept
  topicReference: Reference
  type: CodeableConcept
  "Sub-category for the Contract that distinguishes the kinds of systems that would be interested in the Contract within the context of the Contract's scope."
  subType: [CodeableConcept]
  contentDefinition: Contract_ContentDefinition
  "One or more Contract Provisions, which may be related and conveyed as a group, and may contain nested groups."
  term: [Contract_Term]
  "Information that may be needed by/relevant to the performer in their execution of this term action."
  supportingInfo: [Reference]
  "Links to Provenance records for past versions of this Contract definition, derivative, or instance, which identify key state transitions or updates that are likely to be relevant to a user looking at the current version of the Contract.  The Provence.entity indicates the target that was changed in the update. http://build.fhir.org/provenance-definitions.html#Provenance.entity."
  relevantHistory: [Reference]
  "Parties with legal standing in the Contract, including the principal parties, the grantor(s) and grantee(s), which are any person or organization bound by the contract, and any ancillary parties, which facilitate the execution of the contract such as a notary or witness."
  signer: [Contract_Signer]
  "The \\"patient friendly language\\" versionof the Contract in whole or in parts. \\"Patient friendly language\\" means the representation of the Contract and Contract Provisions in a manner that is readily accessible and understandable by a layperson in accordance with best practices for communication styles that ensure that those agreeing to or signing the Contract understand the roles, actions, obligations, responsibilities, and implication of the agreement."
  friendly: [Contract_Friendly]
  "List of Legal expressions or representations of this Contract."
  legal: [Contract_Legal]
  "List of Computable Policy Rule Language Representations of this Contract."
  rule: [Contract_Rule]
  legallyBindingAttachment: Attachment
  legallyBindingReference: Reference
}

enum Contract_const {
  Contract
}

"Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement."
type Contract_ContentDefinition {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: CodeableConcept!
  subType: CodeableConcept
  publisher: Reference
  publicationDate: dateTime
  _publicationDate: Element
  publicationStatus: code
  _publicationStatus: Element
  copyright: markdown
  _copyright: Element
}

"Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement."
type Contract_Term {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  identifier: Identifier
  issued: dateTime
  _issued: Element
  applies: Period
  topicCodeableConcept: CodeableConcept
  topicReference: Reference
  type: CodeableConcept
  subType: CodeableConcept
  text: string
  _text: Element
  "Security labels that protect the handling of information about the term and its elements, which may be specifically identified.."
  securityLabel: [Contract_SecurityLabel]
  offer: Contract_Offer!
  "Contract Term Asset List."
  asset: [Contract_Asset]
  "An actor taking a role in an activity for which it can be assigned some degree of responsibility for the activity taking place."
  action: [Contract_Action]
  "Nested group of Contract Provisions."
  group: [Contract_Term]
}

"Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement."
type Contract_SecurityLabel {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Number used to link this term or term element to the applicable Security Label."
  number: [unsignedInt]
  "Extensions for number"
  _number: [Element]
  classification: Coding!
  "Security label privacy tag that species the applicable privacy and security policies governing this term and/or term elements."
  category: [Coding]
  "Security label privacy tag that species the manner in which term and/or term elements are to be protected."
  control: [Coding]
}

"Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement."
type Contract_Offer {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Unique identifier for this particular Contract Provision."
  identifier: [Identifier]
  "Offer Recipient."
  party: [Contract_Party]
  topic: Reference
  type: CodeableConcept
  decision: CodeableConcept
  "How the decision about a Contract was conveyed."
  decisionMode: [CodeableConcept]
  "Response to offer text."
  answer: [Contract_Answer]
  text: string
  _text: Element
  "The id of the clause or question text of the offer in the referenced questionnaire/response."
  linkId: [string]
  "Extensions for linkId"
  _linkId: [Element]
  "Security labels that protects the offer."
  securityLabelNumber: [unsignedInt]
  "Extensions for securityLabelNumber"
  _securityLabelNumber: [Element]
}

"Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement."
type Contract_Party {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Participant in the offer."
  reference: [Reference]!
  role: CodeableConcept!
}

"Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement."
type Contract_Answer {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research."
  valueBoolean: Boolean
  _valueBoolean: Element
  valueDecimal: query_resourceById_oneOf_32_term_items_offer_answer_items_valueDecimal
  _valueDecimal: Element
  valueInteger: query_resourceById_oneOf_32_term_items_offer_answer_items_valueInteger
  _valueInteger: Element
  valueDate: query_resourceById_oneOf_32_term_items_offer_answer_items_valueDate
  _valueDate: Element
  valueDateTime: query_resourceById_oneOf_32_term_items_offer_answer_items_valueDateTime
  _valueDateTime: Element
  valueTime: query_resourceById_oneOf_32_term_items_offer_answer_items_valueTime
  _valueTime: Element
  valueString: query_resourceById_oneOf_32_term_items_offer_answer_items_valueString
  _valueString: Element
  valueUri: query_resourceById_oneOf_32_term_items_offer_answer_items_valueUri
  _valueUri: Element
  valueAttachment: Attachment
  valueCoding: Coding
  valueQuantity: Quantity
  valueReference: Reference
}

"Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research."
scalar query_resourceById_oneOf_32_term_items_offer_answer_items_valueDecimal

"Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research."
scalar query_resourceById_oneOf_32_term_items_offer_answer_items_valueInteger

"Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research."
scalar query_resourceById_oneOf_32_term_items_offer_answer_items_valueDate

"Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research."
scalar query_resourceById_oneOf_32_term_items_offer_answer_items_valueDateTime

"Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research."
scalar query_resourceById_oneOf_32_term_items_offer_answer_items_valueTime

"Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research."
scalar query_resourceById_oneOf_32_term_items_offer_answer_items_valueString

"Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research."
scalar query_resourceById_oneOf_32_term_items_offer_answer_items_valueUri

"Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement."
type Contract_Asset {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  scope: CodeableConcept
  "Target entity type about which the term may be concerned."
  type: [CodeableConcept]
  "Associated entities."
  typeReference: [Reference]
  "May be a subtype or part of an offered asset."
  subtype: [CodeableConcept]
  relationship: Coding
  "Circumstance of the asset."
  context: [Contract_Context]
  condition: string
  _condition: Element
  "Type of Asset availability for use or ownership."
  periodType: [CodeableConcept]
  "Asset relevant contractual time period."
  period: [Period]
  "Time period of asset use."
  usePeriod: [Period]
  text: string
  _text: Element
  "Id [identifier??] of the clause or question text about the asset in the referenced form or QuestionnaireResponse."
  linkId: [string]
  "Extensions for linkId"
  _linkId: [Element]
  "Response to assets."
  answer: [Contract_Answer]
  "Security labels that protects the asset."
  securityLabelNumber: [unsignedInt]
  "Extensions for securityLabelNumber"
  _securityLabelNumber: [Element]
  "Contract Valued Item List."
  valuedItem: [Contract_ValuedItem]
}

"Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement."
type Contract_Context {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  reference: Reference
  "Coded representation of the context generally or of the Referenced entity, such as the asset holder type or location."
  code: [CodeableConcept]
  text: string
  _text: Element
}

"Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement."
type Contract_ValuedItem {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  entityCodeableConcept: CodeableConcept
  entityReference: Reference
  identifier: Identifier
  effectiveTime: dateTime
  _effectiveTime: Element
  quantity: Quantity
  unitPrice: Money
  factor: decimal
  _factor: Element
  points: decimal
  _points: Element
  net: Money
  payment: string
  _payment: Element
  paymentDate: dateTime
  _paymentDate: Element
  responsible: Reference
  recipient: Reference
  "Id  of the clause or question text related to the context of this valuedItem in the referenced form or QuestionnaireResponse."
  linkId: [string]
  "Extensions for linkId"
  _linkId: [Element]
  "A set of security labels that define which terms are controlled by this condition."
  securityLabelNumber: [unsignedInt]
  "Extensions for securityLabelNumber"
  _securityLabelNumber: [Element]
}

"Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement."
type Contract_Action {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  doNotPerform: boolean
  _doNotPerform: Element
  type: CodeableConcept!
  "Entity of the action."
  subject: [Contract_Subject]
  intent: CodeableConcept!
  "Id [identifier??] of the clause or question text related to this action in the referenced form or QuestionnaireResponse."
  linkId: [string]
  "Extensions for linkId"
  _linkId: [Element]
  status: CodeableConcept!
  context: Reference
  "Id [identifier??] of the clause or question text related to the requester of this action in the referenced form or QuestionnaireResponse."
  contextLinkId: [string]
  "Extensions for contextLinkId"
  _contextLinkId: [Element]
  occurrenceDateTime: query_resourceById_oneOf_32_term_items_action_items_occurrenceDateTime
  _occurrenceDateTime: Element
  occurrencePeriod: Period
  occurrenceTiming: Timing
  "Who or what initiated the action and has responsibility for its activation."
  requester: [Reference]
  "Id [identifier??] of the clause or question text related to the requester of this action in the referenced form or QuestionnaireResponse."
  requesterLinkId: [string]
  "Extensions for requesterLinkId"
  _requesterLinkId: [Element]
  "The type of individual that is desired or required to perform or not perform the action."
  performerType: [CodeableConcept]
  performerRole: CodeableConcept
  performer: Reference
  "Id [identifier??] of the clause or question text related to the reason type or reference of this  action in the referenced form or QuestionnaireResponse."
  performerLinkId: [string]
  "Extensions for performerLinkId"
  _performerLinkId: [Element]
  "Rationale for the action to be performed or not performed. Describes why the action is permitted or prohibited."
  reasonCode: [CodeableConcept]
  "Indicates another resource whose existence justifies permitting or not permitting this action."
  reasonReference: [Reference]
  "Describes why the action is to be performed or not performed in textual form."
  reason: [string]
  "Extensions for reason"
  _reason: [Element]
  "Id [identifier??] of the clause or question text related to the reason type or reference of this  action in the referenced form or QuestionnaireResponse."
  reasonLinkId: [string]
  "Extensions for reasonLinkId"
  _reasonLinkId: [Element]
  "Comments made about the term action made by the requester, performer, subject or other participants."
  note: [Annotation]
  "Security labels that protects the action."
  securityLabelNumber: [unsignedInt]
  "Extensions for securityLabelNumber"
  _securityLabelNumber: [Element]
}

"Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement."
type Contract_Subject {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "The entity the action is performed or not performed on or for."
  reference: [Reference]!
  role: CodeableConcept
}

"When action happens."
scalar query_resourceById_oneOf_32_term_items_action_items_occurrenceDateTime

"Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement."
type Contract_Signer {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: Coding!
  party: Reference!
  "Legally binding Contract DSIG signature contents in Base64."
  signature: [Signature]!
}

"Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement."
type Contract_Friendly {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  contentAttachment: Attachment
  contentReference: Reference
}

"Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement."
type Contract_Legal {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  contentAttachment: Attachment
  contentReference: Reference
}

"Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement."
type Contract_Rule {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  contentAttachment: Attachment
  contentReference: Reference
}

"Financial instrument which may be used to reimburse or pay for health care products and services. Includes both insurance and self-payment."
type Coverage {
  resourceType: Coverage_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "A unique identifier assigned to this coverage."
  identifier: [Identifier]
  status: code
  _status: Element
  type: CodeableConcept
  policyHolder: Reference
  subscriber: Reference
  subscriberId: string
  _subscriberId: Element
  beneficiary: Reference!
  dependent: string
  _dependent: Element
  relationship: CodeableConcept
  period: Period
  "The program or plan underwriter or payor including both insurance and non-insurance agreements, such as patient-pay agreements."
  payor: [Reference]!
  "A suite of underwriter specific classifiers."
  class: [Coverage_Class]
  order: positiveInt
  _order: Element
  network: string
  _network: Element
  "A suite of codes indicating the cost category and associated amount which have been detailed in the policy and may have been  included on the health card."
  costToBeneficiary: [Coverage_CostToBeneficiary]
  subrogation: boolean
  _subrogation: Element
  "The policy(s) which constitute this insurance coverage."
  contract: [Reference]
}

enum Coverage_const {
  Coverage
}

"Financial instrument which may be used to reimburse or pay for health care products and services. Includes both insurance and self-payment."
type Coverage_Class {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: CodeableConcept!
  value: string
  _value: Element
  name: string
  _name: Element
}

"Financial instrument which may be used to reimburse or pay for health care products and services. Includes both insurance and self-payment."
type Coverage_CostToBeneficiary {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: CodeableConcept
  valueQuantity: Quantity
  valueMoney: Money
  "A suite of codes indicating exceptions or reductions to patient costs and their effective periods."
  exception: [Coverage_Exception]
}

"Financial instrument which may be used to reimburse or pay for health care products and services. Includes both insurance and self-payment."
type Coverage_Exception {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: CodeableConcept!
  period: Period
}

"The CoverageEligibilityRequest provides patient and insurance coverage information to an insurer for them to respond, in the form of an CoverageEligibilityResponse, with information regarding whether the stated coverage is valid and in-force and optionally to provide the insurance details of the policy."
type CoverageEligibilityRequest {
  resourceType: CoverageEligibilityRequest_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "A unique identifier assigned to this coverage eligiblity request."
  identifier: [Identifier]
  status: code
  _status: Element
  priority: CodeableConcept
  "Code to specify whether requesting: prior authorization requirements for some service categories or billing codes; benefits for coverages specified or discovered; discovery and return of coverages for the patient; and/or validation that the specified coverage is in-force at the date/period specified or 'now' if not specified."
  purpose: [code]
  "Extensions for purpose"
  _purpose: [Element]
  patient: Reference!
  servicedDate: query_resourceById_oneOf_34_servicedDate
  _servicedDate: Element
  servicedPeriod: Period
  created: dateTime
  _created: Element
  enterer: Reference
  provider: Reference
  insurer: Reference!
  facility: Reference
  "Additional information codes regarding exceptions, special considerations, the condition, situation, prior or concurrent issues."
  supportingInfo: [CoverageEligibilityRequest_SupportingInfo]
  "Financial instruments for reimbursement for the health care products and services."
  insurance: [CoverageEligibilityRequest_Insurance]
  "Service categories or billable services for which benefit details and/or an authorization prior to service delivery may be required by the payor."
  item: [CoverageEligibilityRequest_Item]
}

enum CoverageEligibilityRequest_const {
  CoverageEligibilityRequest
}

"The date or dates when the enclosed suite of services were performed or completed."
scalar query_resourceById_oneOf_34_servicedDate

"The CoverageEligibilityRequest provides patient and insurance coverage information to an insurer for them to respond, in the form of an CoverageEligibilityResponse, with information regarding whether the stated coverage is valid and in-force and optionally to provide the insurance details of the policy."
type CoverageEligibilityRequest_SupportingInfo {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  sequence: positiveInt
  _sequence: Element
  information: Reference!
  appliesToAll: boolean
  _appliesToAll: Element
}

"The CoverageEligibilityRequest provides patient and insurance coverage information to an insurer for them to respond, in the form of an CoverageEligibilityResponse, with information regarding whether the stated coverage is valid and in-force and optionally to provide the insurance details of the policy."
type CoverageEligibilityRequest_Insurance {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  focal: boolean
  _focal: Element
  coverage: Reference!
  businessArrangement: string
  _businessArrangement: Element
}

"The CoverageEligibilityRequest provides patient and insurance coverage information to an insurer for them to respond, in the form of an CoverageEligibilityResponse, with information regarding whether the stated coverage is valid and in-force and optionally to provide the insurance details of the policy."
type CoverageEligibilityRequest_Item {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Exceptions, special conditions and supporting information applicable for this service or product line."
  supportingInfoSequence: [positiveInt]
  "Extensions for supportingInfoSequence"
  _supportingInfoSequence: [Element]
  category: CodeableConcept
  productOrService: CodeableConcept
  "Item typification or modifiers codes to convey additional context for the product or service."
  modifier: [CodeableConcept]
  provider: Reference
  quantity: Quantity
  unitPrice: Money
  facility: Reference
  "Patient diagnosis for which care is sought."
  diagnosis: [CoverageEligibilityRequest_Diagnosis]
  "The plan/proposal/order describing the proposed service in detail."
  detail: [Reference]
}

"The CoverageEligibilityRequest provides patient and insurance coverage information to an insurer for them to respond, in the form of an CoverageEligibilityResponse, with information regarding whether the stated coverage is valid and in-force and optionally to provide the insurance details of the policy."
type CoverageEligibilityRequest_Diagnosis {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  diagnosisCodeableConcept: CodeableConcept
  diagnosisReference: Reference
}

"This resource provides eligibility and plan details from the processing of an CoverageEligibilityRequest resource."
type CoverageEligibilityResponse {
  resourceType: CoverageEligibilityResponse_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "A unique identifier assigned to this coverage eligiblity request."
  identifier: [Identifier]
  status: code
  _status: Element
  "Code to specify whether requesting: prior authorization requirements for some service categories or billing codes; benefits for coverages specified or discovered; discovery and return of coverages for the patient; and/or validation that the specified coverage is in-force at the date/period specified or 'now' if not specified."
  purpose: [code]
  "Extensions for purpose"
  _purpose: [Element]
  patient: Reference!
  servicedDate: query_resourceById_oneOf_35_servicedDate
  _servicedDate: Element
  servicedPeriod: Period
  created: dateTime
  _created: Element
  requestor: Reference
  request: Reference!
  outcome: code
  _outcome: Element
  disposition: string
  _disposition: Element
  insurer: Reference!
  "Financial instruments for reimbursement for the health care products and services."
  insurance: [CoverageEligibilityResponse_Insurance]
  preAuthRef: string
  _preAuthRef: Element
  form: CodeableConcept
  "Errors encountered during the processing of the request."
  error: [CoverageEligibilityResponse_Error]
}

enum CoverageEligibilityResponse_const {
  CoverageEligibilityResponse
}

"The date or dates when the enclosed suite of services were performed or completed."
scalar query_resourceById_oneOf_35_servicedDate

"This resource provides eligibility and plan details from the processing of an CoverageEligibilityRequest resource."
type CoverageEligibilityResponse_Insurance {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  coverage: Reference!
  inforce: boolean
  _inforce: Element
  benefitPeriod: Period
  "Benefits and optionally current balances, and authorization details by category or service."
  item: [CoverageEligibilityResponse_Item]
}

"This resource provides eligibility and plan details from the processing of an CoverageEligibilityRequest resource."
type CoverageEligibilityResponse_Item {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  category: CodeableConcept
  productOrService: CodeableConcept
  "Item typification or modifiers codes to convey additional context for the product or service."
  modifier: [CodeableConcept]
  provider: Reference
  excluded: boolean
  _excluded: Element
  name: string
  _name: Element
  description: string
  _description: Element
  network: CodeableConcept
  unit: CodeableConcept
  term: CodeableConcept
  "Benefits used to date."
  benefit: [CoverageEligibilityResponse_Benefit]
  authorizationRequired: boolean
  _authorizationRequired: Element
  "Codes or comments regarding information or actions associated with the preauthorization."
  authorizationSupporting: [CodeableConcept]
  authorizationUrl: uri
  _authorizationUrl: Element
}

"This resource provides eligibility and plan details from the processing of an CoverageEligibilityRequest resource."
type CoverageEligibilityResponse_Benefit {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: CodeableConcept!
  allowedUnsignedInt: query_resourceById_oneOf_35_insurance_items_item_items_benefit_items_allowedUnsignedInt
  _allowedUnsignedInt: Element
  allowedString: query_resourceById_oneOf_35_insurance_items_item_items_benefit_items_allowedString
  _allowedString: Element
  allowedMoney: Money
  usedUnsignedInt: query_resourceById_oneOf_35_insurance_items_item_items_benefit_items_usedUnsignedInt
  _usedUnsignedInt: Element
  usedString: query_resourceById_oneOf_35_insurance_items_item_items_benefit_items_usedString
  _usedString: Element
  usedMoney: Money
}

"The quantity of the benefit which is permitted under the coverage."
scalar query_resourceById_oneOf_35_insurance_items_item_items_benefit_items_allowedUnsignedInt

"The quantity of the benefit which is permitted under the coverage."
scalar query_resourceById_oneOf_35_insurance_items_item_items_benefit_items_allowedString

"The quantity of the benefit which have been consumed to date."
scalar query_resourceById_oneOf_35_insurance_items_item_items_benefit_items_usedUnsignedInt

"The quantity of the benefit which have been consumed to date."
scalar query_resourceById_oneOf_35_insurance_items_item_items_benefit_items_usedString

"This resource provides eligibility and plan details from the processing of an CoverageEligibilityRequest resource."
type CoverageEligibilityResponse_Error {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  code: CodeableConcept!
}

"Indicates an actual or potential clinical issue with or between one or more active or proposed clinical actions for a patient; e.g. Drug-drug interaction, Ineffective treatment frequency, Procedure-condition conflict, etc."
type DetectedIssue {
  resourceType: DetectedIssue_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Business identifier associated with the detected issue record."
  identifier: [Identifier]
  status: code
  _status: Element
  code: CodeableConcept
  severity: code
  _severity: Element
  patient: Reference
  identifiedDateTime: query_resourceById_oneOf_36_identifiedDateTime
  _identifiedDateTime: Element
  identifiedPeriod: Period
  author: Reference
  "Indicates the resource representing the current activity or proposed activity that is potentially problematic."
  implicated: [Reference]
  "Supporting evidence or manifestations that provide the basis for identifying the detected issue such as a GuidanceResponse or MeasureReport."
  evidence: [DetectedIssue_Evidence]
  detail: string
  _detail: Element
  reference: uri
  _reference: Element
  "Indicates an action that has been taken or is committed to reduce or eliminate the likelihood of the risk identified by the detected issue from manifesting.  Can also reflect an observation of known mitigating factors that may reduce/eliminate the need for any action."
  mitigation: [DetectedIssue_Mitigation]
}

enum DetectedIssue_const {
  DetectedIssue
}

"The date or period when the detected issue was initially identified."
scalar query_resourceById_oneOf_36_identifiedDateTime

"Indicates an actual or potential clinical issue with or between one or more active or proposed clinical actions for a patient; e.g. Drug-drug interaction, Ineffective treatment frequency, Procedure-condition conflict, etc."
type DetectedIssue_Evidence {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "A manifestation that led to the recording of this detected issue."
  code: [CodeableConcept]
  "Links to resources that constitute evidence for the detected issue such as a GuidanceResponse or MeasureReport."
  detail: [Reference]
}

"Indicates an actual or potential clinical issue with or between one or more active or proposed clinical actions for a patient; e.g. Drug-drug interaction, Ineffective treatment frequency, Procedure-condition conflict, etc."
type DetectedIssue_Mitigation {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  action: CodeableConcept!
  date: dateTime
  _date: Element
  author: Reference
}

"A type of a manufactured item that is used in the provision of healthcare without being substantially changed through that activity. The device may be a medical or non-medical device."
type Device {
  resourceType: Device_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Unique instance identifiers assigned to a device by manufacturers other organizations or owners."
  identifier: [Identifier]
  definition: Reference
  "Unique device identifier (UDI) assigned to device label or package.  Note that the Device may include multiple udiCarriers as it either may include just the udiCarrier for the jurisdiction it is sold, or for multiple jurisdictions it could have been sold."
  udiCarrier: [Device_UdiCarrier]
  status: code
  _status: Element
  "Reason for the dtatus of the Device availability."
  statusReason: [CodeableConcept]
  distinctIdentifier: string
  _distinctIdentifier: Element
  manufacturer: string
  _manufacturer: Element
  manufactureDate: dateTime
  _manufactureDate: Element
  expirationDate: dateTime
  _expirationDate: Element
  lotNumber: string
  _lotNumber: Element
  serialNumber: string
  _serialNumber: Element
  "This represents the manufacturer's name of the device as provided by the device, from a UDI label, or by a person describing the Device.  This typically would be used when a person provides the name(s) or when the device represents one of the names available from DeviceDefinition."
  deviceName: [Device_DeviceName]
  modelNumber: string
  _modelNumber: Element
  partNumber: string
  _partNumber: Element
  type: CodeableConcept
  "The capabilities supported on a  device, the standards to which the device conforms for a particular purpose, and used for the communication."
  specialization: [Device_Specialization]
  "The actual design of the device or software version running on the device."
  version: [Device_Version]
  "The actual configuration settings of a device as it actually operates, e.g., regulation status, time properties."
  property: [Device_Property]
  patient: Reference
  owner: Reference
  "Contact details for an organization or a particular human that is responsible for the device."
  contact: [ContactPoint]
  location: Reference
  url: uri
  _url: Element
  "Descriptive information, usage information or implantation information that is not captured in an existing element."
  note: [Annotation]
  "Provides additional safety characteristics about a medical device.  For example devices containing latex."
  safety: [CodeableConcept]
  parent: Reference
}

enum Device_const {
  Device
}

"A type of a manufactured item that is used in the provision of healthcare without being substantially changed through that activity. The device may be a medical or non-medical device."
type Device_UdiCarrier {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  deviceIdentifier: string
  _deviceIdentifier: Element
  issuer: uri
  _issuer: Element
  jurisdiction: uri
  _jurisdiction: Element
  "A stream of bytes"
  carrierAIDC: String
  _carrierAIDC: Element
  carrierHRF: string
  _carrierHRF: Element
  entryType: code
  _entryType: Element
}

"A type of a manufactured item that is used in the provision of healthcare without being substantially changed through that activity. The device may be a medical or non-medical device."
type Device_DeviceName {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  name: string
  _name: Element
  type: code
  _type: Element
}

"A type of a manufactured item that is used in the provision of healthcare without being substantially changed through that activity. The device may be a medical or non-medical device."
type Device_Specialization {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  systemType: CodeableConcept!
  version: string
  _version: Element
}

"A type of a manufactured item that is used in the provision of healthcare without being substantially changed through that activity. The device may be a medical or non-medical device."
type Device_Version {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: CodeableConcept
  component: Identifier
  value: string
  _value: Element
}

"A type of a manufactured item that is used in the provision of healthcare without being substantially changed through that activity. The device may be a medical or non-medical device."
type Device_Property {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: CodeableConcept!
  "Property value as a quantity."
  valueQuantity: [Quantity]
  "Property value as a code, e.g., NTP4 (synced to NTP)."
  valueCode: [CodeableConcept]
}

"The characteristics, operational status and capabilities of a medical-related component of a medical device."
type DeviceDefinition {
  resourceType: DeviceDefinition_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Unique instance identifiers assigned to a device by the software, manufacturers, other organizations or owners. For example: handle ID."
  identifier: [Identifier]
  "Unique device identifier (UDI) assigned to device label or package.  Note that the Device may include multiple udiCarriers as it either may include just the udiCarrier for the jurisdiction it is sold, or for multiple jurisdictions it could have been sold."
  udiDeviceIdentifier: [DeviceDefinition_UdiDeviceIdentifier]
  manufacturerString: query_resourceById_oneOf_38_manufacturerString
  _manufacturerString: Element
  manufacturerReference: Reference
  "A name given to the device to identify it."
  deviceName: [DeviceDefinition_DeviceName]
  modelNumber: string
  _modelNumber: Element
  type: CodeableConcept
  "The capabilities supported on a  device, the standards to which the device conforms for a particular purpose, and used for the communication."
  specialization: [DeviceDefinition_Specialization]
  "The available versions of the device, e.g., software versions."
  version: [string]
  "Extensions for version"
  _version: [Element]
  "Safety characteristics of the device."
  safety: [CodeableConcept]
  "Shelf Life and storage information."
  shelfLifeStorage: [ProductShelfLife]
  physicalCharacteristics: ProdCharacteristic
  "Language code for the human-readable text strings produced by the device (all supported)."
  languageCode: [CodeableConcept]
  "Device capabilities."
  capability: [DeviceDefinition_Capability]
  "The actual configuration settings of a device as it actually operates, e.g., regulation status, time properties."
  property: [DeviceDefinition_Property]
  owner: Reference
  "Contact details for an organization or a particular human that is responsible for the device."
  contact: [ContactPoint]
  url: uri
  _url: Element
  onlineInformation: uri
  _onlineInformation: Element
  "Descriptive information, usage information or implantation information that is not captured in an existing element."
  note: [Annotation]
  quantity: Quantity
  parentDevice: Reference
  "A substance used to create the material(s) of which the device is made."
  material: [DeviceDefinition_Material]
}

enum DeviceDefinition_const {
  DeviceDefinition
}

"The characteristics, operational status and capabilities of a medical-related component of a medical device."
type DeviceDefinition_UdiDeviceIdentifier {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  deviceIdentifier: string
  _deviceIdentifier: Element
  issuer: uri
  _issuer: Element
  jurisdiction: uri
  _jurisdiction: Element
}

"A name of the manufacturer."
scalar query_resourceById_oneOf_38_manufacturerString

"The characteristics, operational status and capabilities of a medical-related component of a medical device."
type DeviceDefinition_DeviceName {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  name: string
  _name: Element
  type: code
  _type: Element
}

"The characteristics, operational status and capabilities of a medical-related component of a medical device."
type DeviceDefinition_Specialization {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  systemType: string
  _systemType: Element
  version: string
  _version: Element
}

"The shelf-life and storage information for a medicinal product item or container can be described using this class."
type ProductShelfLife {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  identifier: Identifier
  type: CodeableConcept!
  period: Quantity!
  "Special precautions for storage, if any, can be specified using an appropriate controlled vocabulary The controlled term and the controlled term identifier shall be specified."
  specialPrecautionsForStorage: [CodeableConcept]
}

"The marketing status describes the date when a medicinal product is actually put on the market or the date as of which it is no longer available."
type ProdCharacteristic {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  height: Quantity
  width: Quantity
  depth: Quantity
  weight: Quantity
  nominalVolume: Quantity
  externalDiameter: Quantity
  shape: string
  _shape: Element
  "Where applicable, the color can be specified An appropriate controlled vocabulary shall be used The term and the term identifier shall be used."
  color: [string]
  "Extensions for color"
  _color: [Element]
  "Where applicable, the imprint can be specified as text."
  imprint: [string]
  "Extensions for imprint"
  _imprint: [Element]
  "Where applicable, the image can be provided The format of the image attachment shall be specified by regional implementations."
  image: [Attachment]
  scoring: CodeableConcept
}

"The characteristics, operational status and capabilities of a medical-related component of a medical device."
type DeviceDefinition_Capability {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: CodeableConcept!
  "Description of capability."
  description: [CodeableConcept]
}

"The characteristics, operational status and capabilities of a medical-related component of a medical device."
type DeviceDefinition_Property {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: CodeableConcept!
  "Property value as a quantity."
  valueQuantity: [Quantity]
  "Property value as a code, e.g., NTP4 (synced to NTP)."
  valueCode: [CodeableConcept]
}

"The characteristics, operational status and capabilities of a medical-related component of a medical device."
type DeviceDefinition_Material {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  substance: CodeableConcept!
  alternate: boolean
  _alternate: Element
  allergenicIndicator: boolean
  _allergenicIndicator: Element
}

"Describes a measurement, calculation or setting capability of a medical device."
type DeviceMetric {
  resourceType: DeviceMetric_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Unique instance identifiers assigned to a device by the device or gateway software, manufacturers, other organizations or owners. For example: handle ID."
  identifier: [Identifier]
  type: CodeableConcept!
  unit: CodeableConcept
  source: Reference
  parent: Reference
  operationalStatus: code
  _operationalStatus: Element
  color: code
  _color: Element
  category: code
  _category: Element
  measurementPeriod: Timing
  "Describes the calibrations that have been performed or that are required to be performed."
  calibration: [DeviceMetric_Calibration]
}

enum DeviceMetric_const {
  DeviceMetric
}

"Describes a measurement, calculation or setting capability of a medical device."
type DeviceMetric_Calibration {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: code
  _type: Element
  state: code
  _state: Element
  time: instant
  _time: Element
}

"Represents a request for a patient to employ a medical device. The device may be an implantable device, or an external assistive device, such as a walker."
type DeviceRequest {
  resourceType: DeviceRequest_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Identifiers assigned to this order by the orderer or by the receiver."
  identifier: [Identifier]
  "The URL pointing to a FHIR-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this DeviceRequest."
  instantiatesCanonical: [canonical]
  "The URL pointing to an externally maintained protocol, guideline, orderset or other definition that is adhered to in whole or in part by this DeviceRequest."
  instantiatesUri: [uri]
  "Extensions for instantiatesUri"
  _instantiatesUri: [Element]
  "Plan/proposal/order fulfilled by this request."
  basedOn: [Reference]
  "The request takes the place of the referenced completed or terminated request(s)."
  priorRequest: [Reference]
  groupIdentifier: Identifier
  status: code
  _status: Element
  intent: code
  _intent: Element
  priority: code
  _priority: Element
  codeReference: Reference
  codeCodeableConcept: CodeableConcept
  "Specific parameters for the ordered item.  For example, the prism value for lenses."
  parameter: [DeviceRequest_Parameter]
  subject: Reference!
  encounter: Reference
  occurrenceDateTime: query_resourceById_oneOf_40_occurrenceDateTime
  _occurrenceDateTime: Element
  occurrencePeriod: Period
  occurrenceTiming: Timing
  authoredOn: dateTime
  _authoredOn: Element
  requester: Reference
  performerType: CodeableConcept
  performer: Reference
  "Reason or justification for the use of this device."
  reasonCode: [CodeableConcept]
  "Reason or justification for the use of this device."
  reasonReference: [Reference]
  "Insurance plans, coverage extensions, pre-authorizations and/or pre-determinations that may be required for delivering the requested service."
  insurance: [Reference]
  "Additional clinical information about the patient that may influence the request fulfilment.  For example, this may include where on the subject's body the device will be used (i.e. the target site)."
  supportingInfo: [Reference]
  "Details about this request that were not represented at all or sufficiently in one of the attributes provided in a class. These may include for example a comment, an instruction, or a note associated with the statement."
  note: [Annotation]
  "Key events in the history of the request."
  relevantHistory: [Reference]
}

enum DeviceRequest_const {
  DeviceRequest
}

"Represents a request for a patient to employ a medical device. The device may be an implantable device, or an external assistive device, such as a walker."
type DeviceRequest_Parameter {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  code: CodeableConcept
  valueCodeableConcept: CodeableConcept
  valueQuantity: Quantity
  valueRange: Range
  "The value of the device detail."
  valueBoolean: Boolean
  _valueBoolean: Element
}

"The timing schedule for the use of the device. The Schedule data type allows many different expressions, for example. \\"Every 8 hours\\"; \\"Three times a day\\"; \\"1/2 an hour before breakfast for 10 days from 23-Dec 2011:\\"; \\"15 Oct 2013, 17 Oct 2013 and 1 Nov 2013\\"."
scalar query_resourceById_oneOf_40_occurrenceDateTime

"A record of a device being used by a patient where the record is the result of a report from the patient or another clinician."
type DeviceUseStatement {
  resourceType: DeviceUseStatement_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "An external identifier for this statement such as an IRI."
  identifier: [Identifier]
  "A plan, proposal or order that is fulfilled in whole or in part by this DeviceUseStatement."
  basedOn: [Reference]
  status: code
  _status: Element
  subject: Reference!
  "Allows linking the DeviceUseStatement to the underlying Request, or to other information that supports or is used to derive the DeviceUseStatement."
  derivedFrom: [Reference]
  timingTiming: Timing
  timingPeriod: Period
  timingDateTime: query_resourceById_oneOf_41_timingDateTime
  _timingDateTime: Element
  recordedOn: dateTime
  _recordedOn: Element
  source: Reference
  device: Reference!
  "Reason or justification for the use of the device."
  reasonCode: [CodeableConcept]
  "Indicates another resource whose existence justifies this DeviceUseStatement."
  reasonReference: [Reference]
  bodySite: CodeableConcept
  "Details about the device statement that were not represented at all or sufficiently in one of the attributes provided in a class. These may include for example a comment, an instruction, or a note associated with the statement."
  note: [Annotation]
}

enum DeviceUseStatement_const {
  DeviceUseStatement
}

"How often the device was used."
scalar query_resourceById_oneOf_41_timingDateTime

"The findings and interpretation of diagnostic  tests performed on patients, groups of patients, devices, and locations, and/or specimens derived from these. The report includes clinical context such as requesting and provider information, and some mix of atomic results, images, textual and coded interpretations, and formatted representation of diagnostic reports."
type DiagnosticReport {
  resourceType: DiagnosticReport_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Identifiers assigned to this report by the performer or other systems."
  identifier: [Identifier]
  "Details concerning a service requested."
  basedOn: [Reference]
  status: code
  _status: Element
  "A code that classifies the clinical discipline, department or diagnostic service that created the report (e.g. cardiology, biochemistry, hematology, MRI). This is used for searching, sorting and display purposes."
  category: [CodeableConcept]
  code: CodeableConcept!
  subject: Reference
  encounter: Reference
  effectiveDateTime: query_resourceById_oneOf_42_effectiveDateTime
  _effectiveDateTime: Element
  effectivePeriod: Period
  issued: instant
  _issued: Element
  "The diagnostic service that is responsible for issuing the report."
  performer: [Reference]
  "The practitioner or organization that is responsible for the report's conclusions and interpretations."
  resultsInterpreter: [Reference]
  "Details about the specimens on which this diagnostic report is based."
  specimen: [Reference]
  "[Observations](observation.html)  that are part of this diagnostic report."
  result: [Reference]
  "One or more links to full details of any imaging performed during the diagnostic investigation. Typically, this is imaging performed by DICOM enabled modalities, but this is not required. A fully enabled PACS viewer can use this information to provide views of the source images."
  imagingStudy: [Reference]
  "A list of key images associated with this report. The images are generally created during the diagnostic process, and may be directly of the patient, or of treated specimens (i.e. slides of interest)."
  media: [DiagnosticReport_Media]
  conclusion: string
  _conclusion: Element
  "One or more codes that represent the summary conclusion (interpretation/impression) of the diagnostic report."
  conclusionCode: [CodeableConcept]
  "Rich text representation of the entire result as issued by the diagnostic service. Multiple formats are allowed but they SHALL be semantically equivalent."
  presentedForm: [Attachment]
}

enum DiagnosticReport_const {
  DiagnosticReport
}

"The time or time-period the observed values are related to. When the subject of the report is a patient, this is usually either the time of the procedure or of specimen collection(s), but very often the source of the date/time is not known, only the date/time itself."
scalar query_resourceById_oneOf_42_effectiveDateTime

"The findings and interpretation of diagnostic  tests performed on patients, groups of patients, devices, and locations, and/or specimens derived from these. The report includes clinical context such as requesting and provider information, and some mix of atomic results, images, textual and coded interpretations, and formatted representation of diagnostic reports."
type DiagnosticReport_Media {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  comment: string
  _comment: Element
  link: Reference!
}

"A collection of documents compiled for a purpose together with metadata that applies to the collection."
type DocumentManifest {
  resourceType: DocumentManifest_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  masterIdentifier: Identifier
  "Other identifiers associated with the document manifest, including version independent  identifiers."
  identifier: [Identifier]
  status: code
  _status: Element
  type: CodeableConcept
  subject: Reference
  created: dateTime
  _created: Element
  "Identifies who is the author of the manifest. Manifest author is not necessarly the author of the references included."
  author: [Reference]
  "A patient, practitioner, or organization for which this set of documents is intended."
  recipient: [Reference]
  source: uri
  _source: Element
  description: string
  _description: Element
  "The list of Resources that consist of the parts of this manifest."
  content: [Reference]!
  "Related identifiers or resources associated with the DocumentManifest."
  related: [DocumentManifest_Related]
}

enum DocumentManifest_const {
  DocumentManifest
}

"A collection of documents compiled for a purpose together with metadata that applies to the collection."
type DocumentManifest_Related {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  identifier: Identifier
  ref: Reference
}

"A reference to a document of any kind for any purpose. Provides metadata about the document so that the document can be discovered and managed. The scope of a document is any seralized object with a mime-type, so includes formal patient centric documents (CDA), cliical notes, scanned paper, and non-patient specific documents like policy text."
type DocumentReference {
  resourceType: DocumentReference_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  masterIdentifier: Identifier
  "Other identifiers associated with the document, including version independent identifiers."
  identifier: [Identifier]
  status: code
  _status: Element
  docStatus: code
  _docStatus: Element
  type: CodeableConcept
  "A categorization for the type of document referenced - helps for indexing and searching. This may be implied by or derived from the code specified in the DocumentReference.type."
  category: [CodeableConcept]
  subject: Reference
  date: instant
  _date: Element
  "Identifies who is responsible for adding the information to the document."
  author: [Reference]
  authenticator: Reference
  custodian: Reference
  "Relationships that this document has with other document references that already exist."
  relatesTo: [DocumentReference_RelatesTo]
  description: string
  _description: Element
  "A set of Security-Tag codes specifying the level of privacy/security of the Document. Note that DocumentReference.meta.security contains the security labels of the \\"reference\\" to the document, while DocumentReference.securityLabel contains a snapshot of the security labels on the document the reference refers to."
  securityLabel: [CodeableConcept]
  "The document and format referenced. There may be multiple content element repetitions, each with a different format."
  content: [DocumentReference_Content]!
  context: DocumentReference_Context
}

enum DocumentReference_const {
  DocumentReference
}

"A reference to a document of any kind for any purpose. Provides metadata about the document so that the document can be discovered and managed. The scope of a document is any seralized object with a mime-type, so includes formal patient centric documents (CDA), cliical notes, scanned paper, and non-patient specific documents like policy text."
type DocumentReference_RelatesTo {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  code: code
  _code: Element
  target: Reference!
}

"A reference to a document of any kind for any purpose. Provides metadata about the document so that the document can be discovered and managed. The scope of a document is any seralized object with a mime-type, so includes formal patient centric documents (CDA), cliical notes, scanned paper, and non-patient specific documents like policy text."
type DocumentReference_Content {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  attachment: Attachment!
  format: Coding
}

"A reference to a document of any kind for any purpose. Provides metadata about the document so that the document can be discovered and managed. The scope of a document is any seralized object with a mime-type, so includes formal patient centric documents (CDA), cliical notes, scanned paper, and non-patient specific documents like policy text."
type DocumentReference_Context {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Describes the clinical encounter or type of care that the document content is associated with."
  encounter: [Reference]
  "This list of codes represents the main clinical acts, such as a colonoscopy or an appendectomy, being documented. In some cases, the event is inherent in the type Code, such as a \\"History and Physical Report\\" in which the procedure being documented is necessarily a \\"History and Physical\\" act."
  event: [CodeableConcept]
  period: Period
  facilityType: CodeableConcept
  practiceSetting: CodeableConcept
  sourcePatientInfo: Reference
  "Related identifiers or resources associated with the DocumentReference."
  related: [Reference]
}

"An interaction between a patient and healthcare provider(s) for the purpose of providing healthcare service(s) or assessing the health status of a patient."
type Encounter {
  resourceType: Encounter_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Identifier(s) by which this encounter is known."
  identifier: [Identifier]
  status: code
  _status: Element
  "The status history permits the encounter resource to contain the status history without needing to read through the historical versions of the resource, or even have the server store them."
  statusHistory: [Encounter_StatusHistory]
  class: Coding!
  "The class history permits the tracking of the encounters transitions without needing to go  through the resource history.  This would be used for a case where an admission starts of as an emergency encounter, then transitions into an inpatient scenario. Doing this and not restarting a new encounter ensures that any lab/diagnostic results can more easily follow the patient and not require re-processing and not get lost or cancelled during a kind of discharge from emergency to inpatient."
  classHistory: [Encounter_ClassHistory]
  "Specific type of encounter (e.g. e-mail consultation, surgical day-care, skilled nursing, rehabilitation)."
  type: [CodeableConcept]
  serviceType: CodeableConcept
  priority: CodeableConcept
  subject: Reference
  "Where a specific encounter should be classified as a part of a specific episode(s) of care this field should be used. This association can facilitate grouping of related encounters together for a specific purpose, such as government reporting, issue tracking, association via a common problem.  The association is recorded on the encounter as these are typically created after the episode of care and grouped on entry rather than editing the episode of care to append another encounter to it (the episode of care could span years)."
  episodeOfCare: [Reference]
  "The request this encounter satisfies (e.g. incoming referral or procedure request)."
  basedOn: [Reference]
  "The list of people responsible for providing the service."
  participant: [Encounter_Participant]
  "The appointment that scheduled this encounter."
  appointment: [Reference]
  period: Period
  length: Duration
  "Reason the encounter takes place, expressed as a code. For admissions, this can be used for a coded admission diagnosis."
  reasonCode: [CodeableConcept]
  "Reason the encounter takes place, expressed as a code. For admissions, this can be used for a coded admission diagnosis."
  reasonReference: [Reference]
  "The list of diagnosis relevant to this encounter."
  diagnosis: [Encounter_Diagnosis]
  "The set of accounts that may be used for billing for this Encounter."
  account: [Reference]
  hospitalization: Encounter_Hospitalization
  "List of locations where  the patient has been during this encounter."
  location: [Encounter_Location]
  serviceProvider: Reference
  partOf: Reference
}

enum Encounter_const {
  Encounter
}

"An interaction between a patient and healthcare provider(s) for the purpose of providing healthcare service(s) or assessing the health status of a patient."
type Encounter_StatusHistory {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  status: code
  _status: Element
  period: Period!
}

"An interaction between a patient and healthcare provider(s) for the purpose of providing healthcare service(s) or assessing the health status of a patient."
type Encounter_ClassHistory {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  class: Coding!
  period: Period!
}

"An interaction between a patient and healthcare provider(s) for the purpose of providing healthcare service(s) or assessing the health status of a patient."
type Encounter_Participant {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Role of participant in encounter."
  type: [CodeableConcept]
  period: Period
  individual: Reference
}

"An interaction between a patient and healthcare provider(s) for the purpose of providing healthcare service(s) or assessing the health status of a patient."
type Encounter_Diagnosis {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  condition: Reference!
  use: CodeableConcept
  rank: positiveInt
  _rank: Element
}

"An interaction between a patient and healthcare provider(s) for the purpose of providing healthcare service(s) or assessing the health status of a patient."
type Encounter_Hospitalization {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  preAdmissionIdentifier: Identifier
  origin: Reference
  admitSource: CodeableConcept
  reAdmission: CodeableConcept
  "Diet preferences reported by the patient."
  dietPreference: [CodeableConcept]
  "Special courtesies (VIP, board member)."
  specialCourtesy: [CodeableConcept]
  "Any special requests that have been made for this hospitalization encounter, such as the provision of specific equipment or other things."
  specialArrangement: [CodeableConcept]
  destination: Reference
  dischargeDisposition: CodeableConcept
}

"An interaction between a patient and healthcare provider(s) for the purpose of providing healthcare service(s) or assessing the health status of a patient."
type Encounter_Location {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  location: Reference!
  status: code
  _status: Element
  physicalType: CodeableConcept
  period: Period
}

"The technical details of an endpoint that can be used for electronic services, such as for web services providing XDS.b or a REST endpoint for another FHIR server. This may include any security context information."
type Endpoint {
  resourceType: Endpoint_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Identifier for the organization that is used to identify the endpoint across multiple disparate systems."
  identifier: [Identifier]
  status: code
  _status: Element
  connectionType: Coding!
  name: string
  _name: Element
  managingOrganization: Reference
  "Contact details for a human to contact about the subscription. The primary use of this for system administrator troubleshooting."
  contact: [ContactPoint]
  period: Period
  "The payload type describes the acceptable content that can be communicated on the endpoint."
  payloadType: [CodeableConcept]!
  "The mime type to send the payload in - e.g. application/fhir+xml, application/fhir+json. If the mime type is not specified, then the sender could send any content (including no content depending on the connectionType)."
  payloadMimeType: [code]
  "Extensions for payloadMimeType"
  _payloadMimeType: [Element]
  address: url
  _address: Element
  "Additional headers / information to send as part of the notification."
  header: [string]
  "Extensions for header"
  _header: [Element]
}

enum Endpoint_const {
  Endpoint
}

"This resource provides the insurance enrollment details to the insurer regarding a specified coverage."
type EnrollmentRequest {
  resourceType: EnrollmentRequest_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "The Response business identifier."
  identifier: [Identifier]
  status: code
  _status: Element
  created: dateTime
  _created: Element
  insurer: Reference
  provider: Reference
  candidate: Reference
  coverage: Reference
}

enum EnrollmentRequest_const {
  EnrollmentRequest
}

"This resource provides enrollment and plan details from the processing of an EnrollmentRequest resource."
type EnrollmentResponse {
  resourceType: EnrollmentResponse_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "The Response business identifier."
  identifier: [Identifier]
  status: code
  _status: Element
  request: Reference
  outcome: code
  _outcome: Element
  disposition: string
  _disposition: Element
  created: dateTime
  _created: Element
  organization: Reference
  requestProvider: Reference
}

enum EnrollmentResponse_const {
  EnrollmentResponse
}

"An association between a patient and an organization / healthcare provider(s) during which time encounters may occur. The managing organization assumes a level of responsibility for the patient during this time."
type EpisodeOfCare {
  resourceType: EpisodeOfCare_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "The EpisodeOfCare may be known by different identifiers for different contexts of use, such as when an external agency is tracking the Episode for funding purposes."
  identifier: [Identifier]
  status: code
  _status: Element
  "The history of statuses that the EpisodeOfCare has been through (without requiring processing the history of the resource)."
  statusHistory: [EpisodeOfCare_StatusHistory]
  "A classification of the type of episode of care; e.g. specialist referral, disease management, type of funded care."
  type: [CodeableConcept]
  "The list of diagnosis relevant to this episode of care."
  diagnosis: [EpisodeOfCare_Diagnosis]
  patient: Reference!
  managingOrganization: Reference
  period: Period
  "Referral Request(s) that are fulfilled by this EpisodeOfCare, incoming referrals."
  referralRequest: [Reference]
  careManager: Reference
  "The list of practitioners that may be facilitating this episode of care for specific purposes."
  team: [Reference]
  "The set of accounts that may be used for billing for this EpisodeOfCare."
  account: [Reference]
}

enum EpisodeOfCare_const {
  EpisodeOfCare
}

"An association between a patient and an organization / healthcare provider(s) during which time encounters may occur. The managing organization assumes a level of responsibility for the patient during this time."
type EpisodeOfCare_StatusHistory {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  status: code
  _status: Element
  period: Period!
}

"An association between a patient and an organization / healthcare provider(s) during which time encounters may occur. The managing organization assumes a level of responsibility for the patient during this time."
type EpisodeOfCare_Diagnosis {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  condition: Reference!
  role: CodeableConcept
  rank: positiveInt
  _rank: Element
}

"The EventDefinition resource provides a reusable description of when a particular event can occur."
type EventDefinition {
  resourceType: EventDefinition_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  url: uri
  _url: Element
  "A formal identifier that is used to identify this event definition when it is represented in other formats, or referenced in a specification, model, design or an instance."
  identifier: [Identifier]
  version: string
  _version: Element
  name: string
  _name: Element
  title: string
  _title: Element
  subtitle: string
  _subtitle: Element
  status: code
  _status: Element
  experimental: boolean
  _experimental: Element
  subjectCodeableConcept: CodeableConcept
  subjectReference: Reference
  date: dateTime
  _date: Element
  publisher: string
  _publisher: Element
  "Contact details to assist a user in finding and communicating with the publisher."
  contact: [ContactDetail]
  description: markdown
  _description: Element
  "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate event definition instances."
  useContext: [UsageContext]
  "A legal or geographic region in which the event definition is intended to be used."
  jurisdiction: [CodeableConcept]
  purpose: markdown
  _purpose: Element
  usage: string
  _usage: Element
  copyright: markdown
  _copyright: Element
  approvalDate: date
  _approvalDate: Element
  lastReviewDate: date
  _lastReviewDate: Element
  effectivePeriod: Period
  "Descriptive topics related to the module. Topics provide a high-level categorization of the module that can be useful for filtering and searching."
  topic: [CodeableConcept]
  "An individiual or organization primarily involved in the creation and maintenance of the content."
  author: [ContactDetail]
  "An individual or organization primarily responsible for internal coherence of the content."
  editor: [ContactDetail]
  "An individual or organization primarily responsible for review of some aspect of the content."
  reviewer: [ContactDetail]
  "An individual or organization responsible for officially endorsing the content for use in some setting."
  endorser: [ContactDetail]
  "Related resources such as additional documentation, justification, or bibliographic references."
  relatedArtifact: [RelatedArtifact]
  "The trigger element defines when the event occurs. If more than one trigger condition is specified, the event fires whenever any one of the trigger conditions is met."
  trigger: [TriggerDefinition]!
}

enum EventDefinition_const {
  EventDefinition
}

"The Evidence Resource provides a machine-interpretable expression of an evidence concept including the evidence variables (eg population, exposures/interventions, comparators, outcomes, measured variables, confounding variables), the statistics, and the certainty of this evidence."
type Evidence {
  resourceType: Evidence_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  url: uri
  _url: Element
  "A formal identifier that is used to identify this summary when it is represented in other formats, or referenced in a specification, model, design or an instance."
  identifier: [Identifier]
  version: string
  _version: Element
  title: string
  _title: Element
  citeAsReference: Reference
  citeAsMarkdown: query_resourceById_oneOf_51_citeAsMarkdown
  _citeAsMarkdown: Element
  status: code
  _status: Element
  date: dateTime
  _date: Element
  "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate evidence instances."
  useContext: [UsageContext]
  approvalDate: date
  _approvalDate: Element
  lastReviewDate: date
  _lastReviewDate: Element
  publisher: string
  _publisher: Element
  "Contact details to assist a user in finding and communicating with the publisher."
  contact: [ContactDetail]
  "An individiual, organization, or device primarily involved in the creation and maintenance of the content."
  author: [ContactDetail]
  "An individiual, organization, or device primarily responsible for internal coherence of the content."
  editor: [ContactDetail]
  "An individiual, organization, or device primarily responsible for review of some aspect of the content."
  reviewer: [ContactDetail]
  "An individiual, organization, or device responsible for officially endorsing the content for use in some setting."
  endorser: [ContactDetail]
  "Link or citation to artifact associated with the summary."
  relatedArtifact: [RelatedArtifact]
  description: markdown
  _description: Element
  assertion: markdown
  _assertion: Element
  "Footnotes and/or explanatory notes."
  note: [Annotation]
  "Evidence variable such as population, exposure, or outcome."
  variableDefinition: [Evidence_VariableDefinition]!
  synthesisType: CodeableConcept
  studyType: CodeableConcept
  "Values and parameters for a single statistic."
  statistic: [Evidence_Statistic]
  "Assessment of certainty, confidence in the estimates, or quality of the evidence."
  certainty: [Evidence_Certainty]
}

enum Evidence_const {
  Evidence
}

"Citation Resource or display of suggested citation for this evidence."
scalar query_resourceById_oneOf_51_citeAsMarkdown

"The Evidence Resource provides a machine-interpretable expression of an evidence concept including the evidence variables (eg population, exposures/interventions, comparators, outcomes, measured variables, confounding variables), the statistics, and the certainty of this evidence."
type Evidence_VariableDefinition {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  description: markdown
  _description: Element
  "Footnotes and/or explanatory notes."
  note: [Annotation]
  variableRole: CodeableConcept!
  observed: Reference
  intended: Reference
  directnessMatch: CodeableConcept
}

"The Evidence Resource provides a machine-interpretable expression of an evidence concept including the evidence variables (eg population, exposures/interventions, comparators, outcomes, measured variables, confounding variables), the statistics, and the certainty of this evidence."
type Evidence_Statistic {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  description: string
  _description: Element
  "Footnotes and/or explanatory notes."
  note: [Annotation]
  statisticType: CodeableConcept
  category: CodeableConcept
  quantity: Quantity
  numberOfEvents: unsignedInt
  _numberOfEvents: Element
  numberAffected: unsignedInt
  _numberAffected: Element
  sampleSize: Evidence_SampleSize
  "A statistical attribute of the statistic such as a measure of heterogeneity."
  attributeEstimate: [Evidence_AttributeEstimate]
  "A component of the method to generate the statistic."
  modelCharacteristic: [Evidence_ModelCharacteristic]
}

"The Evidence Resource provides a machine-interpretable expression of an evidence concept including the evidence variables (eg population, exposures/interventions, comparators, outcomes, measured variables, confounding variables), the statistics, and the certainty of this evidence."
type Evidence_SampleSize {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  description: string
  _description: Element
  "Footnote or explanatory note about the sample size."
  note: [Annotation]
  numberOfStudies: unsignedInt
  _numberOfStudies: Element
  numberOfParticipants: unsignedInt
  _numberOfParticipants: Element
  knownDataCount: unsignedInt
  _knownDataCount: Element
}

"The Evidence Resource provides a machine-interpretable expression of an evidence concept including the evidence variables (eg population, exposures/interventions, comparators, outcomes, measured variables, confounding variables), the statistics, and the certainty of this evidence."
type Evidence_AttributeEstimate {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  description: string
  _description: Element
  "Footnote or explanatory note about the estimate."
  note: [Annotation]
  type: CodeableConcept
  quantity: Quantity
  level: decimal
  _level: Element
  range: Range
  "A nested attribute estimate; which is the attribute estimate of an attribute estimate."
  attributeEstimate: [Evidence_AttributeEstimate]
}

"The Evidence Resource provides a machine-interpretable expression of an evidence concept including the evidence variables (eg population, exposures/interventions, comparators, outcomes, measured variables, confounding variables), the statistics, and the certainty of this evidence."
type Evidence_ModelCharacteristic {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  code: CodeableConcept!
  value: Quantity
  "A variable adjusted for in the adjusted analysis."
  variable: [Evidence_Variable]
  "An attribute of the statistic used as a model characteristic."
  attributeEstimate: [Evidence_AttributeEstimate]
}

"The Evidence Resource provides a machine-interpretable expression of an evidence concept including the evidence variables (eg population, exposures/interventions, comparators, outcomes, measured variables, confounding variables), the statistics, and the certainty of this evidence."
type Evidence_Variable {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  variableDefinition: Reference!
  handling: code
  _handling: Element
  "Description for grouping of ordinal or polychotomous variables."
  valueCategory: [CodeableConcept]
  "Discrete value for grouping of ordinal or polychotomous variables."
  valueQuantity: [Quantity]
  "Range of values for grouping of ordinal or polychotomous variables."
  valueRange: [Range]
}

"The Evidence Resource provides a machine-interpretable expression of an evidence concept including the evidence variables (eg population, exposures/interventions, comparators, outcomes, measured variables, confounding variables), the statistics, and the certainty of this evidence."
type Evidence_Certainty {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  description: string
  _description: Element
  "Footnotes and/or explanatory notes."
  note: [Annotation]
  type: CodeableConcept
  rating: CodeableConcept
  rater: string
  _rater: Element
  "A domain or subdomain of certainty."
  subcomponent: [Evidence_Certainty]
}

"The EvidenceReport Resource is a specialized container for a collection of resources and codable concepts, adapted to support compositions of Evidence, EvidenceVariable, and Citation resources and related concepts."
type EvidenceReport {
  resourceType: EvidenceReport_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  url: uri
  _url: Element
  status: code
  _status: Element
  "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate evidence report instances."
  useContext: [UsageContext]
  "A formal identifier that is used to identify this EvidenceReport when it is represented in other formats, or referenced in a specification, model, design or an instance."
  identifier: [Identifier]
  "A formal identifier that is used to identify things closely related to this EvidenceReport."
  relatedIdentifier: [Identifier]
  citeAsReference: Reference
  citeAsMarkdown: query_resourceById_oneOf_52_citeAsMarkdown
  _citeAsMarkdown: Element
  type: CodeableConcept
  "Used for footnotes and annotations."
  note: [Annotation]
  "Link, description or reference to artifact associated with the report."
  relatedArtifact: [RelatedArtifact]
  subject: EvidenceReport_Subject!
  publisher: string
  _publisher: Element
  "Contact details to assist a user in finding and communicating with the publisher."
  contact: [ContactDetail]
  "An individiual, organization, or device primarily involved in the creation and maintenance of the content."
  author: [ContactDetail]
  "An individiual, organization, or device primarily responsible for internal coherence of the content."
  editor: [ContactDetail]
  "An individiual, organization, or device primarily responsible for review of some aspect of the content."
  reviewer: [ContactDetail]
  "An individiual, organization, or device responsible for officially endorsing the content for use in some setting."
  endorser: [ContactDetail]
  "Relationships that this composition has with other compositions or documents that already exist."
  relatesTo: [EvidenceReport_RelatesTo]
  "The root of the sections that make up the composition."
  section: [EvidenceReport_Section]
}

enum EvidenceReport_const {
  EvidenceReport
}

"Citation Resource or display of suggested citation for this report."
scalar query_resourceById_oneOf_52_citeAsMarkdown

"The EvidenceReport Resource is a specialized container for a collection of resources and codable concepts, adapted to support compositions of Evidence, EvidenceVariable, and Citation resources and related concepts."
type EvidenceReport_Subject {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Characteristic."
  characteristic: [EvidenceReport_Characteristic]
  "Used for general notes and annotations not coded elsewhere."
  note: [Annotation]
}

"The EvidenceReport Resource is a specialized container for a collection of resources and codable concepts, adapted to support compositions of Evidence, EvidenceVariable, and Citation resources and related concepts."
type EvidenceReport_Characteristic {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  code: CodeableConcept!
  valueReference: Reference
  valueCodeableConcept: CodeableConcept
  "Characteristic value."
  valueBoolean: Boolean
  _valueBoolean: Element
  valueQuantity: Quantity
  valueRange: Range
  exclude: boolean
  _exclude: Element
  period: Period
}

"The EvidenceReport Resource is a specialized container for a collection of resources and codable concepts, adapted to support compositions of Evidence, EvidenceVariable, and Citation resources and related concepts."
type EvidenceReport_RelatesTo {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  code: code
  _code: Element
  targetIdentifier: Identifier
  targetReference: Reference
}

"The EvidenceReport Resource is a specialized container for a collection of resources and codable concepts, adapted to support compositions of Evidence, EvidenceVariable, and Citation resources and related concepts."
type EvidenceReport_Section {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  title: string
  _title: Element
  focus: CodeableConcept
  focusReference: Reference
  "Identifies who is responsible for the information in this section, not necessarily who typed it in."
  author: [Reference]
  text: Narrative
  mode: code
  _mode: Element
  orderedBy: CodeableConcept
  "Specifies any type of classification of the evidence report."
  entryClassifier: [CodeableConcept]
  "A reference to the actual resource from which the narrative in the section is derived."
  entryReference: [Reference]
  "Quantity as content."
  entryQuantity: [Quantity]
  emptyReason: CodeableConcept
  "A nested sub-section within this section."
  section: [EvidenceReport_Section]
}

"The EvidenceVariable resource describes an element that knowledge (Evidence) is about."
type EvidenceVariable {
  resourceType: EvidenceVariable_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  url: uri
  _url: Element
  "A formal identifier that is used to identify this evidence variable when it is represented in other formats, or referenced in a specification, model, design or an instance."
  identifier: [Identifier]
  version: string
  _version: Element
  name: string
  _name: Element
  title: string
  _title: Element
  shortTitle: string
  _shortTitle: Element
  subtitle: string
  _subtitle: Element
  status: code
  _status: Element
  date: dateTime
  _date: Element
  description: markdown
  _description: Element
  "A human-readable string to clarify or explain concepts about the resource."
  note: [Annotation]
  "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate evidence variable instances."
  useContext: [UsageContext]
  publisher: string
  _publisher: Element
  "Contact details to assist a user in finding and communicating with the publisher."
  contact: [ContactDetail]
  "An individiual or organization primarily involved in the creation and maintenance of the content."
  author: [ContactDetail]
  "An individual or organization primarily responsible for internal coherence of the content."
  editor: [ContactDetail]
  "An individual or organization primarily responsible for review of some aspect of the content."
  reviewer: [ContactDetail]
  "An individual or organization responsible for officially endorsing the content for use in some setting."
  endorser: [ContactDetail]
  "Related artifacts such as additional documentation, justification, or bibliographic references."
  relatedArtifact: [RelatedArtifact]
  actual: boolean
  _actual: Element
  characteristicCombination: code
  _characteristicCombination: Element
  "A characteristic that defines the members of the evidence element. Multiple characteristics are applied with \\"and\\" semantics."
  characteristic: [EvidenceVariable_Characteristic]
  handling: code
  _handling: Element
  "A grouping (or set of values) described along with other groupings to specify the set of groupings allowed for the variable."
  category: [EvidenceVariable_Category]
}

enum EvidenceVariable_const {
  EvidenceVariable
}

"The EvidenceVariable resource describes an element that knowledge (Evidence) is about."
type EvidenceVariable_Characteristic {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  description: string
  _description: Element
  definitionReference: Reference
  definitionCanonical: query_resourceById_oneOf_53_characteristic_items_definitionCanonical
  _definitionCanonical: Element
  definitionCodeableConcept: CodeableConcept
  definitionExpression: Expression
  method: CodeableConcept
  device: Reference
  exclude: boolean
  _exclude: Element
  timeFromStart: EvidenceVariable_TimeFromStart
  groupMeasure: code
  _groupMeasure: Element
}

"Define members of the evidence element using Codes (such as condition, medication, or observation), Expressions ( using an expression language such as FHIRPath or CQL) or DataRequirements (such as Diabetes diagnosis onset in the last year)."
scalar query_resourceById_oneOf_53_characteristic_items_definitionCanonical

"The EvidenceVariable resource describes an element that knowledge (Evidence) is about."
type EvidenceVariable_TimeFromStart {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  description: string
  _description: Element
  quantity: Quantity
  range: Range
  "A human-readable string to clarify or explain concepts about the resource."
  note: [Annotation]
}

"The EvidenceVariable resource describes an element that knowledge (Evidence) is about."
type EvidenceVariable_Category {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  name: string
  _name: Element
  valueCodeableConcept: CodeableConcept
  valueQuantity: Quantity
  valueRange: Range
}

"Example of workflow instance."
type ExampleScenario {
  resourceType: ExampleScenario_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  url: uri
  _url: Element
  "A formal identifier that is used to identify this example scenario when it is represented in other formats, or referenced in a specification, model, design or an instance."
  identifier: [Identifier]
  version: string
  _version: Element
  name: string
  _name: Element
  status: code
  _status: Element
  experimental: boolean
  _experimental: Element
  date: dateTime
  _date: Element
  publisher: string
  _publisher: Element
  "Contact details to assist a user in finding and communicating with the publisher."
  contact: [ContactDetail]
  "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate example scenario instances."
  useContext: [UsageContext]
  "A legal or geographic region in which the example scenario is intended to be used."
  jurisdiction: [CodeableConcept]
  copyright: markdown
  _copyright: Element
  purpose: markdown
  _purpose: Element
  "Actor participating in the resource."
  actor: [ExampleScenario_Actor]
  "Each resource and each version that is present in the workflow."
  instance: [ExampleScenario_Instance]
  "Each major process - a group of operations."
  process: [ExampleScenario_Process]
  "Another nested workflow."
  workflow: [canonical]
}

enum ExampleScenario_const {
  ExampleScenario
}

"Example of workflow instance."
type ExampleScenario_Actor {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  actorId: string
  _actorId: Element
  type: code
  _type: Element
  name: string
  _name: Element
  description: markdown
  _description: Element
}

"Example of workflow instance."
type ExampleScenario_Instance {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  resourceId: string
  _resourceId: Element
  resourceType: code
  _resourceType: Element
  name: string
  _name: Element
  description: markdown
  _description: Element
  "A specific version of the resource."
  version: [ExampleScenario_Version]
  "Resources contained in the instance (e.g. the observations contained in a bundle)."
  containedInstance: [ExampleScenario_ContainedInstance]
}

"Example of workflow instance."
type ExampleScenario_Version {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  versionId: string
  _versionId: Element
  description: markdown
  _description: Element
}

"Example of workflow instance."
type ExampleScenario_ContainedInstance {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  resourceId: string
  _resourceId: Element
  versionId: string
  _versionId: Element
}

"Example of workflow instance."
type ExampleScenario_Process {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  title: string
  _title: Element
  description: markdown
  _description: Element
  preConditions: markdown
  _preConditions: Element
  postConditions: markdown
  _postConditions: Element
  "Each step of the process."
  step: [ExampleScenario_Step]
}

"Example of workflow instance."
type ExampleScenario_Step {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Nested process."
  process: [ExampleScenario_Process]
  pause: boolean
  _pause: Element
  operation: ExampleScenario_Operation
  "Indicates an alternative step that can be taken instead of the operations on the base step in exceptional/atypical circumstances."
  alternative: [ExampleScenario_Alternative]
}

"Example of workflow instance."
type ExampleScenario_Operation {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  number: string
  _number: Element
  type: string
  _type: Element
  name: string
  _name: Element
  initiator: string
  _initiator: Element
  receiver: string
  _receiver: Element
  description: markdown
  _description: Element
  initiatorActive: boolean
  _initiatorActive: Element
  receiverActive: boolean
  _receiverActive: Element
  request: ExampleScenario_ContainedInstance
  response: ExampleScenario_ContainedInstance
}

"Example of workflow instance."
type ExampleScenario_Alternative {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  title: string
  _title: Element
  description: markdown
  _description: Element
  "What happens in each alternative option."
  step: [ExampleScenario_Step]
}

"This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided."
type ExplanationOfBenefit {
  resourceType: ExplanationOfBenefit_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "A unique identifier assigned to this explanation of benefit."
  identifier: [Identifier]
  status: code
  _status: Element
  type: CodeableConcept!
  subType: CodeableConcept
  use: code
  _use: Element
  patient: Reference!
  billablePeriod: Period
  created: dateTime
  _created: Element
  enterer: Reference
  insurer: Reference!
  provider: Reference!
  priority: CodeableConcept
  fundsReserveRequested: CodeableConcept
  fundsReserve: CodeableConcept
  "Other claims which are related to this claim such as prior submissions or claims for related services or for the same event."
  related: [ExplanationOfBenefit_Related]
  prescription: Reference
  originalPrescription: Reference
  payee: ExplanationOfBenefit_Payee
  referral: Reference
  facility: Reference
  claim: Reference
  claimResponse: Reference
  outcome: code
  _outcome: Element
  disposition: string
  _disposition: Element
  "Reference from the Insurer which is used in later communications which refers to this adjudication."
  preAuthRef: [string]
  "Extensions for preAuthRef"
  _preAuthRef: [Element]
  "The timeframe during which the supplied preauthorization reference may be quoted on claims to obtain the adjudication as provided."
  preAuthRefPeriod: [Period]
  "The members of the team who provided the products and services."
  careTeam: [ExplanationOfBenefit_CareTeam]
  "Additional information codes regarding exceptions, special considerations, the condition, situation, prior or concurrent issues."
  supportingInfo: [ExplanationOfBenefit_SupportingInfo]
  "Information about diagnoses relevant to the claim items."
  diagnosis: [ExplanationOfBenefit_Diagnosis]
  "Procedures performed on the patient relevant to the billing items with the claim."
  procedure: [ExplanationOfBenefit_Procedure]
  precedence: positiveInt
  _precedence: Element
  "Financial instruments for reimbursement for the health care products and services specified on the claim."
  insurance: [ExplanationOfBenefit_Insurance]!
  accident: ExplanationOfBenefit_Accident
  "A claim line. Either a simple (a product or service) or a 'group' of details which can also be a simple items or groups of sub-details."
  item: [ExplanationOfBenefit_Item]
  "The first-tier service adjudications for payor added product or service lines."
  addItem: [ExplanationOfBenefit_AddItem]
  "The adjudication results which are presented at the header level rather than at the line-item or add-item levels."
  adjudication: [ExplanationOfBenefit_Adjudication]
  "Categorized monetary totals for the adjudication."
  total: [ExplanationOfBenefit_Total]
  payment: ExplanationOfBenefit_Payment
  formCode: CodeableConcept
  form: Attachment
  "A note that describes or explains adjudication results in a human readable form."
  processNote: [ExplanationOfBenefit_ProcessNote]
  benefitPeriod: Period
  "Balance by Benefit Category."
  benefitBalance: [ExplanationOfBenefit_BenefitBalance]
}

enum ExplanationOfBenefit_const {
  ExplanationOfBenefit
}

"This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided."
type ExplanationOfBenefit_Related {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  claim: Reference
  relationship: CodeableConcept
  reference: Identifier
}

"This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided."
type ExplanationOfBenefit_Payee {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: CodeableConcept
  party: Reference
}

"This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided."
type ExplanationOfBenefit_CareTeam {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  sequence: positiveInt
  _sequence: Element
  provider: Reference!
  responsible: boolean
  _responsible: Element
  role: CodeableConcept
  qualification: CodeableConcept
}

"This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided."
type ExplanationOfBenefit_SupportingInfo {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  sequence: positiveInt
  _sequence: Element
  category: CodeableConcept!
  code: CodeableConcept
  timingDate: query_resourceById_oneOf_55_supportingInfo_items_timingDate
  _timingDate: Element
  timingPeriod: Period
  "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data."
  valueBoolean: Boolean
  _valueBoolean: Element
  valueString: query_resourceById_oneOf_55_supportingInfo_items_valueString
  _valueString: Element
  valueQuantity: Quantity
  valueAttachment: Attachment
  valueReference: Reference
  reason: Coding
}

"The date when or period to which this information refers."
scalar query_resourceById_oneOf_55_supportingInfo_items_timingDate

"Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data."
scalar query_resourceById_oneOf_55_supportingInfo_items_valueString

"This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided."
type ExplanationOfBenefit_Diagnosis {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  sequence: positiveInt
  _sequence: Element
  diagnosisCodeableConcept: CodeableConcept
  diagnosisReference: Reference
  "When the condition was observed or the relative ranking."
  type: [CodeableConcept]
  onAdmission: CodeableConcept
  packageCode: CodeableConcept
}

"This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided."
type ExplanationOfBenefit_Procedure {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  sequence: positiveInt
  _sequence: Element
  "When the condition was observed or the relative ranking."
  type: [CodeableConcept]
  date: dateTime
  _date: Element
  procedureCodeableConcept: CodeableConcept
  procedureReference: Reference
  "Unique Device Identifiers associated with this line item."
  udi: [Reference]
}

"This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided."
type ExplanationOfBenefit_Insurance {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  focal: boolean
  _focal: Element
  coverage: Reference!
  "Reference numbers previously provided by the insurer to the provider to be quoted on subsequent claims containing services or products related to the prior authorization."
  preAuthRef: [string]
  "Extensions for preAuthRef"
  _preAuthRef: [Element]
}

"This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided."
type ExplanationOfBenefit_Accident {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  date: date
  _date: Element
  type: CodeableConcept
  locationAddress: Address
  locationReference: Reference
}

"This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided."
type ExplanationOfBenefit_Item {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  sequence: positiveInt
  _sequence: Element
  "Care team members related to this service or product."
  careTeamSequence: [positiveInt]
  "Extensions for careTeamSequence"
  _careTeamSequence: [Element]
  "Diagnoses applicable for this service or product."
  diagnosisSequence: [positiveInt]
  "Extensions for diagnosisSequence"
  _diagnosisSequence: [Element]
  "Procedures applicable for this service or product."
  procedureSequence: [positiveInt]
  "Extensions for procedureSequence"
  _procedureSequence: [Element]
  "Exceptions, special conditions and supporting information applicable for this service or product."
  informationSequence: [positiveInt]
  "Extensions for informationSequence"
  _informationSequence: [Element]
  revenue: CodeableConcept
  category: CodeableConcept
  productOrService: CodeableConcept!
  "Item typification or modifiers codes to convey additional context for the product or service."
  modifier: [CodeableConcept]
  "Identifies the program under which this may be recovered."
  programCode: [CodeableConcept]
  servicedDate: query_resourceById_oneOf_55_item_items_servicedDate
  _servicedDate: Element
  servicedPeriod: Period
  locationCodeableConcept: CodeableConcept
  locationAddress: Address
  locationReference: Reference
  quantity: Quantity
  unitPrice: Money
  factor: decimal
  _factor: Element
  net: Money
  "Unique Device Identifiers associated with this line item."
  udi: [Reference]
  bodySite: CodeableConcept
  "A region or surface of the bodySite, e.g. limb region or tooth surface(s)."
  subSite: [CodeableConcept]
  "A billed item may include goods or services provided in multiple encounters."
  encounter: [Reference]
  "The numbers associated with notes below which apply to the adjudication of this item."
  noteNumber: [positiveInt]
  "Extensions for noteNumber"
  _noteNumber: [Element]
  "If this item is a group then the values here are a summary of the adjudication of the detail items. If this item is a simple product or service then this is the result of the adjudication of this item."
  adjudication: [ExplanationOfBenefit_Adjudication]
  "Second-tier of goods and services."
  detail: [ExplanationOfBenefit_Detail]
}

"The date or dates when the service or product was supplied, performed or completed."
scalar query_resourceById_oneOf_55_item_items_servicedDate

"This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided."
type ExplanationOfBenefit_Adjudication {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  category: CodeableConcept!
  reason: CodeableConcept
  amount: Money
  value: decimal
  _value: Element
}

"This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided."
type ExplanationOfBenefit_Detail {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  sequence: positiveInt
  _sequence: Element
  revenue: CodeableConcept
  category: CodeableConcept
  productOrService: CodeableConcept!
  "Item typification or modifiers codes to convey additional context for the product or service."
  modifier: [CodeableConcept]
  "Identifies the program under which this may be recovered."
  programCode: [CodeableConcept]
  quantity: Quantity
  unitPrice: Money
  factor: decimal
  _factor: Element
  net: Money
  "Unique Device Identifiers associated with this line item."
  udi: [Reference]
  "The numbers associated with notes below which apply to the adjudication of this item."
  noteNumber: [positiveInt]
  "Extensions for noteNumber"
  _noteNumber: [Element]
  "The adjudication results."
  adjudication: [ExplanationOfBenefit_Adjudication]
  "Third-tier of goods and services."
  subDetail: [ExplanationOfBenefit_SubDetail]
}

"This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided."
type ExplanationOfBenefit_SubDetail {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  sequence: positiveInt
  _sequence: Element
  revenue: CodeableConcept
  category: CodeableConcept
  productOrService: CodeableConcept!
  "Item typification or modifiers codes to convey additional context for the product or service."
  modifier: [CodeableConcept]
  "Identifies the program under which this may be recovered."
  programCode: [CodeableConcept]
  quantity: Quantity
  unitPrice: Money
  factor: decimal
  _factor: Element
  net: Money
  "Unique Device Identifiers associated with this line item."
  udi: [Reference]
  "The numbers associated with notes below which apply to the adjudication of this item."
  noteNumber: [positiveInt]
  "Extensions for noteNumber"
  _noteNumber: [Element]
  "The adjudication results."
  adjudication: [ExplanationOfBenefit_Adjudication]
}

"This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided."
type ExplanationOfBenefit_AddItem {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Claim items which this service line is intended to replace."
  itemSequence: [positiveInt]
  "Extensions for itemSequence"
  _itemSequence: [Element]
  "The sequence number of the details within the claim item which this line is intended to replace."
  detailSequence: [positiveInt]
  "Extensions for detailSequence"
  _detailSequence: [Element]
  "The sequence number of the sub-details woithin the details within the claim item which this line is intended to replace."
  subDetailSequence: [positiveInt]
  "Extensions for subDetailSequence"
  _subDetailSequence: [Element]
  "The providers who are authorized for the services rendered to the patient."
  provider: [Reference]
  productOrService: CodeableConcept!
  "Item typification or modifiers codes to convey additional context for the product or service."
  modifier: [CodeableConcept]
  "Identifies the program under which this may be recovered."
  programCode: [CodeableConcept]
  servicedDate: query_resourceById_oneOf_55_addItem_items_servicedDate
  _servicedDate: Element
  servicedPeriod: Period
  locationCodeableConcept: CodeableConcept
  locationAddress: Address
  locationReference: Reference
  quantity: Quantity
  unitPrice: Money
  factor: decimal
  _factor: Element
  net: Money
  bodySite: CodeableConcept
  "A region or surface of the bodySite, e.g. limb region or tooth surface(s)."
  subSite: [CodeableConcept]
  "The numbers associated with notes below which apply to the adjudication of this item."
  noteNumber: [positiveInt]
  "Extensions for noteNumber"
  _noteNumber: [Element]
  "The adjudication results."
  adjudication: [ExplanationOfBenefit_Adjudication]
  "The second-tier service adjudications for payor added services."
  detail: [ExplanationOfBenefit_Detail1]
}

"The date or dates when the service or product was supplied, performed or completed."
scalar query_resourceById_oneOf_55_addItem_items_servicedDate

"This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided."
type ExplanationOfBenefit_Detail1 {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  productOrService: CodeableConcept!
  "Item typification or modifiers codes to convey additional context for the product or service."
  modifier: [CodeableConcept]
  quantity: Quantity
  unitPrice: Money
  factor: decimal
  _factor: Element
  net: Money
  "The numbers associated with notes below which apply to the adjudication of this item."
  noteNumber: [positiveInt]
  "Extensions for noteNumber"
  _noteNumber: [Element]
  "The adjudication results."
  adjudication: [ExplanationOfBenefit_Adjudication]
  "The third-tier service adjudications for payor added services."
  subDetail: [ExplanationOfBenefit_SubDetail1]
}

"This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided."
type ExplanationOfBenefit_SubDetail1 {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  productOrService: CodeableConcept!
  "Item typification or modifiers codes to convey additional context for the product or service."
  modifier: [CodeableConcept]
  quantity: Quantity
  unitPrice: Money
  factor: decimal
  _factor: Element
  net: Money
  "The numbers associated with notes below which apply to the adjudication of this item."
  noteNumber: [positiveInt]
  "Extensions for noteNumber"
  _noteNumber: [Element]
  "The adjudication results."
  adjudication: [ExplanationOfBenefit_Adjudication]
}

"This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided."
type ExplanationOfBenefit_Total {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  category: CodeableConcept!
  amount: Money!
}

"This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided."
type ExplanationOfBenefit_Payment {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: CodeableConcept
  adjustment: Money
  adjustmentReason: CodeableConcept
  date: date
  _date: Element
  amount: Money
  identifier: Identifier
}

"This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided."
type ExplanationOfBenefit_ProcessNote {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  number: positiveInt
  _number: Element
  type: code
  _type: Element
  text: string
  _text: Element
  language: CodeableConcept
}

"This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided."
type ExplanationOfBenefit_BenefitBalance {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  category: CodeableConcept!
  excluded: boolean
  _excluded: Element
  name: string
  _name: Element
  description: string
  _description: Element
  network: CodeableConcept
  unit: CodeableConcept
  term: CodeableConcept
  "Benefits Used to date."
  financial: [ExplanationOfBenefit_Financial]
}

"This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided."
type ExplanationOfBenefit_Financial {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: CodeableConcept!
  allowedUnsignedInt: query_resourceById_oneOf_55_benefitBalance_items_financial_items_allowedUnsignedInt
  _allowedUnsignedInt: Element
  allowedString: query_resourceById_oneOf_55_benefitBalance_items_financial_items_allowedString
  _allowedString: Element
  allowedMoney: Money
  usedUnsignedInt: query_resourceById_oneOf_55_benefitBalance_items_financial_items_usedUnsignedInt
  _usedUnsignedInt: Element
  usedMoney: Money
}

"The quantity of the benefit which is permitted under the coverage."
scalar query_resourceById_oneOf_55_benefitBalance_items_financial_items_allowedUnsignedInt

"The quantity of the benefit which is permitted under the coverage."
scalar query_resourceById_oneOf_55_benefitBalance_items_financial_items_allowedString

"The quantity of the benefit which have been consumed to date."
scalar query_resourceById_oneOf_55_benefitBalance_items_financial_items_usedUnsignedInt

"Significant health conditions for a person related to the patient relevant in the context of care for the patient."
type FamilyMemberHistory {
  resourceType: FamilyMemberHistory_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Business identifiers assigned to this family member history by the performer or other systems which remain constant as the resource is updated and propagates from server to server."
  identifier: [Identifier]
  "The URL pointing to a FHIR-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this FamilyMemberHistory."
  instantiatesCanonical: [canonical]
  "The URL pointing to an externally maintained protocol, guideline, orderset or other definition that is adhered to in whole or in part by this FamilyMemberHistory."
  instantiatesUri: [uri]
  "Extensions for instantiatesUri"
  _instantiatesUri: [Element]
  status: code
  _status: Element
  dataAbsentReason: CodeableConcept
  patient: Reference!
  date: dateTime
  _date: Element
  name: string
  _name: Element
  relationship: CodeableConcept!
  sex: CodeableConcept
  bornPeriod: Period
  bornDate: query_resourceById_oneOf_56_bornDate
  _bornDate: Element
  bornString: query_resourceById_oneOf_56_bornString
  _bornString: Element
  ageAge: Age
  ageRange: Range
  ageString: query_resourceById_oneOf_56_ageString
  _ageString: Element
  estimatedAge: boolean
  _estimatedAge: Element
  "Deceased flag or the actual or approximate age of the relative at the time of death for the family member history record."
  deceasedBoolean: Boolean
  _deceasedBoolean: Element
  deceasedAge: Age
  deceasedRange: Range
  deceasedDate: query_resourceById_oneOf_56_deceasedDate
  _deceasedDate: Element
  deceasedString: query_resourceById_oneOf_56_deceasedString
  _deceasedString: Element
  "Describes why the family member history occurred in coded or textual form."
  reasonCode: [CodeableConcept]
  "Indicates a Condition, Observation, AllergyIntolerance, or QuestionnaireResponse that justifies this family member history event."
  reasonReference: [Reference]
  "This property allows a non condition-specific note to the made about the related person. Ideally, the note would be in the condition property, but this is not always possible."
  note: [Annotation]
  "The significant Conditions (or condition) that the family member had. This is a repeating section to allow a system to represent more than one condition per resource, though there is nothing stopping multiple resources - one per condition."
  condition: [FamilyMemberHistory_Condition]
}

enum FamilyMemberHistory_const {
  FamilyMemberHistory
}

"The actual or approximate date of birth of the relative."
scalar query_resourceById_oneOf_56_bornDate

"The actual or approximate date of birth of the relative."
scalar query_resourceById_oneOf_56_bornString

"The age of the relative at the time the family member history is recorded."
scalar query_resourceById_oneOf_56_ageString

"Deceased flag or the actual or approximate age of the relative at the time of death for the family member history record."
scalar query_resourceById_oneOf_56_deceasedDate

"Deceased flag or the actual or approximate age of the relative at the time of death for the family member history record."
scalar query_resourceById_oneOf_56_deceasedString

"Significant health conditions for a person related to the patient relevant in the context of care for the patient."
type FamilyMemberHistory_Condition {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  code: CodeableConcept!
  outcome: CodeableConcept
  contributedToDeath: boolean
  _contributedToDeath: Element
  onsetAge: Age
  onsetRange: Range
  onsetPeriod: Period
  onsetString: query_resourceById_oneOf_56_condition_items_onsetString
  _onsetString: Element
  "An area where general notes can be placed about this specific condition."
  note: [Annotation]
}

"Either the age of onset, range of approximate age or descriptive string can be recorded.  For conditions with multiple occurrences, this describes the first known occurrence."
scalar query_resourceById_oneOf_56_condition_items_onsetString

"Prospective warnings of potential issues when providing care to the patient."
type Flag {
  resourceType: Flag_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Business identifiers assigned to this flag by the performer or other systems which remain constant as the resource is updated and propagates from server to server."
  identifier: [Identifier]
  status: code
  _status: Element
  "Allows a flag to be divided into different categories like clinical, administrative etc. Intended to be used as a means of filtering which flags are displayed to particular user or in a given context."
  category: [CodeableConcept]
  code: CodeableConcept!
  subject: Reference!
  period: Period
  encounter: Reference
  author: Reference
}

enum Flag_const {
  Flag
}

"Describes the intended objective(s) for a patient, group or organization care, for example, weight loss, restoring an activity of daily living, obtaining herd immunity via immunization, meeting a process improvement objective, etc."
type Goal {
  resourceType: Goal_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Business identifiers assigned to this goal by the performer or other systems which remain constant as the resource is updated and propagates from server to server."
  identifier: [Identifier]
  lifecycleStatus: code
  _lifecycleStatus: Element
  achievementStatus: CodeableConcept
  "Indicates a category the goal falls within."
  category: [CodeableConcept]
  priority: CodeableConcept
  description: CodeableConcept!
  subject: Reference!
  startDate: query_resourceById_oneOf_58_startDate
  _startDate: Element
  startCodeableConcept: CodeableConcept
  "Indicates what should be done by when."
  target: [Goal_Target]
  statusDate: date
  _statusDate: Element
  statusReason: string
  _statusReason: Element
  expressedBy: Reference
  "The identified conditions and other health record elements that are intended to be addressed by the goal."
  addresses: [Reference]
  "Any comments related to the goal."
  note: [Annotation]
  "Identifies the change (or lack of change) at the point when the status of the goal is assessed."
  outcomeCode: [CodeableConcept]
  "Details of what's changed (or not changed)."
  outcomeReference: [Reference]
}

enum Goal_const {
  Goal
}

"The date or event after which the goal should begin being pursued."
scalar query_resourceById_oneOf_58_startDate

"Describes the intended objective(s) for a patient, group or organization care, for example, weight loss, restoring an activity of daily living, obtaining herd immunity via immunization, meeting a process improvement objective, etc."
type Goal_Target {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  measure: CodeableConcept
  detailQuantity: Quantity
  detailRange: Range
  detailCodeableConcept: CodeableConcept
  detailString: query_resourceById_oneOf_58_target_items_detailString
  _detailString: Element
  "The target value of the focus to be achieved to signify the fulfillment of the goal, e.g. 150 pounds, 7.0%. Either the high or low or both values of the range can be specified. When a low value is missing, it indicates that the goal is achieved at any focus value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any focus value at or above the low value."
  detailBoolean: Boolean
  _detailBoolean: Element
  detailInteger: query_resourceById_oneOf_58_target_items_detailInteger
  _detailInteger: Element
  detailRatio: Ratio
  dueDate: query_resourceById_oneOf_58_target_items_dueDate
  _dueDate: Element
  dueDuration: Duration
}

"The target value of the focus to be achieved to signify the fulfillment of the goal, e.g. 150 pounds, 7.0%. Either the high or low or both values of the range can be specified. When a low value is missing, it indicates that the goal is achieved at any focus value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any focus value at or above the low value."
scalar query_resourceById_oneOf_58_target_items_detailString

"The target value of the focus to be achieved to signify the fulfillment of the goal, e.g. 150 pounds, 7.0%. Either the high or low or both values of the range can be specified. When a low value is missing, it indicates that the goal is achieved at any focus value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any focus value at or above the low value."
scalar query_resourceById_oneOf_58_target_items_detailInteger

"Indicates either the date or the duration after start by which the goal should be met."
scalar query_resourceById_oneOf_58_target_items_dueDate

"A formal computable definition of a graph of resources - that is, a coherent set of resources that form a graph by following references. The Graph Definition resource defines a set and makes rules about the set."
type GraphDefinition {
  resourceType: GraphDefinition_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  url: uri
  _url: Element
  version: string
  _version: Element
  name: string
  _name: Element
  status: code
  _status: Element
  experimental: boolean
  _experimental: Element
  date: dateTime
  _date: Element
  publisher: string
  _publisher: Element
  "Contact details to assist a user in finding and communicating with the publisher."
  contact: [ContactDetail]
  description: markdown
  _description: Element
  "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate graph definition instances."
  useContext: [UsageContext]
  "A legal or geographic region in which the graph definition is intended to be used."
  jurisdiction: [CodeableConcept]
  purpose: markdown
  _purpose: Element
  start: code
  _start: Element
  profile: canonical
  "Links this graph makes rules about."
  link: [GraphDefinition_Link]
}

enum GraphDefinition_const {
  GraphDefinition
}

"A formal computable definition of a graph of resources - that is, a coherent set of resources that form a graph by following references. The Graph Definition resource defines a set and makes rules about the set."
type GraphDefinition_Link {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  path: string
  _path: Element
  sliceName: string
  _sliceName: Element
  min: integer
  _min: Element
  max: string
  _max: Element
  description: string
  _description: Element
  "Potential target for the link."
  target: [GraphDefinition_Target]
}

"A formal computable definition of a graph of resources - that is, a coherent set of resources that form a graph by following references. The Graph Definition resource defines a set and makes rules about the set."
type GraphDefinition_Target {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: code
  _type: Element
  params: string
  _params: Element
  profile: canonical
  "Compartment Consistency Rules."
  compartment: [GraphDefinition_Compartment]
  "Additional links from target resource."
  link: [GraphDefinition_Link]
}

"A formal computable definition of a graph of resources - that is, a coherent set of resources that form a graph by following references. The Graph Definition resource defines a set and makes rules about the set."
type GraphDefinition_Compartment {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  use: code
  _use: Element
  code: code
  _code: Element
  rule: code
  _rule: Element
  expression: string
  _expression: Element
  description: string
  _description: Element
}

"Represents a defined collection of entities that may be discussed or acted upon collectively but which are not expected to act collectively, and are not formally or legally recognized; i.e. a collection of entities that isn't an Organization."
type Group {
  resourceType: Group_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "A unique business identifier for this group."
  identifier: [Identifier]
  active: boolean
  _active: Element
  type: code
  _type: Element
  actual: boolean
  _actual: Element
  code: CodeableConcept
  name: string
  _name: Element
  quantity: unsignedInt
  _quantity: Element
  managingEntity: Reference
  "Identifies traits whose presence r absence is shared by members of the group."
  characteristic: [Group_Characteristic]
  "Identifies the resource instances that are members of the group."
  member: [Group_Member]
}

enum Group_const {
  Group
}

"Represents a defined collection of entities that may be discussed or acted upon collectively but which are not expected to act collectively, and are not formally or legally recognized; i.e. a collection of entities that isn't an Organization."
type Group_Characteristic {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  code: CodeableConcept!
  valueCodeableConcept: CodeableConcept
  "The value of the trait that holds (or does not hold - see 'exclude') for members of the group."
  valueBoolean: Boolean
  _valueBoolean: Element
  valueQuantity: Quantity
  valueRange: Range
  valueReference: Reference
  exclude: boolean
  _exclude: Element
  period: Period
}

"Represents a defined collection of entities that may be discussed or acted upon collectively but which are not expected to act collectively, and are not formally or legally recognized; i.e. a collection of entities that isn't an Organization."
type Group_Member {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  entity: Reference!
  period: Period
  inactive: boolean
  _inactive: Element
}

"A guidance response is the formal response to a guidance request, including any output parameters returned by the evaluation, as well as the description of any proposed actions to be taken."
type GuidanceResponse {
  resourceType: GuidanceResponse_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  requestIdentifier: Identifier
  "Allows a service to provide  unique, business identifiers for the response."
  identifier: [Identifier]
  moduleUri: query_resourceById_oneOf_61_moduleUri
  _moduleUri: Element
  moduleCanonical: query_resourceById_oneOf_61_moduleCanonical
  _moduleCanonical: Element
  moduleCodeableConcept: CodeableConcept
  status: code
  _status: Element
  subject: Reference
  encounter: Reference
  occurrenceDateTime: dateTime
  _occurrenceDateTime: Element
  performer: Reference
  "Describes the reason for the guidance response in coded or textual form."
  reasonCode: [CodeableConcept]
  "Indicates the reason the request was initiated. This is typically provided as a parameter to the evaluation and echoed by the service, although for some use cases, such as subscription- or event-based scenarios, it may provide an indication of the cause for the response."
  reasonReference: [Reference]
  "Provides a mechanism to communicate additional information about the response."
  note: [Annotation]
  "Messages resulting from the evaluation of the artifact or artifacts. As part of evaluating the request, the engine may produce informational or warning messages. These messages will be provided by this element."
  evaluationMessage: [Reference]
  outputParameters: Reference
  result: Reference
  "If the evaluation could not be completed due to lack of information, or additional information would potentially result in a more accurate response, this element will a description of the data required in order to proceed with the evaluation. A subsequent request to the service should include this data."
  dataRequirement: [DataRequirement]
}

enum GuidanceResponse_const {
  GuidanceResponse
}

"An identifier, CodeableConcept or canonical reference to the guidance that was requested."
scalar query_resourceById_oneOf_61_moduleUri

"An identifier, CodeableConcept or canonical reference to the guidance that was requested."
scalar query_resourceById_oneOf_61_moduleCanonical

"The details of a healthcare service available at a location."
type HealthcareService {
  resourceType: HealthcareService_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "External identifiers for this item."
  identifier: [Identifier]
  active: boolean
  _active: Element
  providedBy: Reference
  "Identifies the broad category of service being performed or delivered."
  category: [CodeableConcept]
  "The specific type of service that may be delivered or performed."
  type: [CodeableConcept]
  "Collection of specialties handled by the service site. This is more of a medical term."
  specialty: [CodeableConcept]
  "The location(s) where this healthcare service may be provided."
  location: [Reference]
  name: string
  _name: Element
  comment: string
  _comment: Element
  extraDetails: markdown
  _extraDetails: Element
  photo: Attachment
  "List of contacts related to this specific healthcare service."
  telecom: [ContactPoint]
  "The location(s) that this service is available to (not where the service is provided)."
  coverageArea: [Reference]
  "The code(s) that detail the conditions under which the healthcare service is available/offered."
  serviceProvisionCode: [CodeableConcept]
  "Does this service have specific eligibility requirements that need to be met in order to use the service?"
  eligibility: [HealthcareService_Eligibility]
  "Programs that this service is applicable to."
  program: [CodeableConcept]
  "Collection of characteristics (attributes)."
  characteristic: [CodeableConcept]
  "Some services are specifically made available in multiple languages, this property permits a directory to declare the languages this is offered in. Typically this is only provided where a service operates in communities with mixed languages used."
  communication: [CodeableConcept]
  "Ways that the service accepts referrals, if this is not provided then it is implied that no referral is required."
  referralMethod: [CodeableConcept]
  appointmentRequired: boolean
  _appointmentRequired: Element
  "A collection of times that the Service Site is available."
  availableTime: [HealthcareService_AvailableTime]
  "The HealthcareService is not available during this period of time due to the provided reason."
  notAvailable: [HealthcareService_NotAvailable]
  availabilityExceptions: string
  _availabilityExceptions: Element
  "Technical endpoints providing access to services operated for the specific healthcare services defined at this resource."
  endpoint: [Reference]
}

enum HealthcareService_const {
  HealthcareService
}

"The details of a healthcare service available at a location."
type HealthcareService_Eligibility {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  code: CodeableConcept
  comment: markdown
  _comment: Element
}

"The details of a healthcare service available at a location."
type HealthcareService_AvailableTime {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Indicates which days of the week are available between the start and end Times."
  daysOfWeek: [code]
  "Extensions for daysOfWeek"
  _daysOfWeek: [Element]
  allDay: boolean
  _allDay: Element
  availableStartTime: time
  _availableStartTime: Element
  availableEndTime: time
  _availableEndTime: Element
}

"The details of a healthcare service available at a location."
type HealthcareService_NotAvailable {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  description: string
  _description: Element
  during: Period
}

"Representation of the content produced in a DICOM imaging study. A study comprises a set of series, each of which includes a set of Service-Object Pair Instances (SOP Instances - images or other data) acquired or produced in a common context.  A series is of only one modality (e.g. X-ray, CT, MR, ultrasound), but a study may have multiple series of different modalities."
type ImagingStudy {
  resourceType: ImagingStudy_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Identifiers for the ImagingStudy such as DICOM Study Instance UID, and Accession Number."
  identifier: [Identifier]
  status: code
  _status: Element
  "A list of all the series.modality values that are actual acquisition modalities, i.e. those in the DICOM Context Group 29 (value set OID 1.2.840.10008.6.1.19)."
  modality: [Coding]
  subject: Reference!
  encounter: Reference
  started: dateTime
  _started: Element
  "A list of the diagnostic requests that resulted in this imaging study being performed."
  basedOn: [Reference]
  referrer: Reference
  "Who read the study and interpreted the images or other content."
  interpreter: [Reference]
  "The network service providing access (e.g., query, view, or retrieval) for the study. See implementation notes for information about using DICOM endpoints. A study-level endpoint applies to each series in the study, unless overridden by a series-level endpoint with the same Endpoint.connectionType."
  endpoint: [Reference]
  numberOfSeries: unsignedInt
  _numberOfSeries: Element
  numberOfInstances: unsignedInt
  _numberOfInstances: Element
  procedureReference: Reference
  "The code for the performed procedure type."
  procedureCode: [CodeableConcept]
  location: Reference
  "Description of clinical condition indicating why the ImagingStudy was requested."
  reasonCode: [CodeableConcept]
  "Indicates another resource whose existence justifies this Study."
  reasonReference: [Reference]
  "Per the recommended DICOM mapping, this element is derived from the Study Description attribute (0008,1030). Observations or findings about the imaging study should be recorded in another resource, e.g. Observation, and not in this element."
  note: [Annotation]
  description: string
  _description: Element
  "Each study has one or more series of images or other content."
  series: [ImagingStudy_Series]
}

enum ImagingStudy_const {
  ImagingStudy
}

"Representation of the content produced in a DICOM imaging study. A study comprises a set of series, each of which includes a set of Service-Object Pair Instances (SOP Instances - images or other data) acquired or produced in a common context.  A series is of only one modality (e.g. X-ray, CT, MR, ultrasound), but a study may have multiple series of different modalities."
type ImagingStudy_Series {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  uid: id
  _uid: Element
  number: unsignedInt
  _number: Element
  modality: Coding!
  description: string
  _description: Element
  numberOfInstances: unsignedInt
  _numberOfInstances: Element
  "The network service providing access (e.g., query, view, or retrieval) for this series. See implementation notes for information about using DICOM endpoints. A series-level endpoint, if present, has precedence over a study-level endpoint with the same Endpoint.connectionType."
  endpoint: [Reference]
  bodySite: Coding
  laterality: Coding
  "The specimen imaged, e.g., for whole slide imaging of a biopsy."
  specimen: [Reference]
  started: dateTime
  _started: Element
  "Indicates who or what performed the series and how they were involved."
  performer: [ImagingStudy_Performer]
  "A single SOP instance within the series, e.g. an image, or presentation state."
  instance: [ImagingStudy_Instance]
}

"Representation of the content produced in a DICOM imaging study. A study comprises a set of series, each of which includes a set of Service-Object Pair Instances (SOP Instances - images or other data) acquired or produced in a common context.  A series is of only one modality (e.g. X-ray, CT, MR, ultrasound), but a study may have multiple series of different modalities."
type ImagingStudy_Performer {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  function: CodeableConcept
  actor: Reference!
}

"Representation of the content produced in a DICOM imaging study. A study comprises a set of series, each of which includes a set of Service-Object Pair Instances (SOP Instances - images or other data) acquired or produced in a common context.  A series is of only one modality (e.g. X-ray, CT, MR, ultrasound), but a study may have multiple series of different modalities."
type ImagingStudy_Instance {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  uid: id
  _uid: Element
  sopClass: Coding!
  number: unsignedInt
  _number: Element
  title: string
  _title: Element
}

"Describes the event of a patient being administered a vaccine or a record of an immunization as reported by a patient, a clinician or another party."
type Immunization {
  resourceType: Immunization_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "A unique identifier assigned to this immunization record."
  identifier: [Identifier]
  status: code
  _status: Element
  statusReason: CodeableConcept
  vaccineCode: CodeableConcept!
  patient: Reference!
  encounter: Reference
  occurrenceDateTime: query_resourceById_oneOf_64_occurrenceDateTime
  _occurrenceDateTime: Element
  occurrenceString: query_resourceById_oneOf_64_occurrenceString
  _occurrenceString: Element
  recorded: dateTime
  _recorded: Element
  primarySource: boolean
  _primarySource: Element
  reportOrigin: CodeableConcept
  location: Reference
  manufacturer: Reference
  lotNumber: string
  _lotNumber: Element
  expirationDate: date
  _expirationDate: Element
  site: CodeableConcept
  route: CodeableConcept
  doseQuantity: Quantity
  "Indicates who performed the immunization event."
  performer: [Immunization_Performer]
  "Extra information about the immunization that is not conveyed by the other attributes."
  note: [Annotation]
  "Reasons why the vaccine was administered."
  reasonCode: [CodeableConcept]
  "Condition, Observation or DiagnosticReport that supports why the immunization was administered."
  reasonReference: [Reference]
  isSubpotent: boolean
  _isSubpotent: Element
  "Reason why a dose is considered to be subpotent."
  subpotentReason: [CodeableConcept]
  "Educational material presented to the patient (or guardian) at the time of vaccine administration."
  education: [Immunization_Education]
  "Indicates a patient's eligibility for a funding program."
  programEligibility: [CodeableConcept]
  fundingSource: CodeableConcept
  "Categorical data indicating that an adverse event is associated in time to an immunization."
  reaction: [Immunization_Reaction]
  "The protocol (set of recommendations) being followed by the provider who administered the dose."
  protocolApplied: [Immunization_ProtocolApplied]
}

enum Immunization_const {
  Immunization
}

"Date vaccine administered or was to be administered."
scalar query_resourceById_oneOf_64_occurrenceDateTime

"Date vaccine administered or was to be administered."
scalar query_resourceById_oneOf_64_occurrenceString

"Describes the event of a patient being administered a vaccine or a record of an immunization as reported by a patient, a clinician or another party."
type Immunization_Performer {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  function: CodeableConcept
  actor: Reference!
}

"Describes the event of a patient being administered a vaccine or a record of an immunization as reported by a patient, a clinician or another party."
type Immunization_Education {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  documentType: string
  _documentType: Element
  reference: uri
  _reference: Element
  publicationDate: dateTime
  _publicationDate: Element
  presentationDate: dateTime
  _presentationDate: Element
}

"Describes the event of a patient being administered a vaccine or a record of an immunization as reported by a patient, a clinician or another party."
type Immunization_Reaction {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  date: dateTime
  _date: Element
  detail: Reference
  reported: boolean
  _reported: Element
}

"Describes the event of a patient being administered a vaccine or a record of an immunization as reported by a patient, a clinician or another party."
type Immunization_ProtocolApplied {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  series: string
  _series: Element
  authority: Reference
  "The vaccine preventable disease the dose is being administered against."
  targetDisease: [CodeableConcept]
  doseNumberPositiveInt: query_resourceById_oneOf_64_protocolApplied_items_doseNumberPositiveInt
  _doseNumberPositiveInt: Element
  doseNumberString: query_resourceById_oneOf_64_protocolApplied_items_doseNumberString
  _doseNumberString: Element
  seriesDosesPositiveInt: query_resourceById_oneOf_64_protocolApplied_items_seriesDosesPositiveInt
  _seriesDosesPositiveInt: Element
  seriesDosesString: query_resourceById_oneOf_64_protocolApplied_items_seriesDosesString
  _seriesDosesString: Element
}

"Nominal position in a series."
scalar query_resourceById_oneOf_64_protocolApplied_items_doseNumberPositiveInt

"Nominal position in a series."
scalar query_resourceById_oneOf_64_protocolApplied_items_doseNumberString

"The recommended number of doses to achieve immunity."
scalar query_resourceById_oneOf_64_protocolApplied_items_seriesDosesPositiveInt

"The recommended number of doses to achieve immunity."
scalar query_resourceById_oneOf_64_protocolApplied_items_seriesDosesString

"Describes a comparison of an immunization event against published recommendations to determine if the administration is \\"valid\\" in relation to those  recommendations."
type ImmunizationEvaluation {
  resourceType: ImmunizationEvaluation_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "A unique identifier assigned to this immunization evaluation record."
  identifier: [Identifier]
  status: code
  _status: Element
  patient: Reference!
  date: dateTime
  _date: Element
  authority: Reference
  targetDisease: CodeableConcept!
  immunizationEvent: Reference!
  doseStatus: CodeableConcept!
  "Provides an explanation as to why the vaccine administration event is valid or not relative to the published recommendations."
  doseStatusReason: [CodeableConcept]
  description: string
  _description: Element
  series: string
  _series: Element
  doseNumberPositiveInt: query_resourceById_oneOf_65_doseNumberPositiveInt
  _doseNumberPositiveInt: Element
  doseNumberString: query_resourceById_oneOf_65_doseNumberString
  _doseNumberString: Element
  seriesDosesPositiveInt: query_resourceById_oneOf_65_seriesDosesPositiveInt
  _seriesDosesPositiveInt: Element
  seriesDosesString: query_resourceById_oneOf_65_seriesDosesString
  _seriesDosesString: Element
}

enum ImmunizationEvaluation_const {
  ImmunizationEvaluation
}

"Nominal position in a series."
scalar query_resourceById_oneOf_65_doseNumberPositiveInt

"Nominal position in a series."
scalar query_resourceById_oneOf_65_doseNumberString

"The recommended number of doses to achieve immunity."
scalar query_resourceById_oneOf_65_seriesDosesPositiveInt

"The recommended number of doses to achieve immunity."
scalar query_resourceById_oneOf_65_seriesDosesString

"A patient's point-in-time set of recommendations (i.e. forecasting) according to a published schedule with optional supporting justification."
type ImmunizationRecommendation {
  resourceType: ImmunizationRecommendation_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "A unique identifier assigned to this particular recommendation record."
  identifier: [Identifier]
  patient: Reference!
  date: dateTime
  _date: Element
  authority: Reference
  "Vaccine administration recommendations."
  recommendation: [ImmunizationRecommendation_Recommendation]!
}

enum ImmunizationRecommendation_const {
  ImmunizationRecommendation
}

"A patient's point-in-time set of recommendations (i.e. forecasting) according to a published schedule with optional supporting justification."
type ImmunizationRecommendation_Recommendation {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Vaccine(s) or vaccine group that pertain to the recommendation."
  vaccineCode: [CodeableConcept]
  targetDisease: CodeableConcept
  "Vaccine(s) which should not be used to fulfill the recommendation."
  contraindicatedVaccineCode: [CodeableConcept]
  forecastStatus: CodeableConcept!
  "The reason for the assigned forecast status."
  forecastReason: [CodeableConcept]
  "Vaccine date recommendations.  For example, earliest date to administer, latest date to administer, etc."
  dateCriterion: [ImmunizationRecommendation_DateCriterion]
  description: string
  _description: Element
  series: string
  _series: Element
  doseNumberPositiveInt: query_resourceById_oneOf_66_recommendation_items_doseNumberPositiveInt
  _doseNumberPositiveInt: Element
  doseNumberString: query_resourceById_oneOf_66_recommendation_items_doseNumberString
  _doseNumberString: Element
  seriesDosesPositiveInt: query_resourceById_oneOf_66_recommendation_items_seriesDosesPositiveInt
  _seriesDosesPositiveInt: Element
  seriesDosesString: query_resourceById_oneOf_66_recommendation_items_seriesDosesString
  _seriesDosesString: Element
  "Immunization event history and/or evaluation that supports the status and recommendation."
  supportingImmunization: [Reference]
  "Patient Information that supports the status and recommendation.  This includes patient observations, adverse reactions and allergy/intolerance information."
  supportingPatientInformation: [Reference]
}

"A patient's point-in-time set of recommendations (i.e. forecasting) according to a published schedule with optional supporting justification."
type ImmunizationRecommendation_DateCriterion {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  code: CodeableConcept!
  value: dateTime
  _value: Element
}

"Nominal position of the recommended dose in a series (e.g. dose 2 is the next recommended dose)."
scalar query_resourceById_oneOf_66_recommendation_items_doseNumberPositiveInt

"Nominal position of the recommended dose in a series (e.g. dose 2 is the next recommended dose)."
scalar query_resourceById_oneOf_66_recommendation_items_doseNumberString

"The recommended number of doses to achieve immunity."
scalar query_resourceById_oneOf_66_recommendation_items_seriesDosesPositiveInt

"The recommended number of doses to achieve immunity."
scalar query_resourceById_oneOf_66_recommendation_items_seriesDosesString

"A set of rules of how a particular interoperability or standards problem is solved - typically through the use of FHIR resources. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts."
type ImplementationGuide {
  resourceType: ImplementationGuide_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  url: uri
  _url: Element
  version: string
  _version: Element
  name: string
  _name: Element
  title: string
  _title: Element
  status: code
  _status: Element
  experimental: boolean
  _experimental: Element
  date: dateTime
  _date: Element
  publisher: string
  _publisher: Element
  "Contact details to assist a user in finding and communicating with the publisher."
  contact: [ContactDetail]
  description: markdown
  _description: Element
  "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate implementation guide instances."
  useContext: [UsageContext]
  "A legal or geographic region in which the implementation guide is intended to be used."
  jurisdiction: [CodeableConcept]
  copyright: markdown
  _copyright: Element
  packageId: id
  _packageId: Element
  license: code
  _license: Element
  "The version(s) of the FHIR specification that this ImplementationGuide targets - e.g. describes how to use. The value of this element is the formal version of the specification, without the revision number, e.g. [publication].[major].[minor], which is 4.3.0 for this version."
  fhirVersion: [code]
  "Extensions for fhirVersion"
  _fhirVersion: [Element]
  "Another implementation guide that this implementation depends on. Typically, an implementation guide uses value sets, profiles etc.defined in other implementation guides."
  dependsOn: [ImplementationGuide_DependsOn]
  "A set of profiles that all resources covered by this implementation guide must conform to."
  global: [ImplementationGuide_Global]
  definition: ImplementationGuide_Definition
  manifest: ImplementationGuide_Manifest
}

enum ImplementationGuide_const {
  ImplementationGuide
}

"A set of rules of how a particular interoperability or standards problem is solved - typically through the use of FHIR resources. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts."
type ImplementationGuide_DependsOn {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  uri: canonical!
  packageId: id
  _packageId: Element
  version: string
  _version: Element
}

"A set of rules of how a particular interoperability or standards problem is solved - typically through the use of FHIR resources. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts."
type ImplementationGuide_Global {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: code
  _type: Element
  profile: canonical!
}

"A set of rules of how a particular interoperability or standards problem is solved - typically through the use of FHIR resources. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts."
type ImplementationGuide_Definition {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "A logical group of resources. Logical groups can be used when building pages."
  grouping: [ImplementationGuide_Grouping]
  "A resource that is part of the implementation guide. Conformance resources (value set, structure definition, capability statements etc.) are obvious candidates for inclusion, but any kind of resource can be included as an example resource."
  resource: [ImplementationGuide_Resource]!
  page: ImplementationGuide_Page
  "Defines how IG is built by tools."
  parameter: [ImplementationGuide_Parameter]
  "A template for building resources."
  template: [ImplementationGuide_Template]
}

"A set of rules of how a particular interoperability or standards problem is solved - typically through the use of FHIR resources. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts."
type ImplementationGuide_Grouping {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  name: string
  _name: Element
  description: string
  _description: Element
}

"A set of rules of how a particular interoperability or standards problem is solved - typically through the use of FHIR resources. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts."
type ImplementationGuide_Resource {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  reference: Reference!
  "Indicates the FHIR Version(s) this artifact is intended to apply to. If no versions are specified, the resource is assumed to apply to all the versions stated in ImplementationGuide.fhirVersion."
  fhirVersion: [code]
  "Extensions for fhirVersion"
  _fhirVersion: [Element]
  name: string
  _name: Element
  description: string
  _description: Element
  "If true or a reference, indicates the resource is an example instance.  If a reference is present, indicates that the example is an example of the specified profile."
  exampleBoolean: Boolean
  _exampleBoolean: Element
  exampleCanonical: query_resourceById_oneOf_67_definition_resource_items_exampleCanonical
  _exampleCanonical: Element
  groupingId: id
  _groupingId: Element
}

"If true or a reference, indicates the resource is an example instance.  If a reference is present, indicates that the example is an example of the specified profile."
scalar query_resourceById_oneOf_67_definition_resource_items_exampleCanonical

"A set of rules of how a particular interoperability or standards problem is solved - typically through the use of FHIR resources. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts."
type ImplementationGuide_Page {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  nameUrl: query_resourceById_oneOf_67_definition_page_nameUrl
  _nameUrl: Element
  nameReference: Reference
  title: string
  _title: Element
  generation: code
  _generation: Element
  "Nested Pages/Sections under this page."
  page: [ImplementationGuide_Page]
}

"The source address for the page."
scalar query_resourceById_oneOf_67_definition_page_nameUrl

"A set of rules of how a particular interoperability or standards problem is solved - typically through the use of FHIR resources. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts."
type ImplementationGuide_Parameter {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  code: code
  _code: Element
  value: string
  _value: Element
}

"A set of rules of how a particular interoperability or standards problem is solved - typically through the use of FHIR resources. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts."
type ImplementationGuide_Template {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  code: code
  _code: Element
  source: string
  _source: Element
  scope: string
  _scope: Element
}

"A set of rules of how a particular interoperability or standards problem is solved - typically through the use of FHIR resources. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts."
type ImplementationGuide_Manifest {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  rendering: url
  _rendering: Element
  "A resource that is part of the implementation guide. Conformance resources (value set, structure definition, capability statements etc.) are obvious candidates for inclusion, but any kind of resource can be included as an example resource."
  resource: [ImplementationGuide_Resource1]!
  "Information about a page within the IG."
  page: [ImplementationGuide_Page1]
  "Indicates a relative path to an image that exists within the IG."
  image: [string]
  "Extensions for image"
  _image: [Element]
  "Indicates the relative path of an additional non-page, non-image file that is part of the IG - e.g. zip, jar and similar files that could be the target of a hyperlink in a derived IG."
  other: [string]
  "Extensions for other"
  _other: [Element]
}

"A set of rules of how a particular interoperability or standards problem is solved - typically through the use of FHIR resources. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts."
type ImplementationGuide_Resource1 {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  reference: Reference!
  "If true or a reference, indicates the resource is an example instance.  If a reference is present, indicates that the example is an example of the specified profile."
  exampleBoolean: Boolean
  _exampleBoolean: Element
  exampleCanonical: query_resourceById_oneOf_67_manifest_resource_items_exampleCanonical
  _exampleCanonical: Element
  relativePath: url
  _relativePath: Element
}

"If true or a reference, indicates the resource is an example instance.  If a reference is present, indicates that the example is an example of the specified profile."
scalar query_resourceById_oneOf_67_manifest_resource_items_exampleCanonical

"A set of rules of how a particular interoperability or standards problem is solved - typically through the use of FHIR resources. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts."
type ImplementationGuide_Page1 {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  name: string
  _name: Element
  title: string
  _title: Element
  "The name of an anchor available on the page."
  anchor: [string]
  "Extensions for anchor"
  _anchor: [Element]
}

"An ingredient of a manufactured item or pharmaceutical product."
type Ingredient {
  resourceType: Ingredient_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  identifier: Identifier
  status: code
  _status: Element
  "The product which this ingredient is a constituent part of."
  for: [Reference]
  role: CodeableConcept!
  "A classification of the ingredient identifying its precise purpose(s) in the drug product. This extends the Ingredient.role to add more detail. Example: antioxidant, alkalizing agent."
  function: [CodeableConcept]
  allergenicIndicator: boolean
  _allergenicIndicator: Element
  "The organization(s) that manufacture this ingredient. Can be used to indicate:         1) Organizations we are aware of that manufacture this ingredient         2) Specific Manufacturer(s) currently being used         3) Set of organisations allowed to manufacture this ingredient for this product         Users must be clear on the application of context relevant to their use case."
  manufacturer: [Ingredient_Manufacturer]
  substance: Ingredient_Substance!
}

enum Ingredient_const {
  Ingredient
}

"An ingredient of a manufactured item or pharmaceutical product."
type Ingredient_Manufacturer {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  role: code
  _role: Element
  manufacturer: Reference!
}

"An ingredient of a manufactured item or pharmaceutical product."
type Ingredient_Substance {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  code: CodeableReference!
  "The quantity of substance in the unit of presentation, or in the volume (or mass) of the single pharmaceutical product or manufactured item. The allowed repetitions do not represent different strengths, but are different representations - mathematically equivalent - of a single strength."
  strength: [Ingredient_Strength]
}

"An ingredient of a manufactured item or pharmaceutical product."
type Ingredient_Strength {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  presentationRatio: Ratio
  presentationRatioRange: RatioRange
  textPresentation: string
  _textPresentation: Element
  concentrationRatio: Ratio
  concentrationRatioRange: RatioRange
  textConcentration: string
  _textConcentration: Element
  measurementPoint: string
  _measurementPoint: Element
  "The country or countries for which the strength range applies."
  country: [CodeableConcept]
  "Strength expressed in terms of a reference substance. For when the ingredient strength is additionally expressed as equivalent to the strength of some other closely related substance (e.g. salt vs. base). Reference strength represents the strength (quantitative composition) of the active moiety of the active substance. There are situations when the active substance and active moiety are different, therefore both a strength and a reference strength are needed."
  referenceStrength: [Ingredient_ReferenceStrength]
}

"An ingredient of a manufactured item or pharmaceutical product."
type Ingredient_ReferenceStrength {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  substance: CodeableReference
  strengthRatio: Ratio
  strengthRatioRange: RatioRange
  measurementPoint: string
  _measurementPoint: Element
  "The country or countries for which the strength range applies."
  country: [CodeableConcept]
}

"Details of a Health Insurance product/plan provided by an organization."
type InsurancePlan {
  resourceType: InsurancePlan_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Business identifiers assigned to this health insurance product which remain constant as the resource is updated and propagates from server to server."
  identifier: [Identifier]
  status: code
  _status: Element
  "The kind of health insurance product."
  type: [CodeableConcept]
  name: string
  _name: Element
  "A list of alternate names that the product is known as, or was known as in the past."
  alias: [string]
  "Extensions for alias"
  _alias: [Element]
  period: Period
  ownedBy: Reference
  administeredBy: Reference
  "The geographic region in which a health insurance product's benefits apply."
  coverageArea: [Reference]
  "The contact for the health insurance product for a certain purpose."
  contact: [InsurancePlan_Contact]
  "The technical endpoints providing access to services operated for the health insurance product."
  endpoint: [Reference]
  "Reference to the network included in the health insurance product."
  network: [Reference]
  "Details about the coverage offered by the insurance product."
  coverage: [InsurancePlan_Coverage]
  "Details about an insurance plan."
  plan: [InsurancePlan_Plan]
}

enum InsurancePlan_const {
  InsurancePlan
}

"Details of a Health Insurance product/plan provided by an organization."
type InsurancePlan_Contact {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  purpose: CodeableConcept
  name: HumanName
  "A contact detail (e.g. a telephone number or an email address) by which the party may be contacted."
  telecom: [ContactPoint]
  address: Address
}

"Details of a Health Insurance product/plan provided by an organization."
type InsurancePlan_Coverage {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: CodeableConcept!
  "Reference to the network that providing the type of coverage."
  network: [Reference]
  "Specific benefits under this type of coverage."
  benefit: [InsurancePlan_Benefit]!
}

"Details of a Health Insurance product/plan provided by an organization."
type InsurancePlan_Benefit {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: CodeableConcept!
  requirement: string
  _requirement: Element
  "The specific limits on the benefit."
  limit: [InsurancePlan_Limit]
}

"Details of a Health Insurance product/plan provided by an organization."
type InsurancePlan_Limit {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  value: Quantity
  code: CodeableConcept
}

"Details of a Health Insurance product/plan provided by an organization."
type InsurancePlan_Plan {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Business identifiers assigned to this health insurance plan which remain constant as the resource is updated and propagates from server to server."
  identifier: [Identifier]
  type: CodeableConcept
  "The geographic region in which a health insurance plan's benefits apply."
  coverageArea: [Reference]
  "Reference to the network that providing the type of coverage."
  network: [Reference]
  "Overall costs associated with the plan."
  generalCost: [InsurancePlan_GeneralCost]
  "Costs associated with the coverage provided by the product."
  specificCost: [InsurancePlan_SpecificCost]
}

"Details of a Health Insurance product/plan provided by an organization."
type InsurancePlan_GeneralCost {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: CodeableConcept
  groupSize: positiveInt
  _groupSize: Element
  cost: Money
  comment: string
  _comment: Element
}

"Details of a Health Insurance product/plan provided by an organization."
type InsurancePlan_SpecificCost {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  category: CodeableConcept!
  "List of the specific benefits under this category of benefit."
  benefit: [InsurancePlan_Benefit1]
}

"Details of a Health Insurance product/plan provided by an organization."
type InsurancePlan_Benefit1 {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: CodeableConcept!
  "List of the costs associated with a specific benefit."
  cost: [InsurancePlan_Cost]
}

"Details of a Health Insurance product/plan provided by an organization."
type InsurancePlan_Cost {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: CodeableConcept!
  applicability: CodeableConcept
  "Additional information about the cost, such as information about funding sources (e.g. HSA, HRA, FSA, RRA)."
  qualifiers: [CodeableConcept]
  value: Quantity
}

"Invoice containing collected ChargeItems from an Account with calculated individual and total price for Billing purpose."
type Invoice {
  resourceType: Invoice_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Identifier of this Invoice, often used for reference in correspondence about this invoice or for tracking of payments."
  identifier: [Identifier]
  status: code
  _status: Element
  cancelledReason: string
  _cancelledReason: Element
  type: CodeableConcept
  subject: Reference
  recipient: Reference
  date: dateTime
  _date: Element
  "Indicates who or what performed or participated in the charged service."
  participant: [Invoice_Participant]
  issuer: Reference
  account: Reference
  "Each line item represents one charge for goods and services rendered. Details such as date, code and amount are found in the referenced ChargeItem resource."
  lineItem: [Invoice_LineItem]
  "The total amount for the Invoice may be calculated as the sum of the line items with surcharges/deductions that apply in certain conditions.  The priceComponent element can be used to offer transparency to the recipient of the Invoice of how the total price was calculated."
  totalPriceComponent: [Invoice_PriceComponent]
  totalNet: Money
  totalGross: Money
  paymentTerms: markdown
  _paymentTerms: Element
  "Comments made about the invoice by the issuer, subject, or other participants."
  note: [Annotation]
}

enum Invoice_const {
  Invoice
}

"Invoice containing collected ChargeItems from an Account with calculated individual and total price for Billing purpose."
type Invoice_Participant {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  role: CodeableConcept
  actor: Reference!
}

"Invoice containing collected ChargeItems from an Account with calculated individual and total price for Billing purpose."
type Invoice_LineItem {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  sequence: positiveInt
  _sequence: Element
  chargeItemReference: Reference
  chargeItemCodeableConcept: CodeableConcept
  "The price for a ChargeItem may be calculated as a base price with surcharges/deductions that apply in certain conditions. A ChargeItemDefinition resource that defines the prices, factors and conditions that apply to a billing code is currently under development. The priceComponent element can be used to offer transparency to the recipient of the Invoice as to how the prices have been calculated."
  priceComponent: [Invoice_PriceComponent]
}

"Invoice containing collected ChargeItems from an Account with calculated individual and total price for Billing purpose."
type Invoice_PriceComponent {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: code
  _type: Element
  code: CodeableConcept
  factor: decimal
  _factor: Element
  amount: Money
}

"The Library resource is a general-purpose container for knowledge asset definitions. It can be used to describe and expose existing knowledge assets such as logic libraries and information model descriptions, as well as to describe a collection of knowledge assets."
type Library {
  resourceType: Library_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  url: uri
  _url: Element
  "A formal identifier that is used to identify this library when it is represented in other formats, or referenced in a specification, model, design or an instance. e.g. CMS or NQF identifiers for a measure artifact. Note that at least one identifier is required for non-experimental active artifacts."
  identifier: [Identifier]
  version: string
  _version: Element
  name: string
  _name: Element
  title: string
  _title: Element
  subtitle: string
  _subtitle: Element
  status: code
  _status: Element
  experimental: boolean
  _experimental: Element
  type: CodeableConcept!
  subjectCodeableConcept: CodeableConcept
  subjectReference: Reference
  date: dateTime
  _date: Element
  publisher: string
  _publisher: Element
  "Contact details to assist a user in finding and communicating with the publisher."
  contact: [ContactDetail]
  description: markdown
  _description: Element
  "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate library instances."
  useContext: [UsageContext]
  "A legal or geographic region in which the library is intended to be used."
  jurisdiction: [CodeableConcept]
  purpose: markdown
  _purpose: Element
  usage: string
  _usage: Element
  copyright: markdown
  _copyright: Element
  approvalDate: date
  _approvalDate: Element
  lastReviewDate: date
  _lastReviewDate: Element
  effectivePeriod: Period
  "Descriptive topics related to the content of the library. Topics provide a high-level categorization of the library that can be useful for filtering and searching."
  topic: [CodeableConcept]
  "An individiual or organization primarily involved in the creation and maintenance of the content."
  author: [ContactDetail]
  "An individual or organization primarily responsible for internal coherence of the content."
  editor: [ContactDetail]
  "An individual or organization primarily responsible for review of some aspect of the content."
  reviewer: [ContactDetail]
  "An individual or organization responsible for officially endorsing the content for use in some setting."
  endorser: [ContactDetail]
  "Related artifacts such as additional documentation, justification, or bibliographic references."
  relatedArtifact: [RelatedArtifact]
  "The parameter element defines parameters used by the library."
  parameter: [ParameterDefinition]
  "Describes a set of data that must be provided in order to be able to successfully perform the computations defined by the library."
  dataRequirement: [DataRequirement]
  "The content of the library as an Attachment. The content may be a reference to a url, or may be directly embedded as a base-64 string. Either way, the contentType of the attachment determines how to interpret the content."
  content: [Attachment]
}

enum Library_const {
  Library
}

"Identifies two or more records (resource instances) that refer to the same real-world \\"occurrence\\"."
type Linkage {
  resourceType: Linkage_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  active: boolean
  _active: Element
  author: Reference
  "Identifies which record considered as the reference to the same real-world occurrence as well as how the items should be evaluated within the collection of linked items."
  item: [Linkage_Item]!
}

enum Linkage_const {
  Linkage
}

"Identifies two or more records (resource instances) that refer to the same real-world \\"occurrence\\"."
type Linkage_Item {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: code
  _type: Element
  resource: Reference!
}

"A list is a curated collection of resources."
type List {
  resourceType: List_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Identifier for the List assigned for business purposes outside the context of FHIR."
  identifier: [Identifier]
  status: code
  _status: Element
  mode: code
  _mode: Element
  title: string
  _title: Element
  code: CodeableConcept
  subject: Reference
  encounter: Reference
  date: dateTime
  _date: Element
  source: Reference
  orderedBy: CodeableConcept
  "Comments that apply to the overall list."
  note: [Annotation]
  "Entries in this list."
  entry: [List_Entry]
  emptyReason: CodeableConcept
}

enum List_const {
  List
}

"A list is a curated collection of resources."
type List_Entry {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  flag: CodeableConcept
  deleted: boolean
  _deleted: Element
  date: dateTime
  _date: Element
  item: Reference!
}

"Details and position information for a physical place where services are provided and resources and participants may be stored, found, contained, or accommodated."
type Location {
  resourceType: Location_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Unique code or number identifying the location to its users."
  identifier: [Identifier]
  status: code
  _status: Element
  operationalStatus: Coding
  name: string
  _name: Element
  "A list of alternate names that the location is known as, or was known as, in the past."
  alias: [string]
  "Extensions for alias"
  _alias: [Element]
  description: string
  _description: Element
  mode: code
  _mode: Element
  "Indicates the type of function performed at the location."
  type: [CodeableConcept]
  "The contact details of communication devices available at the location. This can include phone numbers, fax numbers, mobile numbers, email addresses and web sites."
  telecom: [ContactPoint]
  address: Address
  physicalType: CodeableConcept
  position: Location_Position
  managingOrganization: Reference
  partOf: Reference
  "What days/times during a week is this location usually open."
  hoursOfOperation: [Location_HoursOfOperation]
  availabilityExceptions: string
  _availabilityExceptions: Element
  "Technical endpoints providing access to services operated for the location."
  endpoint: [Reference]
}

enum Location_const {
  Location
}

"Details and position information for a physical place where services are provided and resources and participants may be stored, found, contained, or accommodated."
type Location_Position {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  longitude: decimal
  _longitude: Element
  latitude: decimal
  _latitude: Element
  altitude: decimal
  _altitude: Element
}

"Details and position information for a physical place where services are provided and resources and participants may be stored, found, contained, or accommodated."
type Location_HoursOfOperation {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Indicates which days of the week are available between the start and end Times."
  daysOfWeek: [code]
  "Extensions for daysOfWeek"
  _daysOfWeek: [Element]
  allDay: boolean
  _allDay: Element
  openingTime: time
  _openingTime: Element
  closingTime: time
  _closingTime: Element
}

"The definition and characteristics of a medicinal manufactured item, such as a tablet or capsule, as contained in a packaged medicinal product."
type ManufacturedItemDefinition {
  resourceType: ManufacturedItemDefinition_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Unique identifier."
  identifier: [Identifier]
  status: code
  _status: Element
  manufacturedDoseForm: CodeableConcept!
  unitOfPresentation: CodeableConcept
  "Manufacturer of the item (Note that this should be named \\"manufacturer\\" but it currently causes technical issues)."
  manufacturer: [Reference]
  "The ingredients of this manufactured item. This is only needed if the ingredients are not specified by incoming references from the Ingredient resource."
  ingredient: [CodeableConcept]
  "General characteristics of this item."
  property: [ManufacturedItemDefinition_Property]
}

enum ManufacturedItemDefinition_const {
  ManufacturedItemDefinition
}

"The definition and characteristics of a medicinal manufactured item, such as a tablet or capsule, as contained in a packaged medicinal product."
type ManufacturedItemDefinition_Property {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: CodeableConcept!
  valueCodeableConcept: CodeableConcept
  valueQuantity: Quantity
  valueDate: query_resourceById_oneOf_75_property_items_valueDate
  _valueDate: Element
  "A value for the characteristic."
  valueBoolean: Boolean
  _valueBoolean: Element
  valueAttachment: Attachment
}

"A value for the characteristic."
scalar query_resourceById_oneOf_75_property_items_valueDate

"The Measure resource provides the definition of a quality measure."
type Measure {
  resourceType: Measure_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  url: uri
  _url: Element
  "A formal identifier that is used to identify this measure when it is represented in other formats, or referenced in a specification, model, design or an instance."
  identifier: [Identifier]
  version: string
  _version: Element
  name: string
  _name: Element
  title: string
  _title: Element
  subtitle: string
  _subtitle: Element
  status: code
  _status: Element
  experimental: boolean
  _experimental: Element
  subjectCodeableConcept: CodeableConcept
  subjectReference: Reference
  date: dateTime
  _date: Element
  publisher: string
  _publisher: Element
  "Contact details to assist a user in finding and communicating with the publisher."
  contact: [ContactDetail]
  description: markdown
  _description: Element
  "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate measure instances."
  useContext: [UsageContext]
  "A legal or geographic region in which the measure is intended to be used."
  jurisdiction: [CodeableConcept]
  purpose: markdown
  _purpose: Element
  usage: string
  _usage: Element
  copyright: markdown
  _copyright: Element
  approvalDate: date
  _approvalDate: Element
  lastReviewDate: date
  _lastReviewDate: Element
  effectivePeriod: Period
  "Descriptive topics related to the content of the measure. Topics provide a high-level categorization grouping types of measures that can be useful for filtering and searching."
  topic: [CodeableConcept]
  "An individiual or organization primarily involved in the creation and maintenance of the content."
  author: [ContactDetail]
  "An individual or organization primarily responsible for internal coherence of the content."
  editor: [ContactDetail]
  "An individual or organization primarily responsible for review of some aspect of the content."
  reviewer: [ContactDetail]
  "An individual or organization responsible for officially endorsing the content for use in some setting."
  endorser: [ContactDetail]
  "Related artifacts such as additional documentation, justification, or bibliographic references."
  relatedArtifact: [RelatedArtifact]
  "A reference to a Library resource containing the formal logic used by the measure."
  library: [canonical]
  disclaimer: markdown
  _disclaimer: Element
  scoring: CodeableConcept
  compositeScoring: CodeableConcept
  "Indicates whether the measure is used to examine a process, an outcome over time, a patient-reported outcome, or a structure measure such as utilization."
  type: [CodeableConcept]
  riskAdjustment: string
  _riskAdjustment: Element
  rateAggregation: string
  _rateAggregation: Element
  rationale: markdown
  _rationale: Element
  clinicalRecommendationStatement: markdown
  _clinicalRecommendationStatement: Element
  improvementNotation: CodeableConcept
  "Provides a description of an individual term used within the measure."
  definition: [markdown]
  "Extensions for definition"
  _definition: [Element]
  guidance: markdown
  _guidance: Element
  "A group of population criteria for the measure."
  group: [Measure_Group]
  "The supplemental data criteria for the measure report, specified as either the name of a valid CQL expression within a referenced library, or a valid FHIR Resource Path."
  supplementalData: [Measure_SupplementalData]
}

enum Measure_const {
  Measure
}

"The Measure resource provides the definition of a quality measure."
type Measure_Group {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  code: CodeableConcept
  description: string
  _description: Element
  "A population criteria for the measure."
  population: [Measure_Population]
  "The stratifier criteria for the measure report, specified as either the name of a valid CQL expression defined within a referenced library or a valid FHIR Resource Path."
  stratifier: [Measure_Stratifier]
}

"The Measure resource provides the definition of a quality measure."
type Measure_Population {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  code: CodeableConcept
  description: string
  _description: Element
  criteria: Expression!
}

"The Measure resource provides the definition of a quality measure."
type Measure_Stratifier {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  code: CodeableConcept
  description: string
  _description: Element
  criteria: Expression
  "A component of the stratifier criteria for the measure report, specified as either the name of a valid CQL expression defined within a referenced library or a valid FHIR Resource Path."
  component: [Measure_Component]
}

"The Measure resource provides the definition of a quality measure."
type Measure_Component {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  code: CodeableConcept
  description: string
  _description: Element
  criteria: Expression!
}

"The Measure resource provides the definition of a quality measure."
type Measure_SupplementalData {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  code: CodeableConcept
  "An indicator of the intended usage for the supplemental data element. Supplemental data indicates the data is additional information requested to augment the measure information. Risk adjustment factor indicates the data is additional information used to calculate risk adjustment factors when applying a risk model to the measure calculation."
  usage: [CodeableConcept]
  description: string
  _description: Element
  criteria: Expression!
}

"The MeasureReport resource contains the results of the calculation of a measure; and optionally a reference to the resources involved in that calculation."
type MeasureReport {
  resourceType: MeasureReport_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "A formal identifier that is used to identify this MeasureReport when it is represented in other formats or referenced in a specification, model, design or an instance."
  identifier: [Identifier]
  status: code
  _status: Element
  type: code
  _type: Element
  measure: canonical!
  subject: Reference
  date: dateTime
  _date: Element
  reporter: Reference
  period: Period!
  improvementNotation: CodeableConcept
  "The results of the calculation, one for each population group in the measure."
  group: [MeasureReport_Group]
  "A reference to a Bundle containing the Resources that were used in the calculation of this measure."
  evaluatedResource: [Reference]
}

enum MeasureReport_const {
  MeasureReport
}

"The MeasureReport resource contains the results of the calculation of a measure; and optionally a reference to the resources involved in that calculation."
type MeasureReport_Group {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  code: CodeableConcept
  "The populations that make up the population group, one for each type of population appropriate for the measure."
  population: [MeasureReport_Population]
  measureScore: Quantity
  "When a measure includes multiple stratifiers, there will be a stratifier group for each stratifier defined by the measure."
  stratifier: [MeasureReport_Stratifier]
}

"The MeasureReport resource contains the results of the calculation of a measure; and optionally a reference to the resources involved in that calculation."
type MeasureReport_Population {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  code: CodeableConcept
  count: integer
  _count: Element
  subjectResults: Reference
}

"The MeasureReport resource contains the results of the calculation of a measure; and optionally a reference to the resources involved in that calculation."
type MeasureReport_Stratifier {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "The meaning of this stratifier, as defined in the measure definition."
  code: [CodeableConcept]
  "This element contains the results for a single stratum within the stratifier. For example, when stratifying on administrative gender, there will be four strata, one for each possible gender value."
  stratum: [MeasureReport_Stratum]
}

"The MeasureReport resource contains the results of the calculation of a measure; and optionally a reference to the resources involved in that calculation."
type MeasureReport_Stratum {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  value: CodeableConcept
  "A stratifier component value."
  component: [MeasureReport_Component]
  "The populations that make up the stratum, one for each type of population appropriate to the measure."
  population: [MeasureReport_Population1]
  measureScore: Quantity
}

"The MeasureReport resource contains the results of the calculation of a measure; and optionally a reference to the resources involved in that calculation."
type MeasureReport_Component {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  code: CodeableConcept!
  value: CodeableConcept!
}

"The MeasureReport resource contains the results of the calculation of a measure; and optionally a reference to the resources involved in that calculation."
type MeasureReport_Population1 {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  code: CodeableConcept
  count: integer
  _count: Element
  subjectResults: Reference
}

"A photo, video, or audio recording acquired or used in healthcare. The actual content may be inline or provided by direct reference."
type Media {
  resourceType: Media_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Identifiers associated with the image - these may include identifiers for the image itself, identifiers for the context of its collection (e.g. series ids) and context ids such as accession numbers or other workflow identifiers."
  identifier: [Identifier]
  "A procedure that is fulfilled in whole or in part by the creation of this media."
  basedOn: [Reference]
  "A larger event of which this particular event is a component or step."
  partOf: [Reference]
  status: code
  _status: Element
  type: CodeableConcept
  modality: CodeableConcept
  view: CodeableConcept
  subject: Reference
  encounter: Reference
  createdDateTime: query_resourceById_oneOf_78_createdDateTime
  _createdDateTime: Element
  createdPeriod: Period
  issued: instant
  _issued: Element
  operator: Reference
  "Describes why the event occurred in coded or textual form."
  reasonCode: [CodeableConcept]
  bodySite: CodeableConcept
  deviceName: string
  _deviceName: Element
  device: Reference
  height: positiveInt
  _height: Element
  width: positiveInt
  _width: Element
  frames: positiveInt
  _frames: Element
  duration: decimal
  _duration: Element
  content: Attachment!
  "Comments made about the media by the performer, subject or other participants."
  note: [Annotation]
}

enum Media_const {
  Media
}

"The date and time(s) at which the media was collected."
scalar query_resourceById_oneOf_78_createdDateTime

"This resource is primarily used for the identification and definition of a medication for the purposes of prescribing, dispensing, and administering a medication as well as for making statements about medication use."
type Medication {
  resourceType: Medication_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Business identifier for this medication."
  identifier: [Identifier]
  code: CodeableConcept
  status: code
  _status: Element
  manufacturer: Reference
  form: CodeableConcept
  amount: Ratio
  "Identifies a particular constituent of interest in the product."
  ingredient: [Medication_Ingredient]
  batch: Medication_Batch
}

enum Medication_const {
  Medication
}

"This resource is primarily used for the identification and definition of a medication for the purposes of prescribing, dispensing, and administering a medication as well as for making statements about medication use."
type Medication_Ingredient {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  itemCodeableConcept: CodeableConcept
  itemReference: Reference
  isActive: boolean
  _isActive: Element
  strength: Ratio
}

"This resource is primarily used for the identification and definition of a medication for the purposes of prescribing, dispensing, and administering a medication as well as for making statements about medication use."
type Medication_Batch {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  lotNumber: string
  _lotNumber: Element
  expirationDate: dateTime
  _expirationDate: Element
}

"Describes the event of a patient consuming or otherwise being administered a medication.  This may be as simple as swallowing a tablet or it may be a long running infusion.  Related resources tie this event to the authorizing prescription, and the specific encounter between patient and health care practitioner."
type MedicationAdministration {
  resourceType: MedicationAdministration_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Identifiers associated with this Medication Administration that are defined by business processes and/or used to refer to it when a direct URL reference to the resource itself is not appropriate. They are business identifiers assigned to this resource by the performer or other systems and remain constant as the resource is updated and propagates from server to server."
  identifier: [Identifier]
  "A protocol, guideline, orderset, or other definition that was adhered to in whole or in part by this event."
  instantiates: [uri]
  "Extensions for instantiates"
  _instantiates: [Element]
  "A larger event of which this particular event is a component or step."
  partOf: [Reference]
  status: code
  _status: Element
  "A code indicating why the administration was not performed."
  statusReason: [CodeableConcept]
  category: CodeableConcept
  medicationCodeableConcept: CodeableConcept
  medicationReference: Reference
  subject: Reference!
  context: Reference
  "Additional information (for example, patient height and weight) that supports the administration of the medication."
  supportingInformation: [Reference]
  effectiveDateTime: query_resourceById_oneOf_80_effectiveDateTime
  _effectiveDateTime: Element
  effectivePeriod: Period
  "Indicates who or what performed the medication administration and how they were involved."
  performer: [MedicationAdministration_Performer]
  "A code indicating why the medication was given."
  reasonCode: [CodeableConcept]
  "Condition or observation that supports why the medication was administered."
  reasonReference: [Reference]
  request: Reference
  "The device used in administering the medication to the patient.  For example, a particular infusion pump."
  device: [Reference]
  "Extra information about the medication administration that is not conveyed by the other attributes."
  note: [Annotation]
  dosage: MedicationAdministration_Dosage
  "A summary of the events of interest that have occurred, such as when the administration was verified."
  eventHistory: [Reference]
}

enum MedicationAdministration_const {
  MedicationAdministration
}

"A specific date/time or interval of time during which the administration took place (or did not take place, when the 'notGiven' attribute is true). For many administrations, such as swallowing a tablet the use of dateTime is more appropriate."
scalar query_resourceById_oneOf_80_effectiveDateTime

"Describes the event of a patient consuming or otherwise being administered a medication.  This may be as simple as swallowing a tablet or it may be a long running infusion.  Related resources tie this event to the authorizing prescription, and the specific encounter between patient and health care practitioner."
type MedicationAdministration_Performer {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  function: CodeableConcept
  actor: Reference!
}

"Describes the event of a patient consuming or otherwise being administered a medication.  This may be as simple as swallowing a tablet or it may be a long running infusion.  Related resources tie this event to the authorizing prescription, and the specific encounter between patient and health care practitioner."
type MedicationAdministration_Dosage {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  text: string
  _text: Element
  site: CodeableConcept
  route: CodeableConcept
  method: CodeableConcept
  dose: Quantity
  rateRatio: Ratio
  rateQuantity: Quantity
}

"Indicates that a medication product is to be or has been dispensed for a named person/patient.  This includes a description of the medication product (supply) provided and the instructions for administering the medication.  The medication dispense is the result of a pharmacy system responding to a medication order."
type MedicationDispense {
  resourceType: MedicationDispense_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Identifiers associated with this Medication Dispense that are defined by business processes and/or used to refer to it when a direct URL reference to the resource itself is not appropriate. They are business identifiers assigned to this resource by the performer or other systems and remain constant as the resource is updated and propagates from server to server."
  identifier: [Identifier]
  "The procedure that trigger the dispense."
  partOf: [Reference]
  status: code
  _status: Element
  statusReasonCodeableConcept: CodeableConcept
  statusReasonReference: Reference
  category: CodeableConcept
  medicationCodeableConcept: CodeableConcept
  medicationReference: Reference
  subject: Reference
  context: Reference
  "Additional information that supports the medication being dispensed."
  supportingInformation: [Reference]
  "Indicates who or what performed the event."
  performer: [MedicationDispense_Performer]
  location: Reference
  "Indicates the medication order that is being dispensed against."
  authorizingPrescription: [Reference]
  type: CodeableConcept
  quantity: Quantity
  daysSupply: Quantity
  whenPrepared: dateTime
  _whenPrepared: Element
  whenHandedOver: dateTime
  _whenHandedOver: Element
  destination: Reference
  "Identifies the person who picked up the medication.  This will usually be a patient or their caregiver, but some cases exist where it can be a healthcare professional."
  receiver: [Reference]
  "Extra information about the dispense that could not be conveyed in the other attributes."
  note: [Annotation]
  "Indicates how the medication is to be used by the patient."
  dosageInstruction: [Dosage]
  substitution: MedicationDispense_Substitution
  "Indicates an actual or potential clinical issue with or between one or more active or proposed clinical actions for a patient; e.g. drug-drug interaction, duplicate therapy, dosage alert etc."
  detectedIssue: [Reference]
  "A summary of the events of interest that have occurred, such as when the dispense was verified."
  eventHistory: [Reference]
}

enum MedicationDispense_const {
  MedicationDispense
}

"Indicates that a medication product is to be or has been dispensed for a named person/patient.  This includes a description of the medication product (supply) provided and the instructions for administering the medication.  The medication dispense is the result of a pharmacy system responding to a medication order."
type MedicationDispense_Performer {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  function: CodeableConcept
  actor: Reference!
}

"Indicates that a medication product is to be or has been dispensed for a named person/patient.  This includes a description of the medication product (supply) provided and the instructions for administering the medication.  The medication dispense is the result of a pharmacy system responding to a medication order."
type MedicationDispense_Substitution {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  wasSubstituted: boolean
  _wasSubstituted: Element
  type: CodeableConcept
  "Indicates the reason for the substitution (or lack of substitution) from what was prescribed."
  reason: [CodeableConcept]
  "The person or organization that has primary responsibility for the substitution."
  responsibleParty: [Reference]
}

"Information about a medication that is used to support knowledge."
type MedicationKnowledge {
  resourceType: MedicationKnowledge_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  code: CodeableConcept
  status: code
  _status: Element
  manufacturer: Reference
  doseForm: CodeableConcept
  amount: Quantity
  "Additional names for a medication, for example, the name(s) given to a medication in different countries.  For example, acetaminophen and paracetamol or salbutamol and albuterol."
  synonym: [string]
  "Extensions for synonym"
  _synonym: [Element]
  "Associated or related knowledge about a medication."
  relatedMedicationKnowledge: [MedicationKnowledge_RelatedMedicationKnowledge]
  "Associated or related medications.  For example, if the medication is a branded product (e.g. Crestor), this is the Therapeutic Moeity (e.g. Rosuvastatin) or if this is a generic medication (e.g. Rosuvastatin), this would link to a branded product (e.g. Crestor)."
  associatedMedication: [Reference]
  "Category of the medication or product (e.g. branded product, therapeutic moeity, generic product, innovator product, etc.)."
  productType: [CodeableConcept]
  "Associated documentation about the medication."
  monograph: [MedicationKnowledge_Monograph]
  "Identifies a particular constituent of interest in the product."
  ingredient: [MedicationKnowledge_Ingredient]
  preparationInstruction: markdown
  _preparationInstruction: Element
  "The intended or approved route of administration."
  intendedRoute: [CodeableConcept]
  "The price of the medication."
  cost: [MedicationKnowledge_Cost]
  "The program under which the medication is reviewed."
  monitoringProgram: [MedicationKnowledge_MonitoringProgram]
  "Guidelines for the administration of the medication."
  administrationGuidelines: [MedicationKnowledge_AdministrationGuidelines]
  "Categorization of the medication within a formulary or classification system."
  medicineClassification: [MedicationKnowledge_MedicineClassification]
  packaging: MedicationKnowledge_Packaging
  "Specifies descriptive properties of the medicine, such as color, shape, imprints, etc."
  drugCharacteristic: [MedicationKnowledge_DrugCharacteristic]
  "Potential clinical issue with or between medication(s) (for example, drug-drug interaction, drug-disease contraindication, drug-allergy interaction, etc.)."
  contraindication: [Reference]
  "Regulatory information about a medication."
  regulatory: [MedicationKnowledge_Regulatory]
  "The time course of drug absorption, distribution, metabolism and excretion of a medication from the body."
  kinetics: [MedicationKnowledge_Kinetics]
}

enum MedicationKnowledge_const {
  MedicationKnowledge
}

"Information about a medication that is used to support knowledge."
type MedicationKnowledge_RelatedMedicationKnowledge {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: CodeableConcept!
  "Associated documentation about the associated medication knowledge."
  reference: [Reference]!
}

"Information about a medication that is used to support knowledge."
type MedicationKnowledge_Monograph {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: CodeableConcept
  source: Reference
}

"Information about a medication that is used to support knowledge."
type MedicationKnowledge_Ingredient {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  itemCodeableConcept: CodeableConcept
  itemReference: Reference
  isActive: boolean
  _isActive: Element
  strength: Ratio
}

"Information about a medication that is used to support knowledge."
type MedicationKnowledge_Cost {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: CodeableConcept!
  source: string
  _source: Element
  cost: Money!
}

"Information about a medication that is used to support knowledge."
type MedicationKnowledge_MonitoringProgram {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: CodeableConcept
  name: string
  _name: Element
}

"Information about a medication that is used to support knowledge."
type MedicationKnowledge_AdministrationGuidelines {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Dosage for the medication for the specific guidelines."
  dosage: [MedicationKnowledge_Dosage]
  indicationCodeableConcept: CodeableConcept
  indicationReference: Reference
  "Characteristics of the patient that are relevant to the administration guidelines (for example, height, weight, gender, etc.)."
  patientCharacteristics: [MedicationKnowledge_PatientCharacteristics]
}

"Information about a medication that is used to support knowledge."
type MedicationKnowledge_Dosage {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: CodeableConcept!
  "Dosage for the medication for the specific guidelines."
  dosage: [Dosage]!
}

"Information about a medication that is used to support knowledge."
type MedicationKnowledge_PatientCharacteristics {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  characteristicCodeableConcept: CodeableConcept
  characteristicQuantity: Quantity
  "The specific characteristic (e.g. height, weight, gender, etc.)."
  value: [string]
  "Extensions for value"
  _value: [Element]
}

"Information about a medication that is used to support knowledge."
type MedicationKnowledge_MedicineClassification {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: CodeableConcept!
  "Specific category assigned to the medication (e.g. anti-infective, anti-hypertensive, antibiotic, etc.)."
  classification: [CodeableConcept]
}

"Information about a medication that is used to support knowledge."
type MedicationKnowledge_Packaging {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: CodeableConcept
  quantity: Quantity
}

"Information about a medication that is used to support knowledge."
type MedicationKnowledge_DrugCharacteristic {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: CodeableConcept
  valueCodeableConcept: CodeableConcept
  valueString: query_resourceById_oneOf_82_drugCharacteristic_items_valueString
  _valueString: Element
  valueQuantity: Quantity
  valueBase64Binary: query_resourceById_oneOf_82_drugCharacteristic_items_valueBase64Binary
  _valueBase64Binary: Element
}

"Description of the characteristic."
scalar query_resourceById_oneOf_82_drugCharacteristic_items_valueString

"Description of the characteristic."
scalar query_resourceById_oneOf_82_drugCharacteristic_items_valueBase64Binary

"Information about a medication that is used to support knowledge."
type MedicationKnowledge_Regulatory {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  regulatoryAuthority: Reference!
  "Specifies if changes are allowed when dispensing a medication from a regulatory perspective."
  substitution: [MedicationKnowledge_Substitution]
  "Specifies the schedule of a medication in jurisdiction."
  schedule: [MedicationKnowledge_Schedule]
  maxDispense: MedicationKnowledge_MaxDispense
}

"Information about a medication that is used to support knowledge."
type MedicationKnowledge_Substitution {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: CodeableConcept!
  allowed: boolean
  _allowed: Element
}

"Information about a medication that is used to support knowledge."
type MedicationKnowledge_Schedule {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  schedule: CodeableConcept!
}

"Information about a medication that is used to support knowledge."
type MedicationKnowledge_MaxDispense {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  quantity: Quantity!
  period: Duration
}

"Information about a medication that is used to support knowledge."
type MedicationKnowledge_Kinetics {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "The drug concentration measured at certain discrete points in time."
  areaUnderCurve: [Quantity]
  "The median lethal dose of a drug."
  lethalDose50: [Quantity]
  halfLifePeriod: Duration
}

"An order or request for both supply of the medication and the instructions for administration of the medication to a patient. The resource is called \\"MedicationRequest\\" rather than \\"MedicationPrescription\\" or \\"MedicationOrder\\" to generalize the use across inpatient and outpatient settings, including care plans, etc., and to harmonize with workflow patterns."
type MedicationRequest {
  resourceType: MedicationRequest_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Identifiers associated with this medication request that are defined by business processes and/or used to refer to it when a direct URL reference to the resource itself is not appropriate. They are business identifiers assigned to this resource by the performer or other systems and remain constant as the resource is updated and propagates from server to server."
  identifier: [Identifier]
  status: code
  _status: Element
  statusReason: CodeableConcept
  intent: code
  _intent: Element
  "Indicates the type of medication request (for example, where the medication is expected to be consumed or administered (i.e. inpatient or outpatient))."
  category: [CodeableConcept]
  priority: code
  _priority: Element
  doNotPerform: boolean
  _doNotPerform: Element
  "Indicates if this record was captured as a secondary 'reported' record rather than as an original primary source-of-truth record.  It may also indicate the source of the report."
  reportedBoolean: Boolean
  _reportedBoolean: Element
  reportedReference: Reference
  medicationCodeableConcept: CodeableConcept
  medicationReference: Reference
  subject: Reference!
  encounter: Reference
  "Include additional information (for example, patient height and weight) that supports the ordering of the medication."
  supportingInformation: [Reference]
  authoredOn: dateTime
  _authoredOn: Element
  requester: Reference
  performer: Reference
  performerType: CodeableConcept
  recorder: Reference
  "The reason or the indication for ordering or not ordering the medication."
  reasonCode: [CodeableConcept]
  "Condition or observation that supports why the medication was ordered."
  reasonReference: [Reference]
  "The URL pointing to a protocol, guideline, orderset, or other definition that is adhered to in whole or in part by this MedicationRequest."
  instantiatesCanonical: [canonical]
  "Extensions for instantiatesCanonical"
  _instantiatesCanonical: [Element]
  "The URL pointing to an externally maintained protocol, guideline, orderset or other definition that is adhered to in whole or in part by this MedicationRequest."
  instantiatesUri: [uri]
  "Extensions for instantiatesUri"
  _instantiatesUri: [Element]
  "A plan or request that is fulfilled in whole or in part by this medication request."
  basedOn: [Reference]
  groupIdentifier: Identifier
  courseOfTherapyType: CodeableConcept
  "Insurance plans, coverage extensions, pre-authorizations and/or pre-determinations that may be required for delivering the requested service."
  insurance: [Reference]
  "Extra information about the prescription that could not be conveyed by the other attributes."
  note: [Annotation]
  "Indicates how the medication is to be used by the patient."
  dosageInstruction: [Dosage]
  dispenseRequest: MedicationRequest_DispenseRequest
  substitution: MedicationRequest_Substitution
  priorPrescription: Reference
  "Indicates an actual or potential clinical issue with or between one or more active or proposed clinical actions for a patient; e.g. Drug-drug interaction, duplicate therapy, dosage alert etc."
  detectedIssue: [Reference]
  "Links to Provenance records for past versions of this resource or fulfilling request or event resources that identify key state transitions or updates that are likely to be relevant to a user looking at the current version of the resource."
  eventHistory: [Reference]
}

enum MedicationRequest_const {
  MedicationRequest
}

"An order or request for both supply of the medication and the instructions for administration of the medication to a patient. The resource is called \\"MedicationRequest\\" rather than \\"MedicationPrescription\\" or \\"MedicationOrder\\" to generalize the use across inpatient and outpatient settings, including care plans, etc., and to harmonize with workflow patterns."
type MedicationRequest_DispenseRequest {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  initialFill: MedicationRequest_InitialFill
  dispenseInterval: Duration
  validityPeriod: Period
  numberOfRepeatsAllowed: unsignedInt
  _numberOfRepeatsAllowed: Element
  quantity: Quantity
  expectedSupplyDuration: Duration
  performer: Reference
}

"An order or request for both supply of the medication and the instructions for administration of the medication to a patient. The resource is called \\"MedicationRequest\\" rather than \\"MedicationPrescription\\" or \\"MedicationOrder\\" to generalize the use across inpatient and outpatient settings, including care plans, etc., and to harmonize with workflow patterns."
type MedicationRequest_InitialFill {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  quantity: Quantity
  duration: Duration
}

"An order or request for both supply of the medication and the instructions for administration of the medication to a patient. The resource is called \\"MedicationRequest\\" rather than \\"MedicationPrescription\\" or \\"MedicationOrder\\" to generalize the use across inpatient and outpatient settings, including care plans, etc., and to harmonize with workflow patterns."
type MedicationRequest_Substitution {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "True if the prescriber allows a different drug to be dispensed from what was prescribed."
  allowedBoolean: Boolean
  _allowedBoolean: Element
  allowedCodeableConcept: CodeableConcept
  reason: CodeableConcept
}

"A record of a medication that is being consumed by a patient.   A MedicationStatement may indicate that the patient may be taking the medication now or has taken the medication in the past or will be taking the medication in the future.  The source of this information can be the patient, significant other (such as a family member or spouse), or a clinician.  A common scenario where this information is captured is during the history taking process during a patient visit or stay.   The medication information may come from sources such as the patient's memory, from a prescription bottle,  or from a list of medications the patient, clinician or other party maintains. \\n\\nThe primary difference between a medication statement and a medication administration is that the medication administration has complete administration information and is based on actual administration information from the person who administered the medication.  A medication statement is often, if not always, less specific.  There is no required date/time when the medication was administered, in fact we only know that a source has reported the patient is taking this medication, where details such as time, quantity, or rate or even medication product may be incomplete or missing or less precise.  As stated earlier, the medication statement information may come from the patient's memory, from a prescription bottle or from a list of medications the patient, clinician or other party maintains.  Medication administration is more formal and is not missing detailed information."
type MedicationStatement {
  resourceType: MedicationStatement_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Identifiers associated with this Medication Statement that are defined by business processes and/or used to refer to it when a direct URL reference to the resource itself is not appropriate. They are business identifiers assigned to this resource by the performer or other systems and remain constant as the resource is updated and propagates from server to server."
  identifier: [Identifier]
  "A plan, proposal or order that is fulfilled in whole or in part by this event."
  basedOn: [Reference]
  "A larger event of which this particular event is a component or step."
  partOf: [Reference]
  status: code
  _status: Element
  "Captures the reason for the current state of the MedicationStatement."
  statusReason: [CodeableConcept]
  category: CodeableConcept
  medicationCodeableConcept: CodeableConcept
  medicationReference: Reference
  subject: Reference!
  context: Reference
  effectiveDateTime: query_resourceById_oneOf_84_effectiveDateTime
  _effectiveDateTime: Element
  effectivePeriod: Period
  dateAsserted: dateTime
  _dateAsserted: Element
  informationSource: Reference
  "Allows linking the MedicationStatement to the underlying MedicationRequest, or to other information that supports or is used to derive the MedicationStatement."
  derivedFrom: [Reference]
  "A reason for why the medication is being/was taken."
  reasonCode: [CodeableConcept]
  "Condition or observation that supports why the medication is being/was taken."
  reasonReference: [Reference]
  "Provides extra information about the medication statement that is not conveyed by the other attributes."
  note: [Annotation]
  "Indicates how the medication is/was or should be taken by the patient."
  dosage: [Dosage]
}

enum MedicationStatement_const {
  MedicationStatement
}

"The interval of time during which it is being asserted that the patient is/was/will be taking the medication (or was not taking, when the MedicationStatement.taken element is No)."
scalar query_resourceById_oneOf_84_effectiveDateTime

"A medicinal product, being a substance or combination of substances that is intended to treat, prevent or diagnose a disease, or to restore, correct or modify physiological functions by exerting a pharmacological, immunological or metabolic action. This resource is intended to define and detail such products and their properties, for uses other than direct patient care (e.g. regulatory use, or drug catalogs)."
type MedicinalProductDefinition {
  resourceType: MedicinalProductDefinition_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Business identifier for this product. Could be an MPID. When in development or being regulated, products are typically referenced by official identifiers, assigned by a manufacturer or regulator, and unique to a product (which, when compared to a product instance being prescribed, is actually a product type). See also MedicinalProductDefinition.code."
  identifier: [Identifier]
  type: CodeableConcept
  domain: CodeableConcept
  version: string
  _version: Element
  status: CodeableConcept
  statusDate: dateTime
  _statusDate: Element
  description: markdown
  _description: Element
  combinedPharmaceuticalDoseForm: CodeableConcept
  "The path by which the product is taken into or makes contact with the body. In some regions this is referred to as the licenced or approved route. See also AdministrableProductDefinition resource. MedicinalProductDefinition.route is the same concept as AdministrableProductDefinition.routeOfAdministration.code, and they cannot be used together."
  route: [CodeableConcept]
  indication: markdown
  _indication: Element
  legalStatusOfSupply: CodeableConcept
  additionalMonitoringIndicator: CodeableConcept
  "Whether the Medicinal Product is subject to special measures for regulatory reasons, such as a requirement to conduct post-authorisation studies."
  specialMeasures: [CodeableConcept]
  pediatricUseIndicator: CodeableConcept
  "Allows the product to be classified by various systems, commonly WHO ATC."
  classification: [CodeableConcept]
  "Marketing status of the medicinal product, in contrast to marketing authorization. This refers to the product being actually 'on the market' as opposed to being allowed to be on the market (which is an authorization)."
  marketingStatus: [MarketingStatus]
  "Package type for the product. See also the PackagedProductDefinition resource."
  packagedMedicinalProduct: [CodeableConcept]
  "The ingredients of this medicinal product - when not detailed in other resources. This is only needed if the ingredients are not specified by incoming references from the Ingredient resource, or indirectly via incoming AdministrableProductDefinition, PackagedProductDefinition or ManufacturedItemDefinition references. In cases where those levels of detail are not used, the ingredients may be specified directly here as codes."
  ingredient: [CodeableConcept]
  "Any component of the drug product which is not the chemical entity defined as the drug substance, or an excipient in the drug product. This includes process-related impurities and contaminants, product-related impurities including degradation products."
  impurity: [CodeableReference]
  "Additional information or supporting documentation about the medicinal product."
  attachedDocument: [Reference]
  "A master file for the medicinal product (e.g. Pharmacovigilance System Master File). Drug master files (DMFs) are documents submitted to regulatory agencies to provide confidential detailed information about facilities, processes or articles used in the manufacturing, processing, packaging and storing of drug products."
  masterFile: [Reference]
  "A product specific contact, person (in a role), or an organization."
  contact: [MedicinalProductDefinition_Contact]
  "Clinical trials or studies that this product is involved in."
  clinicalTrial: [Reference]
  "A code that this product is known by, usually within some formal terminology, perhaps assigned by a third party (i.e. not the manufacturer or regulator). Products (types of medications) tend to be known by identifiers during development and within regulatory process. However when they are prescribed they tend to be identified by codes. The same product may be have multiple codes, applied to it by multiple organizations."
  code: [Coding]
  "The product's name, including full name and possibly coded parts."
  name: [MedicinalProductDefinition_Name]!
  "Reference to another product, e.g. for linking authorised to investigational product, or a virtual product."
  crossReference: [MedicinalProductDefinition_CrossReference]
  "A manufacturing or administrative process or step associated with (or performed on) the medicinal product."
  operation: [MedicinalProductDefinition_Operation]
  "Allows the key product features to be recorded, such as \\"sugar free\\", \\"modified release\\", \\"parallel import\\"."
  characteristic: [MedicinalProductDefinition_Characteristic]
}

enum MedicinalProductDefinition_const {
  MedicinalProductDefinition
}

"The marketing status describes the date when a medicinal product is actually put on the market or the date as of which it is no longer available."
type MarketingStatus {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  country: CodeableConcept
  jurisdiction: CodeableConcept
  status: CodeableConcept!
  dateRange: Period
  restoreDate: dateTime
  _restoreDate: Element
}

"A medicinal product, being a substance or combination of substances that is intended to treat, prevent or diagnose a disease, or to restore, correct or modify physiological functions by exerting a pharmacological, immunological or metabolic action. This resource is intended to define and detail such products and their properties, for uses other than direct patient care (e.g. regulatory use, or drug catalogs)."
type MedicinalProductDefinition_Contact {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: CodeableConcept
  contact: Reference!
}

"A medicinal product, being a substance or combination of substances that is intended to treat, prevent or diagnose a disease, or to restore, correct or modify physiological functions by exerting a pharmacological, immunological or metabolic action. This resource is intended to define and detail such products and their properties, for uses other than direct patient care (e.g. regulatory use, or drug catalogs)."
type MedicinalProductDefinition_Name {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  productName: string
  _productName: Element
  type: CodeableConcept
  "Coding words or phrases of the name."
  namePart: [MedicinalProductDefinition_NamePart]
  "Country and jurisdiction where the name applies, and associated language."
  countryLanguage: [MedicinalProductDefinition_CountryLanguage]
}

"A medicinal product, being a substance or combination of substances that is intended to treat, prevent or diagnose a disease, or to restore, correct or modify physiological functions by exerting a pharmacological, immunological or metabolic action. This resource is intended to define and detail such products and their properties, for uses other than direct patient care (e.g. regulatory use, or drug catalogs)."
type MedicinalProductDefinition_NamePart {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  part: string
  _part: Element
  type: CodeableConcept!
}

"A medicinal product, being a substance or combination of substances that is intended to treat, prevent or diagnose a disease, or to restore, correct or modify physiological functions by exerting a pharmacological, immunological or metabolic action. This resource is intended to define and detail such products and their properties, for uses other than direct patient care (e.g. regulatory use, or drug catalogs)."
type MedicinalProductDefinition_CountryLanguage {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  country: CodeableConcept!
  jurisdiction: CodeableConcept
  language: CodeableConcept!
}

"A medicinal product, being a substance or combination of substances that is intended to treat, prevent or diagnose a disease, or to restore, correct or modify physiological functions by exerting a pharmacological, immunological or metabolic action. This resource is intended to define and detail such products and their properties, for uses other than direct patient care (e.g. regulatory use, or drug catalogs)."
type MedicinalProductDefinition_CrossReference {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  product: CodeableReference!
  type: CodeableConcept
}

"A medicinal product, being a substance or combination of substances that is intended to treat, prevent or diagnose a disease, or to restore, correct or modify physiological functions by exerting a pharmacological, immunological or metabolic action. This resource is intended to define and detail such products and their properties, for uses other than direct patient care (e.g. regulatory use, or drug catalogs)."
type MedicinalProductDefinition_Operation {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: CodeableReference
  effectiveDate: Period
  "The organization or establishment responsible for (or associated with) the particular process or step, examples include the manufacturer, importer, agent."
  organization: [Reference]
  confidentialityIndicator: CodeableConcept
}

"A medicinal product, being a substance or combination of substances that is intended to treat, prevent or diagnose a disease, or to restore, correct or modify physiological functions by exerting a pharmacological, immunological or metabolic action. This resource is intended to define and detail such products and their properties, for uses other than direct patient care (e.g. regulatory use, or drug catalogs)."
type MedicinalProductDefinition_Characteristic {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: CodeableConcept!
  valueCodeableConcept: CodeableConcept
  valueQuantity: Quantity
  valueDate: query_resourceById_oneOf_85_characteristic_items_valueDate
  _valueDate: Element
  "A value for the characteristic."
  valueBoolean: Boolean
  _valueBoolean: Element
  valueAttachment: Attachment
}

"A value for the characteristic."
scalar query_resourceById_oneOf_85_characteristic_items_valueDate

"Defines the characteristics of a message that can be shared between systems, including the type of event that initiates the message, the content to be transmitted and what response(s), if any, are permitted."
type MessageDefinition {
  resourceType: MessageDefinition_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  url: uri
  _url: Element
  "A formal identifier that is used to identify this message definition when it is represented in other formats, or referenced in a specification, model, design or an instance."
  identifier: [Identifier]
  version: string
  _version: Element
  name: string
  _name: Element
  title: string
  _title: Element
  "A MessageDefinition that is superseded by this definition."
  replaces: [canonical]
  status: code
  _status: Element
  experimental: boolean
  _experimental: Element
  date: dateTime
  _date: Element
  publisher: string
  _publisher: Element
  "Contact details to assist a user in finding and communicating with the publisher."
  contact: [ContactDetail]
  description: markdown
  _description: Element
  "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate message definition instances."
  useContext: [UsageContext]
  "A legal or geographic region in which the message definition is intended to be used."
  jurisdiction: [CodeableConcept]
  purpose: markdown
  _purpose: Element
  copyright: markdown
  _copyright: Element
  base: canonical
  "Identifies a protocol or workflow that this MessageDefinition represents a step in."
  parent: [canonical]
  eventCoding: Coding
  eventUri: query_resourceById_oneOf_86_eventUri
  _eventUri: Element
  category: code
  _category: Element
  "Identifies the resource (or resources) that are being addressed by the event.  For example, the Encounter for an admit message or two Account records for a merge."
  focus: [MessageDefinition_Focus]
  responseRequired: code
  _responseRequired: Element
  "Indicates what types of messages may be sent as an application-level response to this message."
  allowedResponse: [MessageDefinition_AllowedResponse]
  "Canonical reference to a GraphDefinition. If a URL is provided, it is the canonical reference to a [GraphDefinition](graphdefinition.html) that it controls what resources are to be added to the bundle when building the document. The GraphDefinition can also specify profiles that apply to the various resources."
  graph: [canonical]
}

enum MessageDefinition_const {
  MessageDefinition
}

"Event code or link to the EventDefinition."
scalar query_resourceById_oneOf_86_eventUri

"Defines the characteristics of a message that can be shared between systems, including the type of event that initiates the message, the content to be transmitted and what response(s), if any, are permitted."
type MessageDefinition_Focus {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  code: code
  _code: Element
  profile: canonical
  min: unsignedInt
  _min: Element
  max: string
  _max: Element
}

"Defines the characteristics of a message that can be shared between systems, including the type of event that initiates the message, the content to be transmitted and what response(s), if any, are permitted."
type MessageDefinition_AllowedResponse {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  message: canonical!
  situation: markdown
  _situation: Element
}

"The header for a message exchange that is either requesting or responding to an action.  The reference(s) that are the subject of the action as well as other information related to the action are typically transmitted in a bundle in which the MessageHeader resource instance is the first resource in the bundle."
type MessageHeader {
  resourceType: MessageHeader_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  eventCoding: Coding
  eventUri: query_resourceById_oneOf_87_eventUri
  _eventUri: Element
  "The destination application which the message is intended for."
  destination: [MessageHeader_Destination]
  sender: Reference
  enterer: Reference
  author: Reference
  source: MessageHeader_Source!
  responsible: Reference
  reason: CodeableConcept
  response: MessageHeader_Response
  "The actual data of the message - a reference to the root/focus class of the event."
  focus: [Reference]
  definition: canonical
}

enum MessageHeader_const {
  MessageHeader
}

"Code that identifies the event this message represents and connects it with its definition. Events defined as part of the FHIR specification have the system value \\"http://terminology.hl7.org/CodeSystem/message-events\\".  Alternatively uri to the EventDefinition."
scalar query_resourceById_oneOf_87_eventUri

"The header for a message exchange that is either requesting or responding to an action.  The reference(s) that are the subject of the action as well as other information related to the action are typically transmitted in a bundle in which the MessageHeader resource instance is the first resource in the bundle."
type MessageHeader_Destination {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  name: string
  _name: Element
  target: Reference
  endpoint: url
  _endpoint: Element
  receiver: Reference
}

"The header for a message exchange that is either requesting or responding to an action.  The reference(s) that are the subject of the action as well as other information related to the action are typically transmitted in a bundle in which the MessageHeader resource instance is the first resource in the bundle."
type MessageHeader_Source {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  name: string
  _name: Element
  software: string
  _software: Element
  version: string
  _version: Element
  contact: ContactPoint
  endpoint: url
  _endpoint: Element
}

"The header for a message exchange that is either requesting or responding to an action.  The reference(s) that are the subject of the action as well as other information related to the action are typically transmitted in a bundle in which the MessageHeader resource instance is the first resource in the bundle."
type MessageHeader_Response {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  identifier: id
  _identifier: Element
  code: code
  _code: Element
  details: Reference
}

"Raw data describing a biological sequence."
type MolecularSequence {
  resourceType: MolecularSequence_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "A unique identifier for this particular sequence instance. This is a FHIR-defined id."
  identifier: [Identifier]
  type: code
  _type: Element
  coordinateSystem: integer
  _coordinateSystem: Element
  patient: Reference
  specimen: Reference
  device: Reference
  performer: Reference
  quantity: Quantity
  referenceSeq: MolecularSequence_ReferenceSeq
  "The definition of variant here originates from Sequence ontology ([variant_of](http://www.sequenceontology.org/browser/current_svn/term/variant_of)). This element can represent amino acid or nucleic sequence change(including insertion,deletion,SNP,etc.)  It can represent some complex mutation or segment variation with the assist of CIGAR string."
  variant: [MolecularSequence_Variant]
  observedSeq: string
  _observedSeq: Element
  "An experimental feature attribute that defines the quality of the feature in a quantitative way, such as a phred quality score ([SO:0001686](http://www.sequenceontology.org/browser/current_svn/term/SO:0001686))."
  quality: [MolecularSequence_Quality]
  readCoverage: integer
  _readCoverage: Element
  "Configurations of the external repository. The repository shall store target's observedSeq or records related with target's observedSeq."
  repository: [MolecularSequence_Repository]
  "Pointer to next atomic sequence which at most contains one variant."
  pointer: [Reference]
  "Information about chromosome structure variation."
  structureVariant: [MolecularSequence_StructureVariant]
}

enum MolecularSequence_const {
  MolecularSequence
}

"Raw data describing a biological sequence."
type MolecularSequence_ReferenceSeq {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  chromosome: CodeableConcept
  genomeBuild: string
  _genomeBuild: Element
  orientation: code
  _orientation: Element
  referenceSeqId: CodeableConcept
  referenceSeqPointer: Reference
  referenceSeqString: string
  _referenceSeqString: Element
  strand: code
  _strand: Element
  windowStart: integer
  _windowStart: Element
  windowEnd: integer
  _windowEnd: Element
}

"Raw data describing a biological sequence."
type MolecularSequence_Variant {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  start: integer
  _start: Element
  end: integer
  _end: Element
  observedAllele: string
  _observedAllele: Element
  referenceAllele: string
  _referenceAllele: Element
  cigar: string
  _cigar: Element
  variantPointer: Reference
}

"Raw data describing a biological sequence."
type MolecularSequence_Quality {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: code
  _type: Element
  standardSequence: CodeableConcept
  start: integer
  _start: Element
  end: integer
  _end: Element
  score: Quantity
  method: CodeableConcept
  truthTP: decimal
  _truthTP: Element
  queryTP: decimal
  _queryTP: Element
  truthFN: decimal
  _truthFN: Element
  queryFP: decimal
  _queryFP: Element
  gtFP: decimal
  _gtFP: Element
  precision: decimal
  _precision: Element
  recall: decimal
  _recall: Element
  fScore: decimal
  _fScore: Element
  roc: MolecularSequence_Roc
}

"Raw data describing a biological sequence."
type MolecularSequence_Roc {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Invidual data point representing the GQ (genotype quality) score threshold."
  score: [integer]
  "Extensions for score"
  _score: [Element]
  "The number of true positives if the GQ score threshold was set to \\"score\\" field value."
  numTP: [integer]
  "Extensions for numTP"
  _numTP: [Element]
  "The number of false positives if the GQ score threshold was set to \\"score\\" field value."
  numFP: [integer]
  "Extensions for numFP"
  _numFP: [Element]
  "The number of false negatives if the GQ score threshold was set to \\"score\\" field value."
  numFN: [integer]
  "Extensions for numFN"
  _numFN: [Element]
  "Calculated precision if the GQ score threshold was set to \\"score\\" field value."
  precision: [decimal]
  "Extensions for precision"
  _precision: [Element]
  "Calculated sensitivity if the GQ score threshold was set to \\"score\\" field value."
  sensitivity: [decimal]
  "Extensions for sensitivity"
  _sensitivity: [Element]
  "Calculated fScore if the GQ score threshold was set to \\"score\\" field value."
  fMeasure: [decimal]
  "Extensions for fMeasure"
  _fMeasure: [Element]
}

"Raw data describing a biological sequence."
type MolecularSequence_Repository {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: code
  _type: Element
  url: uri
  _url: Element
  name: string
  _name: Element
  datasetId: string
  _datasetId: Element
  variantsetId: string
  _variantsetId: Element
  readsetId: string
  _readsetId: Element
}

"Raw data describing a biological sequence."
type MolecularSequence_StructureVariant {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  variantType: CodeableConcept
  exact: boolean
  _exact: Element
  length: integer
  _length: Element
  outer: MolecularSequence_Outer
  inner: MolecularSequence_Inner
}

"Raw data describing a biological sequence."
type MolecularSequence_Outer {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  start: integer
  _start: Element
  end: integer
  _end: Element
}

"Raw data describing a biological sequence."
type MolecularSequence_Inner {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  start: integer
  _start: Element
  end: integer
  _end: Element
}

"A curated namespace that issues unique symbols within that namespace for the identification of concepts, people, devices, etc.  Represents a \\"System\\" used within the Identifier and Coding data types."
type NamingSystem {
  resourceType: NamingSystem_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  name: string
  _name: Element
  status: code
  _status: Element
  kind: code
  _kind: Element
  date: dateTime
  _date: Element
  publisher: string
  _publisher: Element
  "Contact details to assist a user in finding and communicating with the publisher."
  contact: [ContactDetail]
  responsible: string
  _responsible: Element
  type: CodeableConcept
  description: markdown
  _description: Element
  "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate naming system instances."
  useContext: [UsageContext]
  "A legal or geographic region in which the naming system is intended to be used."
  jurisdiction: [CodeableConcept]
  usage: string
  _usage: Element
  "Indicates how the system may be identified when referenced in electronic exchange."
  uniqueId: [NamingSystem_UniqueId]!
}

enum NamingSystem_const {
  NamingSystem
}

"A curated namespace that issues unique symbols within that namespace for the identification of concepts, people, devices, etc.  Represents a \\"System\\" used within the Identifier and Coding data types."
type NamingSystem_UniqueId {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: code
  _type: Element
  value: string
  _value: Element
  preferred: boolean
  _preferred: Element
  comment: string
  _comment: Element
  period: Period
}

"A request to supply a diet, formula feeding (enteral) or oral nutritional supplement to a patient/resident."
type NutritionOrder {
  resourceType: NutritionOrder_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Identifiers assigned to this order by the order sender or by the order receiver."
  identifier: [Identifier]
  "The URL pointing to a FHIR-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this NutritionOrder."
  instantiatesCanonical: [canonical]
  "The URL pointing to an externally maintained protocol, guideline, orderset or other definition that is adhered to in whole or in part by this NutritionOrder."
  instantiatesUri: [uri]
  "Extensions for instantiatesUri"
  _instantiatesUri: [Element]
  "The URL pointing to a protocol, guideline, orderset or other definition that is adhered to in whole or in part by this NutritionOrder."
  instantiates: [uri]
  "Extensions for instantiates"
  _instantiates: [Element]
  status: code
  _status: Element
  intent: code
  _intent: Element
  patient: Reference!
  encounter: Reference
  dateTime: dateTime
  _dateTime: Element
  orderer: Reference
  "A link to a record of allergies or intolerances  which should be included in the nutrition order."
  allergyIntolerance: [Reference]
  "This modifier is used to convey order-specific modifiers about the type of food that should be given. These can be derived from patient allergies, intolerances, or preferences such as Halal, Vegan or Kosher. This modifier applies to the entire nutrition order inclusive of the oral diet, nutritional supplements and enteral formula feedings."
  foodPreferenceModifier: [CodeableConcept]
  "This modifier is used to convey Order-specific modifier about the type of oral food or oral fluids that should not be given. These can be derived from patient allergies, intolerances, or preferences such as No Red Meat, No Soy or No Wheat or  Gluten-Free.  While it should not be necessary to repeat allergy or intolerance information captured in the referenced AllergyIntolerance resource in the excludeFoodModifier, this element may be used to convey additional specificity related to foods that should be eliminated from the patient’s diet for any reason.  This modifier applies to the entire nutrition order inclusive of the oral diet, nutritional supplements and enteral formula feedings."
  excludeFoodModifier: [CodeableConcept]
  oralDiet: NutritionOrder_OralDiet
  "Oral nutritional products given in order to add further nutritional value to the patient's diet."
  supplement: [NutritionOrder_Supplement]
  enteralFormula: NutritionOrder_EnteralFormula
  "Comments made about the {{title}} by the requester, performer, subject or other participants."
  note: [Annotation]
}

enum NutritionOrder_const {
  NutritionOrder
}

"A request to supply a diet, formula feeding (enteral) or oral nutritional supplement to a patient/resident."
type NutritionOrder_OralDiet {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "The kind of diet or dietary restriction such as fiber restricted diet or diabetic diet."
  type: [CodeableConcept]
  "The time period and frequency at which the diet should be given.  The diet should be given for the combination of all schedules if more than one schedule is present."
  schedule: [Timing]
  "Class that defines the quantity and type of nutrient modifications (for example carbohydrate, fiber or sodium) required for the oral diet."
  nutrient: [NutritionOrder_Nutrient]
  "Class that describes any texture modifications required for the patient to safely consume various types of solid foods."
  texture: [NutritionOrder_Texture]
  "The required consistency (e.g. honey-thick, nectar-thick, thin, thickened.) of liquids or fluids served to the patient."
  fluidConsistencyType: [CodeableConcept]
  instruction: string
  _instruction: Element
}

"A request to supply a diet, formula feeding (enteral) or oral nutritional supplement to a patient/resident."
type NutritionOrder_Nutrient {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  modifier: CodeableConcept
  amount: Quantity
}

"A request to supply a diet, formula feeding (enteral) or oral nutritional supplement to a patient/resident."
type NutritionOrder_Texture {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  modifier: CodeableConcept
  foodType: CodeableConcept
}

"A request to supply a diet, formula feeding (enteral) or oral nutritional supplement to a patient/resident."
type NutritionOrder_Supplement {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: CodeableConcept
  productName: string
  _productName: Element
  "The time period and frequency at which the supplement(s) should be given.  The supplement should be given for the combination of all schedules if more than one schedule is present."
  schedule: [Timing]
  quantity: Quantity
  instruction: string
  _instruction: Element
}

"A request to supply a diet, formula feeding (enteral) or oral nutritional supplement to a patient/resident."
type NutritionOrder_EnteralFormula {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  baseFormulaType: CodeableConcept
  baseFormulaProductName: string
  _baseFormulaProductName: Element
  additiveType: CodeableConcept
  additiveProductName: string
  _additiveProductName: Element
  caloricDensity: Quantity
  routeofAdministration: CodeableConcept
  "Formula administration instructions as structured data.  This repeating structure allows for changing the administration rate or volume over time for both bolus and continuous feeding.  An example of this would be an instruction to increase the rate of continuous feeding every 2 hours."
  administration: [NutritionOrder_Administration]
  maxVolumeToDeliver: Quantity
  administrationInstruction: string
  _administrationInstruction: Element
}

"A request to supply a diet, formula feeding (enteral) or oral nutritional supplement to a patient/resident."
type NutritionOrder_Administration {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  schedule: Timing
  quantity: Quantity
  rateQuantity: Quantity
  rateRatio: Ratio
}

"A food or fluid product that is consumed by patients."
type NutritionProduct {
  resourceType: NutritionProduct_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  status: code
  _status: Element
  "Nutrition products can have different classifications - according to its nutritional properties, preparation methods, etc."
  category: [CodeableConcept]
  code: CodeableConcept
  "The organisation (manufacturer, representative or legal authorisation holder) that is responsible for the device."
  manufacturer: [Reference]
  "The product's nutritional information expressed by the nutrients."
  nutrient: [NutritionProduct_Nutrient]
  "Ingredients contained in this product."
  ingredient: [NutritionProduct_Ingredient]
  "Allergens that are known or suspected to be a part of this nutrition product."
  knownAllergen: [CodeableReference]
  "Specifies descriptive properties of the nutrition product."
  productCharacteristic: [NutritionProduct_ProductCharacteristic]
  instance: NutritionProduct_Instance
  "Comments made about the product."
  note: [Annotation]
}

enum NutritionProduct_const {
  NutritionProduct
}

"A food or fluid product that is consumed by patients."
type NutritionProduct_Nutrient {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  item: CodeableReference
  "The amount of nutrient expressed in one or more units: X per pack / per serving / per dose."
  amount: [Ratio]
}

"A food or fluid product that is consumed by patients."
type NutritionProduct_Ingredient {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  item: CodeableReference!
  "The amount of ingredient that is in the product."
  amount: [Ratio]
}

"A food or fluid product that is consumed by patients."
type NutritionProduct_ProductCharacteristic {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: CodeableConcept!
  valueCodeableConcept: CodeableConcept
  valueString: query_resourceById_oneOf_91_productCharacteristic_items_valueString
  _valueString: Element
  valueQuantity: Quantity
  valueBase64Binary: query_resourceById_oneOf_91_productCharacteristic_items_valueBase64Binary
  _valueBase64Binary: Element
  valueAttachment: Attachment
  "The actual characteristic value corresponding to the type."
  valueBoolean: Boolean
  _valueBoolean: Element
}

"The actual characteristic value corresponding to the type."
scalar query_resourceById_oneOf_91_productCharacteristic_items_valueString

"The actual characteristic value corresponding to the type."
scalar query_resourceById_oneOf_91_productCharacteristic_items_valueBase64Binary

"A food or fluid product that is consumed by patients."
type NutritionProduct_Instance {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  quantity: Quantity
  "The identifier for the physical instance, typically a serial number."
  identifier: [Identifier]
  lotNumber: string
  _lotNumber: Element
  expiry: dateTime
  _expiry: Element
  useBy: dateTime
  _useBy: Element
}

"Measurements and simple assertions made about a patient, device or other subject."
type Observation {
  resourceType: Observation_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "A unique identifier assigned to this observation."
  identifier: [Identifier]
  "A plan, proposal or order that is fulfilled in whole or in part by this event.  For example, a MedicationRequest may require a patient to have laboratory test performed before  it is dispensed."
  basedOn: [Reference]
  "A larger event of which this particular Observation is a component or step.  For example,  an observation as part of a procedure."
  partOf: [Reference]
  status: code
  _status: Element
  "A code that classifies the general type of observation being made."
  category: [CodeableConcept]
  code: CodeableConcept!
  subject: Reference
  "The actual focus of an observation when it is not the patient of record representing something or someone associated with the patient such as a spouse, parent, fetus, or donor. For example, fetus observations in a mother's record.  The focus of an observation could also be an existing condition,  an intervention, the subject's diet,  another observation of the subject,  or a body structure such as tumor or implanted device.   An example use case would be using the Observation resource to capture whether the mother is trained to change her child's tracheostomy tube. In this example, the child is the patient of record and the mother is the focus."
  focus: [Reference]
  encounter: Reference
  effectiveDateTime: query_resourceById_oneOf_92_effectiveDateTime
  _effectiveDateTime: Element
  effectivePeriod: Period
  effectiveTiming: Timing
  effectiveInstant: query_resourceById_oneOf_92_effectiveInstant
  _effectiveInstant: Element
  issued: instant
  _issued: Element
  "Who was responsible for asserting the observed value as \\"true\\"."
  performer: [Reference]
  valueQuantity: Quantity
  valueCodeableConcept: CodeableConcept
  valueString: query_resourceById_oneOf_92_valueString
  _valueString: Element
  "The information determined as a result of making the observation, if the information has a simple value."
  valueBoolean: Boolean
  _valueBoolean: Element
  valueInteger: query_resourceById_oneOf_92_valueInteger
  _valueInteger: Element
  valueRange: Range
  valueRatio: Ratio
  valueSampledData: SampledData
  valueTime: query_resourceById_oneOf_92_valueTime
  _valueTime: Element
  valueDateTime: query_resourceById_oneOf_92_valueDateTime
  _valueDateTime: Element
  valuePeriod: Period
  dataAbsentReason: CodeableConcept
  "A categorical assessment of an observation value.  For example, high, low, normal."
  interpretation: [CodeableConcept]
  "Comments about the observation or the results."
  note: [Annotation]
  bodySite: CodeableConcept
  method: CodeableConcept
  specimen: Reference
  device: Reference
  "Guidance on how to interpret the value by comparison to a normal or recommended range.  Multiple reference ranges are interpreted as an \\"OR\\".   In other words, to represent two distinct target populations, two \`referenceRange\` elements would be used."
  referenceRange: [Observation_ReferenceRange]
  "This observation is a group observation (e.g. a battery, a panel of tests, a set of vital sign measurements) that includes the target as a member of the group."
  hasMember: [Reference]
  "The target resource that represents a measurement from which this observation value is derived. For example, a calculated anion gap or a fetal measurement based on an ultrasound image."
  derivedFrom: [Reference]
  "Some observations have multiple component observations.  These component observations are expressed as separate code value pairs that share the same attributes.  Examples include systolic and diastolic component observations for blood pressure measurement and multiple component observations for genetics observations."
  component: [Observation_Component]
}

enum Observation_const {
  Observation
}

"The time or time-period the observed value is asserted as being true. For biological subjects - e.g. human patients - this is usually called the \\"physiologically relevant time\\". This is usually either the time of the procedure or of specimen collection, but very often the source of the date/time is not known, only the date/time itself."
scalar query_resourceById_oneOf_92_effectiveDateTime

"The time or time-period the observed value is asserted as being true. For biological subjects - e.g. human patients - this is usually called the \\"physiologically relevant time\\". This is usually either the time of the procedure or of specimen collection, but very often the source of the date/time is not known, only the date/time itself."
scalar query_resourceById_oneOf_92_effectiveInstant

"The information determined as a result of making the observation, if the information has a simple value."
scalar query_resourceById_oneOf_92_valueString

"The information determined as a result of making the observation, if the information has a simple value."
scalar query_resourceById_oneOf_92_valueInteger

"The information determined as a result of making the observation, if the information has a simple value."
scalar query_resourceById_oneOf_92_valueTime

"The information determined as a result of making the observation, if the information has a simple value."
scalar query_resourceById_oneOf_92_valueDateTime

"Measurements and simple assertions made about a patient, device or other subject."
type Observation_ReferenceRange {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  low: Quantity
  high: Quantity
  type: CodeableConcept
  "Codes to indicate the target population this reference range applies to.  For example, a reference range may be based on the normal population or a particular sex or race.  Multiple \`appliesTo\`  are interpreted as an \\"AND\\" of the target populations.  For example, to represent a target population of African American females, both a code of female and a code for African American would be used."
  appliesTo: [CodeableConcept]
  age: Range
  text: string
  _text: Element
}

"Measurements and simple assertions made about a patient, device or other subject."
type Observation_Component {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  code: CodeableConcept!
  valueQuantity: Quantity
  valueCodeableConcept: CodeableConcept
  valueString: query_resourceById_oneOf_92_component_items_valueString
  _valueString: Element
  "The information determined as a result of making the observation, if the information has a simple value."
  valueBoolean: Boolean
  _valueBoolean: Element
  valueInteger: query_resourceById_oneOf_92_component_items_valueInteger
  _valueInteger: Element
  valueRange: Range
  valueRatio: Ratio
  valueSampledData: SampledData
  valueTime: query_resourceById_oneOf_92_component_items_valueTime
  _valueTime: Element
  valueDateTime: query_resourceById_oneOf_92_component_items_valueDateTime
  _valueDateTime: Element
  valuePeriod: Period
  dataAbsentReason: CodeableConcept
  "A categorical assessment of an observation value.  For example, high, low, normal."
  interpretation: [CodeableConcept]
  "Guidance on how to interpret the value by comparison to a normal or recommended range."
  referenceRange: [Observation_ReferenceRange]
}

"The information determined as a result of making the observation, if the information has a simple value."
scalar query_resourceById_oneOf_92_component_items_valueString

"The information determined as a result of making the observation, if the information has a simple value."
scalar query_resourceById_oneOf_92_component_items_valueInteger

"The information determined as a result of making the observation, if the information has a simple value."
scalar query_resourceById_oneOf_92_component_items_valueTime

"The information determined as a result of making the observation, if the information has a simple value."
scalar query_resourceById_oneOf_92_component_items_valueDateTime

"Set of definitional characteristics for a kind of observation or measurement produced or consumed by an orderable health care service."
type ObservationDefinition {
  resourceType: ObservationDefinition_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "A code that classifies the general type of observation."
  category: [CodeableConcept]
  code: CodeableConcept!
  "A unique identifier assigned to this ObservationDefinition artifact."
  identifier: [Identifier]
  "The data types allowed for the value element of the instance observations conforming to this ObservationDefinition."
  permittedDataType: [code]
  "Extensions for permittedDataType"
  _permittedDataType: [Element]
  multipleResultsAllowed: boolean
  _multipleResultsAllowed: Element
  method: CodeableConcept
  preferredReportName: string
  _preferredReportName: Element
  quantitativeDetails: ObservationDefinition_QuantitativeDetails
  "Multiple  ranges of results qualified by different contexts for ordinal or continuous observations conforming to this ObservationDefinition."
  qualifiedInterval: [ObservationDefinition_QualifiedInterval]
  validCodedValueSet: Reference
  normalCodedValueSet: Reference
  abnormalCodedValueSet: Reference
  criticalCodedValueSet: Reference
}

enum ObservationDefinition_const {
  ObservationDefinition
}

"Set of definitional characteristics for a kind of observation or measurement produced or consumed by an orderable health care service."
type ObservationDefinition_QuantitativeDetails {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  customaryUnit: CodeableConcept
  unit: CodeableConcept
  conversionFactor: decimal
  _conversionFactor: Element
  decimalPrecision: integer
  _decimalPrecision: Element
}

"Set of definitional characteristics for a kind of observation or measurement produced or consumed by an orderable health care service."
type ObservationDefinition_QualifiedInterval {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  category: code
  _category: Element
  range: Range
  context: CodeableConcept
  "Codes to indicate the target population this reference range applies to."
  appliesTo: [CodeableConcept]
  gender: code
  _gender: Element
  age: Range
  gestationalAge: Range
  condition: string
  _condition: Element
}

"A formal computable definition of an operation (on the RESTful interface) or a named query (using the search interaction)."
type OperationDefinition {
  resourceType: OperationDefinition_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  url: uri
  _url: Element
  version: string
  _version: Element
  name: string
  _name: Element
  title: string
  _title: Element
  status: code
  _status: Element
  kind: code
  _kind: Element
  experimental: boolean
  _experimental: Element
  date: dateTime
  _date: Element
  publisher: string
  _publisher: Element
  "Contact details to assist a user in finding and communicating with the publisher."
  contact: [ContactDetail]
  description: markdown
  _description: Element
  "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate operation definition instances."
  useContext: [UsageContext]
  "A legal or geographic region in which the operation definition is intended to be used."
  jurisdiction: [CodeableConcept]
  purpose: markdown
  _purpose: Element
  affectsState: boolean
  _affectsState: Element
  code: code
  _code: Element
  comment: markdown
  _comment: Element
  base: canonical
  "The types on which this operation can be executed."
  resource: [code]
  "Extensions for resource"
  _resource: [Element]
  system: boolean
  _system: Element
  type: boolean
  _type: Element
  instance: boolean
  _instance: Element
  inputProfile: canonical
  outputProfile: canonical
  "The parameters for the operation/query."
  parameter: [OperationDefinition_Parameter]
  "Defines an appropriate combination of parameters to use when invoking this operation, to help code generators when generating overloaded parameter sets for this operation."
  overload: [OperationDefinition_Overload]
}

enum OperationDefinition_const {
  OperationDefinition
}

"A formal computable definition of an operation (on the RESTful interface) or a named query (using the search interaction)."
type OperationDefinition_Parameter {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  name: code
  _name: Element
  use: code
  _use: Element
  min: integer
  _min: Element
  max: string
  _max: Element
  documentation: string
  _documentation: Element
  type: code
  _type: Element
  "Used when the type is \\"Reference\\" or \\"canonical\\", and identifies a profile structure or implementation Guide that applies to the target of the reference this parameter refers to. If any profiles are specified, then the content must conform to at least one of them. The URL can be a local reference - to a contained StructureDefinition, or a reference to another StructureDefinition or Implementation Guide by a canonical URL. When an implementation guide is specified, the target resource SHALL conform to at least one profile defined in the implementation guide."
  targetProfile: [canonical]
  searchType: code
  _searchType: Element
  binding: OperationDefinition_Binding
  "Identifies other resource parameters within the operation invocation that are expected to resolve to this resource."
  referencedFrom: [OperationDefinition_ReferencedFrom]
  "The parts of a nested Parameter."
  part: [OperationDefinition_Parameter]
}

"A formal computable definition of an operation (on the RESTful interface) or a named query (using the search interaction)."
type OperationDefinition_Binding {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  strength: code
  _strength: Element
  valueSet: canonical!
}

"A formal computable definition of an operation (on the RESTful interface) or a named query (using the search interaction)."
type OperationDefinition_ReferencedFrom {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  source: string
  _source: Element
  sourceId: string
  _sourceId: Element
}

"A formal computable definition of an operation (on the RESTful interface) or a named query (using the search interaction)."
type OperationDefinition_Overload {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Name of parameter to include in overload."
  parameterName: [string]
  "Extensions for parameterName"
  _parameterName: [Element]
  comment: string
  _comment: Element
}

"A collection of error, warning, or information messages that result from a system action."
type OperationOutcome {
  resourceType: OperationOutcome_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "An error, warning, or information message that results from a system action."
  issue: [OperationOutcome_Issue]!
}

enum OperationOutcome_const {
  OperationOutcome
}

"A collection of error, warning, or information messages that result from a system action."
type OperationOutcome_Issue {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  severity: code
  _severity: Element
  code: code
  _code: Element
  details: CodeableConcept
  diagnostics: string
  _diagnostics: Element
  "This element is deprecated because it is XML specific. It is replaced by issue.expression, which is format independent, and simpler to parse. \\n\\nFor resource issues, this will be a simple XPath limited to element names, repetition indicators and the default child accessor that identifies one of the elements in the resource that caused this issue to be raised.  For HTTP errors, will be \\"http.\\" + the parameter name."
  location: [string]
  "Extensions for location"
  _location: [Element]
  "A [simple subset of FHIRPath](fhirpath.html#simple) limited to element names, repetition indicators and the default child accessor that identifies one of the elements in the resource that caused this issue to be raised."
  expression: [string]
  "Extensions for expression"
  _expression: [Element]
}

"A formally or informally recognized grouping of people or organizations formed for the purpose of achieving some form of collective action.  Includes companies, institutions, corporations, departments, community groups, healthcare practice groups, payer/insurer, etc."
type Organization {
  resourceType: Organization_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Identifier for the organization that is used to identify the organization across multiple disparate systems."
  identifier: [Identifier]
  active: boolean
  _active: Element
  "The kind(s) of organization that this is."
  type: [CodeableConcept]
  name: string
  _name: Element
  "A list of alternate names that the organization is known as, or was known as in the past."
  alias: [string]
  "Extensions for alias"
  _alias: [Element]
  "A contact detail for the organization."
  telecom: [ContactPoint]
  "An address for the organization."
  address: [Address]
  partOf: Reference
  "Contact for the organization for a certain purpose."
  contact: [Organization_Contact]
  "Technical endpoints providing access to services operated for the organization."
  endpoint: [Reference]
}

enum Organization_const {
  Organization
}

"A formally or informally recognized grouping of people or organizations formed for the purpose of achieving some form of collective action.  Includes companies, institutions, corporations, departments, community groups, healthcare practice groups, payer/insurer, etc."
type Organization_Contact {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  purpose: CodeableConcept
  name: HumanName
  "A contact detail (e.g. a telephone number or an email address) by which the party may be contacted."
  telecom: [ContactPoint]
  address: Address
}

"Defines an affiliation/assotiation/relationship between 2 distinct oganizations, that is not a part-of relationship/sub-division relationship."
type OrganizationAffiliation {
  resourceType: OrganizationAffiliation_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Business identifiers that are specific to this role."
  identifier: [Identifier]
  active: boolean
  _active: Element
  period: Period
  organization: Reference
  participatingOrganization: Reference
  "Health insurance provider network in which the participatingOrganization provides the role's services (if defined) at the indicated locations (if defined)."
  network: [Reference]
  "Definition of the role the participatingOrganization plays in the association."
  code: [CodeableConcept]
  "Specific specialty of the participatingOrganization in the context of the role."
  specialty: [CodeableConcept]
  "The location(s) at which the role occurs."
  location: [Reference]
  "Healthcare services provided through the role."
  healthcareService: [Reference]
  "Contact details at the participatingOrganization relevant to this Affiliation."
  telecom: [ContactPoint]
  "Technical endpoints providing access to services operated for this role."
  endpoint: [Reference]
}

enum OrganizationAffiliation_const {
  OrganizationAffiliation
}

"A medically related item or items, in a container or package."
type PackagedProductDefinition {
  resourceType: PackagedProductDefinition_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "A unique identifier for this package as whole. Unique instance identifiers assigned to a package by manufacturers, regulators, drug catalogue custodians or other organizations."
  identifier: [Identifier]
  name: string
  _name: Element
  type: CodeableConcept
  "The product that this is a pack for."
  packageFor: [Reference]
  status: CodeableConcept
  statusDate: dateTime
  _statusDate: Element
  "A total of the complete count of contained items of a particular type/form, independent of sub-packaging or organization. This can be considered as the pack size. This attribute differs from containedItem.amount in that it can give a single aggregated count of all tablet types in a pack, even when these are different manufactured items. For example a pill pack of 21 tablets plus 7 sugar tablets, can be denoted here as '28 tablets'. This attribute is repeatable so that the different item types in one pack type can be counted (e.g. a count of vials and count of syringes). Each repeat must have different units, so that it is clear what the different sets of counted items are, and it is not intended to allow different counts of similar items (e.g. not '2 tubes and 3 tubes'). Repeats are not to be used to represent different pack sizes (e.g. 20 pack vs. 50 pack) - which would be different instances of this resource."
  containedItemQuantity: [Quantity]
  description: markdown
  _description: Element
  "The legal status of supply of the packaged item as classified by the regulator."
  legalStatusOfSupply: [PackagedProductDefinition_LegalStatusOfSupply]
  "Allows specifying that an item is on the market for sale, or that it is not available, and the dates and locations associated."
  marketingStatus: [MarketingStatus]
  "Allows the key features to be recorded, such as \\"hospital pack\\", \\"nurse prescribable\\", \\"calendar pack\\"."
  characteristic: [CodeableConcept]
  copackagedIndicator: boolean
  _copackagedIndicator: Element
  "Manufacturer of this package type. When there are multiple it means these are all possible manufacturers."
  manufacturer: [Reference]
  package: PackagedProductDefinition_Package
}

enum PackagedProductDefinition_const {
  PackagedProductDefinition
}

"A medically related item or items, in a container or package."
type PackagedProductDefinition_LegalStatusOfSupply {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  code: CodeableConcept
  jurisdiction: CodeableConcept
}

"A medically related item or items, in a container or package."
type PackagedProductDefinition_Package {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "An identifier that is specific to this particular part of the packaging. Including possibly Data Carrier Identifier (a GS1 barcode)."
  identifier: [Identifier]
  type: CodeableConcept
  quantity: integer
  _quantity: Element
  "Material type of the package item."
  material: [CodeableConcept]
  "A possible alternate material for this part of the packaging, that is allowed to be used instead of the usual material (e.g. different types of plastic for a blister sleeve)."
  alternateMaterial: [CodeableConcept]
  "Shelf Life and storage information."
  shelfLifeStorage: [PackagedProductDefinition_ShelfLifeStorage]
  "Manufacturer of this package Item. When there are multiple it means these are all possible manufacturers."
  manufacturer: [Reference]
  "General characteristics of this item."
  property: [PackagedProductDefinition_Property]
  "The item(s) within the packaging."
  containedItem: [PackagedProductDefinition_ContainedItem]
  "Allows containers (and parts of containers) parwithin containers, still a single packaged product.  See also PackagedProductDefinition.package.containedItem.item(PackagedProductDefinition)."
  package: [PackagedProductDefinition_Package]
}

"A medically related item or items, in a container or package."
type PackagedProductDefinition_ShelfLifeStorage {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: CodeableConcept
  periodDuration: Duration
  periodString: query_resourceById_oneOf_98_package_shelfLifeStorage_items_periodString
  _periodString: Element
  "Special precautions for storage, if any, can be specified using an appropriate controlled vocabulary. The controlled term and the controlled term identifier shall be specified."
  specialPrecautionsForStorage: [CodeableConcept]
}

"The shelf life time period can be specified using a numerical value for the period of time and its unit of time measurement The unit of measurement shall be specified in accordance with ISO 11240 and the resulting terminology The symbol and the symbol identifier shall be used."
scalar query_resourceById_oneOf_98_package_shelfLifeStorage_items_periodString

"A medically related item or items, in a container or package."
type PackagedProductDefinition_Property {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: CodeableConcept!
  valueCodeableConcept: CodeableConcept
  valueQuantity: Quantity
  valueDate: query_resourceById_oneOf_98_package_property_items_valueDate
  _valueDate: Element
  "A value for the characteristic."
  valueBoolean: Boolean
  _valueBoolean: Element
  valueAttachment: Attachment
}

"A value for the characteristic."
scalar query_resourceById_oneOf_98_package_property_items_valueDate

"A medically related item or items, in a container or package."
type PackagedProductDefinition_ContainedItem {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  item: CodeableReference!
  amount: Quantity
}

"This resource is a non-persisted resource used to pass information into and back from an [operation](operations.html). It has no other use, and there is no RESTful endpoint associated with it."
type Parameters {
  resourceType: Parameters_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  "A parameter passed to or received from the operation."
  parameter: [Parameters_Parameter]
}

enum Parameters_const {
  Parameters
}

"This resource is a non-persisted resource used to pass information into and back from an [operation](operations.html). It has no other use, and there is no RESTful endpoint associated with it."
type Parameters_Parameter {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  name: string
  _name: Element
  valueBase64Binary: query_resourceById_oneOf_99_parameter_items_valueBase64Binary
  _valueBase64Binary: Element
  "Conveys the content if the parameter is a data type."
  valueBoolean: Boolean
  _valueBoolean: Element
  valueCanonical: query_resourceById_oneOf_99_parameter_items_valueCanonical
  _valueCanonical: Element
  valueCode: query_resourceById_oneOf_99_parameter_items_valueCode
  _valueCode: Element
  valueDate: query_resourceById_oneOf_99_parameter_items_valueDate
  _valueDate: Element
  valueDateTime: query_resourceById_oneOf_99_parameter_items_valueDateTime
  _valueDateTime: Element
  valueDecimal: query_resourceById_oneOf_99_parameter_items_valueDecimal
  _valueDecimal: Element
  valueId: query_resourceById_oneOf_99_parameter_items_valueId
  _valueId: Element
  valueInstant: query_resourceById_oneOf_99_parameter_items_valueInstant
  _valueInstant: Element
  valueInteger: query_resourceById_oneOf_99_parameter_items_valueInteger
  _valueInteger: Element
  valueMarkdown: query_resourceById_oneOf_99_parameter_items_valueMarkdown
  _valueMarkdown: Element
  valueOid: query_resourceById_oneOf_99_parameter_items_valueOid
  _valueOid: Element
  valuePositiveInt: query_resourceById_oneOf_99_parameter_items_valuePositiveInt
  _valuePositiveInt: Element
  valueString: query_resourceById_oneOf_99_parameter_items_valueString
  _valueString: Element
  valueTime: query_resourceById_oneOf_99_parameter_items_valueTime
  _valueTime: Element
  valueUnsignedInt: query_resourceById_oneOf_99_parameter_items_valueUnsignedInt
  _valueUnsignedInt: Element
  valueUri: query_resourceById_oneOf_99_parameter_items_valueUri
  _valueUri: Element
  valueUrl: query_resourceById_oneOf_99_parameter_items_valueUrl
  _valueUrl: Element
  valueUuid: query_resourceById_oneOf_99_parameter_items_valueUuid
  _valueUuid: Element
  valueAddress: Address
  valueAge: Age
  valueAnnotation: Annotation
  valueAttachment: Attachment
  valueCodeableConcept: CodeableConcept
  valueCoding: Coding
  valueContactPoint: ContactPoint
  valueCount: Count
  valueDistance: Distance
  valueDuration: Duration
  valueHumanName: HumanName
  valueIdentifier: Identifier
  valueMoney: Money
  valuePeriod: Period
  valueQuantity: Quantity
  valueRange: Range
  valueRatio: Ratio
  valueReference: Reference
  valueSampledData: SampledData
  valueSignature: Signature
  valueTiming: Timing
  valueContactDetail: ContactDetail
  valueContributor: Contributor
  valueDataRequirement: DataRequirement
  valueExpression: Expression
  valueParameterDefinition: ParameterDefinition
  valueRelatedArtifact: RelatedArtifact
  valueTriggerDefinition: TriggerDefinition
  valueUsageContext: UsageContext
  valueDosage: Dosage
  valueMeta: Meta
  resource: ResourceList
  "A named part of a multi-part parameter."
  part: [Parameters_Parameter]
}

"Conveys the content if the parameter is a data type."
scalar query_resourceById_oneOf_99_parameter_items_valueBase64Binary

"Conveys the content if the parameter is a data type."
scalar query_resourceById_oneOf_99_parameter_items_valueCanonical

"Conveys the content if the parameter is a data type."
scalar query_resourceById_oneOf_99_parameter_items_valueCode

"Conveys the content if the parameter is a data type."
scalar query_resourceById_oneOf_99_parameter_items_valueDate

"Conveys the content if the parameter is a data type."
scalar query_resourceById_oneOf_99_parameter_items_valueDateTime

"Conveys the content if the parameter is a data type."
scalar query_resourceById_oneOf_99_parameter_items_valueDecimal

"Conveys the content if the parameter is a data type."
scalar query_resourceById_oneOf_99_parameter_items_valueId

"Conveys the content if the parameter is a data type."
scalar query_resourceById_oneOf_99_parameter_items_valueInstant

"Conveys the content if the parameter is a data type."
scalar query_resourceById_oneOf_99_parameter_items_valueInteger

"Conveys the content if the parameter is a data type."
scalar query_resourceById_oneOf_99_parameter_items_valueMarkdown

"Conveys the content if the parameter is a data type."
scalar query_resourceById_oneOf_99_parameter_items_valueOid

"Conveys the content if the parameter is a data type."
scalar query_resourceById_oneOf_99_parameter_items_valuePositiveInt

"Conveys the content if the parameter is a data type."
scalar query_resourceById_oneOf_99_parameter_items_valueString

"Conveys the content if the parameter is a data type."
scalar query_resourceById_oneOf_99_parameter_items_valueTime

"Conveys the content if the parameter is a data type."
scalar query_resourceById_oneOf_99_parameter_items_valueUnsignedInt

"Conveys the content if the parameter is a data type."
scalar query_resourceById_oneOf_99_parameter_items_valueUri

"Conveys the content if the parameter is a data type."
scalar query_resourceById_oneOf_99_parameter_items_valueUrl

"Conveys the content if the parameter is a data type."
scalar query_resourceById_oneOf_99_parameter_items_valueUuid

"Demographics and other administrative information about an individual or animal receiving care or other health-related services."
type Patient {
  resourceType: Patient_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "An identifier for this patient."
  identifier: [Identifier]
  active: boolean
  _active: Element
  "A name associated with the individual."
  name: [HumanName]
  "A contact detail (e.g. a telephone number or an email address) by which the individual may be contacted."
  telecom: [ContactPoint]
  gender: code
  _gender: Element
  birthDate: date
  _birthDate: Element
  "Indicates if the individual is deceased or not."
  deceasedBoolean: Boolean
  _deceasedBoolean: Element
  deceasedDateTime: query_resourceById_oneOf_100_deceasedDateTime
  _deceasedDateTime: Element
  "An address for the individual."
  address: [Address]
  maritalStatus: CodeableConcept
  "Indicates whether the patient is part of a multiple (boolean) or indicates the actual birth order (integer)."
  multipleBirthBoolean: Boolean
  _multipleBirthBoolean: Element
  multipleBirthInteger: query_resourceById_oneOf_100_multipleBirthInteger
  _multipleBirthInteger: Element
  "Image of the patient."
  photo: [Attachment]
  "A contact party (e.g. guardian, partner, friend) for the patient."
  contact: [Patient_Contact]
  "A language which may be used to communicate with the patient about his or her health."
  communication: [Patient_Communication]
  "Patient's nominated care provider."
  generalPractitioner: [Reference]
  managingOrganization: Reference
  "Link to another patient resource that concerns the same actual patient."
  link: [Patient_Link]
}

enum Patient_const {
  Patient
}

"Indicates if the individual is deceased or not."
scalar query_resourceById_oneOf_100_deceasedDateTime

"Indicates whether the patient is part of a multiple (boolean) or indicates the actual birth order (integer)."
scalar query_resourceById_oneOf_100_multipleBirthInteger

"Demographics and other administrative information about an individual or animal receiving care or other health-related services."
type Patient_Contact {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "The nature of the relationship between the patient and the contact person."
  relationship: [CodeableConcept]
  name: HumanName
  "A contact detail for the person, e.g. a telephone number or an email address."
  telecom: [ContactPoint]
  address: Address
  gender: code
  _gender: Element
  organization: Reference
  period: Period
}

"Demographics and other administrative information about an individual or animal receiving care or other health-related services."
type Patient_Communication {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  language: CodeableConcept!
  preferred: boolean
  _preferred: Element
}

"Demographics and other administrative information about an individual or animal receiving care or other health-related services."
type Patient_Link {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  other: Reference!
  type: code
  _type: Element
}

"This resource provides the status of the payment for goods and services rendered, and the request and response resource references."
type PaymentNotice {
  resourceType: PaymentNotice_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "A unique identifier assigned to this payment notice."
  identifier: [Identifier]
  status: code
  _status: Element
  request: Reference
  response: Reference
  created: dateTime
  _created: Element
  provider: Reference
  payment: Reference!
  paymentDate: date
  _paymentDate: Element
  payee: Reference
  recipient: Reference!
  amount: Money!
  paymentStatus: CodeableConcept
}

enum PaymentNotice_const {
  PaymentNotice
}

"This resource provides the details including amount of a payment and allocates the payment items being paid."
type PaymentReconciliation {
  resourceType: PaymentReconciliation_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "A unique identifier assigned to this payment reconciliation."
  identifier: [Identifier]
  status: code
  _status: Element
  period: Period
  created: dateTime
  _created: Element
  paymentIssuer: Reference
  request: Reference
  requestor: Reference
  outcome: code
  _outcome: Element
  disposition: string
  _disposition: Element
  paymentDate: date
  _paymentDate: Element
  paymentAmount: Money!
  paymentIdentifier: Identifier
  "Distribution of the payment amount for a previously acknowledged payable."
  detail: [PaymentReconciliation_Detail]
  formCode: CodeableConcept
  "A note that describes or explains the processing in a human readable form."
  processNote: [PaymentReconciliation_ProcessNote]
}

enum PaymentReconciliation_const {
  PaymentReconciliation
}

"This resource provides the details including amount of a payment and allocates the payment items being paid."
type PaymentReconciliation_Detail {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  identifier: Identifier
  predecessor: Identifier
  type: CodeableConcept!
  request: Reference
  submitter: Reference
  response: Reference
  date: date
  _date: Element
  responsible: Reference
  payee: Reference
  amount: Money
}

"This resource provides the details including amount of a payment and allocates the payment items being paid."
type PaymentReconciliation_ProcessNote {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: code
  _type: Element
  text: string
  _text: Element
}

"Demographics and administrative information about a person independent of a specific health-related context."
type Person {
  resourceType: Person_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Identifier for a person within a particular scope."
  identifier: [Identifier]
  "A name associated with the person."
  name: [HumanName]
  "A contact detail for the person, e.g. a telephone number or an email address."
  telecom: [ContactPoint]
  gender: code
  _gender: Element
  birthDate: date
  _birthDate: Element
  "One or more addresses for the person."
  address: [Address]
  photo: Attachment
  managingOrganization: Reference
  active: boolean
  _active: Element
  "Link to a resource that concerns the same actual person."
  link: [Person_Link]
}

enum Person_const {
  Person
}

"Demographics and administrative information about a person independent of a specific health-related context."
type Person_Link {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  target: Reference!
  assurance: code
  _assurance: Element
}

"This resource allows for the definition of various types of plans as a sharable, consumable, and executable artifact. The resource is general enough to support the description of a broad range of clinical and non-clinical artifacts such as clinical decision support rules, order sets, protocols, and drug quality specifications."
type PlanDefinition {
  resourceType: PlanDefinition_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  url: uri
  _url: Element
  "A formal identifier that is used to identify this plan definition when it is represented in other formats, or referenced in a specification, model, design or an instance."
  identifier: [Identifier]
  version: string
  _version: Element
  name: string
  _name: Element
  title: string
  _title: Element
  subtitle: string
  _subtitle: Element
  type: CodeableConcept
  status: code
  _status: Element
  experimental: boolean
  _experimental: Element
  subjectCodeableConcept: CodeableConcept
  subjectReference: Reference
  subjectCanonical: query_resourceById_oneOf_104_subjectCanonical
  _subjectCanonical: Element
  date: dateTime
  _date: Element
  publisher: string
  _publisher: Element
  "Contact details to assist a user in finding and communicating with the publisher."
  contact: [ContactDetail]
  description: markdown
  _description: Element
  "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate plan definition instances."
  useContext: [UsageContext]
  "A legal or geographic region in which the plan definition is intended to be used."
  jurisdiction: [CodeableConcept]
  purpose: markdown
  _purpose: Element
  usage: string
  _usage: Element
  copyright: markdown
  _copyright: Element
  approvalDate: date
  _approvalDate: Element
  lastReviewDate: date
  _lastReviewDate: Element
  effectivePeriod: Period
  "Descriptive topics related to the content of the plan definition. Topics provide a high-level categorization of the definition that can be useful for filtering and searching."
  topic: [CodeableConcept]
  "An individiual or organization primarily involved in the creation and maintenance of the content."
  author: [ContactDetail]
  "An individual or organization primarily responsible for internal coherence of the content."
  editor: [ContactDetail]
  "An individual or organization primarily responsible for review of some aspect of the content."
  reviewer: [ContactDetail]
  "An individual or organization responsible for officially endorsing the content for use in some setting."
  endorser: [ContactDetail]
  "Related artifacts such as additional documentation, justification, or bibliographic references."
  relatedArtifact: [RelatedArtifact]
  "A reference to a Library resource containing any formal logic used by the plan definition."
  library: [canonical]
  "A goal describes an expected outcome that activities within the plan are intended to achieve. For example, weight loss, restoring an activity of daily living, obtaining herd immunity via immunization, meeting a process improvement objective, meeting the acceptance criteria for a test as specified by a quality specification, etc."
  goal: [PlanDefinition_Goal]
  "An action or group of actions to be taken as part of the plan. For example, in clinical care, an action would be to prescribe a particular indicated medication, or perform a particular test as appropriate. In pharmaceutical quality, an action would be the test that needs to be performed on a drug product as defined in the quality specification."
  action: [PlanDefinition_Action]
}

enum PlanDefinition_const {
  PlanDefinition
}

"A code, group definition, or canonical reference that describes  or identifies the intended subject of the plan definition. Canonical references are allowed to support the definition of protocols for drug and substance quality specifications, and is allowed to reference a MedicinalProductDefinition, SubstanceDefinition, AdministrableProductDefinition, ManufacturedItemDefinition, or PackagedProductDefinition resource."
scalar query_resourceById_oneOf_104_subjectCanonical

"This resource allows for the definition of various types of plans as a sharable, consumable, and executable artifact. The resource is general enough to support the description of a broad range of clinical and non-clinical artifacts such as clinical decision support rules, order sets, protocols, and drug quality specifications."
type PlanDefinition_Goal {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  category: CodeableConcept
  description: CodeableConcept!
  priority: CodeableConcept
  start: CodeableConcept
  "Identifies problems, conditions, issues, or concerns the goal is intended to address."
  addresses: [CodeableConcept]
  "Didactic or other informational resources associated with the goal that provide further supporting information about the goal. Information resources can include inline text commentary and links to web resources."
  documentation: [RelatedArtifact]
  "Indicates what should be done and within what timeframe."
  target: [PlanDefinition_Target]
}

"This resource allows for the definition of various types of plans as a sharable, consumable, and executable artifact. The resource is general enough to support the description of a broad range of clinical and non-clinical artifacts such as clinical decision support rules, order sets, protocols, and drug quality specifications."
type PlanDefinition_Target {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  measure: CodeableConcept
  detailQuantity: Quantity
  detailRange: Range
  detailCodeableConcept: CodeableConcept
  due: Duration
}

"This resource allows for the definition of various types of plans as a sharable, consumable, and executable artifact. The resource is general enough to support the description of a broad range of clinical and non-clinical artifacts such as clinical decision support rules, order sets, protocols, and drug quality specifications."
type PlanDefinition_Action {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  prefix: string
  _prefix: Element
  title: string
  _title: Element
  description: string
  _description: Element
  textEquivalent: string
  _textEquivalent: Element
  priority: code
  _priority: Element
  "A code that provides a meaning, grouping, or classification for the action or action group. For example, a section may have a LOINC code for the section of a documentation template. In pharmaceutical quality, an action (Test) such as pH could be classified as a physical property."
  code: [CodeableConcept]
  "A description of why this action is necessary or appropriate."
  reason: [CodeableConcept]
  "Didactic or other informational resources associated with the action that can be provided to the CDS recipient. Information resources can include inline text commentary and links to web resources."
  documentation: [RelatedArtifact]
  "Identifies goals that this action supports. The reference must be to a goal element defined within this plan definition. In pharmaceutical quality, a goal represents acceptance criteria (Goal) for a given action (Test), so the goalId would be the unique id of a defined goal element establishing the acceptance criteria for the action."
  goalId: [id]
  "Extensions for goalId"
  _goalId: [Element]
  subjectCodeableConcept: CodeableConcept
  subjectReference: Reference
  subjectCanonical: query_resourceById_oneOf_104_action_items_subjectCanonical
  _subjectCanonical: Element
  "A description of when the action should be triggered."
  trigger: [TriggerDefinition]
  "An expression that describes applicability criteria or start/stop conditions for the action."
  condition: [PlanDefinition_Condition]
  "Defines input data requirements for the action."
  input: [DataRequirement]
  "Defines the outputs of the action, if any."
  output: [DataRequirement]
  "A relationship to another action such as \\"before\\" or \\"30-60 minutes after start of\\"."
  relatedAction: [PlanDefinition_RelatedAction]
  timingDateTime: query_resourceById_oneOf_104_action_items_timingDateTime
  _timingDateTime: Element
  timingAge: Age
  timingPeriod: Period
  timingDuration: Duration
  timingRange: Range
  timingTiming: Timing
  "Indicates who should participate in performing the action described."
  participant: [PlanDefinition_Participant]
  type: CodeableConcept
  groupingBehavior: code
  _groupingBehavior: Element
  selectionBehavior: code
  _selectionBehavior: Element
  requiredBehavior: code
  _requiredBehavior: Element
  precheckBehavior: code
  _precheckBehavior: Element
  cardinalityBehavior: code
  _cardinalityBehavior: Element
  definitionCanonical: query_resourceById_oneOf_104_action_items_definitionCanonical
  _definitionCanonical: Element
  definitionUri: query_resourceById_oneOf_104_action_items_definitionUri
  _definitionUri: Element
  transform: canonical
  "Customizations that should be applied to the statically defined resource. For example, if the dosage of a medication must be computed based on the patient's weight, a customization would be used to specify an expression that calculated the weight, and the path on the resource that would contain the result."
  dynamicValue: [PlanDefinition_DynamicValue]
  "Sub actions that are contained within the action. The behavior of this action determines the functionality of the sub-actions. For example, a selection behavior of at-most-one indicates that of the sub-actions, at most one may be chosen as part of realizing the action definition."
  action: [PlanDefinition_Action]
}

"A code, group definition, or canonical reference that describes the intended subject of the action and its children, if any. Canonical references are allowed to support the definition of protocols for drug and substance quality specifications, and is allowed to reference a MedicinalProductDefinition, SubstanceDefinition, AdministrableProductDefinition, ManufacturedItemDefinition, or PackagedProductDefinition resource."
scalar query_resourceById_oneOf_104_action_items_subjectCanonical

"This resource allows for the definition of various types of plans as a sharable, consumable, and executable artifact. The resource is general enough to support the description of a broad range of clinical and non-clinical artifacts such as clinical decision support rules, order sets, protocols, and drug quality specifications."
type PlanDefinition_Condition {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  kind: code
  _kind: Element
  expression: Expression
}

"This resource allows for the definition of various types of plans as a sharable, consumable, and executable artifact. The resource is general enough to support the description of a broad range of clinical and non-clinical artifacts such as clinical decision support rules, order sets, protocols, and drug quality specifications."
type PlanDefinition_RelatedAction {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  actionId: id
  _actionId: Element
  relationship: code
  _relationship: Element
  offsetDuration: Duration
  offsetRange: Range
}

"An optional value describing when the action should be performed."
scalar query_resourceById_oneOf_104_action_items_timingDateTime

"This resource allows for the definition of various types of plans as a sharable, consumable, and executable artifact. The resource is general enough to support the description of a broad range of clinical and non-clinical artifacts such as clinical decision support rules, order sets, protocols, and drug quality specifications."
type PlanDefinition_Participant {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: code
  _type: Element
  role: CodeableConcept
}

"A reference to an ActivityDefinition that describes the action to be taken in detail, or a PlanDefinition that describes a series of actions to be taken."
scalar query_resourceById_oneOf_104_action_items_definitionCanonical

"A reference to an ActivityDefinition that describes the action to be taken in detail, or a PlanDefinition that describes a series of actions to be taken."
scalar query_resourceById_oneOf_104_action_items_definitionUri

"This resource allows for the definition of various types of plans as a sharable, consumable, and executable artifact. The resource is general enough to support the description of a broad range of clinical and non-clinical artifacts such as clinical decision support rules, order sets, protocols, and drug quality specifications."
type PlanDefinition_DynamicValue {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  path: string
  _path: Element
  expression: Expression
}

"A person who is directly or indirectly involved in the provisioning of healthcare."
type Practitioner {
  resourceType: Practitioner_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "An identifier that applies to this person in this role."
  identifier: [Identifier]
  active: boolean
  _active: Element
  "The name(s) associated with the practitioner."
  name: [HumanName]
  "A contact detail for the practitioner, e.g. a telephone number or an email address."
  telecom: [ContactPoint]
  "Address(es) of the practitioner that are not role specific (typically home address). \\rWork addresses are not typically entered in this property as they are usually role dependent."
  address: [Address]
  gender: code
  _gender: Element
  birthDate: date
  _birthDate: Element
  "Image of the person."
  photo: [Attachment]
  "The official certifications, training, and licenses that authorize or otherwise pertain to the provision of care by the practitioner.  For example, a medical license issued by a medical board authorizing the practitioner to practice medicine within a certian locality."
  qualification: [Practitioner_Qualification]
  "A language the practitioner can use in patient communication."
  communication: [CodeableConcept]
}

enum Practitioner_const {
  Practitioner
}

"A person who is directly or indirectly involved in the provisioning of healthcare."
type Practitioner_Qualification {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "An identifier that applies to this person's qualification in this role."
  identifier: [Identifier]
  code: CodeableConcept!
  period: Period
  issuer: Reference
}

"A specific set of Roles/Locations/specialties/services that a practitioner may perform at an organization for a period of time."
type PractitionerRole {
  resourceType: PractitionerRole_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Business Identifiers that are specific to a role/location."
  identifier: [Identifier]
  active: boolean
  _active: Element
  period: Period
  practitioner: Reference
  organization: Reference
  "Roles which this practitioner is authorized to perform for the organization."
  code: [CodeableConcept]
  "Specific specialty of the practitioner."
  specialty: [CodeableConcept]
  "The location(s) at which this practitioner provides care."
  location: [Reference]
  "The list of healthcare services that this worker provides for this role's Organization/Location(s)."
  healthcareService: [Reference]
  "Contact details that are specific to the role/location/service."
  telecom: [ContactPoint]
  "A collection of times the practitioner is available or performing this role at the location and/or healthcareservice."
  availableTime: [PractitionerRole_AvailableTime]
  "The practitioner is not available or performing this role during this period of time due to the provided reason."
  notAvailable: [PractitionerRole_NotAvailable]
  availabilityExceptions: string
  _availabilityExceptions: Element
  "Technical endpoints providing access to services operated for the practitioner with this role."
  endpoint: [Reference]
}

enum PractitionerRole_const {
  PractitionerRole
}

"A specific set of Roles/Locations/specialties/services that a practitioner may perform at an organization for a period of time."
type PractitionerRole_AvailableTime {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Indicates which days of the week are available between the start and end Times."
  daysOfWeek: [code]
  "Extensions for daysOfWeek"
  _daysOfWeek: [Element]
  allDay: boolean
  _allDay: Element
  availableStartTime: time
  _availableStartTime: Element
  availableEndTime: time
  _availableEndTime: Element
}

"A specific set of Roles/Locations/specialties/services that a practitioner may perform at an organization for a period of time."
type PractitionerRole_NotAvailable {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  description: string
  _description: Element
  during: Period
}

"An action that is or was performed on or for a patient. This can be a physical intervention like an operation, or less invasive like long term services, counseling, or hypnotherapy."
type Procedure {
  resourceType: Procedure_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Business identifiers assigned to this procedure by the performer or other systems which remain constant as the resource is updated and is propagated from server to server."
  identifier: [Identifier]
  "The URL pointing to a FHIR-defined protocol, guideline, order set or other definition that is adhered to in whole or in part by this Procedure."
  instantiatesCanonical: [canonical]
  "The URL pointing to an externally maintained protocol, guideline, order set or other definition that is adhered to in whole or in part by this Procedure."
  instantiatesUri: [uri]
  "Extensions for instantiatesUri"
  _instantiatesUri: [Element]
  "A reference to a resource that contains details of the request for this procedure."
  basedOn: [Reference]
  "A larger event of which this particular procedure is a component or step."
  partOf: [Reference]
  status: code
  _status: Element
  statusReason: CodeableConcept
  category: CodeableConcept
  code: CodeableConcept
  subject: Reference!
  encounter: Reference
  performedDateTime: query_resourceById_oneOf_107_performedDateTime
  _performedDateTime: Element
  performedPeriod: Period
  performedString: query_resourceById_oneOf_107_performedString
  _performedString: Element
  performedAge: Age
  performedRange: Range
  recorder: Reference
  asserter: Reference
  "Limited to \\"real\\" people rather than equipment."
  performer: [Procedure_Performer]
  location: Reference
  "The coded reason why the procedure was performed. This may be a coded entity of some type, or may simply be present as text."
  reasonCode: [CodeableConcept]
  "The justification of why the procedure was performed."
  reasonReference: [Reference]
  "Detailed and structured anatomical location information. Multiple locations are allowed - e.g. multiple punch biopsies of a lesion."
  bodySite: [CodeableConcept]
  outcome: CodeableConcept
  "This could be a histology result, pathology report, surgical report, etc."
  report: [Reference]
  "Any complications that occurred during the procedure, or in the immediate post-performance period. These are generally tracked separately from the notes, which will typically describe the procedure itself rather than any 'post procedure' issues."
  complication: [CodeableConcept]
  "Any complications that occurred during the procedure, or in the immediate post-performance period."
  complicationDetail: [Reference]
  "If the procedure required specific follow up - e.g. removal of sutures. The follow up may be represented as a simple note or could potentially be more complex, in which case the CarePlan resource can be used."
  followUp: [CodeableConcept]
  "Any other notes and comments about the procedure."
  note: [Annotation]
  "A device that is implanted, removed or otherwise manipulated (calibration, battery replacement, fitting a prosthesis, attaching a wound-vac, etc.) as a focal portion of the Procedure."
  focalDevice: [Procedure_FocalDevice]
  "Identifies medications, devices and any other substance used as part of the procedure."
  usedReference: [Reference]
  "Identifies coded items that were used as part of the procedure."
  usedCode: [CodeableConcept]
}

enum Procedure_const {
  Procedure
}

"Estimated or actual date, date-time, period, or age when the procedure was performed.  Allows a period to support complex procedures that span more than one date, and also allows for the length of the procedure to be captured."
scalar query_resourceById_oneOf_107_performedDateTime

"Estimated or actual date, date-time, period, or age when the procedure was performed.  Allows a period to support complex procedures that span more than one date, and also allows for the length of the procedure to be captured."
scalar query_resourceById_oneOf_107_performedString

"An action that is or was performed on or for a patient. This can be a physical intervention like an operation, or less invasive like long term services, counseling, or hypnotherapy."
type Procedure_Performer {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  function: CodeableConcept
  actor: Reference!
  onBehalfOf: Reference
}

"An action that is or was performed on or for a patient. This can be a physical intervention like an operation, or less invasive like long term services, counseling, or hypnotherapy."
type Procedure_FocalDevice {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  action: CodeableConcept
  manipulated: Reference!
}

"Provenance of a resource is a record that describes entities and processes involved in producing and delivering or otherwise influencing that resource. Provenance provides a critical foundation for assessing authenticity, enabling trust, and allowing reproducibility. Provenance assertions are a form of contextual metadata and can themselves become important records with their own provenance. Provenance statement indicates clinical significance in terms of confidence in authenticity, reliability, and trustworthiness, integrity, and stage in lifecycle (e.g. Document Completion - has the artifact been legally authenticated), all of which may impact security, privacy, and trust policies."
type Provenance {
  resourceType: Provenance_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "The Reference(s) that were generated or updated by  the activity described in this resource. A provenance can point to more than one target if multiple resources were created/updated by the same activity."
  target: [Reference]!
  occurredPeriod: Period
  occurredDateTime: query_resourceById_oneOf_108_occurredDateTime
  _occurredDateTime: Element
  recorded: instant
  _recorded: Element
  "Policy or plan the activity was defined by. Typically, a single activity may have multiple applicable policy documents, such as patient consent, guarantor funding, etc."
  policy: [uri]
  "Extensions for policy"
  _policy: [Element]
  location: Reference
  "The reason that the activity was taking place."
  reason: [CodeableConcept]
  activity: CodeableConcept
  "An actor taking a role in an activity  for which it can be assigned some degree of responsibility for the activity taking place."
  agent: [Provenance_Agent]!
  "An entity used in this activity."
  entity: [Provenance_Entity]
  "A digital signature on the target Reference(s). The signer should match a Provenance.agent. The purpose of the signature is indicated."
  signature: [Signature]
}

enum Provenance_const {
  Provenance
}

"The period during which the activity occurred."
scalar query_resourceById_oneOf_108_occurredDateTime

"Provenance of a resource is a record that describes entities and processes involved in producing and delivering or otherwise influencing that resource. Provenance provides a critical foundation for assessing authenticity, enabling trust, and allowing reproducibility. Provenance assertions are a form of contextual metadata and can themselves become important records with their own provenance. Provenance statement indicates clinical significance in terms of confidence in authenticity, reliability, and trustworthiness, integrity, and stage in lifecycle (e.g. Document Completion - has the artifact been legally authenticated), all of which may impact security, privacy, and trust policies."
type Provenance_Agent {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: CodeableConcept
  "The function of the agent with respect to the activity. The security role enabling the agent with respect to the activity."
  role: [CodeableConcept]
  who: Reference!
  onBehalfOf: Reference
}

"Provenance of a resource is a record that describes entities and processes involved in producing and delivering or otherwise influencing that resource. Provenance provides a critical foundation for assessing authenticity, enabling trust, and allowing reproducibility. Provenance assertions are a form of contextual metadata and can themselves become important records with their own provenance. Provenance statement indicates clinical significance in terms of confidence in authenticity, reliability, and trustworthiness, integrity, and stage in lifecycle (e.g. Document Completion - has the artifact been legally authenticated), all of which may impact security, privacy, and trust policies."
type Provenance_Entity {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  role: code
  _role: Element
  what: Reference!
  "The entity is attributed to an agent to express the agent's responsibility for that entity, possibly along with other agents. This description can be understood as shorthand for saying that the agent was responsible for the activity which generated the entity."
  agent: [Provenance_Agent]
}

"A structured set of questions intended to guide the collection of answers from end-users. Questionnaires provide detailed control over order, presentation, phraseology and grouping to allow coherent, consistent data collection."
type Questionnaire {
  resourceType: Questionnaire_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  url: uri
  _url: Element
  "A formal identifier that is used to identify this questionnaire when it is represented in other formats, or referenced in a specification, model, design or an instance."
  identifier: [Identifier]
  version: string
  _version: Element
  name: string
  _name: Element
  title: string
  _title: Element
  "The URL of a Questionnaire that this Questionnaire is based on."
  derivedFrom: [canonical]
  status: code
  _status: Element
  experimental: boolean
  _experimental: Element
  "The types of subjects that can be the subject of responses created for the questionnaire."
  subjectType: [code]
  "Extensions for subjectType"
  _subjectType: [Element]
  date: dateTime
  _date: Element
  publisher: string
  _publisher: Element
  "Contact details to assist a user in finding and communicating with the publisher."
  contact: [ContactDetail]
  description: markdown
  _description: Element
  "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate questionnaire instances."
  useContext: [UsageContext]
  "A legal or geographic region in which the questionnaire is intended to be used."
  jurisdiction: [CodeableConcept]
  purpose: markdown
  _purpose: Element
  copyright: markdown
  _copyright: Element
  approvalDate: date
  _approvalDate: Element
  lastReviewDate: date
  _lastReviewDate: Element
  effectivePeriod: Period
  "An identifier for this question or group of questions in a particular terminology such as LOINC."
  code: [Coding]
  "A particular question, question grouping or display text that is part of the questionnaire."
  item: [Questionnaire_Item]
}

enum Questionnaire_const {
  Questionnaire
}

"A structured set of questions intended to guide the collection of answers from end-users. Questionnaires provide detailed control over order, presentation, phraseology and grouping to allow coherent, consistent data collection."
type Questionnaire_Item {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  linkId: string
  _linkId: Element
  definition: uri
  _definition: Element
  "A terminology code that corresponds to this group or question (e.g. a code from LOINC, which defines many questions and answers)."
  code: [Coding]
  prefix: string
  _prefix: Element
  text: string
  _text: Element
  type: code
  _type: Element
  "A constraint indicating that this item should only be enabled (displayed/allow answers to be captured) when the specified condition is true."
  enableWhen: [Questionnaire_EnableWhen]
  enableBehavior: code
  _enableBehavior: Element
  required: boolean
  _required: Element
  repeats: boolean
  _repeats: Element
  readOnly: boolean
  _readOnly: Element
  maxLength: integer
  _maxLength: Element
  answerValueSet: canonical
  "One of the permitted answers for a \\"choice\\" or \\"open-choice\\" question."
  answerOption: [Questionnaire_AnswerOption]
  "One or more values that should be pre-populated in the answer when initially rendering the questionnaire for user input."
  initial: [Questionnaire_Initial]
  "Text, questions and other groups to be nested beneath a question or group."
  item: [Questionnaire_Item]
}

"A structured set of questions intended to guide the collection of answers from end-users. Questionnaires provide detailed control over order, presentation, phraseology and grouping to allow coherent, consistent data collection."
type Questionnaire_EnableWhen {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  question: string
  _question: Element
  operator: code
  _operator: Element
  "A value that the referenced question is tested using the specified operator in order for the item to be enabled."
  answerBoolean: Boolean
  _answerBoolean: Element
  answerDecimal: query_resourceById_oneOf_109_item_items_enableWhen_items_answerDecimal
  _answerDecimal: Element
  answerInteger: query_resourceById_oneOf_109_item_items_enableWhen_items_answerInteger
  _answerInteger: Element
  answerDate: query_resourceById_oneOf_109_item_items_enableWhen_items_answerDate
  _answerDate: Element
  answerDateTime: query_resourceById_oneOf_109_item_items_enableWhen_items_answerDateTime
  _answerDateTime: Element
  answerTime: query_resourceById_oneOf_109_item_items_enableWhen_items_answerTime
  _answerTime: Element
  answerString: query_resourceById_oneOf_109_item_items_enableWhen_items_answerString
  _answerString: Element
  answerCoding: Coding
  answerQuantity: Quantity
  answerReference: Reference
}

"A value that the referenced question is tested using the specified operator in order for the item to be enabled."
scalar query_resourceById_oneOf_109_item_items_enableWhen_items_answerDecimal

"A value that the referenced question is tested using the specified operator in order for the item to be enabled."
scalar query_resourceById_oneOf_109_item_items_enableWhen_items_answerInteger

"A value that the referenced question is tested using the specified operator in order for the item to be enabled."
scalar query_resourceById_oneOf_109_item_items_enableWhen_items_answerDate

"A value that the referenced question is tested using the specified operator in order for the item to be enabled."
scalar query_resourceById_oneOf_109_item_items_enableWhen_items_answerDateTime

"A value that the referenced question is tested using the specified operator in order for the item to be enabled."
scalar query_resourceById_oneOf_109_item_items_enableWhen_items_answerTime

"A value that the referenced question is tested using the specified operator in order for the item to be enabled."
scalar query_resourceById_oneOf_109_item_items_enableWhen_items_answerString

"A structured set of questions intended to guide the collection of answers from end-users. Questionnaires provide detailed control over order, presentation, phraseology and grouping to allow coherent, consistent data collection."
type Questionnaire_AnswerOption {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  valueInteger: query_resourceById_oneOf_109_item_items_answerOption_items_valueInteger
  _valueInteger: Element
  valueDate: query_resourceById_oneOf_109_item_items_answerOption_items_valueDate
  _valueDate: Element
  valueTime: query_resourceById_oneOf_109_item_items_answerOption_items_valueTime
  _valueTime: Element
  valueString: query_resourceById_oneOf_109_item_items_answerOption_items_valueString
  _valueString: Element
  valueCoding: Coding
  valueReference: Reference
  initialSelected: boolean
  _initialSelected: Element
}

"A potential answer that's allowed as the answer to this question."
scalar query_resourceById_oneOf_109_item_items_answerOption_items_valueInteger

"A potential answer that's allowed as the answer to this question."
scalar query_resourceById_oneOf_109_item_items_answerOption_items_valueDate

"A potential answer that's allowed as the answer to this question."
scalar query_resourceById_oneOf_109_item_items_answerOption_items_valueTime

"A potential answer that's allowed as the answer to this question."
scalar query_resourceById_oneOf_109_item_items_answerOption_items_valueString

"A structured set of questions intended to guide the collection of answers from end-users. Questionnaires provide detailed control over order, presentation, phraseology and grouping to allow coherent, consistent data collection."
type Questionnaire_Initial {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "The actual value to for an initial answer."
  valueBoolean: Boolean
  _valueBoolean: Element
  valueDecimal: query_resourceById_oneOf_109_item_items_initial_items_valueDecimal
  _valueDecimal: Element
  valueInteger: query_resourceById_oneOf_109_item_items_initial_items_valueInteger
  _valueInteger: Element
  valueDate: query_resourceById_oneOf_109_item_items_initial_items_valueDate
  _valueDate: Element
  valueDateTime: query_resourceById_oneOf_109_item_items_initial_items_valueDateTime
  _valueDateTime: Element
  valueTime: query_resourceById_oneOf_109_item_items_initial_items_valueTime
  _valueTime: Element
  valueString: query_resourceById_oneOf_109_item_items_initial_items_valueString
  _valueString: Element
  valueUri: query_resourceById_oneOf_109_item_items_initial_items_valueUri
  _valueUri: Element
  valueAttachment: Attachment
  valueCoding: Coding
  valueQuantity: Quantity
  valueReference: Reference
}

"The actual value to for an initial answer."
scalar query_resourceById_oneOf_109_item_items_initial_items_valueDecimal

"The actual value to for an initial answer."
scalar query_resourceById_oneOf_109_item_items_initial_items_valueInteger

"The actual value to for an initial answer."
scalar query_resourceById_oneOf_109_item_items_initial_items_valueDate

"The actual value to for an initial answer."
scalar query_resourceById_oneOf_109_item_items_initial_items_valueDateTime

"The actual value to for an initial answer."
scalar query_resourceById_oneOf_109_item_items_initial_items_valueTime

"The actual value to for an initial answer."
scalar query_resourceById_oneOf_109_item_items_initial_items_valueString

"The actual value to for an initial answer."
scalar query_resourceById_oneOf_109_item_items_initial_items_valueUri

"A structured set of questions and their answers. The questions are ordered and grouped into coherent subsets, corresponding to the structure of the grouping of the questionnaire being responded to."
type QuestionnaireResponse {
  resourceType: QuestionnaireResponse_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  identifier: Identifier
  "The order, proposal or plan that is fulfilled in whole or in part by this QuestionnaireResponse.  For example, a ServiceRequest seeking an intake assessment or a decision support recommendation to assess for post-partum depression."
  basedOn: [Reference]
  "A procedure or observation that this questionnaire was performed as part of the execution of.  For example, the surgery a checklist was executed as part of."
  partOf: [Reference]
  questionnaire: canonical
  status: code
  _status: Element
  subject: Reference
  encounter: Reference
  authored: dateTime
  _authored: Element
  author: Reference
  source: Reference
  "A group or question item from the original questionnaire for which answers are provided."
  item: [QuestionnaireResponse_Item]
}

enum QuestionnaireResponse_const {
  QuestionnaireResponse
}

"A structured set of questions and their answers. The questions are ordered and grouped into coherent subsets, corresponding to the structure of the grouping of the questionnaire being responded to."
type QuestionnaireResponse_Item {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  linkId: string
  _linkId: Element
  definition: uri
  _definition: Element
  text: string
  _text: Element
  "The respondent's answer(s) to the question."
  answer: [QuestionnaireResponse_Answer]
  "Questions or sub-groups nested beneath a question or group."
  item: [QuestionnaireResponse_Item]
}

"A structured set of questions and their answers. The questions are ordered and grouped into coherent subsets, corresponding to the structure of the grouping of the questionnaire being responded to."
type QuestionnaireResponse_Answer {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "The answer (or one of the answers) provided by the respondent to the question."
  valueBoolean: Boolean
  _valueBoolean: Element
  valueDecimal: query_resourceById_oneOf_110_item_items_answer_items_valueDecimal
  _valueDecimal: Element
  valueInteger: query_resourceById_oneOf_110_item_items_answer_items_valueInteger
  _valueInteger: Element
  valueDate: query_resourceById_oneOf_110_item_items_answer_items_valueDate
  _valueDate: Element
  valueDateTime: query_resourceById_oneOf_110_item_items_answer_items_valueDateTime
  _valueDateTime: Element
  valueTime: query_resourceById_oneOf_110_item_items_answer_items_valueTime
  _valueTime: Element
  valueString: query_resourceById_oneOf_110_item_items_answer_items_valueString
  _valueString: Element
  valueUri: query_resourceById_oneOf_110_item_items_answer_items_valueUri
  _valueUri: Element
  valueAttachment: Attachment
  valueCoding: Coding
  valueQuantity: Quantity
  valueReference: Reference
  "Nested groups and/or questions found within this particular answer."
  item: [QuestionnaireResponse_Item]
}

"The answer (or one of the answers) provided by the respondent to the question."
scalar query_resourceById_oneOf_110_item_items_answer_items_valueDecimal

"The answer (or one of the answers) provided by the respondent to the question."
scalar query_resourceById_oneOf_110_item_items_answer_items_valueInteger

"The answer (or one of the answers) provided by the respondent to the question."
scalar query_resourceById_oneOf_110_item_items_answer_items_valueDate

"The answer (or one of the answers) provided by the respondent to the question."
scalar query_resourceById_oneOf_110_item_items_answer_items_valueDateTime

"The answer (or one of the answers) provided by the respondent to the question."
scalar query_resourceById_oneOf_110_item_items_answer_items_valueTime

"The answer (or one of the answers) provided by the respondent to the question."
scalar query_resourceById_oneOf_110_item_items_answer_items_valueString

"The answer (or one of the answers) provided by the respondent to the question."
scalar query_resourceById_oneOf_110_item_items_answer_items_valueUri

"Regulatory approval, clearance or licencing related to a regulated product, treatment, facility or activity that is cited in a guidance, regulation, rule or legislative act. An example is Market Authorization relating to a Medicinal Product."
type RegulatedAuthorization {
  resourceType: RegulatedAuthorization_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Business identifier for the authorization, typically assigned by the authorizing body."
  identifier: [Identifier]
  "The product type, treatment, facility or activity that is being authorized."
  subject: [Reference]
  type: CodeableConcept
  description: markdown
  _description: Element
  "The territory (e.g., country, jurisdiction etc.) in which the authorization has been granted."
  region: [CodeableConcept]
  status: CodeableConcept
  statusDate: dateTime
  _statusDate: Element
  validityPeriod: Period
  indication: CodeableReference
  intendedUse: CodeableConcept
  "The legal or regulatory framework against which this authorization is granted, or other reasons for it."
  basis: [CodeableConcept]
  holder: Reference
  regulator: Reference
  case: RegulatedAuthorization_Case
}

enum RegulatedAuthorization_const {
  RegulatedAuthorization
}

"Regulatory approval, clearance or licencing related to a regulated product, treatment, facility or activity that is cited in a guidance, regulation, rule or legislative act. An example is Market Authorization relating to a Medicinal Product."
type RegulatedAuthorization_Case {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  identifier: Identifier
  type: CodeableConcept
  status: CodeableConcept
  datePeriod: Period
  dateDateTime: query_resourceById_oneOf_111_case_dateDateTime
  _dateDateTime: Element
  "A regulatory submission from an organization to a regulator, as part of an assessing case. Multiple applications may occur over time, with more or different information to support or modify the submission or the authorization. The applications can be considered as steps within the longer running case or procedure for this authorization process."
  application: [RegulatedAuthorization_Case]
}

"Relevant date for this case."
scalar query_resourceById_oneOf_111_case_dateDateTime

"Information about a person that is involved in the care for a patient, but who is not the target of healthcare, nor has a formal responsibility in the care process."
type RelatedPerson {
  resourceType: RelatedPerson_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Identifier for a person within a particular scope."
  identifier: [Identifier]
  active: boolean
  _active: Element
  patient: Reference!
  "The nature of the relationship between a patient and the related person."
  relationship: [CodeableConcept]
  "A name associated with the person."
  name: [HumanName]
  "A contact detail for the person, e.g. a telephone number or an email address."
  telecom: [ContactPoint]
  gender: code
  _gender: Element
  birthDate: date
  _birthDate: Element
  "Address where the related person can be contacted or visited."
  address: [Address]
  "Image of the person."
  photo: [Attachment]
  period: Period
  "A language which may be used to communicate with about the patient's health."
  communication: [RelatedPerson_Communication]
}

enum RelatedPerson_const {
  RelatedPerson
}

"Information about a person that is involved in the care for a patient, but who is not the target of healthcare, nor has a formal responsibility in the care process."
type RelatedPerson_Communication {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  language: CodeableConcept!
  preferred: boolean
  _preferred: Element
}

"A group of related requests that can be used to capture intended activities that have inter-dependencies such as \\"give this medication after that one\\"."
type RequestGroup {
  resourceType: RequestGroup_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Allows a service to provide a unique, business identifier for the request."
  identifier: [Identifier]
  "A canonical URL referencing a FHIR-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this request."
  instantiatesCanonical: [canonical]
  "Extensions for instantiatesCanonical"
  _instantiatesCanonical: [Element]
  "A URL referencing an externally defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this request."
  instantiatesUri: [uri]
  "Extensions for instantiatesUri"
  _instantiatesUri: [Element]
  "A plan, proposal or order that is fulfilled in whole or in part by this request."
  basedOn: [Reference]
  "Completed or terminated request(s) whose function is taken by this new request."
  replaces: [Reference]
  groupIdentifier: Identifier
  status: code
  _status: Element
  intent: code
  _intent: Element
  priority: code
  _priority: Element
  code: CodeableConcept
  subject: Reference
  encounter: Reference
  authoredOn: dateTime
  _authoredOn: Element
  author: Reference
  "Describes the reason for the request group in coded or textual form."
  reasonCode: [CodeableConcept]
  "Indicates another resource whose existence justifies this request group."
  reasonReference: [Reference]
  "Provides a mechanism to communicate additional information about the response."
  note: [Annotation]
  "The actions, if any, produced by the evaluation of the artifact."
  action: [RequestGroup_Action]
}

enum RequestGroup_const {
  RequestGroup
}

"A group of related requests that can be used to capture intended activities that have inter-dependencies such as \\"give this medication after that one\\"."
type RequestGroup_Action {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  prefix: string
  _prefix: Element
  title: string
  _title: Element
  description: string
  _description: Element
  textEquivalent: string
  _textEquivalent: Element
  priority: code
  _priority: Element
  "A code that provides meaning for the action or action group. For example, a section may have a LOINC code for a section of a documentation template."
  code: [CodeableConcept]
  "Didactic or other informational resources associated with the action that can be provided to the CDS recipient. Information resources can include inline text commentary and links to web resources."
  documentation: [RelatedArtifact]
  "An expression that describes applicability criteria, or start/stop conditions for the action."
  condition: [RequestGroup_Condition]
  "A relationship to another action such as \\"before\\" or \\"30-60 minutes after start of\\"."
  relatedAction: [RequestGroup_RelatedAction]
  timingDateTime: query_resourceById_oneOf_113_action_items_timingDateTime
  _timingDateTime: Element
  timingAge: Age
  timingPeriod: Period
  timingDuration: Duration
  timingRange: Range
  timingTiming: Timing
  "The participant that should perform or be responsible for this action."
  participant: [Reference]
  type: CodeableConcept
  groupingBehavior: code
  _groupingBehavior: Element
  selectionBehavior: code
  _selectionBehavior: Element
  requiredBehavior: code
  _requiredBehavior: Element
  precheckBehavior: code
  _precheckBehavior: Element
  cardinalityBehavior: code
  _cardinalityBehavior: Element
  resource: Reference
  "Sub actions."
  action: [RequestGroup_Action]
}

"A group of related requests that can be used to capture intended activities that have inter-dependencies such as \\"give this medication after that one\\"."
type RequestGroup_Condition {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  kind: code
  _kind: Element
  expression: Expression
}

"A group of related requests that can be used to capture intended activities that have inter-dependencies such as \\"give this medication after that one\\"."
type RequestGroup_RelatedAction {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  actionId: id
  _actionId: Element
  relationship: code
  _relationship: Element
  offsetDuration: Duration
  offsetRange: Range
}

"An optional value describing when the action should be performed."
scalar query_resourceById_oneOf_113_action_items_timingDateTime

"The ResearchDefinition resource describes the conditional state (population and any exposures being compared within the population) and outcome (if specified) that the knowledge (evidence, assertion, recommendation) is about."
type ResearchDefinition {
  resourceType: ResearchDefinition_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  url: uri
  _url: Element
  "A formal identifier that is used to identify this research definition when it is represented in other formats, or referenced in a specification, model, design or an instance."
  identifier: [Identifier]
  version: string
  _version: Element
  name: string
  _name: Element
  title: string
  _title: Element
  shortTitle: string
  _shortTitle: Element
  subtitle: string
  _subtitle: Element
  status: code
  _status: Element
  experimental: boolean
  _experimental: Element
  subjectCodeableConcept: CodeableConcept
  subjectReference: Reference
  date: dateTime
  _date: Element
  publisher: string
  _publisher: Element
  "Contact details to assist a user in finding and communicating with the publisher."
  contact: [ContactDetail]
  description: markdown
  _description: Element
  "A human-readable string to clarify or explain concepts about the resource."
  comment: [string]
  "Extensions for comment"
  _comment: [Element]
  "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate research definition instances."
  useContext: [UsageContext]
  "A legal or geographic region in which the research definition is intended to be used."
  jurisdiction: [CodeableConcept]
  purpose: markdown
  _purpose: Element
  usage: string
  _usage: Element
  copyright: markdown
  _copyright: Element
  approvalDate: date
  _approvalDate: Element
  lastReviewDate: date
  _lastReviewDate: Element
  effectivePeriod: Period
  "Descriptive topics related to the content of the ResearchDefinition. Topics provide a high-level categorization grouping types of ResearchDefinitions that can be useful for filtering and searching."
  topic: [CodeableConcept]
  "An individiual or organization primarily involved in the creation and maintenance of the content."
  author: [ContactDetail]
  "An individual or organization primarily responsible for internal coherence of the content."
  editor: [ContactDetail]
  "An individual or organization primarily responsible for review of some aspect of the content."
  reviewer: [ContactDetail]
  "An individual or organization responsible for officially endorsing the content for use in some setting."
  endorser: [ContactDetail]
  "Related artifacts such as additional documentation, justification, or bibliographic references."
  relatedArtifact: [RelatedArtifact]
  "A reference to a Library resource containing the formal logic used by the ResearchDefinition."
  library: [canonical]
  population: Reference!
  exposure: Reference
  exposureAlternative: Reference
  outcome: Reference
}

enum ResearchDefinition_const {
  ResearchDefinition
}

"The ResearchElementDefinition resource describes a \\"PICO\\" element that knowledge (evidence, assertion, recommendation) is about."
type ResearchElementDefinition {
  resourceType: ResearchElementDefinition_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  url: uri
  _url: Element
  "A formal identifier that is used to identify this research element definition when it is represented in other formats, or referenced in a specification, model, design or an instance."
  identifier: [Identifier]
  version: string
  _version: Element
  name: string
  _name: Element
  title: string
  _title: Element
  shortTitle: string
  _shortTitle: Element
  subtitle: string
  _subtitle: Element
  status: code
  _status: Element
  experimental: boolean
  _experimental: Element
  subjectCodeableConcept: CodeableConcept
  subjectReference: Reference
  date: dateTime
  _date: Element
  publisher: string
  _publisher: Element
  "Contact details to assist a user in finding and communicating with the publisher."
  contact: [ContactDetail]
  description: markdown
  _description: Element
  "A human-readable string to clarify or explain concepts about the resource."
  comment: [string]
  "Extensions for comment"
  _comment: [Element]
  "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate research element definition instances."
  useContext: [UsageContext]
  "A legal or geographic region in which the research element definition is intended to be used."
  jurisdiction: [CodeableConcept]
  purpose: markdown
  _purpose: Element
  usage: string
  _usage: Element
  copyright: markdown
  _copyright: Element
  approvalDate: date
  _approvalDate: Element
  lastReviewDate: date
  _lastReviewDate: Element
  effectivePeriod: Period
  "Descriptive topics related to the content of the ResearchElementDefinition. Topics provide a high-level categorization grouping types of ResearchElementDefinitions that can be useful for filtering and searching."
  topic: [CodeableConcept]
  "An individiual or organization primarily involved in the creation and maintenance of the content."
  author: [ContactDetail]
  "An individual or organization primarily responsible for internal coherence of the content."
  editor: [ContactDetail]
  "An individual or organization primarily responsible for review of some aspect of the content."
  reviewer: [ContactDetail]
  "An individual or organization responsible for officially endorsing the content for use in some setting."
  endorser: [ContactDetail]
  "Related artifacts such as additional documentation, justification, or bibliographic references."
  relatedArtifact: [RelatedArtifact]
  "A reference to a Library resource containing the formal logic used by the ResearchElementDefinition."
  library: [canonical]
  type: code
  _type: Element
  variableType: code
  _variableType: Element
  "A characteristic that defines the members of the research element. Multiple characteristics are applied with \\"and\\" semantics."
  characteristic: [ResearchElementDefinition_Characteristic]!
}

enum ResearchElementDefinition_const {
  ResearchElementDefinition
}

"The ResearchElementDefinition resource describes a \\"PICO\\" element that knowledge (evidence, assertion, recommendation) is about."
type ResearchElementDefinition_Characteristic {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  definitionCodeableConcept: CodeableConcept
  definitionCanonical: query_resourceById_oneOf_115_characteristic_items_definitionCanonical
  _definitionCanonical: Element
  definitionExpression: Expression
  definitionDataRequirement: DataRequirement
  "Use UsageContext to define the members of the population, such as Age Ranges, Genders, Settings."
  usageContext: [UsageContext]
  exclude: boolean
  _exclude: Element
  unitOfMeasure: CodeableConcept
  studyEffectiveDescription: string
  _studyEffectiveDescription: Element
  studyEffectiveDateTime: query_resourceById_oneOf_115_characteristic_items_studyEffectiveDateTime
  _studyEffectiveDateTime: Element
  studyEffectivePeriod: Period
  studyEffectiveDuration: Duration
  studyEffectiveTiming: Timing
  studyEffectiveTimeFromStart: Duration
  studyEffectiveGroupMeasure: code
  _studyEffectiveGroupMeasure: Element
  participantEffectiveDescription: string
  _participantEffectiveDescription: Element
  participantEffectiveDateTime: query_resourceById_oneOf_115_characteristic_items_participantEffectiveDateTime
  _participantEffectiveDateTime: Element
  participantEffectivePeriod: Period
  participantEffectiveDuration: Duration
  participantEffectiveTiming: Timing
  participantEffectiveTimeFromStart: Duration
  participantEffectiveGroupMeasure: code
  _participantEffectiveGroupMeasure: Element
}

"Define members of the research element using Codes (such as condition, medication, or observation), Expressions ( using an expression language such as FHIRPath or CQL) or DataRequirements (such as Diabetes diagnosis onset in the last year)."
scalar query_resourceById_oneOf_115_characteristic_items_definitionCanonical

"Indicates what effective period the study covers."
scalar query_resourceById_oneOf_115_characteristic_items_studyEffectiveDateTime

"Indicates what effective period the study covers."
scalar query_resourceById_oneOf_115_characteristic_items_participantEffectiveDateTime

"A process where a researcher or organization plans and then executes a series of steps intended to increase the field of healthcare-related knowledge.  This includes studies of safety, efficacy, comparative effectiveness and other information about medications, devices, therapies and other interventional and investigative techniques.  A ResearchStudy involves the gathering of information about human or animal subjects."
type ResearchStudy {
  resourceType: ResearchStudy_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Identifiers assigned to this research study by the sponsor or other systems."
  identifier: [Identifier]
  title: string
  _title: Element
  "The set of steps expected to be performed as part of the execution of the study."
  protocol: [Reference]
  "A larger research study of which this particular study is a component or step."
  partOf: [Reference]
  status: code
  _status: Element
  primaryPurposeType: CodeableConcept
  phase: CodeableConcept
  "Codes categorizing the type of study such as investigational vs. observational, type of blinding, type of randomization, safety vs. efficacy, etc."
  category: [CodeableConcept]
  "The medication(s), food(s), therapy(ies), device(s) or other concerns or interventions that the study is seeking to gain more information about."
  focus: [CodeableConcept]
  "The condition that is the focus of the study.  For example, In a study to examine risk factors for Lupus, might have as an inclusion criterion \\"healthy volunteer\\", but the target condition code would be a Lupus SNOMED code."
  condition: [CodeableConcept]
  "Contact details to assist a user in learning more about or engaging with the study."
  contact: [ContactDetail]
  "Citations, references and other related documents."
  relatedArtifact: [RelatedArtifact]
  "Key terms to aid in searching for or filtering the study."
  keyword: [CodeableConcept]
  "Indicates a country, state or other region where the study is taking place."
  location: [CodeableConcept]
  description: markdown
  _description: Element
  "Reference to a Group that defines the criteria for and quantity of subjects participating in the study.  E.g. \\" 200 female Europeans between the ages of 20 and 45 with early onset diabetes\\"."
  enrollment: [Reference]
  period: Period
  sponsor: Reference
  principalInvestigator: Reference
  "A facility in which study activities are conducted."
  site: [Reference]
  reasonStopped: CodeableConcept
  "Comments made about the study by the performer, subject or other participants."
  note: [Annotation]
  "Describes an expected sequence of events for one of the participants of a study.  E.g. Exposure to drug A, wash-out, exposure to drug B, wash-out, follow-up."
  arm: [ResearchStudy_Arm]
  "A goal that the study is aiming to achieve in terms of a scientific question to be answered by the analysis of data collected during the study."
  objective: [ResearchStudy_Objective]
}

enum ResearchStudy_const {
  ResearchStudy
}

"A process where a researcher or organization plans and then executes a series of steps intended to increase the field of healthcare-related knowledge.  This includes studies of safety, efficacy, comparative effectiveness and other information about medications, devices, therapies and other interventional and investigative techniques.  A ResearchStudy involves the gathering of information about human or animal subjects."
type ResearchStudy_Arm {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  name: string
  _name: Element
  type: CodeableConcept
  description: string
  _description: Element
}

"A process where a researcher or organization plans and then executes a series of steps intended to increase the field of healthcare-related knowledge.  This includes studies of safety, efficacy, comparative effectiveness and other information about medications, devices, therapies and other interventional and investigative techniques.  A ResearchStudy involves the gathering of information about human or animal subjects."
type ResearchStudy_Objective {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  name: string
  _name: Element
  type: CodeableConcept
}

"A physical entity which is the primary unit of operational and/or administrative interest in a study."
type ResearchSubject {
  resourceType: ResearchSubject_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Identifiers assigned to this research subject for a study."
  identifier: [Identifier]
  status: code
  _status: Element
  period: Period
  study: Reference!
  individual: Reference!
  assignedArm: string
  _assignedArm: Element
  actualArm: string
  _actualArm: Element
  consent: Reference
}

enum ResearchSubject_const {
  ResearchSubject
}

"An assessment of the likely outcome(s) for a patient or other subject as well as the likelihood of each outcome."
type RiskAssessment {
  resourceType: RiskAssessment_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Business identifier assigned to the risk assessment."
  identifier: [Identifier]
  basedOn: Reference
  parent: Reference
  status: code
  _status: Element
  method: CodeableConcept
  code: CodeableConcept
  subject: Reference!
  encounter: Reference
  occurrenceDateTime: query_resourceById_oneOf_118_occurrenceDateTime
  _occurrenceDateTime: Element
  occurrencePeriod: Period
  condition: Reference
  performer: Reference
  "The reason the risk assessment was performed."
  reasonCode: [CodeableConcept]
  "Resources supporting the reason the risk assessment was performed."
  reasonReference: [Reference]
  "Indicates the source data considered as part of the assessment (for example, FamilyHistory, Observations, Procedures, Conditions, etc.)."
  basis: [Reference]
  "Describes the expected outcome for the subject."
  prediction: [RiskAssessment_Prediction]
  mitigation: string
  _mitigation: Element
  "Additional comments about the risk assessment."
  note: [Annotation]
}

enum RiskAssessment_const {
  RiskAssessment
}

"The date (and possibly time) the risk assessment was performed."
scalar query_resourceById_oneOf_118_occurrenceDateTime

"An assessment of the likely outcome(s) for a patient or other subject as well as the likelihood of each outcome."
type RiskAssessment_Prediction {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  outcome: CodeableConcept
  probabilityDecimal: query_resourceById_oneOf_118_prediction_items_probabilityDecimal
  _probabilityDecimal: Element
  probabilityRange: Range
  qualitativeRisk: CodeableConcept
  relativeRisk: decimal
  _relativeRisk: Element
  whenPeriod: Period
  whenRange: Range
  rationale: string
  _rationale: Element
}

"Indicates how likely the outcome is (in the specified timeframe)."
scalar query_resourceById_oneOf_118_prediction_items_probabilityDecimal

"A container for slots of time that may be available for booking appointments."
type Schedule {
  resourceType: Schedule_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "External Ids for this item."
  identifier: [Identifier]
  active: boolean
  _active: Element
  "A broad categorization of the service that is to be performed during this appointment."
  serviceCategory: [CodeableConcept]
  "The specific service that is to be performed during this appointment."
  serviceType: [CodeableConcept]
  "The specialty of a practitioner that would be required to perform the service requested in this appointment."
  specialty: [CodeableConcept]
  "Slots that reference this schedule resource provide the availability details to these referenced resource(s)."
  actor: [Reference]!
  planningHorizon: Period
  comment: string
  _comment: Element
}

enum Schedule_const {
  Schedule
}

"A search parameter that defines a named search item that can be used to search/filter on a resource."
type SearchParameter {
  resourceType: SearchParameter_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  url: uri
  _url: Element
  version: string
  _version: Element
  name: string
  _name: Element
  derivedFrom: canonical
  status: code
  _status: Element
  experimental: boolean
  _experimental: Element
  date: dateTime
  _date: Element
  publisher: string
  _publisher: Element
  "Contact details to assist a user in finding and communicating with the publisher."
  contact: [ContactDetail]
  description: markdown
  _description: Element
  "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate search parameter instances."
  useContext: [UsageContext]
  "A legal or geographic region in which the search parameter is intended to be used."
  jurisdiction: [CodeableConcept]
  purpose: markdown
  _purpose: Element
  code: code
  _code: Element
  "The base resource type(s) that this search parameter can be used against."
  base: [code]
  "Extensions for base"
  _base: [Element]
  type: code
  _type: Element
  expression: string
  _expression: Element
  xpath: string
  _xpath: Element
  xpathUsage: code
  _xpathUsage: Element
  "Types of resource (if a resource is referenced)."
  target: [code]
  "Extensions for target"
  _target: [Element]
  multipleOr: boolean
  _multipleOr: Element
  multipleAnd: boolean
  _multipleAnd: Element
  "Comparators supported for the search parameter."
  comparator: [code]
  "Extensions for comparator"
  _comparator: [Element]
  "A modifier supported for the search parameter."
  modifier: [code]
  "Extensions for modifier"
  _modifier: [Element]
  "Contains the names of any search parameters which may be chained to the containing search parameter. Chained parameters may be added to search parameters of type reference and specify that resources will only be returned if they contain a reference to a resource which matches the chained parameter value. Values for this field should be drawn from SearchParameter.code for a parameter on the target resource type."
  chain: [string]
  "Extensions for chain"
  _chain: [Element]
  "Used to define the parts of a composite search parameter."
  component: [SearchParameter_Component]
}

enum SearchParameter_const {
  SearchParameter
}

"A search parameter that defines a named search item that can be used to search/filter on a resource."
type SearchParameter_Component {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  definition: canonical!
  expression: string
  _expression: Element
}

"A record of a request for service such as diagnostic investigations, treatments, or operations to be performed."
type ServiceRequest {
  resourceType: ServiceRequest_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Identifiers assigned to this order instance by the orderer and/or the receiver and/or order fulfiller."
  identifier: [Identifier]
  "The URL pointing to a FHIR-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this ServiceRequest."
  instantiatesCanonical: [canonical]
  "The URL pointing to an externally maintained protocol, guideline, orderset or other definition that is adhered to in whole or in part by this ServiceRequest."
  instantiatesUri: [uri]
  "Extensions for instantiatesUri"
  _instantiatesUri: [Element]
  "Plan/proposal/order fulfilled by this request."
  basedOn: [Reference]
  "The request takes the place of the referenced completed or terminated request(s)."
  replaces: [Reference]
  requisition: Identifier
  status: code
  _status: Element
  intent: code
  _intent: Element
  "A code that classifies the service for searching, sorting and display purposes (e.g. \\"Surgical Procedure\\")."
  category: [CodeableConcept]
  priority: code
  _priority: Element
  doNotPerform: boolean
  _doNotPerform: Element
  code: CodeableConcept
  "Additional details and instructions about the how the services are to be delivered.   For example, and order for a urinary catheter may have an order detail for an external or indwelling catheter, or an order for a bandage may require additional instructions specifying how the bandage should be applied."
  orderDetail: [CodeableConcept]
  quantityQuantity: Quantity
  quantityRatio: Ratio
  quantityRange: Range
  subject: Reference!
  encounter: Reference
  occurrenceDateTime: query_resourceById_oneOf_121_occurrenceDateTime
  _occurrenceDateTime: Element
  occurrencePeriod: Period
  occurrenceTiming: Timing
  "If a CodeableConcept is present, it indicates the pre-condition for performing the service.  For example \\"pain\\", \\"on flare-up\\", etc."
  asNeededBoolean: Boolean
  _asNeededBoolean: Element
  asNeededCodeableConcept: CodeableConcept
  authoredOn: dateTime
  _authoredOn: Element
  requester: Reference
  performerType: CodeableConcept
  "The desired performer for doing the requested service.  For example, the surgeon, dermatopathologist, endoscopist, etc."
  performer: [Reference]
  "The preferred location(s) where the procedure should actually happen in coded or free text form. E.g. at home or nursing day care center."
  locationCode: [CodeableConcept]
  "A reference to the the preferred location(s) where the procedure should actually happen. E.g. at home or nursing day care center."
  locationReference: [Reference]
  "An explanation or justification for why this service is being requested in coded or textual form.   This is often for billing purposes.  May relate to the resources referred to in \`supportingInfo\`."
  reasonCode: [CodeableConcept]
  "Indicates another resource that provides a justification for why this service is being requested.   May relate to the resources referred to in \`supportingInfo\`."
  reasonReference: [Reference]
  "Insurance plans, coverage extensions, pre-authorizations and/or pre-determinations that may be needed for delivering the requested service."
  insurance: [Reference]
  "Additional clinical information about the patient or specimen that may influence the services or their interpretations.     This information includes diagnosis, clinical findings and other observations.  In laboratory ordering these are typically referred to as \\"ask at order entry questions (AOEs)\\".  This includes observations explicitly requested by the producer (filler) to provide context or supporting information needed to complete the order. For example,  reporting the amount of inspired oxygen for blood gas measurements."
  supportingInfo: [Reference]
  "One or more specimens that the laboratory procedure will use."
  specimen: [Reference]
  "Anatomic location where the procedure should be performed. This is the target site."
  bodySite: [CodeableConcept]
  "Any other notes and comments made about the service request. For example, internal billing notes."
  note: [Annotation]
  patientInstruction: string
  _patientInstruction: Element
  "Key events in the history of the request."
  relevantHistory: [Reference]
}

enum ServiceRequest_const {
  ServiceRequest
}

"The date/time at which the requested service should occur."
scalar query_resourceById_oneOf_121_occurrenceDateTime

"A slot of time on a schedule that may be available for booking appointments."
type Slot {
  resourceType: Slot_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "External Ids for this item."
  identifier: [Identifier]
  "A broad categorization of the service that is to be performed during this appointment."
  serviceCategory: [CodeableConcept]
  "The type of appointments that can be booked into this slot (ideally this would be an identifiable service - which is at a location, rather than the location itself). If provided then this overrides the value provided on the availability resource."
  serviceType: [CodeableConcept]
  "The specialty of a practitioner that would be required to perform the service requested in this appointment."
  specialty: [CodeableConcept]
  appointmentType: CodeableConcept
  schedule: Reference!
  status: code
  _status: Element
  start: instant
  _start: Element
  end: instant
  _end: Element
  overbooked: boolean
  _overbooked: Element
  comment: string
  _comment: Element
}

enum Slot_const {
  Slot
}

"A sample to be used for analysis."
type Specimen {
  resourceType: Specimen_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Id for specimen."
  identifier: [Identifier]
  accessionIdentifier: Identifier
  status: code
  _status: Element
  type: CodeableConcept
  subject: Reference
  receivedTime: dateTime
  _receivedTime: Element
  "Reference to the parent (source) specimen which is used when the specimen was either derived from or a component of another specimen."
  parent: [Reference]
  "Details concerning a service request that required a specimen to be collected."
  request: [Reference]
  collection: Specimen_Collection
  "Details concerning processing and processing steps for the specimen."
  processing: [Specimen_Processing]
  "The container holding the specimen.  The recursive nature of containers; i.e. blood in tube in tray in rack is not addressed here."
  container: [Specimen_Container]
  "A mode or state of being that describes the nature of the specimen."
  condition: [CodeableConcept]
  "To communicate any details or issues about the specimen or during the specimen collection. (for example: broken vial, sent with patient, frozen)."
  note: [Annotation]
}

enum Specimen_const {
  Specimen
}

"A sample to be used for analysis."
type Specimen_Collection {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  collector: Reference
  collectedDateTime: query_resourceById_oneOf_123_collection_collectedDateTime
  _collectedDateTime: Element
  collectedPeriod: Period
  duration: Duration
  quantity: Quantity
  method: CodeableConcept
  bodySite: CodeableConcept
  fastingStatusCodeableConcept: CodeableConcept
  fastingStatusDuration: Duration
}

"Time when specimen was collected from subject - the physiologically relevant time."
scalar query_resourceById_oneOf_123_collection_collectedDateTime

"A sample to be used for analysis."
type Specimen_Processing {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  description: string
  _description: Element
  procedure: CodeableConcept
  "Material used in the processing step."
  additive: [Reference]
  timeDateTime: query_resourceById_oneOf_123_processing_items_timeDateTime
  _timeDateTime: Element
  timePeriod: Period
}

"A record of the time or period when the specimen processing occurred.  For example the time of sample fixation or the period of time the sample was in formalin."
scalar query_resourceById_oneOf_123_processing_items_timeDateTime

"A sample to be used for analysis."
type Specimen_Container {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Id for container. There may be multiple; a manufacturer's bar code, lab assigned identifier, etc. The container ID may differ from the specimen id in some circumstances."
  identifier: [Identifier]
  description: string
  _description: Element
  type: CodeableConcept
  capacity: Quantity
  specimenQuantity: Quantity
  additiveCodeableConcept: CodeableConcept
  additiveReference: Reference
}

"A kind of specimen with associated set of requirements."
type SpecimenDefinition {
  resourceType: SpecimenDefinition_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  identifier: Identifier
  typeCollected: CodeableConcept
  "Preparation of the patient for specimen collection."
  patientPreparation: [CodeableConcept]
  timeAspect: string
  _timeAspect: Element
  "The action to be performed for collecting the specimen."
  collection: [CodeableConcept]
  "Specimen conditioned in a container as expected by the testing laboratory."
  typeTested: [SpecimenDefinition_TypeTested]
}

enum SpecimenDefinition_const {
  SpecimenDefinition
}

"A kind of specimen with associated set of requirements."
type SpecimenDefinition_TypeTested {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  isDerived: boolean
  _isDerived: Element
  type: CodeableConcept
  preference: code
  _preference: Element
  container: SpecimenDefinition_Container
  requirement: string
  _requirement: Element
  retentionTime: Duration
  "Criterion for rejection of the specimen in its container by the laboratory."
  rejectionCriterion: [CodeableConcept]
  "Set of instructions for preservation/transport of the specimen at a defined temperature interval, prior the testing process."
  handling: [SpecimenDefinition_Handling]
}

"A kind of specimen with associated set of requirements."
type SpecimenDefinition_Container {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  material: CodeableConcept
  type: CodeableConcept
  cap: CodeableConcept
  description: string
  _description: Element
  capacity: Quantity
  minimumVolumeQuantity: Quantity
  minimumVolumeString: query_resourceById_oneOf_124_typeTested_items_container_minimumVolumeString
  _minimumVolumeString: Element
  "Substance introduced in the kind of container to preserve, maintain or enhance the specimen. Examples: Formalin, Citrate, EDTA."
  additive: [SpecimenDefinition_Additive]
  preparation: string
  _preparation: Element
}

"The minimum volume to be conditioned in the container."
scalar query_resourceById_oneOf_124_typeTested_items_container_minimumVolumeString

"A kind of specimen with associated set of requirements."
type SpecimenDefinition_Additive {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  additiveCodeableConcept: CodeableConcept
  additiveReference: Reference
}

"A kind of specimen with associated set of requirements."
type SpecimenDefinition_Handling {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  temperatureQualifier: CodeableConcept
  temperatureRange: Range
  maxDuration: Duration
  instruction: string
  _instruction: Element
}

"A definition of a FHIR structure. This resource is used to describe the underlying resources, data types defined in FHIR, and also for describing extensions and constraints on resources and data types."
type StructureDefinition {
  resourceType: StructureDefinition_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  url: uri
  _url: Element
  "A formal identifier that is used to identify this structure definition when it is represented in other formats, or referenced in a specification, model, design or an instance."
  identifier: [Identifier]
  version: string
  _version: Element
  name: string
  _name: Element
  title: string
  _title: Element
  status: code
  _status: Element
  experimental: boolean
  _experimental: Element
  date: dateTime
  _date: Element
  publisher: string
  _publisher: Element
  "Contact details to assist a user in finding and communicating with the publisher."
  contact: [ContactDetail]
  description: markdown
  _description: Element
  "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate structure definition instances."
  useContext: [UsageContext]
  "A legal or geographic region in which the structure definition is intended to be used."
  jurisdiction: [CodeableConcept]
  purpose: markdown
  _purpose: Element
  copyright: markdown
  _copyright: Element
  "A set of key words or terms from external terminologies that may be used to assist with indexing and searching of templates nby describing the use of this structure definition, or the content it describes."
  keyword: [Coding]
  fhirVersion: code
  _fhirVersion: Element
  "An external specification that the content is mapped to."
  mapping: [StructureDefinition_Mapping]
  kind: code
  _kind: Element
  abstract: boolean
  _abstract: Element
  "Identifies the types of resource or data type elements to which the extension can be applied."
  context: [StructureDefinition_Context]
  "A set of rules as FHIRPath Invariants about when the extension can be used (e.g. co-occurrence variants for the extension). All the rules must be true."
  contextInvariant: [string]
  "Extensions for contextInvariant"
  _contextInvariant: [Element]
  type: uri
  _type: Element
  baseDefinition: canonical
  derivation: code
  _derivation: Element
  snapshot: StructureDefinition_Snapshot
  differential: StructureDefinition_Differential
}

enum StructureDefinition_const {
  StructureDefinition
}

"A definition of a FHIR structure. This resource is used to describe the underlying resources, data types defined in FHIR, and also for describing extensions and constraints on resources and data types."
type StructureDefinition_Mapping {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  identity: id
  _identity: Element
  uri: uri
  _uri: Element
  name: string
  _name: Element
  comment: string
  _comment: Element
}

"A definition of a FHIR structure. This resource is used to describe the underlying resources, data types defined in FHIR, and also for describing extensions and constraints on resources and data types."
type StructureDefinition_Context {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: code
  _type: Element
  expression: string
  _expression: Element
}

"A definition of a FHIR structure. This resource is used to describe the underlying resources, data types defined in FHIR, and also for describing extensions and constraints on resources and data types."
type StructureDefinition_Snapshot {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Captures constraints on each element within the resource."
  element: [ElementDefinition]!
}

"Captures constraints on each element within the resource, profile, or extension."
type ElementDefinition {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  path: string
  _path: Element
  "Codes that define how this element is represented in instances, when the deviation varies from the normal case."
  representation: [query_resourceById_oneOf_125_snapshot_element_items_representation_items]
  "Extensions for representation"
  _representation: [Element]
  sliceName: string
  _sliceName: Element
  sliceIsConstraining: boolean
  _sliceIsConstraining: Element
  label: string
  _label: Element
  "A code that has the same meaning as the element in a particular terminology."
  code: [Coding]
  slicing: ElementDefinition_Slicing
  short: string
  _short: Element
  definition: markdown
  _definition: Element
  comment: markdown
  _comment: Element
  requirements: markdown
  _requirements: Element
  "Identifies additional names by which this element might also be known."
  alias: [string]
  "Extensions for alias"
  _alias: [Element]
  min: unsignedInt
  _min: Element
  max: string
  _max: Element
  base: ElementDefinition_Base
  contentReference: uri
  _contentReference: Element
  "The data type or resource that the value of this element is permitted to be."
  type: [ElementDefinition_Type]
  defaultValueBase64Binary: query_resourceById_oneOf_125_snapshot_element_items_defaultValueBase64Binary
  _defaultValueBase64Binary: Element
  "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
  defaultValueBoolean: Boolean
  _defaultValueBoolean: Element
  defaultValueCanonical: query_resourceById_oneOf_125_snapshot_element_items_defaultValueCanonical
  _defaultValueCanonical: Element
  defaultValueCode: query_resourceById_oneOf_125_snapshot_element_items_defaultValueCode
  _defaultValueCode: Element
  defaultValueDate: query_resourceById_oneOf_125_snapshot_element_items_defaultValueDate
  _defaultValueDate: Element
  defaultValueDateTime: query_resourceById_oneOf_125_snapshot_element_items_defaultValueDateTime
  _defaultValueDateTime: Element
  defaultValueDecimal: query_resourceById_oneOf_125_snapshot_element_items_defaultValueDecimal
  _defaultValueDecimal: Element
  defaultValueId: query_resourceById_oneOf_125_snapshot_element_items_defaultValueId
  _defaultValueId: Element
  defaultValueInstant: query_resourceById_oneOf_125_snapshot_element_items_defaultValueInstant
  _defaultValueInstant: Element
  defaultValueInteger: query_resourceById_oneOf_125_snapshot_element_items_defaultValueInteger
  _defaultValueInteger: Element
  defaultValueMarkdown: query_resourceById_oneOf_125_snapshot_element_items_defaultValueMarkdown
  _defaultValueMarkdown: Element
  defaultValueOid: query_resourceById_oneOf_125_snapshot_element_items_defaultValueOid
  _defaultValueOid: Element
  defaultValuePositiveInt: query_resourceById_oneOf_125_snapshot_element_items_defaultValuePositiveInt
  _defaultValuePositiveInt: Element
  defaultValueString: query_resourceById_oneOf_125_snapshot_element_items_defaultValueString
  _defaultValueString: Element
  defaultValueTime: query_resourceById_oneOf_125_snapshot_element_items_defaultValueTime
  _defaultValueTime: Element
  defaultValueUnsignedInt: query_resourceById_oneOf_125_snapshot_element_items_defaultValueUnsignedInt
  _defaultValueUnsignedInt: Element
  defaultValueUri: query_resourceById_oneOf_125_snapshot_element_items_defaultValueUri
  _defaultValueUri: Element
  defaultValueUrl: query_resourceById_oneOf_125_snapshot_element_items_defaultValueUrl
  _defaultValueUrl: Element
  defaultValueUuid: query_resourceById_oneOf_125_snapshot_element_items_defaultValueUuid
  _defaultValueUuid: Element
  defaultValueAddress: Address
  defaultValueAge: Age
  defaultValueAnnotation: Annotation
  defaultValueAttachment: Attachment
  defaultValueCodeableConcept: CodeableConcept
  defaultValueCodeableReference: CodeableReference
  defaultValueCoding: Coding
  defaultValueContactPoint: ContactPoint
  defaultValueCount: Count
  defaultValueDistance: Distance
  defaultValueDuration: Duration
  defaultValueHumanName: HumanName
  defaultValueIdentifier: Identifier
  defaultValueMoney: Money
  defaultValuePeriod: Period
  defaultValueQuantity: Quantity
  defaultValueRange: Range
  defaultValueRatio: Ratio
  defaultValueRatioRange: RatioRange
  defaultValueReference: Reference
  defaultValueSampledData: SampledData
  defaultValueSignature: Signature
  defaultValueTiming: Timing
  defaultValueContactDetail: ContactDetail
  defaultValueContributor: Contributor
  defaultValueDataRequirement: DataRequirement
  defaultValueExpression: Expression
  defaultValueParameterDefinition: ParameterDefinition
  defaultValueRelatedArtifact: RelatedArtifact
  defaultValueTriggerDefinition: TriggerDefinition
  defaultValueUsageContext: UsageContext
  defaultValueDosage: Dosage
  meaningWhenMissing: markdown
  _meaningWhenMissing: Element
  orderMeaning: string
  _orderMeaning: Element
  fixedBase64Binary: query_resourceById_oneOf_125_snapshot_element_items_fixedBase64Binary
  _fixedBase64Binary: Element
  "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
  fixedBoolean: Boolean
  _fixedBoolean: Element
  fixedCanonical: query_resourceById_oneOf_125_snapshot_element_items_fixedCanonical
  _fixedCanonical: Element
  fixedCode: query_resourceById_oneOf_125_snapshot_element_items_fixedCode
  _fixedCode: Element
  fixedDate: query_resourceById_oneOf_125_snapshot_element_items_fixedDate
  _fixedDate: Element
  fixedDateTime: query_resourceById_oneOf_125_snapshot_element_items_fixedDateTime
  _fixedDateTime: Element
  fixedDecimal: query_resourceById_oneOf_125_snapshot_element_items_fixedDecimal
  _fixedDecimal: Element
  fixedId: query_resourceById_oneOf_125_snapshot_element_items_fixedId
  _fixedId: Element
  fixedInstant: query_resourceById_oneOf_125_snapshot_element_items_fixedInstant
  _fixedInstant: Element
  fixedInteger: query_resourceById_oneOf_125_snapshot_element_items_fixedInteger
  _fixedInteger: Element
  fixedMarkdown: query_resourceById_oneOf_125_snapshot_element_items_fixedMarkdown
  _fixedMarkdown: Element
  fixedOid: query_resourceById_oneOf_125_snapshot_element_items_fixedOid
  _fixedOid: Element
  fixedPositiveInt: query_resourceById_oneOf_125_snapshot_element_items_fixedPositiveInt
  _fixedPositiveInt: Element
  fixedString: query_resourceById_oneOf_125_snapshot_element_items_fixedString
  _fixedString: Element
  fixedTime: query_resourceById_oneOf_125_snapshot_element_items_fixedTime
  _fixedTime: Element
  fixedUnsignedInt: query_resourceById_oneOf_125_snapshot_element_items_fixedUnsignedInt
  _fixedUnsignedInt: Element
  fixedUri: query_resourceById_oneOf_125_snapshot_element_items_fixedUri
  _fixedUri: Element
  fixedUrl: query_resourceById_oneOf_125_snapshot_element_items_fixedUrl
  _fixedUrl: Element
  fixedUuid: query_resourceById_oneOf_125_snapshot_element_items_fixedUuid
  _fixedUuid: Element
  fixedAddress: Address
  fixedAge: Age
  fixedAnnotation: Annotation
  fixedAttachment: Attachment
  fixedCodeableConcept: CodeableConcept
  fixedCodeableReference: CodeableReference
  fixedCoding: Coding
  fixedContactPoint: ContactPoint
  fixedCount: Count
  fixedDistance: Distance
  fixedDuration: Duration
  fixedHumanName: HumanName
  fixedIdentifier: Identifier
  fixedMoney: Money
  fixedPeriod: Period
  fixedQuantity: Quantity
  fixedRange: Range
  fixedRatio: Ratio
  fixedRatioRange: RatioRange
  fixedReference: Reference
  fixedSampledData: SampledData
  fixedSignature: Signature
  fixedTiming: Timing
  fixedContactDetail: ContactDetail
  fixedContributor: Contributor
  fixedDataRequirement: DataRequirement
  fixedExpression: Expression
  fixedParameterDefinition: ParameterDefinition
  fixedRelatedArtifact: RelatedArtifact
  fixedTriggerDefinition: TriggerDefinition
  fixedUsageContext: UsageContext
  fixedDosage: Dosage
  patternBase64Binary: query_resourceById_oneOf_125_snapshot_element_items_patternBase64Binary
  _patternBase64Binary: Element
  "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \\n\\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\\n\\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\\n\\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\\n\\n1. If primitive: it must match exactly the pattern value\\n2. If a complex object: it must match (recursively) the pattern value\\n3. If an array: it must match (recursively) the pattern value."
  patternBoolean: Boolean
  _patternBoolean: Element
  patternCanonical: query_resourceById_oneOf_125_snapshot_element_items_patternCanonical
  _patternCanonical: Element
  patternCode: query_resourceById_oneOf_125_snapshot_element_items_patternCode
  _patternCode: Element
  patternDate: query_resourceById_oneOf_125_snapshot_element_items_patternDate
  _patternDate: Element
  patternDateTime: query_resourceById_oneOf_125_snapshot_element_items_patternDateTime
  _patternDateTime: Element
  patternDecimal: query_resourceById_oneOf_125_snapshot_element_items_patternDecimal
  _patternDecimal: Element
  patternId: query_resourceById_oneOf_125_snapshot_element_items_patternId
  _patternId: Element
  patternInstant: query_resourceById_oneOf_125_snapshot_element_items_patternInstant
  _patternInstant: Element
  patternInteger: query_resourceById_oneOf_125_snapshot_element_items_patternInteger
  _patternInteger: Element
  patternMarkdown: query_resourceById_oneOf_125_snapshot_element_items_patternMarkdown
  _patternMarkdown: Element
  patternOid: query_resourceById_oneOf_125_snapshot_element_items_patternOid
  _patternOid: Element
  patternPositiveInt: query_resourceById_oneOf_125_snapshot_element_items_patternPositiveInt
  _patternPositiveInt: Element
  patternString: query_resourceById_oneOf_125_snapshot_element_items_patternString
  _patternString: Element
  patternTime: query_resourceById_oneOf_125_snapshot_element_items_patternTime
  _patternTime: Element
  patternUnsignedInt: query_resourceById_oneOf_125_snapshot_element_items_patternUnsignedInt
  _patternUnsignedInt: Element
  patternUri: query_resourceById_oneOf_125_snapshot_element_items_patternUri
  _patternUri: Element
  patternUrl: query_resourceById_oneOf_125_snapshot_element_items_patternUrl
  _patternUrl: Element
  patternUuid: query_resourceById_oneOf_125_snapshot_element_items_patternUuid
  _patternUuid: Element
  patternAddress: Address
  patternAge: Age
  patternAnnotation: Annotation
  patternAttachment: Attachment
  patternCodeableConcept: CodeableConcept
  patternCodeableReference: CodeableReference
  patternCoding: Coding
  patternContactPoint: ContactPoint
  patternCount: Count
  patternDistance: Distance
  patternDuration: Duration
  patternHumanName: HumanName
  patternIdentifier: Identifier
  patternMoney: Money
  patternPeriod: Period
  patternQuantity: Quantity
  patternRange: Range
  patternRatio: Ratio
  patternRatioRange: RatioRange
  patternReference: Reference
  patternSampledData: SampledData
  patternSignature: Signature
  patternTiming: Timing
  patternContactDetail: ContactDetail
  patternContributor: Contributor
  patternDataRequirement: DataRequirement
  patternExpression: Expression
  patternParameterDefinition: ParameterDefinition
  patternRelatedArtifact: RelatedArtifact
  patternTriggerDefinition: TriggerDefinition
  patternUsageContext: UsageContext
  patternDosage: Dosage
  "A sample value for this element demonstrating the type of information that would typically be found in the element."
  example: [ElementDefinition_Example]
  minValueDate: query_resourceById_oneOf_125_snapshot_element_items_minValueDate
  _minValueDate: Element
  minValueDateTime: query_resourceById_oneOf_125_snapshot_element_items_minValueDateTime
  _minValueDateTime: Element
  minValueInstant: query_resourceById_oneOf_125_snapshot_element_items_minValueInstant
  _minValueInstant: Element
  minValueTime: query_resourceById_oneOf_125_snapshot_element_items_minValueTime
  _minValueTime: Element
  minValueDecimal: query_resourceById_oneOf_125_snapshot_element_items_minValueDecimal
  _minValueDecimal: Element
  minValueInteger: query_resourceById_oneOf_125_snapshot_element_items_minValueInteger
  _minValueInteger: Element
  minValuePositiveInt: query_resourceById_oneOf_125_snapshot_element_items_minValuePositiveInt
  _minValuePositiveInt: Element
  minValueUnsignedInt: query_resourceById_oneOf_125_snapshot_element_items_minValueUnsignedInt
  _minValueUnsignedInt: Element
  minValueQuantity: Quantity
  maxValueDate: query_resourceById_oneOf_125_snapshot_element_items_maxValueDate
  _maxValueDate: Element
  maxValueDateTime: query_resourceById_oneOf_125_snapshot_element_items_maxValueDateTime
  _maxValueDateTime: Element
  maxValueInstant: query_resourceById_oneOf_125_snapshot_element_items_maxValueInstant
  _maxValueInstant: Element
  maxValueTime: query_resourceById_oneOf_125_snapshot_element_items_maxValueTime
  _maxValueTime: Element
  maxValueDecimal: query_resourceById_oneOf_125_snapshot_element_items_maxValueDecimal
  _maxValueDecimal: Element
  maxValueInteger: query_resourceById_oneOf_125_snapshot_element_items_maxValueInteger
  _maxValueInteger: Element
  maxValuePositiveInt: query_resourceById_oneOf_125_snapshot_element_items_maxValuePositiveInt
  _maxValuePositiveInt: Element
  maxValueUnsignedInt: query_resourceById_oneOf_125_snapshot_element_items_maxValueUnsignedInt
  _maxValueUnsignedInt: Element
  maxValueQuantity: Quantity
  maxLength: integer
  _maxLength: Element
  "A reference to an invariant that may make additional statements about the cardinality or value in the instance."
  condition: [id]
  "Extensions for condition"
  _condition: [Element]
  "Formal constraints such as co-occurrence and other constraints that can be computationally evaluated within the context of the instance."
  constraint: [ElementDefinition_Constraint]
  mustSupport: boolean
  _mustSupport: Element
  isModifier: boolean
  _isModifier: Element
  isModifierReason: string
  _isModifierReason: Element
  isSummary: boolean
  _isSummary: Element
  binding: ElementDefinition_Binding
  "Identifies a concept from an external specification that roughly corresponds to this element."
  mapping: [ElementDefinition_Mapping]
}

enum query_resourceById_oneOf_125_snapshot_element_items_representation_items {
  xmlAttr
  xmlText
  typeAttr
  cdaText
  xhtml
}

"Captures constraints on each element within the resource, profile, or extension."
type ElementDefinition_Slicing {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Designates which child elements are used to discriminate between the slices when processing an instance. If one or more discriminators are provided, the value of the child elements in the instance data SHALL completely distinguish which slice the element in the resource matches based on the allowed values for those elements in each of the slices."
  discriminator: [ElementDefinition_Discriminator]
  description: string
  _description: Element
  ordered: boolean
  _ordered: Element
  rules: query_resourceById_oneOf_125_snapshot_element_items_slicing_rules
  _rules: Element
}

"Captures constraints on each element within the resource, profile, or extension."
type ElementDefinition_Discriminator {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: query_resourceById_oneOf_125_snapshot_element_items_slicing_discriminator_items_type
  _type: Element
  path: string
  _path: Element
}

"How the element value is interpreted when discrimination is evaluated."
enum query_resourceById_oneOf_125_snapshot_element_items_slicing_discriminator_items_type {
  value
  exists
  pattern
  type
  profile
}

"Whether additional slices are allowed or not. When the slices are ordered, profile authors can also say that additional slices are only allowed at the end."
enum query_resourceById_oneOf_125_snapshot_element_items_slicing_rules {
  closed
  open
  openAtEnd
}

"Captures constraints on each element within the resource, profile, or extension."
type ElementDefinition_Base {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  path: string
  _path: Element
  min: unsignedInt
  _min: Element
  max: string
  _max: Element
}

"Captures constraints on each element within the resource, profile, or extension."
type ElementDefinition_Type {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  code: uri
  _code: Element
  "Identifies a profile structure or implementation Guide that applies to the datatype this element refers to. If any profiles are specified, then the content must conform to at least one of them. The URL can be a local reference - to a contained StructureDefinition, or a reference to another StructureDefinition or Implementation Guide by a canonical URL. When an implementation guide is specified, the type SHALL conform to at least one profile defined in the implementation guide."
  profile: [canonical]
  "Used when the type is \\"Reference\\" or \\"canonical\\", and identifies a profile structure or implementation Guide that applies to the target of the reference this element refers to. If any profiles are specified, then the content must conform to at least one of them. The URL can be a local reference - to a contained StructureDefinition, or a reference to another StructureDefinition or Implementation Guide by a canonical URL. When an implementation guide is specified, the target resource SHALL conform to at least one profile defined in the implementation guide."
  targetProfile: [canonical]
  "If the type is a reference to another resource, how the resource is or can be aggregated - is it a contained resource, or a reference, and if the context is a bundle, is it included in the bundle."
  aggregation: [query_resourceById_oneOf_125_snapshot_element_items_type_items_aggregation_items]
  "Extensions for aggregation"
  _aggregation: [Element]
  versioning: query_resourceById_oneOf_125_snapshot_element_items_type_items_versioning
  _versioning: Element
}

enum query_resourceById_oneOf_125_snapshot_element_items_type_items_aggregation_items {
  contained
  referenced
  bundled
}

"Whether this reference needs to be version specific or version independent, or whether either can be used."
enum query_resourceById_oneOf_125_snapshot_element_items_type_items_versioning {
  either
  independent
  specific
}

"The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
scalar query_resourceById_oneOf_125_snapshot_element_items_defaultValueBase64Binary

"The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
scalar query_resourceById_oneOf_125_snapshot_element_items_defaultValueCanonical

"The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
scalar query_resourceById_oneOf_125_snapshot_element_items_defaultValueCode

"The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
scalar query_resourceById_oneOf_125_snapshot_element_items_defaultValueDate

"The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
scalar query_resourceById_oneOf_125_snapshot_element_items_defaultValueDateTime

"The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
scalar query_resourceById_oneOf_125_snapshot_element_items_defaultValueDecimal

"The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
scalar query_resourceById_oneOf_125_snapshot_element_items_defaultValueId

"The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
scalar query_resourceById_oneOf_125_snapshot_element_items_defaultValueInstant

"The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
scalar query_resourceById_oneOf_125_snapshot_element_items_defaultValueInteger

"The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
scalar query_resourceById_oneOf_125_snapshot_element_items_defaultValueMarkdown

"The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
scalar query_resourceById_oneOf_125_snapshot_element_items_defaultValueOid

"The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
scalar query_resourceById_oneOf_125_snapshot_element_items_defaultValuePositiveInt

"The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
scalar query_resourceById_oneOf_125_snapshot_element_items_defaultValueString

"The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
scalar query_resourceById_oneOf_125_snapshot_element_items_defaultValueTime

"The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
scalar query_resourceById_oneOf_125_snapshot_element_items_defaultValueUnsignedInt

"The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
scalar query_resourceById_oneOf_125_snapshot_element_items_defaultValueUri

"The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
scalar query_resourceById_oneOf_125_snapshot_element_items_defaultValueUrl

"The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false')."
scalar query_resourceById_oneOf_125_snapshot_element_items_defaultValueUuid

"Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
scalar query_resourceById_oneOf_125_snapshot_element_items_fixedBase64Binary

"Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
scalar query_resourceById_oneOf_125_snapshot_element_items_fixedCanonical

"Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
scalar query_resourceById_oneOf_125_snapshot_element_items_fixedCode

"Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
scalar query_resourceById_oneOf_125_snapshot_element_items_fixedDate

"Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
scalar query_resourceById_oneOf_125_snapshot_element_items_fixedDateTime

"Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
scalar query_resourceById_oneOf_125_snapshot_element_items_fixedDecimal

"Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
scalar query_resourceById_oneOf_125_snapshot_element_items_fixedId

"Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
scalar query_resourceById_oneOf_125_snapshot_element_items_fixedInstant

"Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
scalar query_resourceById_oneOf_125_snapshot_element_items_fixedInteger

"Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
scalar query_resourceById_oneOf_125_snapshot_element_items_fixedMarkdown

"Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
scalar query_resourceById_oneOf_125_snapshot_element_items_fixedOid

"Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
scalar query_resourceById_oneOf_125_snapshot_element_items_fixedPositiveInt

"Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
scalar query_resourceById_oneOf_125_snapshot_element_items_fixedString

"Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
scalar query_resourceById_oneOf_125_snapshot_element_items_fixedTime

"Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
scalar query_resourceById_oneOf_125_snapshot_element_items_fixedUnsignedInt

"Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
scalar query_resourceById_oneOf_125_snapshot_element_items_fixedUri

"Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
scalar query_resourceById_oneOf_125_snapshot_element_items_fixedUrl

"Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing."
scalar query_resourceById_oneOf_125_snapshot_element_items_fixedUuid

"Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \\n\\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\\n\\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\\n\\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\\n\\n1. If primitive: it must match exactly the pattern value\\n2. If a complex object: it must match (recursively) the pattern value\\n3. If an array: it must match (recursively) the pattern value."
scalar query_resourceById_oneOf_125_snapshot_element_items_patternBase64Binary

"Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \\n\\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\\n\\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\\n\\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\\n\\n1. If primitive: it must match exactly the pattern value\\n2. If a complex object: it must match (recursively) the pattern value\\n3. If an array: it must match (recursively) the pattern value."
scalar query_resourceById_oneOf_125_snapshot_element_items_patternCanonical

"Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \\n\\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\\n\\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\\n\\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\\n\\n1. If primitive: it must match exactly the pattern value\\n2. If a complex object: it must match (recursively) the pattern value\\n3. If an array: it must match (recursively) the pattern value."
scalar query_resourceById_oneOf_125_snapshot_element_items_patternCode

"Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \\n\\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\\n\\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\\n\\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\\n\\n1. If primitive: it must match exactly the pattern value\\n2. If a complex object: it must match (recursively) the pattern value\\n3. If an array: it must match (recursively) the pattern value."
scalar query_resourceById_oneOf_125_snapshot_element_items_patternDate

"Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \\n\\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\\n\\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\\n\\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\\n\\n1. If primitive: it must match exactly the pattern value\\n2. If a complex object: it must match (recursively) the pattern value\\n3. If an array: it must match (recursively) the pattern value."
scalar query_resourceById_oneOf_125_snapshot_element_items_patternDateTime

"Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \\n\\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\\n\\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\\n\\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\\n\\n1. If primitive: it must match exactly the pattern value\\n2. If a complex object: it must match (recursively) the pattern value\\n3. If an array: it must match (recursively) the pattern value."
scalar query_resourceById_oneOf_125_snapshot_element_items_patternDecimal

"Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \\n\\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\\n\\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\\n\\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\\n\\n1. If primitive: it must match exactly the pattern value\\n2. If a complex object: it must match (recursively) the pattern value\\n3. If an array: it must match (recursively) the pattern value."
scalar query_resourceById_oneOf_125_snapshot_element_items_patternId

"Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \\n\\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\\n\\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\\n\\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\\n\\n1. If primitive: it must match exactly the pattern value\\n2. If a complex object: it must match (recursively) the pattern value\\n3. If an array: it must match (recursively) the pattern value."
scalar query_resourceById_oneOf_125_snapshot_element_items_patternInstant

"Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \\n\\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\\n\\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\\n\\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\\n\\n1. If primitive: it must match exactly the pattern value\\n2. If a complex object: it must match (recursively) the pattern value\\n3. If an array: it must match (recursively) the pattern value."
scalar query_resourceById_oneOf_125_snapshot_element_items_patternInteger

"Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \\n\\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\\n\\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\\n\\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\\n\\n1. If primitive: it must match exactly the pattern value\\n2. If a complex object: it must match (recursively) the pattern value\\n3. If an array: it must match (recursively) the pattern value."
scalar query_resourceById_oneOf_125_snapshot_element_items_patternMarkdown

"Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \\n\\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\\n\\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\\n\\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\\n\\n1. If primitive: it must match exactly the pattern value\\n2. If a complex object: it must match (recursively) the pattern value\\n3. If an array: it must match (recursively) the pattern value."
scalar query_resourceById_oneOf_125_snapshot_element_items_patternOid

"Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \\n\\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\\n\\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\\n\\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\\n\\n1. If primitive: it must match exactly the pattern value\\n2. If a complex object: it must match (recursively) the pattern value\\n3. If an array: it must match (recursively) the pattern value."
scalar query_resourceById_oneOf_125_snapshot_element_items_patternPositiveInt

"Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \\n\\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\\n\\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\\n\\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\\n\\n1. If primitive: it must match exactly the pattern value\\n2. If a complex object: it must match (recursively) the pattern value\\n3. If an array: it must match (recursively) the pattern value."
scalar query_resourceById_oneOf_125_snapshot_element_items_patternString

"Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \\n\\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\\n\\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\\n\\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\\n\\n1. If primitive: it must match exactly the pattern value\\n2. If a complex object: it must match (recursively) the pattern value\\n3. If an array: it must match (recursively) the pattern value."
scalar query_resourceById_oneOf_125_snapshot_element_items_patternTime

"Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \\n\\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\\n\\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\\n\\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\\n\\n1. If primitive: it must match exactly the pattern value\\n2. If a complex object: it must match (recursively) the pattern value\\n3. If an array: it must match (recursively) the pattern value."
scalar query_resourceById_oneOf_125_snapshot_element_items_patternUnsignedInt

"Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \\n\\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\\n\\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\\n\\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\\n\\n1. If primitive: it must match exactly the pattern value\\n2. If a complex object: it must match (recursively) the pattern value\\n3. If an array: it must match (recursively) the pattern value."
scalar query_resourceById_oneOf_125_snapshot_element_items_patternUri

"Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \\n\\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\\n\\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\\n\\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\\n\\n1. If primitive: it must match exactly the pattern value\\n2. If a complex object: it must match (recursively) the pattern value\\n3. If an array: it must match (recursively) the pattern value."
scalar query_resourceById_oneOf_125_snapshot_element_items_patternUrl

"Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \\n\\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\\n\\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\\n\\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\\n\\n1. If primitive: it must match exactly the pattern value\\n2. If a complex object: it must match (recursively) the pattern value\\n3. If an array: it must match (recursively) the pattern value."
scalar query_resourceById_oneOf_125_snapshot_element_items_patternUuid

"Captures constraints on each element within the resource, profile, or extension."
type ElementDefinition_Example {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  label: string
  _label: Element
  valueBase64Binary: query_resourceById_oneOf_125_snapshot_element_items_example_items_valueBase64Binary
  _valueBase64Binary: Element
  "The actual value for the element, which must be one of the types allowed for this element."
  valueBoolean: Boolean
  _valueBoolean: Element
  valueCanonical: query_resourceById_oneOf_125_snapshot_element_items_example_items_valueCanonical
  _valueCanonical: Element
  valueCode: query_resourceById_oneOf_125_snapshot_element_items_example_items_valueCode
  _valueCode: Element
  valueDate: query_resourceById_oneOf_125_snapshot_element_items_example_items_valueDate
  _valueDate: Element
  valueDateTime: query_resourceById_oneOf_125_snapshot_element_items_example_items_valueDateTime
  _valueDateTime: Element
  valueDecimal: query_resourceById_oneOf_125_snapshot_element_items_example_items_valueDecimal
  _valueDecimal: Element
  valueId: query_resourceById_oneOf_125_snapshot_element_items_example_items_valueId
  _valueId: Element
  valueInstant: query_resourceById_oneOf_125_snapshot_element_items_example_items_valueInstant
  _valueInstant: Element
  valueInteger: query_resourceById_oneOf_125_snapshot_element_items_example_items_valueInteger
  _valueInteger: Element
  valueMarkdown: query_resourceById_oneOf_125_snapshot_element_items_example_items_valueMarkdown
  _valueMarkdown: Element
  valueOid: query_resourceById_oneOf_125_snapshot_element_items_example_items_valueOid
  _valueOid: Element
  valuePositiveInt: query_resourceById_oneOf_125_snapshot_element_items_example_items_valuePositiveInt
  _valuePositiveInt: Element
  valueString: query_resourceById_oneOf_125_snapshot_element_items_example_items_valueString
  _valueString: Element
  valueTime: query_resourceById_oneOf_125_snapshot_element_items_example_items_valueTime
  _valueTime: Element
  valueUnsignedInt: query_resourceById_oneOf_125_snapshot_element_items_example_items_valueUnsignedInt
  _valueUnsignedInt: Element
  valueUri: query_resourceById_oneOf_125_snapshot_element_items_example_items_valueUri
  _valueUri: Element
  valueUrl: query_resourceById_oneOf_125_snapshot_element_items_example_items_valueUrl
  _valueUrl: Element
  valueUuid: query_resourceById_oneOf_125_snapshot_element_items_example_items_valueUuid
  _valueUuid: Element
  valueAddress: Address
  valueAge: Age
  valueAnnotation: Annotation
  valueAttachment: Attachment
  valueCodeableConcept: CodeableConcept
  valueCodeableReference: CodeableReference
  valueCoding: Coding
  valueContactPoint: ContactPoint
  valueCount: Count
  valueDistance: Distance
  valueDuration: Duration
  valueHumanName: HumanName
  valueIdentifier: Identifier
  valueMoney: Money
  valuePeriod: Period
  valueQuantity: Quantity
  valueRange: Range
  valueRatio: Ratio
  valueRatioRange: RatioRange
  valueReference: Reference
  valueSampledData: SampledData
  valueSignature: Signature
  valueTiming: Timing
  valueContactDetail: ContactDetail
  valueContributor: Contributor
  valueDataRequirement: DataRequirement
  valueExpression: Expression
  valueParameterDefinition: ParameterDefinition
  valueRelatedArtifact: RelatedArtifact
  valueTriggerDefinition: TriggerDefinition
  valueUsageContext: UsageContext
  valueDosage: Dosage
}

"The actual value for the element, which must be one of the types allowed for this element."
scalar query_resourceById_oneOf_125_snapshot_element_items_example_items_valueBase64Binary

"The actual value for the element, which must be one of the types allowed for this element."
scalar query_resourceById_oneOf_125_snapshot_element_items_example_items_valueCanonical

"The actual value for the element, which must be one of the types allowed for this element."
scalar query_resourceById_oneOf_125_snapshot_element_items_example_items_valueCode

"The actual value for the element, which must be one of the types allowed for this element."
scalar query_resourceById_oneOf_125_snapshot_element_items_example_items_valueDate

"The actual value for the element, which must be one of the types allowed for this element."
scalar query_resourceById_oneOf_125_snapshot_element_items_example_items_valueDateTime

"The actual value for the element, which must be one of the types allowed for this element."
scalar query_resourceById_oneOf_125_snapshot_element_items_example_items_valueDecimal

"The actual value for the element, which must be one of the types allowed for this element."
scalar query_resourceById_oneOf_125_snapshot_element_items_example_items_valueId

"The actual value for the element, which must be one of the types allowed for this element."
scalar query_resourceById_oneOf_125_snapshot_element_items_example_items_valueInstant

"The actual value for the element, which must be one of the types allowed for this element."
scalar query_resourceById_oneOf_125_snapshot_element_items_example_items_valueInteger

"The actual value for the element, which must be one of the types allowed for this element."
scalar query_resourceById_oneOf_125_snapshot_element_items_example_items_valueMarkdown

"The actual value for the element, which must be one of the types allowed for this element."
scalar query_resourceById_oneOf_125_snapshot_element_items_example_items_valueOid

"The actual value for the element, which must be one of the types allowed for this element."
scalar query_resourceById_oneOf_125_snapshot_element_items_example_items_valuePositiveInt

"The actual value for the element, which must be one of the types allowed for this element."
scalar query_resourceById_oneOf_125_snapshot_element_items_example_items_valueString

"The actual value for the element, which must be one of the types allowed for this element."
scalar query_resourceById_oneOf_125_snapshot_element_items_example_items_valueTime

"The actual value for the element, which must be one of the types allowed for this element."
scalar query_resourceById_oneOf_125_snapshot_element_items_example_items_valueUnsignedInt

"The actual value for the element, which must be one of the types allowed for this element."
scalar query_resourceById_oneOf_125_snapshot_element_items_example_items_valueUri

"The actual value for the element, which must be one of the types allowed for this element."
scalar query_resourceById_oneOf_125_snapshot_element_items_example_items_valueUrl

"The actual value for the element, which must be one of the types allowed for this element."
scalar query_resourceById_oneOf_125_snapshot_element_items_example_items_valueUuid

"The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity."
scalar query_resourceById_oneOf_125_snapshot_element_items_minValueDate

"The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity."
scalar query_resourceById_oneOf_125_snapshot_element_items_minValueDateTime

"The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity."
scalar query_resourceById_oneOf_125_snapshot_element_items_minValueInstant

"The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity."
scalar query_resourceById_oneOf_125_snapshot_element_items_minValueTime

"The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity."
scalar query_resourceById_oneOf_125_snapshot_element_items_minValueDecimal

"The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity."
scalar query_resourceById_oneOf_125_snapshot_element_items_minValueInteger

"The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity."
scalar query_resourceById_oneOf_125_snapshot_element_items_minValuePositiveInt

"The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity."
scalar query_resourceById_oneOf_125_snapshot_element_items_minValueUnsignedInt

"The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity."
scalar query_resourceById_oneOf_125_snapshot_element_items_maxValueDate

"The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity."
scalar query_resourceById_oneOf_125_snapshot_element_items_maxValueDateTime

"The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity."
scalar query_resourceById_oneOf_125_snapshot_element_items_maxValueInstant

"The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity."
scalar query_resourceById_oneOf_125_snapshot_element_items_maxValueTime

"The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity."
scalar query_resourceById_oneOf_125_snapshot_element_items_maxValueDecimal

"The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity."
scalar query_resourceById_oneOf_125_snapshot_element_items_maxValueInteger

"The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity."
scalar query_resourceById_oneOf_125_snapshot_element_items_maxValuePositiveInt

"The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity."
scalar query_resourceById_oneOf_125_snapshot_element_items_maxValueUnsignedInt

"Captures constraints on each element within the resource, profile, or extension."
type ElementDefinition_Constraint {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  key: id
  _key: Element
  requirements: string
  _requirements: Element
  severity: query_resourceById_oneOf_125_snapshot_element_items_constraint_items_severity
  _severity: Element
  human: string
  _human: Element
  expression: string
  _expression: Element
  xpath: string
  _xpath: Element
  source: canonical
}

"Identifies the impact constraint violation has on the conformance of the instance."
enum query_resourceById_oneOf_125_snapshot_element_items_constraint_items_severity {
  error
  warning
}

"Captures constraints on each element within the resource, profile, or extension."
type ElementDefinition_Binding {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  strength: query_resourceById_oneOf_125_snapshot_element_items_binding_strength
  _strength: Element
  description: string
  _description: Element
  valueSet: canonical
}

"Indicates the degree of conformance expectations associated with this binding - that is, the degree to which the provided value set must be adhered to in the instances."
enum query_resourceById_oneOf_125_snapshot_element_items_binding_strength {
  required
  extensible
  preferred
  example
}

"Captures constraints on each element within the resource, profile, or extension."
type ElementDefinition_Mapping {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  identity: id
  _identity: Element
  language: code
  _language: Element
  map: string
  _map: Element
  comment: string
  _comment: Element
}

"A definition of a FHIR structure. This resource is used to describe the underlying resources, data types defined in FHIR, and also for describing extensions and constraints on resources and data types."
type StructureDefinition_Differential {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Captures constraints on each element within the resource."
  element: [ElementDefinition]!
}

"A Map of relationships between 2 structures that can be used to transform data."
type StructureMap {
  resourceType: StructureMap_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  url: uri
  _url: Element
  "A formal identifier that is used to identify this structure map when it is represented in other formats, or referenced in a specification, model, design or an instance."
  identifier: [Identifier]
  version: string
  _version: Element
  name: string
  _name: Element
  title: string
  _title: Element
  status: code
  _status: Element
  experimental: boolean
  _experimental: Element
  date: dateTime
  _date: Element
  publisher: string
  _publisher: Element
  "Contact details to assist a user in finding and communicating with the publisher."
  contact: [ContactDetail]
  description: markdown
  _description: Element
  "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate structure map instances."
  useContext: [UsageContext]
  "A legal or geographic region in which the structure map is intended to be used."
  jurisdiction: [CodeableConcept]
  purpose: markdown
  _purpose: Element
  copyright: markdown
  _copyright: Element
  "A structure definition used by this map. The structure definition may describe instances that are converted, or the instances that are produced."
  structure: [StructureMap_Structure]
  "Other maps used by this map (canonical URLs)."
  import: [canonical]
  "Organizes the mapping into manageable chunks for human review/ease of maintenance."
  group: [StructureMap_Group]!
}

enum StructureMap_const {
  StructureMap
}

"A Map of relationships between 2 structures that can be used to transform data."
type StructureMap_Structure {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  url: canonical!
  mode: code
  _mode: Element
  alias: string
  _alias: Element
  documentation: string
  _documentation: Element
}

"A Map of relationships between 2 structures that can be used to transform data."
type StructureMap_Group {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  name: id
  _name: Element
  extends: id
  _extends: Element
  typeMode: code
  _typeMode: Element
  documentation: string
  _documentation: Element
  "A name assigned to an instance of data. The instance must be provided when the mapping is invoked."
  input: [StructureMap_Input2]!
  "Transform Rule from source to target."
  rule: [StructureMap_Rule]!
}

"A Map of relationships between 2 structures that can be used to transform data."
type StructureMap_Input2 {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  name: id
  _name: Element
  type: string
  _type: Element
  mode: code
  _mode: Element
  documentation: string
  _documentation: Element
}

"A Map of relationships between 2 structures that can be used to transform data."
type StructureMap_Rule {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  name: id
  _name: Element
  "Source inputs to the mapping."
  source: [StructureMap_Source]!
  "Content to create because of this mapping rule."
  target: [StructureMap_Target]
  "Rules contained in this rule."
  rule: [StructureMap_Rule]
  "Which other rules to apply in the context of this rule."
  dependent: [StructureMap_Dependent]
  documentation: string
  _documentation: Element
}

"A Map of relationships between 2 structures that can be used to transform data."
type StructureMap_Source {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  context: id
  _context: Element
  min: integer
  _min: Element
  max: string
  _max: Element
  type: string
  _type: Element
  defaultValueBase64Binary: query_resourceById_oneOf_126_group_items_rule_items_source_items_defaultValueBase64Binary
  _defaultValueBase64Binary: Element
  "A value to use if there is no existing value in the source object."
  defaultValueBoolean: Boolean
  _defaultValueBoolean: Element
  defaultValueCanonical: query_resourceById_oneOf_126_group_items_rule_items_source_items_defaultValueCanonical
  _defaultValueCanonical: Element
  defaultValueCode: query_resourceById_oneOf_126_group_items_rule_items_source_items_defaultValueCode
  _defaultValueCode: Element
  defaultValueDate: query_resourceById_oneOf_126_group_items_rule_items_source_items_defaultValueDate
  _defaultValueDate: Element
  defaultValueDateTime: query_resourceById_oneOf_126_group_items_rule_items_source_items_defaultValueDateTime
  _defaultValueDateTime: Element
  defaultValueDecimal: query_resourceById_oneOf_126_group_items_rule_items_source_items_defaultValueDecimal
  _defaultValueDecimal: Element
  defaultValueId: query_resourceById_oneOf_126_group_items_rule_items_source_items_defaultValueId
  _defaultValueId: Element
  defaultValueInstant: query_resourceById_oneOf_126_group_items_rule_items_source_items_defaultValueInstant
  _defaultValueInstant: Element
  defaultValueInteger: query_resourceById_oneOf_126_group_items_rule_items_source_items_defaultValueInteger
  _defaultValueInteger: Element
  defaultValueMarkdown: query_resourceById_oneOf_126_group_items_rule_items_source_items_defaultValueMarkdown
  _defaultValueMarkdown: Element
  defaultValueOid: query_resourceById_oneOf_126_group_items_rule_items_source_items_defaultValueOid
  _defaultValueOid: Element
  defaultValuePositiveInt: query_resourceById_oneOf_126_group_items_rule_items_source_items_defaultValuePositiveInt
  _defaultValuePositiveInt: Element
  defaultValueString: query_resourceById_oneOf_126_group_items_rule_items_source_items_defaultValueString
  _defaultValueString: Element
  defaultValueTime: query_resourceById_oneOf_126_group_items_rule_items_source_items_defaultValueTime
  _defaultValueTime: Element
  defaultValueUnsignedInt: query_resourceById_oneOf_126_group_items_rule_items_source_items_defaultValueUnsignedInt
  _defaultValueUnsignedInt: Element
  defaultValueUri: query_resourceById_oneOf_126_group_items_rule_items_source_items_defaultValueUri
  _defaultValueUri: Element
  defaultValueUrl: query_resourceById_oneOf_126_group_items_rule_items_source_items_defaultValueUrl
  _defaultValueUrl: Element
  defaultValueUuid: query_resourceById_oneOf_126_group_items_rule_items_source_items_defaultValueUuid
  _defaultValueUuid: Element
  defaultValueAddress: Address
  defaultValueAge: Age
  defaultValueAnnotation: Annotation
  defaultValueAttachment: Attachment
  defaultValueCodeableConcept: CodeableConcept
  defaultValueCoding: Coding
  defaultValueContactPoint: ContactPoint
  defaultValueCount: Count
  defaultValueDistance: Distance
  defaultValueDuration: Duration
  defaultValueHumanName: HumanName
  defaultValueIdentifier: Identifier
  defaultValueMoney: Money
  defaultValuePeriod: Period
  defaultValueQuantity: Quantity
  defaultValueRange: Range
  defaultValueRatio: Ratio
  defaultValueReference: Reference
  defaultValueSampledData: SampledData
  defaultValueSignature: Signature
  defaultValueTiming: Timing
  defaultValueContactDetail: ContactDetail
  defaultValueContributor: Contributor
  defaultValueDataRequirement: DataRequirement
  defaultValueExpression: Expression
  defaultValueParameterDefinition: ParameterDefinition
  defaultValueRelatedArtifact: RelatedArtifact
  defaultValueTriggerDefinition: TriggerDefinition
  defaultValueUsageContext: UsageContext
  defaultValueDosage: Dosage
  defaultValueMeta: Meta
  element: string
  _element: Element
  listMode: code
  _listMode: Element
  variable: id
  _variable: Element
  condition: string
  _condition: Element
  check: string
  _check: Element
  logMessage: string
  _logMessage: Element
}

"A value to use if there is no existing value in the source object."
scalar query_resourceById_oneOf_126_group_items_rule_items_source_items_defaultValueBase64Binary

"A value to use if there is no existing value in the source object."
scalar query_resourceById_oneOf_126_group_items_rule_items_source_items_defaultValueCanonical

"A value to use if there is no existing value in the source object."
scalar query_resourceById_oneOf_126_group_items_rule_items_source_items_defaultValueCode

"A value to use if there is no existing value in the source object."
scalar query_resourceById_oneOf_126_group_items_rule_items_source_items_defaultValueDate

"A value to use if there is no existing value in the source object."
scalar query_resourceById_oneOf_126_group_items_rule_items_source_items_defaultValueDateTime

"A value to use if there is no existing value in the source object."
scalar query_resourceById_oneOf_126_group_items_rule_items_source_items_defaultValueDecimal

"A value to use if there is no existing value in the source object."
scalar query_resourceById_oneOf_126_group_items_rule_items_source_items_defaultValueId

"A value to use if there is no existing value in the source object."
scalar query_resourceById_oneOf_126_group_items_rule_items_source_items_defaultValueInstant

"A value to use if there is no existing value in the source object."
scalar query_resourceById_oneOf_126_group_items_rule_items_source_items_defaultValueInteger

"A value to use if there is no existing value in the source object."
scalar query_resourceById_oneOf_126_group_items_rule_items_source_items_defaultValueMarkdown

"A value to use if there is no existing value in the source object."
scalar query_resourceById_oneOf_126_group_items_rule_items_source_items_defaultValueOid

"A value to use if there is no existing value in the source object."
scalar query_resourceById_oneOf_126_group_items_rule_items_source_items_defaultValuePositiveInt

"A value to use if there is no existing value in the source object."
scalar query_resourceById_oneOf_126_group_items_rule_items_source_items_defaultValueString

"A value to use if there is no existing value in the source object."
scalar query_resourceById_oneOf_126_group_items_rule_items_source_items_defaultValueTime

"A value to use if there is no existing value in the source object."
scalar query_resourceById_oneOf_126_group_items_rule_items_source_items_defaultValueUnsignedInt

"A value to use if there is no existing value in the source object."
scalar query_resourceById_oneOf_126_group_items_rule_items_source_items_defaultValueUri

"A value to use if there is no existing value in the source object."
scalar query_resourceById_oneOf_126_group_items_rule_items_source_items_defaultValueUrl

"A value to use if there is no existing value in the source object."
scalar query_resourceById_oneOf_126_group_items_rule_items_source_items_defaultValueUuid

"A Map of relationships between 2 structures that can be used to transform data."
type StructureMap_Target {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  context: id
  _context: Element
  contextType: code
  _contextType: Element
  element: string
  _element: Element
  variable: id
  _variable: Element
  "If field is a list, how to manage the list."
  listMode: [code]
  "Extensions for listMode"
  _listMode: [Element]
  listRuleId: id
  _listRuleId: Element
  transform: code
  _transform: Element
  "Parameters to the transform."
  parameter: [StructureMap_Parameter]
}

"A Map of relationships between 2 structures that can be used to transform data."
type StructureMap_Parameter {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  valueId: query_resourceById_oneOf_126_group_items_rule_items_target_items_parameter_items_valueId
  _valueId: Element
  valueString: query_resourceById_oneOf_126_group_items_rule_items_target_items_parameter_items_valueString
  _valueString: Element
  "Parameter value - variable or literal."
  valueBoolean: Boolean
  _valueBoolean: Element
  valueInteger: query_resourceById_oneOf_126_group_items_rule_items_target_items_parameter_items_valueInteger
  _valueInteger: Element
  valueDecimal: query_resourceById_oneOf_126_group_items_rule_items_target_items_parameter_items_valueDecimal
  _valueDecimal: Element
}

"Parameter value - variable or literal."
scalar query_resourceById_oneOf_126_group_items_rule_items_target_items_parameter_items_valueId

"Parameter value - variable or literal."
scalar query_resourceById_oneOf_126_group_items_rule_items_target_items_parameter_items_valueString

"Parameter value - variable or literal."
scalar query_resourceById_oneOf_126_group_items_rule_items_target_items_parameter_items_valueInteger

"Parameter value - variable or literal."
scalar query_resourceById_oneOf_126_group_items_rule_items_target_items_parameter_items_valueDecimal

"A Map of relationships between 2 structures that can be used to transform data."
type StructureMap_Dependent {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  name: id
  _name: Element
  "Variable to pass to the rule or group."
  variable: [string]
  "Extensions for variable"
  _variable: [Element]
}

"The subscription resource is used to define a push-based subscription from a server to another system. Once a subscription is registered with the server, the server checks every resource that is created or updated, and if the resource matches the given criteria, it sends a message on the defined \\"channel\\" so that another system can take an appropriate action."
type Subscription_ {
  resourceType: Subscription_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  status: code
  _status: Element
  "Contact details for a human to contact about the subscription. The primary use of this for system administrator troubleshooting."
  contact: [ContactPoint]
  end: instant
  _end: Element
  reason: string
  _reason: Element
  criteria: string
  _criteria: Element
  error: string
  _error: Element
  channel: Subscription_Channel!
}

enum Subscription_const {
  Subscription_
}

"The subscription resource is used to define a push-based subscription from a server to another system. Once a subscription is registered with the server, the server checks every resource that is created or updated, and if the resource matches the given criteria, it sends a message on the defined \\"channel\\" so that another system can take an appropriate action."
type Subscription_Channel {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: code
  _type: Element
  endpoint: url
  _endpoint: Element
  payload: code
  _payload: Element
  "Additional headers / information to send as part of the notification."
  header: [string]
  "Extensions for header"
  _header: [Element]
}

"The SubscriptionStatus resource describes the state of a Subscription during notifications."
type SubscriptionStatus {
  resourceType: SubscriptionStatus_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  status: code
  _status: Element
  type: code
  _type: Element
  eventsSinceSubscriptionStart: string
  _eventsSinceSubscriptionStart: Element
  "Detailed information about events relevant to this subscription notification."
  notificationEvent: [SubscriptionStatus_NotificationEvent]
  subscription: Reference!
  topic: canonical
  "A record of errors that occurred when the server processed a notification."
  error: [CodeableConcept]
}

enum SubscriptionStatus_const {
  SubscriptionStatus
}

"The SubscriptionStatus resource describes the state of a Subscription during notifications."
type SubscriptionStatus_NotificationEvent {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  eventNumber: string
  _eventNumber: Element
  timestamp: instant
  _timestamp: Element
  focus: Reference
  "Additional context information for this event. Generally, this will contain references to additional resources included with the event (e.g., the Patient relevant to an Encounter), however it MAY refer to non-FHIR objects."
  additionalContext: [Reference]
}

"Describes a stream of resource state changes or events and annotated with labels useful to filter projections from this topic."
type SubscriptionTopic {
  resourceType: SubscriptionTopic_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  url: uri
  _url: Element
  "Business identifiers assigned to this subscription topic by the performer and/or other systems.  These identifiers remain constant as the resource is updated and propagates from server to server."
  identifier: [Identifier]
  version: string
  _version: Element
  title: string
  _title: Element
  "The canonical URL pointing to another FHIR-defined SubscriptionTopic that is adhered to in whole or in part by this SubscriptionTopic."
  derivedFrom: [canonical]
  status: code
  _status: Element
  experimental: boolean
  _experimental: Element
  date: dateTime
  _date: Element
  publisher: string
  _publisher: Element
  "Contact details to assist a user in finding and communicating with the publisher."
  contact: [ContactDetail]
  description: markdown
  _description: Element
  "The content was developed with a focus and intent of supporting the contexts that are listed. These terms may be used to assist with indexing and searching of code system definitions."
  useContext: [UsageContext]
  "A jurisdiction in which the Topic is intended to be used."
  jurisdiction: [CodeableConcept]
  purpose: markdown
  _purpose: Element
  copyright: markdown
  _copyright: Element
  approvalDate: date
  _approvalDate: Element
  lastReviewDate: date
  _lastReviewDate: Element
  effectivePeriod: Period
  "A definition of a resource-based event that triggers a notification based on the SubscriptionTopic. The criteria may be just a human readable description and/or a full FHIR search string or FHIRPath expression. Multiple triggers are considered OR joined (e.g., a resource update matching ANY of the definitions will trigger a notification)."
  resourceTrigger: [SubscriptionTopic_ResourceTrigger]
  "Event definition which can be used to trigger the SubscriptionTopic."
  eventTrigger: [SubscriptionTopic_EventTrigger]
  "List of properties by which Subscriptions on the SubscriptionTopic can be filtered. May be defined Search Parameters (e.g., Encounter.patient) or parameters defined within this SubscriptionTopic context (e.g., hub.event)."
  canFilterBy: [SubscriptionTopic_CanFilterBy]
  "List of properties to describe the shape (e.g., resources) included in notifications from this Subscription Topic."
  notificationShape: [SubscriptionTopic_NotificationShape]
}

enum SubscriptionTopic_const {
  SubscriptionTopic
}

"Describes a stream of resource state changes or events and annotated with labels useful to filter projections from this topic."
type SubscriptionTopic_ResourceTrigger {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  description: markdown
  _description: Element
  resource: uri
  _resource: Element
  "The FHIR RESTful interaction which can be used to trigger a notification for the SubscriptionTopic. Multiple values are considered OR joined (e.g., CREATE or UPDATE)."
  supportedInteraction: [code]
  "Extensions for supportedInteraction"
  _supportedInteraction: [Element]
  queryCriteria: SubscriptionTopic_QueryCriteria
  fhirPathCriteria: string
  _fhirPathCriteria: Element
}

"Describes a stream of resource state changes or events and annotated with labels useful to filter projections from this topic."
type SubscriptionTopic_QueryCriteria {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  previous: string
  _previous: Element
  resultForCreate: code
  _resultForCreate: Element
  current: string
  _current: Element
  resultForDelete: code
  _resultForDelete: Element
  requireBoth: boolean
  _requireBoth: Element
}

"Describes a stream of resource state changes or events and annotated with labels useful to filter projections from this topic."
type SubscriptionTopic_EventTrigger {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  description: markdown
  _description: Element
  event: CodeableConcept!
  resource: uri
  _resource: Element
}

"Describes a stream of resource state changes or events and annotated with labels useful to filter projections from this topic."
type SubscriptionTopic_CanFilterBy {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  description: markdown
  _description: Element
  resource: uri
  _resource: Element
  filterParameter: string
  _filterParameter: Element
  filterDefinition: uri
  _filterDefinition: Element
  "Allowable operators to apply when determining matches (Search Modifiers).  If the filterParameter is a SearchParameter, this list of modifiers SHALL be a strict subset of the modifiers defined on that SearchParameter."
  modifier: [code]
  "Extensions for modifier"
  _modifier: [Element]
}

"Describes a stream of resource state changes or events and annotated with labels useful to filter projections from this topic."
type SubscriptionTopic_NotificationShape {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  resource: uri
  _resource: Element
  "Search-style _include directives, rooted in the resource for this shape. Servers SHOULD include resources listed here, if they exist and the user is authorized to receive them.  Clients SHOULD be prepared to receive these additional resources, but SHALL function properly without them."
  include: [string]
  "Extensions for include"
  _include: [Element]
  "Search-style _revinclude directives, rooted in the resource for this shape. Servers SHOULD include resources listed here, if they exist and the user is authorized to receive them.  Clients SHOULD be prepared to receive these additional resources, but SHALL function properly without them."
  revInclude: [string]
  "Extensions for revInclude"
  _revInclude: [Element]
}

"A homogeneous material with a definite composition."
type Substance {
  resourceType: Substance_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Unique identifier for the substance."
  identifier: [Identifier]
  status: code
  _status: Element
  "A code that classifies the general type of substance.  This is used  for searching, sorting and display purposes."
  category: [CodeableConcept]
  code: CodeableConcept!
  description: string
  _description: Element
  "Substance may be used to describe a kind of substance, or a specific package/container of the substance: an instance."
  instance: [Substance_Instance]
  "A substance can be composed of other substances."
  ingredient: [Substance_Ingredient]
}

enum Substance_const {
  Substance
}

"A homogeneous material with a definite composition."
type Substance_Instance {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  identifier: Identifier
  expiry: dateTime
  _expiry: Element
  quantity: Quantity
}

"A homogeneous material with a definite composition."
type Substance_Ingredient {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  quantity: Ratio
  substanceCodeableConcept: CodeableConcept
  substanceReference: Reference
}

"The detailed description of a substance, typically at a level beyond what is used for prescribing."
type SubstanceDefinition {
  resourceType: SubstanceDefinition_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Identifier by which this substance is known."
  identifier: [Identifier]
  version: string
  _version: Element
  status: CodeableConcept
  "A high level categorization, e.g. polymer or nucleic acid, or food, chemical, biological, or a lower level such as the general types of polymer (linear or branch chain) or type of impurity (process related or contaminant)."
  classification: [CodeableConcept]
  domain: CodeableConcept
  "The quality standard, established benchmark, to which substance complies (e.g. USP/NF, Ph. Eur, JP, BP, Company Standard)."
  grade: [CodeableConcept]
  description: markdown
  _description: Element
  "Supporting literature."
  informationSource: [Reference]
  "Textual comment about the substance's catalogue or registry record."
  note: [Annotation]
  "The entity that creates, makes, produces or fabricates the substance. This is a set of potential manufacturers but is not necessarily comprehensive."
  manufacturer: [Reference]
  "An entity that is the source for the substance. It may be different from the manufacturer. Supplier is synonymous to a distributor."
  supplier: [Reference]
  "Moiety, for structural modifications."
  moiety: [SubstanceDefinition_Moiety]
  "General specifications for this substance."
  property: [SubstanceDefinition_Property]
  "The molecular weight or weight range (for proteins, polymers or nucleic acids)."
  molecularWeight: [SubstanceDefinition_MolecularWeight]
  structure: SubstanceDefinition_Structure
  "Codes associated with the substance."
  code: [SubstanceDefinition_Code]
  "Names applicable to this substance."
  name: [SubstanceDefinition_Name]
  "A link between this substance and another, with details of the relationship."
  relationship: [SubstanceDefinition_Relationship]
  sourceMaterial: SubstanceDefinition_SourceMaterial
}

enum SubstanceDefinition_const {
  SubstanceDefinition
}

"The detailed description of a substance, typically at a level beyond what is used for prescribing."
type SubstanceDefinition_Moiety {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  role: CodeableConcept
  identifier: Identifier
  name: string
  _name: Element
  stereochemistry: CodeableConcept
  opticalActivity: CodeableConcept
  molecularFormula: string
  _molecularFormula: Element
  amountQuantity: Quantity
  amountString: query_resourceById_oneOf_131_moiety_items_amountString
  _amountString: Element
  measurementType: CodeableConcept
}

"Quantitative value for this moiety."
scalar query_resourceById_oneOf_131_moiety_items_amountString

"The detailed description of a substance, typically at a level beyond what is used for prescribing."
type SubstanceDefinition_Property {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: CodeableConcept!
  valueCodeableConcept: CodeableConcept
  valueQuantity: Quantity
  valueDate: query_resourceById_oneOf_131_property_items_valueDate
  _valueDate: Element
  "A value for the property."
  valueBoolean: Boolean
  _valueBoolean: Element
  valueAttachment: Attachment
}

"A value for the property."
scalar query_resourceById_oneOf_131_property_items_valueDate

"The detailed description of a substance, typically at a level beyond what is used for prescribing."
type SubstanceDefinition_MolecularWeight {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  method: CodeableConcept
  type: CodeableConcept
  amount: Quantity!
}

"The detailed description of a substance, typically at a level beyond what is used for prescribing."
type SubstanceDefinition_Structure {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  stereochemistry: CodeableConcept
  opticalActivity: CodeableConcept
  molecularFormula: string
  _molecularFormula: Element
  molecularFormulaByMoiety: string
  _molecularFormulaByMoiety: Element
  molecularWeight: SubstanceDefinition_MolecularWeight
  "The method used to elucidate the structure or characterization of the drug substance. Examples: X-ray, HPLC, NMR, Peptide mapping, Ligand binding assay."
  technique: [CodeableConcept]
  "The source of information about the structure."
  sourceDocument: [Reference]
  "A depiction of the structure or characterization of the substance."
  representation: [SubstanceDefinition_Representation]
}

"The detailed description of a substance, typically at a level beyond what is used for prescribing."
type SubstanceDefinition_Representation {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: CodeableConcept
  representation: string
  _representation: Element
  format: CodeableConcept
  document: Reference
}

"The detailed description of a substance, typically at a level beyond what is used for prescribing."
type SubstanceDefinition_Code {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  code: CodeableConcept
  status: CodeableConcept
  statusDate: dateTime
  _statusDate: Element
  "Any comment can be provided in this field, if necessary."
  note: [Annotation]
  "Supporting literature."
  source: [Reference]
}

"The detailed description of a substance, typically at a level beyond what is used for prescribing."
type SubstanceDefinition_Name {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  name: string
  _name: Element
  type: CodeableConcept
  status: CodeableConcept
  preferred: boolean
  _preferred: Element
  "Human language that the name is written in."
  language: [CodeableConcept]
  "The use context of this name for example if there is a different name a drug active ingredient as opposed to a food colour additive."
  domain: [CodeableConcept]
  "The jurisdiction where this name applies."
  jurisdiction: [CodeableConcept]
  "A synonym of this particular name, by which the substance is also known."
  synonym: [SubstanceDefinition_Name]
  "A translation for this name into another human language."
  translation: [SubstanceDefinition_Name]
  "Details of the official nature of this name."
  official: [SubstanceDefinition_Official]
  "Supporting literature."
  source: [Reference]
}

"The detailed description of a substance, typically at a level beyond what is used for prescribing."
type SubstanceDefinition_Official {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  authority: CodeableConcept
  status: CodeableConcept
  date: dateTime
  _date: Element
}

"The detailed description of a substance, typically at a level beyond what is used for prescribing."
type SubstanceDefinition_Relationship {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  substanceDefinitionReference: Reference
  substanceDefinitionCodeableConcept: CodeableConcept
  type: CodeableConcept!
  isDefining: boolean
  _isDefining: Element
  amountQuantity: Quantity
  amountRatio: Ratio
  amountString: query_resourceById_oneOf_131_relationship_items_amountString
  _amountString: Element
  ratioHighLimitAmount: Ratio
  comparator: CodeableConcept
  "Supporting literature."
  source: [Reference]
}

"A numeric factor for the relationship, for instance to express that the salt of a substance has some percentage of the active substance in relation to some other."
scalar query_resourceById_oneOf_131_relationship_items_amountString

"The detailed description of a substance, typically at a level beyond what is used for prescribing."
type SubstanceDefinition_SourceMaterial {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: CodeableConcept
  genus: CodeableConcept
  species: CodeableConcept
  part: CodeableConcept
  "The country or countries where the material is harvested."
  countryOfOrigin: [CodeableConcept]
}

"Record of delivery of what is supplied."
type SupplyDelivery {
  resourceType: SupplyDelivery_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Identifier for the supply delivery event that is used to identify it across multiple disparate systems."
  identifier: [Identifier]
  "A plan, proposal or order that is fulfilled in whole or in part by this event."
  basedOn: [Reference]
  "A larger event of which this particular event is a component or step."
  partOf: [Reference]
  status: code
  _status: Element
  patient: Reference
  type: CodeableConcept
  suppliedItem: SupplyDelivery_SuppliedItem
  occurrenceDateTime: query_resourceById_oneOf_132_occurrenceDateTime
  _occurrenceDateTime: Element
  occurrencePeriod: Period
  occurrenceTiming: Timing
  supplier: Reference
  destination: Reference
  "Identifies the person who picked up the Supply."
  receiver: [Reference]
}

enum SupplyDelivery_const {
  SupplyDelivery
}

"Record of delivery of what is supplied."
type SupplyDelivery_SuppliedItem {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  quantity: Quantity
  itemCodeableConcept: CodeableConcept
  itemReference: Reference
}

"The date or time(s) the activity occurred."
scalar query_resourceById_oneOf_132_occurrenceDateTime

"A record of a request for a medication, substance or device used in the healthcare setting."
type SupplyRequest {
  resourceType: SupplyRequest_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Business identifiers assigned to this SupplyRequest by the author and/or other systems. These identifiers remain constant as the resource is updated and propagates from server to server."
  identifier: [Identifier]
  status: code
  _status: Element
  category: CodeableConcept
  priority: code
  _priority: Element
  itemCodeableConcept: CodeableConcept
  itemReference: Reference
  quantity: Quantity!
  "Specific parameters for the ordered item.  For example, the size of the indicated item."
  parameter: [SupplyRequest_Parameter]
  occurrenceDateTime: query_resourceById_oneOf_133_occurrenceDateTime
  _occurrenceDateTime: Element
  occurrencePeriod: Period
  occurrenceTiming: Timing
  authoredOn: dateTime
  _authoredOn: Element
  requester: Reference
  "Who is intended to fulfill the request."
  supplier: [Reference]
  "The reason why the supply item was requested."
  reasonCode: [CodeableConcept]
  "The reason why the supply item was requested."
  reasonReference: [Reference]
  deliverFrom: Reference
  deliverTo: Reference
}

enum SupplyRequest_const {
  SupplyRequest
}

"A record of a request for a medication, substance or device used in the healthcare setting."
type SupplyRequest_Parameter {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  code: CodeableConcept
  valueCodeableConcept: CodeableConcept
  valueQuantity: Quantity
  valueRange: Range
  "The value of the device detail."
  valueBoolean: Boolean
  _valueBoolean: Element
}

"When the request should be fulfilled."
scalar query_resourceById_oneOf_133_occurrenceDateTime

"A task to be performed."
type Task {
  resourceType: Task_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "The business identifier for this task."
  identifier: [Identifier]
  instantiatesCanonical: canonical
  instantiatesUri: uri
  _instantiatesUri: Element
  "BasedOn refers to a higher-level authorization that triggered the creation of the task.  It references a \\"request\\" resource such as a ServiceRequest, MedicationRequest, ServiceRequest, CarePlan, etc. which is distinct from the \\"request\\" resource the task is seeking to fulfill.  This latter resource is referenced by FocusOn.  For example, based on a ServiceRequest (= BasedOn), a task is created to fulfill a procedureRequest ( = FocusOn ) to collect a specimen from a patient."
  basedOn: [Reference]
  groupIdentifier: Identifier
  "Task that this particular task is part of."
  partOf: [Reference]
  status: code
  _status: Element
  statusReason: CodeableConcept
  businessStatus: CodeableConcept
  intent: code
  _intent: Element
  priority: code
  _priority: Element
  code: CodeableConcept
  description: string
  _description: Element
  focus: Reference
  for: Reference
  encounter: Reference
  executionPeriod: Period
  authoredOn: dateTime
  _authoredOn: Element
  lastModified: dateTime
  _lastModified: Element
  requester: Reference
  "The kind of participant that should perform the task."
  performerType: [CodeableConcept]
  owner: Reference
  location: Reference
  reasonCode: CodeableConcept
  reasonReference: Reference
  "Insurance plans, coverage extensions, pre-authorizations and/or pre-determinations that may be relevant to the Task."
  insurance: [Reference]
  "Free-text information captured about the task as it progresses."
  note: [Annotation]
  "Links to Provenance records for past versions of this Task that identify key state transitions or updates that are likely to be relevant to a user looking at the current version of the task."
  relevantHistory: [Reference]
  restriction: Task_Restriction
  "Additional information that may be needed in the execution of the task."
  input: [Task_Input2]
  "Outputs produced by the Task."
  output: [Task_Output]
}

enum Task_const {
  Task
}

"A task to be performed."
type Task_Restriction {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  repetitions: positiveInt
  _repetitions: Element
  period: Period
  "For requests that are targeted to more than on potential recipient/target, for whom is fulfillment sought?"
  recipient: [Reference]
}

"A task to be performed."
type Task_Input2 {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: CodeableConcept!
  valueBase64Binary: query_resourceById_oneOf_134_input_items_valueBase64Binary
  _valueBase64Binary: Element
  "The value of the input parameter as a basic type."
  valueBoolean: Boolean
  _valueBoolean: Element
  valueCanonical: query_resourceById_oneOf_134_input_items_valueCanonical
  _valueCanonical: Element
  valueCode: query_resourceById_oneOf_134_input_items_valueCode
  _valueCode: Element
  valueDate: query_resourceById_oneOf_134_input_items_valueDate
  _valueDate: Element
  valueDateTime: query_resourceById_oneOf_134_input_items_valueDateTime
  _valueDateTime: Element
  valueDecimal: query_resourceById_oneOf_134_input_items_valueDecimal
  _valueDecimal: Element
  valueId: query_resourceById_oneOf_134_input_items_valueId
  _valueId: Element
  valueInstant: query_resourceById_oneOf_134_input_items_valueInstant
  _valueInstant: Element
  valueInteger: query_resourceById_oneOf_134_input_items_valueInteger
  _valueInteger: Element
  valueMarkdown: query_resourceById_oneOf_134_input_items_valueMarkdown
  _valueMarkdown: Element
  valueOid: query_resourceById_oneOf_134_input_items_valueOid
  _valueOid: Element
  valuePositiveInt: query_resourceById_oneOf_134_input_items_valuePositiveInt
  _valuePositiveInt: Element
  valueString: query_resourceById_oneOf_134_input_items_valueString
  _valueString: Element
  valueTime: query_resourceById_oneOf_134_input_items_valueTime
  _valueTime: Element
  valueUnsignedInt: query_resourceById_oneOf_134_input_items_valueUnsignedInt
  _valueUnsignedInt: Element
  valueUri: query_resourceById_oneOf_134_input_items_valueUri
  _valueUri: Element
  valueUrl: query_resourceById_oneOf_134_input_items_valueUrl
  _valueUrl: Element
  valueUuid: query_resourceById_oneOf_134_input_items_valueUuid
  _valueUuid: Element
  valueAddress: Address
  valueAge: Age
  valueAnnotation: Annotation
  valueAttachment: Attachment
  valueCodeableConcept: CodeableConcept
  valueCoding: Coding
  valueContactPoint: ContactPoint
  valueCount: Count
  valueDistance: Distance
  valueDuration: Duration
  valueHumanName: HumanName
  valueIdentifier: Identifier
  valueMoney: Money
  valuePeriod: Period
  valueQuantity: Quantity
  valueRange: Range
  valueRatio: Ratio
  valueReference: Reference
  valueSampledData: SampledData
  valueSignature: Signature
  valueTiming: Timing
  valueContactDetail: ContactDetail
  valueContributor: Contributor
  valueDataRequirement: DataRequirement
  valueExpression: Expression
  valueParameterDefinition: ParameterDefinition
  valueRelatedArtifact: RelatedArtifact
  valueTriggerDefinition: TriggerDefinition
  valueUsageContext: UsageContext
  valueDosage: Dosage
  valueMeta: Meta
}

"The value of the input parameter as a basic type."
scalar query_resourceById_oneOf_134_input_items_valueBase64Binary

"The value of the input parameter as a basic type."
scalar query_resourceById_oneOf_134_input_items_valueCanonical

"The value of the input parameter as a basic type."
scalar query_resourceById_oneOf_134_input_items_valueCode

"The value of the input parameter as a basic type."
scalar query_resourceById_oneOf_134_input_items_valueDate

"The value of the input parameter as a basic type."
scalar query_resourceById_oneOf_134_input_items_valueDateTime

"The value of the input parameter as a basic type."
scalar query_resourceById_oneOf_134_input_items_valueDecimal

"The value of the input parameter as a basic type."
scalar query_resourceById_oneOf_134_input_items_valueId

"The value of the input parameter as a basic type."
scalar query_resourceById_oneOf_134_input_items_valueInstant

"The value of the input parameter as a basic type."
scalar query_resourceById_oneOf_134_input_items_valueInteger

"The value of the input parameter as a basic type."
scalar query_resourceById_oneOf_134_input_items_valueMarkdown

"The value of the input parameter as a basic type."
scalar query_resourceById_oneOf_134_input_items_valueOid

"The value of the input parameter as a basic type."
scalar query_resourceById_oneOf_134_input_items_valuePositiveInt

"The value of the input parameter as a basic type."
scalar query_resourceById_oneOf_134_input_items_valueString

"The value of the input parameter as a basic type."
scalar query_resourceById_oneOf_134_input_items_valueTime

"The value of the input parameter as a basic type."
scalar query_resourceById_oneOf_134_input_items_valueUnsignedInt

"The value of the input parameter as a basic type."
scalar query_resourceById_oneOf_134_input_items_valueUri

"The value of the input parameter as a basic type."
scalar query_resourceById_oneOf_134_input_items_valueUrl

"The value of the input parameter as a basic type."
scalar query_resourceById_oneOf_134_input_items_valueUuid

"A task to be performed."
type Task_Output {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: CodeableConcept!
  valueBase64Binary: query_resourceById_oneOf_134_output_items_valueBase64Binary
  _valueBase64Binary: Element
  "The value of the Output parameter as a basic type."
  valueBoolean: Boolean
  _valueBoolean: Element
  valueCanonical: query_resourceById_oneOf_134_output_items_valueCanonical
  _valueCanonical: Element
  valueCode: query_resourceById_oneOf_134_output_items_valueCode
  _valueCode: Element
  valueDate: query_resourceById_oneOf_134_output_items_valueDate
  _valueDate: Element
  valueDateTime: query_resourceById_oneOf_134_output_items_valueDateTime
  _valueDateTime: Element
  valueDecimal: query_resourceById_oneOf_134_output_items_valueDecimal
  _valueDecimal: Element
  valueId: query_resourceById_oneOf_134_output_items_valueId
  _valueId: Element
  valueInstant: query_resourceById_oneOf_134_output_items_valueInstant
  _valueInstant: Element
  valueInteger: query_resourceById_oneOf_134_output_items_valueInteger
  _valueInteger: Element
  valueMarkdown: query_resourceById_oneOf_134_output_items_valueMarkdown
  _valueMarkdown: Element
  valueOid: query_resourceById_oneOf_134_output_items_valueOid
  _valueOid: Element
  valuePositiveInt: query_resourceById_oneOf_134_output_items_valuePositiveInt
  _valuePositiveInt: Element
  valueString: query_resourceById_oneOf_134_output_items_valueString
  _valueString: Element
  valueTime: query_resourceById_oneOf_134_output_items_valueTime
  _valueTime: Element
  valueUnsignedInt: query_resourceById_oneOf_134_output_items_valueUnsignedInt
  _valueUnsignedInt: Element
  valueUri: query_resourceById_oneOf_134_output_items_valueUri
  _valueUri: Element
  valueUrl: query_resourceById_oneOf_134_output_items_valueUrl
  _valueUrl: Element
  valueUuid: query_resourceById_oneOf_134_output_items_valueUuid
  _valueUuid: Element
  valueAddress: Address
  valueAge: Age
  valueAnnotation: Annotation
  valueAttachment: Attachment
  valueCodeableConcept: CodeableConcept
  valueCoding: Coding
  valueContactPoint: ContactPoint
  valueCount: Count
  valueDistance: Distance
  valueDuration: Duration
  valueHumanName: HumanName
  valueIdentifier: Identifier
  valueMoney: Money
  valuePeriod: Period
  valueQuantity: Quantity
  valueRange: Range
  valueRatio: Ratio
  valueReference: Reference
  valueSampledData: SampledData
  valueSignature: Signature
  valueTiming: Timing
  valueContactDetail: ContactDetail
  valueContributor: Contributor
  valueDataRequirement: DataRequirement
  valueExpression: Expression
  valueParameterDefinition: ParameterDefinition
  valueRelatedArtifact: RelatedArtifact
  valueTriggerDefinition: TriggerDefinition
  valueUsageContext: UsageContext
  valueDosage: Dosage
  valueMeta: Meta
}

"The value of the Output parameter as a basic type."
scalar query_resourceById_oneOf_134_output_items_valueBase64Binary

"The value of the Output parameter as a basic type."
scalar query_resourceById_oneOf_134_output_items_valueCanonical

"The value of the Output parameter as a basic type."
scalar query_resourceById_oneOf_134_output_items_valueCode

"The value of the Output parameter as a basic type."
scalar query_resourceById_oneOf_134_output_items_valueDate

"The value of the Output parameter as a basic type."
scalar query_resourceById_oneOf_134_output_items_valueDateTime

"The value of the Output parameter as a basic type."
scalar query_resourceById_oneOf_134_output_items_valueDecimal

"The value of the Output parameter as a basic type."
scalar query_resourceById_oneOf_134_output_items_valueId

"The value of the Output parameter as a basic type."
scalar query_resourceById_oneOf_134_output_items_valueInstant

"The value of the Output parameter as a basic type."
scalar query_resourceById_oneOf_134_output_items_valueInteger

"The value of the Output parameter as a basic type."
scalar query_resourceById_oneOf_134_output_items_valueMarkdown

"The value of the Output parameter as a basic type."
scalar query_resourceById_oneOf_134_output_items_valueOid

"The value of the Output parameter as a basic type."
scalar query_resourceById_oneOf_134_output_items_valuePositiveInt

"The value of the Output parameter as a basic type."
scalar query_resourceById_oneOf_134_output_items_valueString

"The value of the Output parameter as a basic type."
scalar query_resourceById_oneOf_134_output_items_valueTime

"The value of the Output parameter as a basic type."
scalar query_resourceById_oneOf_134_output_items_valueUnsignedInt

"The value of the Output parameter as a basic type."
scalar query_resourceById_oneOf_134_output_items_valueUri

"The value of the Output parameter as a basic type."
scalar query_resourceById_oneOf_134_output_items_valueUrl

"The value of the Output parameter as a basic type."
scalar query_resourceById_oneOf_134_output_items_valueUuid

"A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation."
type TerminologyCapabilities {
  resourceType: TerminologyCapabilities_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  url: uri
  _url: Element
  version: string
  _version: Element
  name: string
  _name: Element
  title: string
  _title: Element
  status: code
  _status: Element
  experimental: boolean
  _experimental: Element
  date: dateTime
  _date: Element
  publisher: string
  _publisher: Element
  "Contact details to assist a user in finding and communicating with the publisher."
  contact: [ContactDetail]
  description: markdown
  _description: Element
  "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate terminology capabilities instances."
  useContext: [UsageContext]
  "A legal or geographic region in which the terminology capabilities is intended to be used."
  jurisdiction: [CodeableConcept]
  purpose: markdown
  _purpose: Element
  copyright: markdown
  _copyright: Element
  kind: code
  _kind: Element
  software: TerminologyCapabilities_Software
  implementation: TerminologyCapabilities_Implementation
  lockedDate: boolean
  _lockedDate: Element
  "Identifies a code system that is supported by the server. If there is a no code system URL, then this declares the general assumptions a client can make about support for any CodeSystem resource."
  codeSystem: [TerminologyCapabilities_CodeSystem]
  expansion: TerminologyCapabilities_Expansion
  codeSearch: code
  _codeSearch: Element
  validateCode: TerminologyCapabilities_ValidateCode
  translation: TerminologyCapabilities_Translation
  closure: TerminologyCapabilities_Closure
}

enum TerminologyCapabilities_const {
  TerminologyCapabilities
}

"A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation."
type TerminologyCapabilities_Software {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  name: string
  _name: Element
  version: string
  _version: Element
}

"A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation."
type TerminologyCapabilities_Implementation {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  description: string
  _description: Element
  url: url
  _url: Element
}

"A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation."
type TerminologyCapabilities_CodeSystem {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  uri: canonical
  "For the code system, a list of versions that are supported by the server."
  version: [TerminologyCapabilities_Version]
  subsumption: boolean
  _subsumption: Element
}

"A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation."
type TerminologyCapabilities_Version {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  code: string
  _code: Element
  isDefault: boolean
  _isDefault: Element
  compositional: boolean
  _compositional: Element
  "Language Displays supported."
  language: [code]
  "Extensions for language"
  _language: [Element]
  "Filter Properties supported."
  filter: [TerminologyCapabilities_Filter]
  "Properties supported for $lookup."
  property: [code]
  "Extensions for property"
  _property: [Element]
}

"A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation."
type TerminologyCapabilities_Filter {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  code: code
  _code: Element
  "Operations supported for the property."
  op: [code]
  "Extensions for op"
  _op: [Element]
}

"A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation."
type TerminologyCapabilities_Expansion {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  hierarchical: boolean
  _hierarchical: Element
  paging: boolean
  _paging: Element
  incomplete: boolean
  _incomplete: Element
  "Supported expansion parameter."
  parameter: [TerminologyCapabilities_Parameter]
  textFilter: markdown
  _textFilter: Element
}

"A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation."
type TerminologyCapabilities_Parameter {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  name: code
  _name: Element
  documentation: string
  _documentation: Element
}

"A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation."
type TerminologyCapabilities_ValidateCode {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  translations: boolean
  _translations: Element
}

"A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation."
type TerminologyCapabilities_Translation {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  needsMap: boolean
  _needsMap: Element
}

"A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation."
type TerminologyCapabilities_Closure {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  translation: boolean
  _translation: Element
}

"A summary of information based on the results of executing a TestScript."
type TestReport {
  resourceType: TestReport_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  identifier: Identifier
  name: string
  _name: Element
  status: code
  _status: Element
  testScript: Reference!
  result: code
  _result: Element
  score: decimal
  _score: Element
  tester: string
  _tester: Element
  issued: dateTime
  _issued: Element
  "A participant in the test execution, either the execution engine, a client, or a server."
  participant: [TestReport_Participant]
  setup: TestReport_Setup
  "A test executed from the test script."
  test: [TestReport_Test]
  teardown: TestReport_Teardown
}

enum TestReport_const {
  TestReport
}

"A summary of information based on the results of executing a TestScript."
type TestReport_Participant {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: code
  _type: Element
  uri: uri
  _uri: Element
  display: string
  _display: Element
}

"A summary of information based on the results of executing a TestScript."
type TestReport_Setup {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Action would contain either an operation or an assertion."
  action: [TestReport_Action]!
}

"A summary of information based on the results of executing a TestScript."
type TestReport_Action {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  operation: TestReport_Operation
  assert: TestReport_Assert
}

"A summary of information based on the results of executing a TestScript."
type TestReport_Operation {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  result: code
  _result: Element
  message: markdown
  _message: Element
  detail: uri
  _detail: Element
}

"A summary of information based on the results of executing a TestScript."
type TestReport_Assert {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  result: code
  _result: Element
  message: markdown
  _message: Element
  detail: string
  _detail: Element
}

"A summary of information based on the results of executing a TestScript."
type TestReport_Test {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  name: string
  _name: Element
  description: string
  _description: Element
  "Action would contain either an operation or an assertion."
  action: [TestReport_Action1]!
}

"A summary of information based on the results of executing a TestScript."
type TestReport_Action1 {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  operation: TestReport_Operation
  assert: TestReport_Assert
}

"A summary of information based on the results of executing a TestScript."
type TestReport_Teardown {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "The teardown action will only contain an operation."
  action: [TestReport_Action2]!
}

"A summary of information based on the results of executing a TestScript."
type TestReport_Action2 {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  operation: TestReport_Operation!
}

"A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification."
type TestScript {
  resourceType: TestScript_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  url: uri
  _url: Element
  identifier: Identifier
  version: string
  _version: Element
  name: string
  _name: Element
  title: string
  _title: Element
  status: code
  _status: Element
  experimental: boolean
  _experimental: Element
  date: dateTime
  _date: Element
  publisher: string
  _publisher: Element
  "Contact details to assist a user in finding and communicating with the publisher."
  contact: [ContactDetail]
  description: markdown
  _description: Element
  "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate test script instances."
  useContext: [UsageContext]
  "A legal or geographic region in which the test script is intended to be used."
  jurisdiction: [CodeableConcept]
  purpose: markdown
  _purpose: Element
  copyright: markdown
  _copyright: Element
  "An abstract server used in operations within this test script in the origin element."
  origin: [TestScript_Origin]
  "An abstract server used in operations within this test script in the destination element."
  destination: [TestScript_Destination]
  metadata: TestScript_Metadata
  "Fixture in the test script - by reference (uri). All fixtures are required for the test script to execute."
  fixture: [TestScript_Fixture]
  "Reference to the profile to be used for validation."
  profile: [Reference]
  "Variable is set based either on element value in response body or on header field value in the response headers."
  variable: [TestScript_Variable]
  setup: TestScript_Setup
  "A test in this script."
  test: [TestScript_Test]
  teardown: TestScript_Teardown
}

enum TestScript_const {
  TestScript
}

"A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification."
type TestScript_Origin {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  index: integer
  _index: Element
  profile: Coding!
}

"A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification."
type TestScript_Destination {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  index: integer
  _index: Element
  profile: Coding!
}

"A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification."
type TestScript_Metadata {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "A link to the FHIR specification that this test is covering."
  link: [TestScript_Link]
  "Capabilities that must exist and are assumed to function correctly on the FHIR server being tested."
  capability: [TestScript_Capability]!
}

"A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification."
type TestScript_Link {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  url: uri
  _url: Element
  description: string
  _description: Element
}

"A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification."
type TestScript_Capability {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  required: boolean
  _required: Element
  validated: boolean
  _validated: Element
  description: string
  _description: Element
  "Which origin server these requirements apply to."
  origin: [integer]
  "Extensions for origin"
  _origin: [Element]
  destination: integer
  _destination: Element
  "Links to the FHIR specification that describes this interaction and the resources involved in more detail."
  link: [uri]
  "Extensions for link"
  _link: [Element]
  capabilities: canonical!
}

"A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification."
type TestScript_Fixture {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  autocreate: boolean
  _autocreate: Element
  autodelete: boolean
  _autodelete: Element
  resource: Reference
}

"A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification."
type TestScript_Variable {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  name: string
  _name: Element
  defaultValue: string
  _defaultValue: Element
  description: string
  _description: Element
  expression: string
  _expression: Element
  headerField: string
  _headerField: Element
  hint: string
  _hint: Element
  path: string
  _path: Element
  sourceId: id
  _sourceId: Element
}

"A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification."
type TestScript_Setup {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "Action would contain either an operation or an assertion."
  action: [TestScript_Action]!
}

"A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification."
type TestScript_Action {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  operation: TestScript_Operation
  assert: TestScript_Assert
}

"A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification."
type TestScript_Operation {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  type: Coding
  resource: code
  _resource: Element
  label: string
  _label: Element
  description: string
  _description: Element
  accept: code
  _accept: Element
  contentType: code
  _contentType: Element
  destination: integer
  _destination: Element
  encodeRequestUrl: boolean
  _encodeRequestUrl: Element
  method: code
  _method: Element
  origin: integer
  _origin: Element
  params: string
  _params: Element
  "Header elements would be used to set HTTP headers."
  requestHeader: [TestScript_RequestHeader]
  requestId: id
  _requestId: Element
  responseId: id
  _responseId: Element
  sourceId: id
  _sourceId: Element
  targetId: id
  _targetId: Element
  url: string
  _url: Element
}

"A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification."
type TestScript_RequestHeader {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  field: string
  _field: Element
  value: string
  _value: Element
}

"A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification."
type TestScript_Assert {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  label: string
  _label: Element
  description: string
  _description: Element
  direction: code
  _direction: Element
  compareToSourceId: string
  _compareToSourceId: Element
  compareToSourceExpression: string
  _compareToSourceExpression: Element
  compareToSourcePath: string
  _compareToSourcePath: Element
  contentType: code
  _contentType: Element
  expression: string
  _expression: Element
  headerField: string
  _headerField: Element
  minimumId: string
  _minimumId: Element
  navigationLinks: boolean
  _navigationLinks: Element
  operator: code
  _operator: Element
  path: string
  _path: Element
  requestMethod: code
  _requestMethod: Element
  requestURL: string
  _requestURL: Element
  resource: code
  _resource: Element
  response: code
  _response: Element
  responseCode: string
  _responseCode: Element
  sourceId: id
  _sourceId: Element
  validateProfileId: id
  _validateProfileId: Element
  value: string
  _value: Element
  warningOnly: boolean
  _warningOnly: Element
}

"A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification."
type TestScript_Test {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  name: string
  _name: Element
  description: string
  _description: Element
  "Action would contain either an operation or an assertion."
  action: [TestScript_Action1]!
}

"A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification."
type TestScript_Action1 {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  operation: TestScript_Operation
  assert: TestScript_Assert
}

"A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification."
type TestScript_Teardown {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "The teardown action will only contain an operation."
  action: [TestScript_Action2]!
}

"A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification."
type TestScript_Action2 {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  operation: TestScript_Operation!
}

"A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [CodeSystem](codesystem.html) definitions and their use in [coded elements](terminologies.html)."
type ValueSet {
  resourceType: ValueSet_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  url: uri
  _url: Element
  "A formal identifier that is used to identify this value set when it is represented in other formats, or referenced in a specification, model, design or an instance."
  identifier: [Identifier]
  version: string
  _version: Element
  name: string
  _name: Element
  title: string
  _title: Element
  status: code
  _status: Element
  experimental: boolean
  _experimental: Element
  date: dateTime
  _date: Element
  publisher: string
  _publisher: Element
  "Contact details to assist a user in finding and communicating with the publisher."
  contact: [ContactDetail]
  description: markdown
  _description: Element
  "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate value set instances."
  useContext: [UsageContext]
  "A legal or geographic region in which the value set is intended to be used."
  jurisdiction: [CodeableConcept]
  immutable: boolean
  _immutable: Element
  purpose: markdown
  _purpose: Element
  copyright: markdown
  _copyright: Element
  compose: ValueSet_Compose
  expansion: ValueSet_Expansion
}

enum ValueSet_const {
  ValueSet
}

"A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [CodeSystem](codesystem.html) definitions and their use in [coded elements](terminologies.html)."
type ValueSet_Compose {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  lockedDate: date
  _lockedDate: Element
  inactive: boolean
  _inactive: Element
  "Include one or more codes from a code system or other value set(s)."
  include: [ValueSet_Include]!
  "Exclude one or more codes from the value set based on code system filters and/or other value sets."
  exclude: [ValueSet_Include]
}

"A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [CodeSystem](codesystem.html) definitions and their use in [coded elements](terminologies.html)."
type ValueSet_Include {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  system: uri
  _system: Element
  version: string
  _version: Element
  "Specifies a concept to be included or excluded."
  concept: [ValueSet_Concept]
  "Select concepts by specify a matching criterion based on the properties (including relationships) defined by the system, or on filters defined by the system. If multiple filters are specified, they SHALL all be true."
  filter: [ValueSet_Filter]
  "Selects the concepts found in this value set (based on its value set definition). This is an absolute URI that is a reference to ValueSet.url.  If multiple value sets are specified this includes the union of the contents of all of the referenced value sets."
  valueSet: [canonical]
}

"A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [CodeSystem](codesystem.html) definitions and their use in [coded elements](terminologies.html)."
type ValueSet_Concept {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  code: code
  _code: Element
  display: string
  _display: Element
  "Additional representations for this concept when used in this value set - other languages, aliases, specialized purposes, used for particular purposes, etc."
  designation: [ValueSet_Designation]
}

"A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [CodeSystem](codesystem.html) definitions and their use in [coded elements](terminologies.html)."
type ValueSet_Designation {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  language: code
  _language: Element
  use: Coding
  value: string
  _value: Element
}

"A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [CodeSystem](codesystem.html) definitions and their use in [coded elements](terminologies.html)."
type ValueSet_Filter {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  property: code
  _property: Element
  op: code
  _op: Element
  value: string
  _value: Element
}

"A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [CodeSystem](codesystem.html) definitions and their use in [coded elements](terminologies.html)."
type ValueSet_Expansion {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  identifier: uri
  _identifier: Element
  timestamp: dateTime
  _timestamp: Element
  total: integer
  _total: Element
  offset: integer
  _offset: Element
  "A parameter that controlled the expansion process. These parameters may be used by users of expanded value sets to check whether the expansion is suitable for a particular purpose, or to pick the correct expansion."
  parameter: [ValueSet_Parameter]
  "The codes that are contained in the value set expansion."
  contains: [ValueSet_Contains]
}

"A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [CodeSystem](codesystem.html) definitions and their use in [coded elements](terminologies.html)."
type ValueSet_Parameter {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  name: string
  _name: Element
  valueString: query_resourceById_oneOf_138_expansion_parameter_items_valueString
  _valueString: Element
  "The value of the parameter."
  valueBoolean: Boolean
  _valueBoolean: Element
  valueInteger: query_resourceById_oneOf_138_expansion_parameter_items_valueInteger
  _valueInteger: Element
  valueDecimal: query_resourceById_oneOf_138_expansion_parameter_items_valueDecimal
  _valueDecimal: Element
  valueUri: query_resourceById_oneOf_138_expansion_parameter_items_valueUri
  _valueUri: Element
  valueCode: query_resourceById_oneOf_138_expansion_parameter_items_valueCode
  _valueCode: Element
  valueDateTime: query_resourceById_oneOf_138_expansion_parameter_items_valueDateTime
  _valueDateTime: Element
}

"The value of the parameter."
scalar query_resourceById_oneOf_138_expansion_parameter_items_valueString

"The value of the parameter."
scalar query_resourceById_oneOf_138_expansion_parameter_items_valueInteger

"The value of the parameter."
scalar query_resourceById_oneOf_138_expansion_parameter_items_valueDecimal

"The value of the parameter."
scalar query_resourceById_oneOf_138_expansion_parameter_items_valueUri

"The value of the parameter."
scalar query_resourceById_oneOf_138_expansion_parameter_items_valueCode

"The value of the parameter."
scalar query_resourceById_oneOf_138_expansion_parameter_items_valueDateTime

"A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [CodeSystem](codesystem.html) definitions and their use in [coded elements](terminologies.html)."
type ValueSet_Contains {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  system: uri
  _system: Element
  abstract: boolean
  _abstract: Element
  inactive: boolean
  _inactive: Element
  version: string
  _version: Element
  code: code
  _code: Element
  display: string
  _display: Element
  "Additional representations for this item - other languages, aliases, specialized purposes, used for particular purposes, etc. These are relevant when the conditions of the expansion do not fix to a single correct representation."
  designation: [ValueSet_Designation]
  "Other codes and entries contained under this entry in the hierarchy."
  contains: [ValueSet_Contains]
}

"Describes validation requirements, source(s), status and dates for one or more elements."
type VerificationResult {
  resourceType: VerificationResult_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "A resource that was validated."
  target: [Reference]
  "The fhirpath location(s) within the resource that was validated."
  targetLocation: [string]
  "Extensions for targetLocation"
  _targetLocation: [Element]
  need: CodeableConcept
  status: code
  _status: Element
  statusDate: dateTime
  _statusDate: Element
  validationType: CodeableConcept
  "The primary process by which the target is validated (edit check; value set; primary source; multiple sources; standalone; in context)."
  validationProcess: [CodeableConcept]
  frequency: Timing
  lastPerformed: dateTime
  _lastPerformed: Element
  nextScheduled: date
  _nextScheduled: Element
  failureAction: CodeableConcept
  "Information about the primary source(s) involved in validation."
  primarySource: [VerificationResult_PrimarySource]
  attestation: VerificationResult_Attestation
  "Information about the entity validating information."
  validator: [VerificationResult_Validator]
}

enum VerificationResult_const {
  VerificationResult
}

"Describes validation requirements, source(s), status and dates for one or more elements."
type VerificationResult_PrimarySource {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  who: Reference
  "Type of primary source (License Board; Primary Education; Continuing Education; Postal Service; Relationship owner; Registration Authority; legal source; issuing source; authoritative source)."
  type: [CodeableConcept]
  "Method for communicating with the primary source (manual; API; Push)."
  communicationMethod: [CodeableConcept]
  validationStatus: CodeableConcept
  validationDate: dateTime
  _validationDate: Element
  canPushUpdates: CodeableConcept
  "Type of alerts/updates the primary source can send (specific requested changes; any changes; as defined by source)."
  pushTypeAvailable: [CodeableConcept]
}

"Describes validation requirements, source(s), status and dates for one or more elements."
type VerificationResult_Attestation {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  who: Reference
  onBehalfOf: Reference
  communicationMethod: CodeableConcept
  date: date
  _date: Element
  sourceIdentityCertificate: string
  _sourceIdentityCertificate: Element
  proxyIdentityCertificate: string
  _proxyIdentityCertificate: Element
  proxySignature: Signature
  sourceSignature: Signature
}

"Describes validation requirements, source(s), status and dates for one or more elements."
type VerificationResult_Validator {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  organization: Reference!
  identityCertificate: string
  _identityCertificate: Element
  attestationSignature: Signature
}

"An authorization for the provision of glasses and/or contact lenses to a patient."
type VisionPrescription {
  resourceType: VisionPrescription_const!
  id: string
  meta: Meta
  implicitRules: uri
  _implicitRules: Element
  language: code
  _language: Element
  text: Narrative
  "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope."
  contained: [ResourceList]
  "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  "A unique identifier assigned to this vision prescription."
  identifier: [Identifier]
  status: code
  _status: Element
  created: dateTime
  _created: Element
  patient: Reference!
  encounter: Reference
  dateWritten: dateTime
  _dateWritten: Element
  prescriber: Reference!
  "Contain the details of  the individual lens specifications and serves as the authorization for the fullfillment by certified professionals."
  lensSpecification: [VisionPrescription_LensSpecification]!
}

enum VisionPrescription_const {
  VisionPrescription
}

"An authorization for the provision of glasses and/or contact lenses to a patient."
type VisionPrescription_LensSpecification {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  product: CodeableConcept!
  eye: code
  _eye: Element
  sphere: decimal
  _sphere: Element
  cylinder: decimal
  _cylinder: Element
  axis: integer
  _axis: Element
  "Allows for adjustment on two axis."
  prism: [VisionPrescription_Prism]
  add: decimal
  _add: Element
  power: decimal
  _power: Element
  backCurve: decimal
  _backCurve: Element
  diameter: decimal
  _diameter: Element
  duration: Quantity
  color: string
  _color: Element
  brand: string
  _brand: Element
  "Notes for special requirements such as coatings and lens materials."
  note: [Annotation]
}

"An authorization for the provision of glasses and/or contact lenses to a patient."
type VisionPrescription_Prism {
  id: string
  "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
  extension: [Extension]
  "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\\n\\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
  modifierExtension: [Extension]
  amount: decimal
  _amount: Element
  base: code
  _base: Element
}

scalar ResolveToSourceArgs"
`;
