{
  "Cities": {
    "spec": {
      "swagger": "2.0",
      "schemes": ["https"],
      "host": "wft-geo-db.p.rapidapi.com",
      "basePath": "/v1",
      "info": {
        "description": "The GeoDB API focuses on getting global city and region data. Easily obtain country, region, and city data for use\nin your apps! \n<ul>\n  <li>Filter cities by name prefix, country, location, time-zone, and even minimum population.</li>\n  <li>Sort cities by name, country code, elevation, and population - or any combination of these.</li> \n  <li>Get all country regions.</li> <li>Get all cities in a given region.</li>\n  <li>\n    Display results in multiple languages.</li> <li>RESTful API adheres to industry best-practices, including\n    HATEOAS-style links to facilitate paging results.\n  </li> \n  <li>Backed by cloud-based load-balanced infrastructure for resiliency and performance!</li>\n  <li>Data is periodically refreshed from GeoNames and WikiData.</li>\n</ul>\n<p>Notes:\n<ul>\n  <li>\n    Since the database is periodically updated, this may <strong>very rarely</strong> result in certain cities\n    being marked deleted (e.g., duplicates removed). By default, endpoints returning city data will exclude\n    cities marked deleted. However, in the unlikely event that this occurs while your app is paging through a set\n    of affected results - and you care about the paged results suddenly changing underneath - specify \n    <tt>includeDeleted=SINCE_YESTERDAY</tt> (or <tt>SINCE_LAST_WEEK</tt> if you're really paranoid!).\n  </li>\n</ul>\n<hr/>\n<h3>Useful Resources</h3>\n<ul>\n  <li>\n    SDKs\n    <ul>\n      <li>\n        <a href='https://www.npmjs.com/package/wft-geodb-angular-client'>Angular</a>, \n        <a href='https://github.com/wirefreethought/geodb-sample-angular-app'>Sample App</a>\n      </li>\n      <li><a href='https://github.com/wirefreethought/geodb-java-client'>Java</a></li>\n      <li><a href='https://www.npmjs.com/package/wft-geodb-js-client'>JavaScript</a></li>\n    </ul>\n    <li><a href='swagger.json'>Swagger Docs</a></li>\n    <li><a href='http://creativecommons.org/licenses/by/3.0/'>Usage License</a></li>\n  </li>      \n</ul>\n",
        "license": { "name": "Creative Commons Attribution 3.0", "url": "http://creativecommons.org/licenses/by/3.0/" },
        "title": "GeoDB Cities API",
        "version": "1.0.0",
        "x-apisguru-categories": ["developer_tools", "location"],
        "x-logo": {
          "backgroundColor": "#FFFFFF",
          "url": "https://api.apis.guru/v2/cache/logo/https_wirefreethought.github.io_geodb-cities-api-docs_images_logo.png"
        },
        "x-origin": [
          {
            "format": "swagger",
            "url": "https://wirefreethought.github.io/geodb-cities-api-docs/swagger.json",
            "version": "2.0"
          }
        ],
        "x-preferred": true,
        "x-providerName": "mashape.com",
        "x-serviceName": "geodb"
      },
      "produces": ["application/json"],
      "securityDefinitions": { "UserSecurity": { "in": "header", "name": "x-rapidapi-key", "type": "apiKey" } },
      "security": [{ "UserSecurity": [] }],
      "parameters": {
        "path.cityId": {
          "description": "A city id (either native 'id' or 'wikiDataId')",
          "in": "path",
          "name": "cityId",
          "required": true,
          "type": "string"
        },
        "path.countryId": {
          "description": "An ISO-3166 country code or WikiData id",
          "in": "path",
          "name": "countryId",
          "required": true,
          "type": "string"
        },
        "path.divisionId": {
          "description": "An admin-division id (either native 'id' or 'wikiDataId')",
          "in": "path",
          "name": "divisionId",
          "required": true,
          "type": "string"
        },
        "path.location.id": {
          "description": "A latitude/longitude in ISO-6709 format: ±DD.DDDD±DDD.DDDD",
          "in": "path",
          "name": "locationId",
          "required": true,
          "type": "string"
        },
        "path.regionCode": {
          "description": "An ISO-3166 or FIPS region code",
          "in": "path",
          "name": "regionCode",
          "required": true,
          "type": "string"
        },
        "path.zoneId": {
          "description": "A time-zone id",
          "in": "path",
          "name": "zoneId",
          "required": true,
          "type": "string"
        },
        "query.asciiMode": {
          "default": false,
          "description": "Display results using ASCII characters",
          "in": "query",
          "name": "asciiMode",
          "required": false,
          "type": "boolean"
        },
        "query.country.currencyCode": {
          "description": "Only countries supporting this currency",
          "in": "query",
          "name": "currencyCode",
          "required": false,
          "type": "string"
        },
        "query.currency.countryId": {
          "description": "Currencies for this country id",
          "in": "query",
          "name": "countryId",
          "required": true,
          "type": "string"
        },
        "query.distanceUnit": {
          "default": "MI",
          "description": "The unit of distance: MI | KM",
          "in": "query",
          "name": "distanceUnit",
          "required": false,
          "type": "string"
        },
        "query.entity.namePrefix": {
          "description": "Only entities whose names start with this prefix. If languageCode is set, the prefix will be matched on the name\nas it appears in that language.\n",
          "in": "query",
          "name": "namePrefix",
          "required": false,
          "type": "string"
        },
        "query.hateoasMode": {
          "default": true,
          "description": "Include HATEOAS-style links in results",
          "in": "query",
          "name": "hateoasMode",
          "required": false,
          "type": "boolean"
        },
        "query.includeDeleted": {
          "default": "NONE",
          "description": "Whether to include any divisions marked deleted: ALL | SINCE_YESTERDAY | SINCE_LAST_WEEK | NONE",
          "in": "query",
          "name": "includeDeleted",
          "required": false,
          "type": "string"
        },
        "query.languageCode": {
          "description": "Display results in this language",
          "in": "query",
          "name": "languageCode",
          "required": false,
          "type": "string"
        },
        "query.limit": {
          "default": 10,
          "description": "The maximum number of results to retrieve",
          "format": "int32",
          "in": "query",
          "name": "limit",
          "required": false,
          "type": "integer"
        },
        "query.offset": {
          "default": 0,
          "description": "The zero-ary offset index into the results",
          "format": "int32",
          "in": "query",
          "name": "offset",
          "required": false,
          "type": "integer"
        },
        "query.place.countryIds": {
          "description": "Only places in these countries (comma-delimited country codes or WikiData ids)",
          "in": "query",
          "name": "countryIds",
          "required": false,
          "type": "string"
        },
        "query.place.excludedCountryIds": {
          "description": "Only places NOT in these countries (comma-delimited country codes or WikiData ids)",
          "in": "query",
          "name": "excludedCountryIds",
          "required": false,
          "type": "string"
        },
        "query.place.location.id": {
          "description": "Only places near this location. Latitude/longitude in ISO-6709 format: ±DD.DDDD±DDD.DDDD",
          "in": "query",
          "name": "location",
          "required": false,
          "type": "string"
        },
        "query.place.location.radiusOf": {
          "description": "The location radius within which to find places",
          "format": "int32",
          "in": "query",
          "name": "radius",
          "required": false,
          "type": "integer"
        },
        "query.place.maxPopulation": {
          "description": "Only places having no more than this population",
          "format": "int32",
          "in": "query",
          "name": "maxPopulation",
          "required": false,
          "type": "integer"
        },
        "query.place.minPopulation": {
          "description": "Only places having at least this population",
          "format": "int32",
          "in": "query",
          "name": "minPopulation",
          "required": false,
          "type": "integer"
        },
        "query.place.sort": {
          "description": "How to sort place results. \n'Format: ±SORT_FIELD,±SORT_FIELD' \nwhere SORT_FIELD = countryCode | elevation | name | population\n",
          "in": "query",
          "name": "sort",
          "required": false,
          "type": "string"
        },
        "query.place.sort.withinRegion": {
          "description": "How to sort place results. \n'Format: ±SORT_FIELD,±SORT_FIELD' \nwhere SORT_FIELD = elevation | name | population\n",
          "in": "query",
          "name": "sort",
          "required": false,
          "type": "string"
        },
        "query.place.types": {
          "description": "Only places for these types (comma-delimited): CITY | ADM2",
          "in": "query",
          "name": "types",
          "required": false,
          "type": "string"
        },
        "query.sort": {
          "description": "How to sort place results. \n'Format: ±SORT_FIELD,±SORT_FIELD' \nwhere SORT_FIELD = countryCode | elevation | name | population\n",
          "in": "query",
          "name": "sort",
          "required": false,
          "type": "string"
        },
        "query.timeZoneIds": {
          "description": "Only places in these time-zones (comma-delimited)",
          "in": "query",
          "name": "timeZoneIds",
          "required": false,
          "type": "string"
        },
        "query.toCityId": {
          "description": "Distance to this city",
          "in": "query",
          "name": "toCityId",
          "required": true,
          "type": "string"
        }
      },
      "responses": {
        "BadRequest": { "description": "400 - Bad Request", "schema": { "$ref": "#/definitions/BadRequestResponse" } },
        "Countries": { "description": "A list of countries", "schema": { "$ref": "#/definitions/CountriesResponse" } },
        "Country": { "description": "Country detail", "schema": { "$ref": "#/definitions/CountryResponse" } },
        "Currencies": {
          "description": "A list of currencies",
          "schema": { "$ref": "#/definitions/CurrenciesResponse" }
        },
        "DateTime": { "description": "An ISO-6801 date-time", "schema": { "$ref": "#/definitions/DateTimeResponse" } },
        "Distance": {
          "description": "A decimal distance (in miles or kilometers)",
          "schema": { "$ref": "#/definitions/DistanceResponse" }
        },
        "Forbidden": { "description": "403 - Forbidden", "schema": { "$ref": "#/definitions/ForbiddenResponse" } },
        "Languages": {
          "description": "A list of languages supported by the system",
          "schema": { "$ref": "#/definitions/LanguagesResponse" }
        },
        "Locales": { "description": "A list of locales", "schema": { "$ref": "#/definitions/LocalesResponse" } },
        "NotFound": { "description": "404 - Not Found", "schema": { "$ref": "#/definitions/NotFoundResponse" } },
        "PopulatedPlace": {
          "description": "Populated-place details",
          "schema": { "$ref": "#/definitions/PopulatedPlaceResponse" }
        },
        "PopulatedPlaces": {
          "description": "A list of populated places",
          "schema": { "$ref": "#/definitions/PopulatedPlacesResponse" }
        },
        "Region": { "description": "Country region details", "schema": { "$ref": "#/definitions/RegionResponse" } },
        "Regions": {
          "description": "A list of country regions",
          "schema": { "$ref": "#/definitions/RegionsResponse" }
        },
        "Time": { "description": "An ISO-8601 time response", "schema": { "$ref": "#/definitions/TimeResponse" } },
        "TimeZones": { "description": "A list of time-zones", "schema": { "$ref": "#/definitions/TimeZonesResponse" } },
        "Unauthorized": { "description": "401 - Unauthorized" }
      },
      "tags": [
        { "description": "Geo Endpoints", "name": "Geo" },
        { "description": "Locale Endpoints", "name": "Locale" }
      ],
      "paths": {
        "/geo/adminDivisions": {
          "get": {
            "consumes": ["application/json"],
            "description": "Find administrative divisions, filtering by optional criteria. If no criteria are set, you will get back all\nknown divisions.\n",
            "operationId": "findAdminDivisionsUsingGET",
            "parameters": [
              { "$ref": "#/parameters/query.place.location.id" },
              { "$ref": "#/parameters/query.place.location.radiusOf" },
              { "$ref": "#/parameters/query.distanceUnit" },
              { "$ref": "#/parameters/query.place.countryIds" },
              { "$ref": "#/parameters/query.place.excludedCountryIds" },
              { "$ref": "#/parameters/query.place.minPopulation" },
              { "$ref": "#/parameters/query.place.maxPopulation" },
              { "$ref": "#/parameters/query.entity.namePrefix" },
              { "$ref": "#/parameters/query.timeZoneIds" },
              { "$ref": "#/parameters/query.asciiMode" },
              { "$ref": "#/parameters/query.hateoasMode" },
              { "$ref": "#/parameters/query.languageCode" },
              { "$ref": "#/parameters/query.limit" },
              { "$ref": "#/parameters/query.offset" },
              { "$ref": "#/parameters/query.place.sort" },
              { "$ref": "#/parameters/query.includeDeleted" }
            ],
            "produces": ["application/json"],
            "responses": {
              "200": { "$ref": "#/responses/PopulatedPlaces" },
              "400": { "$ref": "#/responses/BadRequest" },
              "401": { "$ref": "#/responses/Unauthorized" },
              "403": { "$ref": "#/responses/Forbidden" }
            },
            "summary": "Find administrative divisions",
            "tags": ["Geo"]
          }
        },
        "/geo/adminDivisions/{divisionId}": {
          "get": {
            "consumes": ["application/json"],
            "description": "Get the details for a specific administrative division, including location coordinates, population, and\nelevation above sea-level (if available).\n",
            "operationId": "getAdminDivisionUsingGET",
            "parameters": [
              { "$ref": "#/parameters/path.divisionId" },
              { "$ref": "#/parameters/query.asciiMode" },
              { "$ref": "#/parameters/query.languageCode" }
            ],
            "produces": ["application/json"],
            "responses": {
              "200": { "$ref": "#/responses/PopulatedPlace" },
              "400": { "$ref": "#/responses/BadRequest" },
              "401": { "$ref": "#/responses/Unauthorized" },
              "403": { "$ref": "#/responses/Forbidden" },
              "404": { "$ref": "#/responses/NotFound" }
            },
            "summary": "Get administrative division details",
            "tags": ["Geo"]
          }
        },
        "/geo/adminDivisions/{divisionId}/nearbyCities": {
          "get": {
            "consumes": ["application/json"],
            "description": "Find cities near the given administrative division, filtering by optional criteria. If no criteria are set, you\nwill get back all known cities.\n",
            "operationId": "findCitiesNearAdminDivisionUsingGET",
            "parameters": [
              { "$ref": "#/parameters/path.divisionId" },
              { "$ref": "#/parameters/query.place.location.radiusOf" },
              { "$ref": "#/parameters/query.distanceUnit" },
              { "$ref": "#/parameters/query.place.countryIds" },
              { "$ref": "#/parameters/query.place.excludedCountryIds" },
              { "$ref": "#/parameters/query.place.minPopulation" },
              { "$ref": "#/parameters/query.place.maxPopulation" },
              { "$ref": "#/parameters/query.entity.namePrefix" },
              { "$ref": "#/parameters/query.timeZoneIds" },
              { "$ref": "#/parameters/query.place.types" },
              { "$ref": "#/parameters/query.asciiMode" },
              { "$ref": "#/parameters/query.hateoasMode" },
              { "$ref": "#/parameters/query.languageCode" },
              { "$ref": "#/parameters/query.limit" },
              { "$ref": "#/parameters/query.offset" },
              { "$ref": "#/parameters/query.place.sort" },
              { "$ref": "#/parameters/query.includeDeleted" }
            ],
            "produces": ["application/json"],
            "responses": {
              "200": { "$ref": "#/responses/PopulatedPlaces" },
              "400": { "$ref": "#/responses/BadRequest" },
              "401": { "$ref": "#/responses/Unauthorized" },
              "403": { "$ref": "#/responses/Forbidden" },
              "404": { "$ref": "#/responses/NotFound" }
            },
            "summary": "Find cities near division",
            "tags": ["Geo"]
          }
        },
        "/geo/adminDivisions/{divisionId}/nearbyDivisions": {
          "get": {
            "consumes": ["application/json"],
            "description": "Find administrative divisions near the given origin division, filtering by optional criteria. If no criteria\nare set, you will get back all known divisions.\n",
            "operationId": "findDivisionsNearAdminDivisionUsingGET",
            "parameters": [
              { "$ref": "#/parameters/path.divisionId" },
              { "$ref": "#/parameters/query.place.location.radiusOf" },
              { "$ref": "#/parameters/query.distanceUnit" },
              { "$ref": "#/parameters/query.place.countryIds" },
              { "$ref": "#/parameters/query.place.excludedCountryIds" },
              { "$ref": "#/parameters/query.place.minPopulation" },
              { "$ref": "#/parameters/query.place.maxPopulation" },
              { "$ref": "#/parameters/query.entity.namePrefix" },
              { "$ref": "#/parameters/query.timeZoneIds" },
              { "$ref": "#/parameters/query.asciiMode" },
              { "$ref": "#/parameters/query.hateoasMode" },
              { "$ref": "#/parameters/query.languageCode" },
              { "$ref": "#/parameters/query.limit" },
              { "$ref": "#/parameters/query.offset" },
              { "$ref": "#/parameters/query.place.sort" },
              { "$ref": "#/parameters/query.includeDeleted" }
            ],
            "produces": ["application/json"],
            "responses": {
              "200": { "$ref": "#/responses/PopulatedPlaces" },
              "400": { "$ref": "#/responses/BadRequest" },
              "401": { "$ref": "#/responses/Unauthorized" },
              "403": { "$ref": "#/responses/Forbidden" },
              "404": { "$ref": "#/responses/NotFound" }
            },
            "summary": "Find divisions near division",
            "tags": ["Geo"]
          }
        },
        "/geo/cities": {
          "get": {
            "consumes": ["application/json"],
            "description": "Find cities, filtering by optional criteria. If no criteria are set, you will get back all known cities.\n",
            "operationId": "findCitiesUsingGET",
            "parameters": [
              { "$ref": "#/parameters/query.place.location.id" },
              { "$ref": "#/parameters/query.place.location.radiusOf" },
              { "$ref": "#/parameters/query.distanceUnit" },
              { "$ref": "#/parameters/query.place.countryIds" },
              { "$ref": "#/parameters/query.place.excludedCountryIds" },
              { "$ref": "#/parameters/query.place.minPopulation" },
              { "$ref": "#/parameters/query.place.maxPopulation" },
              { "$ref": "#/parameters/query.entity.namePrefix" },
              { "$ref": "#/parameters/query.timeZoneIds" },
              { "$ref": "#/parameters/query.place.types" },
              { "$ref": "#/parameters/query.asciiMode" },
              { "$ref": "#/parameters/query.hateoasMode" },
              { "$ref": "#/parameters/query.languageCode" },
              { "$ref": "#/parameters/query.limit" },
              { "$ref": "#/parameters/query.offset" },
              { "$ref": "#/parameters/query.place.sort" },
              { "$ref": "#/parameters/query.includeDeleted" }
            ],
            "produces": ["application/json"],
            "responses": {
              "200": { "$ref": "#/responses/PopulatedPlaces" },
              "400": { "$ref": "#/responses/BadRequest" },
              "401": { "$ref": "#/responses/Unauthorized" },
              "403": { "$ref": "#/responses/Forbidden" }
            },
            "summary": "Find cities",
            "tags": ["Geo"]
          }
        },
        "/geo/cities/{cityId}": {
          "get": {
            "consumes": ["application/json"],
            "description": "Get the details for a specific city, including location coordinates, population, and elevation above sea-level\n(if available).\n",
            "operationId": "getCityUsingGET",
            "parameters": [
              { "$ref": "#/parameters/path.cityId" },
              { "$ref": "#/parameters/query.asciiMode" },
              { "$ref": "#/parameters/query.languageCode" }
            ],
            "produces": ["application/json"],
            "responses": {
              "200": { "$ref": "#/responses/PopulatedPlace" },
              "400": { "$ref": "#/responses/BadRequest" },
              "401": { "$ref": "#/responses/Unauthorized" },
              "403": { "$ref": "#/responses/Forbidden" },
              "404": { "$ref": "#/responses/NotFound" }
            },
            "summary": "Get city details",
            "tags": ["Geo"]
          }
        },
        "/geo/cities/{cityId}/dateTime": {
          "get": {
            "consumes": ["application/json"],
            "description": "Get city date-time",
            "operationId": "getCityDateTimeUsingGET",
            "parameters": [{ "$ref": "#/parameters/path.cityId" }],
            "produces": ["application/json"],
            "responses": {
              "200": { "$ref": "#/responses/DateTime" },
              "400": { "$ref": "#/responses/BadRequest" },
              "401": { "$ref": "#/responses/Unauthorized" },
              "403": { "$ref": "#/responses/Forbidden" },
              "404": { "$ref": "#/responses/NotFound" }
            },
            "summary": "Get city date-time",
            "tags": ["Geo"]
          }
        },
        "/geo/cities/{cityId}/distance": {
          "get": {
            "consumes": ["application/json"],
            "description": "Get distance from the given city",
            "operationId": "getCityDistanceUsingGET",
            "parameters": [
              { "$ref": "#/parameters/path.cityId" },
              { "$ref": "#/parameters/query.toCityId" },
              { "$ref": "#/parameters/query.distanceUnit" }
            ],
            "produces": ["application/json"],
            "responses": {
              "200": { "$ref": "#/responses/Distance" },
              "400": { "$ref": "#/responses/BadRequest" },
              "401": { "$ref": "#/responses/Unauthorized" },
              "403": { "$ref": "#/responses/Forbidden" },
              "404": { "$ref": "#/responses/NotFound" }
            },
            "summary": "Get city distance",
            "tags": ["Geo"]
          }
        },
        "/geo/cities/{cityId}/locatedIn": {
          "get": {
            "consumes": ["application/json"],
            "description": "Get the details for the containing populated place (e.g., its county or other administrative division), including location coordinates, population, and elevation above sea-level\n(if available).\n",
            "operationId": "getCityLocatedInUsingGET",
            "parameters": [
              { "$ref": "#/parameters/path.cityId" },
              { "$ref": "#/parameters/query.asciiMode" },
              { "$ref": "#/parameters/query.languageCode" }
            ],
            "produces": ["application/json"],
            "responses": {
              "200": { "$ref": "#/responses/PopulatedPlace" },
              "400": { "$ref": "#/responses/BadRequest" },
              "401": { "$ref": "#/responses/Unauthorized" },
              "403": { "$ref": "#/responses/Forbidden" },
              "404": { "$ref": "#/responses/NotFound" }
            },
            "summary": "Get city admin region",
            "tags": ["Geo"]
          }
        },
        "/geo/cities/{cityId}/nearbyCities": {
          "get": {
            "consumes": ["application/json"],
            "description": "Find cities near the given origin city, filtering by optional criteria. If no criteria are set, you will get\nback all known cities.\n",
            "operationId": "findCitiesNearCityUsingGET",
            "parameters": [
              { "$ref": "#/parameters/path.cityId" },
              { "$ref": "#/parameters/query.place.location.radiusOf" },
              { "$ref": "#/parameters/query.distanceUnit" },
              { "$ref": "#/parameters/query.place.countryIds" },
              { "$ref": "#/parameters/query.place.excludedCountryIds" },
              { "$ref": "#/parameters/query.place.minPopulation" },
              { "$ref": "#/parameters/query.place.maxPopulation" },
              { "$ref": "#/parameters/query.entity.namePrefix" },
              { "$ref": "#/parameters/query.timeZoneIds" },
              { "$ref": "#/parameters/query.place.types" },
              { "$ref": "#/parameters/query.asciiMode" },
              { "$ref": "#/parameters/query.hateoasMode" },
              { "$ref": "#/parameters/query.languageCode" },
              { "$ref": "#/parameters/query.limit" },
              { "$ref": "#/parameters/query.offset" },
              { "$ref": "#/parameters/query.place.sort" },
              { "$ref": "#/parameters/query.includeDeleted" }
            ],
            "produces": ["application/json"],
            "responses": {
              "200": { "$ref": "#/responses/PopulatedPlaces" },
              "400": { "$ref": "#/responses/BadRequest" },
              "401": { "$ref": "#/responses/Unauthorized" },
              "403": { "$ref": "#/responses/Forbidden" },
              "404": { "$ref": "#/responses/NotFound" }
            },
            "summary": "Find cities near city",
            "tags": ["Geo"]
          }
        },
        "/geo/cities/{cityId}/time": {
          "get": {
            "consumes": ["application/json"],
            "description": "Get city time",
            "operationId": "getCityTimeUsingGET",
            "parameters": [{ "$ref": "#/parameters/path.cityId" }],
            "produces": ["application/json"],
            "responses": {
              "200": { "$ref": "#/responses/Time" },
              "400": { "$ref": "#/responses/BadRequest" },
              "401": { "$ref": "#/responses/Unauthorized" },
              "403": { "$ref": "#/responses/Forbidden" },
              "404": { "$ref": "#/responses/NotFound" }
            },
            "summary": "Get city time",
            "tags": ["Geo"]
          }
        },
        "/geo/countries": {
          "get": {
            "consumes": ["application/json"],
            "description": "Find countries, filtering by optional criteria. If no criteria are set, you will get back all known countries.\n",
            "operationId": "getCountriesUsingGET",
            "parameters": [
              { "$ref": "#/parameters/query.country.currencyCode" },
              { "$ref": "#/parameters/query.entity.namePrefix" },
              { "$ref": "#/parameters/query.asciiMode" },
              { "$ref": "#/parameters/query.hateoasMode" },
              { "$ref": "#/parameters/query.languageCode" },
              { "$ref": "#/parameters/query.limit" },
              { "$ref": "#/parameters/query.offset" }
            ],
            "produces": ["application/json"],
            "responses": {
              "200": { "$ref": "#/responses/Countries" },
              "400": { "$ref": "#/responses/BadRequest" },
              "401": { "$ref": "#/responses/Unauthorized" },
              "403": { "$ref": "#/responses/Forbidden" }
            },
            "summary": "Find countries",
            "tags": ["Geo"]
          }
        },
        "/geo/countries/{countryId}": {
          "get": {
            "consumes": ["application/json"],
            "description": "Get the details for a specific country, including number of regions.",
            "operationId": "getCountryUsingGET",
            "parameters": [
              { "$ref": "#/parameters/path.countryId" },
              { "$ref": "#/parameters/query.asciiMode" },
              { "$ref": "#/parameters/query.languageCode" }
            ],
            "produces": ["application/json"],
            "responses": {
              "200": { "$ref": "#/responses/Country" },
              "400": { "$ref": "#/responses/BadRequest" },
              "401": { "$ref": "#/responses/Unauthorized" },
              "403": { "$ref": "#/responses/Forbidden" },
              "404": { "$ref": "#/responses/NotFound" }
            },
            "summary": "Get country details",
            "tags": ["Geo"]
          }
        },
        "/geo/countries/{countryId}/regions": {
          "get": {
            "consumes": ["application/json"],
            "description": "Get all regions in a specific country. These could be states, provinces, districts, or otherwise major\npolitical divisions.\n",
            "operationId": "getRegionsUsingGET",
            "parameters": [
              { "$ref": "#/parameters/path.countryId" },
              { "$ref": "#/parameters/query.entity.namePrefix" },
              { "$ref": "#/parameters/query.asciiMode" },
              { "$ref": "#/parameters/query.hateoasMode" },
              { "$ref": "#/parameters/query.languageCode" },
              { "$ref": "#/parameters/query.limit" },
              { "$ref": "#/parameters/query.offset" }
            ],
            "produces": ["application/json"],
            "responses": {
              "200": { "$ref": "#/responses/Regions" },
              "400": { "$ref": "#/responses/BadRequest" },
              "401": { "$ref": "#/responses/Unauthorized" },
              "403": { "$ref": "#/responses/Forbidden" },
              "404": { "$ref": "#/responses/NotFound" }
            },
            "summary": "Find country regions",
            "tags": ["Geo"]
          }
        },
        "/geo/countries/{countryId}/regions/{regionCode}": {
          "get": {
            "consumes": ["application/json"],
            "description": "Get the details of a specific country region, including number of cities.",
            "operationId": "getRegionUsingGET",
            "parameters": [
              { "$ref": "#/parameters/path.countryId" },
              { "$ref": "#/parameters/path.regionCode" },
              { "$ref": "#/parameters/query.asciiMode" },
              { "$ref": "#/parameters/query.languageCode" }
            ],
            "produces": ["application/json"],
            "responses": {
              "200": { "$ref": "#/responses/Region" },
              "400": { "$ref": "#/responses/BadRequest" },
              "401": { "$ref": "#/responses/Unauthorized" },
              "403": { "$ref": "#/responses/Forbidden" },
              "404": { "$ref": "#/responses/NotFound" }
            },
            "summary": "Get region details",
            "tags": ["Geo"]
          }
        },
        "/geo/countries/{countryId}/regions/{regionCode}/adminDivisions": {
          "get": {
            "consumes": ["application/json"],
            "description": "Get the administrative divisions in a specific country region. The country and region info is omitted in the\nresponse.\n",
            "operationId": "findRegionDivisionsUsingGET",
            "parameters": [
              { "$ref": "#/parameters/path.countryId" },
              { "$ref": "#/parameters/path.regionCode" },
              { "$ref": "#/parameters/query.place.minPopulation" },
              { "$ref": "#/parameters/query.place.maxPopulation" },
              { "$ref": "#/parameters/query.entity.namePrefix" },
              { "$ref": "#/parameters/query.timeZoneIds" },
              { "$ref": "#/parameters/query.asciiMode" },
              { "$ref": "#/parameters/query.hateoasMode" },
              { "$ref": "#/parameters/query.languageCode" },
              { "$ref": "#/parameters/query.limit" },
              { "$ref": "#/parameters/query.offset" },
              { "$ref": "#/parameters/query.place.sort.withinRegion" },
              { "$ref": "#/parameters/query.includeDeleted" }
            ],
            "produces": ["application/json"],
            "responses": {
              "200": { "$ref": "#/responses/PopulatedPlaces" },
              "400": { "$ref": "#/responses/BadRequest" },
              "401": { "$ref": "#/responses/Unauthorized" },
              "403": { "$ref": "#/responses/Forbidden" },
              "404": { "$ref": "#/responses/NotFound" }
            },
            "summary": "Find country region administrative divisions",
            "tags": ["Geo"]
          }
        },
        "/geo/countries/{countryId}/regions/{regionCode}/cities": {
          "get": {
            "consumes": ["application/json"],
            "description": "Get the cities in a specific country region. The country and region info is omitted in the response.\n",
            "operationId": "findRegionCitiesUsingGET",
            "parameters": [
              { "$ref": "#/parameters/path.countryId" },
              { "$ref": "#/parameters/path.regionCode" },
              { "$ref": "#/parameters/query.place.minPopulation" },
              { "$ref": "#/parameters/query.place.maxPopulation" },
              { "$ref": "#/parameters/query.entity.namePrefix" },
              { "$ref": "#/parameters/query.timeZoneIds" },
              { "$ref": "#/parameters/query.place.types" },
              { "$ref": "#/parameters/query.asciiMode" },
              { "$ref": "#/parameters/query.hateoasMode" },
              { "$ref": "#/parameters/query.languageCode" },
              { "$ref": "#/parameters/query.limit" },
              { "$ref": "#/parameters/query.offset" },
              { "$ref": "#/parameters/query.place.sort.withinRegion" },
              { "$ref": "#/parameters/query.includeDeleted" }
            ],
            "produces": ["application/json"],
            "responses": {
              "200": { "$ref": "#/responses/PopulatedPlaces" },
              "400": { "$ref": "#/responses/BadRequest" },
              "401": { "$ref": "#/responses/Unauthorized" },
              "403": { "$ref": "#/responses/Forbidden" },
              "404": { "$ref": "#/responses/NotFound" }
            },
            "summary": "Find country region cities",
            "tags": ["Geo"]
          }
        },
        "/geo/locations/{locationId}/nearbyCities": {
          "get": {
            "consumes": ["application/json"],
            "description": "Find cities near the given location, filtering by optional criteria. If no criteria are set, you will get back\nall known cities.\n",
            "operationId": "findCitiesNearLocationUsingGET",
            "parameters": [
              { "$ref": "#/parameters/path.location.id" },
              { "$ref": "#/parameters/query.place.location.radiusOf" },
              { "$ref": "#/parameters/query.distanceUnit" },
              { "$ref": "#/parameters/query.place.countryIds" },
              { "$ref": "#/parameters/query.place.excludedCountryIds" },
              { "$ref": "#/parameters/query.place.minPopulation" },
              { "$ref": "#/parameters/query.place.maxPopulation" },
              { "$ref": "#/parameters/query.entity.namePrefix" },
              { "$ref": "#/parameters/query.timeZoneIds" },
              { "$ref": "#/parameters/query.place.types" },
              { "$ref": "#/parameters/query.asciiMode" },
              { "$ref": "#/parameters/query.hateoasMode" },
              { "$ref": "#/parameters/query.languageCode" },
              { "$ref": "#/parameters/query.limit" },
              { "$ref": "#/parameters/query.offset" },
              { "$ref": "#/parameters/query.place.sort" },
              { "$ref": "#/parameters/query.includeDeleted" }
            ],
            "produces": ["application/json"],
            "responses": {
              "200": { "$ref": "#/responses/PopulatedPlaces" },
              "400": { "$ref": "#/responses/BadRequest" },
              "401": { "$ref": "#/responses/Unauthorized" },
              "403": { "$ref": "#/responses/Forbidden" }
            },
            "summary": "Find cities near location",
            "tags": ["Geo"]
          }
        },
        "/geo/locations/{locationId}/nearbyDivisions": {
          "get": {
            "consumes": ["application/json"],
            "description": "Find administrative divisions near the given location, filtering by optional criteria. If no criteria are set,\nyou will get back all known divisions.\n",
            "operationId": "findDivisionsNearLocationUsingGET",
            "parameters": [
              { "$ref": "#/parameters/path.location.id" },
              { "$ref": "#/parameters/query.place.location.radiusOf" },
              { "$ref": "#/parameters/query.distanceUnit" },
              { "$ref": "#/parameters/query.place.countryIds" },
              { "$ref": "#/parameters/query.place.excludedCountryIds" },
              { "$ref": "#/parameters/query.place.minPopulation" },
              { "$ref": "#/parameters/query.place.maxPopulation" },
              { "$ref": "#/parameters/query.entity.namePrefix" },
              { "$ref": "#/parameters/query.timeZoneIds" },
              { "$ref": "#/parameters/query.asciiMode" },
              { "$ref": "#/parameters/query.hateoasMode" },
              { "$ref": "#/parameters/query.languageCode" },
              { "$ref": "#/parameters/query.limit" },
              { "$ref": "#/parameters/query.offset" },
              { "$ref": "#/parameters/query.place.sort" },
              { "$ref": "#/parameters/query.includeDeleted" }
            ],
            "produces": ["application/json"],
            "responses": {
              "200": { "$ref": "#/responses/PopulatedPlaces" },
              "400": { "$ref": "#/responses/BadRequest" },
              "401": { "$ref": "#/responses/Unauthorized" },
              "403": { "$ref": "#/responses/Forbidden" }
            },
            "summary": "Find divisions near location",
            "tags": ["Geo"]
          }
        },
        "/locale/currencies": {
          "get": {
            "consumes": ["application/json"],
            "description": "Find currencies, filtering by optional criteria. If no criteria are set, you will get back all known currencies.",
            "operationId": "getCurrenciesUsingGET",
            "parameters": [
              { "$ref": "#/parameters/query.currency.countryId" },
              { "$ref": "#/parameters/query.hateoasMode" },
              { "$ref": "#/parameters/query.limit" },
              { "$ref": "#/parameters/query.offset" }
            ],
            "produces": ["application/json"],
            "responses": {
              "200": { "$ref": "#/responses/Currencies" },
              "400": { "$ref": "#/responses/BadRequest" },
              "401": { "$ref": "#/responses/Unauthorized" },
              "403": { "$ref": "#/responses/Forbidden" }
            },
            "summary": "Find currencies",
            "tags": ["Locale"]
          }
        },
        "/locale/languages": {
          "get": {
            "consumes": ["application/json"],
            "description": "Get all supported languages",
            "operationId": "getLanguagesUsingGET",
            "parameters": [
              { "$ref": "#/parameters/query.hateoasMode" },
              { "$ref": "#/parameters/query.limit" },
              { "$ref": "#/parameters/query.offset" }
            ],
            "produces": ["application/json"],
            "responses": {
              "200": { "$ref": "#/responses/Languages" },
              "400": { "$ref": "#/responses/BadRequest" },
              "401": { "$ref": "#/responses/Unauthorized" },
              "403": { "$ref": "#/responses/Forbidden" }
            },
            "summary": "Get languages",
            "tags": ["Locale"]
          }
        },
        "/locale/locales": {
          "get": {
            "consumes": ["application/json"],
            "description": "Get all known locales",
            "operationId": "getLocalesUsingGET",
            "parameters": [
              { "$ref": "#/parameters/query.hateoasMode" },
              { "$ref": "#/parameters/query.limit" },
              { "$ref": "#/parameters/query.offset" }
            ],
            "produces": ["application/json"],
            "responses": {
              "200": { "$ref": "#/responses/Locales" },
              "400": { "$ref": "#/responses/BadRequest" },
              "401": { "$ref": "#/responses/Unauthorized" },
              "403": { "$ref": "#/responses/Forbidden" }
            },
            "summary": "Get locales",
            "tags": ["Locale"]
          }
        },
        "/locale/timezones": {
          "get": {
            "consumes": ["application/json"],
            "description": "Get all known time-zones",
            "operationId": "getTimezonesUsingGET",
            "parameters": [
              { "$ref": "#/parameters/query.hateoasMode" },
              { "$ref": "#/parameters/query.limit" },
              { "$ref": "#/parameters/query.offset" }
            ],
            "produces": ["application/json"],
            "responses": {
              "200": { "$ref": "#/responses/TimeZones" },
              "400": { "$ref": "#/responses/BadRequest" },
              "401": { "$ref": "#/responses/Unauthorized" },
              "403": { "$ref": "#/responses/Forbidden" }
            },
            "summary": "Get time-zones",
            "tags": ["Locale"]
          }
        },
        "/locale/timezones/{zoneId}/dateTime": {
          "get": {
            "consumes": ["application/json"],
            "description": "Get time-zone date-time",
            "operationId": "getTimeZoneDateTimeUsingGET",
            "parameters": [{ "$ref": "#/parameters/path.zoneId" }],
            "produces": ["application/json"],
            "responses": {
              "200": { "$ref": "#/responses/DateTime" },
              "400": { "$ref": "#/responses/BadRequest" },
              "401": { "$ref": "#/responses/Unauthorized" },
              "403": { "$ref": "#/responses/Forbidden" },
              "404": { "$ref": "#/responses/NotFound" }
            },
            "summary": "Get time-zone date-time",
            "tags": ["Locale"]
          }
        },
        "/locale/timezones/{zoneId}/time": {
          "get": {
            "consumes": ["application/json"],
            "description": "Get time-zone time",
            "operationId": "getTimeZoneTimeUsingGET",
            "parameters": [{ "$ref": "#/parameters/path.zoneId" }],
            "produces": ["application/json"],
            "responses": {
              "200": { "$ref": "#/responses/Time" },
              "400": { "$ref": "#/responses/BadRequest" },
              "401": { "$ref": "#/responses/Unauthorized" },
              "403": { "$ref": "#/responses/Forbidden" },
              "404": { "$ref": "#/responses/NotFound" }
            },
            "summary": "Get time-zone time",
            "tags": ["Locale"]
          }
        }
      },
      "definitions": {
        "BadRequestResponse": {
          "allOf": [{ "$ref": "#/definitions/BaseResponse" }],
          "description": "Bad Request Response",
          "example": {
            "errors": [{ "code": "PARAM_INVALID", "message": "Param [someParam] has invalid value: invalidValue" }]
          },
          "title": "Bad Request Response",
          "type": "object"
        },
        "BaseCollectionResponse": {
          "allOf": [
            { "$ref": "#/definitions/BaseResponse" },
            {
              "properties": {
                "links": { "items": { "$ref": "#/definitions/Link" }, "title": "Links", "type": "array" },
                "metadata": { "$ref": "#/definitions/Metadata", "title": "Metadata" }
              }
            }
          ],
          "description": "Common properties for all collection  responses",
          "example": {
            "links": [
              { "href": "/data/world/v1/some/resource?offset=0&limit=5", "rel": "first" },
              { "href": "/data/world/v1/some/resource?offset=0&limit=5", "rel": "prev" },
              { "href": "/data/world/v1/some/resource?offset=10&limit=5", "rel": "next" },
              { "href": "/data/world/v1/some/resource?offset=95&limit=5", "rel": "last" }
            ],
            "metadata": { "currentOffset": 5, "totalCount": 100 }
          },
          "title": "Base Collection Response",
          "type": "object"
        },
        "BaseResponse": {
          "description": "Common properties for all responses",
          "example": { "errors": [] },
          "properties": {
            "errors": { "items": { "$ref": "#/definitions/Error" }, "title": "Errors", "type": "array" }
          },
          "title": "Base Response",
          "type": "object"
        },
        "CountriesResponse": {
          "allOf": [
            { "$ref": "#/definitions/BaseCollectionResponse" },
            {
              "properties": {
                "data": {
                  "items": { "$ref": "#/definitions/CountrySummary" },
                  "title": "CountrySummaries",
                  "type": "array"
                }
              }
            }
          ],
          "description": "A list of countries",
          "example": {
            "data": [
              { "code": "SM", "currencyCodes": ["EUR"], "name": "San Marino", "wikiDataId": "Q238" },
              { "code": "NE", "currencyCodes": ["XOF"], "name": "Niger", "wikiDataId": "Q1032" },
              { "code": "MT", "currencyCodes": ["EUR"], "name": "Malta", "wikiDataId": "Q233" },
              { "code": "KZ", "currencyCodes": ["KZT"], "name": "Kazakhstan", "wikiDataId": "Q232" },
              { "code": "KE", "currencyCodes": ["KES"], "name": "Kenya", "wikiDataId": "Q114" }
            ],
            "links": [
              { "href": "/data/world/v1/geo/countries?offset=0&limit=5", "rel": "first" },
              { "href": "/data/world/v1/geo/countries?offset=0&limit=5", "rel": "prev" },
              { "href": "/data/world/v1/geo/countries?offset=10&limit=5", "rel": "next" },
              { "href": "/data/world/v1/geo/countries?offset=195&limit=5", "rel": "last" }
            ],
            "metadata": { "currentOffset": 5, "totalCount": 198 }
          },
          "title": "Countries Response",
          "type": "object"
        },
        "CountryDetails": {
          "description": "Full country details",
          "example": {
            "code": "US",
            "currencyCodes": ["USD"],
            "flagImageUri": "http://commons.wikimedia.org/wiki/Special:FilePath/Flag%20of%20the%20United%20States.svg",
            "name": "United States",
            "numRegions": 56,
            "wikiDataId": "Q30"
          },
          "properties": {
            "code": { "description": "The ISO-3166 country code", "type": "string" },
            "currencyCodes": {
              "description": "A list of supported ISO-4217 currency codes",
              "items": { "type": "string" },
              "type": "array"
            },
            "flagImageUri": { "description": "The country flag image", "type": "string" },
            "name": { "description": "The country name (varies by languageCode)", "type": "string" },
            "numRegions": {
              "description": "The number of regions in this country",
              "format": "int32",
              "type": "integer"
            },
            "wikiDataId": { "description": "The country WikiData id", "type": "string" }
          },
          "title": "Country Details",
          "type": "object"
        },
        "CountryResponse": {
          "allOf": [
            { "$ref": "#/definitions/BaseResponse" },
            { "properties": { "data": { "$ref": "#/definitions/CountryDetails" } } }
          ],
          "description": "Country details response",
          "example": {
            "data": {
              "code": "US",
              "currencyCodes": ["USD"],
              "flagImageUri": "http://commons.wikimedia.org/wiki/Special:FilePath/Flag%20of%20the%20United%20States.svg",
              "name": "United States",
              "numRegions": 56,
              "wikiDataId": "Q30"
            }
          },
          "title": "Country Response",
          "type": "object"
        },
        "CountrySummary": {
          "description": "Minimal country info",
          "example": { "code": "US", "currencyCodes": ["USD"], "name": "United States", "wikiDataId": "Q30" },
          "properties": {
            "code": { "description": "The ISO-3166 country code", "type": "string" },
            "currencyCodes": {
              "description": "A list of supported ISO-4217 currency codes",
              "items": { "type": "string" },
              "type": "array"
            },
            "name": { "description": "The country name (varies by languageCode)", "type": "string" },
            "wikiDataId": { "description": "The country WikiData id", "type": "string" }
          },
          "title": "Country Summary",
          "type": "object"
        },
        "CurrenciesResponse": {
          "allOf": [
            { "$ref": "#/definitions/BaseCollectionResponse" },
            { "properties": { "data": { "items": { "$ref": "#/definitions/Currency" }, "type": "array" } } }
          ],
          "description": "A list of currencies",
          "example": {
            "data": [
              { "code": "AWG", "countryCodes": ["AW"] },
              { "code": "AZN", "countryCodes": ["AZ"] },
              { "code": "BAM", "countryCodes": ["BA"] },
              { "code": "BBD", "countryCodes": ["BB"] },
              { "code": "BDT", "countryCodes": ["BD"] }
            ],
            "links": [
              { "href": "/data/world/v1/locale/currencies?offset=0&limit=5", "rel": "first" },
              { "href": "/data/world/v1/locale/currencies?offset=5&limit=5", "rel": "prev" },
              { "href": "/data/world/v1/locale/currencies?offset=15&limit=5", "rel": "next" },
              { "href": "/data/world/v1/locale/currencies?offset=200&limit=5", "rel": "last" }
            ],
            "metadata": { "currentOffset": 10, "totalCount": 205 }
          },
          "title": "Currencies Response",
          "type": "object"
        },
        "Currency": {
          "description": "Currency info",
          "example": {
            "code": "USD",
            "countryCodes": [
              "PR",
              "MP",
              "IO",
              "FM",
              "PW",
              "GU",
              "BQ",
              "TC",
              "VG",
              "AS",
              "VI",
              "TL",
              "UM",
              "MH",
              "EC",
              "US"
            ],
            "symbol": "$"
          },
          "properties": {
            "code": { "description": "The ISO-4217 currency code", "type": "string" },
            "countryCodes": {
              "description": "A list of ISO-3166 country codes of countries supporting this currency",
              "items": { "type": "string" },
              "type": "array"
            },
            "symbol": { "description": "The currency symbol", "type": "string" }
          },
          "title": "Currency",
          "type": "object"
        },
        "DateTimeResponse": {
          "allOf": [
            { "$ref": "#/definitions/BaseResponse" },
            {
              "properties": {
                "data": {
                  "description": "The date-time in ISO-6801 format: yyyyMMdd'T'HHmmssZ",
                  "format": "date-time",
                  "type": "string"
                }
              }
            }
          ],
          "description": "An ISO-6801 date-time response",
          "example": { "data": "2020-10-05T01:16:53.504604+04:30" },
          "title": "Date-Time Response",
          "type": "object"
        },
        "DistanceResponse": {
          "allOf": [
            { "$ref": "#/definitions/BaseResponse" },
            {
              "properties": {
                "data": {
                  "description": "The distance in units as set by the distanceUnit param (defaults to miles)",
                  "format": "double",
                  "type": "number"
                }
              }
            }
          ],
          "description": "A decimal distance (in miles or kilometers)",
          "example": { "data": 6707.9 },
          "title": "Distance Response",
          "type": "object"
        },
        "Error": {
          "description": "An error that occurred processing the request",
          "example": { "code": "ENTITY_NOT_FOUND", "message": "Param [someParam] has invalid value: invalidValue" },
          "properties": { "code": { "$ref": "#/definitions/ErrorCode" }, "message": { "type": "string" } },
          "title": "Error",
          "type": "object"
        },
        "ErrorCode": {
          "description": "One of a set of enumerated error codes representing the types of errors that can occur processing a\nrequest\n",
          "enum": [
            "ACCESS_DENIED",
            "ENTITY_NOT_FOUND",
            "INCOMPATIBLE",
            "PARAM_INVALID",
            "PARAMS_MUTUALLY_EXCLUSIVE",
            "REQUEST_UNPROCESSABLE"
          ],
          "example": "ENTITY_NOT_FOUND",
          "title": "ErrorCode",
          "type": "string"
        },
        "ForbiddenResponse": {
          "allOf": [{ "$ref": "#/definitions/BaseResponse" }],
          "description": "Forbidden Response",
          "example": { "errors": [{ "code": "ACCESS_DENIED", "message": "The reason why access was denied" }] },
          "title": "Forbidden Response",
          "type": "object"
        },
        "LanguageDescriptor": {
          "description": "A language supported by the service",
          "example": { "code": "en", "name": "English" },
          "properties": {
            "code": {
              "enum": [
                "undefined",
                "aa",
                "ab",
                "ae",
                "af",
                "ak",
                "am",
                "an",
                "ar",
                "as",
                "av",
                "ay",
                "az",
                "ba",
                "be",
                "bg",
                "bh",
                "bi",
                "bm",
                "bn",
                "bo",
                "br",
                "bs",
                "ca",
                "ce",
                "ch",
                "co",
                "cr",
                "cs",
                "cu",
                "cv",
                "cy",
                "da",
                "de",
                "dv",
                "dz",
                "ee",
                "el",
                "en",
                "eo",
                "es",
                "et",
                "eu",
                "fa",
                "ff",
                "fi",
                "fj",
                "fo",
                "fr",
                "fy",
                "ga",
                "gd",
                "gl",
                "gn",
                "gu",
                "gv",
                "ha",
                "he",
                "hi",
                "ho",
                "hr",
                "ht",
                "hu",
                "hy",
                "hz",
                "ia",
                "id",
                "ie",
                "ig",
                "ii",
                "ik",
                "io",
                "is",
                "it",
                "iu",
                "ja",
                "jv",
                "ka",
                "kg",
                "ki",
                "kj",
                "kk",
                "kl",
                "km",
                "kn",
                "ko",
                "kr",
                "ks",
                "ku",
                "kv",
                "kw",
                "ky",
                "la",
                "lb",
                "lg",
                "li",
                "ln",
                "lo",
                "lt",
                "lu",
                "lv",
                "mg",
                "mh",
                "mi",
                "mk",
                "ml",
                "mn",
                "mr",
                "ms",
                "mt",
                "my",
                "na",
                "nb",
                "nd",
                "ne",
                "ng",
                "nl",
                "nn",
                "no",
                "nr",
                "nv",
                "ny",
                "oc",
                "oj",
                "om",
                "or",
                "os",
                "pa",
                "pi",
                "pl",
                "ps",
                "pt",
                "qu",
                "rm",
                "rn",
                "ro",
                "ru",
                "rw",
                "sa",
                "sc",
                "sd",
                "se",
                "sg",
                "si",
                "sk",
                "sl",
                "sm",
                "sn",
                "so",
                "sq",
                "sr",
                "ss",
                "st",
                "su",
                "sv",
                "sw",
                "ta",
                "te",
                "tg",
                "th",
                "ti",
                "tk",
                "tl",
                "tn",
                "to",
                "tr",
                "ts",
                "tt",
                "tw",
                "ty",
                "ug",
                "uk",
                "ur",
                "uz",
                "ve",
                "vi",
                "vo",
                "wa",
                "wo",
                "xh",
                "yi",
                "yo",
                "za",
                "zh",
                "zu"
              ],
              "type": "string"
            },
            "name": { "type": "string" }
          },
          "title": "Language",
          "type": "object"
        },
        "LanguagesResponse": {
          "allOf": [
            { "$ref": "#/definitions/BaseCollectionResponse" },
            { "properties": { "data": { "items": { "$ref": "#/definitions/LanguageDescriptor" }, "type": "array" } } }
          ],
          "description": "A list of languages supported by the system",
          "example": {
            "data": [
              { "code": "fr", "name": "French" },
              { "code": "it", "name": "Italian" },
              { "code": "pt", "name": "Portuguese" }
            ],
            "links": [
              { "href": "/data/world/v1/locale/languages?offset=0&limit=3", "rel": "first" },
              { "href": "/data/world/v1/locale/languages?offset=0&limit=3", "rel": "prev" },
              { "href": "/data/world/v1/locale/languages?offset=6&limit=3", "rel": "next" },
              { "href": "/data/world/v1/locale/languages?offset=6&limit=3", "rel": "last" }
            ],
            "metadata": { "currentOffset": 3, "totalCount": 8 }
          },
          "title": "Languages Response",
          "type": "object"
        },
        "Link": {
          "description": "A HATEAOS link",
          "example": { "href": "/data/world/v1/geo/cities?offset=10&limit=10", "rel": "next" },
          "properties": { "href": { "type": "string" }, "rel": { "type": "string" } },
          "title": "Link",
          "type": "object"
        },
        "Locale": {
          "description": "A locale representing a language/region combination",
          "example": { "code": "en_US" },
          "properties": { "code": { "description": "The locale code", "type": "string" } },
          "title": "Locale",
          "type": "object"
        },
        "LocalesResponse": {
          "allOf": [
            { "$ref": "#/definitions/BaseCollectionResponse" },
            { "properties": { "data": { "items": { "$ref": "#/definitions/Locale" }, "type": "array" } } }
          ],
          "description": "A list of locales",
          "example": {
            "data": [{ "code": "eu" }, { "code": "ar_MR" }, { "code": "es_DO" }, { "code": "ru" }, { "code": "az" }],
            "links": [
              { "href": "/data/world/v1/locale/locales?offset=0&limit=5", "rel": "first" },
              { "href": "/data/world/v1/locale/locales?offset=45&limit=5", "rel": "prev" },
              { "href": "/data/world/v1/locale/locales?offset=55&limit=5", "rel": "next" },
              { "href": "/data/world/v1/locale/locales?offset=770&limit=5", "rel": "last" }
            ],
            "metadata": { "currentOffset": 50, "totalCount": 772 }
          },
          "title": "Locales Response",
          "type": "object"
        },
        "Metadata": {
          "description": "Result metadata (currently only associated with collection results)",
          "example": { "currentOffset": 0, "totalCount": 100 },
          "properties": {
            "currentOffset": {
              "description": "The zero-ary offset into the results (0 is the first result)",
              "format": "int64",
              "type": "integer"
            },
            "totalCount": {
              "description": "The total number of results across pages",
              "format": "int64",
              "type": "integer"
            }
          },
          "title": "Metadata",
          "type": "object"
        },
        "NotFoundResponse": {
          "allOf": [{ "$ref": "#/definitions/BaseResponse" }],
          "description": "Not Found Response",
          "example": { "errors": [{ "code": "ENTITY_NOT_FOUND", "message": "Entity not found for id: someEntityId" }] },
          "title": "Not Found Response",
          "type": "object"
        },
        "PopulatedPlaceDetails": {
          "description": "Full populated-place details",
          "example": {
            "country": "United States of America",
            "countryCode": "US",
            "deleted": false,
            "elevationMeters": 10,
            "id": 123214,
            "latitude": 40.67,
            "longitude": -73.94,
            "name": "New York City",
            "population": 8398748,
            "region": "New York",
            "regionCode": "NY",
            "timezone": "America__New_York",
            "type": "CITY",
            "wikiDataId": "Q60"
          },
          "properties": {
            "country": { "description": "The country name (varies by languageCode)", "type": "string" },
            "countryCode": { "description": "The ISO-3166 country code", "type": "string" },
            "deleted": { "description": "If this place has been soft-deleted", "type": "boolean" },
            "elevationMeters": {
              "description": "The place elevation (meters) above sea level",
              "format": "int32",
              "type": "integer"
            },
            "id": { "description": "The place GeoDB native id", "format": "int32", "type": "integer" },
            "latitude": { "description": "The place latittude (-90.0 to 90.0)", "format": "double", "type": "number" },
            "longitude": {
              "description": "The place longitude (-180.0 to 180.0)",
              "format": "double",
              "type": "number"
            },
            "name": { "description": "The place name (varies by languageCode)", "type": "string" },
            "population": { "description": "The place population", "format": "int32", "type": "integer" },
            "region": { "description": "The region name (varies by languageCode)", "type": "string" },
            "regionCode": { "description": "The ISO or FIPS region code", "type": "string" },
            "timezone": { "description": "The place timezone id", "type": "string" },
            "type": { "$ref": "#/definitions/PopulatedPlaceType", "description": "The place type" },
            "wikiDataId": { "description": "The place WikiData id", "type": "string" }
          },
          "title": "Populated-Place Details",
          "type": "object"
        },
        "PopulatedPlaceResponse": {
          "allOf": [
            { "$ref": "#/definitions/BaseResponse" },
            { "properties": { "data": { "$ref": "#/definitions/PopulatedPlaceDetails" } } }
          ],
          "description": "Populated-place details response",
          "example": {
            "data": {
              "country": "United States of America",
              "countryCode": "US",
              "deleted": false,
              "elevationMeters": 10,
              "id": 123214,
              "latitude": 40.67,
              "longitude": -73.94,
              "name": "New York City",
              "population": 8398748,
              "region": "New York",
              "regionCode": "NY",
              "timezone": "America__New_York",
              "type": "CITY",
              "wikiDataId": "Q60"
            }
          },
          "title": "Populated-Place Response",
          "type": "object"
        },
        "PopulatedPlaceSummary": {
          "description": "Minimal populated-place info",
          "example": {
            "country": "United States of America",
            "countryCode": "US",
            "id": 123214,
            "latitude": 40.67,
            "longitude": -73.94,
            "name": "New York City",
            "region": "New York",
            "regionCode": "NY",
            "type": "CITY",
            "wikiDataId": "Q60"
          },
          "properties": {
            "country": { "description": "The country name (varies by languageCode)", "type": "string" },
            "countryCode": { "description": "The ISO-3166 country code", "type": "string" },
            "distance": {
              "description": "Included if this is the result of a distance query",
              "format": "double",
              "type": "number"
            },
            "id": { "description": "The place GeoDB native id", "format": "int32", "type": "integer" },
            "latitude": { "description": "The place latittude (-90.0 to 90.0)", "format": "double", "type": "number" },
            "longitude": {
              "description": "The place longitude (-180.0 to 180.0)",
              "format": "double",
              "type": "number"
            },
            "name": { "description": "The place name (varies by languageCode)", "type": "string" },
            "region": { "description": "The region name (varies by languageCode)", "type": "string" },
            "regionCode": { "description": "The ISO or FIPS region code", "type": "string" },
            "type": { "$ref": "#/definitions/PopulatedPlaceType", "description": "The place type" },
            "wikiDataId": { "description": "The place WikiData id", "type": "string" }
          },
          "type": "object"
        },
        "PopulatedPlaceType": {
          "description": "One of a set of enumerated populated-place types known by the service (currently only level-2 admin divisions and\ncities)\n",
          "enum": ["ADM2", "CITY"],
          "example": "CITY",
          "type": "string"
        },
        "PopulatedPlacesResponse": {
          "allOf": [
            { "$ref": "#/definitions/BaseCollectionResponse" },
            {
              "properties": { "data": { "items": { "$ref": "#/definitions/PopulatedPlaceSummary" }, "type": "array" } }
            }
          ],
          "description": "A list of populated places",
          "example": {
            "data": [
              {
                "country": "Andorra",
                "countryCode": "AD",
                "id": 2987553,
                "latitude": 42.57777778,
                "longitude": 1.61944444,
                "name": "L'Aldosa de Canillo",
                "region": "Canillo",
                "regionCode": 2,
                "type": "CITY",
                "wikiDataId": "Q24371"
              },
              {
                "country": "Andorra",
                "countryCode": "AD",
                "id": 3086756,
                "latitude": 42.57667,
                "longitude": 1.51773,
                "name": "La Cortinada",
                "region": "Ordino",
                "regionCode": 5,
                "type": "CITY",
                "wikiDataId": "Q24486"
              },
              {
                "country": "Andorra",
                "countryCode": "AD",
                "id": 3056764,
                "latitude": 42.4859,
                "longitude": 1.49045,
                "name": "La Margineda",
                "region": "Andorra la Vella",
                "regionCode": 7,
                "type": "CITY",
                "wikiDataId": "Q2536296"
              },
              {
                "country": "Andorra",
                "countryCode": "AD",
                "id": 978,
                "latitude": 42.544354,
                "longitude": 1.515427,
                "name": "La Massana",
                "region": "La Massana",
                "regionCode": 4,
                "type": "CITY",
                "wikiDataId": "Q3820973"
              },
              {
                "country": "Andorra",
                "countryCode": "AD",
                "id": 759,
                "latitude": 42.5,
                "longitude": 1.53333333,
                "name": "Les Escaldes",
                "region": "Escaldes-Engordany",
                "regionCode": "08",
                "type": "CITY",
                "wikiDataId": "Q1050185"
              }
            ],
            "links": [
              { "href": "/data/world/v1/geo/cities?offset=0&limit=5", "rel": "first" },
              { "href": "/data/world/v1/geo/cities?offset=0&limit=5", "rel": "prev" },
              { "href": "/data/world/v1/geo/cities?offset=10&limit=5", "rel": "next" },
              { "href": "/data/world/v1/geo/cities?offset=273685&limit=5", "rel": "last" }
            ],
            "metadata": { "currentOffset": 5, "totalCount": 273690 }
          },
          "title": "Populated-Places Response",
          "type": "object"
        },
        "RegionDetails": {
          "description": "Full country region details",
          "example": {
            "capital": "Sacramento",
            "countryCode": "US",
            "fipsCode": 6,
            "isoCode": "CA",
            "name": "California",
            "numCities": 1532,
            "wikiDataId": "Q99"
          },
          "properties": {
            "capital": { "description": "The region's capital city (varies by languageCode)", "type": "string" },
            "countryCode": { "description": "An ISO-3166 country code", "type": "string" },
            "fipsCode": { "description": "The FIPS 10-4 region code", "type": "string" },
            "isoCode": { "description": "The ISO region code", "type": "string" },
            "name": { "description": "The region name (varies by languageCode)", "type": "string" },
            "numCities": { "description": "The number of cities in this region", "format": "int32", "type": "integer" },
            "wikiDataId": { "description": "The region WikiData id", "type": "string" }
          },
          "title": "Country Region Details",
          "type": "object"
        },
        "RegionResponse": {
          "allOf": [
            { "$ref": "#/definitions/BaseResponse" },
            { "properties": { "data": { "$ref": "#/definitions/RegionDetails" } } }
          ],
          "description": "Country region details response",
          "example": {
            "data": {
              "capital": "Sacramento",
              "countryCode": "US",
              "fipsCode": 6,
              "isoCode": "CA",
              "name": "California",
              "numCities": 1532,
              "wikiDataId": "Q99"
            }
          },
          "title": "Country Region Response",
          "type": "object"
        },
        "RegionSummary": {
          "description": "Minimal country region info",
          "example": { "countryCode": "US", "fipsCode": 6, "isoCode": "CA", "name": "California", "wikiDataId": "Q99" },
          "properties": {
            "countryCode": { "description": "An ISO-3166 country code", "type": "string" },
            "fipsCode": { "description": "The FIPS 10-4 region code", "type": "string" },
            "isoCode": { "description": "The ISO region code", "type": "string" },
            "name": { "description": "The region name (varies by languageCode)", "type": "string" },
            "wikiDataId": { "description": "The region WikiData id", "type": "string" }
          },
          "title": "Country Region Summary",
          "type": "object"
        },
        "RegionsResponse": {
          "allOf": [
            { "$ref": "#/definitions/BaseCollectionResponse" },
            {
              "properties": {
                "data": {
                  "description": "A list of RegionSummaries",
                  "items": { "$ref": "#/definitions/RegionSummary" },
                  "type": "array"
                }
              }
            }
          ],
          "description": "A list of country regions",
          "example": {
            "data": [
              { "countryCode": "US", "fipsCode": 48, "isoCode": "TX", "name": "Texas", "wikiDataId": "Q1439" },
              { "countryCode": "US", "fipsCode": 39, "isoCode": "OH", "name": "Ohio", "wikiDataId": "Q1397" },
              { "countryCode": "US", "fipsCode": 31, "isoCode": "NE", "name": "Nebraska", "wikiDataId": "Q1553" },
              { "countryCode": "US", "fipsCode": 50, "isoCode": "VT", "name": "Vermont", "wikiDataId": "Q16551" },
              { "countryCode": "US", "fipsCode": 15, "isoCode": "HI", "name": "Hawaii", "wikiDataId": "Q782" }
            ],
            "links": [
              { "href": "/data/world/v1/geo/countries/US/regions?offset=0&limit=5", "rel": "first" },
              { "href": "/data/world/v1/geo/countries/US/regions?offset=0&limit=5", "rel": "prev" },
              { "href": "/data/world/v1/geo/countries/US/regions?offset=10&limit=5", "rel": "next" },
              { "href": "/data/world/v1/geo/countries/US/regions?offset=55&limit=5", "rel": "last" }
            ],
            "metadata": { "currentOffset": 5, "totalCount": 56 }
          },
          "title": "Country Regions Response",
          "type": "object"
        },
        "TimeResponse": {
          "allOf": [
            { "$ref": "#/definitions/BaseResponse" },
            {
              "properties": { "data": { "description": "The time in ISO-8601 format: HHmmss.SSSZ", "type": "string" } }
            }
          ],
          "description": "An ISO-8601 time response",
          "example": { "data": 69698.796217 },
          "title": "Time Response",
          "type": "object"
        },
        "TimeZoneDescriptor": {
          "description": "A time-zone",
          "example": { "id": "Africa__Abidjan", "name": "Greenwich Mean Time", "rawUtcOffsetHours": 0 },
          "properties": {
            "id": { "description": "The time-zone id", "type": "string" },
            "name": { "description": "The time-zone name", "type": "string" },
            "rawUtcOffsetHours": {
              "description": "The number of hours this time-zone is offset from UTC",
              "format": "int32",
              "type": "integer"
            }
          },
          "title": "Time-Zone",
          "type": "object"
        },
        "TimeZonesResponse": {
          "allOf": [
            { "$ref": "#/definitions/BaseCollectionResponse" },
            { "properties": { "data": { "items": { "$ref": "#/definitions/TimeZoneDescriptor" }, "type": "array" } } }
          ],
          "description": "A list of time-zones",
          "example": {
            "data": [
              { "id": "America__Marigot", "name": "Atlantic Standard Time", "rawUtcOffsetHours": -4 },
              { "id": "Asia__Aqtau", "name": "West Kazakhstan Time", "rawUtcOffsetHours": 5 },
              { "id": "Pacific__Kwajalein", "name": "Marshall Islands Time", "rawUtcOffsetHours": 12 },
              { "id": "America__El_Salvador", "name": "Central Standard Time", "rawUtcOffsetHours": -6 },
              { "id": "Asia__Pontianak", "name": "Western Indonesia Time", "rawUtcOffsetHours": 7 }
            ],
            "links": [
              { "href": "/data/world/v1/locale/timezones?offset=0&limit=5", "rel": "first" },
              { "href": "/data/world/v1/locale/timezones?offset=0&limit=5", "rel": "prev" },
              { "href": "/data/world/v1/locale/timezones?offset=10&limit=5", "rel": "next" },
              { "href": "/data/world/v1/locale/timezones?offset=595&limit=5", "rel": "last" }
            ],
            "metadata": { "currentOffset": 5, "totalCount": 600 }
          },
          "title": "Time-Zones Response",
          "type": "object"
        }
      }
    }
  },
  "Weather": {
    "spec": {
      "swagger": "2.0",
      "schemes": ["https", "http"],
      "host": "api.weatherbit.io",
      "basePath": "/v2.0",
      "info": {
        "contact": { "x-twitter": "weatherbitio" },
        "description": "This is the documentation for the Weatherbit Weather API.  The base URL for the API is [http://api.weatherbit.io/v2.0/](http://api.weatherbit.io/v2.0/) or [https://api.weatherbit.io/v2.0/](http://api.weatherbit.io/v2.0/). Below is the Swagger UI documentation for the API. All API requests require the `key` parameter.        An Example for a 5 day forecast for London, UK would be `http://api.weatherbit.io/v2.0/forecast/3hourly?city=London`&`country=UK`. See our [Weather API description page](https://www.weatherbit.io/api) for additional documentation.",
        "title": "Weatherbit.io - Swagger UI Weather API documentation",
        "version": "2.0.0",
        "x-apisguru-categories": ["location"],
        "x-logo": { "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_weatherbitio_profile_image.jpeg" },
        "x-origin": [{ "format": "swagger", "url": "https://www.weatherbit.io/static/swagger.json", "version": "2.0" }],
        "x-preferred": true,
        "x-providerName": "weatherbit.io"
      },
      "produces": ["application/json"],
      "paths": {
        "/alerts?lat={lat}&lon={lon}": {
          "get": {
            "description": "Returns severe weather alerts issued by meteorological agencies - given a lat, and a lon.",
            "parameters": [
              {
                "description": "Latitude component of location.",
                "format": "double",
                "in": "path",
                "name": "lat",
                "required": true,
                "type": "number"
              },
              {
                "description": "Longitude component of location.",
                "format": "double",
                "in": "path",
                "name": "lon",
                "required": true,
                "type": "number"
              },
              {
                "description": "Wraps return in jsonp callback - Example - callback=func",
                "format": "string",
                "in": "query",
                "name": "callback",
                "required": false,
                "type": "string"
              },
              {
                "description": "Your registered API key.",
                "format": "string",
                "in": "query",
                "name": "key",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": { "description": "Weather Alert Object.", "schema": { "$ref": "#/definitions/WeatherAlert" } },
              "default": { "description": "No Data.", "schema": { "$ref": "#/definitions/Error" } }
            },
            "summary": "Returns severe weather alerts issued by meteorological agencies - Given a lat/lon.",
            "tags": ["Alerts"]
          }
        },
        "/bulk/files/{file}": {
          "get": {
            "description": "**(Advanceed/Enterprise plans only)** Downloads bulk data files - OPTIONS: ( current.json.gz - Current observations for cities > 1000 population). Units are Metric (Celcius, m/s, etc).",
            "parameters": [
              {
                "description": "Filename (ie. current.json.gz)",
                "format": "string",
                "in": "path",
                "name": "file",
                "required": true,
                "type": "string"
              },
              {
                "description": "Your registered API key.",
                "format": "string",
                "in": "query",
                "name": "key",
                "required": true,
                "type": "string"
              }
            ],
            "responses": { "default": { "description": "No Data.", "schema": { "$ref": "#/definitions/Error" } } },
            "summary": "Download pre-generated bulk datasets",
            "tags": ["Bulk Downloads"]
          }
        },
        "/current/airquality?city={city}&country={country}": {
          "get": {
            "description": "Returns current air quality conditions.",
            "parameters": [
              {
                "description": "City search.. Example - &city=Raleigh,NC or &city=Berlin,DE or city=Paris&country=FR",
                "format": "string",
                "in": "path",
                "name": "city",
                "required": true,
                "type": "string"
              },
              {
                "description": "Full name of state.",
                "format": "string",
                "in": "query",
                "name": "state",
                "required": false,
                "type": "string"
              },
              {
                "description": "Country Code (2 letter).",
                "format": "string",
                "in": "path",
                "name": "country",
                "required": true,
                "type": "string"
              },
              {
                "description": "Wraps return in jsonp callback. Example: callback=func",
                "format": "string",
                "in": "query",
                "name": "callback",
                "required": false,
                "type": "string"
              },
              {
                "description": "Your registered API key.",
                "format": "string",
                "in": "query",
                "name": "key",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "Current air quality conditions",
                "schema": { "$ref": "#/definitions/AQCurrentGroup" }
              },
              "default": { "description": "No Data.", "schema": { "$ref": "#/definitions/Error" } }
            },
            "summary": "Returns current air quality conditions - Given City and/or State, Country.",
            "tags": ["Current Air Quality"]
          }
        },
        "/current/airquality?city_id={city_id}": {
          "get": {
            "description": "Returns current air quality conditions.",
            "parameters": [
              {
                "description": "City ID. Example: 4487042",
                "format": "integer",
                "in": "path",
                "name": "city_id",
                "required": true,
                "type": "integer"
              },
              {
                "description": "Wraps return in jsonp callback. Example - callback=func",
                "format": "string",
                "in": "query",
                "name": "callback",
                "required": false,
                "type": "string"
              },
              {
                "description": "Your registered API key.",
                "format": "string",
                "in": "query",
                "name": "key",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "Current air quality conditions",
                "schema": { "$ref": "#/definitions/AQCurrentGroup" }
              },
              "default": { "description": "No Data.", "schema": { "$ref": "#/definitions/Error" } }
            },
            "summary": "Returns current air quality conditions - Given a City ID.",
            "tags": ["Current Air Quality"]
          }
        },
        "/current/airquality?lat={lat}&lon={lon}": {
          "get": {
            "description": "Returns current air quality conditions.",
            "parameters": [
              {
                "description": "Latitude component of location.",
                "format": "double",
                "in": "path",
                "name": "lat",
                "required": true,
                "type": "number"
              },
              {
                "description": "Longitude component of location.",
                "format": "double",
                "in": "path",
                "name": "lon",
                "required": true,
                "type": "number"
              },
              {
                "description": "Wraps return in jsonp callback. Example - callback=func",
                "format": "string",
                "in": "query",
                "name": "callback",
                "required": false,
                "type": "string"
              },
              {
                "description": "Your registered API key.",
                "format": "string",
                "in": "query",
                "name": "key",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "Current air quality conditions",
                "schema": { "$ref": "#/definitions/AQCurrentGroup" }
              },
              "default": { "description": "No Data.", "schema": { "$ref": "#/definitions/Error" } }
            },
            "summary": "Returns current air quality conditions - Given a lat/lon.",
            "tags": ["Current Air Quality"]
          }
        },
        "/current/airquality?postal_code={postal_code}": {
          "get": {
            "description": "Returns current air quality conditions.",
            "parameters": [
              {
                "description": "Postal Code. Example: 28546",
                "format": "integer",
                "in": "path",
                "name": "postal_code",
                "required": true,
                "type": "integer"
              },
              {
                "description": "Country Code (2 letter).",
                "format": "string",
                "in": "query",
                "name": "country",
                "required": false,
                "type": "string"
              },
              {
                "description": "Wraps return in jsonp callback. Example - callback=func",
                "format": "string",
                "in": "query",
                "name": "callback",
                "required": false,
                "type": "string"
              },
              {
                "description": "Your registered API key.",
                "format": "string",
                "in": "query",
                "name": "key",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "Current air quality conditions",
                "schema": { "$ref": "#/definitions/AQCurrentGroup" }
              },
              "default": { "description": "No Data.", "schema": { "$ref": "#/definitions/Error" } }
            },
            "summary": "Returns current air quality conditions - Given a Postal Code.",
            "tags": ["Current Air Quality"]
          }
        },
        "/current?cities={cities}": {
          "get": {
            "description": "Returns a group of Current Observations - Given a list of City IDs. ",
            "parameters": [
              {
                "description": "Comma separated list of City ID's. Example: 4487042, 4494942, 4504871",
                "format": "string",
                "in": "path",
                "name": "cities",
                "required": true,
                "type": "string"
              },
              {
                "description": "Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>",
                "enum": ["S", "I"],
                "format": "string",
                "in": "query",
                "name": "units",
                "required": false,
                "type": "string"
              },
              {
                "description": "Marine stations only (buoys, oil platforms, etc)",
                "enum": ["t"],
                "format": "string",
                "in": "query",
                "name": "marine",
                "required": false,
                "type": "string"
              },
              {
                "description": "Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>",
                "enum": [
                  "ar",
                  "az",
                  "be",
                  "bg",
                  "bs",
                  "ca",
                  "cs",
                  "de",
                  "fi",
                  "fr",
                  "el",
                  "es",
                  "et",
                  "hr",
                  "hu",
                  "id",
                  "it",
                  "is",
                  "kw",
                  "nb",
                  "nl",
                  "pl",
                  "pt",
                  "ro",
                  "ru",
                  "sk",
                  "sl",
                  "sr",
                  "sv",
                  "tr",
                  "uk",
                  "zh",
                  "zh-tw"
                ],
                "format": "string",
                "in": "query",
                "name": "lang",
                "required": false,
                "type": "string"
              },
              {
                "description": "Wraps return in jsonp callback - Example - callback=func",
                "format": "string",
                "in": "query",
                "name": "callback",
                "required": false,
                "type": "string"
              },
              {
                "description": "Your registered API key.",
                "format": "string",
                "in": "query",
                "name": "key",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "An Observation Group object.",
                "schema": { "$ref": "#/definitions/CurrentObsGroup" }
              },
              "default": { "description": "No Data.", "schema": { "$ref": "#/definitions/Error" } }
            },
            "summary": "Returns a group of observations given a list of cities",
            "tags": ["Current Weather Data"]
          }
        },
        "/current?city={city}&country={country}": {
          "get": {
            "description": "Returns a Current Observation - Given a city in the format of City,ST or City. The state, and country parameters can be provided to make the search more accurate.",
            "parameters": [
              {
                "description": "City search.. Example - &city=Raleigh,NC or &city=Berlin,DE or city=Paris&country=FR",
                "format": "string",
                "in": "path",
                "name": "city",
                "required": true,
                "type": "string"
              },
              {
                "description": "Include 1 hour - minutely forecast in the response",
                "enum": ["minutely"],
                "format": "string",
                "in": "query",
                "name": "include",
                "required": false,
                "type": "string"
              },
              {
                "description": "Full name of state.",
                "format": "string",
                "in": "query",
                "name": "state",
                "required": false,
                "type": "string"
              },
              {
                "description": "Country Code (2 letter).",
                "format": "string",
                "in": "path",
                "name": "country",
                "required": true,
                "type": "string"
              },
              {
                "description": "Marine stations only (buoys, oil platforms, etc)",
                "enum": ["t"],
                "format": "string",
                "in": "query",
                "name": "marine",
                "required": false,
                "type": "string"
              },
              {
                "description": "Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>",
                "enum": ["S", "I"],
                "format": "string",
                "in": "query",
                "name": "units",
                "required": false,
                "type": "string"
              },
              {
                "description": "Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>",
                "enum": [
                  "ar",
                  "az",
                  "be",
                  "bg",
                  "bs",
                  "ca",
                  "cs",
                  "de",
                  "fi",
                  "fr",
                  "el",
                  "es",
                  "et",
                  "hr",
                  "hu",
                  "id",
                  "it",
                  "is",
                  "kw",
                  "nb",
                  "nl",
                  "pl",
                  "pt",
                  "ro",
                  "ru",
                  "sk",
                  "sl",
                  "sr",
                  "sv",
                  "tr",
                  "uk",
                  "zh",
                  "zh-tw"
                ],
                "format": "string",
                "in": "query",
                "name": "lang",
                "required": false,
                "type": "string"
              },
              {
                "description": "Wraps return in jsonp callback - Example - callback=func",
                "format": "string",
                "in": "query",
                "name": "callback",
                "required": false,
                "type": "string"
              },
              {
                "description": "Your registered API key.",
                "format": "string",
                "in": "query",
                "name": "key",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "An Observation Group object.",
                "schema": { "$ref": "#/definitions/CurrentObsGroup" }
              },
              "default": { "description": "No Data.", "schema": { "$ref": "#/definitions/Error" } }
            },
            "summary": "Returns a Current Observation - Given City and/or State, Country.",
            "tags": ["Current Weather Data"]
          }
        },
        "/current?city_id={city_id}": {
          "get": {
            "description": "Returns current weather observation - Given a City ID. ",
            "parameters": [
              {
                "description": "City ID. Example: 4487042",
                "format": "string",
                "in": "path",
                "name": "city_id",
                "required": true,
                "type": "string"
              },
              {
                "description": "Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>",
                "enum": ["S", "I"],
                "format": "string",
                "in": "query",
                "name": "units",
                "required": false,
                "type": "string"
              },
              {
                "description": "Include 1 hour - minutely forecast in the response",
                "enum": ["minutely"],
                "format": "string",
                "in": "query",
                "name": "include",
                "required": false,
                "type": "string"
              },
              {
                "description": "Marine stations only (buoys, oil platforms, etc)",
                "enum": ["t"],
                "format": "string",
                "in": "query",
                "name": "marine",
                "required": false,
                "type": "string"
              },
              {
                "description": "Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>",
                "enum": [
                  "ar",
                  "az",
                  "be",
                  "bg",
                  "bs",
                  "ca",
                  "cs",
                  "de",
                  "fi",
                  "fr",
                  "el",
                  "es",
                  "et",
                  "hr",
                  "hu",
                  "id",
                  "it",
                  "is",
                  "kw",
                  "nb",
                  "nl",
                  "pl",
                  "pt",
                  "ro",
                  "ru",
                  "sk",
                  "sl",
                  "sr",
                  "sv",
                  "tr",
                  "uk",
                  "zh",
                  "zh-tw"
                ],
                "format": "string",
                "in": "query",
                "name": "lang",
                "required": false,
                "type": "string"
              },
              {
                "description": "Wraps return in jsonp callback - Example - callback=func",
                "format": "string",
                "in": "query",
                "name": "callback",
                "required": false,
                "type": "string"
              },
              {
                "description": "Your registered API key.",
                "format": "string",
                "in": "query",
                "name": "key",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "An Observation Group object.",
                "schema": { "$ref": "#/definitions/CurrentObsGroup" }
              },
              "default": { "description": "No Data.", "schema": { "$ref": "#/definitions/Error" } }
            },
            "summary": "Returns a current observation by city id.",
            "tags": ["Current Weather Data"]
          }
        },
        "/current?lat={lat}&lon={lon}": {
          "get": {
            "description": "Returns a Current Observation - given a lat, and a lon.",
            "parameters": [
              {
                "description": "Latitude component of location.",
                "format": "double",
                "in": "path",
                "name": "lat",
                "required": true,
                "type": "number"
              },
              {
                "description": "Longitude component of location.",
                "format": "double",
                "in": "path",
                "name": "lon",
                "required": true,
                "type": "number"
              },
              {
                "description": "Include 1 hour - minutely forecast in the response",
                "enum": ["minutely"],
                "format": "string",
                "in": "query",
                "name": "include",
                "required": false,
                "type": "string"
              },
              {
                "description": "Marine stations only (buoys, oil platforms, etc)",
                "enum": ["t"],
                "format": "string",
                "in": "query",
                "name": "marine",
                "required": false,
                "type": "string"
              },
              {
                "description": "Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>",
                "enum": ["S", "I"],
                "format": "string",
                "in": "query",
                "name": "units",
                "required": false,
                "type": "string"
              },
              {
                "description": "Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>",
                "enum": [
                  "ar",
                  "az",
                  "be",
                  "bg",
                  "bs",
                  "ca",
                  "cs",
                  "de",
                  "fi",
                  "fr",
                  "el",
                  "es",
                  "et",
                  "hr",
                  "hu",
                  "id",
                  "it",
                  "is",
                  "kw",
                  "nb",
                  "nl",
                  "pl",
                  "pt",
                  "ro",
                  "ru",
                  "sk",
                  "sl",
                  "sr",
                  "sv",
                  "tr",
                  "uk",
                  "zh",
                  "zh-tw"
                ],
                "format": "string",
                "in": "query",
                "name": "lang",
                "required": false,
                "type": "string"
              },
              {
                "description": "Wraps return in jsonp callback - Example - callback=func",
                "format": "string",
                "in": "query",
                "name": "callback",
                "required": false,
                "type": "string"
              },
              {
                "description": "Your registered API key.",
                "format": "string",
                "in": "query",
                "name": "key",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "An Observation Group object.",
                "schema": { "$ref": "#/definitions/CurrentObsGroup" }
              },
              "default": { "description": "No Data.", "schema": { "$ref": "#/definitions/Error" } }
            },
            "summary": "Returns a Current Observation - Given a lat/lon.",
            "tags": ["Current Weather Data"]
          }
        },
        "/current?postal_code={postal_code}": {
          "get": {
            "description": "Returns current weather observation - Given a Postal Code. ",
            "parameters": [
              {
                "description": "Postal Code. Example: 28546",
                "format": "string",
                "in": "path",
                "name": "postal_code",
                "required": true,
                "type": "string"
              },
              {
                "description": "Country Code (2 letter).",
                "format": "string",
                "in": "query",
                "name": "country",
                "required": false,
                "type": "string"
              },
              {
                "description": "Include 1 hour - minutely forecast in the response",
                "enum": ["minutely"],
                "format": "string",
                "in": "query",
                "name": "include",
                "required": false,
                "type": "string"
              },
              {
                "description": "Marine stations only (buoys, oil platforms, etc)",
                "enum": ["t"],
                "format": "string",
                "in": "query",
                "name": "marine",
                "required": false,
                "type": "string"
              },
              {
                "description": "Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>",
                "enum": ["S", "I"],
                "format": "string",
                "in": "query",
                "name": "units",
                "required": false,
                "type": "string"
              },
              {
                "description": "Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>",
                "enum": [
                  "ar",
                  "az",
                  "be",
                  "bg",
                  "bs",
                  "ca",
                  "cs",
                  "de",
                  "fi",
                  "fr",
                  "el",
                  "es",
                  "et",
                  "hr",
                  "hu",
                  "id",
                  "it",
                  "is",
                  "kw",
                  "nb",
                  "nl",
                  "pl",
                  "pt",
                  "ro",
                  "ru",
                  "sk",
                  "sl",
                  "sr",
                  "sv",
                  "tr",
                  "uk",
                  "zh",
                  "zh-tw"
                ],
                "format": "string",
                "in": "query",
                "name": "lang",
                "required": false,
                "type": "string"
              },
              {
                "description": "Wraps return in jsonp callback - Example - callback=func",
                "format": "string",
                "in": "query",
                "name": "callback",
                "required": false,
                "type": "string"
              },
              {
                "description": "Your registered API key.",
                "format": "string",
                "in": "query",
                "name": "key",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "An Observation Group object.",
                "schema": { "$ref": "#/definitions/CurrentObsGroup" }
              },
              "default": { "description": "No Data.", "schema": { "$ref": "#/definitions/Error" } }
            },
            "summary": "Returns a current observation by postal code.",
            "tags": ["Current Weather Data"]
          }
        },
        "/current?station={station}": {
          "get": {
            "description": "Returns a Current Observation - Given a station ID.",
            "parameters": [
              {
                "description": "Station Call ID.",
                "format": "string",
                "in": "path",
                "name": "station",
                "required": true,
                "type": "string"
              },
              {
                "description": "Include 1 hour - minutely forecast in the response",
                "enum": ["minutely"],
                "format": "string",
                "in": "query",
                "name": "include",
                "required": false,
                "type": "string"
              },
              {
                "description": "Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>",
                "enum": ["S", "I"],
                "format": "string",
                "in": "query",
                "name": "units",
                "required": false,
                "type": "string"
              },
              {
                "description": "Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>",
                "enum": [
                  "ar",
                  "az",
                  "be",
                  "bg",
                  "bs",
                  "ca",
                  "cs",
                  "de",
                  "fi",
                  "fr",
                  "el",
                  "es",
                  "et",
                  "hr",
                  "hu",
                  "id",
                  "it",
                  "is",
                  "kw",
                  "nb",
                  "nl",
                  "pl",
                  "pt",
                  "ro",
                  "ru",
                  "sk",
                  "sl",
                  "sr",
                  "sv",
                  "tr",
                  "uk",
                  "zh",
                  "zh-tw"
                ],
                "format": "string",
                "in": "query",
                "name": "lang",
                "required": false,
                "type": "string"
              },
              {
                "description": "Wraps return in jsonp callback. Example: callback=func",
                "format": "string",
                "in": "query",
                "name": "callback",
                "required": false,
                "type": "string"
              },
              {
                "description": "Your registered API key.",
                "format": "string",
                "in": "query",
                "name": "key",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "An Observation Group object.",
                "schema": { "$ref": "#/definitions/CurrentObsGroup" }
              },
              "default": { "description": "No Data.", "schema": { "$ref": "#/definitions/Error" } }
            },
            "summary": "Returns a Current Observation. - Given a station ID.",
            "tags": ["Current Weather Data"]
          }
        },
        "/current?stations={stations}": {
          "get": {
            "description": "Returns a group of Current Observations - Given a list of Station Call IDs. ",
            "parameters": [
              {
                "description": "Comma separated list of Station Call ID's. Example: KRDU,KBFI,KVNY",
                "format": "string",
                "in": "path",
                "name": "stations",
                "required": true,
                "type": "string"
              },
              {
                "description": "Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>",
                "enum": ["S", "I"],
                "format": "string",
                "in": "query",
                "name": "units",
                "required": false,
                "type": "string"
              },
              {
                "description": "Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>",
                "enum": [
                  "ar",
                  "az",
                  "be",
                  "bg",
                  "bs",
                  "ca",
                  "cs",
                  "de",
                  "fi",
                  "fr",
                  "el",
                  "es",
                  "et",
                  "hr",
                  "hu",
                  "id",
                  "it",
                  "is",
                  "kw",
                  "nb",
                  "nl",
                  "pl",
                  "pt",
                  "ro",
                  "ru",
                  "sk",
                  "sl",
                  "sr",
                  "sv",
                  "tr",
                  "uk",
                  "zh",
                  "zh-tw"
                ],
                "format": "string",
                "in": "query",
                "name": "lang",
                "required": false,
                "type": "string"
              },
              {
                "description": "Wraps return in jsonp callback. Example: callback=func",
                "format": "string",
                "in": "query",
                "name": "callback",
                "required": false,
                "type": "string"
              },
              {
                "description": "Your registered API key.",
                "format": "string",
                "in": "query",
                "name": "key",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "An Observation Group object.",
                "schema": { "$ref": "#/definitions/CurrentObsGroup" }
              },
              "default": { "description": "No Data.", "schema": { "$ref": "#/definitions/Error" } }
            },
            "summary": "Returns a group of observations given a list of stations",
            "tags": ["Current Weather Data"]
          }
        },
        "/forecast/3hourly?city={city}&country={country}": {
          "get": {
            "description": "Returns a 3-hourly forecast, where each point represents a three hour   period. Every point has a datetime string in the format \"YYYY-MM-DD:HH\". Time is UTC.\n",
            "parameters": [
              {
                "description": "City search.. Example - &city=Raleigh,NC or &city=Berlin,DE or city=Paris&country=FR",
                "format": "string",
                "in": "path",
                "name": "city",
                "required": true,
                "type": "string"
              },
              {
                "description": "Full name of state.",
                "format": "string",
                "in": "query",
                "name": "state",
                "required": false,
                "type": "string"
              },
              {
                "description": "Country Code (2 letter).",
                "format": "string",
                "in": "path",
                "name": "country",
                "required": true,
                "type": "string"
              },
              {
                "description": "Number of days to return. Default 5.",
                "format": "integer",
                "in": "query",
                "name": "days",
                "required": false,
                "type": "number"
              },
              {
                "description": "Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>",
                "enum": ["S", "I"],
                "format": "string",
                "in": "query",
                "name": "units",
                "required": false,
                "type": "string"
              },
              {
                "description": "Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>",
                "enum": [
                  "ar",
                  "az",
                  "be",
                  "bg",
                  "bs",
                  "ca",
                  "cs",
                  "de",
                  "fi",
                  "fr",
                  "el",
                  "es",
                  "et",
                  "hr",
                  "hu",
                  "id",
                  "it",
                  "is",
                  "kw",
                  "nb",
                  "nl",
                  "pl",
                  "pt",
                  "ro",
                  "ru",
                  "sk",
                  "sl",
                  "sr",
                  "sv",
                  "tr",
                  "uk",
                  "zh",
                  "zh-tw"
                ],
                "format": "string",
                "in": "query",
                "name": "lang",
                "required": false,
                "type": "string"
              },
              {
                "description": "Wraps return in jsonp callback. Example - callback=func",
                "format": "string",
                "in": "query",
                "name": "callback",
                "required": false,
                "type": "string"
              },
              {
                "description": "Your registered API key.",
                "format": "string",
                "in": "query",
                "name": "key",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": { "description": "A forecast object.", "schema": { "$ref": "#/definitions/ForecastHourly" } },
              "default": { "description": "No Data.", "schema": { "$ref": "#/definitions/Error" } }
            },
            "summary": "Returns a 3-hourly forecast - Given City and/or State, Country.",
            "tags": ["5 day / 3 hour Forecast"]
          }
        },
        "/forecast/3hourly?city_id={city_id}": {
          "get": {
            "description": "Returns a 3-hourly forecast, where each point represents a three hour   period. Every point has a datetime string in the format \"YYYY-MM-DD:HH\". Time is UTC.\n",
            "parameters": [
              {
                "description": "City ID. Example: 4487042",
                "format": "integer",
                "in": "path",
                "name": "city_id",
                "required": true,
                "type": "integer"
              },
              {
                "description": "Number of days to return. Default 5.",
                "format": "integer",
                "in": "query",
                "name": "days",
                "required": false,
                "type": "number"
              },
              {
                "description": "Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>",
                "enum": ["S", "I"],
                "format": "string",
                "in": "query",
                "name": "units",
                "required": false,
                "type": "string"
              },
              {
                "description": "Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>",
                "enum": [
                  "ar",
                  "az",
                  "be",
                  "bg",
                  "bs",
                  "ca",
                  "cs",
                  "de",
                  "fi",
                  "fr",
                  "el",
                  "es",
                  "et",
                  "hr",
                  "hu",
                  "id",
                  "it",
                  "is",
                  "kw",
                  "nb",
                  "nl",
                  "pl",
                  "pt",
                  "ro",
                  "ru",
                  "sk",
                  "sl",
                  "sr",
                  "sv",
                  "tr",
                  "uk",
                  "zh",
                  "zh-tw"
                ],
                "format": "string",
                "in": "query",
                "name": "lang",
                "required": false,
                "type": "string"
              },
              {
                "description": "Wraps return in jsonp callback. Example: callback=func",
                "format": "string",
                "in": "query",
                "name": "callback",
                "required": false,
                "type": "string"
              },
              {
                "description": "Your registered API key.",
                "format": "string",
                "in": "query",
                "name": "key",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": { "description": "A forecast object.", "schema": { "$ref": "#/definitions/ForecastHourly" } },
              "default": { "description": "No Data.", "schema": { "$ref": "#/definitions/Error" } }
            },
            "summary": "Returns a 3-hourly forecast - Given a City ID.",
            "tags": ["5 day / 3 hour Forecast"]
          }
        },
        "/forecast/3hourly?lat={lat}&lon={lon}": {
          "get": {
            "description": "Returns a 3-hourly forecast, where each point represents a three hour   period. Every point has a datetime string in the format \"YYYY-MM-DD:HH\". Time is UTC.\n",
            "parameters": [
              {
                "description": "Latitude component of location.",
                "format": "double",
                "in": "path",
                "name": "lat",
                "required": true,
                "type": "number"
              },
              {
                "description": "Longitude component of location.",
                "format": "double",
                "in": "path",
                "name": "lon",
                "required": true,
                "type": "number"
              },
              {
                "description": "Number of days to return. Default 5.",
                "format": "integer",
                "in": "query",
                "name": "days",
                "required": false,
                "type": "number"
              },
              {
                "description": "Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>",
                "enum": ["S", "I"],
                "format": "string",
                "in": "query",
                "name": "units",
                "required": false,
                "type": "string"
              },
              {
                "description": "Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>",
                "enum": [
                  "ar",
                  "az",
                  "be",
                  "bg",
                  "bs",
                  "ca",
                  "cs",
                  "de",
                  "fi",
                  "fr",
                  "el",
                  "es",
                  "et",
                  "hr",
                  "hu",
                  "id",
                  "it",
                  "is",
                  "kw",
                  "nb",
                  "nl",
                  "pl",
                  "pt",
                  "ro",
                  "ru",
                  "sk",
                  "sl",
                  "sr",
                  "sv",
                  "tr",
                  "uk",
                  "zh",
                  "zh-tw"
                ],
                "format": "string",
                "in": "query",
                "name": "lang",
                "required": false,
                "type": "string"
              },
              {
                "description": "Wraps return in jsonp callback. Example - callback=func",
                "format": "string",
                "in": "query",
                "name": "callback",
                "required": false,
                "type": "string"
              },
              {
                "description": "Your registered API key.",
                "format": "string",
                "in": "query",
                "name": "key",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": { "description": "A forecast object.", "schema": { "$ref": "#/definitions/ForecastHourly" } },
              "default": { "description": "No Data.", "schema": { "$ref": "#/definitions/Error" } }
            },
            "summary": "Returns a 3-hourly forecast - Given a lat/lon.",
            "tags": ["5 day / 3 hour Forecast"]
          }
        },
        "/forecast/3hourly?postal_code={postal_code}": {
          "get": {
            "description": "Returns a 3-hourly forecast, where each point represents a three hour period. Every point has a datetime string in the format \"YYYY-MM-DD:HH\". Time is UTC.\n",
            "parameters": [
              {
                "description": "Postal Code. Example: 28546",
                "format": "integer",
                "in": "path",
                "name": "postal_code",
                "required": true,
                "type": "integer"
              },
              {
                "description": "Country Code (2 letter).",
                "format": "string",
                "in": "query",
                "name": "country",
                "required": false,
                "type": "string"
              },
              {
                "description": "Number of days to return. Default 5.",
                "format": "integer",
                "in": "query",
                "name": "days",
                "required": false,
                "type": "number"
              },
              {
                "description": "Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>",
                "enum": ["S", "I"],
                "format": "string",
                "in": "query",
                "name": "units",
                "required": false,
                "type": "string"
              },
              {
                "description": "Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>",
                "enum": [
                  "ar",
                  "az",
                  "be",
                  "bg",
                  "bs",
                  "ca",
                  "cs",
                  "de",
                  "fi",
                  "fr",
                  "el",
                  "es",
                  "et",
                  "hr",
                  "hu",
                  "id",
                  "it",
                  "is",
                  "kw",
                  "nb",
                  "nl",
                  "pl",
                  "pt",
                  "ro",
                  "ru",
                  "sk",
                  "sl",
                  "sr",
                  "sv",
                  "tr",
                  "uk",
                  "zh",
                  "zh-tw"
                ],
                "format": "string",
                "in": "query",
                "name": "lang",
                "required": false,
                "type": "string"
              },
              {
                "description": "Wraps return in jsonp callback. Example: callback=func",
                "format": "string",
                "in": "query",
                "name": "callback",
                "required": false,
                "type": "string"
              },
              {
                "description": "Your registered API key.",
                "format": "string",
                "in": "query",
                "name": "key",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": { "description": "A forecast object.", "schema": { "$ref": "#/definitions/ForecastHourly" } },
              "default": { "description": "No Data.", "schema": { "$ref": "#/definitions/Error" } }
            },
            "summary": "Returns a 3-hourly forecast - Given a Postal Code.",
            "tags": ["5 day / 3 hour Forecast"]
          }
        },
        "/forecast/airquality?city={city}&country={country}": {
          "get": {
            "description": "Returns 72 hour (hourly) Air Quality forecast, where each point represents a one hour period.",
            "parameters": [
              {
                "description": "City search.. Example - &city=Raleigh,NC or &city=Berlin,DE or city=Paris&country=FR",
                "format": "string",
                "in": "path",
                "name": "city",
                "required": true,
                "type": "string"
              },
              {
                "description": "Full name of state.",
                "format": "string",
                "in": "query",
                "name": "state",
                "required": false,
                "type": "string"
              },
              {
                "description": "Country Code (2 letter).",
                "format": "string",
                "in": "path",
                "name": "country",
                "required": true,
                "type": "string"
              },
              {
                "description": "Wraps return in jsonp callback. Example: callback=func",
                "format": "string",
                "in": "query",
                "name": "callback",
                "required": false,
                "type": "string"
              },
              {
                "description": "Number of hours to return.",
                "format": "integer",
                "in": "query",
                "name": "hours",
                "required": false,
                "type": "integer"
              },
              {
                "description": "Your registered API key.",
                "format": "string",
                "in": "query",
                "name": "key",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": { "description": "A forecast object.", "schema": { "$ref": "#/definitions/AQHourly" } },
              "default": { "description": "No Data.", "schema": { "$ref": "#/definitions/Error" } }
            },
            "summary": "Returns 72 hour (hourly) Air Quality forecast - Given City and/or State, Country.",
            "tags": ["Air Quality Forecast"]
          }
        },
        "/forecast/airquality?city_id={city_id}": {
          "get": {
            "description": "Returns 72 hour (hourly) Air Quality forecast, where each point represents a one hour period.",
            "parameters": [
              {
                "description": "City ID. Example: 4487042",
                "format": "integer",
                "in": "path",
                "name": "city_id",
                "required": true,
                "type": "integer"
              },
              {
                "description": "Wraps return in jsonp callback. Example - callback=func",
                "format": "string",
                "in": "query",
                "name": "callback",
                "required": false,
                "type": "string"
              },
              {
                "description": "Number of hours to return.",
                "format": "integer",
                "in": "query",
                "name": "hours",
                "required": false,
                "type": "integer"
              },
              {
                "description": "Your registered API key.",
                "format": "string",
                "in": "query",
                "name": "key",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": { "description": "A forecast object.", "schema": { "$ref": "#/definitions/AQHourly" } },
              "default": { "description": "No Data.", "schema": { "$ref": "#/definitions/Error" } }
            },
            "summary": "Returns 72 hour (hourly) Air Quality forecast - Given a City ID.",
            "tags": ["Air Quality Forecast"]
          }
        },
        "/forecast/airquality?lat={lat}&lon={lon}": {
          "get": {
            "description": "Returns 72 hour (hourly) Air Quality forecast, where each point represents a one hour period.",
            "parameters": [
              {
                "description": "Latitude component of location.",
                "format": "double",
                "in": "path",
                "name": "lat",
                "required": true,
                "type": "number"
              },
              {
                "description": "Longitude component of location.",
                "format": "double",
                "in": "path",
                "name": "lon",
                "required": true,
                "type": "number"
              },
              {
                "description": "Wraps return in jsonp callback. Example - callback=func",
                "format": "string",
                "in": "query",
                "name": "callback",
                "required": false,
                "type": "string"
              },
              {
                "description": "Your registered API key.",
                "format": "string",
                "in": "query",
                "name": "key",
                "required": true,
                "type": "string"
              },
              {
                "description": "Number of hours to return.",
                "format": "integer",
                "in": "query",
                "name": "hours",
                "required": false,
                "type": "integer"
              }
            ],
            "responses": {
              "200": { "description": "A forecast object.", "schema": { "$ref": "#/definitions/AQHourly" } },
              "default": { "description": "No Data.", "schema": { "$ref": "#/definitions/Error" } }
            },
            "summary": "Returns 72 hour (hourly) Air Quality forecast - Given a lat/lon.",
            "tags": ["Air Quality Forecast"]
          }
        },
        "/forecast/airquality?postal_code={postal_code}": {
          "get": {
            "description": "Returns 72 hour (hourly) Air Quality forecast, where each point represents a one hour period.",
            "parameters": [
              {
                "description": "Postal Code. Example: 28546",
                "format": "integer",
                "in": "path",
                "name": "postal_code",
                "required": true,
                "type": "integer"
              },
              {
                "description": "Country Code (2 letter).",
                "format": "string",
                "in": "query",
                "name": "country",
                "required": false,
                "type": "string"
              },
              {
                "description": "Wraps return in jsonp callback. Example - callback=func",
                "format": "string",
                "in": "query",
                "name": "callback",
                "required": false,
                "type": "string"
              },
              {
                "description": "Number of hours to return.",
                "format": "integer",
                "in": "query",
                "name": "hours",
                "required": false,
                "type": "integer"
              },
              {
                "description": "Your registered API key.",
                "format": "string",
                "in": "query",
                "name": "key",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": { "description": "A forecast object.", "schema": { "$ref": "#/definitions/AQHourly" } },
              "default": { "description": "No Data.", "schema": { "$ref": "#/definitions/Error" } }
            },
            "summary": "Returns 72 hour (hourly) Air Quality forecast - Given a Postal Code.",
            "tags": ["Air Quality Forecast"]
          }
        },
        "/forecast/daily?city={city}&country={country}": {
          "get": {
            "description": "Returns a daily forecast, where each point represents one day (24hr) period. Every point has a datetime string in the format \"YYYY-MM-DD\". One day begins at 00:00 UTC, and ends at 23:59 UTC. Accepts a city in the format of City,ST or City. The state, and country parameters can be provided to make the search more accurate.\n",
            "parameters": [
              {
                "description": "City search.. Example - &city=Raleigh,NC or &city=Berlin,DE or city=Paris&country=FR",
                "format": "string",
                "in": "path",
                "name": "city",
                "required": true,
                "type": "string"
              },
              {
                "description": "Full name of state.",
                "format": "string",
                "in": "query",
                "name": "state",
                "required": false,
                "type": "string"
              },
              {
                "description": "Country Code (2 letter).",
                "format": "string",
                "in": "path",
                "name": "country",
                "required": true,
                "type": "string"
              },
              {
                "description": "Number of days to return. Default 16.",
                "format": "integer",
                "in": "query",
                "name": "days",
                "required": false,
                "type": "number"
              },
              {
                "description": "Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>",
                "enum": ["S", "I"],
                "format": "string",
                "in": "query",
                "name": "units",
                "required": false,
                "type": "string"
              },
              {
                "description": "Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>",
                "enum": [
                  "ar",
                  "az",
                  "be",
                  "bg",
                  "bs",
                  "ca",
                  "cs",
                  "de",
                  "fi",
                  "fr",
                  "el",
                  "es",
                  "et",
                  "hr",
                  "hu",
                  "id",
                  "it",
                  "is",
                  "kw",
                  "nb",
                  "nl",
                  "pl",
                  "pt",
                  "ro",
                  "ru",
                  "sk",
                  "sl",
                  "sr",
                  "sv",
                  "tr",
                  "uk",
                  "zh",
                  "zh-tw"
                ],
                "format": "string",
                "in": "query",
                "name": "lang",
                "required": false,
                "type": "string"
              },
              {
                "description": "Wraps return in jsonp callback. Example - callback=func",
                "format": "string",
                "in": "query",
                "name": "callback",
                "required": false,
                "type": "string"
              },
              {
                "description": "Your registered API key.",
                "format": "string",
                "in": "query",
                "name": "key",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": { "description": "A forecast object.", "schema": { "$ref": "#/definitions/ForecastDay" } },
              "default": { "description": "No Data.", "schema": { "$ref": "#/definitions/Error" } }
            },
            "summary": "Returns a daily forecast - Given City and/or State, Country.",
            "tags": ["16 day / daily Forecast"]
          }
        },
        "/forecast/daily?city_id={city_id}": {
          "get": {
            "description": "Returns a daily forecast, where each point represents one day (24hr) period. Every point has a datetime string in the format \"YYYY-MM-DD\". One day begins at 00:00 UTC, and ends at 23:59 UTC.\n",
            "parameters": [
              {
                "description": "City ID. Example: 4487042",
                "format": "integer",
                "in": "path",
                "name": "city_id",
                "required": true,
                "type": "integer"
              },
              {
                "description": "Number of days to return. Default 16.",
                "format": "integer",
                "in": "query",
                "name": "days",
                "required": false,
                "type": "number"
              },
              {
                "description": "Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>",
                "enum": ["S", "I"],
                "format": "string",
                "in": "query",
                "name": "units",
                "required": false,
                "type": "string"
              },
              {
                "description": "Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>",
                "enum": [
                  "ar",
                  "az",
                  "be",
                  "bg",
                  "bs",
                  "ca",
                  "cs",
                  "de",
                  "fi",
                  "fr",
                  "el",
                  "es",
                  "et",
                  "hr",
                  "hu",
                  "id",
                  "it",
                  "is",
                  "kw",
                  "nb",
                  "nl",
                  "pl",
                  "pt",
                  "ro",
                  "ru",
                  "sk",
                  "sl",
                  "sr",
                  "sv",
                  "tr",
                  "uk",
                  "zh",
                  "zh-tw"
                ],
                "format": "string",
                "in": "query",
                "name": "lang",
                "required": false,
                "type": "string"
              },
              {
                "description": "Wraps return in jsonp callback. Example: callback=func",
                "format": "string",
                "in": "query",
                "name": "callback",
                "required": false,
                "type": "string"
              },
              {
                "description": "Your registered API key.",
                "format": "string",
                "in": "query",
                "name": "key",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": { "description": "A forecast object.", "schema": { "$ref": "#/definitions/ForecastDay" } },
              "default": { "description": "No Data.", "schema": { "$ref": "#/definitions/Error" } }
            },
            "summary": "Returns a daily forecast - Given a City ID.",
            "tags": ["16 day / daily Forecast"]
          }
        },
        "/forecast/daily?lat={lat}&lon={lon}": {
          "get": {
            "description": "Returns a daily forecast, where each point represents one day (24hr) period. Every point has a datetime string in the format \"YYYY-MM-DD\". One day begins at 00:00 UTC, and ends at 23:59 UTC. \n",
            "parameters": [
              {
                "description": "Latitude component of location.",
                "format": "double",
                "in": "path",
                "name": "lat",
                "required": true,
                "type": "number"
              },
              {
                "description": "Longitude component of location.",
                "format": "double",
                "in": "path",
                "name": "lon",
                "required": true,
                "type": "number"
              },
              {
                "description": "Number of days to return. Default 16.",
                "format": "integer",
                "in": "query",
                "name": "days",
                "required": false,
                "type": "number"
              },
              {
                "description": "Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>",
                "enum": ["S", "I"],
                "format": "string",
                "in": "query",
                "name": "units",
                "required": false,
                "type": "string"
              },
              {
                "description": "Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>",
                "enum": [
                  "ar",
                  "az",
                  "be",
                  "bg",
                  "bs",
                  "ca",
                  "cs",
                  "de",
                  "fi",
                  "fr",
                  "el",
                  "es",
                  "et",
                  "hr",
                  "hu",
                  "id",
                  "it",
                  "is",
                  "kw",
                  "nb",
                  "nl",
                  "pl",
                  "pt",
                  "ro",
                  "ru",
                  "sk",
                  "sl",
                  "sr",
                  "sv",
                  "tr",
                  "uk",
                  "zh",
                  "zh-tw"
                ],
                "format": "string",
                "in": "query",
                "name": "lang",
                "required": false,
                "type": "string"
              },
              {
                "description": "Wraps return in jsonp callback. Example: callback=func",
                "format": "string",
                "in": "query",
                "name": "callback",
                "required": false,
                "type": "string"
              },
              {
                "description": "Your registered API key.",
                "format": "string",
                "in": "query",
                "name": "key",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": { "description": "A forecast object.", "schema": { "$ref": "#/definitions/ForecastDay" } },
              "default": { "description": "No Data.", "schema": { "$ref": "#/definitions/Error" } }
            },
            "summary": "Returns a daily forecast - Given Lat/Lon.",
            "tags": ["16 day / daily Forecast"]
          }
        },
        "/forecast/daily?postal_code={postal_code}": {
          "get": {
            "description": "Returns a daily forecast, where each point represents one day (24hr) period. Every point has a datetime string in the format \"YYYY-MM-DD\". One day begins at 00:00 UTC, and ends at 23:59 UTC.\n",
            "parameters": [
              {
                "description": "Postal Code. Example: 28546",
                "format": "integer",
                "in": "path",
                "name": "postal_code",
                "required": true,
                "type": "integer"
              },
              {
                "description": "Country Code (2 letter).",
                "format": "string",
                "in": "query",
                "name": "country",
                "required": false,
                "type": "string"
              },
              {
                "description": "Number of days to return. Default 16.",
                "format": "integer",
                "in": "query",
                "name": "days",
                "required": false,
                "type": "number"
              },
              {
                "description": "Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>",
                "enum": ["S", "I"],
                "format": "string",
                "in": "query",
                "name": "units",
                "required": false,
                "type": "string"
              },
              {
                "description": "Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>",
                "enum": [
                  "ar",
                  "az",
                  "be",
                  "bg",
                  "bs",
                  "ca",
                  "cs",
                  "de",
                  "fi",
                  "fr",
                  "el",
                  "es",
                  "et",
                  "hr",
                  "hu",
                  "id",
                  "it",
                  "is",
                  "kw",
                  "nb",
                  "nl",
                  "pl",
                  "pt",
                  "ro",
                  "ru",
                  "sk",
                  "sl",
                  "sr",
                  "sv",
                  "tr",
                  "uk",
                  "zh",
                  "zh-tw"
                ],
                "format": "string",
                "in": "query",
                "name": "lang",
                "required": false,
                "type": "string"
              },
              {
                "description": "Wraps return in jsonp callback. Example: callback=func",
                "format": "string",
                "in": "query",
                "name": "callback",
                "required": false,
                "type": "string"
              },
              {
                "description": "Your registered API key.",
                "format": "string",
                "in": "query",
                "name": "key",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": { "description": "A forecast object.", "schema": { "$ref": "#/definitions/ForecastDay" } },
              "default": { "description": "No Data.", "schema": { "$ref": "#/definitions/Error" } }
            },
            "summary": "Returns a daily forecast - Given a Postal Code.",
            "tags": ["16 day / daily Forecast"]
          }
        },
        "/forecast/energy?lat={lat}&lon={lon}": {
          "get": {
            "description": "Retrieve an 8 day forecast relevant to te Energy Sector (degree days, solar radiation, precipitation, wind).",
            "parameters": [
              {
                "description": "Latitude component of location.",
                "format": "double",
                "in": "path",
                "name": "lat",
                "required": true,
                "type": "number"
              },
              {
                "description": "Longitude component of location.",
                "format": "double",
                "in": "path",
                "name": "lon",
                "required": true,
                "type": "number"
              },
              {
                "description": "Temperature threshold to use to calculate degree days (default 18 C) ",
                "format": "double",
                "in": "query",
                "name": "threshold",
                "required": false,
                "type": "number"
              },
              {
                "description": "Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>",
                "enum": ["S", "I"],
                "format": "string",
                "in": "query",
                "name": "units",
                "required": false,
                "type": "string"
              },
              {
                "description": "Time period (default: daily)",
                "enum": ["hourly", "daily"],
                "format": "string",
                "in": "query",
                "name": "tp",
                "required": false,
                "type": "string"
              },
              {
                "description": "Wraps return in jsonp callback. Example: callback=func",
                "format": "string",
                "in": "query",
                "name": "callback",
                "required": false,
                "type": "string"
              },
              {
                "description": "Your registered API key.",
                "format": "string",
                "in": "query",
                "name": "key",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "An Energy Data Object.",
                "schema": { "$ref": "#/definitions/EnergyObsGroupForecast" }
              },
              "default": { "description": "No Data.", "schema": { "$ref": "#/definitions/Error" } }
            },
            "summary": "Returns Energy Forecast API response  - Given a single lat/lon. ",
            "tags": ["Forecast Degree Day API", "Forecast Solar Irradiance API"]
          }
        },
        "/forecast/hourly?city={city}&country={country}": {
          "get": {
            "description": " Returns an hourly forecast, where each point represents a one hour   period. Every point has a datetime string in the format \"YYYY-MM-DD:HH\". Time is UTC. Accepts a city in the format of City,ST or City. The state, and country parameters can be provided to make the search more accurate.\n",
            "parameters": [
              {
                "description": "City search.. Example - &city=Raleigh,NC or &city=Berlin,DE or city=Paris&country=FR",
                "format": "string",
                "in": "path",
                "name": "city",
                "required": true,
                "type": "string"
              },
              {
                "description": "Full name of state.",
                "format": "string",
                "in": "query",
                "name": "state",
                "required": false,
                "type": "string"
              },
              {
                "description": "Country Code (2 letter).",
                "format": "string",
                "in": "path",
                "name": "country",
                "required": true,
                "type": "string"
              },
              {
                "description": "Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>",
                "enum": ["S", "I"],
                "format": "string",
                "in": "query",
                "name": "units",
                "required": false,
                "type": "string"
              },
              {
                "description": "Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>",
                "enum": [
                  "ar",
                  "az",
                  "be",
                  "bg",
                  "bs",
                  "ca",
                  "cs",
                  "de",
                  "fi",
                  "fr",
                  "el",
                  "es",
                  "et",
                  "hr",
                  "hu",
                  "id",
                  "it",
                  "is",
                  "kw",
                  "nb",
                  "nl",
                  "pl",
                  "pt",
                  "ro",
                  "ru",
                  "sk",
                  "sl",
                  "sr",
                  "sv",
                  "tr",
                  "uk",
                  "zh",
                  "zh-tw"
                ],
                "format": "string",
                "in": "query",
                "name": "lang",
                "required": false,
                "type": "string"
              },
              {
                "description": "Wraps return in jsonp callback. Example: callback=func",
                "format": "string",
                "in": "query",
                "name": "callback",
                "required": false,
                "type": "string"
              },
              {
                "description": "Number of hours to return.",
                "format": "integer",
                "in": "query",
                "name": "hours",
                "required": false,
                "type": "integer"
              },
              {
                "description": "Your registered API key.",
                "format": "string",
                "in": "query",
                "name": "key",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": { "description": "A forecast object.", "schema": { "$ref": "#/definitions/ForecastHourly" } },
              "default": { "description": "No Data.", "schema": { "$ref": "#/definitions/Error" } }
            },
            "summary": "Returns an 120 hour (hourly forecast) - Given City and/or State, Country.",
            "tags": ["120 hour / hourly Forecast"]
          }
        },
        "/forecast/hourly?city_id={city_id}": {
          "get": {
            "description": " Returns an hourly forecast, where each point represents a one hour   period. Every point has a datetime string in the format \"YYYY-MM-DD:HH\". Time is UTC. \n",
            "parameters": [
              {
                "description": "City ID. Example: 4487042",
                "format": "integer",
                "in": "path",
                "name": "city_id",
                "required": true,
                "type": "integer"
              },
              {
                "description": "Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>",
                "enum": ["S", "I"],
                "format": "string",
                "in": "query",
                "name": "units",
                "required": false,
                "type": "string"
              },
              {
                "description": "Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>",
                "enum": [
                  "ar",
                  "az",
                  "be",
                  "bg",
                  "bs",
                  "ca",
                  "cs",
                  "de",
                  "fi",
                  "fr",
                  "el",
                  "es",
                  "et",
                  "hr",
                  "hu",
                  "id",
                  "it",
                  "is",
                  "kw",
                  "nb",
                  "nl",
                  "pl",
                  "pt",
                  "ro",
                  "ru",
                  "sk",
                  "sl",
                  "sr",
                  "sv",
                  "tr",
                  "uk",
                  "zh",
                  "zh-tw"
                ],
                "format": "string",
                "in": "query",
                "name": "lang",
                "required": false,
                "type": "string"
              },
              {
                "description": "Wraps return in jsonp callback. Example - callback=func",
                "format": "string",
                "in": "query",
                "name": "callback",
                "required": false,
                "type": "string"
              },
              {
                "description": "Number of hours to return.",
                "format": "integer",
                "in": "query",
                "name": "hours",
                "required": false,
                "type": "integer"
              },
              {
                "description": "Your registered API key.",
                "format": "string",
                "in": "query",
                "name": "key",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": { "description": "A forecast object.", "schema": { "$ref": "#/definitions/ForecastHourly" } },
              "default": { "description": "No Data.", "schema": { "$ref": "#/definitions/Error" } }
            },
            "summary": "Returns a 120 hour (hourly) forecast - Given a City ID.",
            "tags": ["120 hour / hourly Forecast"]
          }
        },
        "/forecast/hourly?lat={lat}&lon={lon}": {
          "get": {
            "description": "Returns an hourly forecast, where each point represents a one hour period. Every point has a datetime string in the format \"YYYY-MM-DD:HH\". Time is UTC. \n",
            "parameters": [
              {
                "description": "Latitude component of location.",
                "format": "double",
                "in": "path",
                "name": "lat",
                "required": true,
                "type": "number"
              },
              {
                "description": "Longitude component of location.",
                "format": "double",
                "in": "path",
                "name": "lon",
                "required": true,
                "type": "number"
              },
              {
                "description": "Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>",
                "enum": ["S", "I"],
                "format": "string",
                "in": "query",
                "name": "units",
                "required": false,
                "type": "string"
              },
              {
                "description": "Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>",
                "enum": [
                  "ar",
                  "az",
                  "be",
                  "bg",
                  "bs",
                  "ca",
                  "cs",
                  "de",
                  "fi",
                  "fr",
                  "el",
                  "es",
                  "et",
                  "hr",
                  "hu",
                  "id",
                  "it",
                  "is",
                  "kw",
                  "nb",
                  "nl",
                  "pl",
                  "pt",
                  "ro",
                  "ru",
                  "sk",
                  "sl",
                  "sr",
                  "sv",
                  "tr",
                  "uk",
                  "zh",
                  "zh-tw"
                ],
                "format": "string",
                "in": "query",
                "name": "lang",
                "required": false,
                "type": "string"
              },
              {
                "description": "Wraps return in jsonp callback. Example - callback=func",
                "format": "string",
                "in": "query",
                "name": "callback",
                "required": false,
                "type": "string"
              },
              {
                "description": "Your registered API key.",
                "format": "string",
                "in": "query",
                "name": "key",
                "required": true,
                "type": "string"
              },
              {
                "description": "Number of hours to return.",
                "format": "integer",
                "in": "query",
                "name": "hours",
                "required": false,
                "type": "integer"
              }
            ],
            "responses": {
              "200": { "description": "A forecast object.", "schema": { "$ref": "#/definitions/ForecastHourly" } },
              "default": { "description": "No Data.", "schema": { "$ref": "#/definitions/Error" } }
            },
            "summary": "Returns 120 hour (hourly) forecast - Given a lat/lon.",
            "tags": ["120 hour / hourly Forecast"]
          }
        },
        "/forecast/hourly?postal_code={postal_code}": {
          "get": {
            "description": " Returns an hourly forecast, where each point represents a one hour   period. Every point has a datetime string in the format \"YYYY-MM-DD:HH\". Time is UTC. \n",
            "parameters": [
              {
                "description": "Postal Code. Example: 28546",
                "format": "integer",
                "in": "path",
                "name": "postal_code",
                "required": true,
                "type": "integer"
              },
              {
                "description": "Country Code (2 letter).",
                "format": "string",
                "in": "query",
                "name": "country",
                "required": false,
                "type": "string"
              },
              {
                "description": "Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>",
                "enum": ["S", "I"],
                "format": "string",
                "in": "query",
                "name": "units",
                "required": false,
                "type": "string"
              },
              {
                "description": "Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>",
                "enum": [
                  "ar",
                  "az",
                  "be",
                  "bg",
                  "bs",
                  "ca",
                  "cs",
                  "de",
                  "fi",
                  "fr",
                  "el",
                  "es",
                  "et",
                  "hr",
                  "hu",
                  "id",
                  "it",
                  "is",
                  "kw",
                  "nb",
                  "nl",
                  "pl",
                  "pt",
                  "ro",
                  "ru",
                  "sk",
                  "sl",
                  "sr",
                  "sv",
                  "tr",
                  "uk",
                  "zh",
                  "zh-tw"
                ],
                "format": "string",
                "in": "query",
                "name": "lang",
                "required": false,
                "type": "string"
              },
              {
                "description": "Wraps return in jsonp callback. Example - callback=func",
                "format": "string",
                "in": "query",
                "name": "callback",
                "required": false,
                "type": "string"
              },
              {
                "description": "Number of hours to return.",
                "format": "integer",
                "in": "query",
                "name": "hours",
                "required": false,
                "type": "integer"
              },
              {
                "description": "Your registered API key.",
                "format": "string",
                "in": "query",
                "name": "key",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": { "description": "A forecast object.", "schema": { "$ref": "#/definitions/ForecastHourly" } },
              "default": { "description": "No Data.", "schema": { "$ref": "#/definitions/Error" } }
            },
            "summary": "Returns a 120 hour (hourly) forecast - Given a Postal Code.",
            "tags": ["120 hour / hourly Forecast"]
          }
        },
        "/history/airquality?city={city}&country={country}": {
          "get": {
            "description": "Returns historical air quality conditions.",
            "parameters": [
              {
                "description": "City search.. Example - &city=Raleigh,NC or &city=Berlin,DE or city=Paris&country=FR",
                "format": "string",
                "in": "path",
                "name": "city",
                "required": true,
                "type": "string"
              },
              {
                "description": "Full name of state.",
                "format": "string",
                "in": "query",
                "name": "state",
                "required": false,
                "type": "string"
              },
              {
                "description": "Country Code (2 letter).",
                "format": "string",
                "in": "path",
                "name": "country",
                "required": true,
                "type": "string"
              },
              {
                "description": "Wraps return in jsonp callback. Example: callback=func",
                "format": "string",
                "in": "query",
                "name": "callback",
                "required": false,
                "type": "string"
              },
              {
                "description": "Your registered API key.",
                "format": "string",
                "in": "query",
                "name": "key",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "Historical air quality conditions",
                "schema": { "$ref": "#/definitions/AQCurrentGroup" }
              },
              "default": { "description": "No Data.", "schema": { "$ref": "#/definitions/Error" } }
            },
            "summary": "Returns 72 hours of historical quality conditions - Given City and/or State, Country.",
            "tags": ["Historical Air Quality"]
          }
        },
        "/history/airquality?city_id={city_id}": {
          "get": {
            "description": "Returns historical air quality conditions.",
            "parameters": [
              {
                "description": "City ID.",
                "format": "double",
                "in": "path",
                "name": "city_id",
                "required": true,
                "type": "number"
              },
              {
                "description": "Wraps return in jsonp callback. Example - callback=func",
                "format": "string",
                "in": "query",
                "name": "callback",
                "required": false,
                "type": "string"
              },
              {
                "description": "Your registered API key.",
                "format": "string",
                "in": "query",
                "name": "key",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "Historical air quality conditions",
                "schema": { "$ref": "#/definitions/AQCurrentGroup" }
              },
              "default": { "description": "No Data.", "schema": { "$ref": "#/definitions/Error" } }
            },
            "summary": "Returns 72 hours of historical air quality conditions - Given a City ID.",
            "tags": ["Historical Air Quality"]
          }
        },
        "/history/airquality?lat={lat}&lon={lon}": {
          "get": {
            "description": "Returns historical air quality conditions.",
            "parameters": [
              {
                "description": "Latitude component of location.",
                "format": "double",
                "in": "path",
                "name": "lat",
                "required": true,
                "type": "number"
              },
              {
                "description": "Longitude component of location.",
                "format": "double",
                "in": "path",
                "name": "lon",
                "required": true,
                "type": "number"
              },
              {
                "description": "Wraps return in jsonp callback. Example - callback=func",
                "format": "string",
                "in": "query",
                "name": "callback",
                "required": false,
                "type": "string"
              },
              {
                "description": "Your registered API key.",
                "format": "string",
                "in": "query",
                "name": "key",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "Historical air quality conditions",
                "schema": { "$ref": "#/definitions/AQCurrentGroup" }
              },
              "default": { "description": "No Data.", "schema": { "$ref": "#/definitions/Error" } }
            },
            "summary": "Returns 72 hours of historical air quality conditions - Given a lat/lon.",
            "tags": ["Historical Air Quality"]
          }
        },
        "/history/airquality?postal_code={postal_code}": {
          "get": {
            "description": "Returns historical air quality conditions.",
            "parameters": [
              {
                "description": "Postal Code. Example: 28546",
                "format": "integer",
                "in": "path",
                "name": "postal_code",
                "required": true,
                "type": "integer"
              },
              {
                "description": "Country Code (2 letter).",
                "format": "string",
                "in": "query",
                "name": "country",
                "required": false,
                "type": "string"
              },
              {
                "description": "Wraps return in jsonp callback. Example - callback=func",
                "format": "string",
                "in": "query",
                "name": "callback",
                "required": false,
                "type": "string"
              },
              {
                "description": "Your registered API key.",
                "format": "string",
                "in": "query",
                "name": "key",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "Historical air quality conditions",
                "schema": { "$ref": "#/definitions/AQCurrentGroup" }
              },
              "default": { "description": "No Data.", "schema": { "$ref": "#/definitions/Error" } }
            },
            "summary": "Returns 72 hours of historical air quality conditions - Given a Postal Code.",
            "tags": ["Historical Air Quality"]
          }
        },
        "/history/daily?city={city}&country={country}": {
          "get": {
            "description": "Returns Historical Observations - Given a city in the format of City,ST or City. The state, and country parameters can be provided to make the search more accurate. **(LIMIT 1 day for Free plan. LIMIT 7 days for Developer. LIMIT 30 days for Advanced/Advanced+/Enterprise)**",
            "parameters": [
              {
                "description": "City search.. Example - &city=Raleigh,NC or &city=Berlin,DE or city=Paris&country=FR",
                "format": "string",
                "in": "path",
                "name": "city",
                "required": true,
                "type": "string"
              },
              {
                "description": "Full name of state.",
                "format": "string",
                "in": "query",
                "name": "state",
                "required": false,
                "type": "string"
              },
              {
                "description": "Country Code (2 letter).",
                "format": "string",
                "in": "path",
                "name": "country",
                "required": true,
                "type": "string"
              },
              {
                "description": "Start Date (YYYY-MM-DD or YYYY-MM-DD:HH).",
                "format": "string",
                "in": "query",
                "name": "start_date",
                "required": true,
                "type": "string"
              },
              {
                "description": "End Date (YYYY-MM-DD or YYYY-MM-DD:HH).",
                "format": "string",
                "in": "query",
                "name": "end_date",
                "required": true,
                "type": "string"
              },
              {
                "description": "Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>",
                "enum": ["S", "I"],
                "format": "string",
                "in": "query",
                "name": "units",
                "required": false,
                "type": "string"
              },
              {
                "description": "Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>",
                "enum": [
                  "ar",
                  "az",
                  "be",
                  "bg",
                  "bs",
                  "ca",
                  "cs",
                  "de",
                  "fi",
                  "fr",
                  "el",
                  "es",
                  "et",
                  "hr",
                  "hu",
                  "id",
                  "it",
                  "is",
                  "kw",
                  "nb",
                  "nl",
                  "pl",
                  "pt",
                  "ro",
                  "ru",
                  "sk",
                  "sl",
                  "sr",
                  "sv",
                  "tr",
                  "uk",
                  "zh",
                  "zh-tw"
                ],
                "format": "string",
                "in": "query",
                "name": "lang",
                "required": false,
                "type": "string"
              },
              {
                "description": "Wraps return in jsonp callback. Example: callback=func",
                "format": "string",
                "in": "query",
                "name": "callback",
                "required": false,
                "type": "string"
              },
              {
                "description": "Your registered API key.",
                "format": "string",
                "in": "query",
                "name": "key",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "An Historical Day Data Object.",
                "schema": { "$ref": "#/definitions/HistoryDay" }
              },
              "default": { "description": "No Data.", "schema": { "$ref": "#/definitions/Error" } }
            },
            "summary": "Returns Historical Observations - Given City and/or State, Country.",
            "tags": ["Daily Historical Weather Data"]
          }
        },
        "/history/daily?city_id={city_id}": {
          "get": {
            "description": "Returns Historical Observations - Given a City ID. **(LIMIT 1 day for Free plan. LIMIT 7 days for Developer. LIMIT 30 days for Advanced/Advanced+/Enterprise)**",
            "parameters": [
              {
                "description": "City ID. Example: 4487042",
                "format": "string",
                "in": "path",
                "name": "city_id",
                "required": true,
                "type": "string"
              },
              {
                "description": "Start Date (YYYY-MM-DD or YYYY-MM-DD:HH)",
                "format": "string",
                "in": "query",
                "name": "start_date",
                "required": true,
                "type": "string"
              },
              {
                "description": "End Date (YYYY-MM-DD or YYYY-MM-DD:HH)",
                "format": "string",
                "in": "query",
                "name": "end_date",
                "required": true,
                "type": "string"
              },
              {
                "description": "Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>",
                "enum": ["S", "I"],
                "format": "string",
                "in": "query",
                "name": "units",
                "required": false,
                "type": "string"
              },
              {
                "description": "Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>",
                "enum": [
                  "ar",
                  "az",
                  "be",
                  "bg",
                  "bs",
                  "ca",
                  "cs",
                  "de",
                  "fi",
                  "fr",
                  "el",
                  "es",
                  "et",
                  "hr",
                  "hu",
                  "id",
                  "it",
                  "is",
                  "kw",
                  "nb",
                  "nl",
                  "pl",
                  "pt",
                  "ro",
                  "ru",
                  "sk",
                  "sl",
                  "sr",
                  "sv",
                  "tr",
                  "uk",
                  "zh",
                  "zh-tw"
                ],
                "format": "string",
                "in": "query",
                "name": "lang",
                "required": false,
                "type": "string"
              },
              {
                "description": "Wraps return in jsonp callback. Example: callback=func",
                "format": "string",
                "in": "query",
                "name": "callback",
                "required": false,
                "type": "string"
              },
              {
                "description": "Your registered API key.",
                "format": "string",
                "in": "query",
                "name": "key",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "An Historical Day Data Object.",
                "schema": { "$ref": "#/definitions/HistoryDay" }
              },
              "default": { "description": "No Data.", "schema": { "$ref": "#/definitions/Error" } }
            },
            "summary": "Returns Historical Observations - Given a City ID",
            "tags": ["Daily Historical Weather Data"]
          }
        },
        "/history/daily?lat={lat}&lon={lon}": {
          "get": {
            "description": "Returns Historical Observations - Given a lat, and lon. **(LIMIT 1 day for Free plan. LIMIT 7 days for Developer. LIMIT 30 days for Advanced/Advanced+/Enterprise)**",
            "parameters": [
              {
                "description": "Latitude component of location.",
                "format": "double",
                "in": "path",
                "name": "lat",
                "required": true,
                "type": "number"
              },
              {
                "description": "Longitude component of location.",
                "format": "double",
                "in": "path",
                "name": "lon",
                "required": true,
                "type": "number"
              },
              {
                "description": "Start Date (YYYY-MM-DD or YYYY-MM-DD:HH).",
                "format": "string",
                "in": "query",
                "name": "start_date",
                "required": true,
                "type": "string"
              },
              {
                "description": "End Date (YYYY-MM-DD or YYYY-MM-DD:HH).",
                "format": "string",
                "in": "query",
                "name": "end_date",
                "required": true,
                "type": "string"
              },
              {
                "description": "Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>",
                "enum": ["S", "I"],
                "format": "string",
                "in": "query",
                "name": "units",
                "required": false,
                "type": "string"
              },
              {
                "description": "Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>",
                "enum": [
                  "ar",
                  "az",
                  "be",
                  "bg",
                  "bs",
                  "ca",
                  "cs",
                  "de",
                  "fi",
                  "fr",
                  "el",
                  "es",
                  "et",
                  "hr",
                  "hu",
                  "id",
                  "it",
                  "is",
                  "kw",
                  "nb",
                  "nl",
                  "pl",
                  "pt",
                  "ro",
                  "ru",
                  "sk",
                  "sl",
                  "sr",
                  "sv",
                  "tr",
                  "uk",
                  "zh",
                  "zh-tw"
                ],
                "format": "string",
                "in": "query",
                "name": "lang",
                "required": false,
                "type": "string"
              },
              {
                "description": "Wraps return in jsonp callback. Example: callback=func",
                "format": "string",
                "in": "query",
                "name": "callback",
                "required": false,
                "type": "string"
              },
              {
                "description": "Your registered API key.",
                "format": "string",
                "in": "query",
                "name": "key",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "An Historical Day Data Object.",
                "schema": { "$ref": "#/definitions/HistoryDay" }
              },
              "default": { "description": "No Data.", "schema": { "$ref": "#/definitions/Error" } }
            },
            "summary": "Returns Historical Observations - Given a lat/lon.",
            "tags": ["Daily Historical Weather Data"]
          }
        },
        "/history/daily?postal_code={postal_code}": {
          "get": {
            "description": "Returns Historical Observations - Given a Postal Code. **(LIMIT 1 day for Free plan. LIMIT 7 days for Developer. LIMIT 30 days for Advanced/Advanced+/Enterprise)**",
            "parameters": [
              {
                "description": "Postal Code. Example: 28546",
                "format": "string",
                "in": "path",
                "name": "postal_code",
                "required": true,
                "type": "string"
              },
              {
                "description": "Country Code (2 letter).",
                "format": "string",
                "in": "query",
                "name": "country",
                "required": false,
                "type": "string"
              },
              {
                "description": "Start Date (YYYY-MM-DD or YYYY-MM-DD:HH)",
                "format": "string",
                "in": "query",
                "name": "start_date",
                "required": true,
                "type": "string"
              },
              {
                "description": "End Date (YYYY-MM-DD or YYYY-MM-DD:HH)",
                "format": "string",
                "in": "query",
                "name": "end_date",
                "required": true,
                "type": "string"
              },
              {
                "description": "Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>",
                "enum": ["S", "I"],
                "format": "string",
                "in": "query",
                "name": "units",
                "required": false,
                "type": "string"
              },
              {
                "description": "Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>",
                "enum": [
                  "ar",
                  "az",
                  "be",
                  "bg",
                  "bs",
                  "ca",
                  "cs",
                  "de",
                  "fi",
                  "fr",
                  "el",
                  "es",
                  "et",
                  "hr",
                  "hu",
                  "id",
                  "it",
                  "is",
                  "kw",
                  "nb",
                  "nl",
                  "pl",
                  "pt",
                  "ro",
                  "ru",
                  "sk",
                  "sl",
                  "sr",
                  "sv",
                  "tr",
                  "uk",
                  "zh",
                  "zh-tw"
                ],
                "format": "string",
                "in": "query",
                "name": "lang",
                "required": false,
                "type": "string"
              },
              {
                "description": "Wraps return in jsonp callback. Example: callback=func",
                "format": "string",
                "in": "query",
                "name": "callback",
                "required": false,
                "type": "string"
              },
              {
                "description": "Your registered API key.",
                "format": "string",
                "in": "query",
                "name": "key",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "An Historical Day Data Object.",
                "schema": { "$ref": "#/definitions/HistoryDay" }
              },
              "default": { "description": "No Data.", "schema": { "$ref": "#/definitions/Error" } }
            },
            "summary": "Returns Historical Observations - Given a Postal Code",
            "tags": ["Daily Historical Weather Data"]
          }
        },
        "/history/daily?station={station}": {
          "get": {
            "description": "Returns Historical Observations - Given a station ID. **(LIMIT 1 day for Free plan. LIMIT 7 days for Developer. LIMIT 30 days for Advanced/Advanced+/Enterprise)**",
            "parameters": [
              {
                "description": "Station ID.",
                "format": "string",
                "in": "path",
                "name": "station",
                "required": true,
                "type": "string"
              },
              {
                "description": "Start Date (YYYY-MM-DD or YYYY-MM-DD:HH).",
                "format": "string",
                "in": "query",
                "name": "start_date",
                "required": true,
                "type": "string"
              },
              {
                "description": "End Date (YYYY-MM-DD or YYYY-MM-DD:HH).",
                "format": "string",
                "in": "query",
                "name": "end_date",
                "required": true,
                "type": "string"
              },
              {
                "description": "Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>",
                "enum": ["S", "I"],
                "format": "string",
                "in": "query",
                "name": "units",
                "required": false,
                "type": "string"
              },
              {
                "description": "Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>",
                "enum": [
                  "ar",
                  "az",
                  "be",
                  "bg",
                  "bs",
                  "ca",
                  "cs",
                  "de",
                  "fi",
                  "fr",
                  "el",
                  "es",
                  "et",
                  "hr",
                  "hu",
                  "id",
                  "it",
                  "is",
                  "kw",
                  "nb",
                  "nl",
                  "pl",
                  "pt",
                  "ro",
                  "ru",
                  "sk",
                  "sl",
                  "sr",
                  "sv",
                  "tr",
                  "uk",
                  "zh",
                  "zh-tw"
                ],
                "format": "string",
                "in": "query",
                "name": "lang",
                "required": false,
                "type": "string"
              },
              {
                "description": "Wraps return in jsonp callback. Example: callback=func",
                "format": "string",
                "in": "query",
                "name": "callback",
                "required": false,
                "type": "string"
              },
              {
                "description": "Your registered API key.",
                "format": "string",
                "in": "query",
                "name": "key",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "An Historical Day Data Object.",
                "schema": { "$ref": "#/definitions/HistoryDay" }
              },
              "default": { "description": "No Data.", "schema": { "$ref": "#/definitions/Error" } }
            },
            "summary": "Returns Historical Observations - Given a station ID.",
            "tags": ["Daily Historical Weather Data"]
          }
        },
        "/history/energy/bbox?lat1={lat1}&lon1={lon1}&lat2={lat2}&lon2={lon2}": {
          "get": {
            "description": "Returns aggregate energy specific historical weather fields, over a specified time period. Supply a bounding box ex: lat1=40&lon1=-78&lat2=38&lon2=-80. This API will return UP TO 150 stations, aggregated by the specified time period start_date to end_date. ",
            "parameters": [
              {
                "description": "Latitude of upper left corner.",
                "format": "double",
                "in": "path",
                "name": "lat1",
                "required": true,
                "type": "number"
              },
              {
                "description": "Longitude of upper left corner.",
                "format": "double",
                "in": "path",
                "name": "lon1",
                "required": true,
                "type": "number"
              },
              {
                "description": "Latitude of lower right corner.",
                "format": "double",
                "in": "path",
                "name": "lat2",
                "required": true,
                "type": "number"
              },
              {
                "description": "Longitude of lower right corner.",
                "format": "double",
                "in": "path",
                "name": "lon2",
                "required": true,
                "type": "number"
              },
              {
                "description": "Start Date (YYYY-MM-DD or YYYY-MM-DD:HH).",
                "format": "string",
                "in": "query",
                "name": "start_date",
                "required": true,
                "type": "string"
              },
              {
                "description": "End Date (YYYY-MM-DD or YYYY-MM-DD:HH).",
                "format": "string",
                "in": "query",
                "name": "end_date",
                "required": true,
                "type": "string"
              },
              {
                "description": "Temperature threshold to use to calculate degree days (default 18 C) ",
                "format": "double",
                "in": "query",
                "name": "threshold",
                "required": false,
                "type": "number"
              },
              {
                "description": "Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>",
                "enum": ["S", "I"],
                "format": "string",
                "in": "query",
                "name": "units",
                "required": false,
                "type": "string"
              },
              {
                "description": "Wraps return in jsonp callback. Example: callback=func",
                "format": "string",
                "in": "query",
                "name": "callback",
                "required": false,
                "type": "string"
              },
              {
                "description": "Your registered API key.",
                "format": "string",
                "in": "query",
                "name": "key",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": { "description": "An Energy Data Object.", "schema": { "$ref": "#/definitions/EnergyObsGroup" } },
              "default": { "description": "No Data.", "schema": { "$ref": "#/definitions/Error" } }
            },
            "summary": "Returns multiple locations given a bounding box. ",
            "tags": ["Historical Degree Day API", "Historical Solar Irradiance API", "Historical Weather Energy API"]
          }
        },
        "/history/energy?lat={lat}&lon={lon}": {
          "get": {
            "description": "Returns aggregate energy specific historical weather fields, over a specified time period.",
            "parameters": [
              {
                "description": "Latitude component of location.",
                "format": "double",
                "in": "path",
                "name": "lat",
                "required": true,
                "type": "number"
              },
              {
                "description": "Longitude component of location.",
                "format": "double",
                "in": "path",
                "name": "lon",
                "required": true,
                "type": "number"
              },
              {
                "description": "Start Date (YYYY-MM-DD or YYYY-MM-DD:HH).",
                "format": "string",
                "in": "query",
                "name": "start_date",
                "required": true,
                "type": "string"
              },
              {
                "description": "End Date (YYYY-MM-DD or YYYY-MM-DD:HH).",
                "format": "string",
                "in": "query",
                "name": "end_date",
                "required": true,
                "type": "string"
              },
              {
                "description": "Time period to aggregate by (daily, monthly)",
                "enum": ["hourly", "daily", "monthly"],
                "format": "string",
                "in": "query",
                "name": "tp",
                "required": false,
                "type": "string"
              },
              {
                "description": "Temperature threshold to use to calculate degree days (default 18 C) ",
                "format": "double",
                "in": "query",
                "name": "threshold",
                "required": false,
                "type": "number"
              },
              {
                "description": "Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>",
                "enum": ["S", "I"],
                "format": "string",
                "in": "query",
                "name": "units",
                "required": false,
                "type": "string"
              },
              {
                "description": "Wraps return in jsonp callback. Example: callback=func",
                "format": "string",
                "in": "query",
                "name": "callback",
                "required": false,
                "type": "string"
              },
              {
                "description": "Your registered API key.",
                "format": "string",
                "in": "query",
                "name": "key",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": { "description": "An Energy Data Object.", "schema": { "$ref": "#/definitions/EnergyObsGroup" } },
              "default": { "description": "No Data.", "schema": { "$ref": "#/definitions/Error" } }
            },
            "summary": "Returns Energy API response  - Given a single lat/lon. ",
            "tags": ["Historical Degree Day API", "Historical Solar Irradiance API", "Historical Weather Energy API"]
          }
        },
        "/history/hourly?city={city}&country={country}": {
          "get": {
            "description": "Returns Historical Observations - Given a city in the format of City,ST or City. The state, and country parameters can be provided to make the search more accurate. **(LIMIT 1 day for Free plan. LIMIT 7 days for Developer. LIMIT 30 days for Advanced/Advanced+/Enterprise)**",
            "parameters": [
              {
                "description": "City search. Example - &city=Raleigh,NC or &city=Berlin,DE or city=Paris&country=FR",
                "format": "string",
                "in": "path",
                "name": "city",
                "required": true,
                "type": "string"
              },
              {
                "description": "Full name of state.",
                "format": "string",
                "in": "query",
                "name": "state",
                "required": false,
                "type": "string"
              },
              {
                "description": "Country Code (2 letter).",
                "format": "string",
                "in": "path",
                "name": "country",
                "required": true,
                "type": "string"
              },
              {
                "description": "Start Date (YYYY-MM-DD or YYYY-MM-DD:HH).",
                "format": "string",
                "in": "query",
                "name": "start_date",
                "required": true,
                "type": "string"
              },
              {
                "description": "End Date (YYYY-MM-DD or YYYY-MM-DD:HH).",
                "format": "string",
                "in": "query",
                "name": "end_date",
                "required": true,
                "type": "string"
              },
              {
                "description": "Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>",
                "enum": ["S", "I"],
                "format": "string",
                "in": "query",
                "name": "units",
                "required": false,
                "type": "string"
              },
              {
                "description": "Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>",
                "enum": [
                  "ar",
                  "az",
                  "be",
                  "bg",
                  "bs",
                  "ca",
                  "cs",
                  "de",
                  "fi",
                  "fr",
                  "el",
                  "es",
                  "et",
                  "hr",
                  "hu",
                  "id",
                  "it",
                  "is",
                  "kw",
                  "nb",
                  "nl",
                  "pl",
                  "pt",
                  "ro",
                  "ru",
                  "sk",
                  "sl",
                  "sr",
                  "sv",
                  "tr",
                  "uk",
                  "zh",
                  "zh-tw"
                ],
                "format": "string",
                "in": "query",
                "name": "lang",
                "required": false,
                "type": "string"
              },
              {
                "description": "Assume utc (default) or local time for start_date, end_date",
                "enum": ["local", "utc"],
                "format": "string",
                "in": "query",
                "name": "tz",
                "required": false,
                "type": "string"
              },
              {
                "description": "Wraps return in jsonp callback. Example: callback=func",
                "format": "string",
                "in": "query",
                "name": "callback",
                "required": false,
                "type": "string"
              },
              {
                "description": "Your registered API key.",
                "format": "string",
                "in": "query",
                "name": "key",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": { "description": "An Historical Data Object.", "schema": { "$ref": "#/definitions/History" } },
              "default": { "description": "No Data.", "schema": { "$ref": "#/definitions/Error" } }
            },
            "summary": "Returns Historical Observations - Given City and/or State, Country.",
            "tags": ["Hourly Historical Weather Data"]
          }
        },
        "/history/hourly?city_id={city_id}": {
          "get": {
            "description": "Returns Historical Observations - Given a City ID. **(LIMIT 1 day for Free plan. LIMIT 7 days for Developer. LIMIT 30 days for Advanced/Advanced+/Enterprise)**",
            "parameters": [
              {
                "description": "City ID. Example: 4487042",
                "format": "string",
                "in": "path",
                "name": "city_id",
                "required": true,
                "type": "string"
              },
              {
                "description": "Start Date (YYYY-MM-DD or YYYY-MM-DD:HH)",
                "format": "string",
                "in": "query",
                "name": "start_date",
                "required": true,
                "type": "string"
              },
              {
                "description": "End Date (YYYY-MM-DD or YYYY-MM-DD:HH)",
                "format": "string",
                "in": "query",
                "name": "end_date",
                "required": true,
                "type": "string"
              },
              {
                "description": "Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>",
                "enum": ["S", "I"],
                "format": "string",
                "in": "query",
                "name": "units",
                "required": false,
                "type": "string"
              },
              {
                "description": "Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>",
                "enum": [
                  "ar",
                  "az",
                  "be",
                  "bg",
                  "bs",
                  "ca",
                  "cs",
                  "de",
                  "fi",
                  "fr",
                  "el",
                  "es",
                  "et",
                  "hr",
                  "hu",
                  "id",
                  "it",
                  "is",
                  "kw",
                  "nb",
                  "nl",
                  "pl",
                  "pt",
                  "ro",
                  "ru",
                  "sk",
                  "sl",
                  "sr",
                  "sv",
                  "tr",
                  "uk",
                  "zh",
                  "zh-tw"
                ],
                "format": "string",
                "in": "query",
                "name": "lang",
                "required": false,
                "type": "string"
              },
              {
                "description": "Assume utc (default) or local time for start_date, end_date",
                "enum": ["local", "utc"],
                "format": "string",
                "in": "query",
                "name": "tz",
                "required": false,
                "type": "string"
              },
              {
                "description": "Wraps return in jsonp callback. Example: callback=func",
                "format": "string",
                "in": "query",
                "name": "callback",
                "required": false,
                "type": "string"
              },
              {
                "description": "Your registered API key.",
                "format": "string",
                "in": "query",
                "name": "key",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": { "description": "An Historical Data Object.", "schema": { "$ref": "#/definitions/History" } },
              "default": { "description": "No Data.", "schema": { "$ref": "#/definitions/Error" } }
            },
            "summary": "Returns Historical Observations - Given a City ID",
            "tags": ["Hourly Historical Weather Data"]
          }
        },
        "/history/hourly?lat={lat}&lon={lon}": {
          "get": {
            "description": "Returns Historical Observations - Given a lat, and lon. **(LIMIT 1 day for Free plan. LIMIT 7 days for Developer. LIMIT 30 days for Advanced/Advanced+/Enterprise)**",
            "parameters": [
              {
                "description": "Latitude component of location.",
                "format": "double",
                "in": "path",
                "name": "lat",
                "required": true,
                "type": "number"
              },
              {
                "description": "Longitude component of location.",
                "format": "double",
                "in": "path",
                "name": "lon",
                "required": true,
                "type": "number"
              },
              {
                "description": "Start Date (YYYY-MM-DD or YYYY-MM-DD:HH).",
                "format": "string",
                "in": "query",
                "name": "start_date",
                "required": true,
                "type": "string"
              },
              {
                "description": "End Date (YYYY-MM-DD or YYYY-MM-DD:HH).",
                "format": "string",
                "in": "query",
                "name": "end_date",
                "required": true,
                "type": "string"
              },
              {
                "description": "Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>",
                "enum": ["S", "I"],
                "format": "string",
                "in": "query",
                "name": "units",
                "required": false,
                "type": "string"
              },
              {
                "description": "Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>",
                "enum": [
                  "ar",
                  "az",
                  "be",
                  "bg",
                  "bs",
                  "ca",
                  "cs",
                  "de",
                  "fi",
                  "fr",
                  "el",
                  "es",
                  "et",
                  "hr",
                  "hu",
                  "id",
                  "it",
                  "is",
                  "kw",
                  "nb",
                  "nl",
                  "pl",
                  "pt",
                  "ro",
                  "ru",
                  "sk",
                  "sl",
                  "sr",
                  "sv",
                  "tr",
                  "uk",
                  "zh",
                  "zh-tw"
                ],
                "format": "string",
                "in": "query",
                "name": "lang",
                "required": false,
                "type": "string"
              },
              {
                "description": "Assume utc (default) or local time for start_date, end_date",
                "enum": ["local", "utc"],
                "format": "string",
                "in": "query",
                "name": "tz",
                "required": false,
                "type": "string"
              },
              {
                "description": "Wraps return in jsonp callback. Example: callback=func",
                "format": "string",
                "in": "query",
                "name": "callback",
                "required": false,
                "type": "string"
              },
              {
                "description": "Your registered API key.",
                "format": "string",
                "in": "query",
                "name": "key",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": { "description": "An Historical Data Object.", "schema": { "$ref": "#/definitions/History" } },
              "default": { "description": "No Data.", "schema": { "$ref": "#/definitions/Error" } }
            },
            "summary": "Returns Historical Observations - Given a lat/lon.",
            "tags": ["Hourly Historical Weather Data"]
          }
        },
        "/history/hourly?postal_code={postal_code}": {
          "get": {
            "description": "Returns Historical Observations - Given a Postal Code. **(LIMIT 1 day for Free plan. LIMIT 7 days for Developer. LIMIT 30 days for Advanced/Advanced+/Enterprise)**",
            "parameters": [
              {
                "description": "Postal Code. Example: 28546",
                "format": "string",
                "in": "path",
                "name": "postal_code",
                "required": true,
                "type": "string"
              },
              {
                "description": "Country Code (2 letter).",
                "format": "string",
                "in": "query",
                "name": "country",
                "required": false,
                "type": "string"
              },
              {
                "description": "Start Date (YYYY-MM-DD or YYYY-MM-DD:HH)",
                "format": "string",
                "in": "query",
                "name": "start_date",
                "required": true,
                "type": "string"
              },
              {
                "description": "End Date (YYYY-MM-DD or YYYY-MM-DD:HH)",
                "format": "string",
                "in": "query",
                "name": "end_date",
                "required": true,
                "type": "string"
              },
              {
                "description": "Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>",
                "enum": ["S", "I"],
                "format": "string",
                "in": "query",
                "name": "units",
                "required": false,
                "type": "string"
              },
              {
                "description": "Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>",
                "enum": [
                  "ar",
                  "az",
                  "be",
                  "bg",
                  "bs",
                  "ca",
                  "cs",
                  "de",
                  "fi",
                  "fr",
                  "el",
                  "es",
                  "et",
                  "hr",
                  "hu",
                  "id",
                  "it",
                  "is",
                  "kw",
                  "nb",
                  "nl",
                  "pl",
                  "pt",
                  "ro",
                  "ru",
                  "sk",
                  "sl",
                  "sr",
                  "sv",
                  "tr",
                  "uk",
                  "zh",
                  "zh-tw"
                ],
                "format": "string",
                "in": "query",
                "name": "lang",
                "required": false,
                "type": "string"
              },
              {
                "description": "Assume utc (default) or local time for start_date, end_date",
                "enum": ["local", "utc"],
                "format": "string",
                "in": "query",
                "name": "tz",
                "required": false,
                "type": "string"
              },
              {
                "description": "Wraps return in jsonp callback. Example: callback=func",
                "format": "string",
                "in": "query",
                "name": "callback",
                "required": false,
                "type": "string"
              },
              {
                "description": "Your registered API key.",
                "format": "string",
                "in": "query",
                "name": "key",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": { "description": "An Historical Data Object.", "schema": { "$ref": "#/definitions/History" } },
              "default": { "description": "No Data.", "schema": { "$ref": "#/definitions/Error" } }
            },
            "summary": "Returns Historical Observations - Given a Postal Code",
            "tags": ["Hourly Historical Weather Data"]
          }
        },
        "/history/hourly?station={station}": {
          "get": {
            "description": "Returns Historical Observations - Given a station ID. **(LIMIT 1 day for Free plan. LIMIT 7 days for Developer. LIMIT 30 days for Advanced/Advanced+/Enterprise)**",
            "parameters": [
              {
                "description": "Station ID.",
                "format": "string",
                "in": "path",
                "name": "station",
                "required": true,
                "type": "string"
              },
              {
                "description": "Start Date (YYYY-MM-DD or YYYY-MM-DD:HH).",
                "format": "string",
                "in": "query",
                "name": "start_date",
                "required": true,
                "type": "string"
              },
              {
                "description": "End Date (YYYY-MM-DD or YYYY-MM-DD:HH).",
                "format": "string",
                "in": "query",
                "name": "end_date",
                "required": true,
                "type": "string"
              },
              {
                "description": "Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>",
                "enum": ["S", "I"],
                "format": "string",
                "in": "query",
                "name": "units",
                "required": false,
                "type": "string"
              },
              {
                "description": "Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>",
                "enum": [
                  "ar",
                  "az",
                  "be",
                  "bg",
                  "bs",
                  "ca",
                  "cs",
                  "de",
                  "fi",
                  "fr",
                  "el",
                  "es",
                  "et",
                  "hr",
                  "hu",
                  "id",
                  "it",
                  "is",
                  "kw",
                  "nb",
                  "nl",
                  "pl",
                  "pt",
                  "ro",
                  "ru",
                  "sk",
                  "sl",
                  "sr",
                  "sv",
                  "tr",
                  "uk",
                  "zh",
                  "zh-tw"
                ],
                "format": "string",
                "in": "query",
                "name": "lang",
                "required": false,
                "type": "string"
              },
              {
                "description": "Assume utc (default) or local time for start_date, end_date",
                "enum": ["local", "utc"],
                "format": "string",
                "in": "query",
                "name": "tz",
                "required": false,
                "type": "string"
              },
              {
                "description": "Wraps return in jsonp callback. Example: callback=func",
                "format": "string",
                "in": "query",
                "name": "callback",
                "required": false,
                "type": "string"
              },
              {
                "description": "Your registered API key.",
                "format": "string",
                "in": "query",
                "name": "key",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": { "description": "An Historical Data Object.", "schema": { "$ref": "#/definitions/History" } },
              "default": { "description": "No Data.", "schema": { "$ref": "#/definitions/Error" } }
            },
            "summary": "Returns Historical Observations - Given a station ID.",
            "tags": ["Hourly Historical Weather Data"]
          }
        }
      },
      "definitions": {
        "AQCurrent": {
          "properties": {
            "aqi": { "description": "Cloud cover as a percentage (%)", "example": 100, "type": "integer" },
            "no2": { "description": "Concentration of NO2 (µg/m³)", "example": 25, "type": "number" },
            "o3": { "description": "Concentration of O3 (µg/m³)", "example": 2, "type": "number" },
            "pm10": { "description": "Concentration of PM 10 (µg/m³)", "example": 150, "type": "number" },
            "pm25": { "description": "Concentration of PM 2.5 (µg/m³)", "example": 230, "type": "number" },
            "so2": { "description": "Concentration of SO2 (µg/m³)", "example": 50, "type": "number" }
          },
          "type": "object"
        },
        "AQCurrentGroup": {
          "properties": {
            "city_name": { "description": "City Name", "example": "Raleigh", "type": "string" },
            "country_code": { "description": "Country Abbreviation", "example": "US", "type": "string" },
            "data": { "items": { "$ref": "#/definitions/AQCurrent" }, "type": "array" },
            "lat": { "description": "Latitude", "example": "38.25", "type": "string" },
            "lon": { "description": "Longitude", "example": "-78.00", "type": "string" },
            "state_code": { "description": "State Abbreviation", "example": "NC", "type": "string" },
            "timezone": { "description": "Local IANA time zone", "example": "America/New_York", "type": "string" }
          },
          "type": "object"
        },
        "AQHour": {
          "properties": {
            "aqi": { "description": "Cloud cover as a percentage (%)", "example": 100, "type": "integer" },
            "no2": { "description": "Concentration of NO2 (µg/m³)", "example": 25, "type": "number" },
            "o3": { "description": "Concentration of O3 (µg/m³)", "example": 2, "type": "number" },
            "pm10": { "description": "Concentration of PM 10 (µg/m³)", "example": 150, "type": "number" },
            "pm25": { "description": "Concentration of PM 2.5 (µg/m³)", "example": 230, "type": "number" },
            "so2": { "description": "Concentration of SO2 (µg/m³)", "example": 50, "type": "number" },
            "timestamp_local": {
              "description": "Timestamp in local time",
              "example": "2019-03-04T12:00:00",
              "type": "string"
            },
            "timestamp_utc": { "description": "Timestamp UTC", "example": "2019-03-04T17:00:00", "type": "string" },
            "ts": { "description": "Unix Timestamp", "example": "1551718800", "type": "number" }
          },
          "type": "object"
        },
        "AQHourly": {
          "properties": {
            "city_name": { "description": "City Name", "example": "Raleigh", "type": "string" },
            "country_code": { "description": "Country Abbreviation", "example": "US", "type": "string" },
            "data": { "items": { "$ref": "#/definitions/AQHour" }, "type": "array" },
            "lat": { "description": "Latitude", "example": "38.25", "type": "string" },
            "lon": { "description": "Longitude", "example": "-78.00", "type": "string" },
            "state_code": { "description": "State Abbreviation", "example": "NC", "type": "string" },
            "timezone": { "description": "Local IANA time zone", "example": "America/New_York", "type": "string" }
          },
          "type": "object"
        },
        "AlertRegionGroup": { "description": "List of impacted regions", "example": "St Louis, MO", "type": "string" },
        "CurrentObs": {
          "properties": {
            "app_temp": { "description": "Apparent temperature - Default (C)", "example": 14.85, "type": "number" },
            "aqi": { "description": "Air quality index (US EPA standard 0 to +500)", "example": 50, "type": "number" },
            "city_name": { "description": "City name (closest)", "example": "Raleigh", "type": "string" },
            "clouds": { "description": "Cloud cover (%)", "example": 42, "type": "integer" },
            "country_code": { "description": "Country abbreviation", "example": "US", "type": "string" },
            "datetime": {
              "description": "Cycle Hour (UTC) of observation",
              "example": "2017-03-15:13",
              "type": "string"
            },
            "dewpt": { "description": "Dew point temperature - default (C)", "example": 12, "type": "number" },
            "dhi": { "description": "Diffuse horizontal irradiance (W/m^2)", "example": 450.4, "type": "number" },
            "dni": { "description": "Direct normal irradiance (W/m^2)", "example": 450.4, "type": "number" },
            "elev_angle": { "description": "Current solar elevation angle (Degrees)", "example": 37, "type": "number" },
            "ghi": { "description": "Global horizontal irradiance (W/m^2)", "example": 450.4, "type": "number" },
            "hour_angle": { "description": "Current solar hour angle (Degrees)", "example": 45, "type": "number" },
            "lat": { "description": "Latitude", "example": 38, "type": "number" },
            "lon": { "description": "Longitude", "example": -78.25, "type": "number" },
            "ob_time": {
              "description": "Full time (UTC) of observation (YYYY-MM-DD HH:MM)",
              "example": "2017-03-15 13:11",
              "type": "string"
            },
            "pod": { "description": "Part of the day (d = day, n = night)", "type": "string" },
            "precip": { "description": "Precipitation in last hour - Default (mm)", "example": 2, "type": "number" },
            "pres": { "description": "Pressure (mb)", "example": 1010, "type": "number" },
            "rh": { "description": "Relative humidity (%)", "example": 75, "type": "integer" },
            "slp": { "description": "Mean sea level pressure in millibars (mb)", "example": 1013.12, "type": "number" },
            "snow": { "description": "Snowfall in last hour - Default (mm)", "example": 10, "type": "number" },
            "solar_rad": { "description": "Estimated solar radiation (W/m^2)", "example": 300.4, "type": "number" },
            "state_code": { "description": "State abbreviation", "example": "NC", "type": "string" },
            "station": { "description": "Source Station ID", "example": "KRDU", "type": "string" },
            "sunrise": { "description": "Time (UTC) of Sunrise (HH:MM)", "example": "06:22", "type": "string" },
            "sunset": { "description": "Time (UTC) of Sunset (HH:MM)", "example": 1174, "type": "string" },
            "temp": { "description": "Temperature - Default (C)", "example": 13.85, "type": "number" },
            "timezone": { "description": "Local IANA time zone", "example": "America/New_York", "type": "string" },
            "ts": { "description": "Unix Timestamp", "example": 1490990400, "type": "number" },
            "uv": { "description": "UV Index", "example": 6.5, "type": "number" },
            "vis": { "description": "Visibility - default (M)", "example": 10000, "type": "integer" },
            "weather": {
              "properties": {
                "code": { "description": "Weather Condition code", "example": "802", "type": "string" },
                "description": {
                  "description": "Weather Condition description",
                  "example": "Broken clouds",
                  "type": "string"
                },
                "icon": { "description": "Icon code for forecast image display", "example": "c02", "type": "string" }
              },
              "type": "object"
            },
            "wind_cdir": { "description": "Cardinal wind direction", "example": "ENE", "type": "string" },
            "wind_cdir_full": {
              "description": "Cardinal wind direction (text)",
              "example": "East-North-East",
              "type": "string"
            },
            "wind_dir": { "description": "Wind direction (degrees)", "example": 125, "type": "integer" },
            "wind_speed": { "description": "Wind speed - Default (m/s)", "example": 5.85, "type": "number" }
          },
          "type": "object"
        },
        "CurrentObsGroup": {
          "properties": {
            "count": { "description": "Count of found observations", "example": "1", "type": "integer" },
            "data": { "items": { "$ref": "#/definitions/CurrentObs" }, "type": "array" }
          },
          "type": "object"
        },
        "EnergyObs": {
          "properties": {
            "cdd": { "description": "Cooling degree days", "example": 10, "type": "number" },
            "city_name": { "description": "City name (closest)", "example": "Raleigh", "type": "string" },
            "clouds": { "description": "Average cloud cover (%)", "example": 42, "type": "integer" },
            "country_code": { "description": "Country abbreviation", "example": "US", "type": "string" },
            "dewpt": { "description": "Average dew point temperature - Default (C)", "example": 12, "type": "number" },
            "hdd": { "description": "Heating degree days", "example": 120, "type": "number" },
            "lat": { "description": "Latitude", "example": "38.00", "type": "string" },
            "lon": { "description": "Longitude", "example": "-78.25", "type": "string" },
            "precip": { "description": "Total precipitation in period - Default (mm)", "example": 2, "type": "number" },
            "rh": { "description": "Average Relative humidity (%)", "example": 75, "type": "integer" },
            "snow": { "description": "Total snowfall in period - Default (mm)", "example": 10, "type": "number" },
            "state_code": { "description": "State abbreviation", "example": "NC", "type": "string" },
            "station_id": { "description": "Source Station ID", "example": "12345-999999", "type": "string" },
            "sun_hours": {
              "description": "Average number of daily sun hours - # hours where Solar GHI > 1000 W/m^2",
              "example": 4.5,
              "type": "number"
            },
            "t_dhi": {
              "description": "Total diffuse horizontal solar irradiance (W/m^2)",
              "example": 450,
              "type": "number"
            },
            "t_dni": {
              "description": "Total direct normal solar irradiance (W/m^2)",
              "example": 1200,
              "type": "number"
            },
            "t_ghi": {
              "description": "Total global horizontal solar irradiance (W/m^2)",
              "example": 3000,
              "type": "number"
            },
            "temp": { "description": "Average temperature - Default (C)", "example": 13.85, "type": "number" },
            "timezone": { "description": "Local IANA time zone", "example": "America/New_York", "type": "string" },
            "wind_dir": { "description": "Average wind direction (Degrees)", "example": 125, "type": "integer" },
            "wind_speed": { "description": "Average wind speed - Default (m/s)", "example": 5.85, "type": "number" }
          },
          "type": "object"
        },
        "EnergyObsGroup": {
          "properties": {
            "count": { "description": "Count of found observations", "example": "1", "type": "integer" },
            "data": { "items": { "$ref": "#/definitions/EnergyObs" }, "type": "array" },
            "end_date": { "description": "End Date", "example": "2017-01-30", "type": "integer" },
            "start_date": { "description": "Start Date", "example": "2017-01-01", "type": "integer" }
          },
          "type": "object"
        },
        "EnergyObsGroupForecast": {
          "properties": {
            "city_name": { "description": "City name (closest)", "example": "Raleigh", "type": "string" },
            "country_code": { "description": "Country abbreviation", "example": "US", "type": "string" },
            "data": { "items": { "$ref": "#/definitions/EnergyObsSeries" }, "type": "array" },
            "lat": { "description": "Latitude", "example": "38.00", "type": "string" },
            "lon": { "description": "Longitude", "example": "-78.25", "type": "string" },
            "state_code": { "description": "State abbreviation", "example": "NC", "type": "string" },
            "threshold_units": { "description": "Degree day threshold units", "example": "C", "type": "string" },
            "threshold_value": { "description": "Degree day threshold", "example": "18", "type": "string" },
            "timezone": { "description": "Local IANA time zone", "example": "America/New_York", "type": "string" }
          },
          "type": "object"
        },
        "EnergyObsSeries": {
          "properties": {
            "cdd": { "description": "Cooling degree days", "example": 10, "type": "number" },
            "clouds": { "description": "Average cloud cover (%)", "example": 42, "type": "integer" },
            "date": { "description": "Date", "example": "2018-06-01", "type": "string" },
            "dewpt": { "description": "Average dew point temperature - Default (C)", "example": 12, "type": "number" },
            "hdd": { "description": "Heating degree days", "example": 120, "type": "number" },
            "precip": { "description": "Total precipitation in period - Default (mm)", "example": 2, "type": "number" },
            "rh": { "description": "Average Relative humidity (%)", "example": 75, "type": "integer" },
            "snow": { "description": "Total snowfall in period - Default (mm)", "example": 10, "type": "number" },
            "sun_hours": {
              "description": "Average number of daily sun hours - # hours where Solar GHI > 1000 W/m^2",
              "example": 4.5,
              "type": "number"
            },
            "t_dhi": {
              "description": "Total diffuse horizontal solar irradiance (W/m^2)",
              "example": 450,
              "type": "number"
            },
            "t_dni": {
              "description": "Total direct normal solar irradiance (W/m^2)",
              "example": 1200,
              "type": "number"
            },
            "t_ghi": {
              "description": "Total global horizontal solar irradiance (W/m^2)",
              "example": 3000,
              "type": "number"
            },
            "temp": { "description": "Average temperature - Default (C)", "example": 13.85, "type": "number" },
            "wind_dir": { "description": "Average wind direction (Degrees)", "example": 125, "type": "integer" },
            "wind_speed": { "description": "Average wind speed - Default (m/s)", "example": 5.85, "type": "number" }
          },
          "type": "object"
        },
        "Error": {
          "properties": { "code": { "format": "int32", "type": "integer" }, "message": { "type": "string" } },
          "type": "object"
        },
        "Forecast": {
          "properties": {
            "app_max_temp": {
              "description": "Apparent Maximum daily Temperature - default (C)",
              "example": 4,
              "type": "number"
            },
            "app_min_temp": {
              "description": "Apparent Minimum daily Temperature - default (C)",
              "example": -2,
              "type": "number"
            },
            "clouds": { "description": "Cloud cover as a percentage (%)", "example": 100, "type": "integer" },
            "datetime": {
              "description": "Date in format \"YYYY-MM-DD:HH\". All datetime is in (UTC)",
              "example": "2019-03-04:17",
              "type": "string"
            },
            "dewpt": { "description": "Dewpoint (Average) - default (C)", "example": 1, "type": "number" },
            "max_dhi": {
              "description": "[Deprecated] Max direct component of solar insolation (W/m^2)",
              "example": "655",
              "type": "number"
            },
            "max_temp": { "description": "Maximum daily Temperature - default (C)", "example": 1.5, "type": "number" },
            "min_temp": {
              "description": "Minimum daily Temperature - default (C)",
              "example": -1.23,
              "type": "number"
            },
            "moon_phase": { "description": "Moon phase", "example": 0.87, "type": "number" },
            "moonrise_ts": { "description": "Moonrise unix timestamp", "example": 1530331260, "type": "integer" },
            "moonset_ts": { "description": "Moonset unix timestamp", "example": 1530331260, "type": "integer" },
            "pod": { "description": "Part of the day (d = day, n = night)", "example": "n", "type": "string" },
            "pop": { "description": "Chance of Precipitation as a percentage (%)", "example": 75, "type": "number" },
            "precip": {
              "description": "Accumulated precipitation since last forecast point - default (mm)",
              "example": 1.1,
              "type": "number"
            },
            "pres": { "description": "Pressure (mb)", "example": 1005, "type": "number" },
            "rh": { "description": "Relative Humidity as a percentage (%)", "example": 95, "type": "integer" },
            "slp": { "description": "Mean Sea level pressure (mb)", "example": 1012.89, "type": "number" },
            "snow": {
              "description": "Accumulated snowfall since last forecast point - default (mm)",
              "example": 10.45,
              "type": "number"
            },
            "snow_depth": { "description": "Snow Depth - default (mm)", "example": 45, "type": "number" },
            "sunrise_ts": { "description": "Sunrise unix timestamp", "example": 1530331260, "type": "integer" },
            "sunset_ts": { "description": "Sunset unix timestamp", "example": 1530331260, "type": "integer" },
            "temp": { "description": "Temperature (Average) - default (C)", "example": 1, "type": "number" },
            "timestamp_local": {
              "description": "Timestamp in local time",
              "example": "2019-03-04T12:00:00",
              "type": "string"
            },
            "timestamp_utc": { "description": "Timestamp UTC", "example": "2019-03-04T17:00:00", "type": "string" },
            "ts": { "description": "Unix Timestamp", "example": "1551718800", "type": "number" },
            "uv": { "description": "UV Index", "example": 6.5, "type": "number" },
            "vis": { "description": "Average Visibility default (KM)", "example": 3, "type": "number" },
            "weather": {
              "properties": {
                "code": { "description": "Weather Condition code", "example": "601", "type": "string" },
                "description": { "description": "Weather Condition description", "example": "Snow", "type": "string" },
                "icon": { "description": "Icon code for forecast image display", "example": "s02n", "type": "string" }
              },
              "type": "object"
            },
            "wind_cdir": { "description": "Cardinal wind direction", "example": "ENE", "type": "string" },
            "wind_cdir_full": {
              "description": "Cardinal wind direction (text)",
              "example": "East-North-East",
              "type": "string"
            },
            "wind_dir": { "description": "Wind direction", "example": 105, "type": "integer" },
            "wind_spd": { "description": "Wind Speed (default m/s)", "example": 13.85, "type": "number" }
          },
          "type": "object"
        },
        "ForecastDay": {
          "properties": {
            "city_name": { "description": "City Name", "example": "Raleigh", "type": "string" },
            "country_code": { "description": "Country Abbreviation", "example": "US", "type": "string" },
            "data": { "items": { "$ref": "#/definitions/Forecast" }, "type": "array" },
            "lat": { "description": "Latitude", "example": "38.25", "type": "string" },
            "lon": { "description": "Longitude", "example": "-78.00", "type": "string" },
            "state_code": { "description": "State Abbreviation", "example": "NC", "type": "string" },
            "timezone": { "description": "Local IANA time zone", "example": "America/New_York", "type": "string" }
          },
          "type": "object"
        },
        "ForecastHour": {
          "properties": {
            "app_temp": { "description": "Apparent Temperature - Default (C)", "example": 4.5, "type": "number" },
            "clouds": { "description": "Cloud cover as a percentage (%)", "example": 100, "type": "integer" },
            "datetime": {
              "description": "Date in format \"YYYY-MM-DD:HH\". All datetime is in (UTC)",
              "example": "2019-03-04:17",
              "type": "string"
            },
            "dewpt": { "description": "Dewpoint - Default (C)", "example": -4, "type": "number" },
            "dhi": { "description": "Diffuse normal solar irradiance (W/m^2)", "example": 200, "type": "number" },
            "dni": { "description": "Direct normal solar irradiance (W/m^2)", "example": 400, "type": "number" },
            "ghi": { "description": "Global horizontal solar irradiance (W/m^2)", "example": 1000, "type": "number" },
            "pod": { "description": "Part of day (d = day, n = night)", "example": "d", "type": "string" },
            "pop": { "description": "Chance of Precipitation as a percentage (%)", "example": 75, "type": "number" },
            "precip": {
              "description": "Accumulated precipitation since last forecast point. Default (mm)",
              "example": 1.1,
              "type": "number"
            },
            "pres": { "description": "Pressure (mb)", "example": 1005, "type": "number" },
            "rh": { "description": "Relative Humidity as a percentage (%)", "example": 95, "type": "integer" },
            "slp": { "description": "Mean Sea level pressure (mb)", "example": 1012.89, "type": "number" },
            "snow": {
              "description": "Accumulated snowfall since last forecast point - Default (mm)",
              "example": 10.45,
              "type": "number"
            },
            "snow6h": {
              "description": "6 hour accumulated snowfall. Default (mm)",
              "example": 140.87,
              "type": "number"
            },
            "snow_depth": { "description": "Snow depth - Default (mm)", "example": 45, "type": "number" },
            "solar_rad": { "description": "Estimated solar radiation (W/m^2)", "example": 300, "type": "number" },
            "temp": { "description": "Temperature - Default (C)", "example": -1.5, "type": "number" },
            "timestamp_local": {
              "description": "Timestamp in local time",
              "example": "2019-03-04T12:00:00",
              "type": "string"
            },
            "timestamp_utc": { "description": "Timestamp UTC", "example": "2019-03-04T17:00:00", "type": "string" },
            "ts": { "description": "Unix Timestamp", "example": "1551718800", "type": "number" },
            "uv": { "description": "UV Index", "example": 6.5, "type": "number" },
            "vis": { "description": "Visibility - Default (KM)", "example": 1, "type": "number" },
            "weather": {
              "properties": {
                "code": { "description": "Weather Condition code", "example": "601", "type": "string" },
                "description": { "description": "Weather Condition description", "example": "Snow", "type": "string" },
                "icon": { "description": "Icon code for forecast image display", "example": "s02d", "type": "string" }
              },
              "type": "object"
            },
            "wind_cdir": { "description": "Cardinal wind direction", "example": "ENE", "type": "string" },
            "wind_cdir_full": {
              "description": "Cardinal wind direction (text)",
              "example": "East-North-East",
              "type": "string"
            },
            "wind_dir": { "description": "Wind direction", "example": 105, "type": "integer" },
            "wind_spd": { "description": "Wind Speed - Default (m/s)", "example": 13.85, "type": "number" }
          },
          "type": "object"
        },
        "ForecastHourly": {
          "properties": {
            "city_name": { "description": "City Name", "example": "Raleigh", "type": "string" },
            "country_code": { "description": "Country Abbreviation", "example": "US", "type": "string" },
            "data": { "items": { "$ref": "#/definitions/ForecastHour" }, "type": "array" },
            "lat": { "description": "Latitude", "example": "38.25", "type": "string" },
            "lon": { "description": "Longitude", "example": "-78.00", "type": "string" },
            "state_code": { "description": "State Abbreviation", "example": "NC", "type": "string" },
            "timezone": { "description": "Local IANA time zone", "example": "America/New_York", "type": "string" }
          },
          "type": "object"
        },
        "GeoIPObj": {
          "properties": {
            "area_code": { "description": "Area Code", "example": "919", "type": "string" },
            "charset": { "description": "Character encoding", "example": "1", "type": "string" },
            "city": { "description": "City Name", "example": "Raleigh", "type": "string" },
            "continent_code": { "description": "Country Abbreviation", "example": "US", "type": "string" },
            "country_code": { "description": "Country Code (Short)", "example": "US", "type": "string" },
            "country_code3": { "description": "Country Code (Long)", "example": "USA", "type": "string" },
            "dma_code": { "description": "Longitude", "example": "560", "type": "string" },
            "ip": { "description": "IP Address", "example": "192.168.1.102", "type": "string" },
            "latitude": { "description": "State Abbreviation", "example": "35.811", "type": "string" },
            "longitude": { "description": "City Name", "example": "-78.64", "type": "string" },
            "metro_code": { "description": "Longitude", "example": "560", "type": "string" },
            "offset": { "description": "UTC Offset (deprecated)", "example": "-4", "type": "string" },
            "organization": {
              "description": "Organization Name",
              "example": "AS11426 Time Warner Cable Internet LLC",
              "type": "string"
            },
            "postal_code": { "description": "Postal Code", "example": "27601", "type": "string" },
            "region": { "description": "Latitude", "example": "NC", "type": "string" },
            "timezone": { "description": "Local IANA time zone", "example": "America/New_York", "type": "string" }
          },
          "type": "object"
        },
        "History": {
          "properties": {
            "city_name": { "description": "City name (Closest)", "example": "Seattle", "type": "string" },
            "country_code": { "description": "Country abbreviation", "example": "US", "type": "string" },
            "data": { "items": { "$ref": "#/definitions/HistoryObj" }, "type": "array" },
            "lat": { "description": "Latitude", "example": "47.61", "type": "string" },
            "lon": { "description": "Longitude", "example": "-122.33", "type": "string" },
            "sources": {
              "description": "Weather stations used in response",
              "items": { "example": "12345-89083", "type": "string" },
              "type": "array"
            },
            "state_code": { "description": "State abbreviation", "example": "WA", "type": "string" },
            "timezone": { "description": "Local IANA time zone", "example": "America/New_York", "type": "string" }
          },
          "type": "object"
        },
        "HistoryDay": {
          "properties": {
            "city_name": { "description": "City name (Closest)", "example": "Seattle", "type": "string" },
            "country_code": { "description": "Country abbreviation", "example": "US", "type": "string" },
            "data": { "items": { "$ref": "#/definitions/HistoryDayObj" }, "type": "array" },
            "lat": { "description": "Latitude", "example": "47.61", "type": "string" },
            "lon": { "description": "Longitude", "example": "-122.33", "type": "string" },
            "sources": {
              "description": "Weather stations used in response",
              "items": { "example": "12345-89083", "type": "string" },
              "type": "array"
            },
            "state_code": { "description": "State abbreviation", "example": "WA", "type": "string" },
            "timezone": { "description": "Local IANA time zone", "example": "America/New_York", "type": "string" }
          },
          "type": "object"
        },
        "HistoryDayObj": {
          "properties": {
            "datetime": {
              "description": "Date in format \"YYYY-MM-DD\". All datetime is in (UTC)",
              "example": "2015-01-03",
              "type": "string"
            },
            "dewpt": { "description": "Average dewpoint - Default (C)", "example": -1.5, "type": "number" },
            "dhi": {
              "description": "Average hourly diffuse horizontal solar irradiance (W/m^2)",
              "example": 125,
              "type": "integer"
            },
            "dni": {
              "description": "Average direct normal solar irradiance (W/m^2)",
              "example": 125,
              "type": "integer"
            },
            "ghi": {
              "description": "Average hourly global horizontal solar irradiance (W/m^2)",
              "example": 125,
              "type": "integer"
            },
            "max_temp": { "description": "Max temperature - Default (C)", "example": 1.5, "type": "number" },
            "max_temp_ts": {
              "description": "Time of max memperature - Unix Timestamp",
              "example": 1501970816,
              "type": "number"
            },
            "max_uv": { "description": "Max UV Index (1-11+)", "example": 6, "type": "number" },
            "max_wind_dir": {
              "description": "Direction of wind at time of max 2min wind (degrees)",
              "example": 325,
              "type": "integer"
            },
            "max_wind_spd": {
              "description": "Max 2min Wind Speed - default (m/s)",
              "example": 19.98,
              "type": "number"
            },
            "max_wind_spd_ts": {
              "description": "Time of max 2min wind - unix timestamp",
              "example": 1501970516,
              "type": "number"
            },
            "min_temp": { "description": "Min temperature - Default (C)", "example": 11.7, "type": "number" },
            "min_temp_ts": {
              "description": "Time of max temperature - unix timestamp",
              "example": 1501970516,
              "type": "number"
            },
            "precip": {
              "description": "Liquid equivalent precipitation - default (mm)",
              "example": 3,
              "type": "number"
            },
            "precip_gpm": {
              "description": "Satellite estimated liquid equivalent precipitation - default (mm)",
              "example": 3,
              "type": "number"
            },
            "pres": { "description": "Average pressure (mb)", "example": 885.1, "type": "number" },
            "rh": { "description": "Average relative humidity as a percentage (%)", "example": 85, "type": "integer" },
            "slp": { "description": "Average sea level pressure (mb)", "example": 1020.1, "type": "number" },
            "snow": { "description": "Snowfall - default (mm)", "example": 30, "type": "number" },
            "snow_depth": { "description": "Snow Depth - default (mm)", "example": 60, "type": "number" },
            "t_dhi": {
              "description": "Total diffuse horizontal solar irradiance (W/m^2)",
              "example": 4500,
              "type": "integer"
            },
            "t_dni": {
              "description": "Total direct normal solar irradiance (W/m^2)",
              "example": 4500,
              "type": "integer"
            },
            "t_ghi": {
              "description": "Total global horizontal solar irradiance (W/m^2)",
              "example": 4500,
              "type": "integer"
            },
            "temp": { "description": "Average temperature - Default (C)", "example": 1, "type": "number" },
            "ts": {
              "description": "Unix timestamp of datetime (Midnight UTC)",
              "example": 1501970516,
              "type": "integer"
            },
            "wind_dir": { "description": "Average wind direction (degrees)", "example": 325, "type": "integer" },
            "wind_gust_spd": { "description": "Wind gust speed - default (m/s)", "example": 40.98, "type": "number" },
            "wind_spd": { "description": "Average wind speed - default (m/s)", "example": 14.98, "type": "number" }
          },
          "type": "object"
        },
        "HistoryObj": {
          "properties": {
            "datetime": {
              "description": "Date in format \"YYYY-MM-DD:HH\". All datetime is in (UTC)",
              "example": "2019-03-04:17",
              "type": "string"
            },
            "dewpt": { "description": "Dew point (Default Celcius)", "example": -1.5, "type": "integer" },
            "dhi": { "description": "Diffuse normal solar irradiance (W/m^2)", "example": 200, "type": "number" },
            "dni": { "description": "Direct normal solar irradiance (W/m^2)", "example": 400, "type": "number" },
            "elev_angle": { "description": "Solar elevation angle (Degrees)", "example": 27.5, "type": "number" },
            "ghi": { "description": "Global horizontal solar irradiance (W/m^2)", "example": 1500, "type": "number" },
            "h_angle": { "description": "Solar hour angle (Degrees)", "example": 15, "type": "number" },
            "pod": { "description": "Part of the day (d = day, n = night)", "example": "n", "type": "string" },
            "precip": {
              "description": "Liquid equivalent precipitation - Default (mm)",
              "example": 3,
              "type": "number"
            },
            "pres": { "description": "Pressure (mb)", "example": 845, "type": "number" },
            "rh": { "description": "Relative Humidity as a percentage (%)", "example": 85, "type": "integer" },
            "slp": { "description": "Sea level pressure (mb)", "example": 1020.1, "type": "number" },
            "snow": { "description": "Snowfall - Default (mm)", "example": 30, "type": "number" },
            "snow6h": { "description": "Snowfall in last 6 hours - Default (mm)", "example": 60, "type": "number" },
            "solar_rad": { "description": "Estimated solar radiation (W/m^2)", "example": 300, "type": "number" },
            "temp": { "description": "Temperature (Default Celcius)", "example": -1.2, "type": "number" },
            "timestamp_local": {
              "description": "Timestamp in local time",
              "example": "2019-03-04T12:00:00",
              "type": "string"
            },
            "timestamp_utc": { "description": "Timestamp UTC", "example": "2019-03-04T17:00:00", "type": "string" },
            "ts": { "description": "Unix Timestamp", "example": "1551718800", "type": "number" },
            "uv": { "description": "UV Index (1-11+)", "example": 4, "type": "number" },
            "weather": {
              "properties": {
                "code": { "description": "Weather Condition code", "example": "601", "type": "string" },
                "description": {
                  "description": "Weather Condition description",
                  "example": "Light Snow",
                  "type": "string"
                },
                "icon": { "description": "Icon code for forecast image display", "example": "s01n", "type": "string" }
              },
              "type": "object"
            },
            "wind_dir": { "description": "Wind direction (Degrees)", "example": 325, "type": "integer" },
            "wind_spd": { "description": "Wind Speed (Default m/s)", "example": 14.7, "type": "number" }
          },
          "type": "object"
        },
        "WeatherAlert": {
          "properties": {
            "alerts": { "items": { "$ref": "#/definitions/WeatherAlertGroup" }, "type": "array" },
            "lat": { "description": "Latitude", "example": 38, "type": "number" },
            "lon": { "description": "Longitude", "example": -78.25, "type": "number" }
          },
          "type": "object"
        },
        "WeatherAlertGroup": {
          "properties": {
            "alerts": { "items": { "$ref": "#/definitions/AlertRegionGroup" }, "type": "array" },
            "description": {
              "description": "Full description of weather alert",
              "example": "Mississippi River at Chester\n\n.This Flood Warning is a result of 1-2 inches of rainfall across\nthe basin earlier this week...\nThe Flood Warning continues for\nthe Mississippi River at Chester\n* until Tuesday morning.\n* At  8:30 PM Friday the stage was 26.8 feet.\n* Flood stage is 27.0 feet.\n* Minor flooding is forecast.\n* The river is forecast to rise above flood stage by tonight and to\ncrest near 29.0 feet by Saturday evening. The river is forecast to\nfall below flood stage by Monday morning.\n* Impact:  At 28.0 feet...Unleveed islands near Chester and the prison\nfarm floods.\n* Impact:  At 27.0 feet...Flood Stage.  Unprotected farmland on right\nbank begins to flood.",
              "type": "string"
            },
            "effective_local": {
              "description": "Issued time local",
              "example": "2019-02-08T21:51:00",
              "type": "string"
            },
            "effective_utc": { "description": "Issued time UTC", "example": "2019-02-09T02:51:00", "type": "string" },
            "expires_local": {
              "description": "Expiration time local",
              "example": "2019-02-09T21:51:00",
              "type": "string"
            },
            "expires_utc": { "description": "Expiration time UTC", "example": "2019-02-10T02:51:00", "type": "string" },
            "severity": {
              "description": "Severity of weather. (Advisory | Watch | Warning)",
              "example": "Warning",
              "type": "string"
            },
            "title": {
              "description": "Brief description of weather alert",
              "example": "Flood Warning issued February 8 at 8:51PM CST expiring February 12 at 8:24AM CST by NWS St Louis MO",
              "type": "string"
            },
            "uri": {
              "description": "URI to weather alert",
              "example": "https://api.weather.gov/alerts/NWS-IDP-PROD-3361975-2942026",
              "type": "string"
            }
          },
          "type": "object"
        }
      }
    }
  }
}
