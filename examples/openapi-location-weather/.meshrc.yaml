sources:
  - name: Cities
    handler:
      openapi:
        source: https://raw.githubusercontent.com/APIs-guru/openapi-directory/main/APIs/mashape.com/geodb/1.0.0/swagger.yaml
        ignoreErrorResponses: true
        operationHeaders:
          'X-RapidAPI-Key': '{env.GEODB_API_KEY}'
    transforms:
      - rename:
          - from:
              type: Error
            to:
              type: CitiesError

  - name: Weather
    handler:
      openapi:
        source: https://www.weatherbit.io/static/swagger.json
        ignoreErrorResponses: true
        queryParams:
          key: '{env.WEATHERBIT_API_KEY}'
        operationHeaders:
          'X-RapidAPI-Key': '{env.WEATHERBIT_API_KEY}'
    transforms:
      - rename:
          - from:
              type: Error
            to:
              type: WeatherError

plugins:
  - responseCache:
      ttlPerCoordinate:
        # Geo data doesn't change frequently, so we can cache it forever
        - coordinate: Query.*
          ttl: 0
        # Forcast data might change, so we can cache it for 1 hour only
        - coordinate: PopulatedPlaceSummary.dailyForecast
          ttl: 3600
        - coordinate: PopulatedPlaceSummary.todayForecast
          ttl: 3600

additionalTypeDefs: |
  extend type PopulatedPlaceSummary {
    dailyForecast: [Forecast] @resolveTo(
      requiredSelectionSet: """
       {
          latitude
          longitude
        }
      """,
      sourceName: "Weather",
      sourceTypeName: "Query",
      sourceFieldName: "forecast_daily",
      sourceArgs: {
        lat: "{root.latitude}",
        lon: "{root.longitude}",
      },
      result: "data"
    )
    todayForecast: Forecast @resolveTo(
      requiredSelectionSet: """
       {
          latitude
          longitude
        }
      """,
      sourceName: "Weather",
      sourceTypeName: "Query",
      sourceFieldName: "forecast_daily",
      sourceArgs: {
        lat: "{root.latitude}",
        lon: "{root.longitude}",
        days: 1
      },
      result: "data[0]"
    )
  }

documents:
  - ./example-query.graphql
