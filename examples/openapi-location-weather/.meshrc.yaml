sources:
  - name: Cities
    handler:
      openapi:
        source: https://api.apis.guru/v2/specs/mashape.com/geodb/1.0.0/swagger.json
        operationHeaders:
          'X-RapidAPI-Key': f93d3b393dmsh13fea7cb6981b2ep1dba0ajsn654ffeb48c26
    transforms:
      - rename:
          - from:
              type: Error
            to:
              type: CitiesError

  - name: Weather
    handler:
      openapi:
        source: https://api.apis.guru/v2/specs/weatherbit.io/2.0.0/swagger.json
    transforms:
      - rename:
          - from:
              type: Error
            to:
              type: WeatherError

plugins:
  - responseCache:
      ttlPerCoordinate:
        # Geo data doesn't change frequently, so we can cache it forever
        - coordinate: Query.*
          ttl: 0
        # Forcast data might change, so we can cache it for 1 hour only
        - coordinate: PopulatedPlaceSummary.dailyForecast
          ttl: 3600
        - coordinate: PopulatedPlaceSummary.todayForecast
          ttl: 3600

additionalTypeDefs: |
  extend type PopulatedPlaceSummary {
    dailyForecast: [Forecast]
    todayForecast: Forecast
  }
additionalResolvers:
  - targetTypeName: PopulatedPlaceSummary
    targetFieldName: dailyForecast
    requiredSelectionSet: |
      {
        latitude
        longitude
      }
    sourceName: Weather
    sourceTypeName: Query
    sourceFieldName: getForecastDailyLatequalToLatLonLon
    sourceArgs:
      lat: '{root.latitude}'
      lon: '{root.longitude}'
      key: 971a693de7ff47a89127664547988be5
    result: data
  - targetTypeName: PopulatedPlaceSummary
    targetFieldName: todayForecast
    requiredSelectionSet: |
      {
        latitude
        longitude
      }
    sourceName: Weather
    sourceTypeName: Query
    sourceFieldName: getForecastDailyLatequalToLatLonLon
    sourceArgs:
      lat: '{root.latitude}'
      lon: '{root.longitude}'
      days: 1
      key: 971a693de7ff47a89127664547988be5
    result: data[0]

documents:
  - ./example-query.graphql

serve:
  customServerHandler: ./customServerHandler.ts
