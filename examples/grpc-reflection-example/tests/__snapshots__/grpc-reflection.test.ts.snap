// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`gRPC Reflection Example should generate correct schema: grpc-schema 1`] = `
"schema @transport(subgraph: "grpc", kind: "grpc", location: "localhost:50052", options: {requestTimeout: 200000}) {
  query: Query
}

directive @grpcMethod(subgraph: String, rootJsonName: String, objPath: String, methodName: String, responseStream: Boolean) on FIELD_DEFINITION

directive @grpcConnectivityState(subgraph: String, rootJsonName: String, objPath: String) on FIELD_DEFINITION

directive @grpcRootJson(subgraph: String, name: String, rootJson: ObjMap, loadOptions: ObjMap) repeatable on OBJECT

"""
Directs the executor to stream plural fields when the \`if\` argument is true or undefined.
"""
directive @stream(
  """Stream when true or undefined."""
  if: Boolean! = true
  """Unique name"""
  label: String
  """Number of items to return immediately"""
  initialCount: Int = 0
) on FIELD

type Query @grpcRootJson(subgraph: "grpc", name: "Root0", rootJson: "{\\"nested\\":{\\"helloworld\\":{\\"nested\\":{\\"GreetingRequest\\":{\\"fields\\":{\\"name\\":{\\"type\\":\\"string\\",\\"id\\":1}},\\"comment\\":null},\\"GreetingResult\\":{\\"fields\\":{\\"greeting\\":{\\"type\\":\\"string\\",\\"id\\":1}},\\"comment\\":null},\\"GreetingService\\":{\\"methods\\":{\\"GetGreeting\\":{\\"requestType\\":\\".helloworld.GreetingRequest\\",\\"responseType\\":\\".helloworld.GreetingResult\\"}},\\"comment\\":null}}}}}") @grpcRootJson(subgraph: "grpc", name: "Root1", rootJson: "{\\"nested\\":{\\"artnet\\":{\\"nested\\":{\\"coredata\\":{\\"nested\\":{\\"playground\\":{\\"nested\\":{\\"EchoInputRequest\\":{\\"fields\\":{\\"price\\":{\\"type\\":\\"PlayGroundPriceFilter\\",\\"id\\":3}},\\"comment\\":null},\\"EchoUserInfoRequest\\":{\\"fields\\":{},\\"comment\\":null},\\"EchoUserInfoResponse\\":{\\"fields\\":{\\"userInfo\\":{\\"type\\":\\"string\\",\\"id\\":1}},\\"comment\\":null},\\"PlayGroundPriceFilter\\":{\\"fields\\":{\\"range\\":{\\"type\\":\\"PlayGroundPriceRange\\",\\"id\\":1}},\\"comment\\":null},\\"PlayGroundPriceRange\\":{\\"fields\\":{\\"valueDouble\\":{\\"type\\":\\"google.protobuf.DoubleValue\\",\\"id\\":1},\\"valueFloat\\":{\\"type\\":\\"google.protobuf.FloatValue\\",\\"id\\":2},\\"valueLong\\":{\\"type\\":\\"google.protobuf.Int64Value\\",\\"id\\":3},\\"valueInt\\":{\\"type\\":\\"google.protobuf.Int64Value\\",\\"id\\":4},\\"valueLongNotnull\\":{\\"type\\":\\"int64\\",\\"id\\":5}},\\"comment\\":null},\\"SnailMailRequest\\":{\\"fields\\":{\\"allowCancellation\\":{\\"type\\":\\"bool\\",\\"id\\":1},\\"fakeDataLength\\":{\\"type\\":\\"int32\\",\\"id\\":2},\\"waitSeconds\\":{\\"type\\":\\"int32\\",\\"id\\":3}},\\"comment\\":null},\\"SnailMailResponse\\":{\\"fields\\":{\\"fakeData\\":{\\"type\\":\\"string\\",\\"id\\":1}},\\"comment\\":null},\\"Playground\\":{\\"methods\\":{\\"GetInput\\":{\\"requestType\\":\\".artnet.coredata.playground.EchoInputRequest\\",\\"responseType\\":\\".artnet.coredata.playground.EchoInputRequest\\"},\\"GetSnailMail\\":{\\"requestType\\":\\".artnet.coredata.playground.SnailMailRequest\\",\\"responseType\\":\\".artnet.coredata.playground.SnailMailResponse\\"},\\"GetUserInfo\\":{\\"requestType\\":\\".artnet.coredata.playground.EchoUserInfoRequest\\",\\"responseType\\":\\".artnet.coredata.playground.EchoUserInfoResponse\\"}},\\"comment\\":null}}}}}}},\\"google\\":{\\"nested\\":{\\"protobuf\\":{\\"nested\\":{\\"DoubleValue\\":{\\"fields\\":{\\"value\\":{\\"type\\":\\"double\\",\\"id\\":1}},\\"comment\\":null},\\"FloatValue\\":{\\"fields\\":{\\"value\\":{\\"type\\":\\"float\\",\\"id\\":1}},\\"comment\\":null},\\"Int64Value\\":{\\"fields\\":{\\"value\\":{\\"type\\":\\"int64\\",\\"id\\":1}},\\"comment\\":null},\\"UInt64Value\\":{\\"fields\\":{\\"value\\":{\\"type\\":\\"uint64\\",\\"id\\":1}},\\"comment\\":null},\\"Int32Value\\":{\\"fields\\":{\\"value\\":{\\"type\\":\\"int32\\",\\"id\\":1}},\\"comment\\":null},\\"UInt32Value\\":{\\"fields\\":{\\"value\\":{\\"type\\":\\"uint32\\",\\"id\\":1}},\\"comment\\":null},\\"BoolValue\\":{\\"fields\\":{\\"value\\":{\\"type\\":\\"bool\\",\\"id\\":1}},\\"comment\\":null},\\"StringValue\\":{\\"fields\\":{\\"value\\":{\\"type\\":\\"string\\",\\"id\\":1}},\\"comment\\":null},\\"BytesValue\\":{\\"fields\\":{\\"value\\":{\\"type\\":\\"bytes\\",\\"id\\":1}},\\"comment\\":null}}}}}}}") {
  helloworld_GreetingService_GetGreeting(input: helloworld__GreetingRequest_Input): helloworld__GreetingResult @grpcMethod(subgraph: "grpc", rootJsonName: "Root0", objPath: "helloworld.GreetingService", methodName: "GetGreeting", responseStream: false)
  helloworld_GreetingService_connectivityState(tryToConnect: Boolean): ConnectivityState @grpcConnectivityState(subgraph: "grpc", rootJsonName: "Root0", objPath: "helloworld.GreetingService")
  artnet_coredata_playground_Playground_GetInput(input: artnet__coredata__playground__EchoInputRequest_Input): artnet__coredata__playground__EchoInputRequest @grpcMethod(subgraph: "grpc", rootJsonName: "Root1", objPath: "artnet.coredata.playground.Playground", methodName: "GetInput", responseStream: false)
  artnet_coredata_playground_Playground_GetSnailMail(input: artnet__coredata__playground__SnailMailRequest_Input): artnet__coredata__playground__SnailMailResponse @grpcMethod(subgraph: "grpc", rootJsonName: "Root1", objPath: "artnet.coredata.playground.Playground", methodName: "GetSnailMail", responseStream: false)
  artnet_coredata_playground_Playground_GetUserInfo(input: artnet__coredata__playground__EchoUserInfoRequest_Input): artnet__coredata__playground__EchoUserInfoResponse @grpcMethod(subgraph: "grpc", rootJsonName: "Root1", objPath: "artnet.coredata.playground.Playground", methodName: "GetUserInfo", responseStream: false)
  artnet_coredata_playground_Playground_connectivityState(tryToConnect: Boolean): ConnectivityState @grpcConnectivityState(subgraph: "grpc", rootJsonName: "Root1", objPath: "artnet.coredata.playground.Playground")
}

type helloworld__GreetingResult {
  greeting: String
}

input helloworld__GreetingRequest_Input {
  name: String
}

enum ConnectivityState {
  IDLE
  CONNECTING
  READY
  TRANSIENT_FAILURE
  SHUTDOWN
}

type artnet__coredata__playground__EchoInputRequest {
  price: artnet__coredata__playground__PlayGroundPriceFilter
}

type artnet__coredata__playground__PlayGroundPriceFilter {
  range: artnet__coredata__playground__PlayGroundPriceRange
}

type artnet__coredata__playground__PlayGroundPriceRange {
  valueDouble: google__protobuf__DoubleValue
  valueFloat: google__protobuf__FloatValue
  valueLong: google__protobuf__Int64Value
  valueInt: google__protobuf__Int64Value
  valueLongNotnull: BigInt
}

type google__protobuf__DoubleValue {
  value: Float
}

type google__protobuf__FloatValue {
  value: Float
}

type google__protobuf__Int64Value {
  value: BigInt
}

"""
The \`BigInt\` scalar type represents non-fractional signed whole numeric values.
"""
scalar BigInt

input artnet__coredata__playground__EchoInputRequest_Input {
  price: artnet__coredata__playground__PlayGroundPriceFilter_Input
}

input artnet__coredata__playground__PlayGroundPriceFilter_Input {
  range: artnet__coredata__playground__PlayGroundPriceRange_Input
}

input artnet__coredata__playground__PlayGroundPriceRange_Input {
  valueDouble: google__protobuf__DoubleValue_Input
  valueFloat: google__protobuf__FloatValue_Input
  valueLong: google__protobuf__Int64Value_Input
  valueInt: google__protobuf__Int64Value_Input
  valueLongNotnull: BigInt
}

input google__protobuf__DoubleValue_Input {
  value: Float
}

input google__protobuf__FloatValue_Input {
  value: Float
}

input google__protobuf__Int64Value_Input {
  value: BigInt
}

type artnet__coredata__playground__SnailMailResponse {
  fakeData: String
}

input artnet__coredata__playground__SnailMailRequest_Input {
  allowCancellation: Boolean
  fakeDataLength: Int
  waitSeconds: Int
}

type artnet__coredata__playground__EchoUserInfoResponse {
  userInfo: String
}

scalar artnet__coredata__playground__EchoUserInfoRequest_Input @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

scalar ObjMap"
`;

exports[`gRPC Reflection Example should get greeting correctly: greeting-result 1`] = `
{
  "data": {
    "helloworld_GreetingService_GetGreeting": {
      "greeting": "Hello World",
    },
  },
}
`;
