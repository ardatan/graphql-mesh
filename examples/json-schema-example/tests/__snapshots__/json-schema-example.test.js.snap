// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`JSON Schema Example should generate correct schema 1`] = `
"schema {
  query: Query
  mutation: Mutation
}

type Query @globalOptions(sourceName: "FakeAPI", endpoint: "https://not-existing-api.com/API") {
  me: User @httpOperation(path: "/me", httpMethod: GET)
  company(id: String!): Company @httpOperation(path: "/company/{args.id}", httpMethod: GET)
}

type Mutation {
  createUser(input: CreateUpdateUserInput): User @httpOperation(path: "/user", httpMethod: PUT)
  updateUser(id: String!, input: CreateUpdateUserInput): User @httpOperation(path: "/user/{args.id}", httpMethod: POST)
  deleteUser(id: String!): JSON @httpOperation(path: "/user/{args.id}", httpMethod: DELETE)
}

"Fake User Object"
type User {
  firstName: String
  lastName: String
  jobTitle: String
  companyId: String
  birthDate: Date
  foos: [Foo]
  company: Company
}

"Represents date values"
scalar Date

type Foo {
  id: String
}

"Fake Company"
type Company {
  name: String
  type: CompanyType
  employers: [User]
}

enum CompanyType {
  Public_Limited @enum(value: "\\"Public Limited\\"")
  Private_Limited @enum(value: "\\"Private Limited\\"")
  One_Person @enum(value: "\\"One Person\\"")
}

input CreateUpdateUserInput @example(value: "{\\"firstName\\":\\"John\\",\\"lastName\\":\\"Doe\\",\\"jobTitle\\":\\"Software Developer\\"}") {
  firstName: String
  lastName: String
  jobTitle: String
}

"The \`JSON\` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf)."
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

scalar ObjMap

enum HttpMethod {
  GET
  HEAD
  POST
  PUT
  DELETE
  CONNECT
  OPTIONS
  TRACE
  PATCH
}"
`;
